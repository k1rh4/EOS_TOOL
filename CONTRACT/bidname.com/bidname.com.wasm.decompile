(data (i32.const 8220) "failed to allocate pages\00onerror\00")
(data (i32.const 8256) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 8336) "eosio.token\00")
(data (i32.const 8348) "transfer\00")
(data (i32.const 8357) "\e5\bc\80\e5\a7\8b\e8\ae\a4\e8\af\81\t\00")
(data (i32.const 8371) "\e5\be\aa\e7\8e\af\t\00")
(data (i32.const 8379) "\e5\88\86\e7\bb\84\e9\94\99\e8\af\af\00")
(data (i32.const 8392) "\e5\be\aa\e7\8e\af:\00")
(data (i32.const 8400) "-\00")
(data (i32.const 8402) "\t\00")
(data (i32.const 8404) "active\00")
(data (i32.const 8411) "bid\00")
(data (i32.const 8415) "verify success\n\00")
(data (i32.const 8431) "\e5\bd\93\e5\89\8d\e8\b4\a6\e5\8f\b7\e5\bc\82\e5\b8\b8\ef\bc\8c\e4\b8\8d\e8\83\bd\e6\93\8d\e4\bd\9c\00")
(data (i32.const 8465) "commissionex\00")
(data (i32.const 8478) "\e5\86\99\e5\85\a5\e7\ab\9e\e6\8b\8d\e8\a1\a8:\00")
(data (i32.const 8495) "\n\00")
(data (i32.const 8497) "\e4\bf\ae\e6\94\b9\e7\ab\9e\e6\8b\8d\e8\a1\a8:\00")
(data (i32.const 8514) "\e8\bd\ac\e8\b4\a6\e9\94\99\e8\af\af\ef\bc\8c\e6\82\a8\e4\b8\8d\e6\98\af\e8\bd\ac\e7\bb\99\e5\90\88\e7\ba\a6\00")
(data (i32.const 8551) ",\00")
(data (i32.const 8553) "eosio.\00")
(data (i32.const 8560) "\e7\b3\bb\e7\bb\9f\e7\ba\a7\e5\89\8d\e7\bc\80\ef\bc\8c\e7\a6\81\e6\ad\a2\e4\bd\bf\e7\94\a8\00")
(data (i32.const 8591) "\e6\97\a0\e6\b3\95\e5\88\9b\e5\bb\ba.xxx\e4\b9\8b\e7\b1\bb\e7\9a\84\e8\b4\a6\e5\8f\b7\00")
(data (i32.const 8623) "\e5\bd\93\e5\89\8d\e7\ab\9e\e6\8b\8d\e7\9a\84\e8\b4\a6\e5\8f\b7\ef\bc\8c\e5\b7\b2\e8\a2\ab\e8\ae\be\e7\bd\ae\e4\b8\ba\e4\bf\9d\e6\8a\a4\e8\b4\a6\e5\8f\b7\00")
(data (i32.const 8675) "\e8\b4\a6\e5\8f\b7\ef\bc\9a\00")
(data (i32.const 8685) " \e8\a2\ab\e9\a1\b6\e9\80\80\e6\ac\be\ef\bc\9a \00")
(data (i32.const 8703) " Starteos.io\00")
(data (i32.const 8716) "max_users del:\00")
(data (i32.const 8731) "auction_ite->max_users:\00")
(data (i32.const 8755) "max_users:\00")
(data (i32.const 8766) "\e6\96\b0\e6\95\b0\e6\8d\ae\e8\bf\9b\e8\a1\8c\e6\8e\92\e5\ba\8f\n\00")
(data (i32.const 8789) "\e5\bc\80\e5\a7\8b\e6\89\a7\e8\a1\8c\e5\80\92\e8\ae\a1\e6\97\b6\00")
(data (i32.const 8811) "\t\e8\b4\a6\e5\8f\b7\e5\90\8d:\00")
(data (i32.const 8823) "\e6\b2\a1\e6\9c\89\e6\89\be\e5\88\b0\e5\93\a6\00")
(data (i32.const 8839) "\e6\8e\a8\e8\8d\90\e4\ba\ba\e6\95\b0\e9\87\8f\ef\bc\9a\00")
(data (i32.const 8858) "EOS\00")
(data (i32.const 8862) "\e8\bf\94\e5\9b\9e\e8\b4\a6\e5\8f\b7\e5\a5\96\e5\8a\b1\ef\bc\9a\00")
(data (i32.const 8884) "\e8\bf\94\e5\9b\9e\e6\8e\a8\e8\8d\90\e4\ba\ba\e5\a5\96\e5\8a\b1\ef\bc\9a\00")
(data (i32.const 8909) "\e5\a5\96\e5\8a\b1 \00")
(data (i32.const 8917) ". Starteos.io\00")
(data (i32.const 8931) "\e7\ab\9e\e6\8b\8d\e8\b4\a6\e5\8f\b7\ef\bc\9a\00")
(data (i32.const 8947) "\e6\8e\a8\e8\8d\90\e4\ba\ba \00")
(data (i32.const 8958) " \e5\a5\96\e5\8a\b1 \00")
(data (i32.const 8967) "\e6\9c\80\e5\a4\a7\e6\95\b0\e6\8d\ae\ef\bc\9a\00")
(data (i32.const 8983) "\t\e4\bb\b7\e6\a0\bc\ef\bc\9a\00")
(data (i32.const 8994) "\t\e6\97\b6\e9\97\b4\ef\bc\9a\00")
(data (i32.const 9005) "\tTX:\00")
(data (i32.const 9010) "\e8\b4\a6\e5\8f\b7\e4\b8\8d\e5\ad\98\e5\9c\a8\00")
(data (i32.const 9026) "\e7\8a\b6\e6\80\81\e9\94\99\e8\af\af\00")
(data (i32.const 9039) "\e5\bd\93\e5\89\8d\e8\b4\a6\e5\8f\b7\e5\ad\98\e5\9c\a8\e5\bc\82\e5\b8\b8\00")
(data (i32.const 9064) "eosio\00")
(data (i32.const 9070) "newaccount\00")
(data (i32.const 9081) "buyram\00")
(data (i32.const 9088) "\e5\bc\80\e5\a7\8b\e5\88\a0\e9\99\a4\e5\be\85\e4\ba\a4\e5\89\b2\e4\b8\ad\n\00")
(data (i32.const 9114) "\e5\bc\80\e5\a7\8b\e5\88\a0\e9\99\a4\e8\ae\b0\e5\bd\95\e4\b8\ad\n\00")
(data (i32.const 9137) "\e8\ae\b0\e5\bd\95\e4\b8\8d\e5\ad\98\e5\9c\a8\00")
(data (i32.const 9153) "\e8\ae\b0\e5\bd\95\e7\9a\84\e8\b4\a6\e5\8f\b7\e5\92\8cid\e4\b8\8d\e5\8c\b9\e9\85\8d\00")
(data (i32.const 9183) "\e5\91\bd\e4\bb\a4\e9\94\99\e8\af\af\00")
(data (i32.const 9196) "\e6\b2\a1\e6\9c\89\e8\af\a5\e8\b4\a6\e5\8f\b7\00")
(data (i32.const 9212) "\e6\82\a8\e4\b8\8d\e8\83\bd\e9\80\80\e6\ac\be\ef\bc\8c\e6\82\a8\e4\b8\8d\e6\98\af\e7\ab\9e\e6\8b\8d\e8\80\85\00")
(data (i32.const 9249) "\e5\bd\93\e5\89\8d\e8\b4\a6\e5\8f\b7\e6\b2\a1\e6\9c\89\e5\9c\a8 \00")
(data (i32.const 9272) " \e5\90\8d\e5\90\8e\ef\bc\8c\e4\b8\8d\e8\83\bd\e9\80\80\e6\ac\be\ef\bc\81\00")
(data (i32.const 9299) " \e9\80\80\e6\ac\be \00")
(data (i32.const 9308) "\e6\82\a8\e4\b8\8d\e6\98\af\e8\b4\a6\e5\8f\b7\e7\9a\84\e6\89\80\e6\9c\89\e8\80\85\00")
(data (i32.const 9336) "\e8\b4\a6\e5\8f\b7\e5\b7\b2\e7\bb\8f\e5\ad\98\e5\9c\a8\ef\bc\8c\e6\97\a0\e6\b3\95\e5\8a\a0\e5\85\a5\e4\bf\9d\e6\8a\a4\e5\88\97\e8\a1\a8\00")
(data (i32.const 9382) "\e6\82\a8\e7\9a\84\e8\b4\a6\e5\8f\b7\e5\b7\b2\e7\bb\8f\e9\a2\84\e7\95\99\e4\ba\86,\e4\b8\8d\e7\94\a8\e9\87\8d\e5\a4\8d\e6\93\8d\e4\bd\9c!\00")
(data (i32.const 9430) "\e5\bc\80\e5\a7\8b\e5\88\9d\e5\a7\8b\e5\8c\96->\00")
(data (i32.const 9448) "\e6\ad\a3\e5\9c\a8\e8\bf\9b\e8\a1\8c\e5\85\a8\e5\b1\80\e9\85\8d\e7\bd\ae\e5\88\9d\e5\a7\8b\e5\8c\96->\00")
(data (i32.const 9484) "\e5\85\a8\e5\b1\80\e9\85\8d\e7\bd\ae\e5\ae\8c\e6\88\90\ef\bc\8c\e6\ad\a3\e5\9c\a8\e8\bf\9b\e8\a1\8c\e7\9f\ad\e8\b4\a6\e5\8f\b7\e9\85\8d\e7\bd\ae->\00")
(data (i32.const 9536) "\00\00\00\00\00\00$E\01\00\00\00\00\00\00\00\00\00\00\00\00\00\a79\02\00\00\00\00\00\00\00\00\00\00\00\00\ac\a4a\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00u\01\00\00\00\00\00\00\00\00\00\00\00\00\000U\01\00\00\00\00\00\00\00")
(data (i32.const 9616) "\e5\bc\80\e5\a7\8b\e9\85\8d\e7\bd\ae\ef\bc\9a\00")
(data (i32.const 9632) "->\00")
(data (i32.const 9635) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 9694) "string is too long to be a valid name\00")
(data (i32.const 9732) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 9799) "character is not in allowed character set for names\00")
(data (i32.const 9851) "\e4\bf\ae\e6\94\b9\e6\88\90\e5\8a\9f\n\00")
(data (i32.const 9865) "cannot create objects in table of another contract\00")
(data (i32.const 9916) "write\00")
(data (i32.const 9922) "\e5\bd\93\e5\89\8d\e7\9f\ad\e8\b4\a6\e5\8f\b7\e4\b8\8d\e8\83\bd\e4\ba\a4\e6\98\93\00")
(data (i32.const 9950) "\e7\9f\ad\e8\b4\a6\e5\8f\b7\e4\b8\8d\e5\ad\98\e5\9c\a8\00")
(data (i32.const 9969) "\e5\87\ba\e4\bb\b7\e4\bb\b7\e6\a0\bc\e6\97\a0\e6\95\88\00")
(data (i32.const 9988) "\e8\b4\a6\e5\8f\b7\e5\b7\b2\e7\bb\8f\e5\88\9b\e5\bb\ba\ef\bc\8c\e6\97\a0\e6\b3\95\e7\bb\a7\e7\bb\ad\e6\93\8d\e4\bd\9c\ef\bc\8c\e8\af\b7\e8\81\94\e7\b3\bb\e5\ae\a2\e6\9c\8d\00")
(data (i32.const 10046) "\e8\b4\a6\e5\8f\b7\e7\8a\b6\e6\80\81\e4\b8\8d\e6\ad\a3\e7\a1\ae\00")
(data (i32.const 10068) "\e8\b4\a6\e5\8f\b7\e5\b7\b2\e7\bb\8f\e5\ae\8c\e6\88\90\e7\ab\9e\e6\8b\8d\ef\bc\8c\e7\ad\89\e5\be\85\e4\ba\a4\e5\89\b2\00")
(data (i32.const 10108) "\e5\87\ba\e4\bb\b7\e9\87\91\e9\a2\9d\e5\bf\85\e9\a1\bb\e5\a4\a7\e4\ba\8e\e7\ad\89\e4\ba\8e \00")
(data (i32.const 10140) ". Starteos.com\00")
(data (i32.const 10155) "\e8\8e\b7\e5\8f\96\e8\b4\a6\e5\8f\b7\e8\af\a6\e6\83\85:\00")
(data (i32.const 10175) "Size \e6\8e\a8\e8\8d\90\e4\ba\ba:\00")
(data (i32.const 10191) "\e7\ab\9e\e6\8b\8d\e8\b4\a6\e5\8f\b7\e4\b8\8d\e5\ad\98\e5\9c\a8\00")
(data (i32.const 10213) "\e5\86\99\e5\85\a5\e4\ba\a4\e6\98\93\e8\ae\b0\e5\bd\95\n\00")
(data (i32.const 10233) "\t\e4\ba\a4\e6\98\93\e8\ae\b0\e5\bd\95ID\ef\bc\9a\00")
(data (i32.const 10252) "\e5\81\9c\e6\ad\a2\e6\9b\b4\e6\96\b0\e4\b8\ad....\00")
(data (i32.const 10272) "$(\00\00")
(data (i32.const 10276) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 10309) "%lld%s%s %s\00")
(data (i32.const 10321) ".\00")
(data (i32.const 10323) "\e5\88\86\e7\bb\84\e4\b8\8d\e5\ad\98\e5\9c\a8\ef\bc\8c\e8\af\b7\e8\81\94\e7\b3\bb\e5\ae\a2\e6\9c\8d\f0\9f\92\81\00")
(data (i32.const 10361) "SIZE:\00")
(data (i32.const 10367) "\e6\97\a7\e6\95\b0\e6\8d\ae\ef\bc\9a\00")
(data (i32.const 10380) "\t\t\e6\96\b0\e6\95\b0\e6\8d\ae\ef\bc\9a\00")
(data (i32.const 10395) "\t\e5\bd\93\e5\89\8d\e8\b4\a6\e6\88\b7\e5\90\8d\ef\bc\9a\00")
(data (i32.const 10415) "\e6\89\be\e5\88\b0\e5\87\ba\e4\bb\b7\e6\88\96\e5\ae\8c\e6\88\90\e5\80\92\e8\ae\a1\e6\97\b6\e7\9a\84\e8\b4\a6\e5\8f\b7\n\00")
(data (i32.const 10456) "\e8\b4\a6\e5\8f\b7:\00")
(data (i32.const 10464) "\e5\9c\a8\e6\8e\92\e5\90\8d\e4\b9\8b\e5\a4\96\n\00")
(data (i32.const 10481) "\e5\8f\96\e6\b6\88ID\n\00")
(data (i32.const 10491) "\e6\89\be\e5\88\b0\e5\80\92\e8\ae\a1\e6\97\b6\e5\ae\8c\e6\88\90\e7\9a\84\e8\b4\a6\e5\8f\b7:\00")
(data (i32.const 10523) "   \e5\88\a0\e9\99\a4\e4\b8\ad\n\00")
(data (i32.const 10537) "\t\t\e5\88\a0\e9\99\a4\e6\88\90\e5\8a\9f \n\00")
(data (i32.const 10554) "\e7\bb\93\e6\9e\9c\e4\b8\80\e6\a0\b7\n\00")
(data (i32.const 10568) "Index:\00")
(data (i32.const 10575) "\t\e5\bb\b6\e8\bf\9f\e6\97\b6\e9\97\b4\ef\bc\9a\00")
(data (i32.const 10592) "\t\e8\b4\a6\e5\8f\b7\ef\bc\9a\00")
(data (i32.const 10603) "string is too long to be a valid symbol_code\00")
(data (i32.const 10648) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 10701) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 10750) "invalid symbol name\00")
(data (i32.const 10770) "\e8\b4\a6\e5\8f\b7\e5\b7\b2\e7\bb\8f\e7\ab\9e\e6\8b\8d\e6\88\90\e5\8a\9f\ef\bc\8c\e5\ad\98\e5\9c\a8\e5\bc\82\e5\b8\b8\00")
(data (i32.const 10810) "\e5\86\99\e5\85\a5\e5\be\85\e9\a2\86\e5\8f\96:\00")
(data (i32.const 10827) "\e5\88\a0\e9\99\a4\e4\ba\a4\e6\98\93\e8\ae\b0\e5\bd\95\n\00")
(data (i32.const 10847) "\e5\88\a0\e9\99\a4\e6\88\90\e5\8a\9f!\00")
(data (i32.const 10861) "\e4\bf\ae\e6\94\b9\e8\b6\85\e7\ba\a7\e8\b4\a6\e5\8f\b7:\00")
(data (i32.const 10881) "\e6\b7\bb\e5\8a\a0\e8\b6\85\e7\ba\a7\e8\b4\a6\e5\8f\b7\n\00")
(data (i32.const 10901) "cannot pass end iterator to modify\00")
(data (i32.const 10936) "object passed to modify is not in multi_index\00")
(data (i32.const 10982) "cannot modify objects in table of another contract\00")
(data (i32.const 11033) "updater cannot change primary key when modifying an object\00")
(data (i32.const 11092) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 11143) "error reading iterator\00")
(data (i32.const 11166) "get\00")
(data (i32.const 11170) "read\00")
(data (i32.const 11175) "cannot pass end iterator to erase\00")
(data (i32.const 11209) "cannot increment end iterator\00")
(data (i32.const 11239) "object passed to erase is not in multi_index\00")
(data (i32.const 11284) "cannot erase objects in table of another contract\00")
(data (i32.const 11334) "attempt to remove object that was not in multi_index\00")
(data (i32.const 11387) "cannot decrement end iterator when the index is empty\00")
(data (i32.const 11441) "cannot decrement iterator at beginning of index\00")
(data (i32.const 0) "\e8,\00\00")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "memset" (func $fimport$1 (param i32 i32 i32) (result i32)))
(import "env" "action_data_size" (func $fimport$2 (result i32)))
(import "env" "read_action_data" (func $fimport$3 (param i32 i32) (result i32)))
(import "env" "abort" (func $fimport$4))
(import "env" "memcpy" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$7 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$8 (param i32 i32)))
(import "env" "__multf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$10 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$11 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$12 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$13 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$14 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$15 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$16 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$17 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$18 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$20 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$21 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$22 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$23 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$24 (param i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$25 (param i64 i64 i64 i64) (result i32)))
(import "env" "prints" (func $fimport$26 (param i32)))
(import "env" "current_time" (func $fimport$27 (result i64)))
(import "env" "printn" (func $fimport$28 (param i64)))
(import "env" "printui" (func $fimport$29 (param i64)))
(import "env" "require_auth" (func $fimport$30 (param i64)))
(import "env" "__gttf2" (func $fimport$31 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfdi" (func $fimport$32 (param i64 i64) (result i64)))
(import "env" "db_next_i64" (func $fimport$33 (param i32 i32) (result i32)))
(import "env" "is_account" (func $fimport$34 (param i64) (result i32)))
(import "env" "current_receiver" (func $fimport$35 (result i64)))
(import "env" "db_store_i64" (func $fimport$36 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "cancel_deferred" (func $fimport$37 (param i32) (result i32)))
(import "env" "__floatunditf" (func $fimport$38 (param i32 i64)))
(import "env" "__lttf2" (func $fimport$39 (param i64 i64 i64 i64) (result i32)))
(import "env" "send_deferred" (func $fimport$40 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$41 (param i32 i32)))
(import "env" "eosio_assert_code" (func $fimport$42 (param i32 i64)))
(import "env" "db_idx64_store" (func $fimport$43 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$44 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$45 (param i32 i64 i32 i32)))
(import "env" "db_get_i64" (func $fimport$46 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$47 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_next" (func $fimport$48 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$49 (param i32)))
(import "env" "db_idx64_remove" (func $fimport$50 (param i32)))
(import "env" "db_idx64_upperbound" (func $fimport$51 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_previous" (func $fimport$52 (param i32 i32) (result i32)))
(import "env" "db_idx64_end" (func $fimport$53 (param i64 i64 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$54 (param i32 i64 i32)))
(export "apply" (func $39))
(table $0 17 17 anyfunc)
(elem (i32.const 1) $20 $22 $41 $43 $45 $47 $49 $50 $52 $54 $55 $57 $59 $61 $63 $38)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 11489))
(global $global$2 i32 (i32.const 11489))


int_32 .FUNC $220 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$4 = ($global$0 - [1408])
	$global$0 = $4
	$5 = *($3)
	$7 = CALL $84(($4 + [1024]), $0)
	$6 = CALL $84(($4 + [1152]), $1)
	$8 = CALL int_32 $6((int_32 $7), (int_32 $5))
	CALL $69(($7 + [112]), *(($7 + [116])))
	$5 = *($7 + [88])
	if ( ($5 == 0) ){ goto $label$1 }
	*(($7 + [92])) = $5
	CALL $11($5)
	
.LABEL $label$1
	CALL $69(($6 + [112]), *(($6 + [116])))
	$7 = *($6 + [88])
	if ( ($7 == 0) ){ goto $label$2 }
	*(($6 + [92])) = $7
	CALL $11($7)
	
.LABEL $label$2
	$5 = *($3)
	if ( ($8 == 0) ){ goto $label$36 }
	$7 = CALL $84(($4 + [256]), $1)
	$6 = CALL $84(($4 + [384]), $2)
	$8 = CALL int_32 $6((int_32 $7), (int_32 $5))
	CALL $69(($7 + [112]), *(($7 + [116])))
	$5 = *($7 + [88])
	if ( ($5 == 0) ){ goto $label$37 }
	*(($7 + [92])) = $5
	CALL $11($5)
	
.LABEL $label$37
	CALL $69(($6 + [112]), *(($6 + [116])))
	$7 = *($6 + [88])
	if ( ($7 == 0) ){ goto $label$38 }
	*(($6 + [92])) = $7
	CALL $11($7)
	
.LABEL $label$38
	if ( ($8 == 0) ){ goto $label$35 }
	CALL memcpy(($4 + [1280]), $0, [88])
	$1 = ($0 + [96])
	$6 = *($1)
	*($1) = [0]
	*((($4 + [1280]) + [96])) = $6
	$9 = *($0 + [88 align=4])
	*($0 + [88 align=4]) = (int_64)0
	$1 = ($0 + [116])
	$7 = *($1)
	*(($3 = (($4 + [1280]) + [116]))) = $7
	$6 = *(($0 + [120]))
	*((($4 + [1280]) + [120])) = $6
	*($4 + [1368]) = $9
	*($4 + [1384]) = *($0 + [104])
	*($4 + [1392]) = *($0 + [112])
	$5 = ($0 + [112])
	if ( ($6 == 0) ){ goto $label$34 }
	*($7 + [8]) = $3
	*($0 + [112]) = $1
	*($1) = (int_64)0
	goto $label$33 
	
.LABEL $label$36
	$7 = CALL $84(($4 + [768]), $1)
	$6 = CALL $84(($4 + [896]), $2)
	$8 = CALL int_32 $6((int_32 $7), (int_32 $5))
	CALL $69(($7 + [112]), *(($7 + [116])))
	$5 = *($7 + [88])
	if ( ($5 == 0) ){ goto $label$39 }
	*(($7 + [92])) = $5
	CALL $11($5)
	
.LABEL $label$39
	CALL $69(($6 + [112]), *(($6 + [116])))
	$7 = *($6 + [88])
	if ( ($7 == 0) ){ goto $label$40 }
	*(($6 + [92])) = $7
	CALL $11($7)
	
.LABEL $label$40
	$6 = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL memcpy(($4 + [1280]), $1, [88])
	$6 = ($1 + [96])
	$7 = *($6)
	*($6) = [0]
	*((($4 + [1280]) + [96])) = $7
	$9 = *($1 + [88 align=4])
	*($1 + [88 align=4]) = (int_64)0
	$6 = ($1 + [116])
	$8 = *($6)
	*(($10 = (($4 + [1280]) + [116]))) = $8
	$7 = *(($1 + [120]))
	*((($4 + [1280]) + [120])) = $7
	*($4 + [1368]) = $9
	*($4 + [1384]) = *($1 + [104])
	*($4 + [1392]) = *($1 + [112])
	$5 = ($1 + [112])
	if ( ($7 == 0) ){ goto $label$32 }
	*($8 + [8]) = $10
	*($1 + [112]) = $6
	*($6) = (int_64)0
	goto $label$31 
	
.LABEL $label$35
	CALL memcpy(($4 + [1280]), $0, [88])
	$6 = ($0 + [96])
	$7 = *($6)
	*($6) = [0]
	*((($4 + [1280]) + [96])) = $7
	$9 = *($0 + [88 align=4])
	*($0 + [88 align=4]) = (int_64)0
	$6 = ($0 + [116])
	$5 = *($6)
	*(($8 = (($4 + [1280]) + [116]))) = $5
	$7 = *(($0 + [120]))
	*((($4 + [1280]) + [120])) = $7
	*($4 + [1368]) = $9
	*($4 + [1384]) = *($0 + [104])
	*($4 + [1392]) = *($0 + [112])
	$10 = ($0 + [112])
	if ( ($7 == 0) ){ goto $label$30 }
	*($5 + [8]) = $8
	*($0 + [112]) = $6
	*($6) = (int_64)0
	goto $label$29 
	
.LABEL $label$34
	*((($4 + [1280]) + [112])) = $3
	
.LABEL $label$33
	*((($0 = CALL memcpy($0, $2, [88])) + [88])) = *($2 + [88 align=4])
	$6 = ($2 + [96])
	*(($0 + [96])) = *($6)
	*($6) = [0]
	*(($0 + [104])) = *($2 + [104])
	*($2 + [88 align=4]) = (int_64)0
	CALL $69($5, *($1))
	*(($0 + [112])) = *($2 + [112])
	$6 = ($2 + [116])
	$8 = *($6)
	*($1) = $8
	$0 = *(($2 + [120]))
	*(($0 + [120])) = $0
	$7 = ($2 + [112])
	if ( ($0 == 0) ){ goto $label$28 }
	*($8 + [8]) = $1
	*($7) = $6
	*($6) = (int_64)0
	goto $label$27 
	
.LABEL $label$32
	*((($4 + [1280]) + [112])) = $10
	
.LABEL $label$31
	*((($1 = CALL memcpy($1, $2, [88])) + [88])) = *($2 + [88 align=4])
	$7 = ($2 + [96])
	*(($1 + [96])) = *($7)
	*($7) = [0]
	*(($1 + [104])) = *($2 + [104])
	*($2 + [88 align=4]) = (int_64)0
	CALL $69($5, *($6))
	*(($1 + [112])) = *($2 + [112])
	$7 = ($2 + [116])
	$11 = *($7)
	*($6) = $11
	$12 = *(($2 + [120]))
	*(($1 + [120])) = $12
	$8 = ($2 + [112])
	if ( ($12 == 0) ){ goto $label$26 }
	*($11 + [8]) = $6
	*($8) = $7
	*($7) = (int_64)0
	goto $label$25 
	
.LABEL $label$30
	*((($4 + [1280]) + [112])) = $8
	
.LABEL $label$29
	*((($0 = CALL memcpy($0, $1, [88])) + [88])) = *($1 + [88 align=4])
	$7 = ($1 + [96])
	*(($0 + [96])) = *($7)
	*($7) = [0]
	*(($0 + [104])) = *($1 + [104])
	*($1 + [88 align=4]) = (int_64)0
	CALL $69($10, *($6))
	*(($0 + [112])) = *($1 + [112])
	$7 = ($1 + [116])
	$12 = *($7)
	*($6) = $12
	$0 = *(($1 + [120]))
	*(($0 + [120])) = $0
	$5 = ($1 + [112])
	if ( ($0 == 0) ){ goto $label$24 }
	*($12 + [8]) = $6
	*($5) = $7
	*($7) = (int_64)0
	goto $label$23 
	
.LABEL $label$28
	*($5) = $1
	
.LABEL $label$27
	$0 = CALL memcpy($2, ($4 + [1280]), [88])
	$2 = ($0 + [88])
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$41 }
	*(($0 + [92])) = $1
	CALL $11($1)
	*(($0 + [96])) = [0]
	*($2) = (int_64)0
	
.LABEL $label$41
	$1 = (($4 + [1280]) + [88])
	*($2) = *($1)
	$2 = (($4 + [1280]) + [96])
	$5 = *($2)
	*($2) = [0]
	*(($0 + [96])) = $5
	*($1) = (int_64)0
	*(($0 + [104])) = *((($4 + [1280]) + [104]))
	$1 = ($0 + [116])
	CALL $69($7, *($1))
	$5 = (($4 + [1280]) + [112])
	*(($0 + [112])) = *($5)
	$8 = (($4 + [1280]) + [116])
	$2 = *($8)
	*($1) = $2
	$0 = *((($4 + [1280]) + [120]))
	*(($0 + [120])) = $0
	if ( ($0 == 0) ){ goto $label$22 }
	*($2 + [8]) = $6
	*($5) = $3
	*($8) = (int_64)0
	$2 = [0]
	goto $label$21 
	
.LABEL $label$26
	*($5) = $6
	
.LABEL $label$25
	$2 = CALL memcpy($2, ($4 + [1280]), [88])
	$6 = ($2 + [88])
	$12 = *($6)
	if ( ($12 == 0) ){ goto $label$42 }
	*(($2 + [92])) = $12
	CALL $11($12)
	*(($2 + [96])) = [0]
	*($6) = (int_64)0
	
.LABEL $label$42
	$12 = (($4 + [1280]) + [88])
	*($6) = *($12)
	$6 = (($4 + [1280]) + [96])
	$11 = *($6)
	*($6) = [0]
	*(($2 + [96])) = $11
	*($12) = (int_64)0
	*(($2 + [104])) = *((($4 + [1280]) + [104]))
	$12 = ($2 + [116])
	CALL $69($8, *($12))
	$11 = (($4 + [1280]) + [112])
	*(($2 + [112])) = *($11)
	$13 = (($4 + [1280]) + [116])
	$6 = *($13)
	*($12) = $6
	$2 = *((($4 + [1280]) + [120]))
	*(($2 + [120])) = $2
	if ( ($2 == 0) ){ goto $label$20 }
	*($6 + [8]) = $7
	*($11) = $10
	*($13) = (int_64)0
	$6 = [0]
	goto $label$19 
	
.LABEL $label$24
	*($10) = $6
	
.LABEL $label$23
	$0 = CALL memcpy($1, ($4 + [1280]), [88])
	$1 = ($0 + [88])
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$43 }
	*(($0 + [92])) = $6
	CALL $11($6)
	*(($0 + [96])) = [0]
	*($1) = (int_64)0
	
.LABEL $label$43
	$6 = (($4 + [1280]) + [88])
	*($1) = *($6)
	$1 = (($4 + [1280]) + [96])
	$10 = *($1)
	*($1) = [0]
	*(($0 + [96])) = $10
	*($6) = (int_64)0
	*(($0 + [104])) = *((($4 + [1280]) + [104]))
	$6 = ($0 + [116])
	CALL $69($5, *($6))
	$10 = (($4 + [1280]) + [112])
	*(($0 + [112])) = *($10)
	$12 = (($4 + [1280]) + [116])
	$1 = *($12)
	*($6) = $1
	$6 = *((($4 + [1280]) + [120]))
	*(($0 + [120])) = $6
	if ( ($6 == 0) ){ goto $label$18 }
	*($1 + [8]) = $7
	*($10) = $8
	*($12) = (int_64)0
	$1 = [0]
	goto $label$17 
	
.LABEL $label$22
	*($7) = $6
	
.LABEL $label$21
	CALL $69(($4 + [1392]), $2)
	$0 = *($4 + [1368])
	if ( ($0 == 0) ){ goto $label$44 }
	*(($4 + [1372])) = $0
	CALL $11($0)
	
.LABEL $label$44
	$global$0 = ($4 + [1408])
	return [1]
	
.LABEL $label$20
	*($8) = $7
	
.LABEL $label$19
	CALL $69((($4 + [1280]) + [112]), $6)
	$2 = *($4 + [1368])
	if ( ($2 == 0) ){ goto $label$45 }
	*(($4 + [1372])) = $2
	CALL $11($2)
	
.LABEL $label$45
	$7 = *($3)
	$6 = CALL $84(($4 + [512]), $0)
	$2 = CALL $84(($4 + [640]), $1)
	$3 = CALL int_32 $2((int_32 $6), (int_32 $7))
	CALL $69(($6 + [112]), *(($6 + [116])))
	$7 = *($6 + [88])
	if ( ($7 == 0) ){ goto $label$46 }
	*(($6 + [92])) = $7
	CALL $11($7)
	
.LABEL $label$46
	CALL $69(($2 + [112]), *(($2 + [116])))
	$6 = *($2 + [88])
	if ( ($6 == 0) ){ goto $label$47 }
	*(($2 + [92])) = $6
	CALL $11($6)
	
.LABEL $label$47
	$6 = [1]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL memcpy(($4 + [1280]), $0, [88])
	$2 = ($0 + [96])
	$6 = *($2)
	*($2) = [0]
	*((($4 + [1280]) + [96])) = $6
	$9 = *($0 + [88 align=4])
	*($0 + [88 align=4]) = (int_64)0
	$2 = ($0 + [116])
	$8 = *($2)
	*(($7 = (($4 + [1280]) + [116]))) = $8
	$6 = *(($0 + [120]))
	*((($4 + [1280]) + [120])) = $6
	*($4 + [1368]) = $9
	*($4 + [1384]) = *($0 + [104])
	*($4 + [1392]) = *($0 + [112])
	$3 = ($0 + [112])
	if ( ($6 == 0) ){ goto $label$16 }
	*($8 + [8]) = $7
	*($0 + [112]) = $2
	*($2) = (int_64)0
	goto $label$15 
	
.LABEL $label$18
	*($5) = $7
	
.LABEL $label$17
	CALL $69((($4 + [1280]) + [112]), $1)
	$1 = *($4 + [1368])
	if ( ($1 == 0) ){ goto $label$48 }
	*(($4 + [1372])) = $1
	CALL $11($1)
	
.LABEL $label$48
	$3 = *($3)
	$6 = CALL $84($4, $0)
	$1 = CALL $84(($4 + [128]), $2)
	$8 = CALL int_32 $1((int_32 $6), (int_32 $3))
	CALL $69(($6 + [112]), *(($6 + [116])))
	$3 = *($6 + [88])
	if ( ($3 == 0) ){ goto $label$49 }
	*(($6 + [92])) = $3
	CALL $11($3)
	
.LABEL $label$49
	CALL $69(($1 + [112]), *(($1 + [116])))
	$6 = *($1 + [88])
	if ( ($6 == 0) ){ goto $label$50 }
	*(($1 + [92])) = $6
	CALL $11($6)
	
.LABEL $label$50
	$6 = [1]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL memcpy(($4 + [1280]), $0, [88])
	$1 = ($0 + [96])
	$6 = *($1)
	*($1) = [0]
	*((($4 + [1280]) + [96])) = $6
	$1 = ($0 + [88])
	$9 = *($1)
	*($1) = (int_64)0
	$6 = ($0 + [116])
	$8 = *($6)
	*(($3 = (($4 + [1280]) + [116]))) = $8
	$1 = *(($0 + [120]))
	*((($4 + [1280]) + [120])) = $1
	*($4 + [1368]) = $9
	*($4 + [1384]) = *(($0 + [104]))
	$10 = ($0 + [112])
	*($4 + [1392]) = *($10)
	if ( ($1 == 0) ){ goto $label$14 }
	*($8 + [8]) = $3
	*($10) = $7
	*($6) = (int_64)0
	goto $label$13 
	
.LABEL $label$16
	*((($4 + [1280]) + [112])) = $7
	
.LABEL $label$15
	$6 = ($1 + [88])
	*((($0 = CALL memcpy($0, $1, [88])) + [88])) = *($6)
	$8 = ($1 + [96])
	*(($0 + [96])) = *($8)
	*($8) = [0]
	*(($0 + [104])) = *(($1 + [104]))
	*($6) = (int_64)0
	CALL $69($3, *($2))
	$8 = ($1 + [112])
	*(($0 + [112])) = *($8)
	$6 = ($1 + [116])
	$10 = *($6)
	*($2) = $10
	$0 = *(($1 + [120]))
	*(($0 + [120])) = $0
	if ( ($0 == 0) ){ goto $label$12 }
	*($10 + [8]) = $2
	*($8) = $6
	*($6) = (int_64)0
	goto $label$11 
	
.LABEL $label$14
	*((($4 + [1280]) + [112])) = $3
	
.LABEL $label$13
	*((($0 = CALL memcpy($0, $2, [88])) + [88])) = *($2 + [88 align=4])
	$1 = ($2 + [96])
	*(($0 + [96])) = *($1)
	*($1) = [0]
	*(($0 + [104])) = *($2 + [104])
	*($2 + [88 align=4]) = (int_64)0
	$6 = ($0 + [116])
	CALL $69($5, *($6))
	*(($0 + [112])) = *($2 + [112])
	$1 = ($2 + [116])
	$8 = *($1)
	*($6) = $8
	$0 = *(($2 + [120]))
	*(($0 + [120])) = $0
	$6 = ($2 + [112])
	if ( ($0 == 0) ){ goto $label$10 }
	*($8 + [8]) = $7
	*($6) = $1
	*($1) = (int_64)0
	goto $label$9 
	
.LABEL $label$12
	*($3) = $2
	
.LABEL $label$11
	$0 = CALL memcpy($1, ($4 + [1280]), [88])
	$2 = ($0 + [88])
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$51 }
	*(($0 + [92])) = $1
	CALL $11($1)
	*(($0 + [96])) = [0]
	*($2) = (int_64)0
	
.LABEL $label$51
	$1 = (($4 + [1280]) + [88])
	*($2) = *($1)
	$2 = (($4 + [1280]) + [96])
	$3 = *($2)
	*($2) = [0]
	*(($0 + [96])) = $3
	*($1) = (int_64)0
	*(($0 + [104])) = *((($4 + [1280]) + [104]))
	$1 = ($0 + [116])
	CALL $69($5, *($1))
	$3 = (($4 + [1280]) + [112])
	*(($0 + [112])) = *($3)
	$8 = (($4 + [1280]) + [116])
	$2 = *($8)
	*($1) = $2
	$0 = *((($4 + [1280]) + [120]))
	*(($0 + [120])) = $0
	if ( ($0 == 0) ){ goto $label$8 }
	*($2 + [8]) = $6
	*($3) = $7
	*($8) = (int_64)0
	$2 = [0]
	goto $label$7 
	
.LABEL $label$10
	*($5) = $7
	
.LABEL $label$9
	$0 = CALL memcpy($2, ($4 + [1280]), [88])
	$2 = ($0 + [88])
	$7 = *($2)
	if ( ($7 == 0) ){ goto $label$52 }
	*(($0 + [92])) = $7
	CALL $11($7)
	*(($0 + [96])) = [0]
	*($2) = (int_64)0
	
.LABEL $label$52
	$7 = (($4 + [1280]) + [88])
	*($2) = *($7)
	$2 = (($4 + [1280]) + [96])
	$5 = *($2)
	*($2) = [0]
	*(($0 + [96])) = $5
	*($7) = (int_64)0
	*(($0 + [104])) = *((($4 + [1280]) + [104]))
	$7 = ($0 + [116])
	CALL $69($6, *($7))
	$5 = (($4 + [1280]) + [112])
	*(($0 + [112])) = *($5)
	$8 = (($4 + [1280]) + [116])
	$2 = *($8)
	*($7) = $2
	$0 = *((($4 + [1280]) + [120]))
	*(($0 + [120])) = $0
	if ( ($0 == 0) ){ goto $label$6 }
	*($2 + [8]) = $1
	*($5) = $3
	*($8) = (int_64)0
	$2 = [0]
	goto $label$5 
	
.LABEL $label$8
	*($5) = $6
	
.LABEL $label$7
	CALL $69(($4 + [1392]), $2)
	$0 = *($4 + [1368])
	if ( ($0 == 0) ){ goto $label$4 }
	*(($4 + [1372])) = $0
	CALL $11($0)
	goto $label$4 
	
.LABEL $label$6
	*($6) = $1
	
.LABEL $label$5
	CALL $69(($4 + [1392]), $2)
	$0 = *($4 + [1368])
	if ( ($0 == 0) ){ goto $label$4 }
	*(($4 + [1372])) = $0
	CALL $11($0)
	
.LABEL $label$4
	$6 = [2]
	
.LABEL $label$3
	$global$0 = ($4 + [1408])
	return $6
}

void .FUNC $174 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [496])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [436]) = $2
	*($3 + [432]) = $2
	*($3 + [440]) = ($2 + $4)
	*((($3 + [344]) + [56])) = (int_64)0
	*(($5 = (($3 + [344]) + [76]))) = (int_64)0
	*($3 + [392]) = (int_64)0
	*($3 + [344]) = (int_64)0
	*($3 + [416]) = $5
	CALL $134(($3 + [432]), ($3 + [344]))
	$2 = *($3 + [436])
	if ( ((uint_32)(*($3 + [440]) - $2) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	$2 = *($3 + [436])
	
.LABEL $label$5
	CALL memcpy(($3 + [336]), $2, [8])
	*($3 + [436]) = (*($3 + [436]) + [8])
	*(($2 = (($3 + [88]) + [8]))) = *((($3 + [432]) + [8]))
	*($3 + [88]) = *($3 + [432])
	$2 = *($2)
	*((($3 + [448]) + [8])) = $2
	*(($4 = (($3 + [464]) + [8]))) = $2
	$6 = *($3 + [88])
	*($3 + [464]) = $6
	*($3 + [448]) = $6
	$2 = *($4)
	*((($3 + [480]) + [8])) = $2
	*(($3 + [128])) = $2
	*($3 + [104]) = $0
	*($3 + [112]) = $1
	$1 = *($3 + [464])
	*($3 + [120]) = $1
	*($3 + [480]) = $1
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*((($3 + [104]) + [56])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*($3 + [216]) = $0
	*($3 + [256]) = $0
	*(($3 + [288])) = [0]
	*(($3 + [280])) = (int_64)0
	*(($3 + [294])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [332])) = [0]
	*($3 + [296]) = $0
	*(($8 = (($7 = CALL memcpy($3, ($3 + [344]), [72])) + [76]))) = (int_64)0
	*($7 + [72]) = $8
	$9 = ($7 + [72])
	$10 = (($7 + [344]) + [72])
	$2 = *($10)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = $2
	$3 = ($4 + [16])
	CALL $95($9, $8, $3, $3)
	$3 = *($4 + [4])
	if ( ($3 == 0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = $3
	$3 = *($2)
	if ( $3 ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$2 = *($4 + [8])
	if ( ((int_32)*($2) == (int_32)$4) ){ goto $label$8 }
	$4 = ($4 + [8])
	
.LOOP $label$11:
	$3 = *($4)
	$4 = ($3 + [8])
	$2 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($2)) ){ goto $label$11 }
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	
.LABEL $label$6
	CALL $61(($7 + [104]), $7, $0)
	CALL $69($9, *(($7 + [76])))
	CALL $65(($7 + [104]))
	CALL $69($10, *((($7 + [344]) + [76])))
	$global$0 = ($7 + [496])
}

int_32 .FUNC $6 ()
{
	return [8208]
}

int_32 .FUNC $176 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $210($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $9($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $29($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $29($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $24($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $11($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [11166])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [3])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $229($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [3]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [11170])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [8])
	$2 = (*($6) + [8])
	*($6) = $2
	$7 = ($7 + [8])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [32])
	$global$0 = $2
	CALL $69($1, *($1 + [4]))
	*($1) = ($1 + [4])
	$3 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($4 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [11166])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	$7 = *($4)
	$4 = ($4 + [1])
	*(($0 + [4])) = $4
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$4 = $4
	if ( ($7 & [128]) ){ goto $label$1 }
	$5 = (CASTING uint_32)(uint_64 $3)
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = ($1 + [4])
	
.LOOP $label$4:
	*(($7 = (($2 + [16]) + [8]))) = [0]
	*($2 + [16]) = (int_64)0
	*(($6 = ($2 + [8]))) = [0]
	*($2) = (int_64)0
	CALL $176(CALL $176($0, ($2 + [16])), $2)
	$9 = CALL $180($1, ($2 + [28]), ($2 + [16]))
	if ( (*($9) == 0) ){ goto $label$9 }
	if ( (*($2) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	*(($4 = CALL $9([40]))) = (int_64)0
	*(($4 + [24])) = *($7)
	*($4 + [16 align=4]) = *($2 + [16])
	*($4 + [28 align=4]) = *($2)
	*(($4 + [36])) = *($6)
	*($4 + [8]) = *($2 + [28])
	*($2) = (int_64)0
	*($9) = $4
	*($7) = [0]
	*($6) = [0]
	*($2 + [16]) = (int_64)0
	$10 = *(*($1))
	if ( ($10 == 0) ){ goto $label$10 }
	*($1) = $10
	$4 = *($9)
	
.LABEL $label$10
	CALL $179(*($8), $4)
	*(($4 = ($1 + [8]))) = (*($4) + [1])
	if ( ((*($2) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11(*($6))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( (*($2 + [16]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $11(*($7))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $171 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [256])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [248]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$5
	CALL memcpy(($3 + [248]), $2, [8])
	*($3 + [240]) = (int_64)0
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$6
	$6 = ($2 + $4)
	CALL memcpy(($3 + [240]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$7
	CALL memcpy(($3 + [8]), $5, [1])
	$4 = *($3 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [17])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [198])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	CALL $47(($3 + [8]), *($3 + [248]), *($3 + [240]), ((int_32)$4 != (int_32)[0]))
	CALL $65(($3 + [8]))
	$global$0 = ($3 + [256])
}

void .FUNC $172 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [240])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [232])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [232])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [11170])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [190])) = [0]
	*(($3 + [188])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	CALL $54($3, *($3 + [232]))
	CALL $65($3)
	$global$0 = ($3 + [240])
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $2($1)
	
.LABEL $label$2
	*(CALL $6()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $2(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $3($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $178 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($0 + [4])
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$2 }
	$6 = ($1 + [16])
	$10 = ($9 & [1])
	$9 = *($4)
	$9 = ( *($4 + [4]) ? uint_32($9 >> [1]) : $10 )
	$8 = ($7 & [1])
	$7 = *($1 + [16])
	$7 = ( *($1 + [20]) ? uint_32($7 >> [1]) : $8 )
	$11 = ( $7 ? $9 : ($7 <= $9) )
	if ( ($11 == 0) ){ goto $label$3 }
	$8 = CALL $18(( *($4 + [8]) ? ($4 + [1]) : $10 ), ( *($1 + [24]) ? ($6 + [1]) : $8 ), $11)
	if ( ($8 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)$1) ){ goto $label$9 }
	$9 = *($1)
	if ( ($9 == 0) ){ goto $label$8 }
	
.LOOP $label$10:
	$7 = $9
	$9 = *($7 + [4])
	if ( $9 ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$9
	$7 = $1
	if ( *($1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$9 = $1
	
.LOOP $label$11:
	$7 = *($9 + [8])
	$3 = ((int_32)*($7) == (int_32)$9)
	$9 = $7
	if ( $3 ){ goto $label$11 }
	
.LABEL $label$7
	$5 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *(($7 + [20])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($9 & [1])
	$9 = *($4)
	$9 = ( *($4 + [4]) ? uint_32($9 >> [1]) : $6 )
	$8 = ( $9 ? $3 : ($9 <= $3) )
	if ( ($8 == 0) ){ goto $label$13 }
	$6 = CALL $18(( *(($7 + [24])) ? (($7 + [16]) + [1]) : $5 ), ( *($4 + [8]) ? ($4 + [1]) : $6 ), $8)
	if ( ($6 == 0) ){ goto $label$13 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$12 }
	goto $label$4 
	
.LABEL $label$13
	if ( ((uint_32)$3 >= (uint_32)$9) ){ goto $label$4 }
	
.LABEL $label$12
	if ( (*($1) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*($2) = $7
	return ($7 + [4])
	
.LABEL $label$5
	*($2) = $1
	return $1
	
.LABEL $label$4
	return CALL $180($0, $2, $4)
	
.LABEL $label$1
	$10 = ($9 & [1])
	$9 = *(($1 + [16]))
	$9 = ( *(($1 + [20])) ? uint_32($9 >> [1]) : $10 )
	$8 = ($7 & [1])
	$7 = *($4)
	$7 = ( *(($4 + [4])) ? uint_32($7 >> [1]) : $8 )
	$11 = ( $7 ? $9 : ($7 <= $9) )
	if ( ($11 == 0) ){ goto $label$16 }
	$6 = CALL $18(( *($1 + [24]) ? ($6 + [1]) : $10 ), ( *($4 + [8]) ? ($4 + [1]) : $8 ), $11)
	if ( ($6 == 0) ){ goto $label$16 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = *($1 + [4])
	if ( ($7 == 0) ){ goto $label$18 }
	
.LOOP $label$19:
	$9 = $7
	$7 = *($9)
	if ( $7 ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$9 = *($1 + [8])
	if ( ((int_32)*($9) == (int_32)$1) ){ goto $label$17 }
	$3 = ($1 + [8])
	
.LOOP $label$20:
	$7 = *($3)
	$3 = ($7 + [8])
	$9 = *($7 + [8])
	if ( ((int_32)$7 != (int_32)*($9)) ){ goto $label$20 }
	
.LABEL $label$17
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$22 }
	$5 = ($3 & [1])
	$3 = *($4)
	$3 = ( *(($4 + [4])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($7 & [1])
	$7 = *($9 + [16])
	$7 = ( *($9 + [20]) ? uint_32($7 >> [1]) : $6 )
	$8 = ( $7 ? $3 : ($7 <= $3) )
	if ( ($8 == 0) ){ goto $label$23 }
	$6 = CALL $18(( *($4 + [8]) ? ($4 + [1]) : $5 ), ( *($9 + [24]) ? (($9 + [16]) + [1]) : $6 ), $8)
	if ( ($6 == 0) ){ goto $label$23 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	if ( ((uint_32)$3 >= (uint_32)$7) ){ goto $label$21 }
	
.LABEL $label$22
	$7 = ($1 + [4])
	if ( (*($7) == 0) ){ goto $label$24 }
	*($2) = $9
	return $9
	
.LABEL $label$24
	*($2) = $1
	return $7
	
.LABEL $label$21
	return CALL $180($0, $2, $4)
	
.LABEL $label$14
	*($2) = $1
	*($3) = $1
	return $3
}

void .FUNC $4 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $221 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_64 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	$3 = ($global$0 - [640])
	$global$0 = $3
	$4 = ($0 + [256])
	CALL $220($0, ($0 + [128]), $4, $2)
	$5 = ($0 + [384])
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$1 }
	$6 = (($3 + [256]) + [112])
	$7 = (($3 + [128]) + [112])
	$8 = ($3 + [112])
	$9 = (($3 + [256]) + [116])
	$10 = (($3 + [512]) + [112])
	$11 = (($3 + [384]) + [112])
	$12 = (($3 + [384]) + [88])
	$13 = (($3 + [256]) + [104])
	$14 = [0]
	
.LOOP $label$2:
	$18 = *($2)
	$19 = $5
	$18 = CALL int_32 CALL $84(($3 + [512]), $19)((int_32 CALL $84(($3 + [384]), $4)), (int_32 $18))
	CALL $69($11, *((($3 + [384]) + [116])))
	$5 = *($12)
	if ( ($5 == 0) ){ goto $label$3 }
	*((($3 + [384]) + [92])) = $5
	CALL $11($5)
	
.LABEL $label$3
	CALL $69($10, *((($3 + [512]) + [116])))
	$5 = *((($3 + [512]) + [88]))
	if ( ($5 == 0) ){ goto $label$4 }
	*((($3 + [512]) + [92])) = $5
	CALL $11($5)
	
.LABEL $label$4
	if ( ($18 == 0) ){ goto $label$5 }
	CALL memcpy(($3 + [256]), $19, [88])
	*(($20 = (($3 + [256]) + [96]))) = [0]
	$21 = *($19 + [88 align=4])
	$5 = ($19 + [96])
	*($20) = *($5)
	*($5) = [0]
	*($19 + [88]) = [0]
	*(($19 + [92])) = [0]
	*(($17 = (($3 + [256]) + [88]))) = $21
	*($13) = *($19 + [104])
	*($6) = *($19 + [112])
	$5 = ($19 + [116])
	$22 = *($5)
	*($9) = $22
	$18 = *(($19 + [120]))
	*(($23 = (($3 + [256]) + [120]))) = $18
	if ( ($18 == 0) ){ goto $label$7 }
	*($22 + [8]) = $9
	*($19 + [112]) = $5
	*($5) = (int_64)0
	goto $label$6 
	
.LABEL $label$7
	*($6) = $9
	
.LABEL $label$6
	$18 = $14
	$24 = $19
	
.LOOP $label$10:
	$25 = ($5 + [256])
	$5 = ($0 + $18)
	CALL memcpy(($5 + [384]), $25, [88])
	$22 = ($5 + [472])
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$12 }
	*(($26 = ($5 + [476]))) = $15
	CALL $11($15)
	*($22) = [0]
	*($26) = (int_64)0
	$15 = ($24 + [96])
	$24 = ($24 + [92])
	goto $label$11 
	
.LABEL $label$12
	$15 = ($5 + [480])
	$24 = ($5 + [476])
	
.LABEL $label$11
	$27 = ($5 + [348])
	*($24) = *($27)
	$26 = ($5 + [344])
	*($22) = *($26)
	$28 = ($5 + [352])
	*($15) = *($28)
	*(($5 + [488])) = *(($5 + [360]))
	*($28) = [0]
	*($26) = (int_64)0
	$22 = ($5 + [500])
	$24 = ($5 + [496])
	CALL $69($24, *($22))
	$16 = ($5 + [368])
	*($24) = *($16)
	$15 = ($5 + [372])
	$29 = *($15)
	*($22) = $29
	$30 = ($5 + [376])
	$31 = *($30)
	*(($5 + [504])) = $31
	if ( ($31 == 0) ){ goto $label$14 }
	*($29 + [8]) = $22
	*($30) = [0]
	*($15) = [0]
	*($16) = $15
	if ( ((int_32)$18 != (int_32)[-256]) ){ goto $label$13 }
	goto $label$9 
	
.LABEL $label$14
	*($24) = $22
	if ( ((int_32)$18 == (int_32)[-256]) ){ goto $label$9 }
	
.LABEL $label$13
	$22 = *($2)
	$22 = CALL int_32 CALL $84(($3 + [128]), ($3 + [256]))((int_32 CALL $84($3, ($5 + [128]))), (int_32 $22))
	CALL $69($8, *(($3 + [116])))
	$5 = *(($3 + [88]))
	if ( ($5 == 0) ){ goto $label$15 }
	*(($3 + [92])) = $5
	CALL $11($5)
	
.LABEL $label$15
	CALL $69($7, *((($3 + [128]) + [116])))
	$5 = *((($3 + [128]) + [88]))
	if ( ($5 == 0) ){ goto $label$18 }
	*((($3 + [128]) + [92])) = $5
	CALL $11($5)
	if ( $22 ){ goto $label$17 }
	goto $label$8 
	
.LABEL $label$18
	if ( ($22 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$18 = ($18 + [-128])
	$24 = $4
	$4 = ($4 + [-128])
	goto $label$10 
	
.LABEL $label$16
	$25 = $4
	goto $label$8 
	
.LABEL $label$9
	$25 = $0
	
.LABEL $label$8
	$18 = CALL memcpy($25, ($3 + [256]), [88])
	$5 = *($26)
	if ( ($5 == 0) ){ goto $label$19 }
	*($27) = $5
	CALL $11($5)
	*($26) = [0]
	*($27) = (int_64)0
	
.LABEL $label$19
	*($26) = *($17)
	$4 = (($3 + [256]) + [92])
	*($27) = *($4)
	$5 = *($20)
	*($20) = [0]
	*($28) = $5
	*($17) = (int_64)0
	*(($18 + [104])) = *($13)
	CALL $69($16, *($15))
	*($16) = *($6)
	$18 = *($9)
	*($15) = $18
	$5 = *($23)
	*($30) = $5
	if ( $5 ){ goto $label$21 }
	*($16) = $15
	CALL $69($6, *($9))
	$5 = *($17)
	if ( $5 ){ goto $label$20 }
	goto $label$5 
	
.LABEL $label$21
	*($18 + [8]) = $15
	*($6) = $9
	*($9) = (int_64)0
	CALL $69($6, [0])
	$5 = *($17)
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$20
	*($4) = $5
	CALL $11($5)
	
.LABEL $label$5
	$14 = ($14 + [128])
	$4 = $19
	$5 = ($19 + [128])
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$1
	$global$0 = ($3 + [640])
}

void .FUNC $5 (int_32 $0)
{
}

void .FUNC $127 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	CALL prints([10827])
	$3 = ($0 + [192])
	*($2 + [16]) = $3
	*($2 + [8]) = (int_64))((int_64)0 - $1)
	CALL $150(($2 + [24]), ($2 + [16]), ($2 + [8]))
	$4 = *($2 + [28])
	if ( ($4 == 0) ){ goto $label$1 }
	if ( ((int_64)*($2 + [8]) != (int_64))((int_64)0 - *($4 + [64]))) ){ goto $label$1 }
	$1 = *($4)
	$6 = *(($0 + [220]))
	$5 = *(($0 + [216]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$4 = ($6 + [-24])
	$7 = *($4)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$4 }
	$6 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	if ( ((int_32)*($7 + [124]) == (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$6
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*(($0 + [192])), *(($0 + [200])), (int_64)-3617168760277827584, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $111($3, $4)
	if ( ((int_32)*($7 + [124]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$2
	$4 = CALL db_next_i64(*($7 + [128]), ($2 + [24]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	CALL $111($3, $4)
	
.LABEL $label$7
	CALL $112($3, $7)
	CALL prints([10847])
	
.LABEL $label$1
	$global$0 = ($2 + [32])
}

void .FUNC $3 (int_32 $0)
{
}

int_32 .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($1 + [8])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$8 = ($1 + [4])
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	
.LOOP $label$4:
	$7 = $6
	CALL $190(CALL $190($0, ($7 + [16])), ($7 + [28]))
	$3 = *($7 + [4])
	if ( ($3 == 0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = $3
	$3 = *($6)
	if ( $3 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$6 = *($7 + [8])
	if ( ((int_32)*($6) == (int_32)$7) ){ goto $label$5 }
	$7 = ($7 + [8])
	
.LOOP $label$8:
	$3 = *($7)
	$7 = ($3 + [8])
	$6 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($6)) ){ goto $label$8 }
	
.LABEL $label$5
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $49 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_64 $19
	int_64 $20
	$1 = ($global$0 - [320])
	$global$0 = $1
	CALL require_auth(*($0))
	CALL prints([9430])
	CALL prints([9448])
	*(($2 = ($1 + [184]))) = (int_64)0
	*(($3 = ($1 + [192]))) = (int_64)0
	*((($1 + [168]) + [8])) = (int_64)0
	*(($4 = ($1 + [188]))) = [0]
	*($3) = [0]
	*($2) = $4
	*($1 + [168]) = (int_64)0
	$3 = ($0 + [32])
	CALL $68(($1 + [288]), $3, ($1 + [168]))
	CALL $69($2, *($4))
	*($1 + [296]) = (int_64)1
	*($1 + [288]) = [0]
	CALL $93($3, ($1 + [288]), *($0))
	*($1 + [284]) = [131073]
	*($1 + [280]) = [0]
	*($1 + [272]) = (int_64)0
	*($1 + [168]) = [600]
	CALL $94(($1 + [272]), ($1 + [168]))
	*($1 + [168]) = [480]
	$4 = *($1 + [280])
	$2 = *($1 + [276])
	if ( ((uint_32)$2 >= (uint_32)$4) ){ goto $label$4 }
	*($2) = (int_64)480
	$2 = ($2 + [8])
	*($1 + [276]) = $2
	*($1 + [168]) = [300]
	if ( ($2 <= $4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $94(($1 + [272]), ($1 + [168]))
	$4 = *((($1 + [272]) + [8]))
	$2 = *($1 + [276])
	*($1 + [168]) = [300]
	if ( ((uint_32)$2 >= (uint_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	*($2) = (int_64)300
	*($1 + [276]) = ($2 + [8])
	goto $label$1 
	
.LABEL $label$2
	CALL $94(($1 + [272]), ($1 + [168]))
	
.LABEL $label$1
	$5 = (($1 + [256]) | [4])
	*($1 + [256]) = $5
	*($1 + [260 align=4]) = (int_64)0
	CALL prints([9484])
	$6 = (($1 + [168]) + [72])
	$7 = (($1 + [80]) + [72])
	$8 = (($1 + [80]) + [76])
	$9 = (($1 + [168]) + [76])
	$10 = ($1 + [224])
	$11 = ($1 + [216])
	$12 = (($1 + [168]) + [16])
	$13 = (($1 + [168]) + [24])
	$14 = ($1 + [200])
	$15 = ($1 + [208])
	$16 = ($1 + [232])
	$17 = [0]
	
.LOOP $label$5:
	CALL prints([9616])
	$2 = ($17 << [4])
	$19 = *(($2 + [9536]))
	CALL printn($19)
	CALL prints([9632])
	*($10) = (int_64)0
	*($11) = (int_64)0
	*($9) = (int_64)0
	*($6) = $9
	*((($1 + [168]) + [8])) = [1]
	*($12) = *(($2 + [9544]))
	*($13) = (int_64)10
	*($14) = (int_64)10
	*($15) = (int_64)5
	*($1 + [168]) = $19
	$2 = CALL $1([8858])
	if ( ($2 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10603])
	goto $label$7 
	
.LABEL $label$8
	if ( $2 ){ goto $label$7 }
	$18 = (int_64)0
	goto $label$6 
	
.LABEL $label$7
	$19 = (int_64)0
	
.LOOP $label$9:
	$4 = *(($2 + [8857]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [10648])
	
.LABEL $label$10
	$19 = ((int_64)((int_64)$19 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$9 }
	$18 = ((int_64)$19 << (int_64)8)
	
.LABEL $label$6
	$19 = (uint_64)$18 >> (uint_64)(int_64)8)
	$20 = ((int_64)$18 | (int_64)4)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $19) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$18 = (uint_64)$19 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$19 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$19 = $18
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$19 = $18
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$19 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$19 = (uint_64)$19 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$3 = ($2 + [1])
	$2 = $3
	if ( $4 ){ goto $label$15 }
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [10750])
	
.LABEL $label$11
	*($10) = $20
	*($11) = (int_64)10000
	*($16) = (int_64)10
	CALL memcpy(($1 + [80]), ($1 + [168]), [72])
	*($8) = (int_64)0
	*($7) = $8
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$16 }
	
.LOOP $label$17:
	$3 = $4
	$2 = ($3 + [16])
	CALL $95($7, $8, $2, $2)
	$2 = *($3 + [4])
	if ( ($2 == 0) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = $2
	$2 = *($4)
	if ( $2 ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$4 = *($3 + [8])
	if ( ((int_32)*($4) == (int_32)$3) ){ goto $label$18 }
	$3 = ($3 + [8])
	
.LOOP $label$21:
	$2 = *($3)
	$3 = ($2 + [8])
	$4 = *($2 + [8])
	if ( ((int_32)$2 != (int_32)*($4)) ){ goto $label$21 }
	
.LABEL $label$18
	if ( ((int_32)$4 != (int_32)$9) ){ goto $label$17 }
	
.LABEL $label$16
	CALL $96($0, ($1 + [80]))
	CALL $69($7, *($8))
	CALL $69($6, *($9))
	$17 = ($17 + [1])
	if ( ((int_32)$17 != (int_32)[5]) ){ goto $label$5 }
	*(($1 + [184])) = (int_64)0
	*(($1 + [192])) = (int_64)0
	*(($8 = ($1 + [212]))) = (int_64)0
	*($1 + [176]) = (int_64)0
	*($1 + [168]) = (int_64)1
	*($1 + [208]) = $8
	*((($1 + [64]) + [8])) = [0]
	*($1 + [64]) = (int_64)0
	$4 = CALL $1([9298])
	if ( ((uint_32)$4 > (uint_32)[-17]) ){ goto $label$22 }
	$9 = (($1 + [64]) | [1])
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$25 }
	*($1 + [64]) = ($4 << [1])
	$17 = $9
	if ( $4 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$2 = (($4 + [16]) & [-16])
	$17 = CALL $9($2)
	*(($1 + [72])) = $17
	*($1 + [64]) = ($2 | [1])
	*($1 + [68]) = $4
	
.LABEL $label$24
	CALL memcpy($17, [9298], $4)
	
.LABEL $label$23
	$7 = (($1 + [8]) + [40])
	$3 = (($1 + [168]) + [40])
	$6 = ($1 + [188])
	$2 = (($1 + [168]) + [8])
	*(($17 + $4)) = [0]
	$4 = ($1 + [176])
	if ( (*($4) & [1]) ){ goto $label$27 }
	*($4) = [0]
	goto $label$26 
	
.LABEL $label$27
	*(*(($1 + [184]))) = [0]
	*(($1 + [180])) = [0]
	
.LABEL $label$26
	CALL $29($2, [0])
	*(($2 + [8])) = *((($1 + [64]) + [8]))
	*($2) = *($1 + [64])
	$4 = *($1 + [272])
	$17 = *($1 + [276])
	*(($1 + [200])) = (int_64)50
	CALL $97($6, $4, $17)
	CALL $98($3, *($1 + [256]), $5)
	$17 = CALL $99(($1 + [8]), ($1 + [168]))
	CALL $100($0, $17)
	CALL $69($7, *(($1 + [52])))
	$4 = *(($1 + [28]))
	if ( ($4 == 0) ){ goto $label$28 }
	*(($1 + [32])) = $4
	CALL $11($4)
	
.LABEL $label$28
	if ( ((*((($1 + [8]) + [8])) & [1]) == 0) ){ goto $label$29 }
	CALL $11(*(($1 + [24])))
	
.LABEL $label$29
	CALL $69($3, *(($1 + [212])))
	$4 = *(($1 + [188]))
	if ( ($4 == 0) ){ goto $label$30 }
	*(($1 + [192])) = $4
	CALL $11($4)
	
.LABEL $label$30
	$4 = (($1 + [168]) + [8])
	if ( ((*($4) & [1]) == 0) ){ goto $label$31 }
	CALL $11(*(($1 + [184])))
	
.LABEL $label$31
	*($4) = (int_64)0
	*(($1 + [184])) = (int_64)0
	*(($1 + [192])) = (int_64)0
	*(($1 + [212])) = (int_64)0
	*(($1 + [208])) = $8
	*($1 + [168]) = *($1 + [286])
	*((($1 + [64]) + [8])) = [0]
	*($1 + [64]) = (int_64)0
	$4 = CALL $1([9298])
	if ( ((uint_32)$4 > (uint_32)[-17]) ){ goto $label$22 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$34 }
	*($1 + [64]) = ($4 << [1])
	if ( $4 ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	$8 = (($4 + [16]) & [-16])
	$9 = CALL $9($8)
	*(($1 + [72])) = $9
	*($1 + [64]) = ($8 | [1])
	*($1 + [68]) = $4
	
.LABEL $label$33
	CALL memcpy($9, [9298], $4)
	
.LABEL $label$32
	*(($9 + $4)) = [0]
	$4 = ($1 + [176])
	if ( (*($4) & [1]) ){ goto $label$36 }
	*($4) = [0]
	goto $label$35 
	
.LABEL $label$36
	*(*(($1 + [184]))) = [0]
	*(($1 + [180])) = [0]
	
.LABEL $label$35
	CALL $29($2, [0])
	*(($2 + [8])) = *((($1 + [64]) + [8]))
	*($2) = *($1 + [64])
	$2 = *($1 + [272])
	$4 = *($1 + [276])
	*(($1 + [200])) = (int_64)50
	CALL $97($6, $2, $4)
	CALL $98($3, *($1 + [256]), $5)
	CALL $100($0, CALL $99($17, ($1 + [168])))
	CALL $69($7, *(($1 + [52])))
	$2 = *(($1 + [28]))
	if ( ($2 == 0) ){ goto $label$37 }
	*(($1 + [32])) = $2
	CALL $11($2)
	
.LABEL $label$37
	if ( ((*((($1 + [8]) + [8])) & [1]) == 0) ){ goto $label$38 }
	CALL $11(*(($1 + [24])))
	
.LABEL $label$38
	CALL $69($3, *(($1 + [212])))
	$2 = *(($1 + [188]))
	if ( ($2 == 0) ){ goto $label$39 }
	*(($1 + [192])) = $2
	CALL $11($2)
	
.LABEL $label$39
	if ( ((*(($1 + [176])) & [1]) == 0) ){ goto $label$40 }
	CALL $11(*(($1 + [184])))
	
.LABEL $label$40
	CALL $69(($1 + [256]), *($1 + [260]))
	$2 = *($1 + [272])
	if ( ($2 == 0) ){ goto $label$41 }
	*($1 + [276]) = $2
	CALL $11($2)
	
.LABEL $label$41
	CALL $69(($1 + [304]), *(($1 + [308])))
	$global$0 = ($1 + [320])
	return (unreachable)
	
.LABEL $label$22
	CALL $24(($1 + [64]))
}

int_32 .FUNC $48 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [336])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [272]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [280]) = [0]
	*($4 + [252]) = $2
	*($4 + [248]) = $2
	*($4 + [256]) = ($2 + $7)
	*($4 + [320]) = ($4 + [248])
	*($4 + [16]) = ($4 + [264])
	CALL $131(($4 + [16]), ($4 + [320]))
	*(($3 = ($4 + [8]))) = *($4 + [256])
	*($4) = *($4 + [248])
	$3 = *($3)
	*((($4 + [288]) + [8])) = $3
	*(($8 = (($4 + [304]) + [8]))) = $3
	$9 = *($4)
	*($4 + [304]) = $9
	*($4 + [288]) = $9
	$3 = *($8)
	*((($4 + [320]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [304])
	*($4 + [32]) = $1
	*($4 + [320]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [176])) = $0
	*(($4 + [184])) = (int_64)-1
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [200])) = [0]
	*(($4 + [192])) = (int_64)0
	*(($4 + [206])) = [0]
	*(($4 + [204])) = [0]
	*(($4 + [216])) = $0
	*(($4 + [224])) = (int_64)-1
	*(($4 + [232])) = (int_64)0
	*(($4 + [240])) = [0]
	*(($4 + [244])) = [0]
	*($4 + [208]) = $0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$8 = *($4 + [280])
	$0 = *($4 + [272])
	$1 = *($4 + [264])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ((int_32)($8 & [255]) != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	CALL $65(($4 + [16]))
	$global$0 = ($4 + [336])
	return [1]
}

void .FUNC $0 ()
{
	CALL $4()
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = ($global$0 - [64])
	$global$0 = $2
	CALL require_auth(*($0))
	$1 = CALL $99(($2 + [8]), $1)
	CALL $100($0, $1)
	CALL $69(($1 + [40]), *(($1 + [44])))
	$0 = *($1 + [20])
	if ( ($0 == 0) ){ goto $label$1 }
	*(($1 + [24])) = $0
	CALL $11($0)
	
.LABEL $label$1
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$2 }
	CALL $11(*(($1 + [16])))
	
.LABEL $label$2
	$global$0 = ($2 + [64])
}

int_32 .FUNC $42 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [28])) = $2
	*(($4 + [32])) = ($2 + $7)
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [198])) = [0]
	*(($4 + [196])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	CALL $65(($4 + [8]))
	$global$0 = ($4 + [240])
	return [1]
}

void .FUNC $41 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	$1 = ($global$0 - [1216])
	$global$0 = $1
	CALL $66(($1 + [904]))
	$2 = *($0)
	CALL eosio_assert((((int_64)*($1 + [912]) == (int_64)$2) | ((int_64)*($1 + [904]) == (int_64)$2)), [8514])
	if ( ((int_64)*($1 + [912]) != (int_64)*($0)) ){ goto $label$12 }
	$3 = ($1 + [936])
	$4 = CALL $25(($1 + [872]), $3)
	*(($1 + [864])) = [0]
	*($1 + [856]) = (int_64)0
	$5 = CALL $1([8551])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$11 }
	*($1 + [856]) = ($5 << [1])
	$6 = (($1 + [856]) | [1])
	if ( $5 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	if ( (*(($1 + [936])) & [1]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$11
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $9($7)
	*($1 + [856]) = ($7 | [1])
	*($1 + [864]) = $6
	*($1 + [860]) = $5
	
.LABEL $label$10
	CALL memcpy($6, [8551], $5)
	
.LABEL $label$9
	*(($6 + $5)) = [0]
	CALL $67(($1 + [888]), $0, $4, ($1 + [856]))
	if ( ((*($1 + [856]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*($1 + [864]))
	
.LABEL $label$13
	if ( ((*($4) & [1]) == 0) ){ goto $label$14 }
	CALL $11(*($4 + [8]))
	
.LABEL $label$14
	$6 = *($1 + [888])
	if ( ((int_32)(*($1 + [892]) - $6) != (int_32)[24]) ){ goto $label$6 }
	*(($5 = (($1 + [1080]) + [16]))) = (int_64)0
	*(($6 = (($1 + [1080]) + [24]))) = (int_64)0
	*(($1 + [1088])) = (int_64)0
	*(($4 = (($1 + [1080]) + [20]))) = [0]
	*($6) = [0]
	*($5) = $4
	*($1 + [1080]) = (int_64)0
	CALL $68(($1 + [952]), ($0 + [32]), ($1 + [1080]))
	CALL $69($5, *($4))
	CALL eosio_assert(*($1 + [952]), [10252])
	CALL $69((($1 + [952]) + [16]), *((($1 + [952]) + [20])))
	$5 = *($1 + [888])
	$4 = *($5)
	if ( ($4 & [1]) ){ goto $label$16 }
	$4 = uint_32($4 >> [1])
	$5 = ($5 + [1])
	goto $label$15 
	
.LABEL $label$16
	$4 = *($5 + [4])
	$5 = *($5 + [8])
	
.LABEL $label$15
	*($1 + [844]) = $4
	*($1 + [840]) = $5
	*($1 + [80]) = *($1 + [840])
	$8 = CALL $40(($1 + [848]), ($1 + [80]))
	$9 = [0]
	*(($1 + [832])) = [0]
	*($1 + [816]) = (int_64)-1
	*($1 + [824]) = (int_64)0
	$2 = *($0)
	*($1 + [800]) = $2
	$10 = *($1 + [904])
	*($1 + [808]) = $10
	$5 = CALL db_find_i64($2, $10, (int_64)3607749778735104000, *($8))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$17 }
	$9 = CALL $70(($1 + [800]), $5)
	if ( ((int_32)*($9 + [8]) == (int_32)($1 + [800])) ){ goto $label$17 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$17
	$2 = *($8)
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$21 }
	$4 = [0]
	$6 = *([0] + [10272])
	
.LOOP $label$23:
	*((($1 + [1080]) + ($5 = $4))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$2 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$5 == (int_32)[12]) )))))
	$4 = ($5 + [1])
	if ( ((uint_32)$5 > (uint_32)[11]) ){ goto $label$22 }
	$2 = ((int_64)$2 << (int_64)5)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$23 }
	
.LABEL $label$22
	*(($1 + [792])) = [0]
	*($1 + [784]) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$20 }
	*($1 + [784]) = ($4 << [1])
	$6 = (($1 + [784]) | [1])
	goto $label$19 
	
.LABEL $label$21
	*(($1 + [792])) = [0]
	*($1 + [784]) = (int_64)0
	*($1 + [784]) = [0]
	$5 = (($1 + [784]) | [1])
	goto $label$18 
	
.LABEL $label$20
	$7 = (($4 + [16]) & [-16])
	$6 = CALL $9($7)
	*($1 + [784]) = ($7 | [1])
	*($1 + [792]) = $6
	*($1 + [788]) = $4
	
.LABEL $label$19
	$7 = ($5 + [1])
	$5 = [0]
	
.LOOP $label$24:
	*(($6 + $5)) = *((($1 + [1080]) + $5))
	$5 = ($5 + [1])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$24 }
	$5 = ($6 + $4)
	
.LABEL $label$18
	*($5) = [0]
	$11 = CALL $26(($1 + [768]), ($1 + [784]), [0], [6], ($1 + [784]))
	*(($1 + [1088])) = [0]
	*($1 + [1080]) = (int_64)0
	$5 = CALL $1([8553])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$27 }
	*($1 + [1080]) = ($5 << [1])
	$4 = (($1 + [1080]) | [1])
	if ( $5 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$6 = (($5 + [16]) & [-16])
	$4 = CALL $9($6)
	*($1 + [1080]) = ($6 | [1])
	*($1 + [1088]) = $4
	*($1 + [1084]) = $5
	
.LABEL $label$26
	CALL memcpy($4, [8553], $5)
	
.LABEL $label$25
	*(($4 + $5)) = [0]
	$7 = [1]
	$5 = ($5 & [1])
	$5 = *($1 + [1080])
	$6 = ($5 & [1])
	$5 = *($1 + [768])
	$12 = uint_32($5 >> [1])
	$13 = ( *($11 + [4]) ? $12 : $6 )
	if ( ((int_32)$13 != (int_32)( *($1 + [1084]) ? uint_32($5 >> [1]) : $5 )) ){ goto $label$28 }
	$5 = ( *($1 + [1088]) ? (($1 + [1080]) | [1]) : $5 )
	$4 = ($11 + [1])
	if ( $6 ){ goto $label$30 }
	if ( ($13 == 0) ){ goto $label$29 }
	$6 = ([0] - $12)
	$7 = [1]
	
.LOOP $label$31:
	if ( ((int_32)*($4) != (int_32)*($5)) ){ goto $label$28 }
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$6 = ($6 + [1])
	if ( $6 ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	if ( ($13 == 0) ){ goto $label$29 }
	$7 = ((int_32)CALL $18(( *($11 + [8]) ? $4 : $6 ), $5, $13) != (int_32)[0])
	goto $label$28 
	
.LABEL $label$29
	$7 = [0]
	
.LABEL $label$28
	CALL eosio_assert($7, [8560])
	if ( ((*($1 + [1080]) & [1]) == 0) ){ goto $label$32 }
	CALL $11(*($1 + [1088]))
	
.LABEL $label$32
	$5 = [1]
	if ( ((int_32)*(( *($1 + [792]) ? (($1 + [784]) | [1]) : (*($1 + [784]) & [1]) )) != (int_32)[46]) ){ goto $label$33 }
	$5 = ((int_32)CALL $32(($1 + [784]), [46], [0]) != (int_32)CALL $33(($1 + [784]), [46], [-1]))
	
.LABEL $label$33
	CALL eosio_assert($5, [8591])
	CALL eosio_assert(($9 == 0), [8623])
	*($1 + [752]) = [8465]
	*($1 + [756]) = CALL $1([8465])
	*($1 + [72]) = *($1 + [752])
	$12 = CALL $40(($1 + [760]), ($1 + [72]))
	$5 = *($1 + [888])
	if ( (((int_32)(*($1 + [892]) - $5) / (int_32)[12]) <= [2]) ){ goto $label$2 }
	$4 = *($5 + [12])
	$6 = ($4 & [1])
	if ( $6 ){ goto $label$34 }
	if ( (uint_32($4 >> [1]) == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$34
	if ( *(($5 + [16])) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$8
	CALL $24(($1 + [856]))
	
.LABEL $label$7
	CALL $24(($1 + [1080]))
	
.LABEL $label$6
	$17 = [71]
	goto $label$1 
	
.LABEL $label$5
	$17 = [81]
	goto $label$1 
	
.LABEL $label$4
	$17 = [80]
	goto $label$1 
	
.LABEL $label$3
	if ( $6 ){ goto $label$36 }
	$4 = uint_32($4 >> [1])
	$5 = (($5 + [12]) + [1])
	goto $label$35 
	
.LABEL $label$36
	$4 = *(($5 + [16]))
	$5 = *(($5 + [20]))
	
.LABEL $label$35
	*($1 + [748]) = $4
	*($1 + [744]) = $5
	*($1 + [64]) = *($1 + [744])
	*($12) = *(CALL $40(($1 + [1080]), ($1 + [64])))
	
.LABEL $label$2
	$2 = CALL $71($8)
	$7 = ($0 + [72])
	$4 = *(($0 + [100]))
	$6 = *(($0 + [96]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$38 }
	
.LOOP $label$40:
	$5 = ($4 + [-24])
	$14 = *($5)
	if ( ((int_64)*($14) == (int_64)$2) ){ goto $label$39 }
	$4 = $5
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$38 }
	if ( ((int_32)*($14 + [84]) == (int_32)$7) ){ goto $label$37 }
	CALL eosio_assert([0], [11092])
	goto $label$37 
	
.LABEL $label$38
	$14 = [0]
	$5 = CALL db_find_i64(*($7), *(($0 + [80])), (int_64)-4131301141914845184, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$37 }
	$14 = CALL $72($7, $5)
	if ( ((int_32)*($14 + [84]) == (int_32)$7) ){ goto $label$37 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$37
	CALL eosio_assert(*($14 + [8]), [9922])
	$9 = [0]
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [9950])
	*(($1 + [736])) = [0]
	*(($5 = (($1 + [688]) + [8]))) = *(($1 + [928]))
	*($1 + [720]) = (int_64)-1
	*($1 + [728]) = (int_64)0
	*($1 + [680]) = $7
	*($1 + [684]) = $14
	*($1 + [704]) = *($0)
	*($1 + [712]) = *($14 + [16])
	*($1 + [740]) = [0]
	*($1 + [688]) = *($1 + [920])
	$2 = *($8)
	$10 = *($1 + [904])
	*((($1 + [48]) + [8])) = *($5)
	*($1 + [48]) = *($1 + [688])
	*($1 + [40]) = *($1 + [680])
	CALL $73(($1 + [1080]), $0, ($1 + [48]), $2, ($1 + [40]), $10)
	CALL $74(($1 + [656]), $0, *($8), [0])
	$13 = ($1 + [920])
	$2 = *(*($1 + [660]) + [64])
	$4 = *(($1 + [732]))
	$6 = *($1 + [728])
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$42 }
	
.LOOP $label$44:
	$5 = ($4 + [-24])
	$7 = *($5)
	if ( ((int_64)*($7 + [64]) == (int_64)$2) ){ goto $label$43 }
	$4 = $5
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$43
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$42 }
	if ( ((int_32)*($7 + [124]) == (int_32)($1 + [704])) ){ goto $label$45 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$45
	$9 = $7
	goto $label$41 
	
.LABEL $label$42
	$5 = CALL db_find_i64(*($1 + [704]), *((($1 + [704]) + [8])), (int_64)-6497942746098040832, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$41 }
	$9 = CALL $75(($1 + [704]), $5)
	if ( ((int_32)*($9 + [124]) == (int_32)($1 + [704])) ){ goto $label$41 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$41
	CALL prints([8415])
	CALL eosio_assert(((int_32)*($9 + [40]) ^ (int_32)[1]), [8431])
	*(($4 = (($1 + [528]) + [24]))) = (int_64)0
	*(($6 = ($1 + [624]))) = [0]
	*(($5 = ($1 + [644]))) = (int_64)0
	*($1 + [536]) = (int_64)0
	*($1 + [528]) = (int_64)0
	*($1 + [544]) = (int_64)0
	*($1 + [616]) = (int_64)0
	*($1 + [640]) = $5
	$2 = CALL current_time()
	$5 = ($13 + [8])
	*((($1 + [496]) + [24])) = *($5)
	*($1 + [496]) = *($1 + [904])
	*($1 + [504]) = *($12)
	*($1 + [512]) = *($13)
	$10 = ((int_64)$2 + (int_64)5)
	if ( (*($1 + [664]) == 0) ){ goto $label$58 }
	*((($1 + [480]) + [8])) = [0]
	*($1 + [480]) = (int_64)0
	$5 = CALL $1([8675])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$50 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$57 }
	*($1 + [480]) = ($5 << [1])
	$6 = (($1 + [480]) | [1])
	if ( $5 ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$58
	CALL prints([8478])
	CALL printn(*($8))
	CALL prints([8495])
	*($4) = *($5)
	*((($1 + [528]) + [8])) = *($1 + [904])
	*($1 + [544]) = *($13)
	*($1 + [528]) = *($8)
	*($1 + [560]) = (int_64)0
	*($1 + [568]) = [0]
	*($1 + [584]) = $10
	*($1 + [592]) = $10
	*($1 + [608]) = (int_64)0
	*($1 + [576]) = *(($14 + [16]))
	$4 = ($1 + [620])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*($6)) ){ goto $label$54 }
	*($5) = *($1 + [496])
	*(($5 + [24])) = *((($1 + [496]) + [24]))
	*(($5 + [16])) = *((($1 + [496]) + [16]))
	*(($5 + [8])) = *((($1 + [496]) + [8]))
	*($4) = (*($4) + [32])
	goto $label$51 
	
.LABEL $label$57
	$4 = (($5 + [16]) & [-16])
	$6 = CALL $9($4)
	*($1 + [480]) = ($4 | [1])
	*($1 + [488]) = $6
	*($1 + [484]) = $5
	
.LABEL $label$56
	CALL memcpy($6, [8675], $5)
	
.LABEL $label$55
	$4 = [0]
	*(($6 + $5)) = [0]
	$2 = *($8)
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$62 }
	$6 = *([0] + [10272])
	
.LOOP $label$64:
	*((($1 + [1080]) + ($5 = $4))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$2 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$5 == (int_32)[12]) )))))
	$4 = ($5 + [1])
	if ( ((uint_32)$5 > (uint_32)[11]) ){ goto $label$63 }
	$2 = ((int_64)$2 << (int_64)5)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$64 }
	
.LABEL $label$63
	*(($1 + [960])) = [0]
	*($1 + [952]) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$61 }
	*($1 + [952]) = ($4 << [1])
	$6 = (($1 + [952]) | [1])
	goto $label$60 
	
.LABEL $label$62
	*(($1 + [960])) = [0]
	*($1 + [952]) = (int_64)0
	*($1 + [952]) = [0]
	$5 = (($1 + [952]) | [1])
	$4 = $5
	goto $label$59 
	
.LABEL $label$61
	$7 = (($4 + [16]) & [-16])
	$6 = CALL $9($7)
	*($1 + [952]) = ($7 | [1])
	*($1 + [960]) = $6
	*($1 + [956]) = $4
	
.LABEL $label$60
	$7 = ($5 + [1])
	$5 = [0]
	
.LOOP $label$65:
	*(($6 + $5)) = *((($1 + [1080]) + $5))
	$5 = ($5 + [1])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$65 }
	$4 = ($6 + $4)
	$5 = (($1 + [952]) | [1])
	
.LABEL $label$59
	*($4) = [0]
	$4 = *($1 + [952])
	$6 = ($4 & [1])
	CALL $31(($1 + [480]), ( *($1 + [960]) ? $5 : $6 ), ( *($1 + [956]) ? uint_32($4 >> [1]) : $6 ))
	if ( ((*($1 + [952]) & [1]) == 0) ){ goto $label$66 }
	CALL $11(*(($1 + [960])))
	
.LABEL $label$66
	CALL $30(($1 + [480]), [8685])
	$12 = ($9 + [16])
	CALL $76(($1 + [1080]), $12)
	$5 = *($1 + [1080])
	$4 = ($5 & [1])
	CALL $31(($1 + [480]), ( *($1 + [1088]) ? (($1 + [1080]) | [1]) : $4 ), ( *($1 + [1084]) ? uint_32($5 >> [1]) : $4 ))
	if ( ((*($1 + [1080]) & [1]) == 0) ){ goto $label$67 }
	CALL $11(*(($1 + [1088])))
	
.LABEL $label$67
	CALL $30(($1 + [480]), [8703])
	$2 = *($9 + [8])
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$71 }
	$4 = [0]
	$6 = *([0] + [10272])
	
.LOOP $label$73:
	*((($1 + [1080]) + ($5 = $4))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$2 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$5 == (int_32)[12]) )))))
	$4 = ($5 + [1])
	if ( ((uint_32)$5 > (uint_32)[11]) ){ goto $label$72 }
	$2 = ((int_64)$2 << (int_64)5)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$73 }
	
.LABEL $label$72
	*(($1 + [960])) = [0]
	*($1 + [952]) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$70 }
	*($1 + [952]) = ($4 << [1])
	$6 = (($1 + [952]) | [1])
	goto $label$69 
	
.LABEL $label$71
	*(($1 + [960])) = [0]
	*($1 + [952]) = (int_64)0
	*($1 + [952]) = [0]
	$5 = (($1 + [952]) | [1])
	$4 = $5
	goto $label$68 
	
.LABEL $label$70
	$7 = (($4 + [16]) & [-16])
	$6 = CALL $9($7)
	*($1 + [952]) = ($7 | [1])
	*($1 + [960]) = $6
	*($1 + [956]) = $4
	
.LABEL $label$69
	$7 = ($5 + [1])
	$5 = [0]
	
.LOOP $label$74:
	*(($6 + $5)) = *((($1 + [1080]) + $5))
	$5 = ($5 + [1])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$74 }
	$4 = ($6 + $4)
	$5 = (($1 + [952]) | [1])
	
.LABEL $label$68
	*($4) = [0]
	$4 = *($1 + [952])
	$6 = ($4 & [1])
	CALL prints_l(( *($1 + [960]) ? $5 : $6 ), ( *($1 + [956]) ? uint_32($4 >> [1]) : $6 ))
	if ( ((*($1 + [952]) & [1]) == 0) ){ goto $label$75 }
	CALL $11(*(($1 + [960])))
	
.LABEL $label$75
	*($1 + [472]) = [0]
	*($1 + [464]) = (int_64)0
	$2 = *($0)
	*($1 + [432]) = [8404]
	*($1 + [436]) = CALL $1([8404])
	*($1 + [32]) = *($1 + [432])
	$5 = CALL $40(($1 + [440]), ($1 + [32]))
	*($1 + [448]) = $2
	*($1 + [456]) = *($5)
	*($1 + [416]) = [8336]
	*($1 + [420]) = CALL $1([8336])
	*($1 + [24]) = *($1 + [416])
	$5 = CALL $40(($1 + [424]), ($1 + [24]))
	*($1 + [400]) = [8348]
	*($1 + [404]) = CALL $1([8348])
	*($1 + [16]) = *($1 + [400])
	$4 = CALL $40(($1 + [408]), ($1 + [16]))
	$2 = *(($9 + [8]))
	*(($1 + [1104])) = *(($12 + [8]))
	*($1 + [1080]) = *($0)
	*($1 + [1096]) = *($12)
	*($1 + [1088]) = $2
	CALL $25(($1 + [1112]), ($1 + [480]))
	$12 = CALL $77(($1 + [952]), ($1 + [448]), *($5), *($4), ($1 + [1080]))
	if ( ((*($1 + [1112]) & [1]) == 0) ){ goto $label$76 }
	CALL $11(*(($1 + [1120])))
	
.LABEL $label$76
	$5 = *($1 + [468])
	if ( ((uint_32)$5 >= (uint_32)*((($1 + [464]) + [8]))) ){ goto $label$78 }
	CALL $78($5, $12)
	*($1 + [468]) = (*($1 + [468]) + [40])
	goto $label$77 
	
.LABEL $label$78
	CALL $79(($1 + [464]), $12)
	
.LABEL $label$77
	CALL $80($0, ($1 + [464]), (int_64)0, ((int_64)*($8) + (int_64)CALL $fimport$27()))
	CALL prints([8497])
	CALL printn(*($8))
	CALL prints([8495])
	*((($1 + [528]) + [8])) = *($1 + [904])
	*(($1 + [552])) = *(($13 + [8]))
	$15 = [0]
	*($1 + [568]) = [0]
	*($1 + [592]) = $10
	*($1 + [528]) = *($8)
	*($1 + [544]) = *($13)
	*($1 + [560]) = *($9 + [32])
	*($1 + [576]) = *($9 + [48])
	*($1 + [584]) = *($9 + [56])
	*($1 + [608]) = *($9 + [80])
	*($1 + [1080]) = (int_64)0
	*($1 + [1088]) = [0]
	$5 = *($9 + [88])
	$13 = ($9 + [92])
	$7 = *($13)
	$4 = ($7 - $5)
	if ( ($4 == 0) ){ goto $label$79 }
	$15 = int_32($4 >> [5])
	if ( ((uint_32)$15 >= (uint_32)[134217728]) ){ goto $label$49 }
	$6 = CALL $9($4)
	$15 = ($6 + ($15 << [5]))
	*((($1 + [1080]) + [8])) = $15
	*($1 + [1080]) = $6
	*($1 + [1084]) = $6
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$53 }
	$16 = (uint_32((($7 + [-32]) - $5) >> [5]) + [1])
	$4 = $6
	
.LOOP $label$80:
	*($4) = *($5)
	*(($4 + [24])) = *(($5 + [24]))
	*(($4 + [16])) = *(($5 + [16]))
	*(($4 + [8])) = *(($5 + [8]))
	$4 = ($4 + [32])
	$5 = ($5 + [32])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$80 }
	$7 = ($6 + ($16 << [5]))
	*($1 + [1084]) = $7
	$4 = $6
	$6 = $7
	goto $label$52 
	
.LABEL $label$79
	$6 = [0]
	$7 = [0]
	$4 = [0]
	goto $label$52 
	
.LABEL $label$54
	CALL $81(($1 + [616]), ($1 + [496]))
	goto $label$51 
	
.LABEL $label$53
	$7 = $6
	$4 = $6
	
.LABEL $label$52
	if ( ((int_64)*($14 + [32]) != (int_64)(CASTING uint_64)(uint_32 int_32((*($13) - *(($9 + [88]))) >> [5]))) ){ goto $label$81 }
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$82 }
	$5 = ($4 + [32])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$82 }
	
.LOOP $label$83:
	if ( ((int_64)*(($5 + [24])) == (int_64)*(($4 + [24]))) ){ goto $label$84 }
	CALL eosio_assert([0], [9635])
	
.LABEL $label$84
	$4 = ( $4 ? $5 : ((int_64)*(($5 + [16])) > (int_64)*($4 + [16])) )
	$5 = ($5 + [32])
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$83 }
	$7 = *($1 + [1084])
	
.LABEL $label$82
	$13 = ($4 + [32])
	$5 = ($7 - $13)
	$6 = int_32($5 >> [5])
	if ( ($5 == 0) ){ goto $label$85 }
	CALL memmove($4, $13, $5)
	
.LABEL $label$85
	*($1 + [1084]) = ($4 + ($6 << [5]))
	CALL prints([8716])
	CALL printn(*($4))
	CALL prints([8495])
	$15 = *(($1 + [1088]))
	$6 = *($1 + [1084])
	
.LABEL $label$81
	if ( ((uint_32)$6 >= (uint_32)$15) ){ goto $label$87 }
	*($6) = *($1 + [496])
	*(($6 + [24])) = *((($1 + [496]) + [24]))
	*(($6 + [16])) = *((($1 + [496]) + [16]))
	*(($6 + [8])) = *((($1 + [496]) + [8]))
	*($1 + [1084]) = ($6 + [32])
	goto $label$86 
	
.LABEL $label$87
	CALL $81(($1 + [1080]), ($1 + [496]))
	
.LABEL $label$86
	$5 = *(($9 + [88]))
	$4 = *(($9 + [92]))
	CALL prints([8731])
	CALL printui((CASTING uint_64)(uint_32 int_32(($4 - $5) >> [5])))
	CALL prints([8495])
	$5 = *($1 + [1080])
	$4 = *($1 + [1084])
	CALL prints([8755])
	CALL printui((CASTING uint_64)(uint_32 int_32(($4 - $5) >> [5])))
	CALL prints([8495])
	CALL $82((($1 + [528]) + [88]), *($1 + [1080]), *($1 + [1084]))
	$5 = *($1 + [1080])
	if ( ($5 == 0) ){ goto $label$88 }
	*($1 + [1084]) = $5
	CALL $11($5)
	
.LABEL $label$88
	$5 = *($12 + [28])
	if ( ($5 == 0) ){ goto $label$89 }
	*(($12 + [32])) = $5
	CALL $11($5)
	
.LABEL $label$89
	$5 = *($12 + [16])
	if ( ($5 == 0) ){ goto $label$90 }
	*(($12 + [20])) = $5
	CALL $11($5)
	
.LABEL $label$90
	$7 = *($1 + [464])
	if ( ($7 == 0) ){ goto $label$91 }
	$5 = *($1 + [468])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$93 }
	
.LOOP $label$94:
	$4 = *(($5 + [-12]))
	if ( ($4 == 0) ){ goto $label$95 }
	*(($5 + [-8])) = $4
	CALL $11($4)
	
.LABEL $label$95
	$4 = ($5 + [-40])
	$6 = *(($5 + [-24]))
	if ( ($6 == 0) ){ goto $label$96 }
	*(($5 + [-20])) = $6
	CALL $11($6)
	
.LABEL $label$96
	$5 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$94 }
	$5 = *($1 + [464])
	goto $label$92 
	
.LABEL $label$93
	$5 = $7
	
.LABEL $label$92
	*($1 + [468]) = $7
	CALL $11($5)
	
.LABEL $label$91
	if ( ((*($1 + [480]) & [1]) == 0) ){ goto $label$51 }
	CALL $11(*($1 + [488]))
	
.LABEL $label$51
	*($1 + [392]) = ($1 + [704])
	*($1 + [1080]) = (int_64)0
	CALL $83(($1 + [384]), ($1 + [392]), ($1 + [1080]))
	*($1 + [456]) = [0]
	*($1 + [448]) = (int_64)0
	*($1 + [488]) = [0]
	*($1 + [480]) = (int_64)0
	$4 = *($1 + [388])
	if ( ($4 == 0) ){ goto $label$46 }
	$7 = ($1 + [456])
	$5 = [1]
	$6 = [0]
	if ( ((uint_32)[0] >= (uint_32)[0]) ){ goto $label$47 }
	goto $label$48 
	
.LABEL $label$50
	CALL $24(($1 + [480]))
	
.LABEL $label$49
	CALL $34(($1 + [1080]))
	
.LABEL $label$48
	$17 = [182]
	goto $label$1 
	
.LABEL $label$47
	$17 = [0]
	goto $label$1 
	
.LABEL $label$46
	$17 = [2]
	
.LABEL $label$1
	
.LOOP $label$97:
	goto $label$403 
	
.LABEL $label$405
	$5 = ($5 + [1])
	$6 = *($1 + [452])
	if ( ((uint_32)$6 >= (uint_32)*($7)) ){ goto $label$222 }
	$17 = [182]
	goto $label$97 
	
.LABEL $label$404
	CALL $84($6, $4)
	*($1 + [452]) = (*($1 + [452]) + [128])
	goto $label$221 
	
.LABEL $label$403
	CALL $85(($1 + [448]), $4)
	$17 = [1]
	goto $label$97 
	
.LABEL $label$402
	CALL $86(($1 + [384]))
	if ( ((uint_32)$5 > (uint_32)[49]) ){ goto $label$220 }
	$17 = [180]
	goto $label$97 
	
.LABEL $label$401
	$4 = *($1 + [388])
	if ( $4 ){ goto $label$219 }
	$17 = [2]
	goto $label$97 
	
.LABEL $label$400
	$18 = ($0 + [112])
	$2 = *(($14 + [16]))
	$4 = *(($0 + [140]))
	$7 = *(($0 + [136]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$218 }
	$17 = [3]
	goto $label$97 
	
.LABEL $label$399
	$17 = [4]
	goto $label$97 
	
.LABEL $label$398
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$2) ){ goto $label$215 }
	$17 = [5]
	goto $label$97 
	
.LABEL $label$397
	$4 = $5
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$216 }
	goto $label$217 
	
.LABEL $label$396
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$214 }
	$17 = [178]
	goto $label$97 
	
.LABEL $label$395
	if ( ((int_32)*($6 + [52]) == (int_32)$18) ){ goto $label$212 }
	$17 = [179]
	goto $label$97 
	
.LABEL $label$394
	CALL eosio_assert([0], [11092])
	goto $label$211 
	
.LABEL $label$393
	$6 = CALL $87($18, CALL $fimport$25(*($18), *(($0 + [120])), (int_64)7343588134136840192, $2))
	if ( ((int_32)*($6 + [52]) == (int_32)$18) ){ goto $label$213 }
	$17 = [7]
	goto $label$97 
	
.LABEL $label$392
	CALL eosio_assert([0], [11092])
	$17 = [8]
	goto $label$97 
	
.LABEL $label$391
	$5 = *(($6 + [24]))
	$4 = *($6 + [20])
	*($1 + [464]) = (int_64)0
	$5 = ($5 - $4)
	$19 = int_32($5 >> [3])
	*($1 + [472]) = [0]
	if ( ((int_32)$5 <= (int_32)[0]) ){ goto $label$210 }
	$17 = [130]
	goto $label$97 
	
.LABEL $label$390
	$15 = (($1 + [1080]) + [112])
	$20 = (($1 + [952]) + [112])
	$21 = (($1 + [464]) + [8])
	$16 = (($1 + [1080]) + [116])
	$22 = (($1 + [1080]) + [88])
	$23 = (($1 + [1080]) + [92])
	$24 = [0]
	$25 = [0]
	$17 = [131]
	goto $label$97 
	
.LABEL $label$389
	$12 = *($1 + [452])
	$4 = *($1 + [448])
	if ( ((int_32)$4 == (int_32)$12) ){ goto $label$132 }
	$17 = [132]
	goto $label$97 
	
.LABEL $label$388
	$5 = ($4 + [128])
	if ( ((int_32)$5 == (int_32)$12) ){ goto $label$130 }
	$17 = [133]
	goto $label$97 
	
.LABEL $label$387
	CALL $84(($1 + [1080]), $4)
	CALL $84(($1 + [952]), $5)
	$7 = (($1 + [952]) + [24])
	$6 = (($1 + [1080]) + [24])
	if ( ((int_64)*($6) == (int_64)*($7)) ){ goto $label$129 }
	$17 = [134]
	goto $label$97 
	
.LABEL $label$386
	CALL eosio_assert([0], [9635])
	$17 = [135]
	goto $label$97 
	
.LABEL $label$385
	$13 = (($1 + [952]) + [16])
	$10 = *($13)
	$9 = (($1 + [1080]) + [16])
	$2 = *($9)
	if ( ((int_64)$2 != (int_64)$10) ){ goto $label$128 }
	$17 = [170]
	goto $label$97 
	
.LABEL $label$384
	$2 = *((($1 + [952]) + [80]))
	$10 = *((($1 + [1080]) + [80]))
	if ( (int_64)($10 == 0) ){ goto $label$101 }
	$17 = [171]
	goto $label$97 
	
.LABEL $label$383
	if ( (int_64)($2 == 0) ){ goto $label$100 }
	$17 = [172]
	goto $label$97 
	
.LABEL $label$382
	$10 = *((($1 + [952]) + [64]))
	$2 = *((($1 + [1080]) + [64]))
	if ( ((int_64)$2 != (int_64)$10) ){ goto $label$98 }
	$17 = [174]
	goto $label$97 
	
.LABEL $label$381
	$7 = ((uint_64)*((($1 + [1080]) + [56])) <= (uint_64)*((($1 + [952]) + [56])))
	goto $label$124 
	
.LABEL $label$380
	if ( ((int_64)*($6) == (int_64)*($7)) ){ goto $label$127 }
	$17 = [137]
	goto $label$97 
	
.LABEL $label$379
	CALL eosio_assert([0], [9635])
	$10 = *($13)
	$2 = *($9)
	$17 = [138]
	goto $label$97 
	
.LABEL $label$378
	$7 = ((int_64)$2 >= (int_64)$10)
	goto $label$126 
	
.LABEL $label$377
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$99 }
	$17 = [175]
	goto $label$97 
	
.LABEL $label$376
	$7 = ((int_64)$10 != (int_64)0)
	goto $label$125 
	
.LABEL $label$375
	$7 = ((uint_64)$2 <= (uint_64)$10)
	$17 = [139]
	goto $label$97 
	
.LABEL $label$374
	CALL $69($20, *((($1 + [952]) + [116])))
	$6 = *((($1 + [952]) + [88]))
	if ( ($6 == 0) ){ goto $label$123 }
	$17 = [140]
	goto $label$97 
	
.LABEL $label$373
	*((($1 + [952]) + [92])) = $6
	CALL $11($6)
	$17 = [141]
	goto $label$97 
	
.LABEL $label$372
	CALL $69($15, *($16))
	$6 = *($22)
	if ( ($6 == 0) ){ goto $label$122 }
	$17 = [142]
	goto $label$97 
	
.LABEL $label$371
	*($23) = $6
	CALL $11($6)
	$17 = [143]
	goto $label$97 
	
.LABEL $label$370
	$4 = ( $4 ? $5 : $7 )
	$5 = ($5 + [128])
	if ( ((int_32)$12 != (int_32)$5) ){ goto $label$131 }
	$17 = [144]
	goto $label$97 
	
.LABEL $label$369
	$5 = CALL $84(($1 + [1080]), $4)
	$7 = *($21)
	$6 = *($1 + [468])
	if ( ((int_64)*($4) != (int_64)*($8)) ){ goto $label$121 }
	$17 = [167]
	goto $label$97 
	
.LABEL $label$368
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$102 }
	$17 = [169]
	goto $label$97 
	
.LABEL $label$367
	CALL $84($6, ($1 + [528]))
	*($1 + [468]) = (*($1 + [468]) + [128])
	$24 = [1]
	goto $label$117 
	
.LABEL $label$366
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$120 }
	$17 = [166]
	goto $label$97 
	
.LABEL $label$365
	CALL $84($6, $5)
	*($1 + [468]) = (*($1 + [468]) + [128])
	goto $label$119 
	
.LABEL $label$364
	CALL $88(($1 + [464]), ($1 + [528]))
	$24 = [1]
	goto $label$118 
	
.LABEL $label$363
	CALL $88(($1 + [464]), $5)
	$17 = [147]
	goto $label$97 
	
.LABEL $label$362
	$6 = *($1 + [484])
	if ( ((uint_32)$6 >= (uint_32)*((($1 + [480]) + [8]))) ){ goto $label$116 }
	$17 = [165]
	goto $label$97 
	
.LABEL $label$361
	CALL $84($6, $5)
	*($1 + [484]) = (*($1 + [484]) + [128])
	$6 = *($1 + [452])
	$5 = ($4 + [128])
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$113 }
	goto $label$114 
	
.LABEL $label$360
	CALL $88(($1 + [480]), $5)
	$6 = *($1 + [452])
	$5 = ($4 + [128])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$115 }
	$17 = [149]
	goto $label$97 
	
.LABEL $label$359
	$26 = ($6 + [-128])
	$5 = $4
	$17 = [150]
	goto $label$97 
	
.LABEL $label$358
	$4 = ($5 + [128])
	$5 = CALL memcpy($5, $4, [88])
	$7 = ($5 + [88])
	$6 = *($7)
	if ( ($6 == 0) ){ goto $label$109 }
	$17 = [151]
	goto $label$97 
	
.LABEL $label$357
	*(($5 + [92])) = $6
	CALL $11($6)
	*(($6 = ($5 + [96]))) = [0]
	*($5 + [88 align=4]) = (int_64)0
	goto $label$108 
	
.LABEL $label$356
	$6 = ($5 + [96])
	$17 = [152]
	goto $label$97 
	
.LABEL $label$355
	$9 = ($5 + [216])
	*($7) = *($9)
	$7 = ($5 + [224])
	$13 = *($7)
	*($7) = [0]
	*($6) = $13
	*($9) = (int_64)0
	*(($5 + [104])) = *(($5 + [232]))
	$6 = ($5 + [116])
	$7 = ($5 + [112])
	CALL $69($7, *($6))
	$13 = ($5 + [240])
	*($7) = *($13)
	$9 = ($5 + [244])
	$12 = *($9)
	*($6) = $12
	$5 = *(($5 + [248]))
	*(($5 + [120])) = $5
	if ( ($5 == 0) ){ goto $label$107 }
	$17 = [153]
	goto $label$97 
	
.LABEL $label$354
	*($12 + [8]) = $6
	*($13) = $9
	*($9) = (int_64)0
	$5 = $4
	if ( ((int_32)$26 != (int_32)$4) ){ goto $label$110 }
	goto $label$111 
	
.LABEL $label$353
	*($7) = $6
	$5 = $4
	if ( ((int_32)$26 != (int_32)$4) ){ goto $label$112 }
	$17 = [154]
	goto $label$97 
	
.LABEL $label$352
	$5 = *($1 + [452])
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$105 }
	$17 = [155]
	goto $label$97 
	
.LABEL $label$351
	CALL $69(($5 + [-16]), *(($5 + [-12])))
	$6 = ($5 + [-128])
	$7 = *(($5 + [-40]))
	if ( ($7 == 0) ){ goto $label$104 }
	$17 = [156]
	goto $label$97 
	
.LABEL $label$350
	*(($5 + [-36])) = $7
	CALL $11($7)
	$17 = [157]
	goto $label$97 
	
.LABEL $label$349
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$106 }
	$17 = [158]
	goto $label$97 
	
.LABEL $label$348
	*($1 + [452]) = $4
	CALL $69($15, *($16))
	$5 = *($22)
	if ( ($5 == 0) ){ goto $label$103 }
	$17 = [159]
	goto $label$97 
	
.LABEL $label$347
	*($23) = $5
	CALL $11($5)
	$17 = [160]
	goto $label$97 
	
.LABEL $label$346
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)$19) ){ goto $label$133 }
	$17 = [161]
	goto $label$97 
	
.LABEL $label$345
	CALL prints([8766])
	$9 = [1]
	if ( (($24 & [1]) == 0) ){ goto $label$209 }
	$17 = [162]
	goto $label$97 
	
.LABEL $label$344
	$5 = *($1 + [468])
	$4 = *($1 + [464])
	*($1 + [1080]) = [16]
	CALL $89($4, $5, ($1 + [1080]))
	goto $label$205 
	
.LABEL $label$343
	CALL prints([8766])
	$17 = [10]
	goto $label$97 
	
.LABEL $label$342
	$5 = *($1 + [468])
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [472]))) ){ goto $label$208 }
	$17 = [129]
	goto $label$97 
	
.LABEL $label$341
	CALL $84($5, ($1 + [528]))
	$5 = (*($1 + [468]) + [128])
	*($1 + [468]) = $5
	goto $label$207 
	
.LABEL $label$340
	CALL $88(($1 + [464]), ($1 + [528]))
	$5 = *($1 + [468])
	$17 = [12]
	goto $label$97 
	
.LABEL $label$339
	$4 = *($1 + [464])
	*($1 + [1080]) = [16]
	CALL $89($4, $5, ($1 + [1080]))
	$9 = [1]
	$5 = *($1 + [468])
	$4 = ($5 + [-128])
	if ( ((int_64)*($4) != (int_64)*($1 + [528])) ){ goto $label$204 }
	$17 = [125]
	goto $label$97 
	
.LABEL $label$338
	if ( ((uint_32)int_32(($5 - *($1 + [464])) >> [7]) <= (uint_32)$19) ){ goto $label$206 }
	$17 = [126]
	goto $label$97 
	
.LABEL $label$337
	CALL $69(($5 + [-16]), *(($5 + [-12])))
	$6 = *(($5 + [-40]))
	if ( ($6 == 0) ){ goto $label$134 }
	$17 = [127]
	goto $label$97 
	
.LABEL $label$336
	*(($5 + [-36])) = $6
	CALL $11($6)
	$17 = [128]
	goto $label$97 
	
.LABEL $label$335
	*($1 + [468]) = $4
	$9 = [0]
	$17 = [13]
	goto $label$97 
	
.LABEL $label$334
	$2 = *(($14 + [16]))
	$4 = *(($0 + [140]))
	$7 = *(($0 + [136]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$203 }
	$17 = [14]
	goto $label$97 
	
.LABEL $label$333
	$17 = [15]
	goto $label$97 
	
.LABEL $label$332
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$2) ){ goto $label$200 }
	$17 = [16]
	goto $label$97 
	
.LABEL $label$331
	$4 = $5
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$201 }
	goto $label$202 
	
.LABEL $label$330
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$199 }
	$17 = [123]
	goto $label$97 
	
.LABEL $label$329
	if ( ((int_32)*($6 + [52]) == (int_32)$18) ){ goto $label$196 }
	$17 = [124]
	goto $label$97 
	
.LABEL $label$328
	CALL eosio_assert([0], [11092])
	goto $label$195 
	
.LABEL $label$327
	$6 = [0]
	$5 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)7343588134136840192, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$198 }
	$17 = [18]
	goto $label$97 
	
.LABEL $label$326
	$6 = CALL $87($18, $5)
	if ( ((int_32)*($6 + [52]) == (int_32)$18) ){ goto $label$197 }
	$17 = [19]
	goto $label$97 
	
.LABEL $label$325
	CALL eosio_assert([0], [11092])
	$17 = [20]
	goto $label$97 
	
.LABEL $label$324
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [10323])
	if ( ($9 == 0) ){ goto $label$194 }
	$17 = [90]
	goto $label$97 
	
.LABEL $label$323
	$9 = CALL $84(($1 + [256]), ($1 + [528]))
	*($1 + [252]) = $6
	*($1 + [248]) = $18
	*($1 + [232]) = (int_64)0
	*($1 + [240]) = [0]
	$5 = (*($1 + [484]) - *($1 + [480]))
	if ( ($5 == 0) ){ goto $label$152 }
	$17 = [91]
	goto $label$97 
	
.LABEL $label$322
	$6 = int_32($5 >> [7])
	if ( ((uint_32)$6 >= (uint_32)[33554432]) ){ goto $label$151 }
	$17 = [92]
	goto $label$97 
	
.LABEL $label$321
	$4 = CALL $9($5)
	*(($1 + [240])) = ($4 + ($6 << [7]))
	*($1 + [232]) = $4
	*($1 + [236]) = $4
	$6 = *($1 + [484])
	$5 = *($1 + [480])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$150 }
	$17 = [93]
	goto $label$97 
	
.LABEL $label$320
	$17 = [94]
	goto $label$97 
	
.LABEL $label$319
	CALL $84($4, $5)
	$4 = (*($1 + [236]) + [128])
	*($1 + [236]) = $4
	$5 = ($5 + [128])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$149 }
	$17 = [95]
	goto $label$97 
	
.LABEL $label$318
	*($1 + [224]) = [0]
	*($1 + [216]) = (int_64)0
	$5 = (*($1 + [468]) - *($1 + [464]))
	if ( ($5 == 0) ){ goto $label$148 }
	$17 = [96]
	goto $label$97 
	
.LABEL $label$317
	$6 = int_32($5 >> [7])
	if ( ((uint_32)$6 >= (uint_32)[33554432]) ){ goto $label$147 }
	$17 = [97]
	goto $label$97 
	
.LABEL $label$316
	$4 = CALL $9($5)
	*(($1 + [224])) = ($4 + ($6 << [7]))
	*($1 + [216]) = $4
	*($1 + [220]) = $4
	$6 = *($1 + [468])
	$5 = *($1 + [464])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$146 }
	$17 = [98]
	goto $label$97 
	
.LABEL $label$315
	$17 = [99]
	goto $label$97 
	
.LABEL $label$314
	CALL $84($4, $5)
	$4 = (*($1 + [220]) + [128])
	*($1 + [220]) = $4
	$5 = ($5 + [128])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$145 }
	$17 = [100]
	goto $label$97 
	
.LABEL $label$313
	*($1 + [8]) = *($1 + [248])
	CALL $90($0, $9, ($1 + [8]), [1], ($1 + [232]), ($1 + [216]), [1])
	$7 = *($1 + [216])
	if ( ($7 == 0) ){ goto $label$144 }
	$17 = [101]
	goto $label$97 
	
.LABEL $label$312
	$5 = *($1 + [220])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$143 }
	$17 = [102]
	goto $label$97 
	
.LABEL $label$311
	$17 = [103]
	goto $label$97 
	
.LABEL $label$310
	CALL $69(($5 + [-16]), *(($5 + [-12])))
	$4 = ($5 + [-128])
	$6 = *(($5 + [-40]))
	if ( ($6 == 0) ){ goto $label$141 }
	$17 = [104]
	goto $label$97 
	
.LABEL $label$309
	*(($5 + [-36])) = $6
	CALL $11($6)
	$17 = [105]
	goto $label$97 
	
.LABEL $label$308
	$5 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$142 }
	$17 = [106]
	goto $label$97 
	
.LABEL $label$307
	$5 = *($1 + [216])
	goto $label$140 
	
.LABEL $label$306
	*($1 + [560]) = ((int_64)*($1 + [560]) + (int_64)1)
	*($1 + [592]) = CALL current_time()
	CALL $91($0, ($1 + [528]), (int_64)0, [0])
	goto $label$193 
	
.LABEL $label$305
	$5 = $7
	$17 = [107]
	goto $label$97 
	
.LABEL $label$304
	*($1 + [220]) = $7
	CALL $11($5)
	$17 = [108]
	goto $label$97 
	
.LABEL $label$303
	$7 = *($1 + [232])
	if ( ($7 == 0) ){ goto $label$139 }
	$17 = [109]
	goto $label$97 
	
.LABEL $label$302
	$5 = *($1 + [236])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$138 }
	$17 = [110]
	goto $label$97 
	
.LABEL $label$301
	$17 = [111]
	goto $label$97 
	
.LABEL $label$300
	CALL $69(($5 + [-16]), *(($5 + [-12])))
	$4 = ($5 + [-128])
	$6 = *(($5 + [-40]))
	if ( ($6 == 0) ){ goto $label$136 }
	$17 = [112]
	goto $label$97 
	
.LABEL $label$299
	*(($5 + [-36])) = $6
	CALL $11($6)
	$17 = [113]
	goto $label$97 
	
.LABEL $label$298
	$5 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$137 }
	$17 = [114]
	goto $label$97 
	
.LABEL $label$297
	$5 = *($1 + [232])
	goto $label$135 
	
.LABEL $label$296
	$5 = $7
	$17 = [115]
	goto $label$97 
	
.LABEL $label$295
	*($1 + [236]) = $7
	CALL $11($5)
	$17 = [116]
	goto $label$97 
	
.LABEL $label$294
	CALL $69(($9 + [112]), *(($9 + [116])))
	$5 = *($9 + [88])
	if ( ($5 == 0) ){ goto $label$192 }
	$17 = [117]
	goto $label$97 
	
.LABEL $label$293
	*(($9 + [92])) = $5
	CALL $11($5)
	$17 = [22]
	goto $label$97 
	
.LABEL $label$292
	CALL $74(($1 + [1080]), $0, *($1 + [528]), [1])
	$5 = CALL $84(($1 + [88]), *($1 + [1084]))
	CALL prints([10213])
	$2 = *($0)
	*($1 + [956]) = $5
	*($1 + [952]) = $0
	CALL $92(($1 + [1208]), ($0 + [192]), $2, ($1 + [952]))
	CALL $69(($5 + [112]), *(($5 + [116])))
	$4 = *($5 + [88])
	if ( ($4 == 0) ){ goto $label$191 }
	$17 = [23]
	goto $label$97 
	
.LABEL $label$291
	*(($5 + [92])) = $4
	CALL $11($4)
	$17 = [24]
	goto $label$97 
	
.LABEL $label$290
	$7 = *($1 + [464])
	if ( ($7 == 0) ){ goto $label$190 }
	$17 = [25]
	goto $label$97 
	
.LABEL $label$289
	$5 = *($1 + [468])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$189 }
	$17 = [26]
	goto $label$97 
	
.LABEL $label$288
	$17 = [27]
	goto $label$97 
	
.LABEL $label$287
	CALL $69(($5 + [-16]), *(($5 + [-12])))
	$4 = ($5 + [-128])
	$6 = *(($5 + [-40]))
	if ( ($6 == 0) ){ goto $label$187 }
	$17 = [28]
	goto $label$97 
	
.LABEL $label$286
	*(($5 + [-36])) = $6
	CALL $11($6)
	$17 = [29]
	goto $label$97 
	
.LABEL $label$285
	$5 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$188 }
	$17 = [30]
	goto $label$97 
	
.LABEL $label$284
	$5 = *($1 + [464])
	goto $label$186 
	
.LABEL $label$283
	$5 = $7
	$17 = [31]
	goto $label$97 
	
.LABEL $label$282
	*($1 + [468]) = $7
	CALL $11($5)
	$17 = [32]
	goto $label$97 
	
.LABEL $label$281
	$7 = *($1 + [480])
	if ( ($7 == 0) ){ goto $label$185 }
	$17 = [33]
	goto $label$97 
	
.LABEL $label$280
	$5 = *($1 + [484])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$184 }
	$17 = [34]
	goto $label$97 
	
.LABEL $label$279
	$17 = [35]
	goto $label$97 
	
.LABEL $label$278
	CALL $69(($5 + [-16]), *(($5 + [-12])))
	$4 = ($5 + [-128])
	$6 = *(($5 + [-40]))
	if ( ($6 == 0) ){ goto $label$182 }
	$17 = [36]
	goto $label$97 
	
.LABEL $label$277
	*(($5 + [-36])) = $6
	CALL $11($6)
	$17 = [37]
	goto $label$97 
	
.LABEL $label$276
	$5 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$183 }
	$17 = [38]
	goto $label$97 
	
.LABEL $label$275
	$5 = *($1 + [480])
	goto $label$181 
	
.LABEL $label$274
	$5 = $7
	$17 = [39]
	goto $label$97 
	
.LABEL $label$273
	*($1 + [484]) = $7
	CALL $11($5)
	$17 = [40]
	goto $label$97 
	
.LABEL $label$272
	$7 = *($1 + [448])
	if ( ($7 == 0) ){ goto $label$180 }
	$17 = [41]
	goto $label$97 
	
.LABEL $label$271
	$5 = *($1 + [452])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$179 }
	$17 = [42]
	goto $label$97 
	
.LABEL $label$270
	$17 = [43]
	goto $label$97 
	
.LABEL $label$269
	CALL $69(($5 + [-16]), *(($5 + [-12])))
	$4 = ($5 + [-128])
	$6 = *(($5 + [-40]))
	if ( ($6 == 0) ){ goto $label$177 }
	$17 = [44]
	goto $label$97 
	
.LABEL $label$268
	*(($5 + [-36])) = $6
	CALL $11($6)
	$17 = [45]
	goto $label$97 
	
.LABEL $label$267
	$5 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$178 }
	$17 = [46]
	goto $label$97 
	
.LABEL $label$266
	$5 = *($1 + [448])
	goto $label$176 
	
.LABEL $label$265
	$5 = $7
	$17 = [47]
	goto $label$97 
	
.LABEL $label$264
	*($1 + [452]) = $7
	CALL $11($5)
	$17 = [48]
	goto $label$97 
	
.LABEL $label$263
	CALL $69(($1 + [640]), *(($1 + [644])))
	$5 = *(($1 + [616]))
	if ( ($5 == 0) ){ goto $label$175 }
	$17 = [49]
	goto $label$97 
	
.LABEL $label$262
	*(($1 + [620])) = $5
	CALL $11($5)
	$17 = [50]
	goto $label$97 
	
.LABEL $label$261
	$7 = *($1 + [728])
	if ( ($7 == 0) ){ goto $label$174 }
	$17 = [51]
	goto $label$97 
	
.LABEL $label$260
	$9 = ($1 + [732])
	$4 = *($9)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$173 }
	$17 = [52]
	goto $label$97 
	
.LABEL $label$259
	$17 = [53]
	goto $label$97 
	
.LABEL $label$258
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$171 }
	$17 = [54]
	goto $label$97 
	
.LABEL $label$257
	CALL $69(($5 + [112]), *(($5 + [116])))
	$6 = *($5 + [88])
	if ( ($6 == 0) ){ goto $label$170 }
	$17 = [55]
	goto $label$97 
	
.LABEL $label$256
	*(($5 + [92])) = $6
	CALL $11($6)
	$17 = [56]
	goto $label$97 
	
.LABEL $label$255
	CALL $11($5)
	$17 = [57]
	goto $label$97 
	
.LABEL $label$254
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$172 }
	$17 = [58]
	goto $label$97 
	
.LABEL $label$253
	$5 = *(($1 + [728]))
	goto $label$169 
	
.LABEL $label$252
	$5 = $7
	$17 = [59]
	goto $label$97 
	
.LABEL $label$251
	*($9) = $7
	CALL $11($5)
	$17 = [60]
	goto $label$97 
	
.LABEL $label$250
	if ( (*($1 + [768]) & [1]) ){ goto $label$168 }
	$17 = [85]
	goto $label$97 
	
.LABEL $label$249
	if ( (*($1 + [784]) & [1]) ){ goto $label$167 }
	$17 = [84]
	goto $label$97 
	
.LABEL $label$248
	$6 = *($1 + [824])
	if ( $6 ){ goto $label$164 }
	goto $label$165 
	
.LABEL $label$247
	CALL $11(*($11 + [8]))
	if ( ((*($1 + [784]) & [1]) == 0) ){ goto $label$166 }
	$17 = [62]
	goto $label$97 
	
.LABEL $label$246
	CALL $11(*(($1 + [792])))
	$6 = *($1 + [824])
	if ( ($6 == 0) ){ goto $label$163 }
	$17 = [63]
	goto $label$97 
	
.LABEL $label$245
	$7 = ($1 + [828])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$162 }
	$17 = [64]
	goto $label$97 
	
.LABEL $label$244
	$17 = [65]
	goto $label$97 
	
.LABEL $label$243
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$160 }
	$17 = [66]
	goto $label$97 
	
.LABEL $label$242
	CALL $11($4)
	$17 = [67]
	goto $label$97 
	
.LABEL $label$241
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$161 }
	$17 = [68]
	goto $label$97 
	
.LABEL $label$240
	$5 = *(($1 + [824]))
	goto $label$159 
	
.LABEL $label$239
	$5 = $6
	$17 = [69]
	goto $label$97 
	
.LABEL $label$238
	*($7) = $6
	CALL $11($5)
	$17 = [70]
	goto $label$97 
	
.LABEL $label$237
	$6 = *($1 + [888])
	$17 = [71]
	goto $label$97 
	
.LABEL $label$236
	if ( ($6 == 0) ){ goto $label$158 }
	$17 = [72]
	goto $label$97 
	
.LABEL $label$235
	$4 = *($1 + [892])
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$157 }
	$17 = [73]
	goto $label$97 
	
.LABEL $label$234
	$17 = [74]
	goto $label$97 
	
.LABEL $label$233
	$5 = ($4 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$155 }
	$17 = [75]
	goto $label$97 
	
.LABEL $label$232
	CALL $11(*(($4 + [-4])))
	$17 = [76]
	goto $label$97 
	
.LABEL $label$231
	$4 = $5
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$156 }
	$17 = [77]
	goto $label$97 
	
.LABEL $label$230
	$5 = *($1 + [888])
	goto $label$154 
	
.LABEL $label$229
	$5 = $6
	$17 = [78]
	goto $label$97 
	
.LABEL $label$228
	*($1 + [892]) = $6
	CALL $11($5)
	$17 = [79]
	goto $label$97 
	
.LABEL $label$227
	if ( ((*($3) & [1]) == 0) ){ goto $label$153 }
	$17 = [80]
	goto $label$97 
	
.LABEL $label$226
	CALL $11(*(($1 + [944])))
	$17 = [81]
	goto $label$97 
	
.LABEL $label$225
	$global$0 = ($1 + [1216])
	return (unreachable)
	
.LABEL $label$224
	CALL $34(($1 + [232]))
	
.LABEL $label$223
	CALL $34(($1 + [216]))
	
.LABEL $label$222
	$17 = [0]
	goto $label$97 
	
.LABEL $label$221
	$17 = [1]
	goto $label$97 
	
.LABEL $label$220
	$17 = [2]
	goto $label$97 
	
.LABEL $label$219
	$17 = [181]
	goto $label$97 
	
.LABEL $label$218
	$17 = [6]
	goto $label$97 
	
.LABEL $label$217
	$17 = [6]
	goto $label$97 
	
.LABEL $label$216
	$17 = [4]
	goto $label$97 
	
.LABEL $label$215
	$17 = [177]
	goto $label$97 
	
.LABEL $label$214
	$17 = [6]
	goto $label$97 
	
.LABEL $label$213
	$17 = [8]
	goto $label$97 
	
.LABEL $label$212
	$17 = [8]
	goto $label$97 
	
.LABEL $label$211
	$17 = [8]
	goto $label$97 
	
.LABEL $label$210
	$17 = [9]
	goto $label$97 
	
.LABEL $label$209
	$17 = [10]
	goto $label$97 
	
.LABEL $label$208
	$17 = [11]
	goto $label$97 
	
.LABEL $label$207
	$17 = [12]
	goto $label$97 
	
.LABEL $label$206
	$17 = [13]
	goto $label$97 
	
.LABEL $label$205
	$17 = [13]
	goto $label$97 
	
.LABEL $label$204
	$17 = [13]
	goto $label$97 
	
.LABEL $label$203
	$17 = [17]
	goto $label$97 
	
.LABEL $label$202
	$17 = [17]
	goto $label$97 
	
.LABEL $label$201
	$17 = [15]
	goto $label$97 
	
.LABEL $label$200
	$17 = [122]
	goto $label$97 
	
.LABEL $label$199
	$17 = [17]
	goto $label$97 
	
.LABEL $label$198
	$17 = [20]
	goto $label$97 
	
.LABEL $label$197
	$17 = [20]
	goto $label$97 
	
.LABEL $label$196
	$17 = [20]
	goto $label$97 
	
.LABEL $label$195
	$17 = [20]
	goto $label$97 
	
.LABEL $label$194
	$17 = [21]
	goto $label$97 
	
.LABEL $label$193
	$17 = [22]
	goto $label$97 
	
.LABEL $label$192
	$17 = [22]
	goto $label$97 
	
.LABEL $label$191
	$17 = [24]
	goto $label$97 
	
.LABEL $label$190
	$17 = [32]
	goto $label$97 
	
.LABEL $label$189
	$17 = [89]
	goto $label$97 
	
.LABEL $label$188
	$17 = [27]
	goto $label$97 
	
.LABEL $label$187
	$17 = [29]
	goto $label$97 
	
.LABEL $label$186
	$17 = [31]
	goto $label$97 
	
.LABEL $label$185
	$17 = [40]
	goto $label$97 
	
.LABEL $label$184
	$17 = [88]
	goto $label$97 
	
.LABEL $label$183
	$17 = [35]
	goto $label$97 
	
.LABEL $label$182
	$17 = [37]
	goto $label$97 
	
.LABEL $label$181
	$17 = [39]
	goto $label$97 
	
.LABEL $label$180
	$17 = [48]
	goto $label$97 
	
.LABEL $label$179
	$17 = [87]
	goto $label$97 
	
.LABEL $label$178
	$17 = [43]
	goto $label$97 
	
.LABEL $label$177
	$17 = [45]
	goto $label$97 
	
.LABEL $label$176
	$17 = [47]
	goto $label$97 
	
.LABEL $label$175
	$17 = [50]
	goto $label$97 
	
.LABEL $label$174
	$17 = [60]
	goto $label$97 
	
.LABEL $label$173
	$17 = [86]
	goto $label$97 
	
.LABEL $label$172
	$17 = [53]
	goto $label$97 
	
.LABEL $label$171
	$17 = [57]
	goto $label$97 
	
.LABEL $label$170
	$17 = [56]
	goto $label$97 
	
.LABEL $label$169
	$17 = [59]
	goto $label$97 
	
.LABEL $label$168
	$17 = [61]
	goto $label$97 
	
.LABEL $label$167
	$17 = [62]
	goto $label$97 
	
.LABEL $label$166
	$17 = [84]
	goto $label$97 
	
.LABEL $label$165
	$17 = [70]
	goto $label$97 
	
.LABEL $label$164
	$17 = [63]
	goto $label$97 
	
.LABEL $label$163
	$17 = [70]
	goto $label$97 
	
.LABEL $label$162
	$17 = [83]
	goto $label$97 
	
.LABEL $label$161
	$17 = [65]
	goto $label$97 
	
.LABEL $label$160
	$17 = [67]
	goto $label$97 
	
.LABEL $label$159
	$17 = [69]
	goto $label$97 
	
.LABEL $label$158
	$17 = [79]
	goto $label$97 
	
.LABEL $label$157
	$17 = [82]
	goto $label$97 
	
.LABEL $label$156
	$17 = [74]
	goto $label$97 
	
.LABEL $label$155
	$17 = [76]
	goto $label$97 
	
.LABEL $label$154
	$17 = [78]
	goto $label$97 
	
.LABEL $label$153
	$17 = [81]
	goto $label$97 
	
.LABEL $label$152
	$17 = [95]
	goto $label$97 
	
.LABEL $label$151
	$17 = [121]
	goto $label$97 
	
.LABEL $label$150
	$17 = [95]
	goto $label$97 
	
.LABEL $label$149
	$17 = [94]
	goto $label$97 
	
.LABEL $label$148
	$17 = [100]
	goto $label$97 
	
.LABEL $label$147
	$17 = [120]
	goto $label$97 
	
.LABEL $label$146
	$17 = [100]
	goto $label$97 
	
.LABEL $label$145
	$17 = [99]
	goto $label$97 
	
.LABEL $label$144
	$17 = [108]
	goto $label$97 
	
.LABEL $label$143
	$17 = [119]
	goto $label$97 
	
.LABEL $label$142
	$17 = [103]
	goto $label$97 
	
.LABEL $label$141
	$17 = [105]
	goto $label$97 
	
.LABEL $label$140
	$17 = [107]
	goto $label$97 
	
.LABEL $label$139
	$17 = [116]
	goto $label$97 
	
.LABEL $label$138
	$17 = [118]
	goto $label$97 
	
.LABEL $label$137
	$17 = [111]
	goto $label$97 
	
.LABEL $label$136
	$17 = [113]
	goto $label$97 
	
.LABEL $label$135
	$17 = [115]
	goto $label$97 
	
.LABEL $label$134
	$17 = [128]
	goto $label$97 
	
.LABEL $label$133
	$17 = [131]
	goto $label$97 
	
.LABEL $label$132
	$17 = [161]
	goto $label$97 
	
.LABEL $label$131
	$17 = [133]
	goto $label$97 
	
.LABEL $label$130
	$17 = [144]
	goto $label$97 
	
.LABEL $label$129
	$17 = [135]
	goto $label$97 
	
.LABEL $label$128
	$17 = [136]
	goto $label$97 
	
.LABEL $label$127
	$17 = [138]
	goto $label$97 
	
.LABEL $label$126
	$17 = [139]
	goto $label$97 
	
.LABEL $label$125
	$17 = [139]
	goto $label$97 
	
.LABEL $label$124
	$17 = [139]
	goto $label$97 
	
.LABEL $label$123
	$17 = [141]
	goto $label$97 
	
.LABEL $label$122
	$17 = [143]
	goto $label$97 
	
.LABEL $label$121
	$17 = [145]
	goto $label$97 
	
.LABEL $label$120
	$17 = [146]
	goto $label$97 
	
.LABEL $label$119
	$17 = [147]
	goto $label$97 
	
.LABEL $label$118
	$17 = [147]
	goto $label$97 
	
.LABEL $label$117
	$17 = [147]
	goto $label$97 
	
.LABEL $label$116
	$17 = [148]
	goto $label$97 
	
.LABEL $label$115
	$17 = [155]
	goto $label$97 
	
.LABEL $label$114
	$17 = [155]
	goto $label$97 
	
.LABEL $label$113
	$17 = [149]
	goto $label$97 
	
.LABEL $label$112
	$17 = [150]
	goto $label$97 
	
.LABEL $label$111
	$17 = [154]
	goto $label$97 
	
.LABEL $label$110
	$17 = [150]
	goto $label$97 
	
.LABEL $label$109
	$17 = [164]
	goto $label$97 
	
.LABEL $label$108
	$17 = [152]
	goto $label$97 
	
.LABEL $label$107
	$17 = [163]
	goto $label$97 
	
.LABEL $label$106
	$17 = [155]
	goto $label$97 
	
.LABEL $label$105
	$17 = [158]
	goto $label$97 
	
.LABEL $label$104
	$17 = [157]
	goto $label$97 
	
.LABEL $label$103
	$17 = [160]
	goto $label$97 
	
.LABEL $label$102
	$17 = [168]
	goto $label$97 
	
.LABEL $label$101
	$17 = [176]
	goto $label$97 
	
.LABEL $label$100
	$17 = [175]
	goto $label$97 
	
.LABEL $label$99
	$17 = [172]
	goto $label$97 
	
.LABEL $label$98
	$17 = [173]
	goto $label$97 
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	$17
	(unreachable)
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [9694])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [9799])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [9732])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [9799])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $47 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [80])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL require_auth($1)
	CALL eosio_assert(((int_64)CALL $71(($4 + [40])) == (int_64)$1), [9308])
	CALL eosio_assert(((int_32)CALL $fimport$34(*($4 + [40])) ^ (int_32)[1]), [9336])
	$5 = [0]
	*(($4 + [32])) = [0]
	*($4 + [8]) = $1
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	$2 = *($0)
	*($4) = $2
	$6 = CALL db_find_i64($2, $1, (int_64)3607749778735104000, *($4 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $70($4, $6)
	if ( ((int_32)*($5 + [8]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$1
	if ( ($3 == 0) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$5 }
	CALL eosio_assert([0], [9382])
	$3 = *($4 + [24])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	if ( $5 ){ goto $label$7 }
	CALL eosio_assert([0], [11175])
	CALL eosio_assert([0], [11209])
	
.LABEL $label$7
	$0 = CALL db_next_i64(*($5 + [12]), ($4 + [64]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$8 }
	CALL $70($4, $0)
	
.LABEL $label$8
	CALL $132($4, $5)
	goto $label$4 
	
.LABEL $label$5
	$2 = *($0)
	if ( ((int_64)*($4) == (int_64)CALL current_receiver()) ){ goto $label$9 }
	CALL eosio_assert([0], [9865])
	
.LABEL $label$9
	*(($5 = CALL $9([24])) + [8]) = $4
	*($5) = *($4 + [40])
	CALL memcpy(($4 + [64]), $5, [8])
	$1 = *($5)
	$3 = CALL db_store_i64(*(($4 + [8])), (int_64)3607749778735104000, $2, $1, ($4 + [64]), [8])
	*($5 + [12]) = $3
	$0 = ($4 + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$10 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($4 + [56]) = $5
	$1 = *($5)
	*($4 + [64]) = $1
	*($4 + [52]) = $3
	$6 = ($4 + [28])
	$0 = *($6)
	if ( ((uint_32)$0 >= (uint_32)*(($4 + [32]))) ){ goto $label$12 }
	*($0 + [8]) = $1
	*($0 + [16]) = $3
	*($4 + [56]) = [0]
	*($0) = $5
	*($6) = ($0 + [24])
	$5 = *($4 + [56])
	*($4 + [56]) = [0]
	if ( ($5 == 0) ){ goto $label$4 }
	goto $label$11 
	
.LABEL $label$12
	CALL $133(($4 + [24]), ($4 + [56]), ($4 + [64]), ($4 + [52]))
	$5 = *($4 + [56])
	*($4 + [56]) = [0]
	if ( ($5 == 0) ){ goto $label$4 }
	
.LABEL $label$11
	CALL $11($5)
	$3 = *($4 + [24])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = *($4 + [24])
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($4 + [28])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$14 }
	
.LOOP $label$15:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$16 }
	CALL $11($0)
	
.LABEL $label$16
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$15 }
	$5 = *(($4 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $3
	
.LABEL $label$13
	*($6) = $3
	CALL $11($5)
	
.LABEL $label$2
	$global$0 = ($4 + [80])
}

int_32 .FUNC $46 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [232]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$5
	CALL memcpy(($4 + [232]), $2, [8])
	*(($4 + [20])) = ($2 + [8])
	*(($4 + [24])) = $3
	*(($4 + [40])) = $0
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [190])) = [0]
	*(($4 + [188])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [228])) = [0]
	*($4 + [152]) = $0
	*($4 + [192]) = $0
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [232])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $3($2)
	
.LABEL $label$7
	CALL $65($4)
	$global$0 = ($4 + [240])
	return [1]
}

void .FUNC $45 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_32 $20
	$2 = ($global$0 - [448])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [184])) = (int_64)0
	*($2 + [160]) = $1
	*($2 + [168]) = (int_64)-1
	*($2 + [176]) = (int_64)0
	*($2 + [152]) = *($0)
	$3 = ($0 + [112])
	$5 = *(($0 + [140]))
	$4 = *(($0 + [136]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [52]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [11092])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [120])), (int_64)7343588134136840192, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $87($3, $6)
	if ( ((int_32)*($7 + [52]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$1
	*($2 + [144]) = ($2 + [152])
	*($2 + [320]) = (int_64)0
	CALL $83(($2 + [136]), ($2 + [144]), ($2 + [320]))
	*($2 + [128]) = [0]
	*($2 + [120]) = (int_64)0
	*($2 + [320]) = (int_64)0
	CALL $83(($2 + [112]), ($2 + [144]), ($2 + [320]))
	*($2 + [108]) = [0]
	*($2 + [32]) = *($2 + [112])
	*($2 + [104]) = ($2 + [144])
	*($2 + [24]) = *($2 + [104])
	CALL $105(($2 + [120]), ($2 + [32]), ($2 + [24]))
	$8 = (($2 + [40]) | [1])
	$9 = (($2 + [40]) + [8])
	$10 = (($2 + [320]) + [112])
	$11 = (($2 + [192]) + [112])
	$12 = (($2 + [320]) + [64])
	$13 = ($7 + [20])
	$14 = ($7 + [24])
	$15 = (($2 + [320]) + [80])
	$16 = (int_64)0
	
.LOOP $label$6:
	$17 = *($2 + [124])
	$6 = *($2 + [120])
	if ( ((int_32)$6 == (int_32)$17) ){ goto $label$5 }
	$5 = ($6 + [128])
	if ( ((int_32)$5 == (int_32)$17) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $84(($2 + [320]), $6)
	CALL $84(($2 + [192]), $5)
	$4 = (($2 + [192]) + [24])
	$7 = (($2 + [320]) + [24])
	if ( ((int_64)*($7) == (int_64)*($4)) ){ goto $label$9 }
	CALL eosio_assert([0], [9635])
	
.LABEL $label$9
	$18 = (($2 + [192]) + [16])
	$19 = *($18)
	$3 = (($2 + [320]) + [16])
	$1 = *($3)
	if ( ((int_64)$1 != (int_64)$19) ){ goto $label$14 }
	$1 = *((($2 + [192]) + [80]))
	$19 = *($15)
	if ( (int_64)($19 == 0) ){ goto $label$13 }
	if ( (int_64)($1 == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	if ( ((int_64)*($7) == (int_64)*($4)) ){ goto $label$15 }
	CALL eosio_assert([0], [9635])
	$19 = *($18)
	$1 = *($3)
	
.LABEL $label$15
	$4 = ((int_64)$1 >= (int_64)$19)
	goto $label$10 
	
.LABEL $label$13
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$11 }
	
.LABEL $label$12
	$4 = ((int_64)$19 != (int_64)0)
	goto $label$10 
	
.LABEL $label$11
	$19 = *((($2 + [192]) + [64]))
	$1 = *($12)
	if ( ((int_64)$1 != (int_64)$19) ){ goto $label$16 }
	$4 = ((uint_64)*((($2 + [320]) + [56])) <= (uint_64)*((($2 + [192]) + [56])))
	goto $label$10 
	
.LABEL $label$16
	$4 = ((uint_64)$1 <= (uint_64)$19)
	
.LABEL $label$10
	CALL $69($11, *((($2 + [192]) + [116])))
	$7 = *((($2 + [192]) + [88]))
	if ( ($7 == 0) ){ goto $label$17 }
	*((($2 + [192]) + [92])) = $7
	CALL $11($7)
	
.LABEL $label$17
	CALL $69($10, *((($2 + [320]) + [116])))
	$7 = *((($2 + [320]) + [88]))
	if ( ($7 == 0) ){ goto $label$18 }
	*((($2 + [320]) + [92])) = $7
	CALL $11($7)
	
.LABEL $label$18
	$6 = ( $6 ? $5 : $4 )
	$5 = ($5 + [128])
	if ( ((int_32)$17 != (int_32)$5) ){ goto $label$8 }
	
.LABEL $label$7
	$5 = CALL $84(($2 + [320]), $6)
	*($12) = ((int_64)CALL current_time() + (int_64)$16)
	if ( ((uint_64)$16 >= (uint_64)(CASTING uint_64)(uint_32 int_32((*($14) - *($13)) >> [3]))) ){ goto $label$24 }
	CALL $91($0, $5, (int_64)0, [0])
	$7 = *($2 + [124])
	$5 = ($6 + [128])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$26 }
	$20 = ($7 + [-128])
	$5 = $6
	
.LOOP $label$27:
	$6 = ($5 + [128])
	$5 = CALL memcpy($5, $6, [88])
	$4 = ($5 + [88])
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$29 }
	*(($5 + [92])) = $7
	CALL $11($7)
	*(($18 = ($5 + [96]))) = [0]
	*($5 + [88 align=4]) = (int_64)0
	goto $label$28 
	
.LABEL $label$29
	$18 = ($5 + [96])
	
.LABEL $label$28
	$7 = ($5 + [216])
	*($4) = *($7)
	$4 = ($5 + [224])
	$3 = *($4)
	*($4) = [0]
	*($18) = $3
	*($7) = (int_64)0
	*(($5 + [104])) = *(($5 + [232]))
	$7 = ($5 + [116])
	$4 = ($5 + [112])
	CALL $69($4, *($7))
	$18 = ($5 + [240])
	*($4) = *($18)
	$3 = ($5 + [244])
	$17 = *($3)
	*($7) = $17
	$5 = *(($5 + [248]))
	*(($5 + [120])) = $5
	if ( ($5 == 0) ){ goto $label$31 }
	*($17 + [8]) = $7
	*($18) = $3
	*($3) = (int_64)0
	$5 = $6
	if ( ((int_32)$20 != (int_32)$6) ){ goto $label$27 }
	goto $label$30 
	
.LABEL $label$31
	*($4) = $7
	$5 = $6
	if ( ((int_32)$20 != (int_32)$6) ){ goto $label$27 }
	
.LABEL $label$30
	$5 = *($2 + [124])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$25 }
	
.LABEL $label$26
	
.LOOP $label$32:
	CALL $69(($5 + [-16]), *(($5 + [-12])))
	$7 = ($5 + [-128])
	$4 = *(($5 + [-40]))
	if ( ($4 == 0) ){ goto $label$33 }
	*(($5 + [-36])) = $4
	CALL $11($4)
	
.LABEL $label$33
	$5 = $7
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$32 }
	
.LABEL $label$25
	*($2 + [124]) = $6
	*(($5 = (($2 + [88]) + [8]))) = [0]
	*($2 + [88]) = (int_64)0
	$1 = *($0)
	*($2 + [72]) = [8404]
	*($2 + [76]) = CALL $1([8404])
	*($2 + [16]) = *($2 + [72])
	CALL $40(($2 + [80]), ($2 + [16]))
	*(($7 = (($2 + [192]) + [8]))) = *($2 + [80])
	*($2 + [192]) = $1
	*($2 + [56]) = [8411]
	*($2 + [60]) = CALL $1([8411])
	*($2 + [8]) = *($2 + [56])
	$4 = CALL $40(($2 + [64]), ($2 + [8]))
	*($9) = $16
	*($2 + [40]) = *($2 + [320])
	$6 = *($2 + [92])
	if ( ((uint_32)$6 >= (uint_32)*($5)) ){ goto $label$23 }
	$1 = *($0)
	*($6 + [8]) = *($2 + [64])
	*($6) = $1
	*($6 + [16 align=4]) = (int_64)0
	*(($4 = ($6 + [24]))) = [0]
	$5 = CALL $9([16])
	*($6 + [16]) = $5
	$3 = ($5 + [16])
	*($4) = $3
	*(($5 + [8])) = *($7)
	*($5) = *($2 + [192])
	*(($6 + [20])) = $3
	*($6 + [28 align=4]) = (int_64)0
	*(($6 + [36])) = [0]
	CALL $119(($6 + [28]), [16])
	$6 = *($6 + [28])
	$5 = (*(($6 + [32])) - $6)
	if ( ((int_32)$5 > (int_32)[7]) ){ goto $label$34 }
	CALL eosio_assert([0], [9916])
	
.LABEL $label$34
	CALL memcpy($6, ($2 + [40]), [8])
	$6 = ($6 + [8])
	if ( ((int_32)($5 + [-8]) > (int_32)[7]) ){ goto $label$35 }
	CALL eosio_assert([0], [9916])
	
.LABEL $label$35
	CALL memcpy($6, $9, [8])
	*($2 + [92]) = (*($2 + [92]) + [40])
	$1 = *($2 + [320])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	*($2 + [200]) = (int_64)0
	*($2 + [192]) = *($6 + [80])
	CALL cancel_deferred(($2 + [192]))
	*($15) = (int_64)0
	CALL $91($0, $5, (int_64)0, [0])
	$7 = *($2 + [124])
	$5 = ($6 + [128])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$37 }
	$20 = ($7 + [-128])
	$5 = $6
	
.LOOP $label$38:
	$6 = ($5 + [128])
	$5 = CALL memcpy($5, $6, [88])
	$4 = ($5 + [88])
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$40 }
	*(($5 + [92])) = $7
	CALL $11($7)
	*(($18 = ($5 + [96]))) = [0]
	*($5 + [88 align=4]) = (int_64)0
	goto $label$39 
	
.LABEL $label$40
	$18 = ($5 + [96])
	
.LABEL $label$39
	$7 = ($5 + [216])
	*($4) = *($7)
	$4 = ($5 + [224])
	$3 = *($4)
	*($4) = [0]
	*($18) = $3
	*($7) = (int_64)0
	*(($5 + [104])) = *(($5 + [232]))
	$7 = ($5 + [116])
	$4 = ($5 + [112])
	CALL $69($4, *($7))
	$18 = ($5 + [240])
	*($4) = *($18)
	$3 = ($5 + [244])
	$17 = *($3)
	*($7) = $17
	$5 = *(($5 + [248]))
	*(($5 + [120])) = $5
	if ( ($5 == 0) ){ goto $label$42 }
	*($17 + [8]) = $7
	*($18) = $3
	*($3) = (int_64)0
	$5 = $6
	if ( ((int_32)$20 != (int_32)$6) ){ goto $label$38 }
	goto $label$41 
	
.LABEL $label$42
	*($4) = $7
	$5 = $6
	if ( ((int_32)$20 != (int_32)$6) ){ goto $label$38 }
	
.LABEL $label$41
	$5 = *($2 + [124])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$36 }
	
.LABEL $label$37
	
.LOOP $label$43:
	CALL $69(($5 + [-16]), *(($5 + [-12])))
	$7 = ($5 + [-128])
	$4 = *(($5 + [-40]))
	if ( ($4 == 0) ){ goto $label$44 }
	*(($5 + [-36])) = $4
	CALL $11($4)
	
.LABEL $label$44
	$5 = $7
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$43 }
	
.LABEL $label$36
	*($2 + [124]) = $6
	goto $label$19 
	
.LABEL $label$23
	CALL $130(($2 + [88]), ($2 + [192]), $0, $4, ($2 + [40]))
	$1 = *($2 + [320])
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$21 }
	
.LABEL $label$22
	*($9) = [0]
	*($2 + [40]) = (int_64)0
	*($2 + [40]) = [0]
	$6 = $8
	goto $label$20 
	
.LABEL $label$21
	$5 = [0]
	$7 = *([0] + [10272])
	
.LOOP $label$46:
	*((($2 + [192]) + ($6 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$5 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$45 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$46 }
	
.LABEL $label$45
	*($9) = [0]
	*($2 + [40]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$48 }
	*($2 + [40]) = ($5 << [1])
	$7 = $8
	goto $label$47 
	
.LABEL $label$48
	$4 = (($5 + [16]) & [-16])
	$7 = CALL $9($4)
	*($9) = $7
	*($2 + [40]) = ($4 | [1])
	*($2 + [44]) = $5
	
.LABEL $label$47
	$4 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$49:
	*(($7 + $6)) = *((($2 + [192]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$49 }
	$6 = ($7 + $5)
	
.LABEL $label$20
	*($6) = [0]
	$6 = *($2 + [40])
	$5 = ($6 & [1])
	CALL prints_l(( *($9) ? $8 : $5 ), ( *($2 + [44]) ? uint_32($6 >> [1]) : $5 ))
	if ( ((*($2 + [40]) & [1]) == 0) ){ goto $label$50 }
	CALL $11(*($9))
	
.LABEL $label$50
	CALL $80($0, ($2 + [88]), *((*($13) + ((CASTING uint_32)(uint_64 $16) << [3]))), *($15))
	$4 = *($2 + [88])
	if ( ($4 == 0) ){ goto $label$19 }
	$6 = *($2 + [92])
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$52 }
	
.LOOP $label$53:
	$5 = *(($6 + [-12]))
	if ( ($5 == 0) ){ goto $label$54 }
	*(($6 + [-8])) = $5
	CALL $11($5)
	
.LABEL $label$54
	$5 = ($6 + [-40])
	$7 = *(($6 + [-24]))
	if ( ($7 == 0) ){ goto $label$55 }
	*(($6 + [-20])) = $7
	CALL $11($7)
	
.LABEL $label$55
	$6 = $5
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$53 }
	$6 = *($2 + [88])
	goto $label$51 
	
.LABEL $label$52
	$6 = $4
	
.LABEL $label$51
	*($2 + [92]) = $4
	CALL $11($6)
	
.LABEL $label$19
	CALL $69($10, *((($2 + [320]) + [116])))
	$6 = *((($2 + [320]) + [88]))
	if ( ($6 == 0) ){ goto $label$56 }
	*((($2 + [320]) + [92])) = $6
	CALL $11($6)
	
.LABEL $label$56
	$16 = ((int_64)$16 + (int_64)1)
	if ( (uint_64)($16 <= (int_64)10) ){ goto $label$6 }
	$6 = *($2 + [120])
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$57 }
	$5 = *($2 + [124])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$59 }
	
.LOOP $label$60:
	CALL $69(($5 + [-16]), *(($5 + [-12])))
	$7 = ($5 + [-128])
	$4 = *(($5 + [-40]))
	if ( ($4 == 0) ){ goto $label$61 }
	*(($5 + [-36])) = $4
	CALL $11($4)
	
.LABEL $label$61
	$5 = $7
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$60 }
	$5 = *($2 + [120])
	goto $label$58 
	
.LABEL $label$59
	$5 = $6
	
.LABEL $label$58
	*($2 + [124]) = $6
	CALL $11($5)
	
.LABEL $label$57
	$4 = *($2 + [176])
	if ( ($4 == 0) ){ goto $label$62 }
	$3 = ($2 + [180])
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$64 }
	
.LOOP $label$65:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$66 }
	CALL $69(($6 + [112]), *(($6 + [116])))
	$7 = *($6 + [88])
	if ( ($7 == 0) ){ goto $label$67 }
	*(($6 + [92])) = $7
	CALL $11($7)
	
.LABEL $label$67
	CALL $11($6)
	
.LABEL $label$66
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$65 }
	$6 = *(($2 + [176]))
	goto $label$63 
	
.LABEL $label$64
	$6 = $4
	
.LABEL $label$63
	*($3) = $4
	CALL $11($6)
	
.LABEL $label$62
	$global$0 = ($2 + [448])
}

int_32 .FUNC $44 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [384])
	$global$0 = $3
	*(($4 = $3) + [328]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($3 = (($4 + [272]) + [40]))) = (int_64)0
	*(($6 = (($4 + [272]) + [48]))) = (int_64)0
	*(($4 + [304])) = (int_64)0
	*((($4 + [272]) + [8])) = (int_64)0
	*(($4 + [288])) = (int_64)0
	*((($4 + [272]) + [24])) = (int_64)0
	*(($7 = ($4 + [316]))) = [0]
	*($6) = [0]
	*($3) = $7
	*($4 + [272]) = (int_64)0
	*($4 + [260]) = $2
	*($4 + [256]) = $2
	*($4 + [264]) = ($2 + $5)
	CALL $138(($4 + [256]), ($4 + [272]))
	*(($6 = (($4 + [8]) + [8]))) = *($4 + [264])
	*($4 + [8]) = *($4 + [256])
	$6 = *($6)
	*((($4 + [336]) + [8])) = $6
	*(($8 = (($4 + [352]) + [8]))) = $6
	$9 = *($4 + [8])
	*($4 + [352]) = $9
	*($4 + [336]) = $9
	$6 = *($8)
	*((($4 + [368]) + [8])) = $6
	*((($4 + [24]) + [24])) = $6
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [352])
	*($4 + [40]) = $1
	*($4 + [368]) = $1
	*((($4 + [24]) + [40])) = $0
	*((($4 + [24]) + [48])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [184])) = $0
	*(($4 + [192])) = (int_64)-1
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [208])) = [0]
	*(($4 + [200])) = (int_64)0
	*(($4 + [214])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*($4 + [216]) = $0
	*($4 + [372]) = ($4 + [328])
	*($4 + [368]) = ($4 + [24])
	CALL $139(($4 + [368]), ($4 + [272]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $3($2)
	
.LABEL $label$4
	CALL $65(($4 + [24]))
	CALL $69($3, *($7))
	$2 = *(($4 + [292]))
	if ( ($2 == 0) ){ goto $label$5 }
	*(($4 + [296])) = $2
	CALL $11($2)
	
.LABEL $label$5
	if ( ((*($4 + [280]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($4 + [288])))
	
.LABEL $label$6
	$global$0 = ($4 + [384])
	return [1]
}

int_32 .FUNC $222 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$5 = ($global$0 - [896])
	$global$0 = $5
	$6 = CALL $220($0, $1, $2, $4)
	$7 = *($4)
	$9 = CALL $84(($5 + [512]), $2)
	$8 = CALL $84(($5 + [640]), $3)
	$10 = CALL int_32 $8((int_32 $9), (int_32 $7))
	CALL $69(($9 + [112]), *(($9 + [116])))
	$7 = *($9 + [88])
	if ( ($7 == 0) ){ goto $label$1 }
	*(($9 + [92])) = $7
	CALL $11($7)
	
.LABEL $label$1
	CALL $69(($8 + [112]), *(($8 + [116])))
	$9 = *($8 + [88])
	if ( ($9 == 0) ){ goto $label$2 }
	*(($8 + [92])) = $9
	CALL $11($9)
	
.LABEL $label$2
	if ( ($10 == 0) ){ goto $label$5 }
	CALL memcpy(($5 + [768]), $2, [88])
	$8 = ($2 + [96])
	$9 = *($8)
	*($8) = [0]
	*((($5 + [768]) + [96])) = $9
	$11 = *($2 + [88 align=4])
	*($2 + [88 align=4]) = (int_64)0
	$8 = ($2 + [116])
	$10 = *($8)
	*(($12 = (($5 + [768]) + [116]))) = $10
	$9 = *(($2 + [120]))
	*((($5 + [768]) + [120])) = $9
	*($5 + [856]) = $11
	*($5 + [872]) = *($2 + [104])
	*($5 + [880]) = *($2 + [112])
	$7 = ($2 + [112])
	if ( ($9 == 0) ){ goto $label$7 }
	*($10 + [8]) = $12
	*($2 + [112]) = $8
	*($8) = (int_64)0
	goto $label$6 
	
.LABEL $label$7
	*((($5 + [768]) + [112])) = $12
	
.LABEL $label$6
	*((($2 = CALL memcpy($2, $3, [88])) + [88])) = *($3 + [88 align=4])
	$9 = ($3 + [96])
	*(($2 + [96])) = *($9)
	*($9) = [0]
	*(($2 + [104])) = *($3 + [104])
	*($3 + [88 align=4]) = (int_64)0
	CALL $69($7, *($8))
	*(($2 + [112])) = *($3 + [112])
	$9 = ($3 + [116])
	$13 = *($9)
	*($8) = $13
	$14 = *(($3 + [120]))
	*(($2 + [120])) = $14
	$10 = ($3 + [112])
	if ( ($14 == 0) ){ goto $label$9 }
	*($13 + [8]) = $8
	*($10) = $9
	*($9) = (int_64)0
	goto $label$8 
	
.LABEL $label$9
	*($7) = $8
	
.LABEL $label$8
	$3 = CALL memcpy($3, ($5 + [768]), [88])
	$8 = ($3 + [88])
	$14 = *($8)
	if ( ($14 == 0) ){ goto $label$10 }
	*(($3 + [92])) = $14
	CALL $11($14)
	*(($3 + [96])) = [0]
	*($8) = (int_64)0
	
.LABEL $label$10
	$14 = (($5 + [768]) + [88])
	*($8) = *($14)
	$8 = (($5 + [768]) + [96])
	$13 = *($8)
	*($8) = [0]
	*(($3 + [96])) = $13
	*($14) = (int_64)0
	*(($3 + [104])) = *((($5 + [768]) + [104]))
	$14 = ($3 + [116])
	CALL $69($10, *($14))
	$13 = (($5 + [768]) + [112])
	*(($3 + [112])) = *($13)
	$15 = (($5 + [768]) + [116])
	$8 = *($15)
	*($14) = $8
	$3 = *((($5 + [768]) + [120]))
	*(($3 + [120])) = $3
	if ( ($3 == 0) ){ goto $label$12 }
	*($8 + [8]) = $9
	*($13) = $12
	*($15) = (int_64)0
	$8 = [0]
	goto $label$11 
	
.LABEL $label$12
	*($10) = $9
	
.LABEL $label$11
	CALL $69((($5 + [768]) + [112]), $8)
	$3 = *($5 + [856])
	if ( ($3 == 0) ){ goto $label$13 }
	*(($5 + [860])) = $3
	CALL $11($3)
	
.LABEL $label$13
	$9 = *($4)
	$8 = CALL $84(($5 + [256]), $1)
	$3 = CALL $84(($5 + [384]), $2)
	$10 = CALL int_32 $3((int_32 $8), (int_32 $9))
	CALL $69(($8 + [112]), *(($8 + [116])))
	$9 = *($8 + [88])
	if ( ($9 == 0) ){ goto $label$14 }
	*(($8 + [92])) = $9
	CALL $11($9)
	
.LABEL $label$14
	CALL $69(($3 + [112]), *(($3 + [116])))
	$8 = *($3 + [88])
	if ( ($8 == 0) ){ goto $label$15 }
	*(($3 + [92])) = $8
	CALL $11($8)
	
.LABEL $label$15
	if ( ($10 == 0) ){ goto $label$16 }
	CALL memcpy(($5 + [768]), $1, [88])
	$3 = ($1 + [96])
	$8 = *($3)
	*($3) = [0]
	*((($5 + [768]) + [96])) = $8
	$11 = *($1 + [88 align=4])
	*($1 + [88 align=4]) = (int_64)0
	$8 = ($1 + [116])
	$9 = *($8)
	*(($12 = (($5 + [768]) + [116]))) = $9
	$3 = *(($1 + [120]))
	*((($5 + [768]) + [120])) = $3
	*($5 + [856]) = $11
	*($5 + [872]) = *($1 + [104])
	*($5 + [880]) = *($1 + [112])
	$10 = ($1 + [112])
	if ( ($3 == 0) ){ goto $label$4 }
	*($9 + [8]) = $12
	*($1 + [112]) = $8
	*($8) = (int_64)0
	goto $label$3 
	
.LABEL $label$16
	$6 = ($6 + [1])
	
.LABEL $label$5
	$global$0 = ($5 + [896])
	return $6
	
.LABEL $label$4
	*((($5 + [768]) + [112])) = $12
	
.LABEL $label$3
	$1 = ($2 + [88])
	*((($3 = CALL memcpy($1, $2, [88])) + [88])) = *($1)
	$9 = ($2 + [96])
	*(($3 + [96])) = *($9)
	*($9) = [0]
	*(($3 + [104])) = *(($2 + [104]))
	*($1) = (int_64)0
	CALL $69($10, *($8))
	$14 = ($2 + [112])
	*(($3 + [112])) = *($14)
	$9 = ($2 + [116])
	$13 = *($9)
	*($8) = $13
	$1 = *(($2 + [120]))
	*(($3 + [120])) = $1
	if ( ($1 == 0) ){ goto $label$18 }
	*($13 + [8]) = $8
	*($14) = $9
	*($9) = (int_64)0
	goto $label$17 
	
.LABEL $label$18
	*($10) = $8
	
.LABEL $label$17
	$2 = CALL memcpy($2, ($5 + [768]), [88])
	$1 = ($2 + [88])
	$8 = *($1)
	if ( ($8 == 0) ){ goto $label$19 }
	*(($2 + [92])) = $8
	CALL $11($8)
	*(($2 + [96])) = [0]
	*($1) = (int_64)0
	
.LABEL $label$19
	$8 = (($5 + [768]) + [88])
	*($1) = *($8)
	$1 = (($5 + [768]) + [96])
	$14 = *($1)
	*($1) = [0]
	*(($2 + [96])) = $14
	*($8) = (int_64)0
	*(($2 + [104])) = *((($5 + [768]) + [104]))
	$8 = ($2 + [116])
	CALL $69($7, *($8))
	$14 = (($5 + [768]) + [112])
	*(($2 + [112])) = *($14)
	$13 = (($5 + [768]) + [116])
	$1 = *($13)
	*($8) = $1
	$2 = *((($5 + [768]) + [120]))
	*(($2 + [120])) = $2
	if ( ($2 == 0) ){ goto $label$21 }
	*($1 + [8]) = $9
	*($14) = $12
	*($13) = (int_64)0
	$1 = [0]
	goto $label$20 
	
.LABEL $label$21
	*($7) = $9
	
.LABEL $label$20
	CALL $69((($5 + [768]) + [112]), $1)
	$2 = *($5 + [856])
	if ( ($2 == 0) ){ goto $label$22 }
	*(($5 + [860])) = $2
	CALL $11($2)
	
.LABEL $label$22
	$8 = *($4)
	$1 = CALL $84($5, $0)
	$2 = CALL $84(($5 + [128]), $3)
	$9 = CALL int_32 $2((int_32 $1), (int_32 $8))
	CALL $69(($1 + [112]), *(($1 + [116])))
	$8 = *($1 + [88])
	if ( ($8 == 0) ){ goto $label$23 }
	*(($1 + [92])) = $8
	CALL $11($8)
	
.LABEL $label$23
	CALL $69(($2 + [112]), *(($2 + [116])))
	$1 = *($2 + [88])
	if ( ($1 == 0) ){ goto $label$24 }
	*(($2 + [92])) = $1
	CALL $11($1)
	
.LABEL $label$24
	if ( ($9 == 0) ){ goto $label$27 }
	CALL memcpy(($5 + [768]), $0, [88])
	$2 = ($0 + [96])
	$1 = *($2)
	*($2) = [0]
	*((($5 + [768]) + [96])) = $1
	$11 = *($0 + [88 align=4])
	*($0 + [88 align=4]) = (int_64)0
	$2 = ($0 + [116])
	$8 = *($2)
	*(($9 = (($5 + [768]) + [116]))) = $8
	$1 = *(($0 + [120]))
	*((($5 + [768]) + [120])) = $1
	*($5 + [856]) = $11
	*($5 + [872]) = *($0 + [104])
	*($5 + [880]) = *($0 + [112])
	$4 = ($0 + [112])
	if ( ($1 == 0) ){ goto $label$26 }
	*($8 + [8]) = $9
	*($0 + [112]) = $2
	*($2) = (int_64)0
	goto $label$25 
	
.LABEL $label$27
	$global$0 = ($5 + [896])
	return ($6 + [2])
	
.LABEL $label$26
	*((($5 + [768]) + [112])) = $9
	
.LABEL $label$25
	$8 = ($3 + [88])
	*((($1 = CALL memcpy($0, $3, [88])) + [88])) = *($8)
	$0 = ($3 + [96])
	*(($1 + [96])) = *($0)
	*($0) = [0]
	*(($1 + [104])) = *(($3 + [104]))
	*($8) = (int_64)0
	CALL $69($4, *($2))
	$0 = ($3 + [112])
	*(($1 + [112])) = *($0)
	$8 = ($3 + [116])
	$7 = *($8)
	*($2) = $7
	$1 = *(($3 + [120]))
	*(($1 + [120])) = $1
	if ( ($1 == 0) ){ goto $label$29 }
	*($7 + [8]) = $2
	*($0) = $8
	*($8) = (int_64)0
	goto $label$28 
	
.LABEL $label$29
	*($4) = $2
	
.LABEL $label$28
	$2 = CALL memcpy($3, ($5 + [768]), [88])
	$3 = ($2 + [88])
	$1 = *($3)
	if ( ($1 == 0) ){ goto $label$30 }
	*(($2 + [92])) = $1
	CALL $11($1)
	*(($2 + [96])) = [0]
	*($3) = (int_64)0
	
.LABEL $label$30
	$1 = (($5 + [768]) + [88])
	*($3) = *($1)
	$3 = (($5 + [768]) + [96])
	$4 = *($3)
	*($3) = [0]
	*(($2 + [96])) = $4
	*($1) = (int_64)0
	*(($2 + [104])) = *((($5 + [768]) + [104]))
	$1 = ($2 + [116])
	CALL $69($10, *($1))
	$4 = (($5 + [768]) + [112])
	*(($2 + [112])) = *($4)
	$0 = (($5 + [768]) + [116])
	$3 = *($0)
	*($1) = $3
	$2 = *((($5 + [768]) + [120]))
	*(($2 + [120])) = $2
	if ( ($2 == 0) ){ goto $label$32 }
	*($3 + [8]) = $8
	*($4) = $9
	*($0) = (int_64)0
	$3 = [0]
	goto $label$31 
	
.LABEL $label$32
	*($10) = $8
	
.LABEL $label$31
	CALL $69(($5 + [880]), $3)
	$2 = *($5 + [856])
	if ( ($2 == 0) ){ goto $label$33 }
	*(($5 + [860])) = $2
	CALL $11($2)
	
.LABEL $label$33
	$global$0 = ($5 + [896])
	return ($6 + [3])
}

int_32 .FUNC $226 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((int_32)(*($5) - $3) > (int_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [9916])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [2])
	*(($2 = ($0 + [4]))) = (*($2) + [2])
	return $0
}

void .FUNC $167 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [576])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [516]) = $4
	*($3 + [512]) = $4
	*($3 + [520]) = ($4 + $5)
	*((($3 + [384]) + [24])) = (int_64)0
	*((($3 + [384]) + [96])) = [0]
	*(($4 = (($3 + [384]) + [116]))) = (int_64)0
	*($3 + [392]) = (int_64)0
	*($3 + [384]) = (int_64)0
	*($3 + [400]) = (int_64)0
	*($3 + [472]) = (int_64)0
	*($3 + [496]) = $4
	CALL $168(($3 + [512]), ($3 + [384]))
	$4 = *($3 + [516])
	if ( ((uint_32)(*($3 + [520]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11170])
	$4 = *($3 + [516])
	
.LABEL $label$4
	CALL memcpy(($3 + [376]), $4, [8])
	*($3 + [516]) = (*($3 + [516]) + [8])
	*(($4 = (($3 + [128]) + [8]))) = *((($3 + [512]) + [8]))
	*($3 + [128]) = *($3 + [512])
	$4 = *($4)
	*((($3 + [528]) + [8])) = $4
	*(($5 = (($3 + [544]) + [8]))) = $4
	$6 = *($3 + [128])
	*($3 + [544]) = $6
	*($3 + [528]) = $6
	$4 = *($5)
	*((($3 + [560]) + [8])) = $4
	*((($3 + [144]) + [24])) = $4
	*($3 + [144]) = $0
	*($3 + [152]) = $1
	$1 = *($3 + [544])
	*($3 + [160]) = $1
	*($3 + [560]) = $1
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [224])) = $0
	*((($3 + [144]) + [88])) = (int_64)-1
	*((($3 + [144]) + [96])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*($3 + [176]) = $0
	*($3 + [216]) = $0
	*($3 + [256]) = $0
	*($3 + [296]) = $0
	*(($3 + [328])) = [0]
	*(($3 + [320])) = (int_64)0
	*(($3 + [334])) = [0]
	*(($3 + [332])) = [0]
	*(($3 + [344])) = $0
	*(($3 + [352])) = (int_64)-1
	*(($3 + [360])) = (int_64)0
	*(($3 + [368])) = [0]
	*(($3 + [372])) = [0]
	*($3 + [336]) = $0
	$4 = CALL $84($3, ($3 + [384]))
	CALL $151(($3 + [144]), $4, *($3 + [376]))
	CALL $69(($4 + [112]), *(($4 + [116])))
	$5 = *($4 + [88])
	if ( ($5 == 0) ){ goto $label$5 }
	*(($4 + [92])) = $5
	CALL $11($5)
	
.LABEL $label$5
	CALL $65(($3 + [144]))
	CALL $69((($3 + [384]) + [112]), *(($3 + [500])))
	$4 = *((($3 + [384]) + [88]))
	if ( ($4 == 0) ){ goto $label$6 }
	*(($3 + [476])) = $4
	CALL $11($4)
	
.LABEL $label$6
	$global$0 = ($3 + [576])
}

void .FUNC $166 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [256])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [248]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [248]), $2, [8])
	*($3 + [240]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$6
	CALL memcpy(($3 + [240]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [198])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	CALL $50(($3 + [8]), *($3 + [248]), *($3 + [240]))
	CALL $65(($3 + [8]))
	$global$0 = ($3 + [256])
}

void .FUNC $165 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [240])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [232])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [232])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [11170])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [190])) = [0]
	*(($3 + [188])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	CALL $45($3, *($3 + [232]))
	CALL $65($3)
	$global$0 = ($3 + [240])
}

void .FUNC $164 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [256])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [248]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$5
	CALL memcpy(($3 + [248]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [240]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$7
	CALL memcpy(($3 + [232]), $5, [8])
	*(($3 + [24])) = $4
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [190])) = [0]
	*(($3 + [188])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	CALL $55($3, *($3 + [248]), *($3 + [240]), *($3 + [232]))
	CALL $65($3)
	$global$0 = ($3 + [256])
}

void .FUNC $163 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$5 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$2
	CALL read_action_data($5, $4)
	
.LABEL $label$1
	*($3 + [360]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$5
	CALL memcpy(($3 + [360]), $5, [8])
	*($3 + [352]) = (int_64)0
	$2 = ($5 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$6
	$6 = ($5 + $4)
	CALL memcpy(($3 + [352]), $2, [8])
	*($3 + [312]) = [0]
	$4 = ($5 + [49])
	$7 = (int_64)0
	$2 = [0]
	
.LOOP $label$7:
	$8 = ($4 + [-33])
	if ( ($8 <= $6) ){ goto $label$8 }
	CALL eosio_assert([0], [11166])
	
.LABEL $label$8
	$2 = ($2 & [255])
	$8 = *($8)
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $2)))
	$4 = ($4 + [1])
	$2 = ($2 + [7])
	if ( ($8 & [128]) ){ goto $label$7 }
	*($3 + [312]) = $7
	$2 = (($3 + [312]) | [4])
	$8 = ($4 + [-33])
	if ( ((uint_32)($6 - $8) > (uint_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$9
	CALL memcpy($2, $8, [33])
	*(($3 + [100])) = $4
	*((($3 + [80]) + [24])) = $6
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [200])) = $0
	*($3 + [88]) = $1
	*($3 + [80]) = $0
	*($3 + [96]) = $5
	*($3 + [112]) = $0
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [270])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [308])) = [0]
	*($3 + [232]) = $0
	*($3 + [272]) = $0
	$7 = *($3 + [360])
	$0 = *($3 + [352])
	$1 = *((($3 + [312]) + [24]))
	*((($3 + [40]) + [24])) = $1
	$9 = *((($3 + [312]) + [16]))
	*((($3 + [40]) + [16])) = $9
	$10 = *((($3 + [312]) + [8]))
	*((($3 + [40]) + [8])) = $10
	$11 = *((($3 + [312]) + [32]))
	*((($3 + [40]) + [32])) = $11
	*(($3 + [32])) = $11
	*(($3 + [24])) = $1
	*(($3 + [16])) = $9
	*(($3 + [8])) = $10
	$1 = *($3 + [312])
	*($3 + [40]) = $1
	*($3) = $1
	CALL $63(($3 + [80]), $7, $0, $3)
	CALL $65(($3 + [80]))
	$global$0 = ($3 + [368])
}

void .FUNC $162 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [256])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [248]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [248]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$6
	CALL memcpy(($3 + [240]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [198])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	CALL $59(($3 + [8]), *($3 + [248]), *($3 + [240]))
	CALL $65(($3 + [8]))
	$global$0 = ($3 + [256])
}

void .FUNC $161 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [296]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$5
	CALL memcpy(($3 + [296]), $2, [8])
	*($3 + [288]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$6
	CALL memcpy(($3 + [288]), $5, [8])
	*($3 + [280]) = (int_64)0
	*($3 + [272]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [272]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$8
	CALL memcpy(($3 + [40]), $5, [8])
	*(($6 = (($3 + [272]) + [8]))) = *($3 + [40])
	*((($3 + [40]) + [24])) = $4
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [32])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*($3 + [152]) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [230])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [268])) = [0]
	*($3 + [192]) = $0
	*($3 + [232]) = $0
	$0 = *($3 + [296])
	$1 = *($3 + [288])
	$7 = *($6)
	*((($3 + [24]) + [8])) = $7
	*((($3 + [8]) + [8])) = $7
	$7 = *($3 + [272])
	*($3 + [24]) = $7
	*($3 + [8]) = $7
	CALL $52(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $65(($3 + [40]))
	$global$0 = ($3 + [304])
}

int_32 .FUNC $160 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $69(($3 + [40]), *(($3 + [44])))
	$4 = *($3 + [20])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($3 + [24])) = $4
	CALL $11($4)
	
.LABEL $label$6
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($3 + [16])))
	
.LABEL $label$7
	CALL $11($3)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $11($3)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [11166])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = int_32(($7 - $2) >> [5])
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$5 }
	CALL $216($1, ($6 - $5))
	$7 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$6 }
	$7 = ($2 + ($6 << [5]))
	*(($1 + [4])) = $7
	
.LABEL $label$6
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	CALL $217($0, $2)
	$2 = ($2 + [32])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11170])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($1 + [24])) = *($2)
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($0 + [8])
	if ( ((int_32)*($5) != (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy(($2 + [15]), $4, [1])
	$4 = (*($3) + [1])
	*($3) = $4
	*(($1 + [40])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$3 = ($1 + [48])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [64])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [72])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [80])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $4, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$4 = ($1 + [104])
	$3 = *($0 + [4])
	$0 = CALL $169($0, ($1 + [88]))
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [11170])
	$3 = *(($0 + [4]))
	
.LABEL $label$12
	CALL memcpy($4, $3, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$0 = CALL $170($0, ($1 + [112]))
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $175 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [464])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [364]) = $4
	*($3 + [360]) = $4
	*($3 + [368]) = ($4 + $5)
	*(($3 + [320])) = (int_64)0
	*((($3 + [304]) + [24])) = (int_64)0
	*(($4 = (($3 + [304]) + [44]))) = (int_64)0
	*($3 + [312]) = (int_64)0
	*($3 + [344]) = $4
	CALL $138(($3 + [360]), ($3 + [304]))
	*(($4 = (($3 + [56]) + [8]))) = *($3 + [368])
	*($3 + [56]) = *($3 + [360])
	$4 = *($4)
	*((($3 + [376]) + [8])) = $4
	*(($5 = (($3 + [392]) + [8]))) = $4
	$6 = *($3 + [56])
	*($3 + [392]) = $6
	*($3 + [376]) = $6
	$4 = *($5)
	*((($3 + [408]) + [8])) = $4
	*((($3 + [72]) + [24])) = $4
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$1 = *($3 + [392])
	*($3 + [88]) = $1
	*($3 + [408]) = $1
	*((($3 + [72]) + [40])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*($3 + [104]) = $0
	*($3 + [144]) = $0
	*($3 + [184]) = $0
	*($3 + [224]) = $0
	*(($3 + [256])) = [0]
	*(($3 + [248])) = (int_64)0
	*(($3 + [262])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($3 + [300])) = [0]
	*($3 + [264]) = $0
	$4 = CALL $99($3, ($3 + [304]))
	CALL require_auth(*($3 + [72]))
	$5 = CALL $99(($3 + [408]), $4)
	CALL $100(($3 + [72]), $5)
	CALL $69(($5 + [40]), *(($5 + [44])))
	$2 = *($5 + [20])
	if ( ($2 == 0) ){ goto $label$4 }
	*(($5 + [24])) = $2
	CALL $11($2)
	
.LABEL $label$4
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($5 + [16])))
	
.LABEL $label$5
	CALL $69(($4 + [40]), *(($4 + [44])))
	$5 = *($4 + [20])
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [24])) = $5
	CALL $11($5)
	
.LABEL $label$6
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($4 + [16])))
	
.LABEL $label$7
	CALL $65(($3 + [72]))
	CALL $69(($3 + [344]), *(($3 + [348])))
	$4 = *(($3 + [324]))
	if ( ($4 == 0) ){ goto $label$8 }
	*(($3 + [328])) = $4
	CALL $11($4)
	
.LABEL $label$8
	if ( ((*($3 + [312]) & [1]) == 0) ){ goto $label$9 }
	CALL $11(*(($3 + [320])))
	
.LABEL $label$9
	$global$0 = ($3 + [464])
}

int_32 .FUNC $58 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [11170])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	CALL memcpy(($4 + [8]), $2, [1])
	$8 = *($4 + [8])
	*(($4 + [28])) = ($2 + [1])
	*(($4 + [32])) = ($2 + $7)
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [198])) = [0]
	*(($4 + [196])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 ((int_32)($8 & [255]) != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	CALL $65(($4 + [8]))
	$global$0 = ($4 + [240])
	return [1]
}

void .FUNC $59 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	float_64 $11
	int_32 $12
	int_64 $13
	float_64 $14
	float_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	float_64 $33
	int_64 $34
	int_64 $35
	int_64 $36
	int_64 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_32 $41
	int_32 $42
	$3 = ($global$0 - [1264])
	$global$0 = $3
	*($3 + [1000]) = $1
	CALL prints([8789])
	CALL printui($2)
	CALL prints([8811])
	CALL printn($1)
	CALL prints([8495])
	CALL require_auth(*($0))
	*(($4 = (($3 + [1136]) + [16]))) = (int_64)0
	*(($5 = ($3 + [1160]))) = (int_64)0
	*(($3 + [1144])) = (int_64)0
	$6 = [0]
	*(($7 = (($3 + [1136]) + [20]))) = [0]
	*($5) = [0]
	*($4) = $7
	*($3 + [1136]) = (int_64)0
	CALL $68(($3 + [1008]), ($0 + [32]), ($3 + [1136]))
	CALL $69($4, *($7))
	CALL eosio_assert(*($3 + [1008]), [10252])
	CALL $69((($3 + [1008]) + [16]), *((($3 + [1008]) + [20])))
	$1 = CALL $71(($3 + [1000]))
	$8 = ($0 + [72])
	$7 = *(($0 + [100]))
	$5 = *(($0 + [96]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$4 = ($7 + [-24])
	$9 = *($4)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$3 }
	$7 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)*($9 + [84]) == (int_32)$8) ){ goto $label$5 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$5
	$6 = $9
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL db_find_i64(*($8), *(($0 + [80])), (int_64)-4131301141914845184, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $72($8, $4)
	if ( ((int_32)*($6 + [84]) == (int_32)$8) ){ goto $label$1 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$1
	CALL eosio_assert(*($6 + [8]), [9922])
	$4 = [0]
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [9950])
	CALL $74(($3 + [976]), $0, *($3 + [1000]), [1])
	*(($3 + [968])) = [0]
	*($3 + [952]) = (int_64)-1
	*($3 + [960]) = (int_64)0
	$1 = *($0)
	*($3 + [936]) = $1
	$2 = *($6 + [16])
	*($3 + [944]) = $2
	*($3 + [972]) = [0]
	$7 = CALL db_find_i64($1, $2, (int_64)-6497942746098040832, *(*($3 + [980]) + [64]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$4 = CALL $75(($3 + [936]), $7)
	if ( ((int_32)*($4 + [124]) == (int_32)($3 + [936])) ){ goto $label$6 }
	CALL eosio_assert([0], [11092])
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8823])
	
.LABEL $label$6
	$10 = CALL $84(($3 + [808]), $4)
	CALL __extenddftf2(($3 + [176]), ((float_64)(CASTING float_64)(int_64 *($10 + [16])) / (float_64)(float_64)100))
	CALL $36(($3 + [192]), *($3 + [176]), *((($3 + [176]) + [8])))
	$1 = CALL __fixunstfdi(*($3 + [192]), *($3 + [200]))
	$7 = [0]
	$9 = ($10 + [92])
	$5 = *($9)
	$4 = *($10 + [88])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + *(($4 + [16])))
	$4 = ($4 + [32])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$8
	$11 = (CASTING float_64)(uint_64 (CASTING int_64)(int_32 $7))
	CALL __extenddftf2(($3 + [144]), ((float_64)$11 / (float_64)(float_64)100))
	CALL $36(($3 + [160]), *($3 + [144]), *((($3 + [144]) + [8])))
	$4 = *($9)
	$12 = ($10 + [88])
	$7 = *($12)
	$2 = *($6 + [32])
	$13 = *($6 + [40])
	CALL prints([8839])
	CALL printui((CASTING uint_64)(uint_32 int_32(($4 - $7) >> [5])))
	CALL prints([8495])
	if ( ((int_32)*($9) == (int_32)*($12)) ){ goto $label$12 }
	$4 = *($12)
	$14 = (CASTING float_64)(uint_64 ((uint_64)((int_64)$13 * (int_64)$1) / (uint_64)(int_64)100))
	$15 = (CASTING float_64)(uint_64 ((uint_64)((int_64)$2 * (int_64)$1) / (uint_64)(int_64)100))
	$16 = ($3 + [1040])
	$17 = (($3 + [1008]) + [16])
	$18 = ($3 + [1172])
	$19 = (($3 + [1008]) | [1])
	$20 = (($3 + [728]) | [1])
	$21 = (($3 + [728]) | [1])
	$22 = (($3 + [744]) | [1])
	$23 = (($3 + [728]) | [1])
	$24 = (($3 + [760]) | [1])
	$25 = (($3 + [1136]) + [12])
	$26 = ($3 + [1156])
	$27 = ($3 + [1164])
	$28 = ($3 + [1180])
	$29 = ($3 + [1188])
	$30 = (($3 + [1136]) + [40])
	$31 = ($10 + [92])
	$32 = [0]
	
.LOOP $label$13:
	$4 = ($4 + ($32 << [5]))
	$33 = ((float_64)((float_64)(CASTING float_64)(int_64 *($4 + [16])) / (float_64)$11) * (float_64)(float_64)100)
	CALL __extenddftf2(($3 + [96]), ((float_64)$33 * (float_64)$15))
	$13 = *($4 + [8])
	$34 = *($4)
	CALL $36(($3 + [128]), *($3 + [96]), *((($3 + [96]) + [8])))
	CALL __extenddftf2(($3 + [80]), ((float_64)$33 * (float_64)$14))
	$1 = *($3 + [136])
	$2 = *($3 + [128])
	CALL $36(($3 + [112]), *($3 + [80]), *((($3 + [80]) + [8])))
	$35 = *($3 + [120])
	$36 = *($3 + [112])
	$37 = CALL current_time()
	*($25) = [0]
	*((($3 + [1136]) + [16])) = [0]
	*($26) = (int_64)0
	*($27) = (int_64)0
	*($18) = (int_64)0
	*($28) = (int_64)0
	*($29) = (int_64)0
	*($3 + [1136]) = ((CASTING uint_32)(uint_64 ((uint_64)$37 / (uint_64)(int_64)1000000)) + [60])
	$2 = CALL __fixunstfdi($2, $1)
	$35 = CALL __fixunstfdi($36, $35)
	$4 = CALL $1([8858])
	if ( ($4 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [10603])
	goto $label$15 
	
.LABEL $label$16
	if ( $4 ){ goto $label$15 }
	$1 = (int_64)0
	goto $label$14 
	
.LABEL $label$15
	$1 = (int_64)0
	
.LOOP $label$17:
	$7 = *(($4 + [8857]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [10648])
	
.LABEL $label$18
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$17 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$14
	$1 = ((int_64)$1 | (int_64)4)
	*(($38 = (($3 + [792]) + [8]))) = $1
	*($3 + [792]) = $2
	if ( (uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$19 }
	CALL eosio_assert([0], [10701])
	$1 = *($38)
	
.LABEL $label$19
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$27 }
	$1 = $2
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$25 }
	goto $label$26 
	
.LABEL $label$27
	$1 = $2
	
.LOOP $label$28:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$24 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$5 = ($4 + [1])
	$4 = $5
	if ( $7 ){ goto $label$28 }
	$4 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$25 }
	
.LABEL $label$26
	$4 = CALL $1([8858])
	if ( ($4 <= [8]) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	CALL eosio_assert([0], [10750])
	$4 = CALL $1([8858])
	if ( ((uint_32)$4 >= (uint_32)[8]) ){ goto $label$22 }
	
.LABEL $label$23
	if ( $4 ){ goto $label$21 }
	$1 = (int_64)0
	goto $label$20 
	
.LABEL $label$22
	CALL eosio_assert([0], [10603])
	
.LABEL $label$21
	$1 = (int_64)0
	
.LOOP $label$29:
	$7 = *(($4 + [8857]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$30 }
	CALL eosio_assert([0], [10648])
	
.LABEL $label$30
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$29 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$20
	$1 = ((int_64)$1 | (int_64)4)
	*(($39 = (($3 + [776]) + [8]))) = $1
	*($3 + [776]) = $35
	if ( (uint_64)(((int_64)$35 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$31 }
	CALL eosio_assert([0], [10701])
	$1 = *($39)
	
.LABEL $label$31
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$35 }
	$1 = $2
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$35
	$1 = $2
	
.LOOP $label$36:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$33 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$5 = ($4 + [1])
	$4 = $5
	if ( $7 ){ goto $label$36 }
	$4 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	CALL eosio_assert([0], [10750])
	
.LABEL $label$32
	CALL prints([8862])
	CALL $76(($3 + [1008]), ($3 + [792]))
	$4 = *($3 + [1008])
	$7 = ($4 & [1])
	$40 = (($3 + [1008]) + [8])
	CALL prints_l(( *($40) ? $19 : $7 ), ( *($3 + [1012]) ? uint_32($4 >> [1]) : $7 ))
	if ( ((*($3 + [1008]) & [1]) == 0) ){ goto $label$37 }
	CALL $11(*($40))
	
.LABEL $label$37
	CALL prints([8495])
	CALL prints([8884])
	CALL $76(($3 + [1008]), ($3 + [776]))
	$4 = *($3 + [1008])
	$7 = ($4 & [1])
	CALL prints_l(( *($40) ? $19 : $7 ), ( *($3 + [1012]) ? uint_32($4 >> [1]) : $7 ))
	if ( ((*($3 + [1008]) & [1]) == 0) ){ goto $label$38 }
	CALL $11(*($40))
	
.LABEL $label$38
	CALL prints([8495])
	*(($41 = (($3 + [760]) + [8]))) = [0]
	*($3 + [760]) = (int_64)0
	$4 = CALL $1([8675])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$41 }
	*($3 + [760]) = ($4 << [1])
	$7 = $24
	if ( $4 ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	$5 = (($4 + [16]) & [-16])
	$7 = CALL $9($5)
	*($41) = $7
	*($3 + [760]) = ($5 | [1])
	*($3 + [764]) = $4
	
.LABEL $label$40
	CALL memcpy($7, [8675], $4)
	
.LABEL $label$39
	*(($7 + $4)) = [0]
	$1 = *($3 + [1000])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$45 }
	$7 = [0]
	$5 = *([0] + [10272])
	
.LOOP $label$47:
	*((($3 + [1008]) + ($4 = $7))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$4 == (int_32)[12]) )))))
	$7 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[11]) ){ goto $label$46 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$47 }
	
.LABEL $label$46
	*(($9 = (($3 + [728]) + [8]))) = [0]
	*($3 + [728]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$44 }
	*($3 + [728]) = ($7 << [1])
	$5 = $23
	goto $label$43 
	
.LABEL $label$45
	*((($3 + [728]) + [8])) = [0]
	*($3 + [728]) = (int_64)0
	*($3 + [728]) = [0]
	$4 = $23
	goto $label$42 
	
.LABEL $label$44
	$8 = (($7 + [16]) & [-16])
	$5 = CALL $9($8)
	*($9) = $5
	*($3 + [728]) = ($8 | [1])
	*($3 + [732]) = $7
	
.LABEL $label$43
	$9 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$48:
	*(($5 + $4)) = *((($3 + [1008]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$48 }
	$4 = ($5 + $7)
	
.LABEL $label$42
	*($4) = [0]
	$4 = *($3 + [728])
	$7 = ($4 & [1])
	$8 = (($3 + [728]) + [8])
	CALL $31(($3 + [760]), ( *($8) ? $23 : $7 ), ( *($3 + [732]) ? uint_32($4 >> [1]) : $7 ))
	if ( ((*($3 + [728]) & [1]) == 0) ){ goto $label$49 }
	CALL $11(*($8))
	
.LABEL $label$49
	CALL $30(($3 + [760]), [8909])
	CALL $76(($3 + [1008]), ($3 + [792]))
	$4 = *($3 + [1008])
	$7 = ($4 & [1])
	CALL $31(($3 + [760]), ( *($40) ? $19 : $7 ), ( *($3 + [1012]) ? uint_32($4 >> [1]) : $7 ))
	if ( ((*($3 + [1008]) & [1]) == 0) ){ goto $label$50 }
	CALL $11(*($40))
	
.LABEL $label$50
	CALL $30(($3 + [760]), [8917])
	*(($42 = (($3 + [744]) + [8]))) = [0]
	*($3 + [744]) = (int_64)0
	$4 = CALL $1([8931])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$53 }
	*($3 + [744]) = ($4 << [1])
	$7 = $22
	if ( $4 ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$53
	$5 = (($4 + [16]) & [-16])
	$7 = CALL $9($5)
	*($42) = $7
	*($3 + [744]) = ($5 | [1])
	*($3 + [748]) = $4
	
.LABEL $label$52
	CALL memcpy($7, [8931], $4)
	
.LABEL $label$51
	*(($7 + $4)) = [0]
	$1 = *($3 + [1000])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$57 }
	$7 = [0]
	$5 = *([0] + [10272])
	
.LOOP $label$59:
	*((($3 + [1008]) + ($4 = $7))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$4 == (int_32)[12]) )))))
	$7 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[11]) ){ goto $label$58 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$59 }
	
.LABEL $label$58
	*($8) = [0]
	*($3 + [728]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$56 }
	*($3 + [728]) = ($7 << [1])
	$5 = $21
	goto $label$55 
	
.LABEL $label$57
	*($8) = [0]
	*($3 + [728]) = (int_64)0
	*($3 + [728]) = [0]
	$4 = $21
	goto $label$54 
	
.LABEL $label$56
	$9 = (($7 + [16]) & [-16])
	$5 = CALL $9($9)
	*($8) = $5
	*($3 + [728]) = ($9 | [1])
	*($3 + [732]) = $7
	
.LABEL $label$55
	$9 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$60:
	*(($5 + $4)) = *((($3 + [1008]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$60 }
	$4 = ($5 + $7)
	
.LABEL $label$54
	*($4) = [0]
	$4 = *($3 + [728])
	$7 = ($4 & [1])
	CALL $31(($3 + [744]), ( *($8) ? $21 : $7 ), ( *($3 + [732]) ? uint_32($4 >> [1]) : $7 ))
	if ( ((*($3 + [728]) & [1]) == 0) ){ goto $label$61 }
	CALL $11(*($8))
	
.LABEL $label$61
	CALL $30(($3 + [744]), [8947])
	if ( ((int_64)$13 == (int_64)0) ){ goto $label$65 }
	$7 = [0]
	$5 = *([0] + [10272])
	$1 = $13
	
.LOOP $label$67:
	*((($3 + [1008]) + ($4 = $7))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$4 == (int_32)[12]) )))))
	$7 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[11]) ){ goto $label$66 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$67 }
	
.LABEL $label$66
	*($8) = [0]
	*($3 + [728]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$64 }
	*($3 + [728]) = ($7 << [1])
	$5 = $20
	goto $label$63 
	
.LABEL $label$65
	*($8) = [0]
	*($3 + [728]) = (int_64)0
	*($3 + [728]) = [0]
	$4 = $20
	goto $label$62 
	
.LABEL $label$64
	$9 = (($7 + [16]) & [-16])
	$5 = CALL $9($9)
	*($8) = $5
	*($3 + [728]) = ($9 | [1])
	*($3 + [732]) = $7
	
.LABEL $label$63
	$9 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$68:
	*(($5 + $4)) = *((($3 + [1008]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$68 }
	$4 = ($5 + $7)
	
.LABEL $label$62
	*($4) = [0]
	$4 = *($3 + [728])
	$7 = ($4 & [1])
	CALL $31(($3 + [744]), ( *($8) ? $20 : $7 ), ( *($3 + [732]) ? uint_32($4 >> [1]) : $7 ))
	if ( ((*($3 + [728]) & [1]) == 0) ){ goto $label$69 }
	CALL $11(*($8))
	
.LABEL $label$69
	CALL $30(($3 + [744]), [8958])
	CALL $76(($3 + [1008]), ($3 + [776]))
	$4 = *($3 + [1008])
	$7 = ($4 & [1])
	CALL $31(($3 + [744]), ( *($40) ? $19 : $7 ), ( *($3 + [1012]) ? uint_32($4 >> [1]) : $7 ))
	if ( ((*($3 + [1008]) & [1]) == 0) ){ goto $label$70 }
	CALL $11(*($40))
	
.LABEL $label$70
	CALL $30(($3 + [744]), [8917])
	$1 = *($0)
	*($3 + [712]) = [8404]
	*($3 + [716]) = CALL $1([8404])
	*($3 + [72]) = *($3 + [712])
	CALL $40(($3 + [720]), ($3 + [72]))
	*($8) = *($3 + [720])
	*($3 + [728]) = $1
	*($3 + [696]) = [8336]
	*($3 + [700]) = CALL $1([8336])
	*($3 + [64]) = *($3 + [696])
	$7 = CALL $40(($3 + [704]), ($3 + [64]))
	*($3 + [680]) = [8348]
	*($3 + [684]) = CALL $1([8348])
	*($3 + [56]) = *($3 + [680])
	$5 = CALL $40(($3 + [688]), ($3 + [56]))
	*($40) = $34
	*($17) = *($3 + [792])
	*(($4 = ($17 + [8]))) = *($38)
	*($3 + [1008]) = *($0)
	CALL $25($16, ($3 + [760]))
	$9 = *($30)
	if ( ((uint_32)$9 >= (uint_32)*($28)) ){ goto $label$73 }
	CALL $77($9, ($3 + [728]), *($3 + [704]), *($3 + [688]), ($3 + [1008]))
	*($30) = (*($30) + [40])
	if ( (*($16) & [1]) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$73
	CALL $101($18, ($3 + [728]), $7, $5, ($3 + [1008]))
	if ( ((*($16) & [1]) == 0) ){ goto $label$71 }
	
.LABEL $label$72
	CALL $11(*((($3 + [1008]) + [40])))
	
.LABEL $label$71
	$1 = *($0)
	*($3 + [664]) = [8404]
	*($3 + [668]) = CALL $1([8404])
	*($3 + [48]) = *($3 + [664])
	CALL $40(($3 + [672]), ($3 + [48]))
	*($8) = *($3 + [672])
	*($3 + [728]) = $1
	*($3 + [656]) = [8336]
	*($3 + [660]) = CALL $1([8336])
	*($3 + [40]) = *($3 + [656])
	$7 = CALL $40(($3 + [704]), ($3 + [40]))
	*($3 + [648]) = [8348]
	*($3 + [652]) = CALL $1([8348])
	*($3 + [32]) = *($3 + [648])
	$5 = CALL $40(($3 + [688]), ($3 + [32]))
	*($40) = $13
	*($17) = *($3 + [776])
	*($4) = *($39)
	*($3 + [1008]) = *($0)
	CALL $25($16, ($3 + [744]))
	$4 = *($30)
	if ( ((uint_32)$4 >= (uint_32)*($28)) ){ goto $label$76 }
	CALL $77($4, ($3 + [728]), *($3 + [704]), *($3 + [688]), ($3 + [1008]))
	*($30) = (*($30) + [40])
	if ( (*($16) & [1]) ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	CALL $101($18, ($3 + [728]), $7, $5, ($3 + [1008]))
	if ( ((*($16) & [1]) == 0) ){ goto $label$74 }
	
.LABEL $label$75
	CALL $11(*((($3 + [1008]) + [40])))
	
.LABEL $label$74
	*($26) = [1]
	$1 = CALL current_time()
	*($3 + [1016]) = (int_64)0
	*($3 + [1008]) = ((int_64)((int_64)$1 + (int_64)*($3 + [792])) + (int_64)*($3 + [776]))
	CALL $102(($3 + [1136]), ($3 + [1008]), *($0), [0])
	if ( ((*($3 + [744]) & [1]) == 0) ){ goto $label$77 }
	CALL $11(*($42))
	
.LABEL $label$77
	if ( ((*($3 + [760]) & [1]) == 0) ){ goto $label$78 }
	CALL $11(*($41))
	
.LABEL $label$78
	CALL $103(($3 + [1136]))
	$4 = *($12)
	$32 = ($32 + [1])
	if ( ($32 <= int_32((*($31) - $4) >> [5])) ){ goto $label$13 }
	
.LABEL $label$12
	$1 = CALL current_time()
	*($10 + [104]) = (int_64)1
	*($10 + [72]) = $1
	$42 = ($0 + [112])
	$1 = *(($6 + [16]))
	$7 = *(($0 + [140]))
	$5 = *(($0 + [136]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$80 }
	
.LOOP $label$82:
	$4 = ($7 + [-24])
	$18 = *($4)
	if ( ((int_64)*($18) == (int_64)$1) ){ goto $label$81 }
	$7 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$82 }
	goto $label$80 
	
.LABEL $label$81
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$80 }
	if ( ((int_32)*($18 + [52]) == (int_32)$42) ){ goto $label$79 }
	CALL eosio_assert([0], [11092])
	goto $label$79 
	
.LABEL $label$80
	$18 = [0]
	$4 = CALL db_find_i64(*($42), *(($0 + [120])), (int_64)7343588134136840192, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$79 }
	$18 = CALL $87($42, $4)
	if ( ((int_32)*($18 + [52]) == (int_32)$42) ){ goto $label$79 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$79
	CALL eosio_assert(((int_32)$18 != (int_32)[0]), [10323])
	*($3 + [800]) = [0]
	*($3 + [792]) = (int_64)0
	*($3 + [784]) = [0]
	*($3 + [776]) = (int_64)0
	$4 = CALL $84(($3 + [520]), $10)
	CALL $104($0, $4)
	CALL $69(($4 + [112]), *(($4 + [116])))
	$7 = *($4 + [88])
	if ( ($7 == 0) ){ goto $label$83 }
	*(($4 + [92])) = $7
	CALL $11($7)
	
.LABEL $label$83
	$4 = CALL $84(($3 + [392]), $10)
	CALL prints([10213])
	$1 = *($0)
	*($3 + [1140]) = $4
	*($3 + [1136]) = $0
	CALL $92(($3 + [1008]), ($0 + [192]), $1, ($3 + [1136]))
	CALL $69(($4 + [112]), *(($4 + [116])))
	$7 = *($4 + [88])
	if ( ($7 == 0) ){ goto $label$84 }
	*(($4 + [92])) = $7
	CALL $11($7)
	
.LABEL $label$84
	$1 = *(($6 + [16]))
	$7 = *(($0 + [140]))
	$9 = *(($0 + [136]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$86 }
	
.LOOP $label$88:
	$4 = ($7 + [-24])
	$5 = *($4)
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$87 }
	$7 = $4
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$88 }
	goto $label$86 
	
.LABEL $label$87
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$86 }
	if ( ((int_32)*($5 + [52]) == (int_32)$42) ){ goto $label$85 }
	CALL eosio_assert([0], [11092])
	goto $label$85 
	
.LABEL $label$86
	$5 = CALL $87($42, CALL $fimport$25(*(($0 + [112])), *(($0 + [120])), (int_64)7343588134136840192, $1))
	if ( ((int_32)*($5 + [52]) == (int_32)$42) ){ goto $label$85 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$85
	$4 = *(($5 + [24]))
	$7 = *($5 + [20])
	*($3 + [760]) = ($3 + [936])
	*($3 + [1136]) = (int_64)0
	CALL $83(($3 + [728]), ($3 + [760]), ($3 + [1136]))
	*($3 + [1136]) = (int_64)0
	CALL $83(($3 + [384]), ($3 + [760]), ($3 + [1136]))
	*($3 + [24]) = *($3 + [384])
	*($3 + [376]) = ($3 + [760])
	*($3 + [380]) = [0]
	*($3 + [16]) = *($3 + [376])
	CALL $105(($3 + [776]), ($3 + [24]), ($3 + [16]))
	$4 = ($4 - $7)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$89 }
	$26 = int_32($4 >> [3])
	$19 = (($3 + [1136]) + [112])
	$32 = (($3 + [1008]) + [112])
	$41 = ($3 + [800])
	$30 = (($3 + [1136]) + [116])
	$17 = (($3 + [1136]) + [88])
	$38 = (($3 + [1136]) + [92])
	$39 = [0]
	
.LOOP $label$90:
	$16 = *($3 + [780])
	$7 = *($3 + [776])
	if ( ((int_32)$7 == (int_32)$16) ){ goto $label$89 }
	$4 = ($7 + [128])
	if ( ((int_32)$4 == (int_32)$16) ){ goto $label$91 }
	
.LOOP $label$92:
	CALL $84(($3 + [1136]), $7)
	CALL $84(($3 + [1008]), $4)
	$9 = (($3 + [1008]) + [24])
	$5 = (($3 + [1136]) + [24])
	if ( ((int_64)*($5) == (int_64)*($9)) ){ goto $label$93 }
	CALL eosio_assert([0], [9635])
	
.LABEL $label$93
	$40 = (($3 + [1008]) + [16])
	$2 = *($40)
	$8 = (($3 + [1136]) + [16])
	$1 = *($8)
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$98 }
	$1 = *((($3 + [1008]) + [80]))
	$2 = *((($3 + [1136]) + [80]))
	if ( (int_64)($2 == 0) ){ goto $label$97 }
	if ( (int_64)($1 == 0) ){ goto $label$96 }
	goto $label$95 
	
.LABEL $label$98
	if ( ((int_64)*($5) == (int_64)*($9)) ){ goto $label$99 }
	CALL eosio_assert([0], [9635])
	$2 = *($40)
	$1 = *($8)
	
.LABEL $label$99
	$9 = ((int_64)$1 >= (int_64)$2)
	goto $label$94 
	
.LABEL $label$97
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$95 }
	
.LABEL $label$96
	$9 = ((int_64)$2 != (int_64)0)
	goto $label$94 
	
.LABEL $label$95
	$2 = *((($3 + [1008]) + [64]))
	$1 = *((($3 + [1136]) + [64]))
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$100 }
	$9 = ((uint_64)*((($3 + [1136]) + [56])) <= (uint_64)*((($3 + [1008]) + [56])))
	goto $label$94 
	
.LABEL $label$100
	$9 = ((uint_64)$1 <= (uint_64)$2)
	
.LABEL $label$94
	CALL $69($32, *((($3 + [1008]) + [116])))
	$5 = *((($3 + [1008]) + [88]))
	if ( ($5 == 0) ){ goto $label$101 }
	*((($3 + [1008]) + [92])) = $5
	CALL $11($5)
	
.LABEL $label$101
	CALL $69($19, *($30))
	$5 = *($17)
	if ( ($5 == 0) ){ goto $label$102 }
	*($38) = $5
	CALL $11($5)
	
.LABEL $label$102
	$7 = ( $7 ? $4 : $9 )
	$4 = ($4 + [128])
	if ( ((int_32)$16 != (int_32)$4) ){ goto $label$92 }
	
.LABEL $label$91
	CALL prints([8967])
	CALL printn(*($7))
	CALL prints([8983])
	CALL $106(($7 + [16]), [8994], ($7 + [64]), [9005], ($7 + [80]), [8495])
	$4 = CALL $84(($3 + [1136]), $7)
	$5 = *($3 + [796])
	if ( ((uint_32)$5 >= (uint_32)*($41)) ){ goto $label$106 }
	CALL $84($5, $4)
	*($3 + [796]) = (*($3 + [796]) + [128])
	$5 = *($3 + [780])
	$4 = ($7 + [128])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$105 }
	goto $label$104 
	
.LABEL $label$106
	CALL $88(($3 + [792]), $4)
	$5 = *($3 + [780])
	$4 = ($7 + [128])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$104 }
	
.LABEL $label$105
	$28 = ($5 + [-128])
	$4 = $7
	
.LOOP $label$107:
	$7 = ($4 + [128])
	$4 = CALL memcpy($4, $7, [88])
	$9 = ($4 + [88])
	$5 = *($9)
	if ( ($5 == 0) ){ goto $label$109 }
	*(($4 + [92])) = $5
	CALL $11($5)
	*(($5 = ($4 + [96]))) = [0]
	*($4 + [88 align=4]) = (int_64)0
	goto $label$108 
	
.LABEL $label$109
	$5 = ($4 + [96])
	
.LABEL $label$108
	$8 = ($4 + [216])
	*($9) = *($8)
	$9 = ($4 + [224])
	$40 = *($9)
	*($9) = [0]
	*($5) = $40
	*($8) = (int_64)0
	*(($4 + [104])) = *(($4 + [232]))
	$5 = ($4 + [116])
	$9 = ($4 + [112])
	CALL $69($9, *($5))
	$40 = ($4 + [240])
	*($9) = *($40)
	$8 = ($4 + [244])
	$16 = *($8)
	*($5) = $16
	$4 = *(($4 + [248]))
	*(($4 + [120])) = $4
	if ( ($4 == 0) ){ goto $label$111 }
	*($16 + [8]) = $5
	*($40) = $8
	*($8) = (int_64)0
	$4 = $7
	if ( ((int_32)$28 != (int_32)$7) ){ goto $label$107 }
	goto $label$110 
	
.LABEL $label$111
	*($9) = $5
	$4 = $7
	if ( ((int_32)$28 != (int_32)$7) ){ goto $label$107 }
	
.LABEL $label$110
	$4 = *($3 + [780])
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$103 }
	
.LABEL $label$104
	
.LOOP $label$112:
	CALL $69(($4 + [-16]), *(($4 + [-12])))
	$5 = ($4 + [-128])
	$9 = *(($4 + [-40]))
	if ( ($9 == 0) ){ goto $label$113 }
	*(($4 + [-36])) = $9
	CALL $11($9)
	
.LABEL $label$113
	$4 = $5
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$112 }
	
.LABEL $label$103
	*($3 + [780]) = $7
	CALL $69($19, *($30))
	$4 = *($17)
	if ( ($4 == 0) ){ goto $label$114 }
	*($38) = $4
	CALL $11($4)
	
.LABEL $label$114
	$4 = ((int_32)$39 < (int_32)$26)
	$39 = ($39 + [1])
	if ( $4 ){ goto $label$90 }
	
.LABEL $label$89
	$8 = CALL $84(($3 + [248]), $10)
	*($3 + [244]) = $18
	*($3 + [240]) = $42
	*($3 + [224]) = (int_64)0
	*($3 + [232]) = [0]
	$4 = *($3 + [792])
	$5 = *($3 + [796])
	$7 = ($5 - $4)
	if ( ($7 == 0) ){ goto $label$117 }
	$4 = int_32($7 >> [7])
	if ( ((uint_32)$4 >= (uint_32)[33554432]) ){ goto $label$116 }
	$7 = CALL $9($7)
	*(($3 + [232])) = ($7 + ($4 << [7]))
	*($3 + [224]) = $7
	*($3 + [228]) = $7
	$5 = *($3 + [796])
	$4 = *($3 + [792])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$117 }
	
.LOOP $label$118:
	CALL $84($7, $4)
	$7 = (*($3 + [228]) + [128])
	*($3 + [228]) = $7
	$4 = ($4 + [128])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$118 }
	$4 = *($3 + [792])
	$5 = *($3 + [796])
	
.LABEL $label$117
	*($3 + [216]) = [0]
	*($3 + [208]) = (int_64)0
	$4 = ($5 - $4)
	if ( ($4 == 0) ){ goto $label$119 }
	$5 = int_32($4 >> [7])
	if ( ((uint_32)$5 >= (uint_32)[33554432]) ){ goto $label$115 }
	$7 = CALL $9($4)
	*(($3 + [216])) = ($7 + ($5 << [7]))
	*($3 + [208]) = $7
	*($3 + [212]) = $7
	$5 = *($3 + [796])
	$4 = *($3 + [792])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$119 }
	
.LOOP $label$120:
	CALL $84($7, $4)
	$7 = (*($3 + [212]) + [128])
	*($3 + [212]) = $7
	$4 = ($4 + [128])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$120 }
	
.LABEL $label$119
	*($3 + [8]) = *($3 + [240])
	CALL $90($0, $8, ($3 + [8]), [0], ($3 + [224]), ($3 + [208]), [1])
	$9 = *($3 + [208])
	if ( ($9 == 0) ){ goto $label$121 }
	$4 = *($3 + [212])
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$123 }
	
.LOOP $label$124:
	CALL $69(($4 + [-16]), *(($4 + [-12])))
	$7 = ($4 + [-128])
	$5 = *(($4 + [-40]))
	if ( ($5 == 0) ){ goto $label$125 }
	*(($4 + [-36])) = $5
	CALL $11($5)
	
.LABEL $label$125
	$4 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$124 }
	$4 = *($3 + [208])
	goto $label$122 
	
.LABEL $label$123
	$4 = $9
	
.LABEL $label$122
	*($3 + [212]) = $9
	CALL $11($4)
	
.LABEL $label$121
	$9 = *($3 + [224])
	if ( ($9 == 0) ){ goto $label$126 }
	$4 = *($3 + [228])
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$128 }
	
.LOOP $label$129:
	CALL $69(($4 + [-16]), *(($4 + [-12])))
	$7 = ($4 + [-128])
	$5 = *(($4 + [-40]))
	if ( ($5 == 0) ){ goto $label$130 }
	*(($4 + [-36])) = $5
	CALL $11($5)
	
.LABEL $label$130
	$4 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$129 }
	$4 = *($3 + [224])
	goto $label$127 
	
.LABEL $label$128
	$4 = $9
	
.LABEL $label$127
	*($3 + [228]) = $9
	CALL $11($4)
	
.LABEL $label$126
	CALL $69(($8 + [112]), *(($8 + [116])))
	$4 = *($8 + [88])
	if ( ($4 == 0) ){ goto $label$131 }
	*(($8 + [92])) = $4
	CALL $11($4)
	
.LABEL $label$131
	$9 = *($3 + [776])
	if ( ($9 == 0) ){ goto $label$132 }
	$4 = *($3 + [780])
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$134 }
	
.LOOP $label$135:
	CALL $69(($4 + [-16]), *(($4 + [-12])))
	$7 = ($4 + [-128])
	$5 = *(($4 + [-40]))
	if ( ($5 == 0) ){ goto $label$136 }
	*(($4 + [-36])) = $5
	CALL $11($5)
	
.LABEL $label$136
	$4 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$135 }
	$4 = *($3 + [776])
	goto $label$133 
	
.LABEL $label$134
	$4 = $9
	
.LABEL $label$133
	*($3 + [780]) = $9
	CALL $11($4)
	
.LABEL $label$132
	$9 = *($3 + [792])
	if ( ($9 == 0) ){ goto $label$137 }
	$4 = *($3 + [796])
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$139 }
	
.LOOP $label$140:
	CALL $69(($4 + [-16]), *(($4 + [-12])))
	$7 = ($4 + [-128])
	$5 = *(($4 + [-40]))
	if ( ($5 == 0) ){ goto $label$141 }
	*(($4 + [-36])) = $5
	CALL $11($5)
	
.LABEL $label$141
	$4 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$140 }
	$4 = *($3 + [792])
	goto $label$138 
	
.LABEL $label$139
	$4 = $9
	
.LABEL $label$138
	*($3 + [796]) = $9
	CALL $11($4)
	
.LABEL $label$137
	CALL $69(($10 + [112]), *(($10 + [116])))
	$4 = *($10 + [88])
	if ( ($4 == 0) ){ goto $label$142 }
	*(($10 + [92])) = $4
	CALL $11($4)
	
.LABEL $label$142
	$9 = *($3 + [960])
	if ( ($9 == 0) ){ goto $label$143 }
	$8 = ($3 + [964])
	$7 = *($8)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$145 }
	
.LOOP $label$146:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$147 }
	CALL $69(($4 + [112]), *(($4 + [116])))
	$5 = *($4 + [88])
	if ( ($5 == 0) ){ goto $label$148 }
	*(($4 + [92])) = $5
	CALL $11($5)
	
.LABEL $label$148
	CALL $11($4)
	
.LABEL $label$147
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$146 }
	$4 = *(($3 + [960]))
	goto $label$144 
	
.LABEL $label$145
	$4 = $9
	
.LABEL $label$144
	*($8) = $9
	CALL $11($4)
	
.LABEL $label$143
	$global$0 = ($3 + [1264])
	return (unreachable)
	
.LABEL $label$116
	CALL $34(($3 + [224]))
	
.LABEL $label$115
	CALL $34(($3 + [208]))
	
.LABEL $label$11
	CALL $24(($3 + [744]))
	
.LABEL $label$10
	CALL $24(($3 + [760]))
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $50 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [512])
	$global$0 = $3
	*($3 + [504]) = $2
	CALL require_auth($1)
	*(($4 = (($3 + [152]) + [16]))) = (int_64)0
	*(($5 = ($3 + [176]))) = (int_64)0
	*(($3 + [160])) = (int_64)0
	$6 = [0]
	*(($7 = (($3 + [152]) + [20]))) = [0]
	*($5) = [0]
	*($4) = $7
	*($3 + [152]) = (int_64)0
	CALL $68(($3 + [440]), ($0 + [32]), ($3 + [152]))
	CALL $69($4, *($7))
	CALL eosio_assert(*($3 + [440]), [10252])
	CALL $69((($3 + [440]) + [16]), *((($3 + [440]) + [20])))
	CALL $74(($3 + [480]), $0, $2, [1])
	*((($3 + [440]) + [32])) = (int_64)0
	*($3 + [456]) = (int_64)-1
	*($3 + [464]) = (int_64)0
	*($3 + [440]) = *($0)
	*($3 + [448]) = *($3 + [496])
	*($3 + [432]) = ($3 + [440])
	CALL $108(($3 + [152]), ($3 + [432]), ($3 + [504]))
	$8 = ($3 + [432])
	$4 = *($3 + [156])
	if ( ($4 == 0) ){ goto $label$1 }
	if ( ((int_64)*($3 + [504]) != (int_64)*($4)) ){ goto $label$1 }
	$8 = *($3 + [152])
	$6 = $4
	
.LABEL $label$1
	CALL eosio_assert(*($3 + [488]), [9196])
	CALL eosio_assert(((int_64)*(*($3 + [484]) + [8]) == (int_64)$1), [9212])
	CALL eosio_assert(((int_32)*(*($3 + [484]) + [40]) ^ (int_32)[1]), [8431])
	$1 = CALL $71(($3 + [504]))
	$9 = ($0 + [72])
	$7 = *(($0 + [100]))
	$10 = *(($0 + [96]))
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$5:
	$4 = ($7 + [-24])
	$5 = *($4)
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$4 }
	$7 = $4
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$3 }
	if ( ((int_32)*($5 + [84]) == (int_32)$9) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	goto $label$2 
	
.LABEL $label$3
	$5 = [0]
	$4 = CALL db_find_i64(*($9), *(($0 + [80])), (int_64)-4131301141914845184, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $72($9, $4)
	if ( ((int_32)*($5 + [84]) == (int_32)$9) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$2
	CALL eosio_assert(*($5 + [8]), [9922])
	$9 = [0]
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [9950])
	$11 = ($0 + [112])
	$1 = *($5 + [16])
	$7 = *(($0 + [140]))
	$5 = *(($0 + [136]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$9:
	$4 = ($7 + [-24])
	$10 = *($4)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$8 }
	$7 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$7 }
	if ( ((int_32)*($10 + [52]) == (int_32)$11) ){ goto $label$10 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$10
	$9 = $10
	goto $label$6 
	
.LABEL $label$7
	$4 = CALL db_find_i64(*($11), *(($0 + [120])), (int_64)7343588134136840192, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	$9 = CALL $87($11, $4)
	if ( ((int_32)*($9 + [52]) == (int_32)$11) ){ goto $label$6 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [10323])
	$1 = *($9 + [32])
	*($3 + [424]) = ($3 + [440])
	$2 = (int_64)0
	*($3 + [152]) = (int_64)0
	CALL $124(($3 + [416]), ($3 + [424]), ($3 + [152]))
	if ( (int_64)($1 == 0) ){ goto $label$11 }
	
.LOOP $label$12:
	$4 = *($3 + [420])
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_64)*($4) == (int_64)*($3 + [504])) ){ goto $label$11 }
	CALL $86(($3 + [416]))
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((uint_64)$1 > (uint_64)$2) ){ goto $label$12 }
	
.LABEL $label$11
	*(($3 + [408])) = [0]
	*($3 + [400]) = (int_64)0
	$4 = CALL $1([9249])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$20 }
	*($3 + [400]) = ($4 << [1])
	$7 = (($3 + [400]) | [1])
	if ( $4 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$5 = (($4 + [16]) & [-16])
	$7 = CALL $9($5)
	*($3 + [400]) = ($5 | [1])
	*($3 + [408]) = $7
	*($3 + [404]) = $4
	
.LABEL $label$19
	CALL memcpy($7, [9249], $4)
	
.LABEL $label$18
	*(($7 + $4)) = [0]
	*($3 + [352]) = [0]
	*($3 + [344]) = (int_64)0
	$7 = (($3 + [344]) | [1])
	
.LOOP $label$21:
	$2 = ((uint_64)$1 / (uint_64)(int_64)10)
	$4 = (CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$2 * (int_64)10))
	CALL $125(($3 + [152]), int_32((( ($4) | [48]) ? ($4 + [55]) : ($4 <= [10]) ) << [24]) >> [24]), ($3 + [344]))
	if ( (*($3 + [344]) & [1]) ){ goto $label$23 }
	*($3 + [344]) = [0]
	goto $label$22 
	
.LABEL $label$23
	*(*((($3 + [344]) + [8]))) = [0]
	*($3 + [348]) = [0]
	
.LABEL $label$22
	CALL $29(($3 + [344]), [0])
	*((($3 + [344]) + [8])) = *((($3 + [152]) + [8]))
	*($3 + [344]) = *($3 + [152])
	$4 = ((uint_64)$1 > (uint_64)(int_64)9)
	$1 = $2
	if ( $4 ){ goto $label$21 }
	$4 = *($3 + [344])
	$5 = ($4 & [1])
	$10 = (($3 + [344]) + [8])
	CALL $31(($3 + [400]), ( *($10) ? $7 : $5 ), ( *($3 + [348]) ? uint_32($4 >> [1]) : $5 ))
	if ( ((*($3 + [344]) & [1]) == 0) ){ goto $label$24 }
	CALL $11(*($10))
	
.LABEL $label$24
	CALL $30(($3 + [400]), [9272])
	*((($3 + [384]) + [8])) = [0]
	*($3 + [384]) = (int_64)0
	$4 = CALL $1([9298])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$27 }
	*($3 + [384]) = ($4 << [1])
	$5 = (($3 + [384]) | [1])
	if ( $4 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$7 = (($4 + [16]) & [-16])
	$5 = CALL $9($7)
	*($3 + [384]) = ($7 | [1])
	*($3 + [392]) = $5
	*($3 + [388]) = $4
	
.LABEL $label$26
	CALL memcpy($5, [9298], $4)
	
.LABEL $label$25
	$7 = [0]
	*(($5 + $4)) = [0]
	CALL $30(($3 + [384]), [8675])
	$1 = *($3 + [504])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$31 }
	$5 = *([0] + [10272])
	
.LOOP $label$33:
	*((($3 + [152]) + ($4 = $7))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$4 == (int_32)[12]) )))))
	$7 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[11]) ){ goto $label$32 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$33 }
	
.LABEL $label$32
	*(($3 + [352])) = [0]
	*($3 + [344]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$30 }
	*($3 + [344]) = ($7 << [1])
	$5 = (($3 + [344]) | [1])
	goto $label$29 
	
.LABEL $label$31
	*(($3 + [352])) = [0]
	*($3 + [344]) = (int_64)0
	*($3 + [344]) = [0]
	$4 = (($3 + [344]) | [1])
	$7 = $4
	goto $label$28 
	
.LABEL $label$30
	$10 = (($7 + [16]) & [-16])
	$5 = CALL $9($10)
	*($3 + [344]) = ($10 | [1])
	*($3 + [352]) = $5
	*($3 + [348]) = $7
	
.LABEL $label$29
	$10 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$34:
	*(($5 + $4)) = *((($3 + [152]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$34 }
	$7 = ($5 + $7)
	$4 = (($3 + [344]) | [1])
	
.LABEL $label$28
	*($7) = [0]
	$7 = *($3 + [344])
	$5 = ($7 & [1])
	CALL $31(($3 + [384]), ( *($3 + [352]) ? $4 : $5 ), ( *($3 + [348]) ? uint_32($7 >> [1]) : $5 ))
	if ( ((*($3 + [344]) & [1]) == 0) ){ goto $label$35 }
	CALL $11(*(($3 + [352])))
	
.LABEL $label$35
	CALL $30(($3 + [384]), [9299])
	$4 = ($6 + [16])
	CALL $76(($3 + [152]), $4)
	$7 = *($3 + [152])
	$5 = ($7 & [1])
	CALL $31(($3 + [384]), ( *($3 + [160]) ? (($3 + [152]) | [1]) : $5 ), ( *($3 + [156]) ? uint_32($7 >> [1]) : $5 ))
	if ( ((*($3 + [152]) & [1]) == 0) ){ goto $label$36 }
	CALL $11(*(($3 + [160])))
	
.LABEL $label$36
	CALL $30(($3 + [384]), [8917])
	$1 = *($0)
	*($3 + [312]) = [8404]
	*($3 + [316]) = CALL $1([8404])
	*($3 + [16]) = *($3 + [312])
	$7 = CALL $40(($3 + [320]), ($3 + [16]))
	*($3 + [328]) = $1
	*($3 + [336]) = *($7)
	*($3 + [296]) = [8336]
	*($3 + [300]) = CALL $1([8336])
	*($3 + [8]) = *($3 + [296])
	$7 = CALL $40(($3 + [304]), ($3 + [8]))
	*($3 + [280]) = [8348]
	*($3 + [284]) = CALL $1([8348])
	*($3) = *($3 + [280])
	$5 = CALL $40(($3 + [288]), $3)
	$1 = *($6 + [8])
	*(($3 + [176])) = *(($4 + [8]))
	*($3 + [152]) = *($0)
	*($3 + [168]) = *($4)
	*($3 + [160]) = $1
	CALL $25((($3 + [152]) + [32]), ($3 + [384]))
	$4 = CALL $77(($3 + [344]), ($3 + [328]), *($7), *($5), ($3 + [152]))
	CALL $121($4)
	$7 = *($4 + [28])
	if ( ($7 == 0) ){ goto $label$37 }
	*(($4 + [32])) = $7
	CALL $11($7)
	
.LABEL $label$37
	$7 = *($4 + [16])
	if ( ($7 == 0) ){ goto $label$38 }
	*(($4 + [20])) = $7
	CALL $11($7)
	
.LABEL $label$38
	if ( ((*($3 + [184]) & [1]) == 0) ){ goto $label$39 }
	CALL $11(*(($3 + [192])))
	
.LABEL $label$39
	*(($3 + [176])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($4 = (($3 + [152]) + [116]))) = (int_64)0
	*($3 + [160]) = (int_64)0
	*($3 + [152]) = (int_64)0
	*($3 + [168]) = (int_64)0
	*($3 + [240]) = (int_64)0
	*($3 + [264]) = $4
	CALL memcpy(($3 + [152]), $6, [88])
	if ( ((int_32)($3 + [152]) == (int_32)$6) ){ goto $label$40 }
	CALL $126((($3 + [152]) + [88]), *($6 + [88]), *(($6 + [92])))
	*($3 + [256]) = *($6 + [104])
	CALL $98(($3 + [264]), *($6 + [112]), ($6 + [116]))
	
.LABEL $label$40
	*(($3 + [256])) = (int_64)3
	$4 = CALL $84(($3 + [24]), ($3 + [152]))
	CALL $104($0, $4)
	CALL $69(($4 + [112]), *(($4 + [116])))
	$7 = *($4 + [88])
	if ( ($7 == 0) ){ goto $label$41 }
	*(($4 + [92])) = $7
	CALL $11($7)
	
.LABEL $label$41
	*($3 + [344]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $8))
	if ( $6 ){ goto $label$42 }
	CALL eosio_assert([0], [11175])
	$6 = *($3 + [348])
	
.LABEL $label$42
	CALL $109(($3 + [344]))
	CALL $110(*($3 + [432]), $6)
	CALL $127($0, *($3 + [216]))
	CALL $69(($3 + [264]), *(($3 + [268])))
	$4 = *(($3 + [240]))
	if ( ($4 == 0) ){ goto $label$43 }
	*(($3 + [244])) = $4
	CALL $11($4)
	
.LABEL $label$43
	if ( (*($3 + [384]) & [1]) ){ goto $label$45 }
	if ( (*($3 + [400]) & [1]) ){ goto $label$44 }
	goto $label$15 
	
.LABEL $label$45
	CALL $11(*($3 + [392]))
	if ( ((*($3 + [400]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$44
	CALL $11(*($3 + [408]))
	$10 = *($3 + [464])
	if ( ($10 == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$17
	CALL $24(($3 + [400]))
	
.LABEL $label$16
	CALL $24(($3 + [384]))
	
.LABEL $label$15
	$10 = *($3 + [464])
	if ( $10 ){ goto $label$13 }
	
.LABEL $label$14
	$global$0 = ($3 + [512])
	return 
	
.LABEL $label$13
	$0 = ($3 + [468])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$10) ){ goto $label$47 }
	
.LOOP $label$48:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$49 }
	CALL $69(($4 + [112]), *(($4 + [116])))
	$5 = *($4 + [88])
	if ( ($5 == 0) ){ goto $label$50 }
	*(($4 + [92])) = $5
	CALL $11($5)
	
.LABEL $label$50
	CALL $11($4)
	
.LABEL $label$49
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$48 }
	$4 = *(($3 + [464]))
	goto $label$46 
	
.LABEL $label$47
	$4 = $10
	
.LABEL $label$46
	*($0) = $10
	CALL $11($4)
	$global$0 = ($3 + [512])
	(unreachable)
	(unreachable)
}

int_32 .FUNC $51 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [256])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [248]) = (int_64)0
	*($4 + [240]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$5
	$8 = ($2 + $7)
	CALL memcpy(($4 + [240]), $2, [8])
	$9 = ($2 + [8])
	$3 = (($4 + [240]) + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$6
	CALL memcpy($3, $9, [8])
	*(($4 + [32])) = $8
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [16])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [198])) = [0]
	*(($4 + [196])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	$8 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($3)
	$1 = *($4 + [240])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($8) + $6))
	
.LABEL $label$7
	CALL void $8((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $3($2)
	
.LABEL $label$8
	CALL $65(($4 + [8]))
	$global$0 = ($4 + [256])
	return [1]
}

void .FUNC $52 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [400])
	$global$0 = $4
	*($4 + [376]) = $2
	CALL require_auth(*($0))
	$2 = CALL $71(($4 + [376]))
	$5 = ($0 + [72])
	$7 = *(($0 + [100]))
	$6 = *(($0 + [96]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$2) ){ goto $label$3 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)*($9 + [84]) == (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [11092])
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [80])), (int_64)-4131301141914845184, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $72($5, $8)
	if ( ((int_32)*($9 + [84]) == (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$1
	CALL eosio_assert(*($9 + [8]), [9922])
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [9950])
	$7 = ($3 + [8])
	*(($8 = (($4 + [360]) + [8]))) = *($7)
	*($4 + [352]) = $5
	*($4 + [356]) = $9
	*($4 + [360]) = *($3)
	$2 = *($4 + [376])
	*((($4 + [16]) + [8])) = *($8)
	*($4 + [16]) = *($4 + [360])
	*($4 + [8]) = *($4 + [352])
	CALL $73(($4 + [200]), $0, ($4 + [16]), $2, ($4 + [8]), $1)
	CALL $74(($4 + [328]), $0, *($4 + [376]), [0])
	$8 = *($4 + [332])
	CALL prints([8415])
	CALL eosio_assert(((int_32)*($8 + [40]) ^ (int_32)[1]), [8431])
	*(($5 = (($4 + [200]) + [24]))) = (int_64)0
	*(($10 = ($4 + [296]))) = [0]
	*(($6 = ($4 + [316]))) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [312]) = $6
	$2 = CALL current_time()
	*(($6 = (($4 + [168]) + [24]))) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [168]) = $1
	*($4 + [160]) = [8465]
	*($4 + [164]) = CALL $1([8465])
	*($4) = *($4 + [160])
	*($4 + [176]) = *(CALL $40(($4 + [392]), $4))
	*($6) = *($7)
	*($4 + [184]) = *($3)
	$2 = ((int_64)$2 + (int_64)5)
	if ( (*($4 + [336]) == 0) ){ goto $label$9 }
	CALL prints([8497])
	CALL printn(*($4 + [376]))
	CALL prints([8495])
	*((($4 + [200]) + [8])) = $1
	*($5) = *($7)
	*($4 + [240]) = [0]
	*($4 + [264]) = $2
	*($4 + [200]) = *($4 + [376])
	*($4 + [216]) = *($3)
	*($4 + [232]) = *($8 + [32])
	*($4 + [248]) = *($8 + [48])
	*($4 + [256]) = *($8 + [56])
	$7 = ($8 + [92])
	$6 = ($4 + [288])
	CALL $129($6, *($8 + [88]), *($7))
	*($4 + [280]) = *($8 + [80])
	if ( ((int_64)*($9 + [32]) != (int_64)(CASTING uint_64)(uint_32 int_32((*($7) - *($8 + [88])) >> [5]))) ){ goto $label$8 }
	$9 = *((($4 + [200]) + [92]))
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$10 }
	$8 = ($7 + [32])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$10 }
	
.LOOP $label$11:
	if ( ((int_64)*(($8 + [24])) == (int_64)*(($7 + [24]))) ){ goto $label$12 }
	CALL eosio_assert([0], [9635])
	
.LABEL $label$12
	$7 = ( $8 ? $7 : ((int_64)*(($8 + [16])) > (int_64)*($7 + [16])) )
	$8 = ($8 + [32])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$11 }
	$9 = *(($4 + [292]))
	
.LABEL $label$10
	$3 = ($7 + [32])
	$8 = ($9 - $3)
	$9 = int_32($8 >> [5])
	if ( ($8 == 0) ){ goto $label$13 }
	CALL memmove($7, $3, $8)
	
.LABEL $label$13
	$8 = ($7 + ($9 << [5]))
	*(($4 + [292])) = $8
	goto $label$7 
	
.LABEL $label$9
	CALL prints([8478])
	CALL printn(*($4 + [376]))
	CALL prints([8495])
	*($5) = *($7)
	*((($4 + [200]) + [8])) = $1
	*($4 + [216]) = *($3)
	*($4 + [232]) = (int_64)1
	*($4 + [240]) = [0]
	*($4 + [256]) = $2
	*($4 + [264]) = $2
	*($4 + [280]) = (int_64)0
	*($4 + [200]) = *($4 + [376])
	*($4 + [248]) = *($9 + [16])
	$7 = ($4 + [292])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($10)) ){ goto $label$6 }
	*($8) = *($4 + [168])
	*(($8 + [24])) = *((($4 + [168]) + [24]))
	*(($8 + [16])) = *((($4 + [168]) + [16]))
	*(($8 + [8])) = *((($4 + [168]) + [8]))
	*($7) = (*($7) + [32])
	goto $label$5 
	
.LABEL $label$8
	$8 = *((($4 + [200]) + [92]))
	
.LABEL $label$7
	if ( ((uint_32)$8 >= (uint_32)*(($4 + [296]))) ){ goto $label$14 }
	*($8) = *($4 + [168])
	*(($8 + [24])) = *((($4 + [168]) + [24]))
	*(($8 + [16])) = *((($4 + [168]) + [16]))
	*(($8 + [8])) = *((($4 + [168]) + [8]))
	*(($8 = ($4 + [292]))) = (*($8) + [32])
	goto $label$5 
	
.LABEL $label$14
	CALL $81($6, ($4 + [168]))
	goto $label$5 
	
.LABEL $label$6
	CALL $81(($4 + [288]), ($4 + [168]))
	
.LABEL $label$5
	CALL $91($0, ($4 + [200]), (int_64)0, [0])
	$8 = CALL $84(($4 + [32]), ($4 + [200]))
	CALL prints([10213])
	$2 = *($0)
	*($4 + [396]) = $8
	*($4 + [392]) = $0
	CALL $92(($4 + [384]), ($0 + [192]), $2, ($4 + [392]))
	CALL $69(($8 + [112]), *(($8 + [116])))
	$7 = *($8 + [88])
	if ( ($7 == 0) ){ goto $label$15 }
	*(($8 + [92])) = $7
	CALL $11($7)
	
.LABEL $label$15
	CALL $69((($4 + [200]) + [112]), *((($4 + [200]) + [116])))
	$8 = *(($4 + [288]))
	if ( ($8 == 0) ){ goto $label$16 }
	*(($4 + [292])) = $8
	CALL $11($8)
	
.LABEL $label$16
	$global$0 = ($4 + [400])
}

int_32 .FUNC $53 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [368])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = (($4 + [288]) + [24]))) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [276]) = $2
	*($4 + [272]) = $2
	*($4 + [280]) = ($2 + $7)
	*($4 + [352]) = ($4 + [272])
	*($4 + [40]) = ($4 + [288])
	CALL $128(($4 + [40]), ($4 + [352]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [280])
	*($4 + [24]) = *($4 + [272])
	$10 = *($9)
	*(($3 = (($4 + [320]) + [8]))) = $10
	*(($9 = (($4 + [336]) + [8]))) = $10
	$11 = *($4 + [24])
	*($4 + [336]) = $11
	*($4 + [320]) = $11
	$10 = *($9)
	*((($4 + [352]) + [8])) = $10
	*((($4 + [40]) + [24])) = $10
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$1 = *($4 + [336])
	*($4 + [56]) = $1
	*($4 + [352]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*($4 + [192]) = $0
	*(($4 + [224])) = [0]
	*(($4 + [216])) = (int_64)0
	*(($4 + [230])) = [0]
	*(($4 + [228])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [268])) = [0]
	*($4 + [232]) = $0
	*($3) = *($8)
	*($4 + [320]) = *($4 + [304])
	$0 = *($4 + [296])
	$1 = *($4 + [288])
	*($9) = *($3)
	*($4 + [336]) = *($4 + [320])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$11 = *((($4 + [336]) + [8]))
	*((($4 + [352]) + [8])) = $11
	*((($4 + [8]) + [8])) = $11
	$11 = *($4 + [336])
	*($4 + [8]) = $11
	*($4 + [352]) = $11
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	CALL $65(($4 + [40]))
	$global$0 = ($4 + [368])
	return [1]
}

void .FUNC $54 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_32 $19
	int_64 $20
	int_32 $21
	int_64 $22
	int_32 $23
	$2 = ($global$0 - [432])
	$global$0 = $2
	CALL prints([8357])
	CALL require_auth(*($0))
	CALL prints([8371])
	*(($2 + [168])) = (int_64)0
	*($2 + [144]) = $1
	*($2 + [152]) = (int_64)-1
	*($2 + [160]) = (int_64)0
	*($2 + [136]) = *($0)
	*($2 + [128]) = ($2 + [136])
	$3 = [0]
	*($2 + [120]) = [0]
	*($2 + [112]) = (int_64)0
	$4 = ($0 + [112])
	$6 = *(($0 + [140]))
	$5 = *(($0 + [136]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [52]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$5
	$3 = $8
	goto $label$1 
	
.LABEL $label$2
	$7 = CALL db_find_i64(*($4), *(($0 + [120])), (int_64)7343588134136840192, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $87($4, $7)
	if ( ((int_32)*($3 + [52]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [8379])
	$7 = *(($3 + [24]))
	$6 = *($3 + [20])
	*($2 + [304]) = (int_64)0
	CALL $83(($2 + [104]), ($2 + [128]), ($2 + [304]))
	*($2 + [100]) = [0]
	*($2 + [24]) = *($2 + [104])
	*($2 + [96]) = ($2 + [128])
	*($2 + [16]) = *($2 + [96])
	CALL $105(($2 + [112]), ($2 + [24]), ($2 + [16]))
	$7 = ($7 - $6)
	if ( ($7 == 0) ){ goto $label$6 }
	$9 = (CASTING int_64)(int_32 int_32($7 >> [3]))
	$10 = (($2 + [304]) + [112])
	$11 = (($2 + [176]) + [112])
	$12 = (($2 + [32]) + [8])
	$13 = (($2 + [304]) + [80])
	$14 = (($2 + [304]) + [64])
	$15 = (($2 + [304]) + [116])
	$16 = (($2 + [304]) + [88])
	$17 = (($2 + [304]) + [92])
	$18 = (int_64)0
	
.LOOP $label$7:
	$19 = *($2 + [116])
	$6 = *($2 + [112])
	if ( ((int_32)$6 == (int_32)$19) ){ goto $label$8 }
	$7 = ($6 + [128])
	if ( ((int_32)$7 == (int_32)$19) ){ goto $label$8 }
	
.LOOP $label$9:
	CALL $84(($2 + [304]), $6)
	CALL $84(($2 + [176]), $7)
	$8 = (($2 + [176]) + [24])
	$5 = (($2 + [304]) + [24])
	if ( ((int_64)*($5) == (int_64)*($8)) ){ goto $label$10 }
	CALL eosio_assert([0], [9635])
	
.LABEL $label$10
	$21 = (($2 + [176]) + [16])
	$22 = *($21)
	$4 = (($2 + [304]) + [16])
	$20 = *($4)
	if ( ((int_64)$20 != (int_64)$22) ){ goto $label$15 }
	$20 = *((($2 + [176]) + [80]))
	$22 = *($13)
	if ( (int_64)($22 == 0) ){ goto $label$14 }
	if ( (int_64)($20 == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	if ( ((int_64)*($5) == (int_64)*($8)) ){ goto $label$16 }
	CALL eosio_assert([0], [9635])
	$22 = *($21)
	$20 = *($4)
	
.LABEL $label$16
	$8 = ((int_64)$20 >= (int_64)$22)
	goto $label$11 
	
.LABEL $label$14
	if ( ((int_64)$20 == (int_64)0) ){ goto $label$12 }
	
.LABEL $label$13
	$8 = ((int_64)$22 != (int_64)0)
	goto $label$11 
	
.LABEL $label$12
	$22 = *((($2 + [176]) + [64]))
	$20 = *($14)
	if ( ((int_64)$20 != (int_64)$22) ){ goto $label$17 }
	$8 = ((uint_64)*((($2 + [304]) + [56])) <= (uint_64)*((($2 + [176]) + [56])))
	goto $label$11 
	
.LABEL $label$17
	$8 = ((uint_64)$20 <= (uint_64)$22)
	
.LABEL $label$11
	CALL $69($11, *((($2 + [176]) + [116])))
	$5 = *((($2 + [176]) + [88]))
	if ( ($5 == 0) ){ goto $label$18 }
	*((($2 + [176]) + [92])) = $5
	CALL $11($5)
	
.LABEL $label$18
	CALL $69($10, *($15))
	$5 = *($16)
	if ( ($5 == 0) ){ goto $label$19 }
	*($17) = $5
	CALL $11($5)
	
.LABEL $label$19
	$6 = ( $6 ? $7 : $8 )
	$7 = ($7 + [128])
	if ( ((int_32)$19 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	$5 = CALL $84(($2 + [304]), $6)
	*($13) = *($2 + [304])
	$20 = ((int_64)$18 + (int_64)1)
	*($14) = ((int_64)CALL current_time() + (int_64)$20)
	*(($8 = (($2 + [80]) + [8]))) = [0]
	*($2 + [80]) = (int_64)0
	CALL prints([8392])
	CALL printn(*($2 + [304]))
	CALL prints([8400])
	CALL printui($1)
	CALL prints([8402])
	$22 = *($0)
	*($2 + [64]) = [8404]
	*($2 + [68]) = CALL $1([8404])
	*($2 + [8]) = *($2 + [64])
	CALL $40(($2 + [72]), ($2 + [8]))
	*(($4 = (($2 + [176]) + [8]))) = *($2 + [72])
	*($2 + [176]) = $22
	*($2 + [48]) = [8411]
	*($2 + [52]) = CALL $1([8411])
	*($2) = *($2 + [48])
	$21 = CALL $40(($2 + [56]), $2)
	*($12) = $18
	*($2 + [32]) = *($2 + [304])
	$7 = *($2 + [84])
	if ( ((uint_32)$7 >= (uint_32)*($8)) ){ goto $label$21 }
	$22 = *($0)
	*($7 + [8]) = *($2 + [56])
	*($7) = $22
	*($7 + [16 align=4]) = (int_64)0
	*(($21 = ($7 + [24]))) = [0]
	$8 = CALL $9([16])
	*($7 + [16]) = $8
	$19 = ($8 + [16])
	*($21) = $19
	*(($8 + [8])) = *($4)
	*($8) = *($2 + [176])
	*(($7 + [20])) = $19
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	CALL $119(($7 + [28]), [16])
	$7 = *($7 + [28])
	$8 = (*(($7 + [32])) - $7)
	if ( ((int_32)$8 > (int_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [9916])
	
.LABEL $label$22
	CALL memcpy($7, ($2 + [32]), [8])
	$7 = ($7 + [8])
	if ( ((int_32)($8 + [-8]) > (int_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [9916])
	
.LABEL $label$23
	CALL memcpy($7, $12, [8])
	*($2 + [84]) = (*($2 + [84]) + [40])
	goto $label$20 
	
.LABEL $label$21
	CALL $130(($2 + [80]), ($2 + [176]), $0, $21, ($2 + [32]))
	
.LABEL $label$20
	CALL $80($0, ($2 + [80]), *((*(($3 + [20])) + ((CASTING uint_32)(uint_64 $18) << [3]))), *($13))
	CALL $91($0, $5, (int_64)0, [0])
	$5 = *($2 + [116])
	$7 = ($6 + [128])
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$25 }
	$23 = ($5 + [-128])
	$7 = $6
	
.LOOP $label$26:
	$6 = ($7 + [128])
	$7 = CALL memcpy($7, $6, [88])
	$8 = ($7 + [88])
	$5 = *($8)
	if ( ($5 == 0) ){ goto $label$28 }
	*(($7 + [92])) = $5
	CALL $11($5)
	*(($5 = ($7 + [96]))) = [0]
	*($7 + [88 align=4]) = (int_64)0
	goto $label$27 
	
.LABEL $label$28
	$5 = ($7 + [96])
	
.LABEL $label$27
	$4 = ($7 + [216])
	*($8) = *($4)
	$8 = ($7 + [224])
	$21 = *($8)
	*($8) = [0]
	*($5) = $21
	*($4) = (int_64)0
	*(($7 + [104])) = *(($7 + [232]))
	$5 = ($7 + [116])
	$8 = ($7 + [112])
	CALL $69($8, *($5))
	$21 = ($7 + [240])
	*($8) = *($21)
	$4 = ($7 + [244])
	$19 = *($4)
	*($5) = $19
	$7 = *(($7 + [248]))
	*(($7 + [120])) = $7
	if ( ($7 == 0) ){ goto $label$30 }
	*($19 + [8]) = $5
	*($21) = $4
	*($4) = (int_64)0
	$7 = $6
	if ( ((int_32)$23 != (int_32)$6) ){ goto $label$26 }
	goto $label$29 
	
.LABEL $label$30
	*($8) = $5
	$7 = $6
	if ( ((int_32)$23 != (int_32)$6) ){ goto $label$26 }
	
.LABEL $label$29
	$7 = *($2 + [116])
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$24 }
	
.LABEL $label$25
	
.LOOP $label$31:
	CALL $69(($7 + [-16]), *(($7 + [-12])))
	$5 = ($7 + [-128])
	$8 = *(($7 + [-40]))
	if ( ($8 == 0) ){ goto $label$32 }
	*(($7 + [-36])) = $8
	CALL $11($8)
	
.LABEL $label$32
	$7 = $5
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$31 }
	
.LABEL $label$24
	*($2 + [116]) = $6
	$8 = *($2 + [80])
	if ( ($8 == 0) ){ goto $label$33 }
	$7 = *($2 + [84])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$35 }
	
.LOOP $label$36:
	$6 = *(($7 + [-12]))
	if ( ($6 == 0) ){ goto $label$37 }
	*(($7 + [-8])) = $6
	CALL $11($6)
	
.LABEL $label$37
	$6 = ($7 + [-40])
	$5 = *(($7 + [-24]))
	if ( ($5 == 0) ){ goto $label$38 }
	*(($7 + [-20])) = $5
	CALL $11($5)
	
.LABEL $label$38
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$36 }
	$7 = *($2 + [80])
	goto $label$34 
	
.LABEL $label$35
	$7 = $8
	
.LABEL $label$34
	*($2 + [84]) = $8
	CALL $11($7)
	
.LABEL $label$33
	CALL $69($10, *($15))
	$7 = *($16)
	if ( ($7 == 0) ){ goto $label$39 }
	*($17) = $7
	CALL $11($7)
	
.LABEL $label$39
	$18 = $20
	if ( (uint_64)($20 <= $9) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = *($2 + [112])
	if ( ($8 == 0) ){ goto $label$40 }
	$7 = *($2 + [116])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$42 }
	
.LOOP $label$43:
	CALL $69(($7 + [-16]), *(($7 + [-12])))
	$6 = ($7 + [-128])
	$5 = *(($7 + [-40]))
	if ( ($5 == 0) ){ goto $label$44 }
	*(($7 + [-36])) = $5
	CALL $11($5)
	
.LABEL $label$44
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$43 }
	$7 = *($2 + [112])
	goto $label$41 
	
.LABEL $label$42
	$7 = $8
	
.LABEL $label$41
	*($2 + [116]) = $8
	CALL $11($7)
	
.LABEL $label$40
	$8 = *($2 + [160])
	if ( ($8 == 0) ){ goto $label$45 }
	$4 = ($2 + [164])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$47 }
	
.LOOP $label$48:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$49 }
	CALL $69(($7 + [112]), *(($7 + [116])))
	$5 = *($7 + [88])
	if ( ($5 == 0) ){ goto $label$50 }
	*(($7 + [92])) = $5
	CALL $11($5)
	
.LABEL $label$50
	CALL $11($7)
	
.LABEL $label$49
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$48 }
	$7 = *(($2 + [160]))
	goto $label$46 
	
.LABEL $label$47
	$7 = $8
	
.LABEL $label$46
	*($4) = $8
	CALL $11($7)
	
.LABEL $label$45
	$global$0 = ($2 + [432])
}

void .FUNC $55 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [48]) = $1
	CALL require_auth(*($0))
	if ( ((int_64)$2 == (int_64)5) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)2) ){ goto $label$14 }
	if ( ((int_64)$2 != (int_64)1) ){ goto $label$13 }
	$1 = CALL $71(($4 + [48]))
	$5 = ($0 + [72])
	$7 = *(($0 + [100]))
	$6 = *(($0 + [96]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$16:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$12 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$16 }
	goto $label$11 
	
.LABEL $label$15
	CALL prints([9114])
	$5 = ($0 + [192])
	$7 = *(($0 + [220]))
	$6 = *(($0 + [216]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$17:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$3) ){ goto $label$9 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$17 }
	goto $label$8 
	
.LABEL $label$14
	CALL prints([9088])
	$5 = ($0 + [152])
	$7 = *(($0 + [180]))
	$6 = *(($0 + [176]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$18:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$5 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$18 }
	goto $label$4 
	
.LABEL $label$13
	CALL eosio_assert([0], [9183])
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$12
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$11 }
	if ( ((int_32)*($9 + [84]) == (int_32)$5) ){ goto $label$10 }
	CALL eosio_assert([0], [11092])
	goto $label$10 
	
.LABEL $label$11
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [80])), (int_64)-4131301141914845184, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$9 = CALL $72($5, $8)
	if ( ((int_32)*($9 + [84]) == (int_32)$5) ){ goto $label$10 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$10
	CALL eosio_assert(*($9 + [8]), [9922])
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [9950])
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [8]) = *($0)
	*($4 + [16]) = *($9 + [16])
	*($4 + [44]) = [0]
	*($4) = ($4 + [8])
	CALL $108(($4 + [56]), $4, ($4 + [48]))
	$7 = $4
	$0 = *($4 + [60])
	if ( ($0 == 0) ){ goto $label$20 }
	$8 = [0]
	if ( ((int_64)*($4 + [48]) != (int_64)*($0)) ){ goto $label$19 }
	$7 = *($4 + [56])
	$8 = $0
	goto $label$19 
	
.LABEL $label$20
	$8 = [0]
	
.LABEL $label$19
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [9010])
	*($4 + [56]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $7))
	if ( $8 ){ goto $label$21 }
	CALL eosio_assert([0], [11175])
	$8 = *($4 + [60])
	
.LABEL $label$21
	CALL $109(($4 + [56]))
	CALL $110(*($4), $8)
	$9 = *($4 + [32])
	if ( ($9 == 0) ){ goto $label$6 }
	$6 = ($4 + [36])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$2 }
	
.LOOP $label$22:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$23 }
	CALL $69(($8 + [112]), *(($8 + [116])))
	$0 = *($8 + [88])
	if ( ($0 == 0) ){ goto $label$24 }
	*(($8 + [92])) = $0
	CALL $11($0)
	
.LABEL $label$24
	CALL $11($8)
	
.LABEL $label$23
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$22 }
	$8 = *(($4 + [32]))
	goto $label$1 
	
.LABEL $label$9
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$8 }
	if ( ((int_32)*($9 + [124]) == (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [11092])
	goto $label$7 
	
.LABEL $label$8
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [200])), (int_64)-3617168760277827584, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$7 }
	$9 = CALL $111($5, $8)
	if ( ((int_32)*($9 + [124]) == (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [9137])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)$1), [9153])
	if ( $9 ){ goto $label$25 }
	CALL eosio_assert([0], [11175])
	CALL eosio_assert([0], [11209])
	
.LABEL $label$25
	$8 = CALL db_next_i64(*($9 + [128]), ($4 + [8]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$26 }
	CALL $111($5, $8)
	
.LABEL $label$26
	CALL $112($5, $9)
	
.LABEL $label$6
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$5
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	if ( ((int_32)*($9 + [124]) == (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [11092])
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [160])), (int_64)-4138661397305229312, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $113($5, $8)
	if ( ((int_32)*($9 + [124]) == (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [9010])
	if ( $9 ){ goto $label$27 }
	CALL eosio_assert([0], [11175])
	CALL eosio_assert([0], [11209])
	
.LABEL $label$27
	$8 = CALL db_next_i64(*($9 + [128]), ($4 + [8]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$28 }
	CALL $113($5, $8)
	
.LABEL $label$28
	CALL $114($5, $9)
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$2
	$8 = $9
	
.LABEL $label$1
	*($6) = $9
	CALL $11($8)
	$global$0 = ($4 + [64])
}

int_32 .FUNC $56 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [336])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [272]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [280]) = (int_64)0
	*($4 + [252]) = $2
	*($4 + [248]) = $2
	*($4 + [256]) = ($2 + $7)
	*($4 + [320]) = ($4 + [248])
	*($4 + [16]) = ($4 + [264])
	CALL $107(($4 + [16]), ($4 + [320]))
	*(($3 = ($4 + [8]))) = *($4 + [256])
	*($4) = *($4 + [248])
	$3 = *($3)
	*((($4 + [288]) + [8])) = $3
	*(($8 = (($4 + [304]) + [8]))) = $3
	$9 = *($4)
	*($4 + [304]) = $9
	*($4 + [288]) = $9
	$3 = *($8)
	*((($4 + [320]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [304])
	*($4 + [32]) = $1
	*($4 + [320]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [176])) = $0
	*(($4 + [184])) = (int_64)-1
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [200])) = [0]
	*(($4 + [192])) = (int_64)0
	*(($4 + [206])) = [0]
	*(($4 + [204])) = [0]
	*(($4 + [216])) = $0
	*(($4 + [224])) = (int_64)-1
	*(($4 + [232])) = (int_64)0
	*(($4 + [240])) = [0]
	*(($4 + [244])) = [0]
	*($4 + [208]) = $0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [280])
	$1 = *($4 + [272])
	$9 = *($4 + [264])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	CALL $65(($4 + [16]))
	$global$0 = ($4 + [336])
	return [1]
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [64])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($3 = (($2 + [32]) + [16]))) = (int_64)0
	*(($4 = ($2 + [56]))) = (int_64)0
	*(($2 + [40])) = (int_64)0
	*(($5 = (($2 + [32]) + [20]))) = [0]
	*($4) = [0]
	*($3) = $5
	*($2 + [32]) = (int_64)0
	$4 = ($0 + [32])
	CALL $68($2, $4, ($2 + [32]))
	CALL $69($3, *($5))
	*($2) = $1
	CALL $93($4, $2, *($0))
	CALL $69(($2 + [16]), *(($2 + [20])))
	$global$0 = ($2 + [64])
}

void .FUNC $173 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [11170])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	CALL memcpy(($3 + [8]), $2, [1])
	$5 = *($3 + [8])
	*((($3 + [8]) + [20])) = ($2 + [1])
	*((($3 + [8]) + [24])) = ($2 + $4)
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [198])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	CALL require_auth($0)
	*(($2 = (($3 + [272]) + [16]))) = (int_64)0
	*(($6 = (($3 + [272]) + [24]))) = (int_64)0
	*(($3 + [280])) = (int_64)0
	*(($4 = (($3 + [272]) + [20]))) = [0]
	*($6) = [0]
	*($2) = $4
	*($3 + [272]) = (int_64)0
	$6 = ($3 + [40])
	CALL $68(($3 + [240]), $6, ($3 + [272]))
	CALL $69($2, *($4))
	*($3 + [240]) = ((int_32)$5 != (int_32)[0])
	CALL $93($6, ($3 + [240]), *($3 + [8]))
	CALL $69((($3 + [240]) + [16]), *((($3 + [240]) + [20])))
	CALL $65(($3 + [8]))
	$global$0 = ($3 + [304])
}

int_32 .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11143])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([48])) + [20 align=4]) = (int_64)0
	*($5 + [32]) = $0
	*($5 + [16]) = ($5 + [20])
	CALL $208(($3 + [32]), $5)
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)7235159537265672192
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)7235159537265672192
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $209(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $69(($1 + [16]), *(($1 + [20])))
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $153 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10936])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10982])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($1 + [8])) = *(($3 + [8]))
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$3 }
	CALL $98(($1 + [16]), *($3 + [16]), ($3 + [20]))
	
.LABEL $label$3
	*($5) = [9]
	CALL $185($5, ($1 + [16]))
	$6 = *($5)
	if ( ($6 <= [513]) ){ goto $label$5 }
	$3 = CALL $2($6)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $6)
	CALL $212($5, $1)
	CALL db_update_i64(*(($1 + [36])), $2, $3, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)(int_64)7235159537265672192) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $3($3)
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7235159537265672192) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = (int_64)7235159537265672193
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [16])
}

void .FUNC $150 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-3617168760277827584, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [124]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $111($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)-3617168760277827584, $6))
	if ( ((int_32)*($4 + [124]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$2
	*($4 + [132]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $151 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [128])
	$global$0 = $3
	CALL require_auth(*($0))
	if ( ((int_64)$2 == (int_64)2) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)1) ){ goto $label$1 }
	CALL $91($0, $1, (int_64)1, [0])
	$global$0 = ($3 + [128])
	return 
	
.LABEL $label$2
	$1 = CALL $84($3, $1)
	CALL $104($0, $1)
	CALL $69(($1 + [112]), *(($1 + [116])))
	$0 = *($1 + [88])
	if ( ($0 == 0) ){ goto $label$1 }
	*(($1 + [92])) = $0
	CALL $11($0)
	
.LABEL $label$1
	$global$0 = ($3 + [128])
}

void .FUNC $156 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9865])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([96])) + [48]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [76 align=4]) = (int_64)0
	*($3 + [84]) = $1
	*($3 + [72]) = ($3 + [76])
	CALL $202(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [88])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $137(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $69(($3 + [72]), *(($3 + [76])))
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $157 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10936])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10982])
	
.LABEL $label$2
	$6 = *($1)
	CALL $27(($1 + [8]), (*($3) + [8]))
	$7 = *($3)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	CALL $97(($1 + [20]), *($7 + [20]), *(($7 + [24])))
	$3 = *($3)
	*($1 + [32]) = *($3 + [32])
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	CALL $98(($1 + [40]), *($3 + [40]), ($3 + [44]))
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	CALL eosio_assert([0], [11033])
	
.LABEL $label$4
	*($5) = [8]
	$3 = *(($1 + [8]))
	$7 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [8])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	*($5) = $3
	$9 = *($1 + [20])
	$7 = *(($1 + [24]))
	$10 = ($7 - $9)
	$8 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$7 }
	$3 = (($10 & [-8]) + $3)
	
.LABEL $label$7
	*($5) = ($3 + [8])
	CALL $185($5, ($1 + [40]))
	$7 = *($5)
	if ( ($7 <= [513]) ){ goto $label$9 }
	$3 = CALL $2($7)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$8
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $7)
	CALL $206($5, $1)
	CALL db_update_i64(*($1 + [56]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $3($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [16])
}

void .FUNC $154 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9865])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([48])) + [20 align=4]) = (int_64)0
	*($3 + [32]) = $1
	*($3 + [16]) = ($3 + [20])
	CALL $211(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)7235159537265672192
	$5 = *($3 + [36])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)7235159537265672192
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $209(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $69(($3 + [16]), *(($3 + [20])))
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $155 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [84]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10936])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10982])
	
.LABEL $label$2
	$6 = *($3)
	*($1 + [8]) = *($6 + [8])
	$7 = *($1)
	$8 = $7
	$9 = $1
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$3 }
	CALL $98(($1 + [72]), *($6 + [72]), ($6 + [76]))
	$8 = *($1)
	$9 = *($3)
	
.LABEL $label$3
	*($1 + [32]) = *($9 + [32])
	*($1 + [16]) = *($9 + [16])
	*($1 + [24]) = *($9 + [24])
	*($1 + [40]) = *($9 + [40])
	*(($1 + [56])) = *(($9 + [56]))
	*($1 + [48]) = *($9 + [48])
	*($1 + [64]) = *(*($3) + [64])
	if ( ((int_64)$7 == (int_64)$8) ){ goto $label$4 }
	CALL eosio_assert([0], [11033])
	
.LABEL $label$4
	*($5) = [65]
	CALL $185($5, ($1 + [72]))
	$3 = *($5)
	if ( ($3 <= [513]) ){ goto $label$6 }
	$9 = CALL $2($3)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $9
	
.LABEL $label$5
	*($5 + [4]) = $9
	*($5) = $9
	*($5 + [8]) = ($9 + $3)
	CALL $203($5, $1)
	CALL db_update_i64(*($1 + [88]), $2, $9, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $3($9)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $158 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9865])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([64])) + [8 align=4]) = (int_64)0
	*($3 + [16 align=4]) = (int_64)0
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [44 align=4]) = (int_64)0
	*($3 + [52]) = $1
	*($3 + [40]) = ($3 + [44])
	CALL $204(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [56])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $205(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $69(($3 + [40]), *(($3 + [44])))
	$1 = *($3 + [20])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [24])) = $1
	CALL $11($1)
	
.LABEL $label$5
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($3 + [16])))
	
.LABEL $label$6
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $159 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [240])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [198])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	CALL $49(($3 + [8]))
	CALL $65(($3 + [8]))
	$global$0 = ($3 + [240])
}

void .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

void .FUNC $224 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$0 = *($3 + [4])
	$3 = *($0)
	if ( ((int_32)(*($3 + [8]) - $0) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$0 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($0, $1, [4])
	$0 = (*($4) + [4])
	*(($4 = ($3 + [4]))) = $0
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *($1 + [4])) / (int_32)[44]))
	
.LOOP $label$2:
	$6 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$7 = ((int_64)$5) != (int_64)0
	*($2 + [14]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*(($3 + [8])) - $0) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [9916])
	$0 = *($4)
	
.LABEL $label$3
	CALL memcpy($0, ($2 + [14]), [1])
	$0 = (*($4) + [1])
	*($4) = $0
	if ( $7 ){ goto $label$2 }
	$6 = *(($1 + [8]))
	$4 = *(($1 + [4]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$4 }
	
.LOOP $label$5:
	CALL $225($3, $4)
	$4 = ($4 + [44])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$5 }
	$0 = *(($3 + [4]))
	
.LABEL $label$4
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [20])) - *($1 + [16])) / (int_32)[24]))
	$8 = ($3 + [8])
	$4 = ($3 + [4])
	
.LOOP $label$6:
	$6 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$7 = ((int_64)$5) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($8) - $0) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [9916])
	$0 = *($4)
	
.LABEL $label$7
	CALL memcpy($0, ($2 + [15]), [1])
	$0 = (*($4) + [1])
	*($4) = $0
	if ( $7 ){ goto $label$6 }
	$4 = *(($1 + [20]))
	$0 = *(($1 + [16]))
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	CALL $226($3, $0)
	$0 = ($0 + [24])
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$9 }
	
.LABEL $label$8
	CALL $227($3, ($1 + [28]))
	$global$0 = ($2 + [16])
}

void .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($4)
	*($1) = *($5)
	*($1 + [8]) = *($5 + [8])
	$6 = *($0)
	*(($1 + [24])) = *(($5 + [24]))
	*($1 + [16]) = *($5 + [16])
	$5 = *($4)
	*($1 + [80]) = *($5 + [80])
	*($1 + [64]) = *($5 + [64])
	*($1 + [56]) = *($5 + [56])
	*($1 + [48]) = *($5 + [48])
	*($1 + [40]) = *($5 + [40])
	*($1 + [32]) = *($5 + [32])
	CALL $82(($1 + [88]), *($5 + [88]), *(($5 + [92])))
	$5 = *($4)
	*($1 + [104]) = *($5 + [104])
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$1 }
	CALL $98(($1 + [112]), *($5 + [112]), ($5 + [116]))
	
.LABEL $label$1
	$5 = [81]
	*($3 + [8]) = [81]
	$7 = *($1 + [88])
	$4 = *(($1 + [92]))
	$8 = ($4 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [5]))
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	$5 = (($8 & [-32]) + $5)
	
.LABEL $label$3
	*($3 + [8]) = ($5 + [8])
	CALL $185(($3 + [8]), ($1 + [112]))
	$4 = *($3 + [8])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$5 = CALL $2($4)
	goto $label$4 
	
.LABEL $label$5
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$4
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($5 + $4)
	CALL $186(($3 + [24]), $1)
	$9 = *(($1 + [64]))
	*($1 + [128]) = CALL db_store_i64(*($6 + [8]), (int_64)-6497942746098040832, *(*($0 + [8])), $9, $5, $4)
	if ( ($4 <= [513]) ){ goto $label$6 }
	CALL $3($5)
	
.LABEL $label$6
	if ( (uint_64)($9 <= *($6 + [16])) ){ goto $label$7 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($3 + [12]) = $1
	*($3 + [20]) = $1
	*($3 + [16]) = *(($0 + [8]))
	*($3 + [8]) = $6
	*($3 + [40]) = ($3 + [8])
	CALL $187(($3 + [40]), ($6 + [36]), ($6 + [37]), ($6 + [38]), ($6 + [39]))
	$global$0 = ($3 + [48])
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $69($0, *($1))
	CALL $69($0, *($1 + [4]))
	if ( ((*(($1 + [28])) & [1]) == 0) ){ goto $label$2 }
	CALL $11(*(($1 + [36])))
	
.LABEL $label$2
	if ( ((*(($1 + [16])) & [1]) == 0) ){ goto $label$3 }
	CALL $11(*(($1 + [24])))
	
.LABEL $label$3
	CALL $11($1)
	
.LABEL $label$1
}

void .FUNC $68 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *(($1 + [28]))
	if ( ((int_32)$3 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$3 = *(($3 + [-24]))
	if ( ((int_32)*($3 + [32]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$4
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$3 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $152($1, $3)
	if ( ((int_32)*($3 + [32]) == (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$2
	$2 = $3
	
.LABEL $label$1
	*($0) = *($2)
	*(($0 + [8])) = *(($2 + [8]))
	*(($3 = ($0 + [20]))) = (int_64)0
	*($0 + [16]) = $3
	$4 = ($2 + [20])
	$1 = *($2 + [16])
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$5 }
	$5 = ($0 + [16])
	
.LOOP $label$6:
	$2 = $1
	$0 = ($2 + [16])
	CALL $95($5, $3, $0, $0)
	$0 = *($2 + [4])
	if ( ($0 == 0) ){ goto $label$8 }
	
.LOOP $label$9:
	$1 = $0
	$0 = *($1)
	if ( $0 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$1 = *($2 + [8])
	if ( ((int_32)*($1) == (int_32)$2) ){ goto $label$7 }
	$2 = ($2 + [8])
	
.LOOP $label$10:
	$0 = *($2)
	$2 = ($0 + [8])
	$1 = *($0 + [8])
	if ( ((int_32)$0 != (int_32)*($1)) ){ goto $label$10 }
	
.LABEL $label$7
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$5
}

int_32 .FUNC $225 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($1)
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$6 = ($1 + [4])
	$7 = ($0 + [8])
	if ( ((int_32)(*($7) - $3) > (int_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [9916])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $6, [33])
	$3 = (*($3) + [33])
	*(($3 = ($0 + [4]))) = $3
	$6 = ($1 + [40])
	if ( ((int_32)(*($7) - $3) > (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [9916])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $6, [2])
	*(($3 = ($0 + [4]))) = (*($3) + [2])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $65 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *(($0 + [216]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [220])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $69(($4 + [112]), *(($4 + [116])))
	$5 = *($4 + [88])
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [92])) = $5
	CALL $11($5)
	
.LABEL $label$6
	CALL $11($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$4 = *(($0 + [216]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $11($4)
	
.LABEL $label$1
	$1 = *(($0 + [176]))
	if ( ($1 == 0) ){ goto $label$7 }
	$2 = ($0 + [180])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $69(($4 + [112]), *(($4 + [116])))
	$5 = *($4 + [88])
	if ( ($5 == 0) ){ goto $label$12 }
	*(($4 + [92])) = $5
	CALL $11($5)
	
.LABEL $label$12
	CALL $11($4)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$10 }
	$4 = *(($0 + [176]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $1
	
.LABEL $label$8
	*($2) = $1
	CALL $11($4)
	
.LABEL $label$7
	CALL $160(($0 + [136]))
	$5 = *(($0 + [96]))
	if ( ($5 == 0) ){ goto $label$13 }
	$1 = ($0 + [100])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$15 }
	
.LOOP $label$16:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$17 }
	CALL $69(($3 + [72]), *(($3 + [76])))
	CALL $11($3)
	
.LABEL $label$17
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$16 }
	$4 = *(($0 + [96]))
	goto $label$14 
	
.LABEL $label$15
	$4 = $5
	
.LABEL $label$14
	*($1) = $5
	CALL $11($4)
	
.LABEL $label$13
	$5 = *(($0 + [56]))
	if ( ($5 == 0) ){ goto $label$18 }
	$1 = ($0 + [60])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$20 }
	
.LOOP $label$21:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$22 }
	CALL $69(($3 + [16]), *(($3 + [20])))
	CALL $11($3)
	
.LABEL $label$22
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$21 }
	$4 = *(($0 + [56]))
	goto $label$19 
	
.LABEL $label$20
	$4 = $5
	
.LABEL $label$19
	*($1) = $5
	CALL $11($4)
	
.LABEL $label$18
	return $0
}

int_32 .FUNC $64 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$3 = ($global$0 - [480])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [356])) = [0]
	*(($4 + [348])) = (int_64)0
	*(($4 + [340])) = (int_64)0
	*(($4 + [332])) = (int_64)0
	*(($4 + [324])) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [320]) = [0]
	*($4 + [292]) = $2
	*($4 + [288]) = $2
	*($4 + [296]) = ($2 + $7)
	*($4 + [440]) = ($4 + [288])
	*($4 + [56]) = ($4 + [304])
	CALL $115(($4 + [56]), ($4 + [440]))
	*(($8 = (($4 + [40]) + [8]))) = *($4 + [296])
	*($4 + [40]) = *($4 + [288])
	$9 = *($8)
	*(($3 = (($4 + [360]) + [8]))) = $9
	*(($8 = (($4 + [400]) + [8]))) = $9
	$10 = *($4 + [40])
	*($4 + [400]) = $10
	*($4 + [360]) = $10
	$9 = *($8)
	*((($4 + [440]) + [8])) = $9
	*((($4 + [56]) + [24])) = $9
	*($4 + [56]) = $0
	*($4 + [64]) = $1
	$1 = *($4 + [400])
	*($4 + [72]) = $1
	*($4 + [440]) = $1
	*((($4 + [56]) + [40])) = $0
	*((($4 + [56]) + [48])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [176])) = $0
	*(($4 + [184])) = (int_64)-1
	*(($4 + [192])) = (int_64)0
	*(($4 + [200])) = [0]
	*(($4 + [216])) = $0
	*(($4 + [224])) = (int_64)-1
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*($4 + [208]) = $0
	*(($4 + [240])) = [0]
	*(($4 + [232])) = (int_64)0
	*(($4 + [246])) = [0]
	*(($4 + [244])) = [0]
	*(($4 + [256])) = $0
	*(($4 + [264])) = (int_64)-1
	*(($4 + [272])) = (int_64)0
	*(($4 + [280])) = [0]
	*(($4 + [284])) = [0]
	*($4 + [248]) = $0
	*($3) = *((($4 + [304]) + [24]))
	*(($9 = (($4 + [360]) + [16]))) = *((($4 + [304]) + [32]))
	*(($11 = (($4 + [360]) + [24]))) = *((($4 + [304]) + [40]))
	*(($12 = (($4 + [360]) + [32]))) = *((($4 + [304]) + [48]))
	*($4 + [360]) = *($4 + [320])
	$0 = *($4 + [312])
	$1 = *($4 + [304])
	*((($4 + [400]) + [32])) = *($12)
	*((($4 + [400]) + [24])) = *($11)
	*((($4 + [400]) + [16])) = *($9)
	*($8) = *($3)
	*($4 + [400]) = *($4 + [360])
	$3 = (($4 + [56]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$10 = *((($4 + [400]) + [32]))
	*((($4 + [440]) + [32])) = $10
	$13 = *((($4 + [400]) + [24]))
	*((($4 + [440]) + [24])) = $13
	$14 = *((($4 + [400]) + [16]))
	*((($4 + [440]) + [16])) = $14
	$15 = *((($4 + [400]) + [8]))
	*((($4 + [440]) + [8])) = $15
	*(($4 + [8])) = $15
	*(($4 + [16])) = $14
	*(($4 + [24])) = $13
	*(($4 + [32])) = $10
	$10 = *($4 + [400])
	*($4) = $10
	*($4 + [440]) = $10
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	CALL $65(($4 + [56]))
	$global$0 = ($4 + [480])
	return [1]
}

void .FUNC $67 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$6 = *($3)
	$7 = ($6 & [1])
	$5 = ($3 + [1])
	CALL $31($2, ( *($3 + [8]) ? $5 : $7 ), ( *($3 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$7 = *($2)
	if ( ($7 & [1]) ){ goto $label$7 }
	$6 = [1]
	$8 = uint_32($7 >> [1])
	if ( ((int_32)$8 >= (int_32)[1]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$6 = [1]
	$8 = *($2 + [4])
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$5 }
	
.LABEL $label$6
	$9 = ($2 + $6)
	$10 = [0]
	$11 = ($3 + [4])
	$12 = ($3 + [8])
	if ( (($7 & $6) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$13 = [2]
	goto $label$1 
	
.LABEL $label$4
	$13 = [2]
	goto $label$1 
	
.LABEL $label$3
	$13 = [14]
	goto $label$1 
	
.LABEL $label$2
	$13 = [4]
	
.LABEL $label$1
	
.LOOP $label$8:
	goto $label$36 
	
.LABEL $label$48
	$7 = *($2)
	if ( ($7 & $6) ){ goto $label$26 }
	$13 = [14]
	goto $label$8 
	
.LABEL $label$47
	$14 = $9
	$15 = uint_32(($7 & [254]) >> $6)
	if ( ((uint_32)$15 >= (uint_32)$10) ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$46
	$14 = *(($2 + [8]))
	$15 = *(($2 + [4]))
	if ( ($15 <= $10) ){ goto $label$25 }
	$13 = [5]
	goto $label$8 
	
.LABEL $label$45
	$7 = $10
	$17 = ($16 & $6)
	$16 = *($3)
	$16 = ( *($11) ? uint_32($16 >> $6) : $17 )
	if ( ($16 == 0) ){ goto $label$23 }
	$13 = [6]
	goto $label$8 
	
.LABEL $label$44
	$15 = ($14 + $10)
	$18 = ($14 + $15)
	$7 = ($18 - $15)
	if ( ((int_32)$7 < (int_32)$16) ){ goto $label$19 }
	$13 = [7]
	goto $label$8 
	
.LABEL $label$43
	$19 = ( *($12) ? $5 : $17 )
	$17 = *($19)
	$13 = [8]
	goto $label$8 
	
.LABEL $label$42
	$7 = (($7 - $16) + $6)
	if ( ($7 == 0) ){ goto $label$17 }
	$13 = [9]
	goto $label$8 
	
.LABEL $label$41
	$7 = CALL $17($15, $17, $7)
	if ( ($7 == 0) ){ goto $label$16 }
	$13 = [10]
	goto $label$8 
	
.LABEL $label$40
	if ( (CALL $18($7, $19, $16) == 0) ){ goto $label$15 }
	$13 = [11]
	goto $label$8 
	
.LABEL $label$39
	$15 = ($7 + $6)
	$7 = ($18 - $15)
	if ( ((int_32)$7 >= (int_32)$16) ){ goto $label$18 }
	$13 = [12]
	goto $label$8 
	
.LABEL $label$38
	$7 = $18
	$13 = [13]
	goto $label$8 
	
.LABEL $label$37
	$7 = ( [-1] ? ($7 - $14) : ((int_32)$7 == (int_32)$18) )
	$13 = [0]
	goto $label$8 
	
.LABEL $label$36
	if ( ((uint_32)$7 >= (uint_32)$8) ){ goto $label$24 }
	$13 = [15]
	goto $label$8 
	
.LABEL $label$35
	$10 = CALL $26($4, $2, $10, ($7 - $10), $2)
	$16 = ($0 + [4])
	$15 = *($16)
	if ( ((int_32)$15 == (int_32)*(($0 + [8]))) ){ goto $label$14 }
	$13 = [16]
	goto $label$8 
	
.LABEL $label$34
	CALL $25($15, $10)
	*($16) = (*($16) + [12])
	$16 = *($3)
	if ( ($16 & $6) ){ goto $label$12 }
	$13 = [20]
	goto $label$8 
	
.LABEL $label$33
	$7 = ($7 + uint_32($16 >> $6))
	if ( (*($4) & $6) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$32
	CALL $144($0, $10)
	$16 = *($3)
	if ( (($16 & $6) == 0) ){ goto $label$13 }
	$13 = [17]
	goto $label$8 
	
.LABEL $label$31
	$7 = ($7 + *($11))
	if ( ((*($4) & $6) == 0) ){ goto $label$11 }
	$13 = [18]
	goto $label$8 
	
.LABEL $label$30
	CALL $11(*(($4 + [8])))
	$13 = [19]
	goto $label$8 
	
.LABEL $label$29
	$10 = ($7 + [-1])
	$13 = [1]
	goto $label$8 
	
.LABEL $label$28
	$10 = ($10 + $6)
	if ( ((int_32)$10 < (int_32)$8) ){ goto $label$20 }
	$13 = [2]
	goto $label$8 
	
.LABEL $label$27
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$26
	$13 = [4]
	goto $label$8 
	
.LABEL $label$25
	$13 = [1]
	goto $label$8 
	
.LABEL $label$24
	$13 = [1]
	goto $label$8 
	
.LABEL $label$23
	$13 = [0]
	goto $label$8 
	
.LABEL $label$22
	$13 = [1]
	goto $label$8 
	
.LABEL $label$21
	$13 = [5]
	goto $label$8 
	
.LABEL $label$20
	$13 = [3]
	goto $label$8 
	
.LABEL $label$19
	$13 = [12]
	goto $label$8 
	
.LABEL $label$18
	$13 = [8]
	goto $label$8 
	
.LABEL $label$17
	$13 = [12]
	goto $label$8 
	
.LABEL $label$16
	$13 = [12]
	goto $label$8 
	
.LABEL $label$15
	$13 = [13]
	goto $label$8 
	
.LABEL $label$14
	$13 = [21]
	goto $label$8 
	
.LABEL $label$13
	$13 = [20]
	goto $label$8 
	
.LABEL $label$12
	$13 = [17]
	goto $label$8 
	
.LABEL $label$11
	$13 = [19]
	goto $label$8 
	
.LABEL $label$10
	$13 = [19]
	goto $label$8 
	
.LABEL $label$9
	$13 = [18]
	goto $label$8 
	$13
}

void .FUNC $66 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [48])
	$2 = $1
	$global$0 = $1
	$3 = CALL action_data_size()
	if ( ($3 <= [513]) ){ goto $label$2 }
	$1 = CALL $2($3)
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 - (($3 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$1
	CALL read_action_data($1, $3)
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*(($0 + [40])) = [0]
	*($2 + [12]) = $1
	*($2 + [8]) = $1
	*($2 + [16]) = ($1 + $3)
	*($2 + [24]) = ($2 + [8])
	*($2 + [36]) = ($0 + [8])
	*($2 + [32]) = $0
	*($2 + [40]) = ($0 + [16])
	*($2 + [44]) = ($0 + [32])
	CALL $143(($2 + [32]), ($2 + [24]))
	$global$0 = ($2 + [48])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = ($0 + [72])
	$5 = *($1)
	$7 = *(($0 + [100]))
	$6 = *(($0 + [96]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$5:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$4 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	if ( ((int_32)*($9 + [84]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$6
	if ( $9 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$8 = CALL db_find_i64(*($4), *(($0 + [80])), (int_64)-4131301141914845184, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $72($4, $8)
	if ( ((int_32)*($9 + [84]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$2
	$5 = *($0)
	*($3 + [16]) = $1
	CALL $135($4, $9, $5, ($3 + [16]))
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$1
	$5 = *($0)
	*($3 + [8]) = $1
	*($3 + [40]) = $5
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$7 }
	CALL eosio_assert([0], [9865])
	
.LABEL $label$7
	*($3 + [16]) = $4
	*($3 + [20]) = ($3 + [8])
	*($3 + [24]) = ($3 + [40])
	*(($8 = CALL $9([96])) + [48]) = (int_64)0
	*($8) = (int_64)0
	*($8 + [56]) = (int_64)0
	*($8 + [76 align=4]) = (int_64)0
	*($8 + [84]) = $4
	*($8 + [72]) = ($8 + [76])
	CALL $136(($3 + [16]), $8)
	*($3 + [32]) = $8
	$5 = *($8)
	*($3 + [16]) = $5
	$9 = *($8 + [88])
	*($3 + [12]) = $9
	$6 = ($0 + [100])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [104]))) ){ goto $label$10 }
	*($7 + [8]) = $5
	*($7 + [16]) = $9
	*($3 + [32]) = [0]
	*($7) = $8
	*($6) = ($7 + [24])
	$8 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( $8 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $137(($0 + [96]), ($3 + [32]), ($3 + [16]), ($3 + [12]))
	$8 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($8 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $69(($8 + [72]), *(($8 + [76])))
	CALL $11($8)
	
.LABEL $label$8
	$global$0 = ($3 + [48])
}

int_32 .FUNC $60 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [256])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [248]) = (int_64)0
	*($4 + [240]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [240]) + [8])
	CALL memcpy(($4 + [240]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [32])) = $3
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [16])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [198])) = [0]
	*(($4 + [196])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *((($4 + [240]) + [8]))
	$1 = *($4 + [240])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $3($2)
	
.LABEL $label$8
	CALL $65(($4 + [8]))
	$global$0 = ($4 + [256])
	return [1]
}

void .FUNC $63 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	$4 = ($global$0 - [448])
	$global$0 = $4
	*($4 + [408]) = $2
	CALL require_auth($1)
	*(($5 = (($4 + [136]) + [16]))) = (int_64)0
	*(($6 = ($4 + [160]))) = (int_64)0
	*(($4 + [144])) = (int_64)0
	$7 = [0]
	*(($8 = (($4 + [136]) + [20]))) = [0]
	*($6) = [0]
	*($5) = $8
	*($4 + [136]) = (int_64)0
	CALL $68(($4 + [320]), ($0 + [32]), ($4 + [136]))
	CALL $69($5, *($8))
	CALL eosio_assert(*($4 + [320]), [10252])
	CALL $69((($4 + [320]) + [16]), *((($4 + [320]) + [20])))
	$9 = ($0 + [152])
	$8 = *(($0 + [180]))
	$6 = *(($0 + [176]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($8 + [-24])
	$10 = *($5)
	if ( ((int_64)*($10) == (int_64)$2) ){ goto $label$3 }
	$8 = $5
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$2 }
	if ( ((int_32)*($10 + [124]) == (int_32)$9) ){ goto $label$5 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$5
	$7 = $10
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_find_i64(*($9), *(($0 + [160])), (int_64)-4138661397305229312, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $113($9, $5)
	if ( ((int_32)*($7 + [124]) == (int_32)$9) ){ goto $label$1 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)*($7 + [40]) ^ (int_32)[1]), [8431])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9010])
	CALL eosio_assert(((int_64)*($7 + [104]) == (int_64)1), [9026])
	CALL eosio_assert(((int_32)*($7 + [40]) ^ (int_32)[1]), [9039])
	$2 = CALL $71($7)
	$11 = ($0 + [72])
	$8 = *(($0 + [100]))
	$10 = *(($0 + [96]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$7 }
	
.LOOP $label$9:
	$5 = ($8 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$2) ){ goto $label$8 }
	$8 = $5
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$7 }
	if ( ((int_32)*($6 + [84]) == (int_32)$11) ){ goto $label$6 }
	CALL eosio_assert([0], [11092])
	goto $label$6 
	
.LABEL $label$7
	$6 = CALL $72($11, CALL $fimport$25(*($11), *(($0 + [80])), (int_64)-4131301141914845184, $2))
	if ( ((int_32)*($6 + [84]) == (int_32)$11) ){ goto $label$6 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$6
	CALL eosio_assert(*($6 + [8]), [9922])
	$8 = [0]
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [9950])
	*((($4 + [368]) + [8])) = (int_64)0
	*((($4 + [368]) + [24])) = (int_64)0
	*((($4 + [368]) + [32])) = (int_64)0
	*($4 + [384]) = (int_64)0
	*($4 + [368]) = (int_64)1
	*((($4 + [320]) + [29])) = *(($3 + [29]))
	*((($4 + [320]) + [24])) = *(($3 + [24]))
	*((($4 + [320]) + [16])) = *(($3 + [16]))
	*((($4 + [320]) + [8])) = *(($3 + [8]))
	*($4 + [360]) = [1]
	*($4 + [320]) = *($3)
	CALL $116((($4 + [368]) | [4]), ($4 + [320]))
	$2 = CALL $71(($4 + [408]))
	*($4 + [264]) = [8404]
	*($4 + [268]) = CALL $1([8404])
	*($4 + [48]) = *($4 + [264])
	$1 = *(CALL $40(($4 + [272]), ($4 + [48])))
	*($4 + [248]) = [9064]
	*($4 + [252]) = CALL $1([9064])
	*($4 + [40]) = *($4 + [248])
	$5 = CALL $40(($4 + [256]), ($4 + [40]))
	*($4 + [232]) = [9070]
	*($4 + [236]) = CALL $1([9070])
	*($4 + [32]) = *($4 + [232])
	$6 = CALL $40(($4 + [240]), ($4 + [32]))
	*($4 + [136]) = CALL $71(($4 + [408]))
	*($4 + [144]) = *($4 + [408])
	CALL $117((($4 + [136]) + [16]), ($4 + [368]))
	CALL $117(($4 + [192]), ($4 + [368]))
	*(($10 = (($4 + [280]) + [24]))) = [0]
	*($4 + [296]) = (int_64)0
	*($4 + [280]) = *($5)
	*($4 + [288]) = *($6)
	*(($5 = CALL $9([16]))) = $2
	*($5 + [8]) = $1
	*(($4 + [316])) = [0]
	$6 = ($5 + [16])
	*($10) = $6
	*(($4 + [300])) = $6
	*($4 + [296]) = $5
	*($4 + [308 align=4]) = (int_64)0
	$5 = CALL $118(($4 + [136]))
	if ( ($5 == 0) ){ goto $label$11 }
	$6 = ($4 + [308])
	CALL $119($6, $5)
	$8 = *((($4 + [280]) + [32]))
	$5 = *($6)
	goto $label$10 
	
.LABEL $label$11
	$5 = [0]
	
.LABEL $label$10
	*($4 + [60]) = $5
	*($4 + [56]) = $5
	*($4 + [64]) = $8
	*($4 + [440]) = ($4 + [56])
	*($4 + [416]) = ($4 + [136])
	CALL $120(($4 + [416]), ($4 + [440]))
	$5 = *(($4 + [220]))
	if ( ($5 == 0) ){ goto $label$12 }
	*(($4 + [224])) = $5
	CALL $11($5)
	
.LABEL $label$12
	$5 = *(($4 + [208]))
	if ( ($5 == 0) ){ goto $label$13 }
	*(($4 + [212])) = $5
	CALL $11($5)
	
.LABEL $label$13
	$5 = *(($4 + [196]))
	if ( ($5 == 0) ){ goto $label$14 }
	*(($4 + [200])) = $5
	CALL $11($5)
	
.LABEL $label$14
	$5 = *(($4 + [180]))
	if ( ($5 == 0) ){ goto $label$15 }
	*(($4 + [184])) = $5
	CALL $11($5)
	
.LABEL $label$15
	$5 = *(($4 + [168]))
	if ( ($5 == 0) ){ goto $label$16 }
	*(($4 + [172])) = $5
	CALL $11($5)
	
.LABEL $label$16
	$5 = *(($4 + [156]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($4 + [160])) = $5
	CALL $11($5)
	
.LABEL $label$17
	CALL $121(($4 + [280]))
	$12 = *($0)
	*($4 + [120]) = [8404]
	*($4 + [124]) = CALL $1([8404])
	*($4 + [24]) = *($4 + [120])
	$13 = *(CALL $40(($4 + [128]), ($4 + [24])))
	*($4 + [104]) = [9064]
	*($4 + [108]) = CALL $1([9064])
	*($4 + [16]) = *($4 + [104])
	$10 = CALL $40(($4 + [112]), ($4 + [16]))
	*($4 + [88]) = [9081]
	*($4 + [92]) = CALL $1([9081])
	*($4 + [8]) = *($4 + [88])
	$3 = CALL $40(($4 + [96]), ($4 + [8]))
	$5 = CALL $1([8858])
	if ( ($5 <= [8]) ){ goto $label$21 }
	CALL eosio_assert([0], [10603])
	goto $label$20 
	
.LABEL $label$21
	if ( ($5 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	$2 = (int_64)0
	
.LOOP $label$22:
	$8 = *(($5 + [8857]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$23 }
	CALL eosio_assert([0], [10648])
	
.LABEL $label$23
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$22 }
	$14 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$18 
	
.LABEL $label$19
	$14 = (int_64)4
	
.LABEL $label$18
	$2 = (uint_64)$14 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$27 }
	$2 = $1
	$8 = $5
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$2 = $1
	
.LOOP $label$28:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$25 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$6 = ($5 + [1])
	$5 = $6
	if ( $8 ){ goto $label$28 }
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	CALL eosio_assert([0], [10750])
	
.LABEL $label$24
	*((($4 + [56]) + [24])) = $14
	*($4 + [64]) = *($4 + [408])
	*($4 + [72]) = (int_64)5000
	*($4 + [56]) = *($0)
	*($4 + [136]) = *($10)
	*($4 + [144]) = *($3)
	*(($5 = CALL $9([16]))) = $12
	*($5 + [8]) = $13
	*(($4 + [172])) = [0]
	$8 = ($5 + [16])
	*((($4 + [136]) + [24])) = $8
	*(($4 + [156])) = $8
	*($4 + [152]) = $5
	*($4 + [164 align=4]) = (int_64)0
	CALL $119(($4 + [164]), [32])
	$5 = *((($4 + [136]) + [32]))
	$8 = *($4 + [164])
	*($4 + [420]) = $8
	*($4 + [416]) = $8
	*($4 + [424]) = $5
	*($4 + [432]) = ($4 + [416])
	*($4 + [440]) = ($4 + [56])
	CALL $122(($4 + [440]), ($4 + [432]))
	CALL $121(($4 + [136]))
	$2 = *($0)
	if ( $7 ){ goto $label$29 }
	CALL eosio_assert([0], [10901])
	
.LABEL $label$29
	CALL $123($9, $7, $2)
	$5 = *($4 + [164])
	if ( ($5 == 0) ){ goto $label$30 }
	*(($4 + [168])) = $5
	CALL $11($5)
	
.LABEL $label$30
	$5 = *($4 + [152])
	if ( ($5 == 0) ){ goto $label$31 }
	*(($4 + [156])) = $5
	CALL $11($5)
	
.LABEL $label$31
	$5 = *($4 + [308])
	if ( ($5 == 0) ){ goto $label$32 }
	*(($4 + [312])) = $5
	CALL $11($5)
	
.LABEL $label$32
	$5 = *($4 + [296])
	if ( ($5 == 0) ){ goto $label$33 }
	*(($4 + [300])) = $5
	CALL $11($5)
	
.LABEL $label$33
	$5 = *(($4 + [396]))
	if ( ($5 == 0) ){ goto $label$34 }
	*(($4 + [400])) = $5
	CALL $11($5)
	
.LABEL $label$34
	$5 = *(($4 + [384]))
	if ( ($5 == 0) ){ goto $label$35 }
	*(($4 + [388])) = $5
	CALL $11($5)
	
.LABEL $label$35
	$5 = *($4 + [372])
	if ( ($5 == 0) ){ goto $label$36 }
	*(($4 + [376])) = $5
	CALL $11($5)
	
.LABEL $label$36
	$global$0 = ($4 + [448])
}

int_32 .FUNC $62 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$3 = ($global$0 - [560])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = [0]
	$8 = CALL action_data_size()
	if ( ($8 == 0) ){ goto $label$1 }
	if ( ($8 <= [513]) ){ goto $label$3 }
	$7 = CALL $2($8)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($3 - (($8 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$2
	CALL read_action_data($7, $8)
	
.LABEL $label$1
	CALL memset((($4 + [272]) + [8]), [0], [80])
	*((($4 + [272]) + [56])) = (int_64)0
	*(($9 = (($4 + [272]) + [76]))) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [344]) = $9
	*($4 + [360]) = (int_64)0
	*($4 + [260]) = $7
	*($4 + [256]) = $7
	*($4 + [264]) = ($7 + $8)
	CALL $134(($4 + [256]), ($4 + [272]))
	$3 = (($4 + [272]) + [88])
	$2 = *($4 + [260])
	if ( ((uint_32)(*($4 + [264]) - $2) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11170])
	$2 = *($4 + [260])
	
.LABEL $label$4
	CALL memcpy($3, $2, [8])
	*($4 + [260]) = (*($4 + [260]) + [8])
	*(($2 = (($4 + [8]) + [8]))) = *((($4 + [256]) + [8]))
	*($4 + [8]) = *($4 + [256])
	$2 = *($2)
	*((($4 + [368]) + [8])) = $2
	*(($3 = (($4 + [384]) + [8]))) = $2
	$10 = *($4 + [8])
	*($4 + [384]) = $10
	*($4 + [368]) = $10
	$2 = *($3)
	*((($4 + [472]) + [8])) = $2
	*(($4 + [48])) = $2
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [384])
	*($4 + [40]) = $1
	*($4 + [472]) = $1
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*((($4 + [24]) + [56])) = (int_64)0
	*(($4 + [88])) = [0]
	*((($4 + [24]) + [80])) = $0
	*((($4 + [24]) + [88])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [184])) = $0
	*(($4 + [192])) = (int_64)-1
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [208])) = [0]
	*(($4 + [200])) = (int_64)0
	*(($4 + [214])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*($4 + [216]) = $0
	CALL memcpy(($4 + [384]), ($4 + [272]), [72])
	*(($11 = (($4 + [384]) + [76]))) = (int_64)0
	*($4 + [456]) = $11
	$3 = *((($4 + [272]) + [72]))
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$5 }
	$12 = (($4 + [384]) + [72])
	
.LOOP $label$6:
	$13 = $3
	$2 = ($13 + [16])
	CALL $95($12, $11, $2, $2)
	$2 = *($13 + [4])
	if ( ($2 == 0) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = $2
	$2 = *($3)
	if ( $2 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$3 = *($13 + [8])
	if ( ((int_32)*($3) == (int_32)$13) ){ goto $label$7 }
	$13 = ($13 + [8])
	
.LOOP $label$10:
	$2 = *($13)
	$13 = ($2 + [8])
	$3 = *($2 + [8])
	if ( ((int_32)$2 != (int_32)*($3)) ){ goto $label$10 }
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$6 }
	
.LABEL $label$5
	$14 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *(($4 + [360]))
	if ( (($5 & [1]) == 0) ){ goto $label$11 }
	$6 = *((*($14) + $6))
	
.LABEL $label$11
	CALL memcpy(($4 + [472]), ($4 + [384]), [72])
	*(($9 = (($4 + [472]) + [76]))) = (int_64)0
	*($4 + [544]) = $9
	$12 = (($4 + [472]) + [72])
	$3 = *($4 + [456])
	if ( ((int_32)$3 == (int_32)$11) ){ goto $label$12 }
	
.LOOP $label$13:
	$13 = $3
	$2 = ($13 + [16])
	CALL $95($12, $9, $2, $2)
	$2 = *($13 + [4])
	if ( ($2 == 0) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = $2
	$2 = *($3)
	if ( $2 ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$3 = *($13 + [8])
	if ( ((int_32)*($3) == (int_32)$13) ){ goto $label$14 }
	$13 = ($13 + [8])
	
.LOOP $label$17:
	$2 = *($13)
	$13 = ($2 + [8])
	$3 = *($2 + [8])
	if ( ((int_32)$2 != (int_32)*($3)) ){ goto $label$17 }
	
.LABEL $label$14
	if ( ((int_32)$3 != (int_32)$11) ){ goto $label$13 }
	
.LABEL $label$12
	CALL void $14((int_32 ($4 + [472])), (int_32 $0), (int_64 $6))
	CALL $69($12, *($9))
	CALL $69((($4 + [384]) + [72]), *((($4 + [384]) + [76])))
	if ( ($8 <= [513]) ){ goto $label$18 }
	CALL $3($7)
	
.LABEL $label$18
	CALL $65(($4 + [24]))
	CALL $69(($4 + [344]), *(($4 + [348])))
	$global$0 = ($4 + [560])
	return [1]
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $227 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($8) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [9916])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [4])
	$4 = (*($6) + [4])
	*($6) = $4
	if ( ((int_32)(*($8) - $4) > (int_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [9916])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [4]), [2])
	$4 = (*($6) + [2])
	*($6) = $4
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $228 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = *($0)
	$6 = *($5 + [4])
	$7 = *($6 + [132])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	$7 = *($5)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-4138661397305229312, ($4 + [8]), *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($7)
	
.LABEL $label$1
	$5 = *($0)
	$6 = *($5 + [4])
	$7 = *(($6 + [136]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$4 }
	$7 = *($5)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-4138661397305229311, ($4 + [8]), *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($7)
	
.LABEL $label$3
	$7 = *($0)
	$5 = *($7 + [4])
	$0 = *(($5 + [140]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$6 }
	$0 = *($7)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4138661397305229310, ($4 + [8]), *($5))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($0)
	
.LABEL $label$5
	$global$0 = ($4 + [16])
}

void .FUNC $229 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [3])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($2 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $9(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $34($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [3]))
	$3 = ($2 + ($3 << [3]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [3]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $11($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $89 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_32 $41
	int_32 $42
	int_32 $43
	int_32 $44
	int_32 $45
	int_32 $46
	int_32 $47
	int_32 $48
	$3 = ($global$0 - [2688])
	$global$0 = $3
	$4 = (($3 + [2560]) + [112])
	$5 = (($3 + [2560]) + [116])
	$6 = (($3 + [1664]) + [112])
	$7 = (($3 + [1536]) + [112])
	$8 = (($3 + [1152]) + [112])
	$9 = (($3 + [1024]) + [112])
	$10 = (($3 + [1408]) + [112])
	$11 = (($3 + [1280]) + [112])
	$12 = (($3 + [1920]) + [112])
	$13 = (($3 + [128]) + [112])
	$14 = (($3 + [1792]) + [112])
	$15 = ($3 + [112])
	$16 = (($3 + [384]) + [112])
	$17 = (($3 + [256]) + [112])
	$18 = (($3 + [640]) + [112])
	$19 = (($3 + [512]) + [112])
	$20 = (($3 + [896]) + [112])
	$21 = (($3 + [768]) + [112])
	$22 = (($3 + [2176]) + [112])
	$23 = (($3 + [2048]) + [112])
	$24 = (($3 + [2048]) + [88])
	$25 = (($3 + [2560]) + [92])
	
.LOOP $label$1:
	$28 = ($1 + [-256])
	$29 = ($1 + [-128])
	
.LOOP $label$5:
	$27 = $0
	$30 = ($1 - $27)
	$0 = int_32($30 >> [7])
	if ( ((uint_32)$0 <= (uint_32)[5]) ){ goto $label$20 }
	if ( ((int_32)$30 <= (int_32)[895]) ){ goto $label$19 }
	$31 = ($27 + (((int_32)$0 / (int_32)[2]) << [7]))
	if ( ((int_32)$30 < (int_32)[127873]) ){ goto $label$22 }
	$30 = (((int_32)$0 / (int_32)[4]) << [7])
	$32 = CALL $219($27, ($27 + $30), $31, ($31 + $30), $29, $2)
	goto $label$21 
	
.LABEL $label$22
	$32 = CALL $220($27, $31, $29, $2)
	
.LABEL $label$21
	$30 = *($2)
	$0 = CALL int_32 CALL $84(($3 + [2176]), $27)((int_32 CALL $84(($3 + [2048]), $31)), (int_32 $30))
	CALL $69($23, *((($3 + [2048]) + [116])))
	$30 = *($24)
	if ( ($30 == 0) ){ goto $label$23 }
	*((($3 + [2048]) + [92])) = $30
	CALL $11($30)
	
.LABEL $label$23
	CALL $69($22, *((($3 + [2176]) + [116])))
	$30 = *((($3 + [2176]) + [88]))
	if ( ($30 == 0) ){ goto $label$24 }
	*((($3 + [2176]) + [92])) = $30
	CALL $11($30)
	
.LABEL $label$24
	if ( ($0 == 0) ){ goto $label$25 }
	$33 = $29
	$26 = ($27 + [128])
	if ( ($26 <= $33) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$25
	$30 = $28
	
.LOOP $label$27:
	if ( ((int_32)$27 == (int_32)$30) ){ goto $label$26 }
	$0 = *($2)
	$34 = CALL int_32 CALL $84(($3 + [896]), $30)((int_32 CALL $84(($3 + [768]), $31)), (int_32 $0))
	CALL $69($21, *((($3 + [768]) + [116])))
	$0 = *((($3 + [768]) + [88]))
	if ( ($0 == 0) ){ goto $label$28 }
	*((($3 + [768]) + [92])) = $0
	CALL $11($0)
	
.LABEL $label$28
	CALL $69($20, *((($3 + [896]) + [116])))
	$0 = *((($3 + [896]) + [88]))
	if ( ($0 == 0) ){ goto $label$29 }
	*((($3 + [896]) + [92])) = $0
	CALL $11($0)
	
.LABEL $label$29
	$30 = ($30 + [-128])
	if ( ($34 == 0) ){ goto $label$27 }
	CALL memcpy(($3 + [2560]), $27, [88])
	$35 = *($27 + [88 align=4])
	$34 = ($27 + [96])
	*(($36 = (($3 + [2560]) + [96]))) = *($34)
	*(($33 = (($3 + [2560]) + [88]))) = $35
	*($34) = [0]
	*($27 + [88 align=4]) = (int_64)0
	*(($37 = (($3 + [2560]) + [104]))) = *($27 + [104])
	*($4) = *($27 + [112])
	$0 = ($27 + [116])
	$38 = *($0)
	$39 = ($27 + [120])
	$40 = *($39)
	*(($26 = (($3 + [2560]) + [120]))) = $40
	*($5) = $38
	$41 = ($27 + [112])
	if ( ($40 == 0) ){ goto $label$31 }
	*($38 + [8]) = $5
	*($27 + [112]) = $0
	*($0) = (int_64)0
	goto $label$30 
	
.LABEL $label$31
	*($4) = $5
	
.LABEL $label$30
	$38 = ($30 + [216])
	*((($43 = CALL memcpy($27, ($42 = ($30 + [128])), [88])) + [88])) = *($38)
	$44 = ($30 + [224])
	*($34) = *($44)
	*($44) = [0]
	$45 = ($30 + [232])
	*(($43 + [104])) = *($45)
	*($38) = (int_64)0
	CALL $69($41, *($0))
	$40 = ($30 + [240])
	*($41) = *($40)
	$34 = ($30 + [244])
	$46 = *($34)
	*($0) = $46
	$47 = ($30 + [248])
	$48 = *($47)
	*($39) = $48
	if ( ($48 == 0) ){ goto $label$33 }
	*($46 + [8]) = $0
	*($40) = $34
	*($34) = (int_64)0
	goto $label$32 
	
.LABEL $label$33
	*($41) = $0
	
.LABEL $label$32
	CALL memcpy($42, ($3 + [2560]), [88])
	$0 = *($38)
	if ( ($0 == 0) ){ goto $label$34 }
	*(($30 + [220])) = $0
	CALL $11($0)
	*($44) = [0]
	*($38) = (int_64)0
	
.LABEL $label$34
	*($38) = *($33)
	*($44) = *($36)
	*($36) = [0]
	*($45) = *($37)
	*($33) = (int_64)0
	CALL $69($40, *($34))
	*($40) = *($4)
	$0 = *($5)
	*($34) = $0
	$38 = *($26)
	*($47) = $38
	if ( ($38 == 0) ){ goto $label$35 }
	*($0 + [8]) = $34
	*($4) = $5
	*($5) = (int_64)0
	CALL $69($4, [0])
	$0 = *($33)
	if ( ($0 == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$35
	*($40) = $34
	CALL $69($4, $0)
	$0 = *($33)
	if ( $0 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$26
	$30 = *($2)
	$0 = CALL int_32 CALL $84(($3 + [1920]), $27)((int_32 CALL $84(($3 + [1792]), $29)), (int_32 $30))
	CALL $69($14, *((($3 + [1792]) + [116])))
	$30 = *((($3 + [1792]) + [88]))
	if ( ($30 == 0) ){ goto $label$36 }
	*((($3 + [1792]) + [92])) = $30
	CALL $11($30)
	
.LABEL $label$36
	CALL $69($12, *((($3 + [1920]) + [116])))
	$30 = *((($3 + [1920]) + [88]))
	if ( ($30 == 0) ){ goto $label$37 }
	*((($3 + [1920]) + [92])) = $30
	CALL $11($30)
	
.LABEL $label$37
	$41 = ($27 + [128])
	if ( $0 ){ goto $label$12 }
	if ( ((int_32)$41 == (int_32)$29) ){ goto $label$3 }
	$41 = ($27 + [256])
	
.LOOP $label$38:
	$30 = *($2)
	$34 = ($41 + [-128])
	$0 = CALL int_32 CALL $84(($3 + [1664]), $27)((int_32 CALL $84(($3 + [1536]), $34)), (int_32 $30))
	CALL $69($7, *((($3 + [1536]) + [116])))
	$30 = *((($3 + [1536]) + [88]))
	if ( ($30 == 0) ){ goto $label$39 }
	*((($3 + [1536]) + [92])) = $30
	CALL $11($30)
	
.LABEL $label$39
	CALL $69($6, *((($3 + [1664]) + [116])))
	$30 = *((($3 + [1664]) + [88]))
	if ( ($30 == 0) ){ goto $label$40 }
	*((($3 + [1664]) + [92])) = $30
	CALL $11($30)
	
.LABEL $label$40
	if ( $0 ){ goto $label$41 }
	$41 = ($41 + [128])
	if ( ((int_32)$1 != (int_32)$41) ){ goto $label$38 }
	goto $label$3 
	
.LABEL $label$41
	CALL memcpy(($3 + [2560]), $34, [88])
	$0 = ($41 + [-40])
	*(($31 = (($3 + [2560]) + [88]))) = *($0)
	$33 = ($41 + [-32])
	*(($36 = (($3 + [2560]) + [96]))) = *($33)
	*($33) = [0]
	$37 = ($41 + [-24])
	*(($26 = (($3 + [2560]) + [104]))) = *($37)
	$38 = ($41 + [-16])
	*($4) = *($38)
	*($0) = (int_64)0
	$30 = ($41 + [-12])
	$44 = *($30)
	*($5) = $44
	$43 = ($41 + [-8])
	$40 = *($43)
	*(($32 = (($3 + [2560]) + [120]))) = $40
	$39 = ($41 + [-36])
	if ( ($40 == 0) ){ goto $label$43 }
	*($44 + [8]) = $5
	*($43) = [0]
	*($30) = [0]
	*($38) = $30
	goto $label$42 
	
.LABEL $label$43
	*($4) = $5
	
.LABEL $label$42
	CALL memcpy($34, $29, [88])
	$34 = ($1 + [-40])
	*($0) = *($34)
	$44 = ($1 + [-36])
	*($39) = *($44)
	$40 = ($1 + [-32])
	*($33) = *($40)
	*($40) = [0]
	$39 = ($1 + [-24])
	*($37) = *($39)
	*($34) = (int_64)0
	CALL $69($38, *($30))
	$33 = ($1 + [-16])
	*($38) = *($33)
	$0 = ($1 + [-12])
	$45 = *($0)
	*($30) = $45
	$37 = ($1 + [-8])
	$42 = *($37)
	*($43) = $42
	if ( ($42 == 0) ){ goto $label$45 }
	*($45 + [8]) = $30
	*($0) = [0]
	*($37) = [0]
	*($33) = $0
	goto $label$44 
	
.LABEL $label$45
	*($38) = $30
	
.LABEL $label$44
	CALL memcpy($29, ($3 + [2560]), [88])
	$30 = *($34)
	if ( ($30 == 0) ){ goto $label$46 }
	*($44) = $30
	CALL $11($30)
	*($44) = [0]
	*($40) = [0]
	*($34) = [0]
	
.LABEL $label$46
	*($34) = *($31)
	*($44) = *($25)
	*($40) = *($36)
	*($36) = [0]
	*($39) = *($26)
	*($31) = (int_64)0
	CALL $69($33, *($0))
	*($33) = *($4)
	$30 = *($5)
	*($0) = $30
	$34 = *($32)
	*($37) = $34
	if ( ($34 == 0) ){ goto $label$47 }
	*($30 + [8]) = $0
	*($4) = $5
	*($5) = (int_64)0
	CALL $69($4, [0])
	$30 = *($31)
	if ( ($30 == 0) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$47
	*($33) = $0
	CALL $69($4, $30)
	$30 = *($31)
	if ( $30 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$20
	goto $label$3 
	
.LABEL $label$48
	$0 = *($2)
	$2 = CALL $84(($3 + [2304]), $27)
	$31 = ($1 + [-128])
	$30 = CALL $84(($3 + [2432]), $31)
	$34 = CALL int_32 $30((int_32 $2), (int_32 $0))
	CALL $69(($2 + [112]), *(($2 + [116])))
	$0 = *($2 + [88])
	if ( ($0 == 0) ){ goto $label$49 }
	*(($2 + [92])) = $0
	CALL $11($0)
	
.LABEL $label$49
	CALL $69(($30 + [112]), *(($30 + [116])))
	$2 = *($30 + [88])
	if ( ($2 == 0) ){ goto $label$50 }
	*(($30 + [92])) = $2
	CALL $11($2)
	
.LABEL $label$50
	if ( ($34 == 0) ){ goto $label$3 }
	CALL memcpy(($3 + [2560]), $27, [88])
	$35 = *($27 + [88 align=4])
	$30 = ($27 + [96])
	*((($3 + [2560]) + [96])) = *($30)
	*($3 + [2648]) = $35
	*($27 + [88 align=4]) = (int_64)0
	*($30) = [0]
	$30 = ($27 + [116])
	$2 = *($30)
	$0 = *($27 + [112])
	$35 = *($27 + [104])
	$34 = *(($27 + [120]))
	*((($3 + [2560]) + [120])) = $34
	*(($16 = (($3 + [2560]) + [116]))) = $2
	*($3 + [2664]) = $35
	*($3 + [2672]) = $0
	$17 = ($27 + [112])
	if ( ($34 == 0) ){ goto $label$15 }
	*($2 + [8]) = $16
	*($27 + [112]) = $30
	*($30) = (int_64)0
	goto $label$14 
	
.LABEL $label$19
	CALL $221($27, $1, $2)
	goto $label$3 
	
.LABEL $label$18
	CALL $220($27, ($27 + [128]), ($1 + [-128]), $2)
	$global$0 = ($3 + [2688])
	return 
	
.LABEL $label$17
	CALL $222($27, ($27 + [128]), ($27 + [256]), ($1 + [-128]), $2)
	$global$0 = ($3 + [2688])
	return 
	
.LABEL $label$16
	CALL $219($27, ($27 + [128]), ($27 + [256]), ($27 + [384]), ($1 + [-128]), $2)
	$global$0 = ($3 + [2688])
	return 
	
.LABEL $label$15
	*((($3 + [2560]) + [112])) = $16
	
.LABEL $label$14
	$34 = ($1 + [-40])
	*((($0 = CALL memcpy($27, $31, [88])) + [88])) = *($34)
	$27 = ($1 + [-32])
	*(($0 + [96])) = *($27)
	*($27) = [0]
	$18 = ($1 + [-24])
	*(($0 + [104])) = *($18)
	*($34) = (int_64)0
	CALL $69($17, *($30))
	$38 = ($1 + [-16])
	*(($0 + [112])) = *($38)
	$2 = ($1 + [-12])
	$8 = *($2)
	*($30) = $8
	$0 = ($1 + [-8])
	$19 = *($0)
	*(($0 + [120])) = $19
	if ( ($19 == 0) ){ goto $label$52 }
	*($8 + [8]) = $30
	*($2) = [0]
	*($0) = [0]
	*($38) = $2
	goto $label$51 
	
.LABEL $label$52
	*($17) = $30
	
.LABEL $label$51
	$30 = ($1 + [-36])
	CALL memcpy($31, ($3 + [2560]), [88])
	$31 = *($34)
	if ( ($31 == 0) ){ goto $label$53 }
	*($30) = $31
	CALL $11($31)
	*($30) = [0]
	*($27) = [0]
	*($34) = [0]
	
.LABEL $label$53
	$31 = (($3 + [2560]) + [88])
	*($34) = *($31)
	*($30) = *(($3 + [2652]))
	$30 = ($3 + [2656])
	*($27) = *($30)
	*($30) = [0]
	*($18) = *(($3 + [2664]))
	*($31) = (int_64)0
	CALL $69($38, *($2))
	$31 = ($3 + [2672])
	*($38) = *($31)
	$27 = ($3 + [2676])
	$30 = *($27)
	*($2) = $30
	$34 = *(($3 + [2680]))
	*($0) = $34
	if ( ($34 == 0) ){ goto $label$55 }
	*($30 + [8]) = $2
	*($31) = $16
	*($27) = (int_64)0
	$30 = [0]
	goto $label$54 
	
.LABEL $label$55
	*($38) = $2
	
.LABEL $label$54
	CALL $69(($3 + [2672]), $30)
	$30 = *($3 + [2648])
	if ( ($30 == 0) ){ goto $label$3 }
	*(($3 + [2652])) = $30
	CALL $11($30)
	$global$0 = ($3 + [2688])
	return 
	
.LABEL $label$13
	*($25) = $30
	CALL $11($30)
	
.LABEL $label$12
	if ( ((int_32)$41 == (int_32)$29) ){ goto $label$3 }
	
.LOOP $label$56:
	$0 = ($41 + [-128])
	
.LOOP $label$57:
	$30 = *($2)
	$0 = ($0 + [128])
	$34 = CALL int_32 CALL $84(($3 + [1408]), $27)((int_32 CALL $84(($3 + [1280]), $0)), (int_32 $30))
	CALL $69($11, *((($3 + [1280]) + [116])))
	$30 = *((($3 + [1280]) + [88]))
	if ( ($30 == 0) ){ goto $label$58 }
	*((($3 + [1280]) + [92])) = $30
	CALL $11($30)
	
.LABEL $label$58
	CALL $69($10, *((($3 + [1408]) + [116])))
	$30 = *((($3 + [1408]) + [88]))
	if ( ($30 == 0) ){ goto $label$59 }
	*((($3 + [1408]) + [92])) = $30
	CALL $11($30)
	
.LABEL $label$59
	if ( ($34 == 0) ){ goto $label$57 }
	$30 = ($29 + [120])
	$41 = ($0 + [128])
	
.LOOP $label$60:
	$34 = *($2)
	$31 = CALL int_32 CALL $84(($3 + [1152]), $27)((int_32 CALL $84(($3 + [1024]), ($30 + [-248]))), (int_32 $34))
	CALL $69($9, *((($3 + [1024]) + [116])))
	$34 = *((($3 + [1024]) + [88]))
	if ( ($34 == 0) ){ goto $label$61 }
	*((($3 + [1024]) + [92])) = $34
	CALL $11($34)
	
.LABEL $label$61
	CALL $69($8, *((($3 + [1152]) + [116])))
	$34 = *((($3 + [1152]) + [88]))
	if ( ($34 == 0) ){ goto $label$62 }
	*((($3 + [1152]) + [92])) = $34
	CALL $11($34)
	
.LABEL $label$62
	$30 = ($30 + [-128])
	if ( $31 ){ goto $label$60 }
	$29 = ($30 + [-120])
	if ( ((uint_32)$0 >= (uint_32)$29) ){ goto $label$63 }
	CALL memcpy(($3 + [2560]), $0, [88])
	$40 = ($0 + [88])
	*(($38 = (($3 + [2560]) + [88]))) = *($40)
	$43 = ($0 + [96])
	*(($36 = (($3 + [2560]) + [96]))) = *($43)
	*($43) = [0]
	$26 = ($0 + [104])
	*(($37 = (($3 + [2560]) + [104]))) = *($26)
	$33 = ($0 + [112])
	*($4) = *($33)
	*($40) = (int_64)0
	$34 = ($0 + [116])
	$44 = *($34)
	*($5) = $44
	$39 = ($0 + [120])
	$31 = *($39)
	*(($32 = (($3 + [2560]) + [120]))) = $31
	if ( ($31 == 0) ){ goto $label$65 }
	*($44 + [8]) = $5
	*($33) = $34
	*($34) = (int_64)0
	goto $label$64 
	
.LABEL $label$65
	*($4) = $5
	
.LABEL $label$64
	CALL memcpy($0, $29, [88])
	$31 = ($30 + [-32])
	*($40) = *($31)
	$44 = ($30 + [-24])
	*($43) = *($44)
	*($44) = [0]
	$43 = ($30 + [-16])
	*($26) = *($43)
	*($31) = (int_64)0
	CALL $69($33, *($34))
	$40 = ($30 + [-8])
	*($33) = *($40)
	$0 = ($30 + [-4])
	$42 = *($0)
	*($34) = $42
	$26 = *($30)
	*($39) = $26
	if ( ($26 == 0) ){ goto $label$67 }
	*($42 + [8]) = $34
	*($40) = $0
	*($0) = (int_64)0
	goto $label$66 
	
.LABEL $label$67
	*($33) = $34
	
.LABEL $label$66
	$34 = ($30 + [-28])
	CALL memcpy($29, ($3 + [2560]), [88])
	$33 = *($31)
	if ( ($33 == 0) ){ goto $label$68 }
	*($34) = $33
	CALL $11($33)
	*($34) = [0]
	*($44) = [0]
	*($31) = [0]
	
.LABEL $label$68
	*($31) = *($38)
	*($34) = *($25)
	*($44) = *($36)
	*($36) = [0]
	*($43) = *($37)
	*($38) = (int_64)0
	CALL $69($40, *($0))
	*($40) = *($4)
	$34 = *($5)
	*($0) = $34
	$31 = *($32)
	*($30) = $31
	if ( ($31 == 0) ){ goto $label$70 }
	*($34 + [8]) = $0
	*($4) = $5
	*($5) = (int_64)0
	CALL $69($4, [0])
	$30 = *($38)
	if ( $30 ){ goto $label$69 }
	goto $label$56 
	
.LABEL $label$70
	*($40) = $0
	CALL $69($4, $34)
	$30 = *($38)
	if ( ($30 == 0) ){ goto $label$56 }
	
.LABEL $label$69
	*($25) = $30
	CALL $11($30)
	goto $label$56 
	
.LABEL $label$63
	$30 = ([4] & [7])
	if ( ((uint_32)$30 > (uint_32)[4]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$11
	*($25) = $0
	CALL $11($0)
	
.LABEL $label$10
	$32 = ($32 + [1])
	$33 = ($30 + [128])
	$26 = ($43 + [128])
	if ( ((uint_32)$26 >= (uint_32)$33) ){ goto $label$8 }
	
.LABEL $label$9
	
.LOOP $label$71:
	$0 = ($26 + [-128])
	
.LOOP $label$72:
	$30 = *($2)
	$0 = ($0 + [128])
	$34 = CALL int_32 CALL $84(($3 + [640]), $0)((int_32 CALL $84(($3 + [512]), $31)), (int_32 $30))
	CALL $69($19, *((($3 + [512]) + [116])))
	$30 = *((($3 + [512]) + [88]))
	if ( ($30 == 0) ){ goto $label$73 }
	*((($3 + [512]) + [92])) = $30
	CALL $11($30)
	
.LABEL $label$73
	CALL $69($18, *((($3 + [640]) + [116])))
	$30 = *((($3 + [640]) + [88]))
	if ( ($30 == 0) ){ goto $label$74 }
	*((($3 + [640]) + [92])) = $30
	CALL $11($30)
	
.LABEL $label$74
	if ( $34 ){ goto $label$72 }
	$30 = ($33 + [120])
	$26 = ($0 + [128])
	
.LOOP $label$75:
	$34 = *($2)
	$38 = CALL int_32 CALL $84(($3 + [384]), ($30 + [-248]))((int_32 CALL $84(($3 + [256]), $31)), (int_32 $34))
	CALL $69($17, *((($3 + [256]) + [116])))
	$34 = *((($3 + [256]) + [88]))
	if ( ($34 == 0) ){ goto $label$76 }
	*((($3 + [256]) + [92])) = $34
	CALL $11($34)
	
.LABEL $label$76
	CALL $69($16, *((($3 + [384]) + [116])))
	$34 = *((($3 + [384]) + [88]))
	if ( ($34 == 0) ){ goto $label$77 }
	*((($3 + [384]) + [92])) = $34
	CALL $11($34)
	
.LABEL $label$77
	$30 = ($30 + [-128])
	if ( ($38 == 0) ){ goto $label$75 }
	$33 = ($30 + [-120])
	if ( ((uint_32)$0 > (uint_32)$33) ){ goto $label$78 }
	CALL memcpy(($3 + [2560]), $0, [88])
	$41 = ($0 + [88])
	*(($40 = (($3 + [2560]) + [88]))) = *($41)
	$37 = ($0 + [96])
	*(($43 = (($3 + [2560]) + [96]))) = *($37)
	*($37) = [0]
	$45 = ($0 + [104])
	*(($42 = (($3 + [2560]) + [104]))) = *($45)
	$44 = ($0 + [112])
	*($4) = *($44)
	*($41) = (int_64)0
	$34 = ($0 + [116])
	$36 = *($34)
	*($5) = $36
	$48 = ($0 + [120])
	$38 = *($48)
	*(($47 = (($3 + [2560]) + [120]))) = $38
	if ( ($38 == 0) ){ goto $label$80 }
	*($36 + [8]) = $5
	*($44) = $34
	*($34) = (int_64)0
	goto $label$79 
	
.LABEL $label$80
	*($4) = $5
	
.LABEL $label$79
	$39 = CALL memcpy($0, $33, [88])
	$38 = ($30 + [-32])
	*($41) = *($38)
	$36 = ($30 + [-24])
	*($37) = *($36)
	*($36) = [0]
	$46 = ($30 + [-16])
	*($45) = *($46)
	*($38) = (int_64)0
	CALL $69($44, *($34))
	$41 = ($30 + [-8])
	*($44) = *($41)
	$0 = ($30 + [-4])
	$45 = *($0)
	*($34) = $45
	$37 = *($30)
	*($48) = $37
	if ( ($37 == 0) ){ goto $label$82 }
	*($45 + [8]) = $34
	*($41) = $0
	*($0) = (int_64)0
	goto $label$81 
	
.LABEL $label$82
	*($44) = $34
	
.LABEL $label$81
	$34 = ($30 + [-28])
	$37 = CALL memcpy($33, ($3 + [2560]), [88])
	$44 = *($38)
	if ( ($44 == 0) ){ goto $label$83 }
	*($34) = $44
	CALL $11($44)
	*($34) = [0]
	*($36) = [0]
	*($38) = [0]
	
.LABEL $label$83
	*($38) = *($40)
	*($34) = *($25)
	*($36) = *($43)
	*($43) = [0]
	*($46) = *($42)
	*($40) = (int_64)0
	CALL $69($41, *($0))
	*($41) = *($4)
	$38 = *($5)
	*($0) = $38
	$34 = *($47)
	*($30) = $34
	if ( ($34 == 0) ){ goto $label$86 }
	*($38 + [8]) = $0
	*($4) = $5
	*($5) = (int_64)0
	CALL $69($4, [0])
	$30 = *($40)
	if ( $30 ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$86
	*($41) = $0
	CALL $69($4, $38)
	$30 = *($40)
	if ( ($30 == 0) ){ goto $label$84 }
	
.LABEL $label$85
	*($25) = $30
	CALL $11($30)
	
.LABEL $label$84
	$31 = ( $37 ? $31 : ((int_32)$31 == (int_32)$39) )
	$32 = ($32 + [1])
	goto $label$71 
	
.LABEL $label$78
	$26 = $0
	if ( ((int_32)$26 == (int_32)$31) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$26 == (int_32)$31) ){ goto $label$6 }
	
.LABEL $label$7
	$30 = *($2)
	$0 = CALL int_32 CALL $84(($3 + [128]), $31)((int_32 CALL $84($3, $26)), (int_32 $30))
	CALL $69($15, *(($3 + [116])))
	$30 = *(($3 + [88]))
	if ( ($30 == 0) ){ goto $label$87 }
	*(($3 + [92])) = $30
	CALL $11($30)
	
.LABEL $label$87
	CALL $69($13, *((($3 + [128]) + [116])))
	$30 = *((($3 + [128]) + [88]))
	if ( ($30 == 0) ){ goto $label$88 }
	*((($3 + [128]) + [92])) = $30
	CALL $11($30)
	
.LABEL $label$88
	if ( ($0 == 0) ){ goto $label$6 }
	CALL memcpy(($3 + [2560]), $26, [88])
	$35 = *($26 + [88 align=4])
	$0 = ($26 + [96])
	*(($44 = (($3 + [2560]) + [96]))) = *($0)
	*(($34 = (($3 + [2560]) + [88]))) = $35
	*($0) = [0]
	*($26 + [88 align=4]) = (int_64)0
	*(($41 = (($3 + [2560]) + [104]))) = *($26 + [104])
	*($4) = *($26 + [112])
	$30 = ($26 + [116])
	$38 = *($30)
	$43 = ($26 + [120])
	$33 = *($43)
	*(($36 = (($3 + [2560]) + [120]))) = $33
	*($5) = $38
	$40 = ($26 + [112])
	if ( ($33 == 0) ){ goto $label$90 }
	*($38 + [8]) = $5
	*($26 + [112]) = $30
	*($30) = (int_64)0
	goto $label$89 
	
.LABEL $label$90
	*($4) = $5
	
.LABEL $label$89
	*((($38 = CALL memcpy($26, $31, [88])) + [88])) = *($31 + [88 align=4])
	$33 = ($31 + [96])
	*($0) = *($33)
	*($33) = [0]
	*(($38 + [104])) = *($31 + [104])
	*($31 + [88 align=4]) = (int_64)0
	CALL $69($40, *($30))
	*($40) = *($31 + [112])
	$0 = ($31 + [116])
	$42 = *($0)
	*($30) = $42
	$37 = ($31 + [120])
	$39 = *($37)
	*($43) = $39
	$38 = ($31 + [112])
	if ( ($39 == 0) ){ goto $label$92 }
	*($42 + [8]) = $30
	*($38) = $0
	*($0) = (int_64)0
	goto $label$91 
	
.LABEL $label$92
	*($40) = $30
	
.LABEL $label$91
	$30 = CALL memcpy($31, ($3 + [2560]), [88])
	$31 = ($30 + [88])
	$40 = *($31)
	if ( ($40 == 0) ){ goto $label$93 }
	*(($30 + [92])) = $40
	CALL $11($40)
	*($33) = [0]
	*($31) = (int_64)0
	
.LABEL $label$93
	*($31) = *($34)
	*($33) = *($44)
	*($44) = [0]
	*(($30 + [104])) = *($41)
	*($34) = (int_64)0
	CALL $69($38, *($0))
	*($38) = *($4)
	$30 = *($5)
	*($0) = $30
	$31 = *($36)
	*($37) = $31
	if ( ($31 == 0) ){ goto $label$96 }
	*($30 + [8]) = $0
	*($4) = $5
	*($5) = (int_64)0
	CALL $69($4, [0])
	$30 = *($34)
	if ( ($30 == 0) ){ goto $label$94 }
	goto $label$95 
	
.LABEL $label$96
	*($38) = $0
	CALL $69($4, $30)
	$30 = *($34)
	if ( ($30 == 0) ){ goto $label$94 }
	
.LABEL $label$95
	*($25) = $30
	CALL $11($30)
	
.LABEL $label$94
	$32 = ($32 + [1])
	
.LABEL $label$6
	if ( $32 ){ goto $label$98 }
	$30 = CALL $223($27, $26, $2)
	$0 = ($26 + [128])
	if ( CALL $223($0, $1, $2) ){ goto $label$97 }
	if ( $30 ){ goto $label$5 }
	
.LABEL $label$98
	if ( ((int_32)($26 - $27) >= (int_32)($1 - $26)) ){ goto $label$2 }
	CALL $89($27, $26, $2)
	$0 = ($26 + [128])
	goto $label$5 
	
.LABEL $label$97
	$1 = ( $1 ? $26 : $30 )
	$0 = $27
	$30 = (( [1] ? [2] : $30 ) & [7])
	if ( ((uint_32)$30 > (uint_32)[4]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( (([1] << $30) & [21]) ){ goto $label$1 }
	
.LABEL $label$3
	$global$0 = ($3 + [2688])
	return 
	
.LABEL $label$2
	CALL $89(($26 + [128]), $1, $2)
	$1 = $26
	$0 = $27
	goto $label$1 
	$0
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$2 = *($0)
	$3 = int_32((*($0 + [4]) - $2) >> [7])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[33554432]) ){ goto $label$3 }
	$5 = [33554431]
	$2 = (*($0 + [8]) - $2)
	if ( ((uint_32)int_32($2 >> [7]) > (uint_32)[16777214]) ){ goto $label$5 }
	$5 = int_32($2 >> [6])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[33554432]) ){ goto $label$2 }
	
.LABEL $label$5
	$6 = CALL $9(($5 << [7]))
	goto $label$1 
	
.LABEL $label$4
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $34($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$7 = ($6 + ($5 << [7]))
	$8 = ($6 + ($3 << [7]))
	$1 = CALL $84($8, $1)
	$9 = ($1 + [128])
	$5 = *($0)
	$10 = ($0 + [4])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$7 }
	$12 = (($3 + [-1]) - uint_32((($11 + [-128]) - $5) >> [7]))
	$13 = ($5 - $11)
	$1 = [0]
	
.LOOP $label$9:
	$3 = ($11 + $1)
	$5 = ($8 + $1)
	CALL memcpy(($5 + [-128]), ($3 + [-128]), [88])
	*(($2 = ($5 + [-40]))) = (int_64)0
	*(($4 = ($5 + [-32]))) = [0]
	$14 = ($3 + [-40])
	*($2) = *($14)
	*(($5 + [-36])) = *(($3 + [-36]))
	$2 = ($3 + [-32])
	*($4) = *($2)
	*($2) = [0]
	*(($5 + [-24])) = *(($3 + [-24]))
	$16 = ($3 + [-16])
	*(($15 = ($5 + [-16]))) = *($16)
	*($14) = (int_64)0
	$2 = ($3 + [-12])
	$14 = *($2)
	*(($4 = ($5 + [-12]))) = $14
	$3 = ($3 + [-8])
	$5 = *($3)
	*(($5 + [-8])) = $5
	if ( ($5 == 0) ){ goto $label$10 }
	*($14 + [8]) = $4
	*($3) = [0]
	*($2) = [0]
	*($16) = $2
	$1 = ($1 + [-128])
	if ( ((int_32)$13 != (int_32)$1) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($15) = $4
	$1 = ($1 + [-128])
	if ( ((int_32)$13 != (int_32)$1) ){ goto $label$9 }
	
.LABEL $label$8
	$1 = ($6 + ($12 << [7]))
	$5 = *(($0 + [4]))
	$2 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$2 = $5
	
.LABEL $label$6
	*($0) = $1
	*($10) = $9
	*(($0 + [8])) = $7
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$11 }
	
.LOOP $label$12:
	CALL $69(($5 + [-16]), *(($5 + [-12])))
	$3 = ($5 + [-128])
	$1 = *(($5 + [-40]))
	if ( ($1 == 0) ){ goto $label$13 }
	*(($5 + [-36])) = $1
	CALL $11($1)
	
.LABEL $label$13
	$5 = $3
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($2 == 0) ){ goto $label$14 }
	CALL $11($2)
	
.LABEL $label$14
	(unreachable)
	(unreachable)
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11143])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([64])) + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [44 align=4]) = (int_64)0
	*($5 + [52]) = $0
	*($5 + [40]) = ($5 + [44])
	CALL $138(($3 + [32]), $5)
	*($5 + [56]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $205(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $69(($1 + [40]), *(($1 + [44])))
	$4 = *($1 + [20])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [24])) = $4
	CALL $11($4)
	
.LABEL $label$11
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($1 + [16])))
	
.LABEL $label$12
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $86 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [132])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [11209])
	$2 = *(($0 + [4]))
	$3 = *($2 + [132])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-6497942746098040832, ($1 + [8]), *($2 + [64]))
	*(*(($0 + [4])) + [132]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4 + [64]) == (int_64)$6) ){ goto $label$7 }
	$2 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)*($4 + [124]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [11092])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $75($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)-6497942746098040832, $6))
	if ( ((int_32)*($4 + [124]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$5
	*($4 + [132]) = $5
	
.LABEL $label$4
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$2 = *($0)
	$3 = int_32((*($0 + [4]) - $2) >> [7])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[33554432]) ){ goto $label$3 }
	$5 = [33554431]
	$2 = (*($0 + [8]) - $2)
	if ( ((uint_32)int_32($2 >> [7]) > (uint_32)[16777214]) ){ goto $label$5 }
	$5 = int_32($2 >> [6])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[33554432]) ){ goto $label$2 }
	
.LABEL $label$5
	$6 = CALL $9(($5 << [7]))
	goto $label$1 
	
.LABEL $label$4
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $34($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$7 = ($6 + ($5 << [7]))
	$8 = ($6 + ($3 << [7]))
	$1 = CALL $84($8, $1)
	$9 = ($1 + [128])
	$5 = *($0)
	$10 = ($0 + [4])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$7 }
	$12 = (($3 + [-1]) - uint_32((($11 + [-128]) - $5) >> [7]))
	$13 = ($5 - $11)
	$1 = [0]
	
.LOOP $label$9:
	$3 = ($11 + $1)
	$5 = ($8 + $1)
	CALL memcpy(($5 + [-128]), ($3 + [-128]), [88])
	*(($2 = ($5 + [-40]))) = (int_64)0
	*(($4 = ($5 + [-32]))) = [0]
	$14 = ($3 + [-40])
	*($2) = *($14)
	*(($5 + [-36])) = *(($3 + [-36]))
	$2 = ($3 + [-32])
	*($4) = *($2)
	*($2) = [0]
	*(($5 + [-24])) = *(($3 + [-24]))
	$16 = ($3 + [-16])
	*(($15 = ($5 + [-16]))) = *($16)
	*($14) = (int_64)0
	$2 = ($3 + [-12])
	$14 = *($2)
	*(($4 = ($5 + [-12]))) = $14
	$3 = ($3 + [-8])
	$5 = *($3)
	*(($5 + [-8])) = $5
	if ( ($5 == 0) ){ goto $label$10 }
	*($14 + [8]) = $4
	*($3) = [0]
	*($2) = [0]
	*($16) = $2
	$1 = ($1 + [-128])
	if ( ((int_32)$13 != (int_32)$1) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($15) = $4
	$1 = ($1 + [-128])
	if ( ((int_32)$13 != (int_32)$1) ){ goto $label$9 }
	
.LABEL $label$8
	$1 = ($6 + ($12 << [7]))
	$5 = *(($0 + [4]))
	$2 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$2 = $5
	
.LABEL $label$6
	*($0) = $1
	*($10) = $9
	*(($0 + [8])) = $7
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$11 }
	
.LOOP $label$12:
	CALL $69(($5 + [-16]), *(($5 + [-12])))
	$3 = ($5 + [-128])
	$1 = *(($5 + [-40]))
	if ( ($1 == 0) ){ goto $label$13 }
	*(($5 + [-36])) = $1
	CALL $11($1)
	
.LABEL $label$13
	$5 = $3
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($2 == 0) ){ goto $label$14 }
	CALL $11($2)
	
.LABEL $label$14
	(unreachable)
	(unreachable)
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*(($2 = CALL memcpy($0, $1, [88])) + [88 align=4]) = (int_64)0
	*(($2 + [96])) = [0]
	$0 = (*(($1 + [92])) - *($1 + [88]))
	if ( ($0 == 0) ){ goto $label$2 }
	$3 = int_32($0 >> [5])
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$1 }
	$0 = CALL $9($0)
	*(($2 + [88])) = $0
	*(($2 + [96])) = ($0 + ($3 << [5]))
	*(($3 = ($2 + [92]))) = $0
	$4 = *(($1 + [88]))
	$5 = (*(($1 + [92])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($0, $4, $5)
	*($3) = (*($3) + $5)
	
.LABEL $label$2
	*(($5 = ($2 + [116]))) = (int_64)0
	*($2 + [112]) = $5
	*($2 + [104]) = *($1 + [104])
	$4 = ($1 + [116])
	$0 = *($1 + [112])
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$3 }
	$6 = ($2 + [112])
	
.LOOP $label$4:
	$3 = $0
	$1 = ($3 + [16])
	CALL $95($6, $5, $1, $1)
	$1 = *($3 + [4])
	if ( ($1 == 0) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = $1
	$1 = *($0)
	if ( $1 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$0 = *($3 + [8])
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$5 }
	$3 = ($3 + [8])
	
.LOOP $label$8:
	$1 = *($3)
	$3 = ($1 + [8])
	$0 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($0)) ){ goto $label$8 }
	
.LABEL $label$5
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$4 }
	
.LABEL $label$3
	return $2
	
.LABEL $label$1
	CALL $34(($2 + [88]))
	return (unreachable)
}

void .FUNC $83 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-6497942746098040832, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [64]) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [124]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $75($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)-6497942746098040832, $6))
	if ( ((int_32)*($4 + [124]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$2
	*($4 + [132]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $82 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = int_32(($2 - $1) >> [5])
	if ( ((uint_32)$3 <= (uint_32)int_32(($4 - $5) >> [5])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $11($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$1 }
	$5 = [134217727]
	if ( ((uint_32)int_32($4 >> [5]) > (uint_32)[67108862]) ){ goto $label$6 }
	$5 = $3
	$4 = int_32($4 >> [4])
	if ( ($4 <= $3) ){ goto $label$6 }
	$5 = $4
	if ( ((uint_32)$4 >= (uint_32)[134217728]) ){ goto $label$1 }
	
.LABEL $label$6
	$5 = ($5 << [5])
	$4 = CALL $9($5)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $5)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($4) = *($1)
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$4 = (*($0) + [32])
	*($0) = $4
	$1 = ($1 + [32])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$7 = int_32($6 >> [5])
	$6 = (*($0 + [4]) - $5)
	$4 = ($1 + $6)
	$8 = ( $4 ? $2 : ((uint_32)$3 > (uint_32)$7) )
	$6 = ($8 - $1)
	if ( ($6 == 0) ){ goto $label$8 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$7) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	$1 = *($0)
	
.LOOP $label$9:
	*($1) = *($4)
	*(($1 + [24])) = *(($4 + [24]))
	*(($1 + [16])) = *(($4 + [16]))
	*(($1 + [8])) = *(($4 + [8]))
	$1 = (*($0) + [32])
	*($0) = $1
	$4 = ($4 + [32])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + (int_32($6 >> [5]) << [5]))
	return (unreachable)
	
.LABEL $label$1
	CALL $34($0)
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [5])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$3 }
	$6 = [134217727]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [5]) > (uint_32)[67108862]) ){ goto $label$5 }
	$6 = int_32($7 >> [4])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $9(($6 << [5]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $34($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [5])))) = *($1)
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 - $1)
	$6 = ($5 + ($6 << [5]))
	$4 = ($4 + [32])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $11($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $80 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	$4 = ($global$0 - [80])
	$global$0 = $4
	*($4 + [24]) = (int_64)0
	*($4 + [16]) = $3
	CALL cancel_deferred(($4 + [16]))
	$5 = CALL current_time()
	*(($4 + [44])) = (int_64)0
	*(($4 + [60])) = (int_64)0
	*(($4 + [68])) = (int_64)0
	*($4 + [28]) = [0]
	*($4 + [32]) = [0]
	*($4 + [36 align=4]) = (int_64)0
	*($4 + [52 align=4]) = (int_64)0
	*($4 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000)) + [60])
	$6 = ($4 + [52])
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$1 }
	CALL $141($6, *($1), *($1 + [4]))
	
.LABEL $label$1
	*(($4 + [36])) = $2
	*($4 + [8]) = (int_64)0
	*($4) = $3
	CALL $102(($4 + [16]), $4, *($0), [1])
	CALL $103(($4 + [16]))
	$global$0 = ($4 + [80])
}

void .FUNC $182 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ($2 - $1)
	if ( ((uint_32)$3 <= (uint_32)($4 - $5)) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $11($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$2 = [2147483647]
	if ( ((uint_32)$4 > (uint_32)[1073741822]) ){ goto $label$6 }
	$5 = ($4 << [1])
	$2 = ( $3 ? $5 : ($5 <= $3) )
	
.LABEL $label$6
	$5 = CALL $9($2)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $2)
	CALL memcpy($5, $1, $3)
	$1 = ($0 + [4])
	$0 = (*($0 + [4]) + $3)
	goto $label$3 
	
.LABEL $label$4
	$4 = (*($0 + [4]) - $5)
	$6 = ( ($1 + $4) ? $2 : ((uint_32)$3 > (uint_32)$4) )
	$7 = ($6 - $1)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $7)
	
.LABEL $label$7
	$1 = ($0 + [4])
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$8 }
	$0 = ($2 - $6)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy(*($1), $6, $0)
	$0 = (*($1) + $0)
	goto $label$3 
	
.LABEL $label$8
	$0 = ($5 + $7)
	
.LABEL $label$3
	*($1) = $0
	
.LABEL $label$2
	return (unreachable)
	
.LABEL $label$1
	CALL $34($0)
}

int_32 .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $197(CALL $198($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $148 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9865])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([144])) + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [88 align=4]) = (int_64)0
	*($3 + [96]) = [0]
	*($3 + [116 align=4]) = (int_64)0
	*($3 + [124]) = $1
	*($3 + [112]) = ($3 + [116])
	CALL $199(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [128])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $200(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $69(($3 + [112]), *(($3 + [116])))
	$1 = *($3 + [88])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [92])) = $1
	CALL $11($1)
	
.LABEL $label$5
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9916])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9916])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $190(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[12])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL $9(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $34($0)
	
.LABEL $label$1
	$4 = ($2 + ((int_32)$5 * (int_32)[12]))
	$1 = CALL $25(($2 + ((int_32)$3 * (int_32)[12])), $1)
	$6 = ($1 + [12])
	$2 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($5 + [-4])
	*(($1 + [-4])) = *($3)
	$5 = ($5 + [-12])
	*(($1 = ($1 + [-12]))) = *($5)
	*($5) = (int_64)0
	*($3) = [0]
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($2 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL $11(*(($2 + [-4])))
	
.LABEL $label$10
	$2 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $11($3)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $195($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $149($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9916])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $149($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $196($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

int_32 .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

void .FUNC $141 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ((int_32)($2 - $1) / (int_32)[40])
	if ( ((uint_32)$3 <= (uint_32)((int_32)($4 - $5) / (int_32)[40])) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$3 }
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$7:
	$6 = *(($4 + [-12]))
	if ( ($6 == 0) ){ goto $label$8 }
	*(($4 + [-8])) = $6
	CALL $11($6)
	
.LABEL $label$8
	$6 = ($4 + [-40])
	$7 = *(($4 + [-24]))
	if ( ($7 == 0) ){ goto $label$9 }
	*(($4 + [-20])) = $7
	CALL $11($7)
	
.LABEL $label$9
	$4 = $6
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$7 }
	$4 = *($0)
	goto $label$4 
	
.LABEL $label$6
	$8 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$9 = ($1 + ((int_32)$8 * (int_32)[40]))
	$10 = ( $9 ? $2 : ((uint_32)$3 > (uint_32)$8) )
	if ( ((int_32)$10 == (int_32)$1) ){ goto $label$10 }
	$11 = ($10 - $1)
	$6 = [0]
	
.LOOP $label$11:
	$4 = ($1 + $6)
	*(($7 = ($5 + $6))) = *($4)
	*(($7 + [8])) = *(($4 + [8]))
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$12 }
	CALL $181(($7 + [16]), *(($4 + [16])), *(($4 + [20])))
	CALL $182(($7 + [28]), *(($4 + [28])), *(($4 + [32])))
	
.LABEL $label$12
	$6 = ($6 + [40])
	if ( ((int_32)$11 != (int_32)$6) ){ goto $label$11 }
	$5 = ($5 + $6)
	
.LABEL $label$10
	if ( ((uint_32)$3 <= (uint_32)$8) ){ goto $label$13 }
	if ( ((int_32)$10 == (int_32)$2) ){ goto $label$2 }
	$1 = ($0 + [4])
	$4 = *($1)
	
.LOOP $label$14:
	CALL $78($4, $9)
	$4 = (*($1) + [40])
	*($1) = $4
	$9 = ($9 + [40])
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$14 }
	goto $label$2 
	
.LABEL $label$13
	$7 = ($0 + [4])
	$1 = *($7)
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$15 }
	
.LOOP $label$16:
	$4 = *(($1 + [-12]))
	if ( ($4 == 0) ){ goto $label$17 }
	*(($1 + [-8])) = $4
	CALL $11($4)
	
.LABEL $label$17
	$4 = ($1 + [-40])
	$6 = *(($1 + [-24]))
	if ( ($6 == 0) ){ goto $label$18 }
	*(($1 + [-20])) = $6
	CALL $11($6)
	
.LABEL $label$18
	$1 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$16 }
	
.LABEL $label$15
	*($7) = $5
	return 
	
.LABEL $label$5
	$4 = $5
	
.LABEL $label$4
	*(($0 + [4])) = $5
	CALL $11($4)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)[107374183]) ){ goto $label$1 }
	$6 = [107374182]
	$4 = ((int_32)$4 / (int_32)[40])
	if ( ((uint_32)$4 > (uint_32)[53687090]) ){ goto $label$19 }
	$4 = ($4 << [1])
	$6 = ( $3 ? $4 : ($4 <= $3) )
	
.LABEL $label$19
	$6 = ((int_32)$6 * (int_32)[40])
	$4 = CALL $9($6)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $6)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$2 }
	$6 = ($0 + [4])
	
.LOOP $label$20:
	CALL $78($4, $1)
	$4 = (*($6) + [40])
	*($6) = $4
	$1 = ($1 + [40])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$20 }
	
.LABEL $label$2
	return (unreachable)
	
.LABEL $label$1
	CALL $34($0)
}

int_32 .FUNC $140 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	*($1 + [8]) = (int_64)0
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$3 = *($2 + [132])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$3 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-6497942746098040832, $1, *($2 + [64]))
	*(*(($0 + [4])) + [132]) = $3
	
.LABEL $label$3
	$4 = CALL db_idx64_previous($3, ($1 + [8]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11441])
	goto $label$1 
	
.LABEL $label$2
	$2 = *(*($0))
	$2 = CALL db_idx64_end(*($2), *($2 + [8]), (int_64)-6497942746098040832)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$4 }
	CALL eosio_assert([0], [11387])
	
.LABEL $label$4
	$4 = CALL db_idx64_previous($2, ($1 + [8]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11387])
	
.LABEL $label$1
	$5 = *($1 + [8])
	$3 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$8:
	$2 = ($3 + [-24])
	$8 = *($2)
	if ( ((int_64)*($8 + [64]) == (int_64)$5) ){ goto $label$7 }
	$3 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	if ( ((int_32)*($8 + [124]) == (int_32)$6) ){ goto $label$5 }
	CALL eosio_assert([0], [11092])
	goto $label$5 
	
.LABEL $label$6
	$8 = CALL $75($6, CALL $fimport$25(*($6), *($6 + [8]), (int_64)-6497942746098040832, $5))
	if ( ((int_32)*($8 + [124]) == (int_32)$6) ){ goto $label$5 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$5
	*($8 + [132]) = $4
	*(($0 + [4])) = $8
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11170])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11170])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11170])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11170])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $176(*($1), *($0 + [12]))
	$global$0 = ($2 + [16])
}

void .FUNC $142 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9865])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([152])) + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [88 align=4]) = (int_64)0
	*($3 + [96]) = [0]
	*($3 + [116 align=4]) = (int_64)0
	*($3 + [124]) = $1
	*($3 + [112]) = ($3 + [116])
	CALL $183(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3 + [64])
	*($4 + [16]) = $2
	$5 = *($3 + [128])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $184(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $69(($3 + [112]), *(($3 + [116])))
	$1 = *($3 + [88])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [92])) = $1
	CALL $11($1)
	
.LABEL $label$5
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11143])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([96])) + [48]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [76 align=4]) = (int_64)0
	*($5 + [84]) = $0
	*($5 + [72]) = ($5 + [76])
	CALL $134(($3 + [32]), $5)
	*($5 + [88]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $137(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $69(($1 + [72]), *(($1 + [76])))
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $73 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$6 = ($global$0 - [80])
	$global$0 = $6
	$7 = [0]
	if ( ((uint_64)((int_64)*($2) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$8 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$8 = $10
	$7 = [1]
	$11 = $9
	$9 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$8 = $10
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ((int_32)$9 < (int_32)[6])
	$11 = ($9 + [1])
	$9 = $11
	if ( $7 ){ goto $label$5 }
	$7 = [1]
	$9 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [9969])
	CALL eosio_assert(((int_32)CALL $fimport$34($3) ^ (int_32)[1]), [9988])
	$12 = ($1 + [152])
	$7 = *(($1 + [180]))
	$13 = *(($1 + [176]))
	if ( ((int_32)$13 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$12:
	$9 = ($7 + [-24])
	$11 = *($9)
	if ( ((int_64)*($11) == (int_64)$3) ){ goto $label$11 }
	$7 = $9
	if ( ((int_32)$13 != (int_32)$9) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$13 == (int_32)$7) ){ goto $label$10 }
	if ( ((int_32)*($11 + [124]) == (int_32)$12) ){ goto $label$9 }
	CALL eosio_assert([0], [11092])
	if ( ((int_64)*($11 + [104]) != (int_64)3) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$10
	$9 = CALL db_find_i64(*($12), *(($1 + [160])), (int_64)-4138661397305229312, $3)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$6 }
	$11 = CALL $113($12, $9)
	if ( ((int_32)*($11 + [124]) == (int_32)$12) ){ goto $label$9 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$9
	if ( ((int_64)*($11 + [104]) != (int_64)3) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [10046])
	
.LABEL $label$7
	CALL eosio_assert([0], [10068])
	
.LABEL $label$6
	CALL $74($0, $1, $3, [0])
	if ( (*($0 + [8]) == 0) ){ goto $label$24 }
	$8 = *(*($0 + [4]) + [16])
	CALL __floatunditf($6, ((int_64)((uint_64)$8 / (uint_64)*(*($4 + [4]) + [64])) + (int_64)$8))
	CALL $37(($6 + [16]), *($6), *(($6 + [8])))
	$8 = *($6 + [24])
	$3 = *($6 + [16])
	*((($6 + [64]) + [8])) = [0]
	*($6 + [64]) = (int_64)0
	$10 = CALL __fixunstfdi($3, $8)
	$9 = CALL $1([9298])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$23 }
	*($6 + [64]) = ($9 << [1])
	$7 = (($6 + [64]) | [1])
	if ( $9 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	*(($6 + [56])) = [0]
	*($6 + [48]) = (int_64)0
	$9 = CALL $1([9298])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$20 }
	*($6 + [48]) = ($9 << [1])
	$7 = (($6 + [48]) | [1])
	if ( $9 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$23
	$11 = (($9 + [16]) & [-16])
	$7 = CALL $9($11)
	*($6 + [64]) = ($11 | [1])
	*($6 + [72]) = $7
	*($6 + [68]) = $9
	
.LABEL $label$22
	CALL memcpy($7, [9298], $9)
	
.LABEL $label$21
	*(($7 + $9)) = [0]
	CALL $30(($6 + [64]), [10108])
	$9 = CALL $1([8858])
	if ( ($9 <= [8]) ){ goto $label$26 }
	CALL eosio_assert([0], [10603])
	goto $label$25 
	
.LABEL $label$26
	if ( ($9 == 0) ){ goto $label$17 }
	
.LABEL $label$25
	$8 = (int_64)0
	
.LOOP $label$27:
	$7 = *(($9 + [8857]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$28 }
	CALL eosio_assert([0], [10648])
	
.LABEL $label$28
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$27 }
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)4)
	goto $label$14 
	
.LABEL $label$20
	$11 = (($9 + [16]) & [-16])
	$7 = CALL $9($11)
	*($6 + [48]) = ($11 | [1])
	*($6 + [56]) = $7
	*($6 + [52]) = $9
	
.LABEL $label$19
	CALL memcpy($7, [9298], $9)
	
.LABEL $label$18
	*(($7 + $9)) = [0]
	CALL $30(($6 + [48]), [10108])
	$9 = *($4 + [4])
	CALL $76(($6 + [64]), ($9 + [48]))
	$7 = *($6 + [64])
	$11 = ($7 & [1])
	CALL $31(($6 + [48]), ( *($6 + [72]) ? (($6 + [64]) | [1]) : $11 ), ( *($6 + [68]) ? uint_32($7 >> [1]) : $11 ))
	if ( ((*($6 + [64]) & [1]) == 0) ){ goto $label$29 }
	CALL $11(*(($6 + [72])))
	
.LABEL $label$29
	CALL $30(($6 + [48]), [10140])
	CALL eosio_assert(((int_64)*($2) >= (int_64)*($9 + [48])), ( *($6 + [56]) ? (($6 + [48]) | [1]) : (*($6 + [48]) & [1]) ))
	if ( ((*($6 + [48]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($6 + [56])))
	goto $label$13 
	
.LABEL $label$17
	$8 = (int_64)4
	goto $label$14 
	
.LABEL $label$16
	CALL $24(($6 + [64]))
	
.LABEL $label$15
	CALL $24(($6 + [48]))
	
.LABEL $label$14
	*($6 + [48]) = (int_64)0
	*($6 + [56]) = $8
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$32:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$31 }
	$3 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$33 }
	$8 = $3
	$7 = $9
	$9 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$32 }
	goto $label$30 
	
.LABEL $label$33
	$8 = $3
	
.LOOP $label$34:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$31 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ((int_32)$9 < (int_32)[6])
	$11 = ($9 + [1])
	$9 = $11
	if ( $7 ){ goto $label$34 }
	$9 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$32 }
	goto $label$30 
	
.LABEL $label$31
	CALL eosio_assert([0], [10750])
	
.LABEL $label$30
	*($6 + [48]) = $10
	CALL $76(($6 + [32]), ($6 + [48]))
	$9 = *($6 + [32])
	$7 = ($9 & [1])
	CALL $31(($6 + [64]), ( *($6 + [40]) ? (($6 + [32]) | [1]) : $7 ), ( *($6 + [36]) ? uint_32($9 >> [1]) : $7 ))
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$35 }
	CALL $11(*(($6 + [40])))
	
.LABEL $label$35
	CALL $30(($6 + [64]), [10140])
	CALL eosio_assert(((uint_64)*($2) >= (uint_64)$10), ( *($6 + [72]) ? (($6 + [64]) | [1]) : (*($6 + [64]) & [1]) ))
	if ( ((*($6 + [64]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($6 + [72])))
	$global$0 = ($6 + [80])
	return 
	
.LABEL $label$13
	$global$0 = ($6 + [80])
	(unreachable)
	(unreachable)
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11143])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([24])) + [8]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11170])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = $7
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $133(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $3($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $11($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

int_64 .FUNC $71 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_64 $3
	$3 = ((int_64)$1 & (int_64)15)
	$2 = (int_64)(((int_64)$1 & (int_64)496) == 0)
	$0 = ( [9] ? $0 : $2 )
	$2 = (int_64)(((int_64)$1 & (int_64)15872) == 0)
	$0 = ( [14] ? $0 : $2 )
	$2 = (int_64)(((int_64)$1 & (int_64)507904) == 0)
	$0 = ( [19] ? $0 : $2 )
	$2 = (int_64)(((int_64)$1 & (int_64)16252928) == 0)
	$0 = ( [24] ? $0 : $2 )
	$2 = (int_64)(((int_64)$1 & (int_64)520093696) == 0)
	$0 = ( [29] ? $0 : $2 )
	$2 = (int_64)(((int_64)$1 & (int_64)16642998272) == 0)
	$0 = ( [34] ? $0 : $2 )
	$2 = (int_64)(((int_64)$1 & (int_64)532575944704) == 0)
	$0 = ( [39] ? $0 : $2 )
	$2 = (int_64)(((int_64)$1 & (int_64)17042430230528) == 0)
	$0 = ( [44] ? $0 : $2 )
	$2 = (int_64)(((int_64)$1 & (int_64)545357767376896) == 0)
	$0 = ( [49] ? $0 : $2 )
	$2 = (int_64)(((int_64)$1 & (int_64)17451448556060672) == 0)
	$0 = ( [54] ? $0 : $2 )
	$2 = (int_64)(((int_64)$1 & (int_64)558446353793941504) == 0)
	$1 = *($0)
	$0 = ( [59] ? [0] : (uint_64)($1 <= (int_64)576460752303423488) )
	$0 = ( ( ( ( ( ( ( ( ( ( ( ( [0] ? $0 : $2 ) ? $0 : $2 ) ? $0 : $2 ) ? $0 : $2 ) ? $0 : $2 ) ? $0 : $2 ) ? $0 : $2 ) ? $0 : $2 ) ? $0 : $2 ) ? $0 : $2 ) ? $0 : $2 ) ? ( [4] ? $0 : $2 ) : (int_64)($3 == 0) )
	if ( ($0 == 0) ){ goto $label$1 }
	$1 = ((int_64)((int_64)((int_64)((int_64)((int_64)1 << (int_64)(CASTING uint_64)(uint_32 $0)) + (int_64)-16) & (int_64)$1) << (int_64)(CASTING uint_64)(uint_32 ([64] - $0))) + (int_64)((int_64)$3 << (int_64)(CASTING uint_64)(uint_32 ([63] - $0))))
	
.LABEL $label$1
	return $1
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [8])
	$5 = (CASTING uint_32)(uint_64 $4)
	$6 = ((int_64)$4 & (int_64)255)
	$7 = (int_64)($6 == 0)
	if ( $7 ){ goto $label$2 }
	$8 = ((int_64)$6 + (int_64)1)
	$9 = (int_64)1
	
.LOOP $label$3:
	$9 = ((int_64)$9 * (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)1
	
.LABEL $label$1
	$5 = ($5 & [255])
	$10 = ($2 - (($5 + [16]) & [496]))
	$2 = $10
	$global$0 = $2
	*(($11 = ($10 + $5))) = [0]
	$12 = *($1)
	if ( $7 ){ goto $label$4 }
	$8 = ((int_64)( (int_64)-1 ? (int_64)1 : ((int_64)$12 < (int_64)0) ) * (int_64)((int_64)$12 % (int_64)$9))
	$6 = ((int_64)$6 + (int_64)1)
	$1 = ($11 + [-1])
	
.LOOP $label$5:
	$13 = ((int_64)$8 / (int_64)10)
	*($1) = ((CASTING uint_32)(uint_64 (int_64))($8 - ((int_64)$13 * (int_64)10))) + [48])
	$1 = ($1 + [-1])
	$8 = $13
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)$6 > (int_64)1) ){ goto $label$5 }
	
.LABEL $label$4
	$11 = ($2 - (($5 + [47]) & [496]))
	$global$0 = $11
	$14 = ( [10321] ? [9298] : *($10) )
	$9 = ((int_64)$12 / (int_64)$9)
	$15 = ($5 + [32])
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( (int_64)($8) == 0) ){ goto $label$9 }
	$5 = [0]
	
.LOOP $label$11:
	*((($3 + [41]) + ($1 = $5))) = $8
	$5 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$11 }
	
.LABEL $label$10
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [24]) = ($5 << [1])
	$2 = (($3 + [24]) | [1])
	goto $label$7 
	
.LABEL $label$9
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	*($3 + [24]) = [0]
	$1 = (($3 + [24]) | [1])
	$5 = $1
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$2 = CALL $9($7)
	*($3 + [24]) = ($7 | [1])
	*($3 + [32]) = $2
	*($3 + [28]) = $5
	
.LABEL $label$7
	$7 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$12:
	*(($2 + $1)) = *((($3 + [41]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$12 }
	$5 = ($2 + $5)
	$1 = (($3 + [24]) | [1])
	
.LABEL $label$6
	*($5) = [0]
	*(($3 + [16])) = ( *($3 + [32]) ? $1 : (*($3 + [24]) & [1]) )
	*($3 + [12]) = $10
	*($3 + [8]) = $14
	*($3) = $9
	CALL $23($11, $15, [10309], $3)
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($3 + [32])))
	
.LABEL $label$13
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL $1($11)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$17 }
	*($0) = ($1 << [1])
	$5 = ($0 + [1])
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$2 = (($1 + [16]) & [-16])
	$5 = CALL $9($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $1
	
.LABEL $label$16
	CALL memcpy($5, $11, $1)
	
.LABEL $label$15
	*(($5 + $1)) = [0]
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$14
	CALL $24($0)
}

int_32 .FUNC $77 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL $9([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $119($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $145(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $74 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [48]) = $2
	CALL prints([10155])
	CALL printn($2)
	CALL prints([8495])
	$2 = CALL $71(($4 + [48]))
	$5 = ($1 + [72])
	$7 = *(($1 + [100]))
	$6 = *(($1 + [96]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$2) ){ goto $label$3 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)*($9 + [84]) == (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [11092])
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($1 + [80])), (int_64)-4131301141914845184, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $72($5, $8)
	if ( ((int_32)*($9 + [84]) == (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$1
	$5 = [0]
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [8]) = *($1)
	*($4 + [16]) = *($9 + [16])
	*($4 + [44]) = [0]
	*($4) = ($4 + [8])
	CALL $108(($4 + [56]), $4, ($4 + [48]))
	$8 = *($4 + [60])
	if ( ($8 == 0) ){ goto $label$5 }
	$5 = ( $8 ? [0] : ((int_64)*($4 + [48]) == (int_64)*($8)) )
	
.LABEL $label$5
	$2 = *($5 + [64])
	$7 = *(($4 + [36]))
	$1 = *(($4 + [32]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$9:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6 + [64]) == (int_64)$2) ){ goto $label$8 }
	$7 = $8
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$7 }
	if ( ((int_32)*($6 + [124]) == (int_32)($4 + [8])) ){ goto $label$6 }
	CALL eosio_assert([0], [11092])
	goto $label$6 
	
.LABEL $label$7
	$6 = [0]
	$8 = CALL db_find_i64(*($4 + [8]), *(($4 + [16])), (int_64)-6497942746098040832, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$6 = CALL $75(($4 + [8]), $8)
	if ( ((int_32)*($6 + [124]) == (int_32)($4 + [8])) ){ goto $label$6 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$6
	$8 = *(($6 + [92]))
	$7 = *($6 + [88])
	CALL prints([10175])
	CALL printui((CASTING uint_64)(uint_32 int_32(($8 - $7) >> [5])))
	CALL prints([8495])
	if ( ($3 == 0) ){ goto $label$10 }
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [10191])
	
.LABEL $label$10
	*($0 + [4]) = $6
	*($0 + [8]) = ((int_32)$5 != (int_32)[0])
	*($0 + [16]) = *(($9 + [16]))
	*($0) = ($4 + [8])
	$9 = *($4 + [32])
	if ( ($9 == 0) ){ goto $label$11 }
	$1 = ($4 + [36])
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$13 }
	
.LOOP $label$14:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	CALL $69(($8 + [112]), *(($8 + [116])))
	$6 = *($8 + [88])
	if ( ($6 == 0) ){ goto $label$16 }
	*(($8 + [92])) = $6
	CALL $11($6)
	
.LABEL $label$16
	CALL $11($8)
	
.LABEL $label$15
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$14 }
	$8 = *(($4 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$8 = $9
	
.LABEL $label$12
	*($1) = $9
	CALL $11($8)
	
.LABEL $label$11
	$global$0 = ($4 + [64])
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11143])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([152])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [88 align=4]) = (int_64)0
	*($5 + [96]) = [0]
	*($5 + [116 align=4]) = (int_64)0
	*($5 + [124]) = $0
	*($5 + [112]) = ($5 + [116])
	CALL $168(($3 + [32]), $5)
	*($5 + [128]) = $1
	*($5 + [132 align=4]) = (int_64)-1
	*($5 + [140 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5 + [64])
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $184(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $69(($1 + [112]), *(($1 + [116])))
	$4 = *($1 + [88])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [92])) = $4
	CALL $11($4)
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0) = *($1)
	$2 = *(($1 + [8]))
	*(($0 + [20])) = (int_64)0
	*(($0 + [8])) = $2
	*($0 + [16]) = [0]
	$3 = (*(($1 + [20])) - *($1 + [16]))
	if ( ($3 == 0) ){ goto $label$3 }
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$2 }
	$3 = CALL $9($3)
	*(($0 + [16])) = $3
	*(($0 + [24])) = ($3 + ($4 << [4]))
	*(($4 = ($0 + [20]))) = $3
	$5 = *(($1 + [16]))
	$6 = (*(($1 + [20])) - $5)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $5, $6)
	*($4) = (*($4) + $6)
	
.LABEL $label$3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$3 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$4 = CALL $9($3)
	*(($0 + [28])) = $4
	*(($0 + [36])) = ($4 + $3)
	*(($3 = ($0 + [32]))) = $4
	$6 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $6)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($4, $6, $1)
	*($3) = (*($3) + $1)
	
.LABEL $label$4
	return $0
	
.LABEL $label$2
	CALL $34(($0 + [16]))
	
.LABEL $label$1
	CALL $34(($0 + [28]))
	(unreachable)
	return (unreachable)
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[40])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[107374183]) ){ goto $label$2 }
	$5 = [107374182]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL $9(((int_32)$5 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $34($0)
	
.LABEL $label$1
	$6 = ($2 + ((int_32)$5 * (int_32)[40]))
	$7 = ($2 + ((int_32)$3 * (int_32)[40]))
	$2 = CALL $78($7, $1)
	$8 = ($2 + [40])
	$5 = *($0)
	$9 = *(($0 + [4]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$6 }
	$10 = ($5 - $9)
	$1 = [0]
	
.LOOP $label$7:
	$2 = ($9 + $1)
	*((($5 = ($7 + $1)) + [-32])) = *(($2 + [-32]))
	*(($5 + [-40])) = *(($2 + [-40]))
	*(($3 = ($5 + [-24]))) = (int_64)0
	*(($4 = ($5 + [-16]))) = [0]
	$11 = ($2 + [-24])
	*($3) = *($11)
	$3 = ($2 + [-16])
	*($4) = *($3)
	*($3) = [0]
	*(($3 = ($5 + [-12]))) = (int_64)0
	*(($5 = ($5 + [-4]))) = [0]
	$4 = ($2 + [-12])
	*($3) = *($4)
	*($11) = (int_64)0
	$2 = ($2 + [-4])
	*($5) = *($2)
	*($2) = [0]
	*($4) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$7 }
	$2 = ($7 + $1)
	$5 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $5
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $8
	*(($0 + [8])) = $6
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = *(($5 + [-12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($5 + [-8])) = $2
	CALL $11($2)
	
.LABEL $label$10
	$2 = ($5 + [-40])
	$1 = *(($5 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($5 + [-20])) = $1
	CALL $11($1)
	
.LABEL $label$11
	$5 = $2
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $11($3)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $223 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_64 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	$3 = ($global$0 - [896])
	$global$0 = $3
	$4 = int_32(($1 - $0) >> [7])
	if ( ((uint_32)$4 > (uint_32)[5]) ){ goto $label$9 }
	goto $label$1 
	
.LABEL $label$9
	$5 = ($0 + [256])
	CALL $220($0, ($0 + [128]), $5, $2)
	$4 = ($0 + [384])
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$1 }
	$6 = (($3 + [768]) + [112])
	$7 = (($3 + [128]) + [112])
	$8 = ($3 + [112])
	$9 = (($3 + [768]) + [116])
	$10 = (($3 + [384]) + [112])
	$11 = (($3 + [256]) + [112])
	$12 = (($3 + [256]) + [88])
	$13 = (($3 + [768]) + [104])
	$14 = [0]
	$15 = [0]
	
.LOOP $label$10:
	$19 = *($2)
	$20 = $4
	$19 = CALL int_32 CALL $84(($3 + [384]), $20)((int_32 CALL $84(($3 + [256]), $5)), (int_32 $19))
	CALL $69($11, *((($3 + [256]) + [116])))
	$4 = *($12)
	if ( ($4 == 0) ){ goto $label$11 }
	*((($3 + [256]) + [92])) = $4
	CALL $11($4)
	
.LABEL $label$11
	CALL $69($10, *((($3 + [384]) + [116])))
	$4 = *((($3 + [384]) + [88]))
	if ( ($4 == 0) ){ goto $label$12 }
	*((($3 + [384]) + [92])) = $4
	CALL $11($4)
	
.LABEL $label$12
	if ( ($19 == 0) ){ goto $label$13 }
	CALL memcpy(($3 + [768]), $20, [88])
	*(($21 = (($3 + [768]) + [96]))) = [0]
	$22 = *($20 + [88 align=4])
	$4 = ($20 + [96])
	*($21) = *($4)
	*($4) = [0]
	*($20 + [88]) = [0]
	*(($20 + [92])) = [0]
	*(($18 = (($3 + [768]) + [88]))) = $22
	*($13) = *($20 + [104])
	*($6) = *($20 + [112])
	$4 = ($20 + [116])
	$23 = *($4)
	*($9) = $23
	$19 = *(($20 + [120]))
	*(($24 = (($3 + [768]) + [120]))) = $19
	if ( ($19 == 0) ){ goto $label$15 }
	*($23 + [8]) = $9
	*($20 + [112]) = $4
	*($4) = (int_64)0
	goto $label$14 
	
.LABEL $label$15
	*($6) = $9
	
.LABEL $label$14
	$19 = $14
	$25 = $20
	
.LOOP $label$18:
	$26 = ($4 + [256])
	$4 = ($0 + $19)
	CALL memcpy(($4 + [384]), $26, [88])
	$23 = ($4 + [472])
	$16 = *($23)
	if ( ($16 == 0) ){ goto $label$20 }
	*(($27 = ($4 + [476]))) = $16
	CALL $11($16)
	*($23) = [0]
	*($27) = (int_64)0
	$16 = ($25 + [96])
	$25 = ($25 + [92])
	goto $label$19 
	
.LABEL $label$20
	$16 = ($4 + [480])
	$25 = ($4 + [476])
	
.LABEL $label$19
	$28 = ($4 + [348])
	*($25) = *($28)
	$27 = ($4 + [344])
	*($23) = *($27)
	$29 = ($4 + [352])
	*($16) = *($29)
	*(($4 + [488])) = *(($4 + [360]))
	*($29) = [0]
	*($27) = (int_64)0
	$23 = ($4 + [500])
	$25 = ($4 + [496])
	CALL $69($25, *($23))
	$17 = ($4 + [368])
	*($25) = *($17)
	$16 = ($4 + [372])
	$30 = *($16)
	*($23) = $30
	$31 = ($4 + [376])
	$32 = *($31)
	*(($4 + [504])) = $32
	if ( ($32 == 0) ){ goto $label$22 }
	*($30 + [8]) = $23
	*($31) = [0]
	*($16) = [0]
	*($17) = $16
	if ( ((int_32)$19 != (int_32)[-256]) ){ goto $label$21 }
	goto $label$17 
	
.LABEL $label$22
	*($25) = $23
	if ( ((int_32)$19 == (int_32)[-256]) ){ goto $label$17 }
	
.LABEL $label$21
	$23 = *($2)
	$23 = CALL int_32 CALL $84(($3 + [128]), ($3 + [768]))((int_32 CALL $84($3, ($4 + [128]))), (int_32 $23))
	CALL $69($8, *(($3 + [116])))
	$4 = *(($3 + [88]))
	if ( ($4 == 0) ){ goto $label$23 }
	*(($3 + [92])) = $4
	CALL $11($4)
	
.LABEL $label$23
	CALL $69($7, *((($3 + [128]) + [116])))
	$4 = *((($3 + [128]) + [88]))
	if ( ($4 == 0) ){ goto $label$26 }
	*((($3 + [128]) + [92])) = $4
	CALL $11($4)
	if ( $23 ){ goto $label$25 }
	goto $label$16 
	
.LABEL $label$26
	if ( ($23 == 0) ){ goto $label$24 }
	
.LABEL $label$25
	$19 = ($19 + [-128])
	$25 = $5
	$5 = ($5 + [-128])
	goto $label$18 
	
.LABEL $label$24
	$26 = $5
	goto $label$16 
	
.LABEL $label$17
	$26 = $0
	
.LABEL $label$16
	$19 = CALL memcpy($26, ($3 + [768]), [88])
	$4 = *($27)
	if ( ($4 == 0) ){ goto $label$27 }
	*($28) = $4
	CALL $11($4)
	*($27) = [0]
	*($28) = (int_64)0
	
.LABEL $label$27
	*($27) = *($18)
	$5 = (($3 + [768]) + [92])
	*($28) = *($5)
	$4 = *($21)
	*($21) = [0]
	*($29) = $4
	*($18) = (int_64)0
	*(($19 + [104])) = *($13)
	CALL $69($17, *($16))
	*($17) = *($6)
	$19 = *($9)
	*($16) = $19
	$4 = *($24)
	*($31) = $4
	if ( $4 ){ goto $label$30 }
	*($17) = $16
	CALL $69($6, *($9))
	$15 = ($15 + [1])
	$4 = *($18)
	if ( $4 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	*($19 + [8]) = $16
	*($6) = $9
	*($9) = (int_64)0
	CALL $69($6, [0])
	$15 = ($15 + [1])
	$4 = *($18)
	if ( ($4 == 0) ){ goto $label$28 }
	
.LABEL $label$29
	*($5) = $4
	CALL $11($4)
	
.LABEL $label$28
	if ( ((int_32)$15 == (int_32)[8]) ){ goto $label$4 }
	
.LABEL $label$13
	$14 = ($14 + [128])
	$5 = $20
	$4 = ($20 + [128])
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$10 }
	$global$0 = ($3 + [896])
	return [1]
	
.LABEL $label$8
	$5 = *($2)
	$19 = CALL $84(($3 + [512]), $0)
	$16 = ($1 + [-128])
	$4 = CALL $84(($3 + [640]), $16)
	$23 = CALL int_32 $4((int_32 $19), (int_32 $5))
	CALL $69(($19 + [112]), *(($19 + [116])))
	$5 = *($19 + [88])
	if ( ($5 == 0) ){ goto $label$31 }
	*(($19 + [92])) = $5
	CALL $11($5)
	
.LABEL $label$31
	CALL $69(($4 + [112]), *(($4 + [116])))
	$19 = *($4 + [88])
	if ( ($19 == 0) ){ goto $label$32 }
	*(($4 + [92])) = $19
	CALL $11($19)
	
.LABEL $label$32
	if ( ($23 == 0) ){ goto $label$1 }
	CALL memcpy(($3 + [768]), $0, [88])
	$4 = ($0 + [96])
	$19 = *($4)
	*($4) = [0]
	*((($3 + [768]) + [96])) = $19
	$22 = *($0 + [88 align=4])
	*($0 + [88 align=4]) = (int_64)0
	$4 = ($0 + [116])
	$5 = *($4)
	*(($29 = (($3 + [768]) + [116]))) = $5
	$19 = *(($0 + [120]))
	*((($3 + [768]) + [120])) = $19
	*($3 + [856]) = $22
	*($3 + [872]) = *($0 + [104])
	*($3 + [880]) = *($0 + [112])
	$32 = ($0 + [112])
	if ( ($19 == 0) ){ goto $label$3 }
	*($5 + [8]) = $29
	*($0 + [112]) = $4
	*($4) = (int_64)0
	goto $label$2 
	
.LABEL $label$7
	CALL $220($0, ($0 + [128]), ($1 + [-128]), $2)
	$global$0 = ($3 + [896])
	return [1]
	
.LABEL $label$6
	CALL $222($0, ($0 + [128]), ($0 + [256]), ($1 + [-128]), $2)
	$global$0 = ($3 + [896])
	return [1]
	
.LABEL $label$5
	CALL $219($0, ($0 + [128]), ($0 + [256]), ($0 + [384]), ($1 + [-128]), $2)
	$global$0 = ($3 + [896])
	return [1]
	
.LABEL $label$4
	$global$0 = ($3 + [896])
	return ((int_32)($20 + [128]) == (int_32)$1)
	
.LABEL $label$3
	*((($3 + [768]) + [112])) = $29
	
.LABEL $label$2
	$23 = ($1 + [-40])
	*((($5 = CALL memcpy($0, $16, [88])) + [88])) = *($23)
	$27 = ($1 + [-32])
	*(($5 + [96])) = *($27)
	*($27) = [0]
	$17 = ($1 + [-24])
	*(($5 + [104])) = *($17)
	*($23) = (int_64)0
	CALL $69($32, *($4))
	$25 = ($1 + [-16])
	*(($5 + [112])) = *($25)
	$19 = ($1 + [-12])
	$30 = *($19)
	*($4) = $30
	$5 = ($1 + [-8])
	$31 = *($5)
	*(($5 + [120])) = $31
	if ( ($31 == 0) ){ goto $label$34 }
	*($30 + [8]) = $4
	*($19) = [0]
	*($5) = [0]
	*($25) = $19
	goto $label$33 
	
.LABEL $label$34
	*($32) = $4
	
.LABEL $label$33
	$4 = ($1 + [-36])
	CALL memcpy($16, ($3 + [768]), [88])
	$16 = *($23)
	if ( ($16 == 0) ){ goto $label$35 }
	*($4) = $16
	CALL $11($16)
	*($4) = [0]
	*($27) = [0]
	*($23) = [0]
	
.LABEL $label$35
	$16 = (($3 + [768]) + [88])
	*($23) = *($16)
	*($4) = *(($3 + [860]))
	$4 = ($3 + [864])
	$23 = *($4)
	*($4) = [0]
	*($27) = $23
	*($16) = (int_64)0
	*($17) = *(($3 + [872]))
	CALL $69($25, *($19))
	$16 = ($3 + [880])
	*($25) = *($16)
	$27 = ($3 + [884])
	$4 = *($27)
	*($19) = $4
	$23 = *(($3 + [888]))
	*($5) = $23
	if ( ($23 == 0) ){ goto $label$37 }
	*($4 + [8]) = $19
	*($16) = $29
	*($27) = (int_64)0
	$4 = [0]
	goto $label$36 
	
.LABEL $label$37
	*($25) = $19
	
.LABEL $label$36
	CALL $69(($3 + [880]), $4)
	$4 = *($3 + [856])
	if ( ($4 == 0) ){ goto $label$1 }
	*(($3 + [860])) = $4
	CALL $11($4)
	$global$0 = ($3 + [896])
	return [1]
	
.LABEL $label$1
	$global$0 = ($3 + [896])
	$4
	return [1]
}

void .FUNC $98 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	if ( (*($0 + [8]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = ($0 + [4])
	*($0) = $4
	$5 = *($0 + [4])
	*($0 + [4]) = [0]
	*(($6 = ($0 + [8]))) = [0]
	*($5 + [8]) = [0]
	$5 = *($3 + [4])
	$7 = ( $5 ? $3 : $5 )
	if ( ($7 == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$8 = $7
	$9 = $1
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$5 }
	$10 = ($8 + [16])
	CALL $27($10, ($9 + [16]))
	CALL $27(($8 + [28]), ($9 + [28]))
	$7 = *($8 + [8])
	if ( ($7 == 0) ){ goto $label$9 }
	$1 = *($7)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$8 }
	*($7 + [4]) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	
.LOOP $label$10:
	$7 = $1
	$1 = *($7)
	if ( $1 ){ goto $label$10 }
	$1 = *($7 + [4])
	if ( $1 ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$9
	$7 = [0]
	$1 = *($4)
	if ( $1 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$8
	*($7) = [0]
	
.LOOP $label$11:
	$1 = *($7 + [4])
	if ( ($1 == 0) ){ goto $label$7 }
	
.LOOP $label$12:
	$7 = $1
	$1 = *($7)
	if ( $1 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$7
	$1 = *($4)
	if ( ($1 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$11 = ($10 + [1])
	
.LOOP $label$14:
	$13 = ($5 & [1])
	$5 = *($10)
	$5 = ( *(($8 + [20])) ? uint_32($5 >> [1]) : $13 )
	$12 = ($3 & [1])
	$3 = *($1 + [16])
	$3 = ( *(($1 + [20])) ? uint_32($3 >> [1]) : $12 )
	$14 = ( $3 ? $5 : ($3 <= $5) )
	if ( ($14 == 0) ){ goto $label$18 }
	$12 = CALL $18(( *(($8 + [24])) ? $11 : $13 ), ( *(($1 + [24])) ? (($1 + [16]) + [1]) : $12 ), $14)
	if ( ($12 == 0) ){ goto $label$18 }
	if ( ((int_32)$12 <= (int_32)[-1]) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	if ( ((uint_32)$5 >= (uint_32)$3) ){ goto $label$16 }
	
.LABEL $label$17
	$3 = *($1)
	if ( $3 ){ goto $label$15 }
	$3 = $1
	goto $label$3 
	
.LABEL $label$16
	$3 = *($1 + [4])
	if ( ($3 == 0) ){ goto $label$13 }
	
.LABEL $label$15
	$1 = $3
	goto $label$14 
	
.LABEL $label$13
	$3 = ($1 + [4])
	goto $label$3 
	
.LABEL $label$5
	
.LOOP $label$20:
	$1 = *($8 + [8])
	if ( ($1 == 0) ){ goto $label$19 }
	$8 = $1
	goto $label$20 
	
.LABEL $label$19
	CALL $69($0, $8)
	return 
	
.LABEL $label$4
	$1 = $4
	$3 = $4
	
.LABEL $label$3
	*($8) = (int_64)0
	*(($8 + [8])) = $1
	*($3) = $8
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$21 }
	*($0) = $1
	$8 = *($3)
	
.LABEL $label$21
	CALL $179(*($4), $8)
	*($6) = (*($6) + [1])
	$3 = *($9 + [4])
	if ( ($3 == 0) ){ goto $label$23 }
	
.LOOP $label$24:
	$1 = $3
	$3 = *($1)
	if ( $3 ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	$1 = *($9 + [8])
	if ( ((int_32)*($1) == (int_32)$9) ){ goto $label$22 }
	$5 = ($9 + [8])
	
.LOOP $label$25:
	$3 = *($5)
	$5 = ($3 + [8])
	$1 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($1)) ){ goto $label$25 }
	
.LABEL $label$22
	if ( $7 ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$26 }
	
.LOOP $label$27:
	$5 = $1
	CALL $213($0, ($5 + [16]))
	$3 = *($5 + [4])
	if ( ($3 == 0) ){ goto $label$29 }
	
.LOOP $label$30:
	$1 = $3
	$3 = *($1)
	if ( $3 ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$29
	$1 = *($5 + [8])
	if ( ((int_32)*($1) == (int_32)$5) ){ goto $label$28 }
	$5 = ($5 + [8])
	
.LOOP $label$31:
	$3 = *($5)
	$5 = ($3 + [8])
	$1 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($1)) ){ goto $label$31 }
	
.LABEL $label$28
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$27 }
	
.LABEL $label$26
}

int_32 .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0) = *($1)
	CALL $25(($0 + [8]), ($1 + [8]))
	*($0 + [20 align=4]) = (int_64)0
	*(($0 + [28])) = [0]
	$2 = (*(($1 + [24])) - *($1 + [20]))
	if ( ($2 == 0) ){ goto $label$2 }
	$3 = int_32($2 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$2 = CALL $9($2)
	*(($0 + [20])) = $2
	*(($0 + [28])) = ($2 + ($3 << [3]))
	*(($3 = ($0 + [24]))) = $2
	$4 = *(($1 + [20]))
	$5 = (*(($1 + [24])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + $5)
	
.LABEL $label$2
	*(($5 = ($0 + [44]))) = (int_64)0
	*($0 + [40]) = $5
	*($0 + [32]) = *($1 + [32])
	$4 = ($1 + [44])
	$2 = *($1 + [40])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$3 }
	$6 = ($0 + [40])
	
.LOOP $label$4:
	$3 = $2
	$1 = ($3 + [16])
	CALL $95($6, $5, $1, $1)
	$1 = *($3 + [4])
	if ( ($1 == 0) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = $1
	$1 = *($2)
	if ( $1 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$2 = *($3 + [8])
	if ( ((int_32)*($2) == (int_32)$3) ){ goto $label$5 }
	$3 = ($3 + [8])
	
.LOOP $label$8:
	$1 = *($3)
	$3 = ($1 + [8])
	$2 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($2)) ){ goto $label$8 }
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$4 }
	
.LABEL $label$3
	return $0
	
.LABEL $label$1
	CALL $34(($0 + [20]))
	return (unreachable)
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [3])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$6 = int_32($7 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $9(($6 << [3]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $34($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [3])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [3]))
	$5 = ($4 + [8])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $11($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $95 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	$2 = CALL $178($0, $1, ($4 + [12]), ($4 + [8]), $2)
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$1 }
	$global$0 = ($4 + [16])
	return $1
	
.LABEL $label$1
	$1 = CALL $9([40])
	CALL $25(($1 + [16]), $3)
	CALL $25(($1 + [28]), ($3 + [12]))
	*($1) = (int_64)0
	*($1 + [8]) = *($4 + [12])
	*($2) = $1
	$3 = $1
	$5 = *(*($0))
	if ( ($5 == 0) ){ goto $label$2 }
	*($0) = $5
	$3 = *($2)
	
.LABEL $label$2
	CALL $179(*($0 + [4]), $3)
	*($0 + [8]) = (*($0 + [8]) + [1])
	$global$0 = ($4 + [16])
	return $1
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [72])
	$4 = *($1)
	$6 = *(($0 + [100]))
	$5 = *(($0 + [96]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	if ( ((int_32)*($8 + [84]) == (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$6
	if ( $8 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($3), *(($0 + [80])), (int_64)-4131301141914845184, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $72($3, $7)
	if ( ((int_32)*($8 + [84]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$2
	CALL prints([10861])
	CALL printn(*($8))
	CALL prints([8495])
	$4 = *($0)
	*($2) = $1
	CALL $155($3, $8, $4, $2)
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$1
	CALL prints([10881])
	$4 = *($0)
	*($2 + [8]) = $1
	CALL $156($2, $3, $4, ($2 + [8]))
	$global$0 = ($2 + [16])
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [3])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [3])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL $11($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$6 = [536870911]
	if ( ((uint_32)int_32($5 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = $4
	$2 = int_32($5 >> [2])
	if ( ($2 <= $4) ){ goto $label$6 }
	$6 = $2
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($6 << [3])
	$6 = CALL $9($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$5 = int_32($3 >> [3])
	$3 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$5) )
	$3 = ($7 - $1)
	if ( ($3 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $3)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($3 >> [3]) << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $34($0)
}

void .FUNC $90 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_64 $24
	int_64 $25
	int_64 $26
	int_32 $27
	$7 = ($global$0 - [304])
	$global$0 = $7
	*($7 + [288]) = (int_64)0
	*($7 + [296]) = [0]
	$8 = [0]
	$9 = [0]
	$2 = *($2 + [4])
	$10 = (*(($2 + [24])) - *($2 + [20]))
	if ( ($10 == 0) ){ goto $label$2 }
	$9 = int_32($10 >> [3])
	if ( ((uint_32)$9 >= (uint_32)[536870912]) ){ goto $label$1 }
	$8 = CALL $9($10)
	*(($7 + [296])) = ($8 + ($9 << [3]))
	*($7 + [288]) = $8
	*($7 + [292]) = $8
	$9 = *(($2 + [20]))
	$10 = (*(($2 + [24])) - $9)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $9, $10)
	$9 = ($8 + $10)
	*($7 + [292]) = $9
	goto $label$2 
	
.LABEL $label$3
	$9 = $8
	
.LABEL $label$2
	*((($7 + [248]) + [32])) = [0]
	*($7 + [264]) = (int_64)-1
	*($7 + [272]) = (int_64)0
	$11 = *($2)
	*($7 + [248]) = *($0)
	*($7 + [256]) = $11
	*($7 + [284]) = [0]
	*($7 + [240]) = ($7 + [248])
	*($7 + [232]) = ($7 + [248])
	*($7 + [96]) = (int_64)0
	CALL $124(($7 + [224]), ($7 + [240]), ($7 + [96]))
	$2 = *($5)
	$10 = *($5 + [4])
	CALL prints([10361])
	CALL printui((CASTING uint_64)(uint_32 int_32(($10 - $2) >> [7])))
	CALL prints([8495])
	$10 = *($5)
	$2 = (*($5 + [4]) - $10)
	if ( ($2 == 0) ){ goto $label$4 }
	$12 = (CASTING uint_64)(uint_32 int_32(($9 - $8) >> [3]))
	$13 = ((int_32)$3 ^ (int_32)[1])
	$9 = int_32($2 >> [7])
	$14 = (($7 + [16]) + [8])
	$15 = ($7 + [208])
	$16 = (($7 + [96]) + [32])
	$17 = ($7 + [176])
	$18 = ($7 + [160])
	$19 = ($7 + [212])
	$20 = ($7 + [184])
	$21 = ($7 + [188])
	$8 = [0]
	$11 = (int_64)0
	
.LOOP $label$5:
	$2 = (CASTING uint_32)(uint_64 $11)
	if ( ((uint_32)$9 <= (uint_32)$2) ){ goto $label$9 }
	$9 = ($2 << [7])
	$22 = CALL $84(($7 + [96]), ($10 + $9))
	$10 = *($4)
	CALL prints([10367])
	CALL printn(*(($10 + $9)))
	CALL prints([10380])
	CALL printn(*($7 + [96]))
	CALL prints([10395])
	CALL printn(*($1))
	CALL prints([8495])
	if ( ((($8 | ((int_64)*($7 + [96]) != (int_64)*($1))) & [1]) == 0) ){ goto $label$11 }
	$23 = ($8 & [1])
	$8 = [0]
	$10 = [0]
	if ( ($23 == 0) ){ goto $label$6 }
	if ( (((uint_64)($11 <= $12) | $13) == 0) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	CALL prints([10415])
	if ( ((uint_64)($11 <= $12) | $13) ){ goto $label$8 }
	
.LABEL $label$10
	CALL prints([10456])
	CALL printn(*($7 + [96]))
	CALL prints([10464])
	if ( (int_64)(*($17) == 0) ){ goto $label$12 }
	CALL prints([10456])
	CALL printn(*($7 + [96]))
	CALL prints([10481])
	*($7 + [88]) = (int_64)0
	*($7 + [80]) = *($17)
	CALL cancel_deferred(($7 + [80]))
	
.LABEL $label$12
	*($17) = (int_64)0
	$25 = *($16)
	if ( (int_64)($25 == 0) ){ goto $label$15 }
	if ( ((int_64)*($1) != (int_64)*($7 + [96])) ){ goto $label$13 }
	$25 = ((int_64)$25 + (int_64)1)
	goto $label$14 
	
.LABEL $label$15
	$25 = (int_64)1
	
.LABEL $label$14
	*($16) = $25
	
.LABEL $label$13
	*($18) = ((int_64)((int_64)$11 + (int_64)CALL current_time()) + (int_64)6)
	CALL $91($0, $22, (int_64)0, [0])
	$10 = [4]
	goto $label$7 
	
.LABEL $label$9
	CALL $35($5)
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$20 }
	$24 = *($1)
	$26 = *($7 + [96])
	$25 = *((*($4) + $9))
	if ( ((int_64)$25 != (int_64)$26) ){ goto $label$19 }
	if ( ((int_64)$25 == (int_64)$24) ){ goto $label$18 }
	CALL prints([10554])
	$10 = [2]
	goto $label$7 
	
.LABEL $label$20
	if ( ((int_64)*($7 + [96]) != (int_64)*($1)) ){ goto $label$17 }
	CALL prints([10491])
	CALL printn(*($7 + [96]))
	CALL prints([10523])
	CALL $108(($7 + [80]), ($7 + [232]), ($7 + [96]))
	$8 = *($7 + [84])
	if ( ($8 == 0) ){ goto $label$21 }
	if ( ((int_64)*($7 + [96]) != (int_64)*($8)) ){ goto $label$21 }
	*($7 + [80]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)*($7 + [80]))
	CALL $109(($7 + [80]))
	CALL $110(*($7 + [232]), $8)
	
.LABEL $label$21
	CALL prints([10537])
	$10 = [4]
	goto $label$7 
	
.LABEL $label$19
	$25 = $24
	
.LABEL $label$18
	if ( ((int_64)$26 != (int_64)$25) ){ goto $label$22 }
	*($16) = ((int_64)*($16) + (int_64)1)
	
.LABEL $label$22
	$25 = $11
	goto $label$16 
	
.LABEL $label$17
	$25 = ((int_64)$11 + (int_64)-1)
	$2 = (CASTING uint_32)(uint_64 $25)
	
.LABEL $label$16
	$8 = *($7 + [288])
	CALL prints([10568])
	CALL printui($25)
	CALL prints([10575])
	$2 = ($2 << [3])
	CALL printui(*(($8 + $2)))
	CALL prints([10592])
	CALL printn(*($7 + [96]))
	CALL prints([8495])
	$24 = CALL current_time()
	*($17) = *($7 + [96])
	*($18) = ((int_64)((int_64)$11 + (int_64)$24) + (int_64)1)
	*(($10 = (($7 + [64]) + [8]))) = [0]
	*($7 + [64]) = (int_64)0
	$24 = *($0)
	*($7 + [48]) = [8404]
	*($7 + [52]) = CALL $1([8404])
	*($7 + [8]) = *($7 + [48])
	CALL $40(($7 + [56]), ($7 + [8]))
	*(($9 = (($7 + [80]) + [8]))) = *($7 + [56])
	*($7 + [80]) = $24
	*($7 + [32]) = [8411]
	*($7 + [36]) = CALL $1([8411])
	*($7) = *($7 + [32])
	$23 = CALL $40(($7 + [40]), $7)
	*($14) = $25
	*($7 + [16]) = *($7 + [96])
	$8 = *($7 + [68])
	if ( ((uint_32)$8 >= (uint_32)*($10)) ){ goto $label$24 }
	$25 = *($0)
	*($8 + [8]) = *($7 + [40])
	*($8) = $25
	*($8 + [16 align=4]) = (int_64)0
	*(($23 = ($8 + [24]))) = [0]
	$10 = CALL $9([16])
	*($8 + [16]) = $10
	$27 = ($10 + [16])
	*($23) = $27
	*(($10 + [8])) = *($9)
	*($10) = *($7 + [80])
	*(($8 + [20])) = $27
	*($8 + [28 align=4]) = (int_64)0
	*(($8 + [36])) = [0]
	CALL $119(($8 + [28]), [16])
	$8 = *($8 + [28])
	$10 = (*(($8 + [32])) - $8)
	if ( ((int_32)$10 > (int_32)[7]) ){ goto $label$25 }
	CALL eosio_assert([0], [9916])
	
.LABEL $label$25
	CALL memcpy($8, ($7 + [16]), [8])
	$8 = ($8 + [8])
	if ( ((int_32)($10 + [-8]) > (int_32)[7]) ){ goto $label$26 }
	CALL eosio_assert([0], [9916])
	
.LABEL $label$26
	CALL memcpy($8, $14, [8])
	*($7 + [68]) = (*($7 + [68]) + [40])
	goto $label$23 
	
.LABEL $label$24
	CALL $130(($7 + [64]), ($7 + [80]), $0, $23, ($7 + [16]))
	
.LABEL $label$23
	CALL $80($0, ($7 + [64]), *((*($7 + [288]) + $2)), *($17))
	CALL $91($0, $22, (int_64)0, [0])
	$9 = *($7 + [64])
	if ( ($9 == 0) ){ goto $label$27 }
	$8 = *($7 + [68])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$29 }
	
.LOOP $label$30:
	$2 = *(($8 + [-12]))
	if ( ($2 == 0) ){ goto $label$31 }
	*(($8 + [-8])) = $2
	CALL $11($2)
	
.LABEL $label$31
	$2 = ($8 + [-40])
	$10 = *(($8 + [-24]))
	if ( ($10 == 0) ){ goto $label$32 }
	*(($8 + [-20])) = $10
	CALL $11($10)
	
.LABEL $label$32
	$8 = $2
	if ( ((int_32)$9 != (int_32)$2) ){ goto $label$30 }
	$8 = *($7 + [64])
	goto $label$28 
	
.LABEL $label$29
	$8 = $9
	
.LABEL $label$28
	*($7 + [68]) = $9
	CALL $11($8)
	
.LABEL $label$27
	$10 = [0]
	
.LABEL $label$7
	$8 = [1]
	
.LABEL $label$6
	CALL $69($15, *($19))
	$2 = *($20)
	if ( ($2 == 0) ){ goto $label$33 }
	*($21) = $2
	CALL $11($2)
	
.LABEL $label$33
	if ( ((int_32)(($10 | [4]) & [7]) != (int_32)[4]) ){ goto $label$4 }
	$10 = *($5)
	$9 = int_32((*(($5 + [4])) - $10) >> [7])
	$11 = ((int_64)$11 + (int_64)1)
	if ( (uint_64)($11 <= (CASTING uint_64)(uint_32 $9)) ){ goto $label$5 }
	
.LABEL $label$4
	$9 = *($7 + [272])
	if ( ($9 == 0) ){ goto $label$34 }
	$1 = ($7 + [276])
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$9) ){ goto $label$36 }
	
.LOOP $label$37:
	$2 = ($2 + [-24])
	$8 = *($2)
	*($2) = [0]
	if ( ($8 == 0) ){ goto $label$38 }
	CALL $69(($8 + [112]), *(($8 + [116])))
	$10 = *($8 + [88])
	if ( ($10 == 0) ){ goto $label$39 }
	*(($8 + [92])) = $10
	CALL $11($10)
	
.LABEL $label$39
	CALL $11($8)
	
.LABEL $label$38
	if ( ((int_32)$9 != (int_32)$2) ){ goto $label$37 }
	$8 = *(($7 + [272]))
	goto $label$35 
	
.LABEL $label$36
	$8 = $9
	
.LABEL $label$35
	*($1) = $9
	CALL $11($8)
	
.LABEL $label$34
	$8 = *($7 + [288])
	if ( ($8 == 0) ){ goto $label$40 }
	*($7 + [292]) = $8
	CALL $11($8)
	
.LABEL $label$40
	$global$0 = ($7 + [304])
	return (unreachable)
	
.LABEL $label$1
	CALL $34(($7 + [288]))
	(unreachable)
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	*(($4 + [48])) = (int_64)0
	*($4 + [32]) = (int_64)-1
	*($4 + [40]) = (int_64)0
	*($4 + [16]) = *($0)
	*($4 + [24]) = *($1 + [48])
	*($4 + [8]) = ($4 + [16])
	CALL $108(($4 + [56]), ($4 + [8]), $1)
	$5 = *($4 + [60])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ((int_64)*($1) != (int_64)*($5)) ){ goto $label$1 }
	*($4 + [56]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)32) | (int_64)*($4 + [56]))
	CALL $109(($4 + [56]))
	CALL $110(*($4 + [8]), $5)
	
.LABEL $label$1
	$6 = *($0)
	*($4) = $1
	CALL $142(($4 + [56]), ($4 + [16]), $6, $4)
	CALL prints([9851])
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = ($4 + [44])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $69(($1 + [112]), *(($1 + [116])))
	$5 = *($1 + [88])
	if ( ($5 == 0) ){ goto $label$7 }
	*(($1 + [92])) = $5
	CALL $11($5)
	
.LABEL $label$7
	CALL $11($1)
	
.LABEL $label$6
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$5 }
	$1 = *(($4 + [40]))
	goto $label$3 
	
.LABEL $label$4
	$1 = $7
	
.LABEL $label$3
	*($8) = $7
	CALL $11($1)
	
.LABEL $label$2
	$global$0 = ($4 + [64])
}

void .FUNC $92 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9865])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([136])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [88 align=4]) = (int_64)0
	*($3 + [96]) = [0]
	*($3 + [116 align=4]) = (int_64)0
	*($3 + [124]) = $1
	*($3 + [112]) = ($3 + [116])
	CALL $191(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [128])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $192(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $69(($3 + [112]), *(($3 + [116])))
	$1 = *($3 + [88])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [92])) = $1
	CALL $11($1)
	
.LABEL $label$5
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $93 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [32]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $152($0, $4)
	if ( ((int_32)*($4 + [32]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$2
	*($3) = $1
	CALL $153($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $154($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

int_32 .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	CALL $170($0, ($1 + [40]))
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11170])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [32])
	$2 = *($0 + [4])
	$0 = CALL $177(CALL $176($0, ($1 + [8])), ($1 + [20]))
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11170])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $2, [8])
	return *(($2 = ($0 + [4]))) = (*($2) + [8])
}

void .FUNC $139 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [112])
	$global$0 = $2
	$1 = CALL $99($2, $1)
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$4 = (*($0) + int_32($3 >> [1]))
	$5 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$5 = *((*($4) + $5))
	
.LABEL $label$1
	$0 = CALL $99(($2 + [56]), $1)
	CALL void $4((int_32 $0), (int_32 $5))
	CALL $69(($0 + [40]), *(($0 + [44])))
	$5 = *($0 + [20])
	if ( ($5 == 0) ){ goto $label$2 }
	*(($0 + [24])) = $5
	CALL $11($5)
	
.LABEL $label$2
	if ( ((*($0 + [8]) & [1]) == 0) ){ goto $label$3 }
	CALL $11(*(($0 + [16])))
	
.LABEL $label$3
	CALL $69(($1 + [40]), *(($1 + [44])))
	$0 = *($1 + [20])
	if ( ($0 == 0) ){ goto $label$4 }
	*(($1 + [24])) = $0
	CALL $11($0)
	
.LABEL $label$4
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($1 + [16])))
	
.LABEL $label$5
	$global$0 = ($2 + [112])
}

void .FUNC $130 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $9(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $34($0)
	
.LABEL $label$1
	*(($6 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16 align=4]) = (int_64)0
	*(($3 = ($6 + [24]))) = [0]
	$2 = CALL $9([16])
	*($6 + [16]) = $2
	*($6 + [28 align=4]) = (int_64)0
	*(($6 + [36])) = [0]
	$7 = ($2 + [16])
	*($3) = $7
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($6 + [20])) = $7
	CALL $119(($6 + [28]), [16])
	$2 = *($6 + [28])
	$1 = (*(($6 + [32])) - $2)
	if ( ((int_32)$1 > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9916])
	
.LABEL $label$5
	$8 = ((int_32)$8 * (int_32)[40])
	CALL memcpy($2, $4, [8])
	$4 = ($4 + [8])
	$2 = ($2 + [8])
	if ( ((int_32)($1 + [-8]) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9916])
	
.LABEL $label$6
	$9 = ($5 + $8)
	CALL memcpy($2, $4, [8])
	$10 = ($6 + [40])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	$11 = ($2 - $7)
	$1 = [0]
	
.LOOP $label$9:
	$8 = ($7 + $1)
	*((($2 = ($6 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($4 = ($2 + [-24]))) = (int_64)0
	*(($5 = ($2 + [-16]))) = [0]
	$3 = ($8 + [-24])
	*($4) = *($3)
	$4 = ($8 + [-16])
	*($5) = *($4)
	*($4) = [0]
	*(($4 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$5 = ($8 + [-12])
	*($4) = *($5)
	*($3) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($5) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$9 }
	$6 = ($6 + $1)
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$7 
	
.LABEL $label$8
	$4 = $2
	
.LABEL $label$7
	*($0) = $6
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$12 }
	*(($2 + [-8])) = $8
	CALL $11($8)
	
.LABEL $label$12
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$13 }
	*(($2 + [-20])) = $1
	CALL $11($1)
	
.LABEL $label$13
	$2 = $8
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($4 == 0) ){ goto $label$14 }
	CALL $11($4)
	
.LABEL $label$14
	(unreachable)
}

void .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11170])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11170])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [11170])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [15]), $4, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	*(($5 + [16])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11239])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [11284])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [11334])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $133 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $34($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11170])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($0 + [8])
	if ( ((int_32)*($5) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy(($2 + [7]), $4, [1])
	$4 = (*($3) + [1])
	*($3) = $4
	*(($1 + [8])) = ((int_32)*($2 + [7]) != (int_32)[0])
	$3 = ($1 + [16])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [56])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [64])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $4, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$0 = CALL $170($0, ($1 + [72]))
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $135 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [84]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10936])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10982])
	
.LABEL $label$2
	$6 = *($3)
	*($1 + [32]) = *($6 + [32])
	*($1 + [8]) = *($6 + [8])
	*($1 + [16]) = *($6 + [16])
	*($1 + [24]) = *($6 + [24])
	*($1 + [40]) = *($6 + [40])
	*(($1 + [56])) = *(($6 + [56]))
	*($1 + [48]) = *($6 + [48])
	$6 = *($3)
	*($1 + [64]) = *($6 + [64])
	$7 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$3 }
	CALL $98(($1 + [72]), *($6 + [72]), ($6 + [76]))
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [11033])
	
.LABEL $label$3
	*($5) = [65]
	CALL $185($5, ($1 + [72]))
	$3 = *($5)
	if ( ($3 <= [513]) ){ goto $label$5 }
	$6 = CALL $2($3)
	goto $label$4 
	
.LABEL $label$5
	$6 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$4
	*($5 + [4]) = $6
	*($5) = $6
	*($5 + [8]) = ($6 + $3)
	CALL $203($5, $1)
	CALL db_update_i64(*($1 + [88]), $2, $6, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $3($6)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [16])
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($4)
	*($1) = *($5)
	*($1 + [8]) = *($5 + [8])
	*($1 + [32]) = *($5 + [32])
	*($1 + [16]) = *($5 + [16])
	*($1 + [24]) = *($5 + [24])
	*($1 + [40]) = *($5 + [40])
	$6 = *($0)
	*(($1 + [56])) = *(($5 + [56]))
	*($1 + [48]) = *($5 + [48])
	$5 = *($4)
	*($1 + [64]) = *($5 + [64])
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$1 }
	CALL $98(($1 + [72]), *($5 + [72]), ($5 + [76]))
	
.LABEL $label$1
	*($3) = [65]
	CALL $185($3, ($1 + [72]))
	$4 = *($3)
	if ( ($4 <= [513]) ){ goto $label$3 }
	$5 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$2
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $4)
	CALL $203($3, $1)
	$7 = *($1)
	*($1 + [88]) = CALL db_store_i64(*($6 + [8]), (int_64)-4131301141914845184, *(*($0 + [8])), $7, $5, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$7 >= (uint_64)*($6 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $3($5)
	if ( (uint_64)($7 <= *($6 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [16])
}

void .FUNC $137 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $34($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $69(($1 + [72]), *(($1 + [76])))
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $213 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = CALL $9([40])
	$3 = ($2 + [16])
	CALL $25($3, $1)
	CALL $25(($2 + [28]), ($1 + [12]))
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($2 + [17])
	
.LOOP $label$5:
	$8 = ($7 & [1])
	$7 = *($3)
	$7 = ( *(($2 + [20])) ? uint_32($7 >> [1]) : $8 )
	$6 = ($5 & [1])
	$5 = *($1 + [16])
	$5 = ( *(($1 + [20])) ? uint_32($5 >> [1]) : $6 )
	$9 = ( $5 ? $7 : ($5 <= $7) )
	if ( ($9 == 0) ){ goto $label$9 }
	$6 = CALL $18(( *(($2 + [24])) ? $4 : $8 ), ( *(($1 + [24])) ? (($1 + [16]) + [1]) : $6 ), $9)
	if ( ($6 == 0) ){ goto $label$9 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)$7 >= (uint_32)$5) ){ goto $label$7 }
	
.LABEL $label$8
	$5 = *($1)
	if ( $5 ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$7
	$5 = *($1 + [4])
	if ( ($5 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$1 = $5
	goto $label$5 
	
.LABEL $label$4
	$5 = ($1 + [4])
	goto $label$1 
	
.LABEL $label$3
	$1 = ($0 + [4])
	
.LABEL $label$2
	$5 = $1
	
.LABEL $label$1
	*($2 + [8]) = $1
	*($2) = (int_64)0
	*($5) = $2
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$11 }
	*($0) = $1
	$1 = *($5)
	goto $label$10 
	
.LABEL $label$11
	$1 = $2
	
.LABEL $label$10
	CALL $179(*($0 + [4]), $1)
	*($0 + [8]) = (*($0 + [8]) + [1])
	return $2
}

int_32 .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)*($0 + [8]) != (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [11170])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy(($2 + [15]), $3, [1])
	$4 = (*($3) + [1])
	*(($3 = ($0 + [4]))) = $4
	*($1) = ((int_32)*($2 + [15]) != (int_32)[0])
	$5 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	*($3) = (*($3) + [8])
	$0 = CALL $170($0, ($1 + [16]))
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $209 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $34($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $69(($1 + [16]), *(($1 + [20])))
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $202 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($4)
	*($1 + [8]) = *($5 + [8])
	$6 = *($0)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$2 }
	CALL $98(($1 + [72]), *($5 + [72]), ($5 + [76]))
	$5 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$5 = $1
	
.LABEL $label$1
	*($1) = *($5)
	*($1 + [16]) = *($5 + [16])
	*($1 + [24]) = *($5 + [24])
	*($1 + [32]) = *($5 + [32])
	*($1 + [40]) = *($5 + [40])
	*(($1 + [56])) = *(($5 + [56]))
	*($1 + [48]) = *($5 + [48])
	*($1 + [64]) = *(*($4) + [64])
	*($3) = [65]
	CALL $185($3, ($1 + [72]))
	$4 = *($3)
	if ( ($4 <= [513]) ){ goto $label$4 }
	$5 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$3
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $4)
	CALL $203($3, $1)
	$7 = *($1)
	*($1 + [88]) = CALL db_store_i64(*($6 + [8]), (int_64)-4131301141914845184, *(*($0 + [8])), $7, $5, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$7 >= (uint_64)*($6 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $3($5)
	if ( (uint_64)($7 <= *($6 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

int_32 .FUNC $203 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [7]) = *($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [7]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [56]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [64])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $3, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$0 = CALL $189($0, ($1 + [72]))
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $200 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $34($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $69(($1 + [112]), *(($1 + [116])))
	$2 = *($1 + [88])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [92])) = $2
	CALL $11($2)
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $11($4)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2) = *(($1 + [24]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [14]) = *($1 + [40])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [64])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [72])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [80])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, $3, [8])
	$3 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $3
	$7 = (CASTING uint_64)(uint_32 int_32((*(($1 + [92])) - *($1 + [88])) >> [5]))
	
.LOOP $label$12:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert([0], [9916])
	$3 = *($4)
	
.LABEL $label$13
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$12 }
	$5 = *(($1 + [92]))
	$4 = *(($1 + [88]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$14 }
	
.LOOP $label$15:
	CALL $188($0, $4)
	$4 = ($4 + [32])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [4]))
	
.LABEL $label$14
	$4 = ($1 + [104])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [9916])
	$3 = *(($0 + [4]))
	
.LABEL $label$16
	CALL memcpy($3, $4, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$3 = CALL $189($0, ($1 + [112]))
	$global$0 = ($2 + [16])
	return $3
}

int_32 .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	CALL $189($0, ($1 + [40]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [32])
	$2 = *($0 + [4])
	$0 = CALL $207(CALL $190($0, ($1 + [8])), ($1 + [20]))
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $3, [8])
	return *(($2 = ($0 + [4]))) = (*($2) + [8])
}

int_32 .FUNC $207 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9916])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [8])
	$4 = (*($7) + [8])
	*($7) = $4
	$6 = ($6 + [8])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $204 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($4)
	*($1) = *($5)
	$6 = *($0)
	$7 = ($1 + [8])
	CALL $27($7, ($5 + [8]))
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$1 }
	CALL $97(($1 + [20]), *($5 + [20]), *(($5 + [24])))
	$4 = *($4)
	*($1 + [32]) = *($4 + [32])
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$1 }
	CALL $98(($1 + [40]), *($4 + [40]), ($4 + [44]))
	
.LABEL $label$1
	*($3) = [8]
	$4 = *($7)
	$5 = ( *(($1 + [12])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($5 + [8])
	$8 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($3) = $4
	$7 = *($1 + [20])
	$5 = *(($1 + [24]))
	$9 = ($5 - $7)
	$8 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$4 }
	$4 = (($9 & [-8]) + $4)
	
.LABEL $label$4
	*($3) = ($4 + [8])
	CALL $185($3, ($1 + [40]))
	$5 = *($3)
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL $2($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($3 + [4]) = $4
	*($3) = $4
	*($3 + [8]) = ($4 + $5)
	CALL $206($3, $1)
	$8 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($6 + [8]), (int_64)7343588134136840192, *(*($0 + [8])), $8, $4, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$8 >= (uint_64)*($6 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $3($4)
	if ( (uint_64)($8 <= *($6 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [16])
}

void .FUNC $205 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $34($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $69(($1 + [40]), *(($1 + [44])))
	$2 = *($1 + [20])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [24])) = $2
	CALL $11($2)
	
.LABEL $label$11
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($1 + [16])))
	
.LABEL $label$12
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $11($4)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $181 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [4])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL $11($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$6 = [268435455]
	if ( ((uint_32)int_32($5 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = $4
	$2 = int_32($5 >> [3])
	if ( ($2 <= $4) ){ goto $label$6 }
	$6 = $2
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($6 << [4])
	$6 = CALL $9($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$5 = int_32($3 >> [4])
	$3 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$5) )
	$3 = ($7 - $1)
	if ( ($3 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $3)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($3 >> [4]) << [4]))
	return (unreachable)
	
.LABEL $label$1
	CALL $34($0)
}

void .FUNC $129 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = int_32(($2 - $1) >> [5])
	if ( ((uint_32)$3 <= (uint_32)int_32(($4 - $5) >> [5])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $11($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$1 }
	$6 = [134217727]
	if ( ((uint_32)int_32($4 >> [5]) > (uint_32)[67108862]) ){ goto $label$6 }
	$6 = $3
	$4 = int_32($4 >> [4])
	if ( ($4 <= $3) ){ goto $label$6 }
	$6 = $4
	if ( ((uint_32)$4 >= (uint_32)[134217728]) ){ goto $label$1 }
	
.LABEL $label$6
	$6 = ($6 << [5])
	$4 = CALL $9($6)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $6)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$6 = ($0 + [4])
	
.LOOP $label$7:
	*($4) = *($1)
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$4 = (*($6) + [32])
	*($6) = $4
	$1 = ($1 + [32])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$7 = int_32($4 >> [5])
	$4 = (*($0 + [4]) - $5)
	$6 = ($1 + $4)
	$8 = ( $6 ? $2 : ((uint_32)$3 > (uint_32)$7) )
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$8 }
	$9 = (($8 + [-32]) - $1)
	$4 = $5
	
.LOOP $label$9:
	*($4) = *($1)
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$4 = ($4 + [32])
	$1 = ($1 + [32])
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$9 }
	$5 = (($5 + ($9 & [-32])) + [32])
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$7) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$3 }
	$4 = ($0 + [4])
	$1 = *($4)
	
.LOOP $label$10:
	*($1) = *($6)
	*(($1 + [24])) = *(($6 + [24]))
	*(($1 + [16])) = *(($6 + [16]))
	*(($1 + [8])) = *(($6 + [8]))
	$1 = (*($4) + [32])
	*($4) = $1
	$6 = ($6 + [32])
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$10 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = $5
	return (unreachable)
	
.LABEL $label$1
	CALL $34($0)
}

void .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11170])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11170])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [16])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11170])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11170])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [24])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $8 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $6())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $7($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $9 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $2($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $2($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $123 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [124]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10936])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10982])
	
.LABEL $label$2
	*($1 + [104]) = (int_64)2
	*($4 + [24]) = (int_64))((int_64)0 - *(($1 + [16])))
	*($4 + [32]) = (int_64))((int_64)0 - *(($1 + [72])))
	*($4 + [40]) = (int_64))((int_64)0 - *(($1 + [48])))
	$5 = *($1)
	$6 = [81]
	*($4 + [8]) = [81]
	$8 = *($1 + [88])
	$7 = *(($1 + [92]))
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [5]))
	$11 = (($4 + [24]) + [16])
	$12 = ($4 + [32])
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$4 }
	$6 = (($9 & [-32]) + $6)
	
.LABEL $label$4
	*($4 + [8]) = ($6 + [8])
	CALL $185(($4 + [8]), ($1 + [112]))
	$7 = *($4 + [8])
	if ( ($7 <= [513]) ){ goto $label$6 }
	$6 = CALL $2($7)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$5
	*($4 + [12]) = $6
	*($4 + [8]) = $6
	*($4 + [16]) = ($6 + $7)
	CALL $201(($4 + [8]), $1)
	CALL db_update_i64(*($1 + [128]), $2, $6, $7)
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $3($6)
	
.LABEL $label$7
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($4 + [56]) = (int_64))((int_64)0 - *(($1 + [16])))
	if ( (CALL $18(($4 + [24]), ($4 + [56]), [8]) == 0) ){ goto $label$9 }
	$6 = *($1 + [132])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$10 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4138661397305229312, ($4 + [48]), $5)
	*(($1 + [132])) = $6
	
.LABEL $label$10
	CALL db_idx64_update($6, $2, ($4 + [56]))
	
.LABEL $label$9
	*($4 + [56]) = (int_64))((int_64)0 - *(($1 + [72])))
	if ( (CALL $18($12, ($4 + [56]), [8]) == 0) ){ goto $label$11 }
	$7 = ($1 + [136])
	$6 = *($7)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$12 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4138661397305229311, ($4 + [48]), $5)
	*($7) = $6
	
.LABEL $label$12
	CALL db_idx64_update($6, $2, ($4 + [56]))
	
.LABEL $label$11
	*($4 + [56]) = (int_64))((int_64)0 - *(($1 + [48])))
	if ( (CALL $18($11, ($4 + [56]), [8]) == 0) ){ goto $label$13 }
	$1 = ($1 + [140])
	$6 = *($1)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$14 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4138661397305229310, ($4 + [48]), $5)
	*($1) = $6
	
.LABEL $label$14
	CALL db_idx64_update($6, $2, ($4 + [56]))
	
.LABEL $label$13
	$global$0 = ($4 + [64])
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [16])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9916])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $0, [8])
	$0 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $0
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($1 + [8])) - $0) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9916])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy($0, ($2 + [8]), [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $121 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $119($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $149(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $11($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $224($1, ($0 + [16]))
	CALL $224($1, ($0 + [56]))
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8220])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $126 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [5])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [5])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL $11($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[134217728]) ){ goto $label$1 }
	$6 = [134217727]
	if ( ((uint_32)int_32($5 >> [5]) > (uint_32)[67108862]) ){ goto $label$6 }
	$6 = $4
	$2 = int_32($5 >> [4])
	if ( ($2 <= $4) ){ goto $label$6 }
	$6 = $2
	if ( ((uint_32)$2 >= (uint_32)[134217728]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($6 << [5])
	$6 = CALL $9($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$5 = int_32($3 >> [5])
	$3 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$5) )
	$3 = ($7 - $1)
	if ( ($3 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $3)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($3 >> [5]) << [5]))
	return (unreachable)
	
.LABEL $label$1
	CALL $34($0)
}

void .FUNC $125 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0) = (int_64)0
	*($0 + [8]) = [0]
	*($3 + [15]) = $1
	$1 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($4 + [1])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[10]) ){ goto $label$3 }
	*($0) = [2]
	$1 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = (($4 + [17]) & [-16])
	$1 = CALL $9($5)
	*($0) = ($5 | [1])
	*(($0 + [8])) = $1
	*(($0 + [4])) = [1]
	
.LABEL $label$2
	CALL memcpy($1, ($3 + [15]), [1])
	*($1 + [1]) = [0]
	CALL $31($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	$global$0 = ($3 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $24($0)
}

void .FUNC $124 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_upperbound(*($2), *($2 + [8]), (int_64)-6497942746098040832, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [64]) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [124]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $75($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)-6497942746098040832, $6))
	if ( ((int_32)*($4 + [124]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$2
	*($4 + [132]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	return CALL $13($0, $1)
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	CALL $15($0, $1)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $10 (int_32 $0)
{
	return CALL $9($0)
}

void .FUNC $11 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $12 (int_32 $0)
{
	CALL $11($0)
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $8(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $8(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *($0)
	$3 = *($1 + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$5 = ($1 + [4])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$3:
	$1 = *($6 + [16])
	$6 = $4
	$3 = (CASTING uint_64)(uint_32 ( *($6 + [20]) ? uint_32($1 >> [1]) : ($1 & [1]) ))
	
.LOOP $label$4:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$4 }
	*($0) = $2
	$1 = *(($6 + [16]))
	$1 = ( *(($6 + [20])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ($1 == 0) ){ goto $label$5 }
	$2 = ($1 + $2)
	*($0) = $2
	
.LABEL $label$5
	$1 = *($6 + [28])
	$3 = (CASTING uint_64)(uint_32 ( *($6 + [32]) ? uint_32($1 >> [1]) : ($1 & [1]) ))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	*($0) = $2
	$1 = *(($6 + [28]))
	$1 = ( *(($6 + [32])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ($1 == 0) ){ goto $label$7 }
	$2 = ($1 + $2)
	*($0) = $2
	
.LABEL $label$7
	$1 = *($6 + [4])
	if ( ($1 == 0) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = $1
	$1 = *($4)
	if ( $1 ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$4 = *($6 + [8])
	if ( ((int_32)*($4) == (int_32)$6) ){ goto $label$8 }
	$6 = ($6 + [8])
	
.LOOP $label$11:
	$1 = *($6)
	$6 = ($1 + [8])
	$4 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($4)) ){ goto $label$11 }
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	return $0
}

int_32 .FUNC $18 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $19 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [1] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $21($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $21($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $21($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $21($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [8256]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $21($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $21($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $21($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

void .FUNC $184 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $34($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $69(($1 + [112]), *(($1 + [116])))
	$2 = *($1 + [88])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [92])) = $2
	CALL $11($2)
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $11($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $187 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$5 = ($global$0 - [16])
	$global$0 = $5
	$6 = *($0)
	$7 = *($6 + [12])
	$8 = *($7 + [64])
	$9 = *(*($6 + [8]))
	$10 = *(*($6) + [8])
	*($5 + [8]) = (int_64))((int_64)0 - *($7 + [16]))
	$7 = CALL db_idx64_store($10, (int_64)-6497942746098040832, $9, $8, ($5 + [8]))
	*(*($6 + [4]) + [132]) = $7
	$6 = *($0)
	$7 = *($6 + [12])
	$8 = *($7 + [64])
	$9 = *(*($6 + [8]))
	$10 = *(*($6) + [8])
	*($5 + [8]) = *($7)
	$7 = CALL db_idx64_store($10, (int_64)-6497942746098040831, $9, $8, ($5 + [8]))
	*((*($6 + [4]) + [136])) = $7
	$6 = *($0)
	$8 = *(*($6 + [8]))
	$9 = *(*($6) + [8])
	$10 = *(*($6 + [12]) + [64])
	*($5 + [8]) = (int_64))((int_64)0 - $10)
	$7 = CALL db_idx64_store($9, (int_64)-6497942746098040830, $8, $10, ($5 + [8]))
	*((*($6 + [4]) + [140])) = $7
	$0 = *($0)
	$6 = *($0 + [12])
	$8 = *($6 + [64])
	$9 = *(*($0 + [8]))
	$10 = *(*($0) + [8])
	*($5 + [8]) = (int_64))((int_64)0 - *($6 + [48]))
	$6 = CALL db_idx64_store($10, (int_64)-6497942746098040829, $9, $8, ($5 + [8]))
	*((*($0 + [4]) + [144])) = $6
	$global$0 = ($5 + [16])
}

int_32 .FUNC $218 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11170])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($1 + [24])) = *($2)
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($0 + [8])
	if ( ((int_32)*($5) != (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy(($2 + [15]), $4, [1])
	$4 = (*($3) + [1])
	*($3) = $4
	*(($1 + [40])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$3 = ($1 + [48])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [64])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [72])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [80])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $4, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$4 = ($1 + [104])
	$3 = *($0 + [4])
	$0 = CALL $169($0, ($1 + [88]))
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [11170])
	$3 = *(($0 + [4]))
	
.LABEL $label$12
	CALL memcpy($4, $3, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$0 = CALL $170($0, ($1 + [112]))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $186 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2) = *(($1 + [24]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [14]) = *($1 + [40])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [64])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [72])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [80])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, $3, [8])
	$3 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $3
	$7 = (CASTING uint_64)(uint_32 int_32((*(($1 + [92])) - *($1 + [88])) >> [5]))
	
.LOOP $label$12:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert([0], [9916])
	$3 = *($4)
	
.LABEL $label$13
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$12 }
	$5 = *(($1 + [92]))
	$4 = *(($1 + [88]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$14 }
	
.LOOP $label$15:
	CALL $188($0, $4)
	$4 = ($4 + [32])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [4]))
	
.LABEL $label$14
	$4 = ($1 + [104])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [9916])
	$3 = *(($0 + [4]))
	
.LABEL $label$16
	CALL memcpy($3, $4, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$3 = CALL $189($0, ($1 + [112]))
	$global$0 = ($2 + [16])
	return $3
}

int_32 .FUNC $180 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = ($0 + [4])
	$0 = *($0 + [4])
	if ( ($0 == 0) ){ goto $label$1 }
	$4 = ($2 + [1])
	$5 = ($2 + [8])
	
.LOOP $label$3:
	$7 = ($0 + [16])
	$12 = ($11 & [1])
	$11 = *($2)
	$10 = ($2 + [4])
	$11 = ( *($10) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($0 + [16])
	$8 = ($0 + [20])
	$6 = ( *($8) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$7 }
	$9 = CALL $18(( *($5) ? $4 : $12 ), ( *(($0 + [24])) ? ($7 + [1]) : $9 ), $13)
	if ( ($9 == 0) ){ goto $label$7 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$5 }
	
.LABEL $label$6
	$6 = *($0)
	if ( $6 ){ goto $label$4 }
	*($1) = $0
	return $0
	
.LABEL $label$5
	$12 = ($11 & [1])
	$11 = *($7)
	$11 = ( *($8) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($2)
	$6 = ( *($10) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$9 }
	$7 = CALL $18(( *(($0 + [24])) ? ($7 + [1]) : $12 ), ( *($5) ? $4 : $9 ), $13)
	if ( ($7 == 0) ){ goto $label$9 }
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$2 }
	
.LABEL $label$8
	$3 = ($0 + [4])
	$6 = *($0 + [4])
	if ( ($6 == 0) ){ goto $label$2 }
	$0 = $3
	
.LABEL $label$4
	$3 = $0
	$0 = $6
	goto $label$3 
	
.LABEL $label$2
	*($1) = $0
	return $3
	
.LABEL $label$1
	*($1) = $3
	return $3
}

void .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[44])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[97612894]) ){ goto $label$2 }
	$6 = [97612893]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[44])
	if ( ((uint_32)$7 > (uint_32)[48806445]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $9(((int_32)$6 * (int_32)[44]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $34($0)
	
.LABEL $label$1
	*(($4 = ($5 + ((int_32)$4 * (int_32)[44])))) = *($1)
	*(($4 + [40])) = *(($1 + [40]))
	*(($4 + [32])) = *(($1 + [32]))
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 + ((int_32)((int_32)$1 / (int_32)[-44]) * (int_32)[44]))
	$6 = ($5 + ((int_32)$6 * (int_32)[44]))
	$4 = ($4 + [44])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $11($3)
	
.LABEL $label$6
	(unreachable)
}

int_32 .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($0 + [8])) = (int_64)0
	*($0 + [4]) = [0]
	*($0) = *($1)
	$2 = (*(($1 + [8])) - *($1 + [4]))
	$3 = ((int_32)$2 / (int_32)[44])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[97612894]) ){ goto $label$3 }
	$2 = CALL $9($2)
	*(($0 + [4])) = $2
	*(($0 + [12])) = ($2 + ((int_32)$3 * (int_32)[44]))
	*(($3 = ($0 + [8]))) = $2
	$4 = *(($1 + [4]))
	$5 = (*(($1 + [8])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[44]) * (int_32)[44]))
	
.LABEL $label$4
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = [0]
	$2 = (*(($1 + [20])) - *($1 + [16]))
	$3 = ((int_32)$2 / (int_32)[24])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[178956971]) ){ goto $label$2 }
	$2 = CALL $9($2)
	*(($0 + [16])) = $2
	*(($0 + [24])) = ($2 + ((int_32)$3 * (int_32)[24]))
	*(($3 = ($0 + [20]))) = $2
	$4 = *(($1 + [16]))
	$5 = (*(($1 + [20])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[24]) * (int_32)[24]))
	
.LABEL $label$5
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$2 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = int_32($2 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$2 = CALL $9($2)
	*(($0 + [28])) = $2
	*(($0 + [36])) = ($2 + ($3 << [3]))
	*(($3 = ($0 + [32]))) = $2
	$5 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $5, $1)
	*($3) = (*($3) + $1)
	
.LABEL $label$6
	return $0
	
.LABEL $label$3
	CALL $34(($0 + [4]))
	
.LABEL $label$2
	CALL $34(($0 + [16]))
	
.LABEL $label$1
	CALL $34(($0 + [28]))
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [124]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11239])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [11284])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [11334])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$3 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $69(($6 + [112]), *(($6 + [116])))
	$8 = *($6 + [88])
	if ( ($8 == 0) ){ goto $label$13 }
	*(($6 + [92])) = $8
	CALL $11($8)
	
.LABEL $label$13
	CALL $11($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$3 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	CALL $69(($9 + [112]), *(($9 + [116])))
	$8 = *($9 + [88])
	if ( ($8 == 0) ){ goto $label$16 }
	*(($9 + [92])) = $8
	CALL $11($8)
	
.LABEL $label$16
	CALL $11($9)
	
.LABEL $label$15
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $3
	CALL db_remove_i64(*($1 + [128]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $228(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]))
	$global$0 = ($2 + [16])
}

void .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11170])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = *($0)
	$4 = ($5 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11170])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($1)
	$1 = *($0 + [4])
	$6 = (int_64)0
	$2 = [0]
	
.LOOP $label$3:
	if ( ($1 <= *(($0 + [8]))) ){ goto $label$4 }
	CALL eosio_assert([0], [11166])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	$3 = *($1)
	$4 = ($1 + [1])
	*(($0 + [4])) = $4
	$1 = ($2 & [255])
	$6 = ((int_64)$6 | (int_64)(CASTING uint_64)(uint_32 (($3 & [127]) << $1)))
	$2 = ($1 + [7])
	$1 = $4
	if ( ($3 & [128]) ){ goto $label$3 }
	*($5 + [16]) = $6
	$1 = ($5 + [20])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[32]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $4, [33])
	*(($1 = ($0 + [4]))) = (*($1) + [33])
}

void .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [124]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11239])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [11284])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [11334])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$3 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $69(($6 + [112]), *(($6 + [116])))
	$8 = *($6 + [88])
	if ( ($8 == 0) ){ goto $label$13 }
	*(($6 + [92])) = $8
	CALL $11($8)
	
.LABEL $label$13
	CALL $11($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$3 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	CALL $69(($9 + [112]), *(($9 + [116])))
	$8 = *($9 + [88])
	if ( ($8 == 0) ){ goto $label$16 }
	*(($9 + [92])) = $8
	CALL $11($8)
	
.LABEL $label$16
	CALL $11($9)
	
.LABEL $label$15
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $3
	CALL db_remove_i64(*($1 + [128]))
	$9 = *($1 + [132])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3617168760277827584, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

int_32 .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11143])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([144])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [88 align=4]) = (int_64)0
	*($5 + [96]) = [0]
	*($5 + [116 align=4]) = (int_64)0
	*($5 + [124]) = $0
	*($5 + [112]) = ($5 + [116])
	CALL $218(($3 + [32]), $5)
	*($5 + [128]) = $1
	*($5 + [132 align=4]) = (int_64)-1
	*($5 + [140]) = [-1]
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $200(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $69(($1 + [112]), *(($1 + [116])))
	$4 = *($1 + [88])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [92])) = $4
	CALL $11($4)
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [124]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11239])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [11284])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1 + [64])
	if ( ((int_64)*(*(($5 + [-24])) + [64]) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10) + [64]) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [11334])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$3 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $69(($6 + [112]), *(($6 + [116])))
	$8 = *($6 + [88])
	if ( ($8 == 0) ){ goto $label$13 }
	*(($6 + [92])) = $8
	CALL $11($8)
	
.LABEL $label$13
	CALL $11($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$3 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	CALL $69(($9 + [112]), *(($9 + [116])))
	$8 = *($9 + [88])
	if ( ($8 == 0) ){ goto $label$16 }
	*(($9 + [92])) = $8
	CALL $11($8)
	
.LABEL $label$16
	CALL $11($9)
	
.LABEL $label$15
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $3
	CALL db_remove_i64(*($1 + [128]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $214(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11143])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([136])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [88 align=4]) = (int_64)0
	*($5 + [96]) = [0]
	*($5 + [116 align=4]) = (int_64)0
	*($5 + [124]) = $0
	*($5 + [112]) = ($5 + [116])
	CALL $215(($3 + [32]), $5)
	*($5 + [132]) = [-1]
	*($5 + [128]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $192(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $69(($1 + [112]), *(($1 + [116])))
	$4 = *($1 + [88])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [92])) = $4
	CALL $11($4)
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $118 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$1 = [20]
	$3 = *(($0 + [20]))
	$2 = *(($0 + [24]))
	$4 = (CASTING uint_64)(uint_32 ((int_32)($2 - $3) / (int_32)[44]))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	
.LOOP $label$3:
	$1 = ($1 + [35])
	$4 = *($3)
	
.LOOP $label$4:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$4 }
	$3 = ($3 + [44])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = *(($0 + [32]))
	$3 = *(($0 + [36]))
	$5 = ($3 - $2)
	$4 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[24]))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$6 }
	$1 = ((((int_32)((uint_32)($5 + [-24]) / (uint_32)[24]) * (int_32)[18]) + $1) + [18])
	
.LABEL $label$6
	$2 = *(($0 + [44]))
	$3 = *(($0 + [48]))
	$5 = ($3 - $2)
	$4 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$8 }
	$1 = ((((int_32)uint_32(($5 + [-8]) >> [3]) * (int_32)[6]) + $1) + [6])
	
.LABEL $label$8
	$3 = *(($0 + [60]))
	$2 = *(($0 + [64]))
	$4 = (CASTING uint_64)(uint_32 ((int_32)($2 - $3) / (int_32)[44]))
	$1 = ($1 + [4])
	
.LOOP $label$9:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$1 = ($1 + [35])
	$4 = *($3)
	
.LOOP $label$12:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$12 }
	$3 = ($3 + [44])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$11 }
	
.LABEL $label$10
	$2 = *(($0 + [72]))
	$3 = *(($0 + [76]))
	$5 = ($3 - $2)
	$4 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[24]))
	
.LOOP $label$13:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$13 }
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$14 }
	$1 = ((((int_32)((uint_32)($5 + [-24]) / (uint_32)[24]) * (int_32)[18]) + $1) + [18])
	
.LABEL $label$14
	$2 = *(($0 + [84]))
	$3 = *(($0 + [88]))
	$0 = ($3 - $2)
	$4 = (CASTING uint_64)(uint_32 int_32($0 >> [3]))
	
.LOOP $label$15:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$15 }
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$16 }
	$1 = ((((int_32)uint_32(($0 + [-8]) >> [3]) * (int_32)[6]) + $1) + [6])
	
.LABEL $label$16
	return $1
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $9($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $34($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $11($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $9(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $11($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $9($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $11($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $20 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

int_32 .FUNC $23 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $19([2], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

void .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $9($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $24 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $28($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $26 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL $9($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $101 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $9(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $34($0)
	
.LABEL $label$1
	$9 = ($5 + ((int_32)$8 * (int_32)[40]))
	$6 = ($5 + ((int_32)$6 * (int_32)[40]))
	$5 = CALL $77($6, $1, *($2), *($3), $4)
	$10 = ($5 + [40])
	$8 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$6 }
	$11 = ($8 - $7)
	$1 = [0]
	
.LOOP $label$7:
	$5 = ($7 + $1)
	*((($8 = ($6 + $1)) + [-32])) = *(($5 + [-32]))
	*(($8 + [-40])) = *(($5 + [-40]))
	*(($2 = ($8 + [-24]))) = (int_64)0
	*(($3 = ($8 + [-16]))) = [0]
	$4 = ($5 + [-24])
	*($2) = *($4)
	$2 = ($5 + [-16])
	*($3) = *($2)
	*($2) = [0]
	*(($2 = ($8 + [-12]))) = (int_64)0
	*(($8 = ($8 + [-4]))) = [0]
	$3 = ($5 + [-12])
	*($2) = *($3)
	*($4) = (int_64)0
	$5 = ($5 + [-4])
	*($8) = *($5)
	*($5) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$7 }
	$5 = ($6 + $1)
	$8 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $8
	
.LABEL $label$5
	*($0) = $5
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = *(($8 + [-12]))
	if ( ($5 == 0) ){ goto $label$10 }
	*(($8 + [-8])) = $5
	CALL $11($5)
	
.LABEL $label$10
	$5 = ($8 + [-40])
	$1 = *(($8 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($8 + [-20])) = $1
	CALL $11($1)
	
.LABEL $label$11
	$8 = $5
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $11($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [112])
	$4 = *($1)
	$6 = *(($0 + [140]))
	$5 = *(($0 + [136]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	if ( ((int_32)*($8 + [52]) == (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$6
	if ( $8 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($3), *(($0 + [120])), (int_64)7343588134136840192, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $87($3, $7)
	if ( ((int_32)*($8 + [52]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$2
	$4 = *($0)
	*($2) = $1
	CALL $157($3, $8, $4, $2)
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$1
	$4 = *($0)
	*($2 + [8]) = $1
	CALL $158($2, $3, $4, ($2 + [8]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $103 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $11($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $11($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $11($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $11($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $11($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $102 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $146(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $119($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $147(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL $11($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

void .FUNC $105 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($2)
	$5 = *($1)
	*($3 + [8]) = $5
	$6 = [0]
	$8 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	if ( ((int_32)$7) == (int_32)$8)) ){ goto $label$1 }
	
.LOOP $label$2:
	$6 = ($6 + [1])
	CALL $86(($3 + [8]))
	if ( ((int_32)*($3 + [12]) != (int_32)$8) ){ goto $label$2 }
	
.LABEL $label$1
	$9 = *($0)
	$8 = *($0 + [8])
	if ( ((uint_32)$6 <= (uint_32)int_32(($8 - $9) >> [7])) ){ goto $label$8 }
	if ( ($9 == 0) ){ goto $label$5 }
	$7 = *($0 + [4])
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$7 }
	
.LOOP $label$9:
	CALL $69(($7 + [-16]), *(($7 + [-12])))
	$8 = ($7 + [-128])
	$10 = *(($7 + [-40]))
	if ( ($10 == 0) ){ goto $label$10 }
	*(($7 + [-36])) = $10
	CALL $11($10)
	
.LABEL $label$10
	$7 = $8
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$9 }
	$7 = *($0)
	goto $label$6 
	
.LABEL $label$8
	*($3) = $4
	$10 = [0]
	$8 = (*($0 + [4]) - $9)
	$9 = int_32($8 >> [7])
	if ( ((uint_32)$6 <= (uint_32)$9) ){ goto $label$11 }
	*($3) = $5
	if ( ((int_32)$8 <= (int_32)[-128]) ){ goto $label$12 }
	$10 = [1]
	if ( ($8 == 0) ){ goto $label$11 }
	$6 = ($9 + [1])
	
.LOOP $label$13:
	CALL $86($3)
	$6 = ($6 + [-1])
	if ( ((int_32)$6 > (int_32)[1]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$6 = ($9 + [-1])
	
.LOOP $label$14:
	$10 = [1]
	CALL $140($3)
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[-1]) ){ goto $label$14 }
	
.LABEL $label$11
	$6 = *($0)
	$8 = *($3 + [4])
	*($3 + [8]) = $5
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = CALL memcpy($6, $7, [88])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$17 }
	CALL $126(($6 + [88]), *($7 + [88]), *(($7 + [92])))
	*(($6 + [104])) = *($7 + [104])
	CALL $98(($6 + [112]), *($7 + [112]), ($7 + [116]))
	
.LABEL $label$17
	$6 = ($6 + [128])
	CALL $86(($3 + [8]))
	$7 = *($3 + [12])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($10 == 0) ){ goto $label$18 }
	$10 = *($2 + [4])
	$5 = *($3)
	*($3 + [8]) = $5
	$7 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	if ( ((int_32)$10 == (int_32)$7)) ){ goto $label$4 }
	$6 = ($0 + [4])
	$8 = *($6)
	
.LOOP $label$19:
	CALL $84($8, $7)
	CALL $86(($3 + [8]))
	$8 = (*($6) + [128])
	*($6) = $8
	$7 = *($3 + [12])
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$19 }
	goto $label$4 
	
.LABEL $label$18
	$9 = ($0 + [4])
	$7 = *($9)
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$20 }
	
.LOOP $label$21:
	CALL $69(($7 + [-16]), *(($7 + [-12])))
	$8 = ($7 + [-128])
	$10 = *(($7 + [-40]))
	if ( ($10 == 0) ){ goto $label$22 }
	*(($7 + [-36])) = $10
	CALL $11($10)
	
.LABEL $label$22
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$21 }
	
.LABEL $label$20
	*($9) = $6
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$7
	$7 = $9
	
.LABEL $label$6
	*(($0 + [4])) = $9
	CALL $11($7)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$6 >= (uint_32)[33554432]) ){ goto $label$3 }
	$7 = [33554431]
	if ( ((uint_32)int_32($8 >> [7]) > (uint_32)[16777214]) ){ goto $label$23 }
	$7 = $6
	$8 = int_32($8 >> [6])
	if ( ($8 <= $6) ){ goto $label$23 }
	$7 = $8
	if ( ((uint_32)$8 >= (uint_32)[33554432]) ){ goto $label$3 }
	
.LABEL $label$23
	$6 = ($7 << [7])
	$7 = CALL $9($6)
	*($0) = $7
	*($0 + [4]) = $7
	*(($0 + [8])) = ($7 + $6)
	$10 = *($2 + [4])
	$5 = *($1)
	*($3 + [8]) = $5
	$6 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	if ( ((int_32)$10 == (int_32)$6)) ){ goto $label$4 }
	$8 = ($0 + [4])
	
.LOOP $label$24:
	CALL $84($7, $6)
	CALL $86(($3 + [8]))
	$7 = (*($8) + [128])
	*($8) = $7
	$6 = *($3 + [12])
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$24 }
	
.LABEL $label$4
	$global$0 = ($3 + [16])
	return (unreachable)
	
.LABEL $label$3
	CALL $34($0)
}

void .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [152])
	$4 = *($1)
	$6 = *(($0 + [180]))
	$5 = *(($0 + [176]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [124]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [11092])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($3), *(($0 + [160])), (int_64)-4138661397305229312, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $113($3, $7)
	if ( ((int_32)*($8 + [124]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$1
	CALL eosio_assert(($8 == 0), [10770])
	CALL prints([10810])
	CALL printn(*($1))
	CALL prints([8495])
	$4 = *($0)
	*($2 + [8]) = $1
	CALL $148($2, $3, $4, ($2 + [8]))
	$global$0 = ($2 + [16])
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11170])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11170])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11170])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $106 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	$6 = ($global$0 - [16])
	$global$0 = $6
	CALL $76($6, $0)
	$0 = *($6)
	$7 = ($0 & [1])
	CALL prints_l(( *($6 + [8]) ? ($6 | [1]) : $7 ), ( *($6 + [4]) ? uint_32($0 >> [1]) : $7 ))
	if ( ((*($6) & [1]) == 0) ){ goto $label$1 }
	CALL $11(*(($6 + [8])))
	
.LABEL $label$1
	CALL prints($1)
	CALL printui(*($2))
	CALL prints($3)
	CALL printui(*($4))
	CALL prints($5)
	$global$0 = ($6 + [16])
}

int_32 .FUNC $109 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [11209])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *(($2 + [136]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-6497942746098040831, ($1 + [8]), *($2 + [64]))
	*((*(($0 + [4])) + [136])) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = *($1 + [8])
	$3 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$7:
	$2 = ($3 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [64]) == (int_64)$6) ){ goto $label$6 }
	$3 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	if ( ((int_32)*($4 + [124]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11092])
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	$2 = CALL db_find_i64(*($7), *($7 + [8]), (int_64)-6497942746098040832, $6)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $75($7, $2)
	if ( ((int_32)*($4 + [124]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$4
	*(($4 + [136])) = $5
	
.LABEL $label$3
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $108 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-6497942746098040831, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [64]) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [124]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $75($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)-6497942746098040832, $6))
	if ( ((int_32)*($4 + [124]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11092])
	
.LABEL $label$2
	*(($4 + [136])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $212 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($2 + [15]) = *($1)
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, ($2 + [15]), [1])
	$4 = (*($3) + [1])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	*($3) = (*($3) + [8])
	$0 = CALL $189($0, ($1 + [16]))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $219 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$6 = ($global$0 - [1152])
	$global$0 = $6
	$7 = CALL $222($0, $1, $2, $3, $5)
	$8 = *($5)
	$10 = CALL $84(($6 + [768]), $3)
	$9 = CALL $84(($6 + [896]), $4)
	$11 = CALL int_32 $9((int_32 $10), (int_32 $8))
	CALL $69(($10 + [112]), *(($10 + [116])))
	$8 = *($10 + [88])
	if ( ($8 == 0) ){ goto $label$1 }
	*(($10 + [92])) = $8
	CALL $11($8)
	
.LABEL $label$1
	CALL $69(($9 + [112]), *(($9 + [116])))
	$10 = *($9 + [88])
	if ( ($10 == 0) ){ goto $label$2 }
	*(($9 + [92])) = $10
	CALL $11($10)
	
.LABEL $label$2
	if ( ($11 == 0) ){ goto $label$5 }
	CALL memcpy(($6 + [1024]), $3, [88])
	$9 = ($3 + [96])
	$10 = *($9)
	*($9) = [0]
	*((($6 + [1024]) + [96])) = $10
	$12 = *($3 + [88 align=4])
	*($3 + [88 align=4]) = (int_64)0
	$9 = ($3 + [116])
	$11 = *($9)
	*(($13 = (($6 + [1024]) + [116]))) = $11
	$10 = *(($3 + [120]))
	*((($6 + [1024]) + [120])) = $10
	*($6 + [1112]) = $12
	*($6 + [1128]) = *($3 + [104])
	*($6 + [1136]) = *($3 + [112])
	$8 = ($3 + [112])
	if ( ($10 == 0) ){ goto $label$7 }
	*($11 + [8]) = $13
	*($3 + [112]) = $9
	*($9) = (int_64)0
	goto $label$6 
	
.LABEL $label$7
	*((($6 + [1024]) + [112])) = $13
	
.LABEL $label$6
	*((($3 = CALL memcpy($3, $4, [88])) + [88])) = *($4 + [88 align=4])
	$10 = ($4 + [96])
	*(($3 + [96])) = *($10)
	*($10) = [0]
	*(($3 + [104])) = *($4 + [104])
	*($4 + [88 align=4]) = (int_64)0
	CALL $69($8, *($9))
	*(($3 + [112])) = *($4 + [112])
	$10 = ($4 + [116])
	$14 = *($10)
	*($9) = $14
	$15 = *(($4 + [120]))
	*(($3 + [120])) = $15
	$11 = ($4 + [112])
	if ( ($15 == 0) ){ goto $label$9 }
	*($14 + [8]) = $9
	*($11) = $10
	*($10) = (int_64)0
	goto $label$8 
	
.LABEL $label$9
	*($8) = $9
	
.LABEL $label$8
	$4 = CALL memcpy($4, ($6 + [1024]), [88])
	$9 = ($4 + [88])
	$15 = *($9)
	if ( ($15 == 0) ){ goto $label$10 }
	*(($4 + [92])) = $15
	CALL $11($15)
	*(($4 + [96])) = [0]
	*($9) = (int_64)0
	
.LABEL $label$10
	$15 = (($6 + [1024]) + [88])
	*($9) = *($15)
	$9 = (($6 + [1024]) + [96])
	$14 = *($9)
	*($9) = [0]
	*(($4 + [96])) = $14
	*($15) = (int_64)0
	*(($4 + [104])) = *((($6 + [1024]) + [104]))
	$15 = ($4 + [116])
	CALL $69($11, *($15))
	$14 = (($6 + [1024]) + [112])
	*(($4 + [112])) = *($14)
	$16 = (($6 + [1024]) + [116])
	$9 = *($16)
	*($15) = $9
	$4 = *((($6 + [1024]) + [120]))
	*(($4 + [120])) = $4
	if ( ($4 == 0) ){ goto $label$12 }
	*($9 + [8]) = $10
	*($14) = $13
	*($16) = (int_64)0
	$9 = [0]
	goto $label$11 
	
.LABEL $label$12
	*($11) = $10
	
.LABEL $label$11
	CALL $69((($6 + [1024]) + [112]), $9)
	$4 = *($6 + [1112])
	if ( ($4 == 0) ){ goto $label$13 }
	*(($6 + [1116])) = $4
	CALL $11($4)
	
.LABEL $label$13
	$10 = *($5)
	$9 = CALL $84(($6 + [512]), $2)
	$4 = CALL $84(($6 + [640]), $3)
	$11 = CALL int_32 $4((int_32 $9), (int_32 $10))
	CALL $69(($9 + [112]), *(($9 + [116])))
	$10 = *($9 + [88])
	if ( ($10 == 0) ){ goto $label$14 }
	*(($9 + [92])) = $10
	CALL $11($10)
	
.LABEL $label$14
	CALL $69(($4 + [112]), *(($4 + [116])))
	$9 = *($4 + [88])
	if ( ($9 == 0) ){ goto $label$15 }
	*(($4 + [92])) = $9
	CALL $11($9)
	
.LABEL $label$15
	if ( ($11 == 0) ){ goto $label$16 }
	CALL memcpy(($6 + [1024]), $2, [88])
	$4 = ($2 + [96])
	$9 = *($4)
	*($4) = [0]
	*((($6 + [1024]) + [96])) = $9
	$12 = *($2 + [88 align=4])
	*($2 + [88 align=4]) = (int_64)0
	$9 = ($2 + [116])
	$10 = *($9)
	*(($13 = (($6 + [1024]) + [116]))) = $10
	$4 = *(($2 + [120]))
	*((($6 + [1024]) + [120])) = $4
	*($6 + [1112]) = $12
	*($6 + [1128]) = *($2 + [104])
	*($6 + [1136]) = *($2 + [112])
	$11 = ($2 + [112])
	if ( ($4 == 0) ){ goto $label$4 }
	*($10 + [8]) = $13
	*($2 + [112]) = $9
	*($9) = (int_64)0
	goto $label$3 
	
.LABEL $label$16
	$7 = ($7 + [1])
	
.LABEL $label$5
	$global$0 = ($6 + [1152])
	return $7
	
.LABEL $label$4
	*((($6 + [1024]) + [112])) = $13
	
.LABEL $label$3
	$2 = ($3 + [88])
	*((($4 = CALL memcpy($2, $3, [88])) + [88])) = *($2)
	$10 = ($3 + [96])
	*(($4 + [96])) = *($10)
	*($10) = [0]
	*(($4 + [104])) = *(($3 + [104]))
	*($2) = (int_64)0
	CALL $69($11, *($9))
	$15 = ($3 + [112])
	*(($4 + [112])) = *($15)
	$10 = ($3 + [116])
	$14 = *($10)
	*($9) = $14
	$2 = *(($3 + [120]))
	*(($4 + [120])) = $2
	if ( ($2 == 0) ){ goto $label$18 }
	*($14 + [8]) = $9
	*($15) = $10
	*($10) = (int_64)0
	goto $label$17 
	
.LABEL $label$18
	*($11) = $9
	
.LABEL $label$17
	$3 = CALL memcpy($3, ($6 + [1024]), [88])
	$2 = ($3 + [88])
	$9 = *($2)
	if ( ($9 == 0) ){ goto $label$19 }
	*(($3 + [92])) = $9
	CALL $11($9)
	*(($3 + [96])) = [0]
	*($2) = (int_64)0
	
.LABEL $label$19
	$9 = (($6 + [1024]) + [88])
	*($2) = *($9)
	$2 = (($6 + [1024]) + [96])
	$15 = *($2)
	*($2) = [0]
	*(($3 + [96])) = $15
	*($9) = (int_64)0
	*(($3 + [104])) = *((($6 + [1024]) + [104]))
	$9 = ($3 + [116])
	CALL $69($8, *($9))
	$15 = (($6 + [1024]) + [112])
	*(($3 + [112])) = *($15)
	$14 = (($6 + [1024]) + [116])
	$2 = *($14)
	*($9) = $2
	$3 = *((($6 + [1024]) + [120]))
	*(($3 + [120])) = $3
	if ( ($3 == 0) ){ goto $label$21 }
	*($2 + [8]) = $10
	*($15) = $13
	*($14) = (int_64)0
	$2 = [0]
	goto $label$20 
	
.LABEL $label$21
	*($8) = $10
	
.LABEL $label$20
	CALL $69((($6 + [1024]) + [112]), $2)
	$3 = *($6 + [1112])
	if ( ($3 == 0) ){ goto $label$22 }
	*(($6 + [1116])) = $3
	CALL $11($3)
	
.LABEL $label$22
	$9 = *($5)
	$2 = CALL $84(($6 + [256]), $1)
	$3 = CALL $84(($6 + [384]), $4)
	$10 = CALL int_32 $3((int_32 $2), (int_32 $9))
	CALL $69(($2 + [112]), *(($2 + [116])))
	$9 = *($2 + [88])
	if ( ($9 == 0) ){ goto $label$23 }
	*(($2 + [92])) = $9
	CALL $11($9)
	
.LABEL $label$23
	CALL $69(($3 + [112]), *(($3 + [116])))
	$2 = *($3 + [88])
	if ( ($2 == 0) ){ goto $label$24 }
	*(($3 + [92])) = $2
	CALL $11($2)
	
.LABEL $label$24
	if ( ($10 == 0) ){ goto $label$27 }
	CALL memcpy(($6 + [1024]), $1, [88])
	$3 = ($1 + [96])
	$2 = *($3)
	*($3) = [0]
	*((($6 + [1024]) + [96])) = $2
	$12 = *($1 + [88 align=4])
	*($1 + [88 align=4]) = (int_64)0
	$2 = ($1 + [116])
	$9 = *($2)
	*(($8 = (($6 + [1024]) + [116]))) = $9
	$3 = *(($1 + [120]))
	*((($6 + [1024]) + [120])) = $3
	*($6 + [1112]) = $12
	*($6 + [1128]) = *($1 + [104])
	*($6 + [1136]) = *($1 + [112])
	$10 = ($1 + [112])
	if ( ($3 == 0) ){ goto $label$26 }
	*($9 + [8]) = $8
	*($1 + [112]) = $2
	*($2) = (int_64)0
	goto $label$25 
	
.LABEL $label$27
	$global$0 = ($6 + [1152])
	return ($7 + [2])
	
.LABEL $label$26
	*((($6 + [1024]) + [112])) = $8
	
.LABEL $label$25
	$9 = ($4 + [88])
	*((($3 = CALL memcpy($1, $4, [88])) + [88])) = *($9)
	$1 = ($4 + [96])
	*(($3 + [96])) = *($1)
	*($1) = [0]
	*(($3 + [104])) = *(($4 + [104]))
	*($9) = (int_64)0
	CALL $69($10, *($2))
	$13 = ($4 + [112])
	*(($3 + [112])) = *($13)
	$9 = ($4 + [116])
	$15 = *($9)
	*($2) = $15
	$1 = *(($4 + [120]))
	*(($3 + [120])) = $1
	if ( ($1 == 0) ){ goto $label$29 }
	*($15 + [8]) = $2
	*($13) = $9
	*($9) = (int_64)0
	goto $label$28 
	
.LABEL $label$29
	*($10) = $2
	
.LABEL $label$28
	$4 = CALL memcpy($4, ($6 + [1024]), [88])
	$2 = ($4 + [88])
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$30 }
	*(($4 + [92])) = $1
	CALL $11($1)
	*(($4 + [96])) = [0]
	*($2) = (int_64)0
	
.LABEL $label$30
	$1 = (($6 + [1024]) + [88])
	*($2) = *($1)
	$2 = (($6 + [1024]) + [96])
	$13 = *($2)
	*($2) = [0]
	*(($4 + [96])) = $13
	*($1) = (int_64)0
	*(($4 + [104])) = *((($6 + [1024]) + [104]))
	$1 = ($4 + [116])
	CALL $69($11, *($1))
	$13 = (($6 + [1024]) + [112])
	*(($4 + [112])) = *($13)
	$15 = (($6 + [1024]) + [116])
	$2 = *($15)
	*($1) = $2
	$4 = *((($6 + [1024]) + [120]))
	*(($4 + [120])) = $4
	if ( ($4 == 0) ){ goto $label$32 }
	*($2 + [8]) = $9
	*($13) = $8
	*($15) = (int_64)0
	$2 = [0]
	goto $label$31 
	
.LABEL $label$32
	*($11) = $9
	
.LABEL $label$31
	CALL $69((($6 + [1024]) + [112]), $2)
	$4 = *($6 + [1112])
	if ( ($4 == 0) ){ goto $label$33 }
	*(($6 + [1116])) = $4
	CALL $11($4)
	
.LABEL $label$33
	$9 = *($5)
	$2 = CALL $84($6, $0)
	$4 = CALL $84(($6 + [128]), $3)
	$5 = CALL int_32 $4((int_32 $2), (int_32 $9))
	CALL $69(($2 + [112]), *(($2 + [116])))
	$9 = *($2 + [88])
	if ( ($9 == 0) ){ goto $label$34 }
	*(($2 + [92])) = $9
	CALL $11($9)
	
.LABEL $label$34
	CALL $69(($4 + [112]), *(($4 + [116])))
	$2 = *($4 + [88])
	if ( ($2 == 0) ){ goto $label$35 }
	*(($4 + [92])) = $2
	CALL $11($2)
	
.LABEL $label$35
	if ( ($5 == 0) ){ goto $label$38 }
	CALL memcpy(($6 + [1024]), $0, [88])
	$4 = ($0 + [96])
	$2 = *($4)
	*($4) = [0]
	*((($6 + [1024]) + [96])) = $2
	$12 = *($0 + [88 align=4])
	*($0 + [88 align=4]) = (int_64)0
	$4 = ($0 + [116])
	$9 = *($4)
	*(($5 = (($6 + [1024]) + [116]))) = $9
	$2 = *(($0 + [120]))
	*((($6 + [1024]) + [120])) = $2
	*($6 + [1112]) = $12
	*($6 + [1128]) = *($0 + [104])
	*($6 + [1136]) = *($0 + [112])
	$1 = ($0 + [112])
	if ( ($2 == 0) ){ goto $label$37 }
	*($9 + [8]) = $5
	*($0 + [112]) = $4
	*($4) = (int_64)0
	goto $label$36 
	
.LABEL $label$38
	$global$0 = ($6 + [1152])
	return ($7 + [3])
	
.LABEL $label$37
	*((($6 + [1024]) + [112])) = $5
	
.LABEL $label$36
	$9 = ($3 + [88])
	*((($2 = CALL memcpy($0, $3, [88])) + [88])) = *($9)
	$0 = ($3 + [96])
	*(($2 + [96])) = *($0)
	*($0) = [0]
	*(($2 + [104])) = *(($3 + [104]))
	*($9) = (int_64)0
	CALL $69($1, *($4))
	$0 = ($3 + [112])
	*(($2 + [112])) = *($0)
	$9 = ($3 + [116])
	$8 = *($9)
	*($4) = $8
	$2 = *(($3 + [120]))
	*(($2 + [120])) = $2
	if ( ($2 == 0) ){ goto $label$40 }
	*($8 + [8]) = $4
	*($0) = $9
	*($9) = (int_64)0
	goto $label$39 
	
.LABEL $label$40
	*($1) = $4
	
.LABEL $label$39
	$3 = CALL memcpy($3, ($6 + [1024]), [88])
	$4 = ($3 + [88])
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$41 }
	*(($3 + [92])) = $2
	CALL $11($2)
	*(($3 + [96])) = [0]
	*($4) = (int_64)0
	
.LABEL $label$41
	$2 = (($6 + [1024]) + [88])
	*($4) = *($2)
	$4 = (($6 + [1024]) + [96])
	$1 = *($4)
	*($4) = [0]
	*(($3 + [96])) = $1
	*($2) = (int_64)0
	*(($3 + [104])) = *((($6 + [1024]) + [104]))
	$2 = ($3 + [116])
	CALL $69($10, *($2))
	$1 = (($6 + [1024]) + [112])
	*(($3 + [112])) = *($1)
	$0 = (($6 + [1024]) + [116])
	$4 = *($0)
	*($2) = $4
	$3 = *((($6 + [1024]) + [120]))
	*(($3 + [120])) = $3
	if ( ($3 == 0) ){ goto $label$43 }
	*($4 + [8]) = $9
	*($1) = $5
	*($0) = (int_64)0
	$4 = [0]
	goto $label$42 
	
.LABEL $label$43
	*($10) = $9
	
.LABEL $label$42
	CALL $69(($6 + [1136]), $4)
	$3 = *($6 + [1112])
	if ( ($3 == 0) ){ goto $label$44 }
	*(($6 + [1116])) = $3
	CALL $11($3)
	
.LABEL $label$44
	$global$0 = ($6 + [1152])
	return ($7 + [4])
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	if ( ((int_64)*(($0 + [24])) == (int_64)*(($1 + [24]))) ){ goto $label$1 }
	CALL eosio_assert([0], [9635])
	
.LABEL $label$1
	$3 = *($1 + [16])
	$2 = *($0 + [16])
	if ( ((int_64)$2 != (int_64)$3) ){ goto $label$5 }
	$2 = *($1 + [80])
	$3 = *($0 + [80])
	if ( (int_64)($3 == 0) ){ goto $label$4 }
	if ( (int_64)($2 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	if ( ((int_64)*(($0 + [24])) == (int_64)*(($1 + [24]))) ){ goto $label$6 }
	CALL eosio_assert([0], [9635])
	$3 = *(($1 + [16]))
	$2 = *(($0 + [16]))
	
.LABEL $label$6
	return ((int_64)$2 >= (int_64)$3)
	
.LABEL $label$4
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$2 }
	
.LABEL $label$3
	return ((int_64)$3 != (int_64)0)
	
.LABEL $label$2
	$3 = *($1 + [64])
	$2 = *($0 + [64])
	if ( ((int_64)$2 != (int_64)$3) ){ goto $label$7 }
	return ((uint_64)*($0 + [56]) <= (uint_64)*($1 + [56]))
	
.LABEL $label$7
	return ((uint_64)$2 <= (uint_64)$3)
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [272])
	$global$0 = $3
	CALL $0()
	*($3 + [256]) = [8245]
	*($3 + [260]) = CALL $1([8245])
	*($3 + [120]) = *($3 + [256])
	CALL $40(($3 + [264]), ($3 + [120]))
	if ( ((int_64)$2 == (int_64)-6569208335818555392) ){ goto $label$1 }
	*($3 + [248]) = [8336]
	*($3 + [252]) = CALL $1([8336])
	*($3 + [112]) = *($3 + [248])
	CALL $40(($3 + [264]), ($3 + [112]))
	if ( ((int_64)$1 != (int_64)6138663591592764928) ){ goto $label$2 }
	*($3 + [232]) = [8348]
	*($3 + [236]) = CALL $1([8348])
	*($3 + [104]) = *($3 + [232])
	CALL $40(($3 + [240]), ($3 + [104]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$2 }
	*($3 + [228]) = [0]
	*($3 + [224]) = [3]
	*($3) = *($3 + [224])
	CALL $42($0, (int_64)6138663591592764928, $3)
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 > (int_64)3625960649986670591) ){ goto $label$13 }
	if ( ((int_64)$2 > (int_64)-4157529991795441665) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)-5001342339331915776) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)-4417468284497035264) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)-4417244175972433920) ){ goto $label$1 }
	*($3 + [140]) = [0]
	*($3 + [136]) = [4]
	*($3 + [88]) = *($3 + [136])
	CALL $44($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$13
	if ( ((int_64)$2 > (int_64)5377860905033793535) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)3625960649986670592) ){ goto $label$9 }
	if ( ((int_64)$2 == (int_64)4292493394837504000) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)4923678490122780672) ){ goto $label$1 }
	*($3 + [132]) = [0]
	*($3 + [128]) = [5]
	*($3 + [96]) = *($3 + [128])
	CALL $46($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$12
	if ( ((int_64)$2 == (int_64)-4157529991795441664) ){ goto $label$8 }
	if ( ((int_64)$2 == (int_64)-4131301141914845184) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)3607749778735104000) ){ goto $label$1 }
	*($3 + [156]) = [0]
	*($3 + [152]) = [6]
	*($3 + [72]) = *($3 + [152])
	CALL $48($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$11
	if ( ((int_64)$2 == (int_64)5377860905033793536) ){ goto $label$7 }
	if ( ((int_64)$2 == (int_64)5378122223695429632) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)8421045207927095296) ){ goto $label$1 }
	*($3 + [220]) = [0]
	*($3 + [216]) = [7]
	*($3 + [8]) = *($3 + [216])
	CALL $42($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [188]) = [0]
	*($3 + [184]) = [8]
	*($3 + [40]) = *($3 + [184])
	CALL $51($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [180]) = [0]
	*($3 + [176]) = [9]
	*($3 + [48]) = *($3 + [176])
	CALL $53($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [172]) = [0]
	*($3 + [168]) = [10]
	*($3 + [56]) = *($3 + [168])
	CALL $46($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [204]) = [0]
	*($3 + [200]) = [11]
	*($3 + [24]) = *($3 + [200])
	CALL $56($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [164]) = [0]
	*($3 + [160]) = [12]
	*($3 + [64]) = *($3 + [160])
	CALL $58($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [212]) = [0]
	*($3 + [208]) = [13]
	*($3 + [16]) = *($3 + [208])
	CALL $60($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [148]) = [0]
	*($3 + [144]) = [14]
	*($3 + [80]) = *($3 + [144])
	CALL $62($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [196]) = [0]
	*($3 + [192]) = [15]
	*($3 + [32]) = *($3 + [192])
	CALL $64($1, $1, ($3 + [32]))
	
.LABEL $label$1
	CALL $5([0])
	$global$0 = ($3 + [272])
}

void .FUNC $36 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$3 = ($global$0 - [144])
	$global$0 = $3
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$1 }
	$4 = ((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)) & [32767]
	if ( ((uint_32)$4) > (uint_32)[16494]) ){ goto $label$1 }
	CALL __addtf3(($3 + [80]), $1, $2, (int_64)0, (int_64)4642929740842270720)
	CALL __addtf3(($3 + [112]), $1, $2, (int_64)0, (int_64)-4580442296012505088)
	CALL __addtf3(($3 + [64]), *($3 + [80]), *((($3 + [80]) + [8])), (int_64)0, (int_64)-4580442296012505088)
	CALL __addtf3(($3 + [96]), *($3 + [112]), *((($3 + [112]) + [8])), (int_64)0, (int_64)4642929740842270720)
	$5 = ((int_64)$2 < (int_64)0)
	CALL __subtf3(($3 + [48]), ( *($3 + [96]) ? *($3 + [64]) : $5 ), ( *((($3 + [96]) + [8])) ? *((($3 + [64]) + [8])) : $5 ), $1, $2)
	$6 = *((($3 + [48]) + [8]))
	$7 = *($3 + [48])
	if ( ((uint_32)$4 > (uint_32)[16382]) ){ goto $label$2 }
	*($3 + [128]) = $7
	*($3 + [136]) = $6
	CALL __floatsitf($3, (CASTING uint_32)(uint_64 (int_64)$2 >> (int_64)63)))
	$2 = *(($3 + [8]))
	$1 = *($3)
	goto $label$1 
	
.LABEL $label$2
	CALL __addtf3(($3 + [32]), $7, $6, $1, $2)
	$4 = CALL __gttf2($7, $6, (int_64)0, (int_64)0)
	$2 = *((($3 + [32]) + [8]))
	$1 = *($3 + [32])
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$1 }
	CALL __addtf3(($3 + [16]), $1, $2, (int_64)0, (int_64)-4611967493404098560)
	$2 = *(($3 + [24]))
	$1 = *($3 + [16])
	
.LABEL $label$1
	*($0) = $1
	*($0 + [8]) = $2
	$global$0 = ($3 + [144])
}

void .FUNC $37 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$3 = ($global$0 - [128])
	$global$0 = $3
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	$4 = ((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)) & [32767]
	if ( ((uint_32)$4) > (uint_32)[16494]) ){ goto $label$3 }
	$5 = (int_64)0
	CALL __addtf3(($3 + [64]), $1, $2, (int_64)0, (int_64)4642929740842270720)
	CALL __addtf3(($3 + [96]), $1, $2, (int_64)0, (int_64)-4580442296012505088)
	CALL __addtf3(($3 + [48]), *($3 + [64]), *((($3 + [64]) + [8])), (int_64)0, (int_64)-4580442296012505088)
	CALL __addtf3(($3 + [80]), *($3 + [96]), *((($3 + [96]) + [8])), (int_64)0, (int_64)4642929740842270720)
	$6 = ((int_64)$2 < (int_64)0)
	CALL __subtf3(($3 + [32]), ( *($3 + [80]) ? *($3 + [48]) : $6 ), ( *((($3 + [80]) + [8])) ? *((($3 + [48]) + [8])) : $6 ), $1, $2)
	$7 = *((($3 + [32]) + [8]))
	$8 = *($3 + [32])
	if ( ((uint_32)$4 > (uint_32)[16382]) ){ goto $label$2 }
	*($3 + [112]) = $8
	*($3 + [120]) = $7
	$2 = ( (int_64)-9223372036854775808 ? (int_64)4611404543450677248 : $6 )
	goto $label$1 
	
.LABEL $label$3
	$5 = $1
	goto $label$1 
	
.LABEL $label$2
	CALL __addtf3(($3 + [16]), $8, $7, $1, $2)
	$4 = CALL __lttf2($8, $7, (int_64)0, (int_64)0)
	$2 = *((($3 + [16]) + [8]))
	$5 = *($3 + [16])
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$1 }
	CALL __addtf3($3, $5, $2, (int_64)0, (int_64)4611404543450677248)
	$2 = *(($3 + [8]))
	$5 = *($3)
	
.LABEL $label$1
	*($0) = $5
	*($0 + [8]) = $2
	$global$0 = ($3 + [128])
}

void .FUNC $34 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $35 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $32 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $17(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}

int_32 .FUNC $33 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$0 = uint_32($3 >> [1])
	if ( ($0 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$0 = *($0 + [4])
	if ( $0 ){ goto $label$1 }
	
.LABEL $label$2
	return [-1]
	
.LABEL $label$1
	$0 = ( ($2 + [1]) ? $0 : ((uint_32)$0 > (uint_32)$2) )
	$1 = ($1 & [255])
	
.LOOP $label$5:
	if ( ($0 == 0) ){ goto $label$4 }
	$2 = ($4 + $0)
	$0 = ($0 + [-1])
	if ( ((int_32)*(($2 + [-1])) != (int_32)$1) ){ goto $label$5 }
	return $0
	
.LABEL $label$4
	return [-1]
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $1($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $28($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $31 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $28($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11170])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($1 + [32])) = *($2)
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	if ( ((int_32)*($6) != (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [15]), $4, [1])
	$4 = (*($3) + [1])
	*(($3 = ($0 + [4]))) = $4
	*(($1 + [48])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$5 = ($1 + [50])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[1]) ){ goto $label$8 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, $4, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [56])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [64])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [72])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [80])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$12
	CALL memcpy($5, $4, [8])
	*($3) = (*($3) + [8])
	$4 = ($1 + [104])
	$3 = *($0 + [4])
	$0 = CALL $169($0, ($1 + [88]))
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [11170])
	$3 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($4, $3, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$0 = CALL $170($0, ($1 + [112]))
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $214 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [16])
	$global$0 = $5
	$6 = *($0)
	$7 = *($6 + [4])
	$8 = *($7 + [132])
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$2 }
	$8 = *($6)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942746098040832, ($5 + [8]), *($7 + [64]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($8)
	
.LABEL $label$1
	$6 = *($0)
	$7 = *($6 + [4])
	$8 = *(($7 + [136]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$4 }
	$8 = *($6)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942746098040831, ($5 + [8]), *($7 + [64]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($8)
	
.LABEL $label$3
	$6 = *($0)
	$7 = *($6 + [4])
	$8 = *(($7 + [140]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$6 }
	$8 = *($6)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942746098040830, ($5 + [8]), *($7 + [64]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($8)
	
.LABEL $label$5
	$8 = *($0)
	$6 = *($8 + [4])
	$0 = *(($6 + [144]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$8 }
	$0 = *($8)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6497942746098040829, ($5 + [8]), *($6 + [64]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx64_remove($0)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

int_32 .FUNC $217 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11170])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11170])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11170])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [24])) = *($2 + [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $216 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [5]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [5])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$3 }
	$6 = [134217727]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [5]) > (uint_32)[67108862]) ){ goto $label$6 }
	$6 = int_32($2 >> [4])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $9(($6 << [5]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	*(($6 + [16])) = (int_64)0
	*(($6 + [24])) = (int_64)0
	$6 = ($6 + [32])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [5]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $34($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [5]))
	$3 = ($2 + ($3 << [5]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	*(($6 + [16])) = (int_64)0
	*(($6 + [24])) = (int_64)0
	$6 = ($6 + [32])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [5]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $11($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	*($1) = *($5)
	*(($1 + [8])) = *(($5 + [8]))
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$1 }
	CALL $98(($1 + [16]), *($5 + [16]), ($5 + [20]))
	
.LABEL $label$1
	*($3) = [9]
	CALL $185($3, ($1 + [16]))
	$6 = *($3)
	if ( ($6 <= [513]) ){ goto $label$3 }
	$5 = CALL $2($6)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$2
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $6)
	CALL $212($3, $1)
	*($1 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)7235159537265672192, *(*($0 + [8])), (int_64)7235159537265672192, $5, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)*($4 + [16]) <= (uint_64)(int_64)7235159537265672192) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $3($5)
	if ( ((uint_64)*($4 + [16]) > (uint_64)(int_64)7235159537265672192) ){ goto $label$4 }
	
.LABEL $label$5
	*(($4 + [16])) = (int_64)7235159537265672193
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [16])
}

int_32 .FUNC $210 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [11166])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $119($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [11170])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

int_32 .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9916])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9916])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $199 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($4)
	*($1) = *($5)
	*($1 + [8]) = *($5 + [8])
	$6 = *($0)
	*(($1 + [24])) = *(($5 + [24]))
	*($1 + [16]) = *($5 + [16])
	$5 = *($4)
	*($1 + [32]) = *($5 + [32])
	*($1 + [40]) = *($5 + [40])
	*($1 + [72]) = CALL current_time()
	$5 = *($4)
	*($1 + [48]) = *($5 + [48])
	*($1 + [56]) = *($5 + [56])
	*($1 + [64]) = *($5 + [64])
	*($1 + [80]) = *($5 + [80])
	CALL $82(($1 + [88]), *($5 + [88]), *(($5 + [92])))
	$5 = *($4)
	$7 = *($5 + [104])
	*($1 + [104]) = $7
	$8 = ($1 + [112])
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$1 }
	CALL $98($8, *(($5 + [112])), ($5 + [116]))
	$7 = *(*($4) + [104])
	
.LABEL $label$1
	*(($1 + [104])) = $7
	$5 = [81]
	*($3 + [8]) = [81]
	$9 = *($1 + [88])
	$4 = *(($1 + [92]))
	$10 = ($4 - $9)
	$7 = (CASTING uint_64)(uint_32 int_32($10 >> [5]))
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$3 }
	$5 = (($10 & [-32]) + $5)
	
.LABEL $label$3
	*($3 + [8]) = ($5 + [8])
	CALL $185(($3 + [8]), $8)
	$4 = *($3 + [8])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$5 = CALL $2($4)
	goto $label$4 
	
.LABEL $label$5
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$4
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($5 + $4)
	CALL $201(($3 + [8]), $1)
	$7 = *($1)
	*($1 + [128]) = CALL db_store_i64(*($6 + [8]), (int_64)-4138661397305229312, *(*($0 + [8])), $7, $5, $4)
	if ( ($4 <= [513]) ){ goto $label$6 }
	CALL $3($5)
	
.LABEL $label$6
	if ( (uint_64)($7 <= *($6 + [16])) ){ goto $label$7 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$5 = ($6 + [8])
	$7 = *($5)
	$0 = *(($0 + [8]))
	$11 = *($0)
	$12 = *($1)
	*($3 + [24]) = (int_64))((int_64)0 - *($1 + [16]))
	*($1 + [132]) = CALL db_idx64_store($7, (int_64)-4138661397305229312, $11, $12, ($3 + [24]))
	$7 = *($0)
	$11 = *($5)
	$12 = *($1)
	*($3 + [24]) = (int_64))((int_64)0 - *(($1 + [72])))
	*(($1 + [136])) = CALL db_idx64_store($11, (int_64)-4138661397305229311, $7, $12, ($3 + [24]))
	$7 = *($0)
	$11 = *($5)
	$12 = *($1)
	*($3 + [24]) = (int_64))((int_64)0 - *(($1 + [48])))
	*(($1 + [140])) = CALL db_idx64_store($11, (int_64)-4138661397305229310, $7, $12, ($3 + [24]))
	$global$0 = ($3 + [32])
}

int_32 .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [9916])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $197($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

int_32 .FUNC $197 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $194 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [4])
	$4 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$1
	CALL memcpy($4, $1, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$5 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $5
	$7 = ($1 + [16])
	if ( ((int_32)(*($6) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9916])
	$5 = *($3)
	
.LABEL $label$3
	CALL memcpy($5, $7, [8])
	$5 = (*($4) + [8])
	*($4) = $5
	$4 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9916])
	$5 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$5 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $5
	*($2) = *(($1 + [32]))
	if ( ((int_32)(*($6) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9916])
	$5 = *($3)
	
.LABEL $label$5
	CALL memcpy($5, $2, [8])
	$5 = (*($4) + [8])
	*($4) = $5
	$4 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9916])
	$5 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	$5 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $5
	*($2 + [14]) = *($1 + [48])
	if ( ((int_32)(*($6) - $5) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [9916])
	$5 = *($3)
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$4 = ($1 + [50])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $5) > (int_32)[1]) ){ goto $label$8 }
	CALL eosio_assert([0], [9916])
	$5 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, $4, [2])
	$5 = (*($4) + [2])
	*(($4 = ($0 + [4]))) = $5
	$7 = ($1 + [56])
	if ( ((int_32)(*($6) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9916])
	$5 = *($3)
	
.LABEL $label$9
	CALL memcpy($5, $7, [8])
	$5 = (*($4) + [8])
	*($4) = $5
	$4 = ($1 + [64])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9916])
	$5 = *($3)
	
.LABEL $label$10
	CALL memcpy($5, $4, [8])
	$5 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $5
	$7 = ($1 + [72])
	if ( ((int_32)(*($6) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9916])
	$5 = *($3)
	
.LABEL $label$11
	CALL memcpy($5, $7, [8])
	$5 = (*($4) + [8])
	*($4) = $5
	$4 = ($1 + [80])
	$7 = ($0 + [8])
	if ( ((int_32)(*($7) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [9916])
	$5 = *($3)
	
.LABEL $label$12
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$8 = (CASTING uint_64)(uint_32 int_32((*(($1 + [92])) - *($1 + [88])) >> [5]))
	
.LOOP $label$13:
	$5 = (CASTING uint_32)(uint_64 $8)
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	$6 = ((int_64)$8) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($7) - $4) > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$14
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	if ( $6 ){ goto $label$13 }
	$6 = *(($1 + [92]))
	$5 = *(($1 + [88]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	CALL $188($0, $5)
	$5 = ($5 + [32])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$16 }
	$4 = *($3)
	
.LABEL $label$15
	$5 = ($1 + [104])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$17
	CALL memcpy($4, $5, [8])
	*(($4 = ($0 + [4]))) = (*($4) + [8])
	$4 = CALL $189($0, ($1 + [112]))
	$global$0 = ($2 + [16])
	return $4
}

int_32 .FUNC $195 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [9916])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9916])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9916])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9916])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [9916])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $192 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $34($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $69(($1 + [112]), *(($1 + [116])))
	$2 = *($1 + [88])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [92])) = $2
	CALL $11($2)
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $11($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $193 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($0)
	*(($4 = ($2 + [16]))) = (int_64)0
	*(($5 = ($2 + [24]))) = (int_64)0
	*(($2 + [8])) = (int_64)0
	*(($6 = ($2 + [20]))) = [0]
	*($5) = [0]
	*($4) = $6
	*($2) = (int_64)0
	$5 = ($3 + [32])
	CALL $68(($2 + [32]), $5, $2)
	CALL $69($4, *($6))
	*($2 + [40]) = ((int_64)*($2 + [40]) + (int_64)1)
	CALL $93($5, ($2 + [32]), *($3))
	$7 = *($2 + [40])
	CALL $69((($2 + [32]) + [16]), *((($2 + [32]) + [20])))
	*($1) = $7
	CALL prints([10233])
	CALL printui(*($1))
	CALL prints([8495])
	$3 = *($0 + [4])
	*($1 + [8]) = *($3)
	*($1 + [16]) = *($3 + [8])
	*(($1 + [32])) = *(($3 + [24]))
	*($1 + [24]) = *($3 + [16])
	$3 = *($0 + [4])
	*($1 + [40]) = *($3 + [32])
	*($1 + [48]) = *($3 + [40])
	*($1 + [56]) = *($3 + [56])
	$7 = *($3 + [64])
	*($1 + [64]) = $7
	*($1 + [72]) = $7
	*($1 + [50]) = *($3 + [48])
	*($1 + [80]) = *($3 + [80])
	CALL $82(($1 + [88]), *($3 + [88]), *(($3 + [92])))
	$3 = *($0 + [4])
	$7 = *($3 + [104])
	*($1 + [104]) = $7
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$1 }
	CALL $98(($1 + [112]), *(($3 + [112])), ($3 + [116]))
	$7 = *(*(($0 + [4])) + [104])
	
.LABEL $label$1
	*(($1 + [104])) = $7
	$global$0 = ($2 + [64])
}

int_32 .FUNC $190 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9916])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9916])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	CALL $193(*($0 + [4]), $1)
	$4 = [83]
	*(($5 = $2) + [8]) = [83]
	$7 = *($1 + [88])
	$6 = *(($1 + [92]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [5]))
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$2 }
	$4 = (($8 & [-32]) + $4)
	
.LABEL $label$2
	*($5 + [8]) = ($4 + [8])
	CALL $185(($5 + [8]), ($1 + [112]))
	$6 = *($5 + [8])
	if ( ($6 <= [513]) ){ goto $label$4 }
	$4 = CALL $2($6)
	goto $label$3 
	
.LABEL $label$4
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$3
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $6)
	CALL $194(($5 + [8]), $1)
	$9 = *($1)
	*($1 + [128]) = CALL db_store_i64(*($3 + [8]), (int_64)-3617168760277827584, *(*($0 + [8])), $9, $4, $6)
	if ( ($6 <= [513]) ){ goto $label$5 }
	CALL $3($4)
	
.LABEL $label$5
	if ( (uint_64)($9 <= *($3 + [16])) ){ goto $label$6 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$9 = *(($3 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	*($5 + [24]) = (int_64))((int_64)0 - *($1 + [64]))
	*($1 + [132]) = CALL db_idx64_store($9, (int_64)-3617168760277827584, $10, $11, ($5 + [24]))
	$global$0 = ($5 + [32])
}