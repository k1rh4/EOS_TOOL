(data (i32.const 8192) "invalid symbol name\00")
(data (i32.const 8212) "invalid supply\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8313) "max-supply must be positive\00")
(data (i32.const 8341) "token with symbol already exists\00")
(data (i32.const 8374) "memo has more than 256 bytes\00")
(data (i32.const 8403) "token with symbol does not exist, create token before issue\00")
(data (i32.const 8463) "invalid quantity\00")
(data (i32.const 8480) "must issue positive quantity\00")
(data (i32.const 8509) "symbol precision mismatch\00")
(data (i32.const 8535) "quantity exceeds available supply\00")
(data (i32.const 8569) "active\00")
(data (i32.const 8576) "cannot transfer to self\00")
(data (i32.const 8600) "to account does not exist\00")
(data (i32.const 8626) "unable to find key\00")
(data (i32.const 8645) "must transfer positive quantity\00")
(data (i32.const 8677) "eostowergame\00")
(data (i32.const 8690) "PVP\00")
(data (i32.const 8704) "\00\e8vH\17\00\00\00\00\\\b2\ec\"\00\00\00\00\d0\ed\90.\00\00\00\00D)5:\00\00\00\00\b8d\d9E\00\00\00\00,\a0}Q\00\00\00\00\a0\db!]\00\00\00\00\14\17\c6h\00\00\00\00\88Rjt\00\00\00\00\fc\8d\0e\80\00\00\00\00p\c9\b2\8b\00\00\00\00\e4\04W\97\00\00\00\00X@\fb\a2\00\00\00")
(data (i32.const 8816) "\c0\d4\01\00\00\00\00\00\a0\86\01\00\00\00\00\00P\c3\00\00\00\00\00\00\a8a\00\00\00\00\00\00\d40\00\00\00\00\00\00j\18\00\00\00\00\00\005\0c\00\00\00\00\00\00\1b\06\00\00\00\00\00\00\0d\03\00\00\00\00\00\00\87\01\00\00\00\00\00\00\c3\00\00\00\00\00\00\00b\00\00\00\00\00\00\001\00\00\00\00\00\00\00")
(data (i32.const 8920) "no balance object found\00")
(data (i32.const 8944) "overdrawn balance\00")
(data (i32.const 8962) "string is too long to be a valid name\00")
(data (i32.const 9000) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 9067) "character is not in allowed character set for names\00")
(data (i32.const 9119) "string is too long to be a valid symbol_code\00")
(data (i32.const 9164) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9217) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9266) "attempt to subtract asset with different symbol\00")
(data (i32.const 9314) "subtraction underflow\00")
(data (i32.const 9336) "subtraction overflow\00")
(data (i32.const 9357) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 9416) "multiplication overflow\00")
(data (i32.const 9440) "multiplication underflow\00")
(data (i32.const 9465) "attempt to add asset with different symbol\00")
(data (i32.const 9508) "addition underflow\00")
(data (i32.const 9527) "addition overflow\00")
(data (i32.const 9545) "error reading iterator\00")
(data (i32.const 9568) "read\00")
(data (i32.const 9573) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9624) "cannot create objects in table of another contract\00")
(data (i32.const 9675) "write\00")
(data (i32.const 9681) "object passed to modify is not in multi_index\00")
(data (i32.const 9727) "cannot modify objects in table of another contract\00")
(data (i32.const 9778) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9837) "EOS\00")
(data (i32.const 9841) "next primary key in table is at autoincrement limit\00")
(data (i32.const 9893) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 9947) "cannot decrement iterator at beginning of table\00")
(data (i32.const 9995) "object passed to erase is not in multi_index\00")
(data (i32.const 10040) "cannot erase objects in table of another contract\00")
(data (i32.const 10090) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10143) "get\00")
(import "env" "require_auth" (func $fimport$0 (param i64)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "db_find_i64" (func $fimport$2 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "db_store_i64" (func $fimport$4 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$5 (param i32 i64 i32 i32)))
(import "env" "memcpy" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "is_account" (func $fimport$7 (param i64) (result i32)))
(import "env" "require_recipient" (func $fimport$8 (param i64)))
(import "env" "db_lowerbound_i64" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$10 (param i32 i32) (result i32)))
(import "env" "__multi3" (func $fimport$11 (param i32 i64 i64 i64 i64)))
(import "env" "db_remove_i64" (func $fimport$12 (param i32)))
(import "env" "action_data_size" (func $fimport$13 (result i32)))
(import "env" "read_action_data" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$15 (param i32 i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$16 (param i32 i32)))
(import "env" "db_previous_i64" (func $fimport$17 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$18 (param i64 i64 i64) (result i32)))
(import "env" "db_idx64_store" (func $fimport$19 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "abort" (func $fimport$20))
(import "env" "memset" (func $fimport$21 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$22 (param i32 i32 i32) (result i32)))
(import "env" "prints_l" (func $fimport$23 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$24 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$25 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$26 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$27 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$28 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$29 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$30 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$31 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$32 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$33 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$34 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$35 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$36 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$37 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$38 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$39 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$40 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$41 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$42 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $34))
(export "_Znwj" (func $66))
(export "_ZdlPv" (func $68))
(export "_Znaj" (func $67))
(export "_ZdaPv" (func $69))
(export "_ZnwjSt11align_val_t" (func $70))
(export "_ZnajSt11align_val_t" (func $71))
(export "_ZdlPvSt11align_val_t" (func $72))
(export "_ZdaPvSt11align_val_t" (func $73))
(table $0 8 8 anyfunc)
(elem (i32.const 1) $13 $18 $1 $28 $31 $5 $23)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 18564))
(global $global$2 i32 (i32.const 18564))


int_32 .FUNC $38 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $83($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = (($4 + [96]) + [24]))) = (int_64)0
	*(($8 = ($4 + [136]))) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [84]) = $2
	*($4 + [80]) = $2
	*($4 + [88]) = ($2 + $7)
	*($4 + [224]) = ($4 + [80])
	*($4 + [48]) = ($4 + [96])
	CALL $50(($4 + [48]), ($4 + [224]))
	*(($9 = (($4 + [32]) + [8]))) = *($4 + [88])
	*($4 + [32]) = *($4 + [80])
	$9 = *($9)
	*(($10 = (($4 + [192]) + [8]))) = $9
	*(($11 = (($4 + [208]) + [8]))) = $9
	$12 = *($4 + [32])
	*($4 + [208]) = $12
	*($4 + [192]) = $12
	$9 = *($11)
	*((($4 + [224]) + [8])) = $9
	*((($4 + [48]) + [24])) = $9
	*($4 + [48]) = $0
	*($4 + [56]) = $1
	$0 = *($4 + [208])
	*($4 + [64]) = $0
	*($4 + [224]) = $0
	*(($9 = (($4 + [160]) + [8]))) = *($3)
	*(($3 = (($4 + [144]) + [8]))) = *($8)
	*($4 + [160]) = *($4 + [112])
	*($4 + [144]) = *($4 + [128])
	$0 = *($4 + [104])
	$1 = *($4 + [96])
	*($10) = *($3)
	*((($4 + [176]) + [8])) = *($9)
	*($4 + [192]) = *($4 + [144])
	*($4 + [176]) = *($4 + [160])
	$3 = (($4 + [48]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$12 = *((($4 + [176]) + [8]))
	*((($4 + [224]) + [8])) = $12
	$13 = *((($4 + [192]) + [8]))
	*((($4 + [208]) + [8])) = $13
	*((($4 + [16]) + [8])) = $12
	*(($4 + [8])) = $13
	$12 = *($4 + [176])
	*($4 + [224]) = $12
	$13 = *($4 + [192])
	*($4 + [208]) = $13
	*($4 + [16]) = $12
	*($4) = $13
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ($4 + [16])), (int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $86($2)
	
.LABEL $label$6
	$global$0 = ($4 + [240])
	return [1]
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [160])
	$global$0 = $2
	*(($3 = (($2 + [64]) + [8]))) = *(($1 + [24]))
	*(($4 = (($2 + [48]) + [8]))) = *(($1 + [40]))
	*($2 + [64]) = *($1 + [16])
	*($2 + [48]) = *($1 + [32])
	$5 = *($1 + [8])
	$6 = *($1)
	$1 = CALL $75(($2 + [32]), ($1 + [48]))
	*((($2 + [96]) + [8])) = *($4)
	*((($2 + [80]) + [8])) = *($3)
	*($2 + [96]) = *($2 + [48])
	*($2 + [80]) = *($2 + [64])
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$3 = (*($0) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [144]) + [8]))) = *((($2 + [80]) + [8]))
	*(($8 = (($2 + [128]) + [8]))) = *((($2 + [96]) + [8]))
	*($2 + [144]) = *($2 + [80])
	*($2 + [128]) = *($2 + [96])
	$4 = CALL $75(($2 + [112]), $1)
	*((($2 + [16]) + [8])) = *($7)
	*(($2 + [8])) = *($8)
	*($2 + [16]) = *($2 + [144])
	*($2) = *($2 + [128])
	CALL void $3((int_32 $6), (int_64 $5), (int_64 ($2 + [16])), (int_32 $2), (int_32 $4), (int_32 $0))
	if ( (*($2 + [112]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [160])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [160])
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9568])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9568])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9568])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9568])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9568])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9568])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [40])) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $42(*($1), ($4 + [48]))
	$global$0 = ($2 + [16])
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [16]))
	*($2 + [32]) = *($1 + [8])
	$4 = *($1)
	$1 = CALL $75(($2 + [16]), ($1 + [24]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$3 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($6 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$5 = CALL $75(($2 + [64]), $1)
	*(($2 + [8])) = *($6)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $4), (int_64 $2), (int_32 $5), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $65($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $76($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $76($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $74($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9568])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9568])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9568])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $40 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [192])
	$global$0 = $3
	*(($4 = $3) + [136]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $83($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [72]) + [24])) = (int_64)0
	*(($4 + [112])) = (int_64)0
	*(($4 + [128])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [176]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $48(($4 + [24]), ($4 + [176]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	$3 = *($3)
	*((($4 + [144]) + [8])) = $3
	*(($6 = (($4 + [160]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [160]) = $7
	*($4 + [144]) = $7
	$3 = *($6)
	*((($4 + [176]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [160])
	*($4 + [40]) = $0
	*($4 + [176]) = $0
	*($4 + [180]) = ($4 + [136])
	*($4 + [176]) = ($4 + [24])
	CALL $49(($4 + [176]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [120]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $86($2)
	$2 = [1]
	if ( ((*($4 + [120]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [128])))
	$global$0 = ($4 + [192])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [192])
	return $2
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$1 = CALL $75($2, ($1 + [16]))
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$6 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($6) + $0))
	
.LABEL $label$1
	$5 = CALL $75(($2 + [16]), $1)
	CALL void $6((int_32 $4), (int_64 $3), (int_64 $5), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9568])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9568])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $42(*($1), ($4 + [16]))
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $75(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $75(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9568])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9568])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9568])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9568])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $42(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [8962])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [9067])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [9000])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [9067])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $9 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL _Znwj($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [8])) = $5
	*($4) = $7
	*($4 + [4]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [4]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [36])) = $6
	*(($4 + [40])) = $5
	*(($4 + [8])) = [0]
	*((($4 + [16]) + [36])) = [0]
	*($4 + [24]) = $1
	*($4 + [16]) = $0
	*($4 + [32]) = $7
	*($4) = (int_64)0
	*($4 + [44 align=4]) = (int_64)0
	$7 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($4 + [44])
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $53($2, $7)
	$2 = *(($4 + [48]))
	$7 = *(($4 + [44]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$7 = [0]
	
.LABEL $label$5
	*($4 + [84]) = $7
	*($4 + [80]) = $7
	*($4 + [88]) = $2
	*($4 + [56]) = ($4 + [80])
	*($4 + [64]) = $3
	CALL $54(($4 + [64]), ($4 + [56]))
	*($4 + [72]) = [0]
	*($4 + [64]) = (int_64)0
	$7 = [16]
	$3 = *((($4 + [16]) + [16]))
	$2 = *(($4 + [36]))
	$5 = ($2 - $3)
	$0 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$7:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$8 }
	$7 = (($5 & [-16]) + $7)
	
.LABEL $label$8
	$3 = *(($4 + [44]))
	$2 = *(($4 + [48]))
	$7 = (($7 + $2) - $3)
	$0 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$9:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$9 }
	if ( ($7 == 0) ){ goto $label$11 }
	CALL $53(($4 + [64]), $7)
	$2 = *($4 + [68])
	$7 = *($4 + [64])
	goto $label$10 
	
.LABEL $label$11
	$2 = [0]
	$7 = [0]
	
.LABEL $label$10
	*($4 + [84]) = $7
	*($4 + [80]) = $7
	*($4 + [88]) = $2
	CALL $55(($4 + [80]), ($4 + [16]))
	$7 = *($4 + [64])
	CALL send_inline($7, (*($4 + [68]) - $7))
	$7 = *($4 + [64])
	if ( ($7 == 0) ){ goto $label$12 }
	*($4 + [68]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$12
	$7 = *($4 + [44])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($4 + [48])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$13
	$7 = *($4 + [32])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($4 + [36])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$14
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$15 }
	*($4 + [4]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$15
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $77($4)
}

void .FUNC $6 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9681])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9727])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9465])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9508])
	$7 = *($1)
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9527])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)*(($1 + [8]))) ){ goto $label$6 }
	CALL eosio_assert([0], [9778])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [32])
	CALL $3(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $7 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	$5 = *($0)
	*($4) = $5
	*($4 + [8]) = $1
	$6 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, *($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $10($4, $6)
	if ( ((int_32)*($6 + [16]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [9573])
	
.LABEL $label$4
	$1 = *($0)
	*($4 + [48]) = $2
	CALL $11($4, $6, $1, ($4 + [48]))
	$6 = *($4 + [24])
	if ( $6 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)$5 == (int_64)CALL current_receiver()) ){ goto $label$5 }
	CALL eosio_assert([0], [9624])
	
.LABEL $label$5
	*(($0 = CALL _Znwj([32])) + [16]) = $4
	*($0 + [8]) = *(($2 + [8]))
	*($0) = *($2)
	CALL memcpy(($4 + [48]), $0, [8])
	*($4 + [72]) = *($0 + [8])
	CALL memcpy((($4 + [48]) | [8]), ($4 + [72]), [8])
	$1 = *($0 + [8])
	$6 = CALL db_store_i64(*(($4 + [8])), (int_64)3607749779137757184, $3, $1, ($4 + [48]), [16])
	*($0 + [20]) = $6
	$2 = ($4 + [16])
	if ( (uint_64)($1 <= *($2)) ){ goto $label$6 }
	*($2) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($4 + [72]) = $0
	$1 = *(($0 + [8]))
	*($4 + [48]) = $1
	*($4 + [44]) = $6
	$7 = ($4 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($4 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $1
	*($2 + [16]) = $6
	*($4 + [72]) = [0]
	*($2) = $0
	*($7) = ($2 + [24])
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $12(($4 + [24]), ($4 + [72]), ($4 + [48]), ($4 + [44]))
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($0)
	
.LABEL $label$7
	$6 = *($4 + [24])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($4 + [28])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL _ZdlPv($2)
	
.LABEL $label$13
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($4 + [24]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $6
	
.LABEL $label$10
	*($7) = $6
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($4 + [80])
}

void .FUNC $4 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $77($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $5 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$4 = ($global$0 - [208])
	$global$0 = $4
	$5 = *($2 + [8])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $8
	$9 = [1]
	$10 = $7
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$5 }
	$9 = [1]
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [8192])
	$7 = *($3)
	if ( ($7 & [1]) ){ goto $label$7 }
	$7 = uint_32($7 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$7 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($7 <= [257]), [8374])
	$9 = [0]
	*(($4 + [136])) = [0]
	*($4 + [120]) = (int_64)-1
	*($4 + [128]) = (int_64)0
	$6 = *($0)
	*($4 + [104]) = $6
	*($4 + [112]) = $5
	$11 = [0]
	$7 = CALL db_find_i64($6, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$11 = CALL $2(($4 + [104]), $7)
	if ( ((int_32)*($11 + [40]) == (int_32)($4 + [104])) ){ goto $label$8 }
	CALL eosio_assert([0], [9573])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [8403])
	CALL require_auth(*($11 + [32]))
	$12 = ($2 + [8])
	$13 = *($12)
	$5 = *($2)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$6 = (uint_64)$13 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$8 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$6 = $8
	$9 = [1]
	$10 = $7
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$6 = $8
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$13 }
	$9 = [1]
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$9 = [0]
	
.LABEL $label$9
	CALL eosio_assert($9, [8463])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [8480])
	CALL eosio_assert(((int_64)$13 == (int_64)*($11 + [8])), [8509])
	CALL eosio_assert(((int_64)$5 <= (int_64))(*($11 + [16]) - *($11))), [8535])
	$6 = *($0)
	*($4 + [144]) = $2
	CALL $6(($4 + [104]), $11, $6, ($4 + [144]))
	$7 = ($11 + [32])
	$6 = *($7)
	*(($9 = (($4 + [88]) + [8]))) = *($12)
	$8 = *($2)
	*((($4 + [8]) + [8])) = *($9)
	*($4 + [88]) = $8
	*($4 + [8]) = *($4 + [88])
	CALL $7($0, $6, ($4 + [8]), $6)
	$6 = *($7)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$14 }
	$8 = *($0)
	*($4 + [72]) = [8569]
	*($4 + [76]) = CALL $80([8569])
	*($4) = *($4 + [72])
	$9 = CALL $8(($4 + [80]), $4)
	$5 = *($7)
	*(($10 = (($4 + [24]) + [24]))) = *(($2 + [8]))
	*($4 + [24]) = $5
	*($4 + [32]) = $1
	*($4 + [40]) = *($2)
	$5 = *($9)
	CALL $75((($4 + [24]) + [32]), $3)
	*(($7 = CALL _Znwj([16]))) = $6
	*($7 + [8]) = $5
	*((($4 + [144]) + [24])) = *($10)
	$9 = (($4 + [24]) + [40])
	*(($10 = (($4 + [144]) + [40]))) = *($9)
	*($9) = [0]
	*($4 + [192]) = $7
	$7 = ($7 + [16])
	*($4 + [200]) = $7
	*($4 + [196]) = $7
	*($4 + [144]) = *($4 + [24])
	*($4 + [152]) = *($4 + [32])
	*($4 + [160]) = *($4 + [40])
	*($4 + [176]) = *($4 + [56])
	*($4 + [56]) = (int_64)0
	CALL $9($8, (int_64)-3617168760277827584, ($4 + [192]), ($4 + [144]))
	if ( ((*($4 + [176]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($10))
	
.LABEL $label$15
	$7 = *($4 + [192])
	if ( ($7 == 0) ){ goto $label$16 }
	*($4 + [196]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$16
	if ( ((*(($4 + [56])) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*(($4 + [64])))
	
.LABEL $label$14
	$10 = *($4 + [128])
	if ( ($10 == 0) ){ goto $label$17 }
	$11 = ($4 + [132])
	$7 = *($11)
	if ( ((int_32)$7 == (int_32)$10) ){ goto $label$19 }
	
.LOOP $label$20:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$21 }
	CALL _ZdlPv($9)
	
.LABEL $label$21
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$20 }
	$7 = *(($4 + [128]))
	goto $label$18 
	
.LABEL $label$19
	$7 = $10
	
.LABEL $label$18
	*($11) = $10
	CALL _ZdlPv($7)
	
.LABEL $label$17
	$global$0 = ($4 + [208])
}

int_32 .FUNC $2 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9545])
	
.LABEL $label$5
	$4 = CALL $83($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	CALL $52(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = *($5 + [8])
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $4(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $86($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $3 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9675])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9675])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9675])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9675])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9675])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC memory ()
{
}

void .FUNC $1 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [128])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	$5 = *($2 + [8])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $8
	$9 = [1]
	$10 = $4
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$5 }
	$9 = [1]
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [8192])
	$9 = [0]
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$6 }
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$6 = $7
	$9 = [1]
	$10 = $4
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$6 = $7
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$10 }
	$9 = [1]
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$9 = [0]
	
.LABEL $label$6
	CALL eosio_assert($9, [8212])
	CALL eosio_assert(((int_64)$8 > (int_64)0), [8313])
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$7 = *($0)
	*($3 + [8]) = $7
	*($3 + [16]) = $5
	$4 = CALL db_find_i64($7, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	if ( ((int_32)*(CALL $2(($3 + [8]), $4) + [40]) == (int_32)($3 + [8])) ){ goto $label$12 }
	$4 = [0]
	CALL eosio_assert([0], [9573])
	goto $label$11 
	
.LABEL $label$13
	$4 = [1]
	goto $label$11 
	
.LABEL $label$12
	$4 = [0]
	
.LABEL $label$11
	CALL eosio_assert($4, [8341])
	$6 = *($0)
	if ( ((int_64)*($3 + [8]) == (int_64)CALL current_receiver()) ){ goto $label$14 }
	CALL eosio_assert([0], [9624])
	
.LABEL $label$14
	*(($4 = CALL _Znwj([56]))) = (int_64)0
	*($4 + [40]) = ($3 + [8])
	*($4 + [8]) = $5
	*($4 + [32]) = $1
	*($4 + [16]) = *($2)
	*(($4 + [24])) = *(($2 + [8]))
	*($3 + [96]) = (($3 + [48]) + [40])
	*($3 + [92]) = ($3 + [48])
	*($3 + [88]) = ($3 + [48])
	*($3 + [104]) = ($3 + [88])
	*($3 + [116]) = ($4 + [16])
	*($3 + [112]) = $4
	*($3 + [120]) = ($4 + [32])
	CALL $3(($3 + [112]), ($3 + [104]))
	$7 = *($4 + [8])
	$10 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)-4157508551318700032, $6, $7, ($3 + [48]), [40])
	*($4 + [44]) = $10
	$9 = (($3 + [8]) + [16])
	if ( (uint_64)($7 <= *($9)) ){ goto $label$15 }
	*($9) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*($3 + [112]) = $4
	$7 = *(($4 + [8]))
	*($3 + [48]) = $7
	*($3 + [88]) = $10
	$2 = ($3 + [36])
	$9 = *($2)
	if ( ((uint_32)$9 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$18 }
	*($9 + [8]) = $7
	*($9 + [16]) = $10
	*($3 + [112]) = [0]
	*($9) = $4
	*($2) = ($9 + [24])
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( $4 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $4(($3 + [32]), ($3 + [112]), ($3 + [48]), ($3 + [88]))
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL _ZdlPv($4)
	
.LABEL $label$16
	$10 = *($3 + [32])
	if ( ($10 == 0) ){ goto $label$19 }
	$2 = ($3 + [36])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$21 }
	
.LOOP $label$22:
	$4 = ($4 + [-24])
	$9 = *($4)
	*($4) = [0]
	if ( ($9 == 0) ){ goto $label$23 }
	CALL _ZdlPv($9)
	
.LABEL $label$23
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$22 }
	$4 = *(($3 + [32]))
	goto $label$20 
	
.LABEL $label$21
	$4 = $10
	
.LABEL $label$20
	*($2) = $10
	CALL _ZdlPv($4)
	
.LABEL $label$19
	$global$0 = ($3 + [128])
}

int_32 .FUNC $14 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6 + [8]) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9573])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $2($0, $5)
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9573])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $15 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = [0]
	*(($3 + [40])) = [0]
	*($3 + [16]) = $1
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$5 = *($0)
	*($3 + [8]) = $5
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, *($2 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $10(($3 + [8]), $0)
	if ( ((int_32)*($4 + [16]) == (int_32)($3 + [8])) ){ goto $label$1 }
	CALL eosio_assert([0], [9573])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8920])
	
.LABEL $label$1
	$5 = *($2)
	CALL eosio_assert(((int_64)*($4) >= (int_64)$5), [8944])
	if ( ((int_64)$5 != (int_64)*($4)) ){ goto $label$5 }
	CALL $16(($3 + [8]), $4)
	$0 = *($3 + [32])
	if ( $0 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	*($3) = $2
	CALL $17(($3 + [8]), $4, $1, $3)
	$0 = *($3 + [32])
	if ( ($0 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($3 + [36])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$7 }
	
.LOOP $label$8:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$9 }
	CALL _ZdlPv($2)
	
.LABEL $label$9
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$8 }
	$4 = *(($3 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$4 = $0
	
.LABEL $label$6
	*($6) = $0
	CALL _ZdlPv($4)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$3
	$global$0 = ($3 + [48])
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9995])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10040])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( ((int_64)*(*(($4 + [-24])) + [8]) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9) + [8]) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10090])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $17 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9681])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9727])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9266])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9314])
	$7 = *($1)
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9336])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)*($3)) ){ goto $label$6 }
	CALL eosio_assert([0], [9778])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

int_32 .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9545])
	
.LABEL $label$5
	$2 = CALL $83($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9568])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9568])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	*($3 + [24]) = $8
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $12(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $86($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $11 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9681])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9727])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9465])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9508])
	$7 = *($1)
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9527])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)*($3)) ){ goto $label$6 }
	CALL eosio_assert([0], [9778])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $12 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $77($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $13 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$5 = ($global$0 - [112])
	$global$0 = $5
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [8576])
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$7($2), [8600])
	$6 = *($3 + [8])
	$7 = [0]
	*(($5 + [104])) = [0]
	*($5 + [80]) = $6
	*($5 + [88]) = (int_64)-1
	*($5 + [96]) = (int_64)0
	*($5 + [72]) = *($0)
	$8 = CALL $14(($5 + [72]), $6, [8626])
	CALL require_recipient($1)
	CALL require_recipient($2)
	$9 = *($3)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$10 = (uint_64)$6 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$12 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$10 = $12
	$7 = [1]
	$13 = $11
	$11 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$10 = $12
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$7 = ((int_32)$11 < (int_32)[6])
	$13 = ($11 + [1])
	$11 = $13
	if ( $7 ){ goto $label$5 }
	$7 = [1]
	$11 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [8463])
	CALL eosio_assert(((int_64)$9 > (int_64)0), [8645])
	CALL eosio_assert(((int_64)$6 == (int_64)*($8 + [8])), [8509])
	$11 = *($4)
	if ( ($11 & [1]) ){ goto $label$7 }
	$11 = uint_32($11 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$11 = *($4 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($11 <= [257]), [8374])
	$11 = ($3 + [8])
	$6 = *($11)
	*((($5 + [56]) + [8])) = $6
	$10 = *($3)
	*((($5 + [24]) + [8])) = $6
	*($5 + [24]) = $10
	*($5 + [56]) = $10
	CALL $15($0, $1, ($5 + [24]))
	$6 = *($11)
	*((($5 + [40]) + [8])) = $6
	$10 = *($3)
	*((($5 + [8]) + [8])) = $6
	*($5 + [8]) = $10
	*($5 + [40]) = $10
	CALL $7($0, $2, ($5 + [8]), $1)
	$13 = *($5 + [96])
	if ( ($13 == 0) ){ goto $label$8 }
	$3 = ($5 + [100])
	$11 = *($3)
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$10 }
	
.LOOP $label$11:
	$11 = ($11 + [-24])
	$7 = *($11)
	*($11) = [0]
	if ( ($7 == 0) ){ goto $label$12 }
	CALL _ZdlPv($7)
	
.LABEL $label$12
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$11 }
	$11 = *(($5 + [96]))
	goto $label$9 
	
.LABEL $label$10
	$11 = $13
	
.LABEL $label$9
	*($3) = $13
	CALL _ZdlPv($11)
	
.LABEL $label$8
	$global$0 = ($5 + [112])
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $18 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [240])
	$global$0 = $4
	*($4 + [208]) = $1
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [8576])
	*($4 + [192]) = [8677]
	*($4 + [196]) = CALL $80([8677])
	*($4 + [40]) = *($4 + [192])
	CALL require_auth(*(CALL $8(($4 + [200]), ($4 + [40]))))
	CALL eosio_assert(CALL $fimport$7($2), [8600])
	$5 = CALL $80([8690])
	if ( ($5 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9119])
	goto $label$3 
	
.LABEL $label$4
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$1 = (int_64)0
	
.LOOP $label$5:
	$6 = *(($5 + [8689]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9164])
	
.LABEL $label$6
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$5 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$1 = (int_64)0
	
.LABEL $label$1
	*($4 + [176]) = (int_64)4000
	*($4 + [184]) = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$7 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$1 = $7
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$1 = $7
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$11 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [8192])
	
.LABEL $label$7
	*(($4 + [168])) = [0]
	*($4 + [152]) = (int_64)-1
	$1 = *($0)
	*($4 + [136]) = $1
	$7 = *($4 + [208])
	*($4 + [144]) = $7
	*($4 + [160]) = (int_64)0
	$5 = CALL db_lowerbound_i64($1, $7, (int_64)4406679876405297152, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$13 }
	$6 = ($4 + [184])
	$5 = CALL $19(($4 + [136]), $5)
	if ( ((int_64)*($5 + [8]) != (int_64)*($4 + [208])) ){ goto $label$14 }
	$9 = [2]
	goto $label$12 
	
.LABEL $label$14
	$9 = [0]
	goto $label$12 
	
.LABEL $label$13
	$9 = [36]
	
.LABEL $label$12
	
.LOOP $label$15:
	goto $label$86 
	
.LABEL $label$88
	if ( ((int_64)*(($5 + [40])) != (int_64)*($6)) ){ goto $label$44 }
	goto $label$45 
	
.LABEL $label$87
	$5 = CALL $19(($4 + [136]), $5)
	if ( ((int_64)*($5 + [8]) == (int_64)*($4 + [208])) ){ goto $label$43 }
	$9 = [0]
	goto $label$15 
	
.LABEL $label$86
	$5 = CALL db_next_i64(*($5 + [52]), ($4 + [80]))
	if ( ((int_32)$5 >= (int_32)[0]) ){ goto $label$46 }
	$9 = [36]
	goto $label$15 
	
.LABEL $label$85
	$1 = *($0)
	*($4 + [124]) = ($4 + [208])
	*($4 + [120]) = ($4 + [136])
	*($4 + [128]) = ($4 + [176])
	*($4 + [232]) = $1
	if ( ((int_64)*($4 + [136]) == (int_64)CALL current_receiver()) ){ goto $label$17 }
	$9 = [37]
	goto $label$15 
	
.LABEL $label$84
	CALL eosio_assert([0], [9624])
	$9 = [38]
	goto $label$15 
	
.LABEL $label$83
	*($4 + [84]) = ($4 + [120])
	*($4 + [80]) = ($4 + [136])
	*($4 + [88]) = ($4 + [232])
	*(($5 = CALL _Znwj([64])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = ($4 + [136])
	CALL $20(($4 + [80]), $5)
	*($4 + [224]) = $5
	$1 = *($5)
	*($4 + [80]) = $1
	$8 = *($5 + [52])
	*($4 + [220]) = $8
	$10 = ($4 + [164])
	$6 = *($10)
	if ( ((uint_32)$6 >= (uint_32)*(($4 + [168]))) ){ goto $label$16 }
	$9 = [41]
	goto $label$15 
	
.LABEL $label$82
	*($6 + [8]) = $1
	*($6 + [16]) = $8
	*($4 + [224]) = [0]
	*($6) = $5
	*($10) = ($6 + [24])
	$5 = *($4 + [224])
	*($4 + [224]) = [0]
	if ( $5 ){ goto $label$39 }
	goto $label$40 
	
.LABEL $label$81
	CALL $21(($4 + [160]), ($4 + [224]), ($4 + [80]), ($4 + [220]))
	$5 = *($4 + [224])
	*($4 + [224]) = [0]
	if ( ($5 == 0) ){ goto $label$41 }
	$9 = [40]
	goto $label$15 
	
.LABEL $label$80
	CALL _ZdlPv($5)
	goto $label$42 
	
.LABEL $label$79
	$1 = *($0)
	*($4 + [80]) = ($4 + [176])
	CALL $22(($4 + [136]), $5, $1, ($4 + [80]))
	$9 = [4]
	goto $label$15 
	
.LABEL $label$78
	$10 = ($4 + [184])
	$1 = *($10)
	$6 = [0]
	*(($4 + [112])) = [0]
	*($4 + [88]) = $1
	*($4 + [96]) = (int_64)-1
	*($4 + [104]) = (int_64)0
	*($4 + [80]) = *($0)
	$11 = CALL $14(($4 + [80]), $1, [8626])
	CALL require_recipient(*($4 + [208]))
	CALL require_recipient($2)
	if ( ((uint_64)((int_64)*($4 + [176]) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$38 }
	$9 = [27]
	goto $label$15 
	
.LABEL $label$77
	$1 = (uint_64)*($10) >> (uint_64)(int_64)8)
	$5 = [0]
	$9 = [28]
	goto $label$15 
	
.LABEL $label$76
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$9 = [30]
	goto $label$15 
	
.LABEL $label$75
	$7 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$9 = [31]
	goto $label$15 
	
.LABEL $label$74
	$1 = $7
	$6 = [1]
	$8 = $5
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$73
	$1 = $7
	$9 = [33]
	goto $label$15 
	
.LABEL $label$72
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$21 }
	$9 = [34]
	goto $label$15 
	
.LABEL $label$71
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$18 }
	$9 = [35]
	goto $label$15 
	
.LABEL $label$70
	$6 = [1]
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$69
	$6 = [0]
	$9 = [5]
	goto $label$15 
	
.LABEL $label$68
	CALL eosio_assert($6, [8463])
	CALL eosio_assert(((int_64)*($4 + [176]) > (int_64)0), [8645])
	CALL eosio_assert(((int_64)*($10) == (int_64)*($11 + [8])), [8509])
	$5 = *($3)
	if ( ($5 & [1]) ){ goto $label$33 }
	$9 = [26]
	goto $label$15 
	
.LABEL $label$67
	$5 = uint_32($5 >> [1])
	goto $label$32 
	
.LABEL $label$66
	$5 = *($3 + [4])
	$9 = [7]
	goto $label$15 
	
.LABEL $label$65
	CALL eosio_assert(($5 <= [257]), [8374])
	$5 = (($4 + [176]) + [8])
	$1 = *($5)
	*((($4 + [64]) + [8])) = $1
	*((($4 + [24]) + [8])) = $1
	$1 = *($4 + [176])
	*($4 + [64]) = $1
	*($4 + [24]) = $1
	CALL $15($0, *($4 + [208]), ($4 + [24]))
	$1 = *($5)
	*((($4 + [48]) + [8])) = $1
	$7 = *($0)
	*((($4 + [8]) + [8])) = $1
	$1 = *($4 + [176])
	*($4 + [48]) = $1
	*($4 + [8]) = $1
	CALL $7($0, $2, ($4 + [8]), $7)
	$8 = *($4 + [104])
	if ( ($8 == 0) ){ goto $label$31 }
	$9 = [8]
	goto $label$15 
	
.LABEL $label$64
	$0 = ($4 + [108])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$30 }
	$9 = [9]
	goto $label$15 
	
.LABEL $label$63
	$9 = [10]
	goto $label$15 
	
.LABEL $label$62
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$28 }
	$9 = [11]
	goto $label$15 
	
.LABEL $label$61
	CALL _ZdlPv($6)
	$9 = [12]
	goto $label$15 
	
.LABEL $label$60
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$29 }
	$9 = [13]
	goto $label$15 
	
.LABEL $label$59
	$5 = *(($4 + [104]))
	goto $label$27 
	
.LABEL $label$58
	$5 = $8
	$9 = [14]
	goto $label$15 
	
.LABEL $label$57
	*($0) = $8
	CALL _ZdlPv($5)
	$9 = [15]
	goto $label$15 
	
.LABEL $label$56
	$8 = *($4 + [160])
	if ( ($8 == 0) ){ goto $label$26 }
	$9 = [16]
	goto $label$15 
	
.LABEL $label$55
	$0 = ($4 + [164])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$25 }
	$9 = [17]
	goto $label$15 
	
.LABEL $label$54
	$9 = [18]
	goto $label$15 
	
.LABEL $label$53
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$23 }
	$9 = [19]
	goto $label$15 
	
.LABEL $label$52
	CALL _ZdlPv($6)
	$9 = [20]
	goto $label$15 
	
.LABEL $label$51
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$24 }
	$9 = [21]
	goto $label$15 
	
.LABEL $label$50
	$5 = *(($4 + [160]))
	goto $label$22 
	
.LABEL $label$49
	$5 = $8
	$9 = [22]
	goto $label$15 
	
.LABEL $label$48
	*($0) = $8
	CALL _ZdlPv($5)
	$9 = [23]
	goto $label$15 
	
.LABEL $label$47
	$global$0 = ($4 + [240])
	return 
	
.LABEL $label$46
	$9 = [1]
	goto $label$15 
	
.LABEL $label$45
	$9 = [3]
	goto $label$15 
	
.LABEL $label$44
	$9 = [0]
	goto $label$15 
	
.LABEL $label$43
	$9 = [2]
	goto $label$15 
	
.LABEL $label$42
	$9 = [4]
	goto $label$15 
	
.LABEL $label$41
	$9 = [4]
	goto $label$15 
	
.LABEL $label$40
	$9 = [4]
	goto $label$15 
	
.LABEL $label$39
	$9 = [40]
	goto $label$15 
	
.LABEL $label$38
	$9 = [5]
	goto $label$15 
	
.LABEL $label$37
	$9 = [28]
	goto $label$15 
	
.LABEL $label$36
	$9 = [5]
	goto $label$15 
	
.LABEL $label$35
	$9 = [28]
	goto $label$15 
	
.LABEL $label$34
	$9 = [5]
	goto $label$15 
	
.LABEL $label$33
	$9 = [6]
	goto $label$15 
	
.LABEL $label$32
	$9 = [7]
	goto $label$15 
	
.LABEL $label$31
	$9 = [15]
	goto $label$15 
	
.LABEL $label$30
	$9 = [25]
	goto $label$15 
	
.LABEL $label$29
	$9 = [10]
	goto $label$15 
	
.LABEL $label$28
	$9 = [12]
	goto $label$15 
	
.LABEL $label$27
	$9 = [14]
	goto $label$15 
	
.LABEL $label$26
	$9 = [23]
	goto $label$15 
	
.LABEL $label$25
	$9 = [24]
	goto $label$15 
	
.LABEL $label$24
	$9 = [18]
	goto $label$15 
	
.LABEL $label$23
	$9 = [20]
	goto $label$15 
	
.LABEL $label$22
	$9 = [22]
	goto $label$15 
	
.LABEL $label$21
	$9 = [29]
	goto $label$15 
	
.LABEL $label$20
	$9 = [29]
	goto $label$15 
	
.LABEL $label$19
	$9 = [32]
	goto $label$15 
	
.LABEL $label$18
	$9 = [33]
	goto $label$15 
	
.LABEL $label$17
	$9 = [38]
	goto $label$15 
	
.LABEL $label$16
	$9 = [39]
	goto $label$15 
	$9
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9545])
	
.LABEL $label$5
	$4 = CALL $83($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([64])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	CALL $51(($3 + [32]), ($3 + [24]))
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $21(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $86($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9675])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9675])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $59 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [52]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9947])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)4406679876405297152)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [9893])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9893])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $19(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9568])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9568])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9568])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9568])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	$5 = ($4 + [32])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9568])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	$5 = (*($0) + [8])
	*(($0 = ($1 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9568])
	$5 = *($0)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $5, [8])
	*(($4 + [40])) = *($2 + [8])
	*($0) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9568])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9568])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9568])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9568])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$5 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9568])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9568])
	$4 = *($1)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9568])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9568])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9568])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9568])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9568])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $77($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9675])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9675])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9675])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9675])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $56(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [112])
	$global$0 = $3
	CALL memory()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 <= (int_64)-4420679809785397249) ){ goto $label$7 }
	if ( ((int_64)$2 > (int_64)5031766152489992191) ){ goto $label$6 }
	if ( ((int_64)$2 == (int_64)-4420679809785397248) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*($3 + [92]) = [0]
	*($3 + [88]) = [1]
	*($3 + [16]) = *($3 + [88])
	CALL $35($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$7
	if ( ((int_64)$2 == (int_64)-5003315098102202368) ){ goto $label$4 }
	if ( ((int_64)$2 == (int_64)-4420683452005744640) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)-4420681206544274944) ){ goto $label$1 }
	*($3 + [84]) = [0]
	*($3 + [80]) = [2]
	*($3 + [24]) = *($3 + [80])
	CALL $36($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$6
	if ( ((int_64)$2 == (int_64)8516769789752901632) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)5031766152489992192) ){ goto $label$1 }
	*($3 + [108]) = [0]
	*($3 + [104]) = [3]
	*($3) = *($3 + [104])
	CALL $37($1, $1, $3)
	goto $label$1 
	
.LABEL $label$5
	*($3 + [68]) = [0]
	*($3 + [64]) = [4]
	*($3 + [40]) = *($3 + [64])
	CALL $38($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [60]) = [0]
	*($3 + [56]) = [5]
	*($3 + [48]) = *($3 + [56])
	CALL $35($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [100]) = [0]
	*($3 + [96]) = [6]
	*($3 + [8]) = *($3 + [96])
	CALL $39($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [76]) = [0]
	*($3 + [72]) = [7]
	*($3 + [32]) = *($3 + [72])
	CALL $40($1, $1, ($3 + [32]))
	
.LABEL $label$1
	CALL $79([0])
	$global$0 = ($3 + [112])
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9675])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9675])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9675])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9675])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9675])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $35 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [176])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $83($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [72]) + [24])) = (int_64)0
	*(($4 + [112])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [160]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $44(($4 + [24]), ($4 + [160]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	$3 = *($3)
	*((($4 + [128]) + [8])) = $3
	*(($6 = (($4 + [144]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [144]) = $7
	*($4 + [128]) = $7
	$3 = *($6)
	*((($4 + [160]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [144])
	*($4 + [40]) = $0
	*($4 + [160]) = $0
	*($4 + [164]) = ($4 + [120])
	*($4 + [160]) = ($4 + [24])
	CALL $45(($4 + [160]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [104]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $86($2)
	$2 = [1]
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [112])))
	$global$0 = ($4 + [176])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [176])
	return $2
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4406679876405297152, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $19($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $59(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9841])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	$5 = *($5 + [12])
	*($1 + [32]) = *($5)
	*(($1 + [40])) = *(($5 + [8]))
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [32])
	CALL $60(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)4406679876405297152, *(*($0 + [8])), $7, $5, [48])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $28 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [112])
	$global$0 = $5
	*($5 + [64]) = $1
	CALL require_auth($1)
	*(($5 + [56])) = [0]
	*($5 + [32]) = $1
	*($5 + [40]) = (int_64)-1
	$6 = *($0)
	*($5 + [24]) = $6
	*($5 + [48]) = (int_64)0
	$7 = CALL db_lowerbound_i64($6, $1, (int_64)4406679876405297152, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = ($4 + [8])
	$7 = CALL $19(($5 + [24]), $7)
	if ( ((int_64)*($7 + [8]) != (int_64)*($5 + [64])) ){ goto $label$3 }
	$9 = [2]
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	goto $label$1 
	
.LABEL $label$2
	$9 = [14]
	
.LABEL $label$1
	
.LOOP $label$4:
	goto $label$38 
	
.LABEL $label$41
	$7 = CALL $19(($5 + [24]), $7)
	if ( ((int_64)*($7 + [8]) != (int_64)*($5 + [64])) ){ goto $label$17 }
	$9 = [2]
	goto $label$4 
	
.LABEL $label$40
	if ( ((int_64)*(($7 + [24])) != (int_64)*($8)) ){ goto $label$19 }
	$9 = [3]
	goto $label$4 
	
.LABEL $label$39
	if ( ((int_64)*(($7 + [40])) == (int_64)*(($3 + [8]))) ){ goto $label$18 }
	$9 = [0]
	goto $label$4 
	
.LABEL $label$38
	$7 = CALL db_next_i64(*($7 + [52]), ($5 + [8]))
	if ( ((int_32)$7 >= (int_32)[0]) ){ goto $label$20 }
	$9 = [14]
	goto $label$4 
	
.LABEL $label$37
	$1 = *($0)
	*($5 + [16]) = $4
	*($5 + [20]) = $3
	*($5 + [12]) = ($5 + [64])
	*($5 + [8]) = ($5 + [24])
	*($5 + [104]) = $1
	if ( ((int_64)*($5 + [24]) == (int_64)CALL current_receiver()) ){ goto $label$9 }
	$9 = [15]
	goto $label$4 
	
.LABEL $label$36
	CALL eosio_assert([0], [9624])
	$9 = [16]
	goto $label$4 
	
.LABEL $label$35
	*($5 + [84]) = ($5 + [8])
	*($5 + [80]) = ($5 + [24])
	*($5 + [88]) = ($5 + [104])
	*(($7 = CALL _Znwj([64])) + [16]) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($7 + [24]) = (int_64)0
	*($7 + [32]) = (int_64)0
	*($7 + [40]) = (int_64)0
	*($7 + [48]) = ($5 + [24])
	CALL $29(($5 + [80]), $7)
	*($5 + [96]) = $7
	$1 = *($7)
	*($5 + [80]) = $1
	$3 = *($7 + [52])
	*($5 + [76]) = $3
	$0 = ($5 + [52])
	$8 = *($0)
	if ( ((uint_32)$8 >= (uint_32)*(($5 + [56]))) ){ goto $label$8 }
	$9 = [20]
	goto $label$4 
	
.LABEL $label$34
	*($8 + [8]) = $1
	*($8 + [16]) = $3
	*($5 + [96]) = [0]
	*($8) = $7
	*($0) = ($8 + [24])
	$7 = *($5 + [96])
	*($5 + [96]) = [0]
	if ( $7 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$33
	CALL $21(($5 + [48]), ($5 + [96]), ($5 + [80]), ($5 + [76]))
	$7 = *($5 + [96])
	*($5 + [96]) = [0]
	if ( ($7 == 0) ){ goto $label$7 }
	$9 = [18]
	goto $label$4 
	
.LABEL $label$32
	CALL _ZdlPv($7)
	$9 = [19]
	goto $label$4 
	
.LABEL $label$31
	$3 = *($5 + [48])
	if ( ($3 == 0) ){ goto $label$16 }
	$9 = [5]
	goto $label$4 
	
.LABEL $label$30
	$0 = ($5 + [52])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	$9 = [6]
	goto $label$4 
	
.LABEL $label$29
	$9 = [7]
	goto $label$4 
	
.LABEL $label$28
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$11 }
	$9 = [8]
	goto $label$4 
	
.LABEL $label$27
	CALL _ZdlPv($8)
	$9 = [9]
	goto $label$4 
	
.LABEL $label$26
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$12 }
	$9 = [10]
	goto $label$4 
	
.LABEL $label$25
	$7 = *(($5 + [48]))
	goto $label$10 
	
.LABEL $label$24
	$7 = $3
	$9 = [11]
	goto $label$4 
	
.LABEL $label$23
	*($0) = $3
	CALL _ZdlPv($7)
	$9 = [12]
	goto $label$4 
	
.LABEL $label$22
	$global$0 = ($5 + [112])
	return 
	
.LABEL $label$21
	$1 = *($0)
	*($5 + [12]) = $3
	*($5 + [8]) = $4
	CALL $30(($5 + [24]), $7, $1, ($5 + [8]))
	$3 = *($5 + [48])
	if ( $3 ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$20
	$9 = [1]
	goto $label$4 
	
.LABEL $label$19
	$9 = [0]
	goto $label$4 
	
.LABEL $label$18
	$9 = [4]
	goto $label$4 
	
.LABEL $label$17
	$9 = [0]
	goto $label$4 
	
.LABEL $label$16
	$9 = [12]
	goto $label$4 
	
.LABEL $label$15
	$9 = [12]
	goto $label$4 
	
.LABEL $label$14
	$9 = [5]
	goto $label$4 
	
.LABEL $label$13
	$9 = [13]
	goto $label$4 
	
.LABEL $label$12
	$9 = [7]
	goto $label$4 
	
.LABEL $label$11
	$9 = [9]
	goto $label$4 
	
.LABEL $label$10
	$9 = [11]
	goto $label$4 
	
.LABEL $label$9
	$9 = [16]
	goto $label$4 
	
.LABEL $label$8
	$9 = [17]
	goto $label$4 
	
.LABEL $label$7
	$9 = [19]
	goto $label$4 
	
.LABEL $label$6
	$9 = [19]
	goto $label$4 
	
.LABEL $label$5
	$9 = [18]
	goto $label$4 
	$9
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $58(CALL $57($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9675])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9675])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $77($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4406679876405297152, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $19($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $59(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9841])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = CALL $80([9837])
	if ( ($6 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9119])
	goto $label$7 
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$7 = (int_64)0
	
.LOOP $label$9:
	$8 = *(($6 + [9836]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [9164])
	
.LABEL $label$10
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$9 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$5 
	
.LABEL $label$6
	$9 = (int_64)4
	
.LABEL $label$5
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$7 = $10
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$7 = $10
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $8 ){ goto $label$15 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [8192])
	
.LABEL $label$11
	*($1 + [16]) = (int_64)0
	*(($1 + [24])) = $9
	$6 = *($5 + [8])
	*($1 + [32]) = *($6)
	*(($1 + [40])) = *(($6 + [8]))
	$8 = $2
	$6 = ($8 + [-48])
	$global$0 = $6
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = $8
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [32])
	CALL $60(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)4406679876405297152, *(*($0 + [8])), $7, $6, [48])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$16 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$global$0 = ($3 + [48])
}

void .FUNC $23 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	$6 = ($global$0 - [256])
	$global$0 = $6
	*($6 + [208]) = $1
	*($6 + [192]) = [8677]
	*($6 + [196]) = CALL $80([8677])
	*($6 + [56]) = *($6 + [192])
	CALL require_auth(*(CALL $8(($6 + [200]), ($6 + [56]))))
	$7 = [0]
	*(($6 + [184])) = [0]
	*($6 + [160]) = $1
	*($6 + [168]) = (int_64)-1
	$8 = *($0)
	*($6 + [152]) = $8
	*($6 + [176]) = (int_64)0
	$9 = CALL db_lowerbound_i64($8, $1, (int_64)4406679876405297152, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$4 }
	$10 = ($3 + [8])
	$7 = CALL $19(($6 + [152]), $9)
	if ( ((int_64)*($7 + [8]) != (int_64)*($6 + [208])) ){ goto $label$3 }
	$11 = [2]
	goto $label$1 
	
.LABEL $label$4
	$12 = ($6 + [152])
	goto $label$2 
	
.LABEL $label$3
	$11 = [0]
	goto $label$1 
	
.LABEL $label$2
	$11 = [5]
	
.LABEL $label$1
	
.LOOP $label$5:
	goto $label$201 
	
.LABEL $label$204
	if ( ((int_64)*(($7 + [24])) != (int_64)*($10)) ){ goto $label$94 }
	$11 = [3]
	goto $label$5 
	
.LABEL $label$203
	if ( ((int_64)*(($7 + [40])) != (int_64)*(($4 + [8]))) ){ goto $label$92 }
	goto $label$93 
	
.LABEL $label$202
	$7 = CALL $19(($6 + [152]), $9)
	if ( ((int_64)*($7 + [8]) == (int_64)*($6 + [208])) ){ goto $label$91 }
	$11 = [0]
	goto $label$5 
	
.LABEL $label$201
	$9 = CALL db_next_i64(*($7 + [52]), ($6 + [96]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$95 }
	$11 = [108]
	goto $label$5 
	
.LABEL $label$200
	$7 = [0]
	$12 = ($6 + [152])
	goto $label$90 
	
.LABEL $label$199
	$12 = ($6 + [152])
	$11 = [5]
	goto $label$5 
	
.LABEL $label$198
	$13 = *(($7 + [40]))
	$14 = *($7 + [32])
	$1 = (int_64)-1
	$9 = [-8]
	$11 = [6]
	goto $label$5 
	
.LABEL $label$197
	$10 = ($9 + [8])
	$8 = *(($9 + [8712]))
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((uint_64)$1 > (uint_64)(int_64)12) ){ goto $label$88 }
	$11 = [107]
	goto $label$5 
	
.LABEL $label$196
	$9 = $10
	if ( (uint_64)($8 <= $14) ){ goto $label$89 }
	$11 = [7]
	goto $label$5 
	
.LABEL $label$195
	if ( (uint_64)($1 <= (int_64)13) ){ goto $label$87 }
	$11 = [99]
	goto $label$5 
	
.LABEL $label$194
	$1 = *($0)
	if ( ($7 == 0) ){ goto $label$8 }
	$11 = [100]
	goto $label$5 
	
.LABEL $label$193
	*($6 + [96]) = $3
	CALL $24(($6 + [152]), $7, $1, ($6 + [96]))
	$7 = *($6 + [176])
	if ( $7 ){ goto $label$29 }
	$11 = [50]
	goto $label$5 
	
.LABEL $label$192
	$global$0 = ($6 + [256])
	return 
	
.LABEL $label$191
	$15 = *($4 + [8])
	if ( (uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$86 }
	$11 = [9]
	goto $label$5 
	
.LABEL $label$190
	CALL eosio_assert([0], [9217])
	$11 = [10]
	goto $label$5 
	
.LABEL $label$189
	$16 = (uint_64)$15 >> (uint_64)(int_64)8)
	$9 = [0]
	$11 = [11]
	goto $label$5 
	
.LABEL $label$188
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$82 }
	$11 = [92]
	goto $label$5 
	
.LABEL $label$187
	$17 = (uint_64)$16 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$16 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$11 = [93]
	goto $label$5 
	
.LABEL $label$186
	$16 = $17
	$18 = $9
	$9 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[6]) ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$185
	$16 = $17
	$11 = [96]
	goto $label$5 
	
.LABEL $label$184
	if ( ((int_64)((int_64)$16 & (int_64)65280) != (int_64)0) ){ goto $label$81 }
	$11 = [97]
	goto $label$5 
	
.LABEL $label$183
	$16 = (uint_64)$16 >> (uint_64)(int_64)8)
	$18 = ((int_32)$9 < (int_32)[6])
	$19 = ($9 + [1])
	$9 = $19
	if ( $18 ){ goto $label$9 }
	$11 = [98]
	goto $label$5 
	
.LABEL $label$182
	$9 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$85 }
	$11 = [94]
	goto $label$5 
	
.LABEL $label$181
	if ( ((int_64)$13 == (int_64)$15) ){ goto $label$80 }
	$11 = [13]
	goto $label$5 
	
.LABEL $label$180
	CALL eosio_assert([0], [9266])
	$11 = [14]
	goto $label$5 
	
.LABEL $label$179
	$17 = (int_64)
	if ( ((int_64)$17($8 - $14)) <= (int_64)-4611686018427387904) ){ goto $label$77 }
	$11 = [90]
	goto $label$5 
	
.LABEL $label$178
	if ( ((int_64)$17 < (int_64)4611686018427387904) ){ goto $label$76 }
	$11 = [91]
	goto $label$5 
	
.LABEL $label$177
	CALL eosio_assert([0], [9336])
	goto $label$75 
	
.LABEL $label$176
	CALL eosio_assert([0], [8192])
	if ( ((int_64)$13 != (int_64)$15) ){ goto $label$78 }
	goto $label$79 
	
.LABEL $label$175
	CALL eosio_assert([0], [9314])
	$11 = [16]
	goto $label$5 
	
.LABEL $label$174
	$20 = ((uint_64)((int_64)*(($10 + [8816])) * (int_64)*($3)) / (uint_64)(int_64)10000)
	$9 = [0]
	$13 = *(($4 + [8]))
	$8 = (uint_64)$13 >> (uint_64)(int_64)8
	$16 = $8)
	$11 = [17]
	goto $label$5 
	
.LABEL $label$173
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$71 }
	$11 = [83]
	goto $label$5 
	
.LABEL $label$172
	$14 = (uint_64)$16 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$16 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$11 = [84]
	goto $label$5 
	
.LABEL $label$171
	$16 = $14
	$10 = $9
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$170
	$16 = $14
	$11 = [87]
	goto $label$5 
	
.LABEL $label$169
	if ( ((int_64)((int_64)$16 & (int_64)65280) != (int_64)0) ){ goto $label$70 }
	$11 = [88]
	goto $label$5 
	
.LABEL $label$168
	$16 = (uint_64)$16 >> (uint_64)(int_64)8)
	$10 = ((int_32)$9 < (int_32)[6])
	$18 = ($9 + [1])
	$9 = $18
	if ( $10 ){ goto $label$11 }
	$11 = [89]
	goto $label$5 
	
.LABEL $label$167
	$9 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[6]) ){ goto $label$74 }
	$11 = [85]
	goto $label$5 
	
.LABEL $label$166
	$14 = $13
	goto $label$69 
	
.LABEL $label$165
	CALL eosio_assert([0], [8192])
	$14 = *(($4 + [8]))
	$8 = (uint_64)$14 >> (uint_64)(int_64)8)
	$11 = [19]
	goto $label$5 
	
.LABEL $label$164
	$9 = [0]
	$11 = [20]
	goto $label$5 
	
.LABEL $label$163
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$65 }
	$11 = [76]
	goto $label$5 
	
.LABEL $label$162
	$16 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$11 = [77]
	goto $label$5 
	
.LABEL $label$161
	$8 = $16
	$10 = $9
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$160
	$8 = $16
	$11 = [80]
	goto $label$5 
	
.LABEL $label$159
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$64 }
	$11 = [81]
	goto $label$5 
	
.LABEL $label$158
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$9 < (int_32)[6])
	$18 = ($9 + [1])
	$9 = $18
	if ( $10 ){ goto $label$13 }
	$11 = [82]
	goto $label$5 
	
.LABEL $label$157
	$9 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[6]) ){ goto $label$68 }
	$11 = [78]
	goto $label$5 
	
.LABEL $label$156
	if ( ((int_64)$13 == (int_64)$15) ){ goto $label$63 }
	$11 = [22]
	goto $label$5 
	
.LABEL $label$155
	CALL eosio_assert([0], [9357])
	$11 = [23]
	goto $label$5 
	
.LABEL $label$154
	$9 = ((int_64)$20 <= (int_64)$17)
	if ( $9 ){ goto $label$60 }
	$11 = [24]
	goto $label$5 
	
.LABEL $label$153
	if ( ((uint_64)$1 >= (uint_64)(int_64)13) ){ goto $label$59 }
	$11 = [25]
	goto $label$5 
	
.LABEL $label$152
	if ( ((int_64)$17 <= (int_64)-4611686018427387904) ){ goto $label$58 }
	$11 = [71]
	goto $label$5 
	
.LABEL $label$151
	if ( ((int_64)$17 < (int_64)4611686018427387904) ){ goto $label$54 }
	$11 = [72]
	goto $label$5 
	
.LABEL $label$150
	CALL eosio_assert([0], [9527])
	goto $label$53 
	
.LABEL $label$149
	CALL eosio_assert([0], [8192])
	if ( ((int_64)$13 != (int_64)$15) ){ goto $label$61 }
	goto $label$62 
	
.LABEL $label$148
	$17 = ( $20 ? $17 : $9 )
	$15 = ( $13 ? $15 : $9 )
	if ( ((int_64)$14 != (int_64)$15) ){ goto $label$15 }
	$11 = [75]
	goto $label$5 
	
.LABEL $label$147
	$15 = $14
	if ( ((int_64)$17 > (int_64)-4611686018427387904) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$146
	*($6 + [104]) = $3
	*($6 + [108]) = $4
	*($6 + [100]) = ($6 + [208])
	*($6 + [96]) = ($6 + [152])
	*($6 + [224]) = $1
	if ( ((int_64)*($6 + [152]) == (int_64)CALL current_receiver()) ){ goto $label$7 }
	$11 = [102]
	goto $label$5 
	
.LABEL $label$145
	CALL eosio_assert([0], [9624])
	$11 = [103]
	goto $label$5 
	
.LABEL $label$144
	*($6 + [140]) = ($6 + [96])
	*($6 + [136]) = ($6 + [152])
	*($6 + [144]) = ($6 + [224])
	*(($9 = CALL _Znwj([64])) + [16]) = (int_64)0
	*($9 + [8]) = (int_64)0
	*($9 + [24]) = (int_64)0
	*($9 + [32]) = (int_64)0
	*($9 + [40]) = (int_64)0
	*($9 + [48]) = $12
	CALL $25(($6 + [136]), $9)
	*($6 + [248]) = $9
	$1 = *($9)
	*($6 + [136]) = $1
	$7 = *($9 + [52])
	*($6 + [240]) = $7
	$18 = ($6 + [180])
	$10 = *($18)
	if ( ((uint_32)$10 >= (uint_32)*(($6 + [184]))) ){ goto $label$6 }
	$11 = [106]
	goto $label$5 
	
.LABEL $label$143
	*($10 + [8]) = $1
	*($10 + [16]) = $7
	*($6 + [248]) = [0]
	*($10) = $9
	*($18) = ($10 + [24])
	$9 = *($6 + [248])
	*($6 + [248]) = [0]
	if ( ($9 == 0) ){ goto $label$31 }
	$11 = [105]
	goto $label$5 
	
.LABEL $label$142
	CALL _ZdlPv($9)
	$7 = *($6 + [176])
	if ( $7 ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$141
	CALL eosio_assert([0], [9465])
	if ( ((int_64)$17 > (int_64)-4611686018427387904) ){ goto $label$57 }
	$11 = [26]
	goto $label$5 
	
.LABEL $label$140
	CALL eosio_assert([0], [9508])
	$11 = [27]
	goto $label$5 
	
.LABEL $label$139
	CALL __multi3(($6 + [40]), $17, (int_64)$17 >> (int_64)63), (int_64)5, (int_64)0)
	*($6 + [144]) = $15
	*($6 + [136]) = $17
	$1 = *(($6 + [48]))
	$8 = *($6 + [40])
	if ( (( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$52 }
	$11 = [68]
	goto $label$5 
	
.LABEL $label$138
	if ( ( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$16 }
	$11 = [69]
	goto $label$5 
	
.LABEL $label$137
	CALL eosio_assert([0], [9440])
	$11 = [70]
	goto $label$5 
	
.LABEL $label$136
	*($6 + [136]) = $8
	$1 = *($0)
	if ( ($7 == 0) ){ goto $label$51 }
	$11 = [29]
	goto $label$5 
	
.LABEL $label$135
	*($6 + [96]) = $3
	*($6 + [100]) = ($6 + [136])
	CALL $26(($6 + [152]), $7, $1, ($6 + [96]))
	goto $label$49 
	
.LABEL $label$134
	CALL eosio_assert([0], [9416])
	*($6 + [136]) = $8
	$1 = *($0)
	if ( $7 ){ goto $label$50 }
	$11 = [62]
	goto $label$5 
	
.LABEL $label$133
	*($6 + [104]) = $3
	*($6 + [100]) = ($6 + [208])
	*($6 + [96]) = ($6 + [152])
	*($6 + [108]) = ($6 + [136])
	*($6 + [248]) = $1
	if ( ((int_64)*($6 + [152]) == (int_64)CALL current_receiver()) ){ goto $label$18 }
	$11 = [63]
	goto $label$5 
	
.LABEL $label$132
	CALL eosio_assert([0], [9624])
	$11 = [64]
	goto $label$5 
	
.LABEL $label$131
	*($6 + [228]) = ($6 + [96])
	*($6 + [224]) = ($6 + [152])
	*($6 + [232]) = ($6 + [248])
	*(($9 = CALL _Znwj([64])) + [16]) = (int_64)0
	*($9 + [8]) = (int_64)0
	*($9 + [24]) = (int_64)0
	*($9 + [32]) = (int_64)0
	*($9 + [40]) = (int_64)0
	*($9 + [48]) = $12
	CALL $27(($6 + [224]), $9)
	*($6 + [240]) = $9
	$1 = *($9)
	*($6 + [224]) = $1
	$7 = *($9 + [52])
	*($6 + [220]) = $7
	$18 = ($6 + [180])
	$10 = *($18)
	if ( ((uint_32)$10 >= (uint_32)*(($6 + [184]))) ){ goto $label$17 }
	$11 = [67]
	goto $label$5 
	
.LABEL $label$130
	*($10 + [8]) = $1
	*($10 + [16]) = $7
	*($6 + [240]) = [0]
	*($10) = $9
	*($18) = ($10 + [24])
	$9 = *($6 + [240])
	*($6 + [240]) = [0]
	if ( $9 ){ goto $label$46 }
	goto $label$47 
	
.LABEL $label$129
	CALL $21(($6 + [176]), ($6 + [248]), ($6 + [136]), ($6 + [240]))
	$9 = *($6 + [248])
	*($6 + [248]) = [0]
	if ( $9 ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$128
	CALL $21(($6 + [176]), ($6 + [240]), ($6 + [224]), ($6 + [220]))
	$9 = *($6 + [240])
	*($6 + [240]) = [0]
	if ( ($9 == 0) ){ goto $label$48 }
	$11 = [66]
	goto $label$5 
	
.LABEL $label$127
	CALL _ZdlPv($9)
	$11 = [30]
	goto $label$5 
	
.LABEL $label$126
	CALL eosio_assert(CALL $fimport$7($2), [8600])
	$18 = ($6 + [144])
	$1 = *($18)
	$10 = [0]
	*(($6 + [128])) = [0]
	*($6 + [104]) = $1
	*($6 + [112]) = (int_64)-1
	*($6 + [120]) = (int_64)0
	*($6 + [96]) = *($0)
	$19 = CALL $14(($6 + [96]), $1, [8626])
	CALL require_recipient(*($6 + [208]))
	CALL require_recipient($2)
	if ( ((uint_64)((int_64)*($6 + [136]) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$45 }
	$11 = [53]
	goto $label$5 
	
.LABEL $label$125
	$1 = (uint_64)*($18) >> (uint_64)(int_64)8)
	$9 = [0]
	$11 = [54]
	goto $label$5 
	
.LABEL $label$124
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$11 = [56]
	goto $label$5 
	
.LABEL $label$123
	$8 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$11 = [57]
	goto $label$5 
	
.LABEL $label$122
	$1 = $8
	$10 = [1]
	$7 = $9
	$9 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$121
	$1 = $8
	$11 = [59]
	goto $label$5 
	
.LABEL $label$120
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$22 }
	$11 = [60]
	goto $label$5 
	
.LABEL $label$119
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$9 < (int_32)[6])
	$7 = ($9 + [1])
	$9 = $7
	if ( $10 ){ goto $label$19 }
	$11 = [61]
	goto $label$5 
	
.LABEL $label$118
	$10 = [1]
	$9 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$117
	$10 = [0]
	$11 = [31]
	goto $label$5 
	
.LABEL $label$116
	CALL eosio_assert($10, [8463])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($6 + [136]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [8645])
	CALL eosio_assert(((int_64)*($18) == (int_64)*($19 + [8])), [8509])
	$9 = *($5)
	if ( ($9 & [1]) ){ goto $label$40 }
	$11 = [52]
	goto $label$5 
	
.LABEL $label$115
	$9 = uint_32($9 >> [1])
	goto $label$39 
	
.LABEL $label$114
	$9 = *($5 + [4])
	$11 = [33]
	goto $label$5 
	
.LABEL $label$113
	CALL eosio_assert(($9 <= [257]), [8374])
	$9 = (($6 + [136]) + [8])
	$1 = *($9)
	*((($6 + [80]) + [8])) = $1
	*((($6 + [24]) + [8])) = $1
	$1 = *($6 + [136])
	*($6 + [80]) = $1
	*($6 + [24]) = $1
	CALL $15($0, *($6 + [208]), ($6 + [24]))
	$1 = *($9)
	*((($6 + [64]) + [8])) = $1
	$8 = *($0)
	*((($6 + [8]) + [8])) = $1
	$1 = *($6 + [136])
	*($6 + [64]) = $1
	*($6 + [8]) = $1
	CALL $7($0, $2, ($6 + [8]), $8)
	$7 = *($6 + [120])
	if ( ($7 == 0) ){ goto $label$38 }
	$11 = [34]
	goto $label$5 
	
.LABEL $label$112
	$18 = ($6 + [124])
	$9 = *($18)
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$37 }
	$11 = [35]
	goto $label$5 
	
.LABEL $label$111
	$11 = [36]
	goto $label$5 
	
.LABEL $label$110
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$35 }
	$11 = [37]
	goto $label$5 
	
.LABEL $label$109
	CALL _ZdlPv($10)
	$11 = [38]
	goto $label$5 
	
.LABEL $label$108
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$36 }
	$11 = [39]
	goto $label$5 
	
.LABEL $label$107
	$9 = *(($6 + [120]))
	goto $label$34 
	
.LABEL $label$106
	$9 = $7
	$11 = [40]
	goto $label$5 
	
.LABEL $label$105
	*($18) = $7
	CALL _ZdlPv($9)
	$11 = [41]
	goto $label$5 
	
.LABEL $label$104
	$7 = *($6 + [176])
	if ( ($7 == 0) ){ goto $label$30 }
	$11 = [42]
	goto $label$5 
	
.LABEL $label$103
	$18 = ($6 + [180])
	$9 = *($18)
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$26 }
	$11 = [43]
	goto $label$5 
	
.LABEL $label$102
	$11 = [44]
	goto $label$5 
	
.LABEL $label$101
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$24 }
	$11 = [45]
	goto $label$5 
	
.LABEL $label$100
	CALL _ZdlPv($10)
	$11 = [46]
	goto $label$5 
	
.LABEL $label$99
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$25 }
	$11 = [47]
	goto $label$5 
	
.LABEL $label$98
	$9 = *(($6 + [176]))
	goto $label$23 
	
.LABEL $label$97
	$9 = $7
	$11 = [48]
	goto $label$5 
	
.LABEL $label$96
	*($18) = $7
	CALL _ZdlPv($9)
	$global$0 = ($6 + [256])
	return 
	
.LABEL $label$95
	$11 = [1]
	goto $label$5 
	
.LABEL $label$94
	$11 = [0]
	goto $label$5 
	
.LABEL $label$93
	$11 = [4]
	goto $label$5 
	
.LABEL $label$92
	$11 = [0]
	goto $label$5 
	
.LABEL $label$91
	$11 = [2]
	goto $label$5 
	
.LABEL $label$90
	$11 = [5]
	goto $label$5 
	
.LABEL $label$89
	$11 = [6]
	goto $label$5 
	
.LABEL $label$88
	$11 = [7]
	goto $label$5 
	
.LABEL $label$87
	$11 = [8]
	goto $label$5 
	
.LABEL $label$86
	$11 = [10]
	goto $label$5 
	
.LABEL $label$85
	$11 = [11]
	goto $label$5 
	
.LABEL $label$84
	$11 = [11]
	goto $label$5 
	
.LABEL $label$83
	$11 = [94]
	goto $label$5 
	
.LABEL $label$82
	$11 = [12]
	goto $label$5 
	
.LABEL $label$81
	$11 = [12]
	goto $label$5 
	
.LABEL $label$80
	$11 = [14]
	goto $label$5 
	
.LABEL $label$79
	$11 = [14]
	goto $label$5 
	
.LABEL $label$78
	$11 = [13]
	goto $label$5 
	
.LABEL $label$77
	$11 = [15]
	goto $label$5 
	
.LABEL $label$76
	$11 = [16]
	goto $label$5 
	
.LABEL $label$75
	$11 = [16]
	goto $label$5 
	
.LABEL $label$74
	$11 = [17]
	goto $label$5 
	
.LABEL $label$73
	$11 = [17]
	goto $label$5 
	
.LABEL $label$72
	$11 = [85]
	goto $label$5 
	
.LABEL $label$71
	$11 = [18]
	goto $label$5 
	
.LABEL $label$70
	$11 = [18]
	goto $label$5 
	
.LABEL $label$69
	$11 = [19]
	goto $label$5 
	
.LABEL $label$68
	$11 = [20]
	goto $label$5 
	
.LABEL $label$67
	$11 = [20]
	goto $label$5 
	
.LABEL $label$66
	$11 = [78]
	goto $label$5 
	
.LABEL $label$65
	$11 = [21]
	goto $label$5 
	
.LABEL $label$64
	$11 = [21]
	goto $label$5 
	
.LABEL $label$63
	$11 = [23]
	goto $label$5 
	
.LABEL $label$62
	$11 = [23]
	goto $label$5 
	
.LABEL $label$61
	$11 = [22]
	goto $label$5 
	
.LABEL $label$60
	$11 = [73]
	goto $label$5 
	
.LABEL $label$59
	$11 = [73]
	goto $label$5 
	
.LABEL $label$58
	$11 = [26]
	goto $label$5 
	
.LABEL $label$57
	$11 = [71]
	goto $label$5 
	
.LABEL $label$56
	$11 = [71]
	goto $label$5 
	
.LABEL $label$55
	$11 = [26]
	goto $label$5 
	
.LABEL $label$54
	$11 = [27]
	goto $label$5 
	
.LABEL $label$53
	$11 = [27]
	goto $label$5 
	
.LABEL $label$52
	$11 = [28]
	goto $label$5 
	
.LABEL $label$51
	$11 = [62]
	goto $label$5 
	
.LABEL $label$50
	$11 = [29]
	goto $label$5 
	
.LABEL $label$49
	$11 = [30]
	goto $label$5 
	
.LABEL $label$48
	$11 = [30]
	goto $label$5 
	
.LABEL $label$47
	$11 = [30]
	goto $label$5 
	
.LABEL $label$46
	$11 = [66]
	goto $label$5 
	
.LABEL $label$45
	$11 = [31]
	goto $label$5 
	
.LABEL $label$44
	$11 = [54]
	goto $label$5 
	
.LABEL $label$43
	$11 = [31]
	goto $label$5 
	
.LABEL $label$42
	$11 = [54]
	goto $label$5 
	
.LABEL $label$41
	$11 = [31]
	goto $label$5 
	
.LABEL $label$40
	$11 = [32]
	goto $label$5 
	
.LABEL $label$39
	$11 = [33]
	goto $label$5 
	
.LABEL $label$38
	$11 = [41]
	goto $label$5 
	
.LABEL $label$37
	$11 = [51]
	goto $label$5 
	
.LABEL $label$36
	$11 = [36]
	goto $label$5 
	
.LABEL $label$35
	$11 = [38]
	goto $label$5 
	
.LABEL $label$34
	$11 = [40]
	goto $label$5 
	
.LABEL $label$33
	$11 = [41]
	goto $label$5 
	
.LABEL $label$32
	$11 = [105]
	goto $label$5 
	
.LABEL $label$31
	$11 = [41]
	goto $label$5 
	
.LABEL $label$30
	$11 = [50]
	goto $label$5 
	
.LABEL $label$29
	$11 = [42]
	goto $label$5 
	
.LABEL $label$28
	$11 = [50]
	goto $label$5 
	
.LABEL $label$27
	$11 = [42]
	goto $label$5 
	
.LABEL $label$26
	$11 = [49]
	goto $label$5 
	
.LABEL $label$25
	$11 = [44]
	goto $label$5 
	
.LABEL $label$24
	$11 = [46]
	goto $label$5 
	
.LABEL $label$23
	$11 = [48]
	goto $label$5 
	
.LABEL $label$22
	$11 = [55]
	goto $label$5 
	
.LABEL $label$21
	$11 = [55]
	goto $label$5 
	
.LABEL $label$20
	$11 = [58]
	goto $label$5 
	
.LABEL $label$19
	$11 = [59]
	goto $label$5 
	
.LABEL $label$18
	$11 = [64]
	goto $label$5 
	
.LABEL $label$17
	$11 = [65]
	goto $label$5 
	
.LABEL $label$16
	$11 = [70]
	goto $label$5 
	
.LABEL $label$15
	$11 = [74]
	goto $label$5 
	
.LABEL $label$14
	$11 = [79]
	goto $label$5 
	
.LABEL $label$13
	$11 = [80]
	goto $label$5 
	
.LABEL $label$12
	$11 = [86]
	goto $label$5 
	
.LABEL $label$11
	$11 = [87]
	goto $label$5 
	
.LABEL $label$10
	$11 = [95]
	goto $label$5 
	
.LABEL $label$9
	$11 = [96]
	goto $label$5 
	
.LABEL $label$8
	$11 = [101]
	goto $label$5 
	
.LABEL $label$7
	$11 = [103]
	goto $label$5 
	
.LABEL $label$6
	$11 = [104]
	goto $label$5 
	$11
}

void .FUNC $22 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9681])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9727])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9465])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [32]) + (int_64)*($3))
	*($1 + [32]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9508])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9527])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9778])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $3
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [32])
	CALL $60(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [52]), $2, $4, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [48])
}

void .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4406679876405297152, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $19($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $59(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9841])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	$5 = *($5 + [12])
	*($1 + [32]) = *($5)
	*(($1 + [40])) = *(($5 + [8]))
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [32])
	CALL $60(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)4406679876405297152, *(*($0 + [8])), $7, $5, [48])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $24 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9681])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9727])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9465])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [16]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9508])
	if ( ((int_64)*(($1 + [16])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9527])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9778])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $3
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [32])
	CALL $60(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [52]), $2, $4, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [48])
}

void .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4406679876405297152, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $19($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $59(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9841])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	$5 = *($5 + [12])
	*($1 + [32]) = *($5)
	*(($1 + [40])) = *(($5 + [8]))
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [32])
	CALL $60(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)4406679876405297152, *(*($0 + [8])), $7, $5, [48])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $26 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9681])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9727])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *($3)
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9465])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [16]) + (int_64)*($7))
	*($1 + [16]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9508])
	$8 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9527])
	
.LABEL $label$5
	$3 = *($3 + [4])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$6 }
	CALL eosio_assert([0], [9465])
	
.LABEL $label$6
	$8 = ((int_64)*($1 + [32]) + (int_64)*($3))
	*($1 + [32]) = $8
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$8 >= (int_64)4611686018427387904) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [9508])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [9527])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9778])
	
.LABEL $label$7
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = $4
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [32])
	CALL $60(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [52]), $2, $3, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$global$0 = ($5 + [48])
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $86($0)
	
.LABEL $label$1
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10143])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $53($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9568])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9568])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9568])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9568])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9568])
	$4 = *($1)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $83($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10148])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $83($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9545])
	
.LABEL $label$5
	$4 = CALL $83($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	CALL $64(($3 + [32]), ($3 + [24]))
	*($5 + [40]) = [-1]
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $33(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $86($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9675])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9675])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9675])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9675])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$5 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9675])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $5, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9675])
	$4 = *($1)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [8]), [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9675])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9675])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9675])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $5, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9675])
	$4 = *($1)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $62 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [36]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9947])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)8226246931857276928)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [9893])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9893])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $61(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $86 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [18552])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [18360]
	$3 = (((int_32)$1 * (int_32)[12]) + [18360])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

int_32 .FUNC $85 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10160]) == 0) ){ goto $label$2 }
	$2 = *([0] + [10164])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [10160]) = [1]
	$2 = ($2 << [16])
	*([0] + [10164]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10164])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [10164]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [10160]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [10160]) = [1]
	$3 = ($3 << [16])
	*([0] + [10164]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10164])
	
.LABEL $label$10
	*([0] + [10164]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $85($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)*(($1 + [8200])) == (int_32)*($9)) ){ goto $label$10 }
	CALL eosio_assert([0], [8227])
	
.LABEL $label$10
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$11:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$13 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$14 }
	
.LABEL $label$13
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$15 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$15
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$12
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$11 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $83 (int_32 $0)
{
	return CALL $84([10168], $0)
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $83($1)
	
.LABEL $label$2
	*(CALL $78()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $83(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $86($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $81 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $78())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $82($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $80 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $86($0)
	
.LABEL $label$1
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $81(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [10148])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $81(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $77 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $74 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $39 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [104]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $83($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [80])) = (int_64)0
	*(($4 + [96])) = [0]
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	$6 = ($2 + $5)
	*($4 + [56]) = $6
	$3 = $2
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9568])
	$6 = *(($4 + [56]))
	$3 = *($4 + [52])
	
.LABEL $label$4
	CALL memcpy(($4 + [64]), $3, [8])
	$3 = ($3 + [8])
	*($4 + [52]) = $3
	$7 = (($4 + [64]) + [8])
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9568])
	$6 = *((($4 + [48]) + [8]))
	$3 = *($4 + [52])
	
.LABEL $label$5
	CALL memcpy($7, $3, [8])
	$3 = ($3 + [8])
	*($4 + [52]) = $3
	*($4 + [16]) = (int_64)0
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9568])
	$3 = *($4 + [52])
	
.LABEL $label$6
	CALL memcpy(($4 + [16]), $3, [8])
	*(($4 + [80])) = *($4 + [16])
	*($4 + [52]) = ($3 + [8])
	CALL $42(($4 + [48]), (($4 + [64]) + [24]))
	*(($3 = ($4 + [8]))) = *((($4 + [48]) + [8]))
	*($4) = *($4 + [48])
	$3 = *($3)
	*((($4 + [112]) + [8])) = $3
	*(($6 = (($4 + [128]) + [8]))) = $3
	$8 = *($4)
	*($4 + [128]) = $8
	*($4 + [112]) = $8
	$3 = *($6)
	*((($4 + [144]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [128])
	*($4 + [32]) = $0
	*($4 + [144]) = $0
	*($4 + [148]) = ($4 + [104])
	*($4 + [144]) = ($4 + [16])
	CALL $43(($4 + [144]), ($4 + [64]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$9 }
	$2 = [1]
	if ( (*($4 + [88]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $86($2)
	$2 = [1]
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv(*(($4 + [96])))
	$global$0 = ($4 + [160])
	return $2
	
.LABEL $label$7
	$global$0 = ($4 + [160])
	return $2
}

int_32 .FUNC $36 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [104]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $83($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [72]) + [24])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [144]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $46(($4 + [24]), ($4 + [144]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	$3 = *($3)
	*((($4 + [112]) + [8])) = $3
	*(($6 = (($4 + [128]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [128]) = $7
	*($4 + [112]) = $7
	$3 = *($6)
	*((($4 + [144]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [128])
	*($4 + [40]) = $0
	*($4 + [144]) = $0
	*($4 + [148]) = ($4 + [104])
	*($4 + [144]) = ($4 + [24])
	CALL $47(($4 + [144]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [88]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $86($2)
	$2 = [1]
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [96])))
	$global$0 = ($4 + [160])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [160])
	return $2
}

int_32 .FUNC $37 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $83($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [104]))) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [76]) = $2
	*($4 + [72]) = $2
	*($4 + [80]) = ($2 + $7)
	*($4 + [144]) = ($4 + [72])
	*($4 + [40]) = ($4 + [88])
	CALL $41(($4 + [40]), ($4 + [144]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [80])
	*($4 + [24]) = *($4 + [72])
	$10 = *($9)
	*(($3 = (($4 + [112]) + [8]))) = $10
	*(($9 = (($4 + [128]) + [8]))) = $10
	$11 = *($4 + [24])
	*($4 + [128]) = $11
	*($4 + [112]) = $11
	$10 = *($9)
	*((($4 + [144]) + [8])) = $10
	*(($4 + [64])) = $10
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$0 = *($4 + [128])
	*($4 + [56]) = $0
	*($4 + [144]) = $0
	*($3) = *($8)
	*($4 + [112]) = *($4 + [96])
	$0 = *($4 + [88])
	*($9) = *($3)
	*($4 + [128]) = *($4 + [112])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$1 = *((($4 + [128]) + [8]))
	*((($4 + [144]) + [8])) = $1
	*((($4 + [8]) + [8])) = $1
	$1 = *($4 + [128])
	*($4 + [8]) = $1
	*($4 + [144]) = $1
	CALL void $3((int_32 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $86($2)
	
.LABEL $label$6
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $78 ()
{
	return [10152]
}

void .FUNC $79 (int_32 $0)
{
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)8226246931857276928, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $61($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $62(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9841])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	$2 = $2
	$6 = ($2 + [-32])
	$global$0 = $6
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = $2
	*($3 + [24]) = ($3 + [8])
	$2 = ($1 + [8])
	*($3 + [36]) = $2
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	CALL $63(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)8226246931857276928, *(*($0 + [8])), $7, $6, [32])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = *(($4 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *($1)
	*($3 + [32]) = *($2)
	*($1 + [40]) = CALL db_idx64_store($7, (int_64)8226246931857276928, $9, $10, ($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $33 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $77($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $30 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9681])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9727])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *($3)
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9465])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [16]) + (int_64)*($7))
	*($1 + [16]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9508])
	$8 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9527])
	
.LABEL $label$5
	$3 = *($3 + [4])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$6 }
	CALL eosio_assert([0], [9465])
	
.LABEL $label$6
	$8 = ((int_64)*($1 + [32]) + (int_64)*($3))
	*($1 + [32]) = $8
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$8 >= (int_64)4611686018427387904) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [9508])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [9527])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9778])
	
.LABEL $label$7
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = $4
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [32])
	CALL $60(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [52]), $2, $3, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$global$0 = ($5 + [48])
}

void .FUNC $31 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [112])
	$global$0 = $5
	*($5 + [64]) = $2
	CALL require_auth($1)
	*(($6 = ($5 + [56]))) = [0]
	*($5 + [32]) = $1
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	*($5 + [60]) = [0]
	$1 = *($0)
	*($5 + [24]) = $1
	*($5 + [16]) = $3
	*($5 + [12]) = ($5 + [64])
	*($5 + [8]) = ($5 + [24])
	*($5 + [104]) = $1
	if ( ((int_64)$1 == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9624])
	
.LABEL $label$1
	*($5 + [84]) = ($5 + [8])
	*($5 + [80]) = ($5 + [24])
	*($5 + [88]) = ($5 + [104])
	*(($3 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = ($5 + [24])
	CALL $32(($5 + [80]), $3)
	*($5 + [96]) = $3
	$1 = *($3)
	*($5 + [80]) = $1
	$7 = *($3 + [36])
	*($5 + [76]) = $7
	$8 = ($5 + [52])
	$0 = *($8)
	if ( ((uint_32)$0 >= (uint_32)*($6)) ){ goto $label$4 }
	*($0 + [8]) = $1
	*($0 + [16]) = $7
	*($5 + [96]) = [0]
	*($0) = $3
	*($8) = ($0 + [24])
	$3 = *($5 + [96])
	*($5 + [96]) = [0]
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $33(($5 + [48]), ($5 + [96]), ($5 + [80]), ($5 + [76]))
	$3 = *($5 + [96])
	*($5 + [96]) = [0]
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv($3)
	
.LABEL $label$2
	$6 = *($5 + [48])
	if ( ($6 == 0) ){ goto $label$5 }
	$7 = ($5 + [52])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	CALL _ZdlPv($0)
	
.LABEL $label$9
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$8 }
	$3 = *(($5 + [48]))
	goto $label$6 
	
.LABEL $label$7
	$3 = $6
	
.LABEL $label$6
	*($7) = $6
	CALL _ZdlPv($3)
	
.LABEL $label$5
	$global$0 = ($5 + [112])
}