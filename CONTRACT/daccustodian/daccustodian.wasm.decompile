(data (i32.const 8240) "failed to allocate pages\00")
(data (i32.const 8272) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 8352) "%llu\00ERR::NOMINATECAND_ALREADY_REGISTERED::Candidate is already registered and active.\00")
(data (i32.const 8439) "ERR::DAC_NOT_FOUND::DAC not found in directory\00")
(data (i32.const 8486) "\n\00")
(data (i32.const 8488) "This action is deprecated call `updatebioe` instead.\00")
(data (i32.const 8541) "ERR::UPDATEBIO_NOT_CURRENT_REG_CANDIDATE::Candidate is not already registered.\00")
(data (i32.const 8620) "ERR::UPDATEBIO_BIO_SIZE_TOO_LONG::The bio should be less than 256 characters.\00")
(data (i32.const 8698) "This action is deprecated call `updatereqpae` instead.\00")
(data (i32.const 8753) "ERR::UPDATEREQPAY_UNDER_ZERO::Requested pay amount must not be negative.\00")
(data (i32.const 8826) "ERR::UPDATEREQPAY_EXCESS_MAX_PAY::Requested pay amount limit for a candidate was exceeded.\00")
(data (i32.const 8917) "ERR::UPDATEREQPAY_NOT_CURRENT_REG_CANDIDATE::Candidate is not already registered.\00")
(data (i32.const 8999) "This action is deprecated call `nominatecane` instead.\00")
(data (i32.const 9054) "ERR::NOMINATECAND_PAY_LIMIT_EXCEEDED::Requested pay limit for a candidate was exceeded.\00")
(data (i32.const 9142) "ERR::NOMINATECAND_STAKING_FUNDS_INCOMPLETE::A registering candidate must transfer sufficient tokens to the contract for staking.\00")
(data (i32.const 9271) "This action is deprecated call `withdrawcane` instead.\00")
(data (i32.const 9326) "This action is deprecated call `firecande` instead.\00")
(data (i32.const 9378) "This action is deprecated call `unstakee` instead.\00")
(data (i32.const 9429) "ERR::UNSTAKE_CAND_NOT_REGISTERED::Candidate is not already registered.\00")
(data (i32.const 9500) "Returning locked up stake. Thank you.\00")
(data (i32.const 9538) "This action is deprecated call `resigncuste` instead.\00")
(data (i32.const 9592) "This action is deprecated call `firecuste` instead.\00")
(data (i32.const 9644) "ERR::PERMISSION_NOT_EXIST::Permission does not exist\00")
(data (i32.const 9697) "ERR::UNSTAKE_CANNOT_UNSTAKE_FROM_ACTIVE_CAND::Cannot unstake tokens for an active candidate. Call withdrawcand first.\00")
(data (i32.const 9815) "ERR::UNSTAKE_CANNOT_UNSTAKE_UNDER_TIME_LOCK::Cannot unstake tokens before they are unlocked from the time delay.\00")
(data (i32.const 9928) "ERR::REMOVECUSTODIAN_NOT_CURRENT_CUSTODIAN::The entered account name is not for a current custodian.\00")
(data (i32.const 10029) "Remove custodian from the custodians table.\00")
(data (i32.const 10073) "ERR::REMOVECANDIDATE_NOT_CURRENT_CANDIDATE::Candidate is not already registered.\00")
(data (i32.const 10154) "Remove from nominated candidate by setting them to inactive.\00")
(data (i32.const 10215) "This action is deprecated call `votecuste` instead.\00")
(data (i32.const 10267) "ERR::VOTECUST_MAX_VOTES_EXCEEDED::Max number of allowed votes was exceeded.\00")
(data (i32.const 10343) "ERR::VOTECUST_DUPLICATE_VOTES::Added duplicate votes for the same candidate.\00")
(data (i32.const 10420) "ERR::VOTECUST_CANDIDATE_NOT_FOUND::Candidate could not be found.\00")
(data (i32.const 10485) "ERR::VOTECUST_VOTING_FOR_INACTIVE_CAND::Attempting to vote for an inactive candidate.\00")
(data (i32.const 10571) "\n Removing empty vote.\00")
(data (i32.const 10594) "\n Vote has no weight - No need to continue.\00")
(data (i32.const 10638) "Candidate not found while updating from a transfer: \00")
(data (i32.const 10691) "Underflow in updateVoteWeight\00")
(data (i32.const 10721) "Overflow in updateVoteWeight\00")
(data (i32.const 10750) "Modify vote weights: \00")
(data (i32.const 10772) "Voter has no balance therefore no need to update vote weights\00")
(data (i32.const 10834) "Overflow in total_weight_of_votes\00")
(data (i32.const 10868) "Underflow in total_weight_of_votes\00")
(data (i32.const 10903) "count during mean pay: \00")
(data (i32.const 10927) " total: \00")
(data (i32.const 10936) "mean asset for pay: \00")
(data (i32.const 10957) "\nLooping through custodians : \00")
(data (i32.const 10988) "\ncreated a joint index : \00")
(data (i32.const 11014) "\n Creating pending pay amount with : \00")
(data (i32.const 11052) "distribute mean pay\00")
(data (i32.const 11072) "ERR::NEWPERIOD_EARLY::New period is being called too soon. Wait until the period has completed.\00")
(data (i32.const 11168) "Configure custodians for the next period.\00")
(data (i32.const 11210) "Empty the custodians table to get a full set of new custodians based on the current votes.\00")
(data (i32.const 11301) "ERR::NEWPERIOD_EXPECTED_CAND_NOT_FOUND::Corrupt data: Trying to set a lockup delay on candidate leaving office.\00")
(data (i32.const 11413) "Select only enough candidates to fill the gaps.\00")
(data (i32.const 11461) "The pool of eligible candidates has been exhausted\00")
(data (i32.const 11512) "setting auths for custodians\n\n\00")
(data (i32.const 11543) "About to set the first one in auths for custodians\n\n\00")
(data (i32.const 11596) "After setting the first one in auths for custodians\n\n\00")
(data (i32.const 11650) "Got to the end of setting permissions.\00")
(data (i32.const 11689) "This action is deprecated call `newperiode` instead.\00")
(data (i32.const 11742) "\n\nstats: \00")
(data (i32.const 11752) " contract: \00")
(data (i32.const 11764) " symbol: \00")
(data (i32.const 11774) "\n\nToken current supply as decimal units: \00")
(data (i32.const 11816) " total votes so far: \00")
(data (i32.const 11838) "\n\nNeed inital engagement of: \00")
(data (i32.const 11868) "% to start the DAC.\00")
(data (i32.const 11888) "\n\nToken supply: \00")
(data (i32.const 11905) "\n\nNeed initial engagement of: \00")
(data (i32.const 11936) "\n\nNeed ongoing engagement of: \00")
(data (i32.const 11967) "% to allow new periods to trigger after initial activation.\00")
(data (i32.const 12027) "\n\nPercent of current voter engagement: \00")
(data (i32.const 12067) "\n\n\00")
(data (i32.const 12070) "ERR::NEWPERIOD_VOTER_ENGAGEMENT_LOW_ACTIVATE::Voter engagement is insufficient to activate the DAC.\00")
(data (i32.const 12170) "ERR::NEWPERIOD_VOTER_ENGAGEMENT_LOW_PROCESS::Voter engagement is insufficient to process a new period\00")
(data (i32.const 12272) "This action is deprecated call `claimpaye` instead.\00")
(data (i32.const 12324) "ERR::CLAIMPAY_INVALID_CLAIM_ID::Invalid pay claim id.\00")
(data (i32.const 12378) "Custodian Pay. Thank you.\00")
(data (i32.const 12404) ":\00")
(data (i32.const 12406) "constructed memo for the service contract: \00")
(data (i32.const 12450) "constructed memo for the receiver contract: \00")
(data (i32.const 12495) "token contract: \00")
(data (i32.const 12512) "Modified exisiting stake record: \00")
(data (i32.const 12546) "Created stake record: \00")
(data (i32.const 12569) "\n > transfer from : \00")
(data (i32.const 12590) " to: \00")
(data (i32.const 12596) " quantity: \00")
(data (i32.const 12608) "This action is deprecated call `updateconfige` instead.\00")
(data (i32.const 12664) "ERR::UPDATECONFIG_INVALID_AUTH_HIGH_TO_NUM_ELECTED::The auth threshold can never be satisfied with a value greater than the number of elected custodians\00")
(data (i32.const 12817) "ERR::UPDATECONFIG_INVALID_AUTH_HIGH_TO_MID_AUTH::The mid auth threshold cannot be greater than the high auth threshold.\00")
(data (i32.const 12937) "ERR::UPDATECONFIG_INVALID_AUTH_MID_TO_LOW_AUTH::The low auth threshold cannot be greater than the mid auth threshold.\00")
(data (i32.const 13055) "Succesfully updated the daccustodian config for: \00")
(data (i32.const 13105) "ERR::GENERAL_REG_MEMBER_NOT_FOUND::Account is not registered with members.\00")
(data (i32.const 13180) "ERR::GENERAL_MEMBER_HAS_NOT_AGREED_TO_ANY_TERMS::Account has not agreed to any terms\00")
(data (i32.const 13265) "ERR::GENERAL_MEMBER_HAS_NOT_AGREED_TO_LATEST_TERMS::Agreed terms isn\'t the latest.\00")
(data (i32.const 13348) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 13399) "error reading iterator\00")
(data (i32.const 13422) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 13476) "cannot decrement iterator at beginning of table\00")
(data (i32.const 13524) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 13583) "read\00")
(data (i32.const 13588) "cannot pass end iterator to modify\00")
(data (i32.const 13623) "object passed to modify is not in multi_index\00")
(data (i32.const 13669) "cannot modify objects in table of another contract\00")
(data (i32.const 13720) "updater cannot change primary key when modifying an object\00")
(data (i32.const 13779) "write\00")
(data (i32.const 13785) "cannot create objects in table of another contract\00")
(data (i32.const 13836) "\ngetting account for type: \00")
(data (i32.const 13864) "invalid symbol name\00")
(data (i32.const 13884) "type mismatch\00")
(data (i32.const 13898) "attempt to add asset with different symbol\00")
(data (i32.const 13941) "addition underflow\00")
(data (i32.const 13960) "addition overflow\00")
(data (i32.const 13978) "signed division overflow\00")
(data (i32.const 14003) "unexpected error in fixed_bytes constructor\00")
(data (i32.const 14048) "\e46\00\00")
(data (i32.const 14052) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 14085) "get\00")
(data (i32.const 14089) "@\00")
(data (i32.const 14091) ",\00")
(data (i32.const 14093) "ERR::NOMINATECAND_INSUFFICIENT_FUNDS_TO_STAKE::Insufficient funds have been staked.\00")
(data (i32.const 14177) "cannot pass end iterator to erase\00")
(data (i32.const 14211) "cannot increment end iterator\00")
(data (i32.const 14241) "object passed to erase is not in multi_index\00")
(data (i32.const 14286) "cannot erase objects in table of another contract\00")
(data (i32.const 14336) "attempt to remove object that was not in multi_index\00")
(data (i32.const 14389) "Lockup stake for release delay.\00")
(data (i32.const 14421) "\nchanging vote weight: \00")
(data (i32.const 14445) " by \00")
(data (i32.const 14450) "%lld%s%s %s\00")
(data (i32.const 14462) ".\00")
(data (i32.const 14465) "\nAdding to existing amount with : \00")
(data (i32.const 14500) "next primary key in table is at autoincrement limit\00")
(data (i32.const 0) "\d88\00\00")
(import "env" "check_transaction_authorization" (func $fimport$0 (param i32 i32 i32 i32 i32 i32) (result i32)))
(import "env" "check_permission_authorization" (func $fimport$1 (param i64 i64 i32 i32 i32 i32 i64) (result i32)))
(import "env" "eosio_assert" (func $fimport$2 (param i32 i32)))
(import "env" "abort" (func $fimport$3))
(import "env" "memset" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "get_permission_last_used" (func $fimport$5 (param i64 i64) (result i64)))
(import "env" "get_account_creation_time" (func $fimport$6 (param i64) (result i64)))
(import "env" "db_find_i64" (func $fimport$7 (param i64 i64 i64 i64) (result i32)))
(import "env" "memcpy" (func $fimport$8 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$9 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$10 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$11 (param i32 i32)))
(import "env" "__multf3" (func $fimport$12 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$13 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$14 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$15 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$16 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$20 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$21 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$22 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$23 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$24 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$25 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$26 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$27 (param i64 i64) (result i32)))
(import "env" "prints" (func $fimport$28 (param i32)))
(import "env" "require_auth" (func $fimport$29 (param i64)))
(import "env" "current_receiver" (func $fimport$30 (result i64)))
(import "env" "db_update_i64" (func $fimport$31 (param i32 i64 i32 i32)))
(import "env" "db_idx64_find_primary" (func $fimport$32 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$33 (param i32 i64 i32)))
(import "env" "db_store_i64" (func $fimport$34 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_store" (func $fimport$35 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_next_i64" (func $fimport$36 (param i32 i32) (result i32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$37 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$38 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$39 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$40 (result i64)))
(import "env" "get_active_producers" (func $fimport$41 (param i32 i32) (result i32)))
(import "env" "printui" (func $fimport$42 (param i64)))
(import "env" "send_deferred" (func $fimport$43 (param i32 i64 i32 i32 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$44 (param i64 i64 i64 i64) (result i32)))
(import "env" "printn" (func $fimport$45 (param i64)))
(import "env" "printi" (func $fimport$46 (param i64)))
(import "env" "printhex" (func $fimport$47 (param i32 i32)))
(import "env" "__ashlti3" (func $fimport$48 (param i32 i64 i64 i32)))
(import "env" "db_idx256_lowerbound" (func $fimport$49 (param i64 i64 i64 i32 i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$50 (param i32 i32)))
(import "env" "printdf" (func $fimport$51 (param f64)))
(import "env" "has_auth" (func $fimport$52 (param i64) (result i32)))
(import "env" "db_idx256_find_primary" (func $fimport$53 (param i64 i64 i64 i32 i32 i64) (result i32)))
(import "env" "db_idx256_update" (func $fimport$54 (param i32 i64 i32 i32)))
(import "env" "db_remove_i64" (func $fimport$55 (param i32)))
(import "env" "db_idx64_remove" (func $fimport$56 (param i32)))
(import "env" "action_data_size" (func $fimport$57 (result i32)))
(import "env" "read_action_data" (func $fimport$58 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$59 (param i32 i64)))
(import "env" "db_previous_i64" (func $fimport$60 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$61 (param i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$62 (param i32 i32 i32) (result i32)))
(import "env" "db_idx128_lowerbound" (func $fimport$63 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx256_store" (func $fimport$64 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$65 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$66 (param i32 i32) (result i32)))
(import "env" "db_idx256_remove" (func $fimport$67 (param i32)))
(export "apply" (func $1))
(table $0 3 3 anyfunc)
(elem (i32.const 1) $19 $21)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 14552))
(global $global$2 i32 (i32.const 14552))


void .FUNC $220 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [3])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [3])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL $10($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$6 = [536870911]
	if ( ((uint_32)int_32($5 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = $4
	$2 = int_32($5 >> [2])
	if ( ($2 <= $4) ){ goto $label$6 }
	$6 = $2
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($6 << [3])
	$6 = CALL $8($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$5 = int_32($3 >> [3])
	$3 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$5) )
	$3 = ($7 - $1)
	if ( ($3 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $3)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($3 >> [3]) << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $33($0)
}

void .FUNC $174 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	*($3 + [104]) = ($2 + $4)
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [100]) = ($2 + [8])
	*($3 + [80]) = [0]
	*($3 + [72]) = (int_64)0
	CALL $172(($3 + [96]), ($3 + [72]))
	*($3 + [64]) = (int_64)0
	$2 = *($3 + [100])
	$4 = (($3 + [96]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [64]), $2, [8])
	*($3 + [100]) = (*($3 + [100]) + [8])
	*(($2 = (($3 + [16]) + [8]))) = *($4)
	*($3 + [16]) = *($3 + [96])
	$2 = *($2)
	*((($3 + [112]) + [8])) = $2
	*(($4 = (($3 + [128]) + [8]))) = $2
	$5 = *($3 + [16])
	*($3 + [128]) = $5
	*($3 + [112]) = $5
	$2 = *($4)
	*((($3 + [144]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$0 = *($3 + [128])
	*($3 + [48]) = $0
	*($3 + [144]) = $0
	$2 = CALL $24($3, ($3 + [72]))
	CALL $46(($3 + [32]), *($3 + [88]), $2, *($3 + [64]))
	if ( (*($2) & [1]) ){ goto $label$9 }
	if ( (*($3 + [72]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [72]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10(*(($3 + [80])))
	$global$0 = ($3 + [160])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [160])
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $2($1)
	
.LABEL $label$2
	*(CALL $5()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $2(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $3($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $176 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [52]) = $2
	*($3 + [48]) = $2
	*($3 + [56]) = ($2 + $4)
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$2 = *($3 + [52])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [52]) = ($2 + [8])
	*($3 + [32]) = [0]
	*($3 + [24]) = (int_64)0
	CALL $172(($3 + [48]), ($3 + [24]))
	$5 = *($3 + [40])
	$2 = CALL $24(($3 + [8]), ($3 + [24]))
	CALL require_auth($5)
	if ( (*($2) & [1]) ){ goto $label$8 }
	if ( (*($3 + [24]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $10(*(($3 + [32])))
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [64])
}

void .FUNC $177 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	*($3 + [16]) = (int_64)0
	$2 = [0]
	$5 = ($3 + [16])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	*($3 + [16]) = (int_64)0
	$5 = ($3 + [16])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13583])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*($3 + [24]) = (int_64)0
	$2 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$7
	CALL memcpy(($3 + [24]), $2, [8])
	*(($3 + [8])) = *($3 + [24])
	CALL eosio_assert([0], [8698])
	$global$0 = ($3 + [32])
}

void .FUNC $170 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [32]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $6, [8])
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $85($3, *($3 + [40]), *($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $171 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [52]) = $2
	*($3 + [48]) = $2
	*($3 + [56]) = ($2 + $4)
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$2 = *($3 + [52])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [52]) = ($2 + [8])
	*($3 + [32]) = [0]
	*($3 + [24]) = (int_64)0
	CALL $172(($3 + [48]), ($3 + [24]))
	$2 = CALL $24(($3 + [8]), ($3 + [24]))
	CALL eosio_assert([0], [8488])
	if ( (*($2) & [1]) ){ goto $label$8 }
	if ( (*($3 + [24]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $10(*(($3 + [32])))
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [64])
}

int_32 .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $173($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $8($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $26($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $26($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $23($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $10($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $7 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $5())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $6($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $178 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [32]), $5, [8])
	*(($5 = (($3 + [72]) + [8]))) = *($3 + [32])
	*($3 + [64]) = (int_64)0
	$7 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$8
	CALL memcpy(($3 + [64]), $7, [8])
	*((($3 + [32]) + [24])) = $4
	$8 = *($5)
	*((($3 + [16]) + [8])) = $8
	*(($3 + [8])) = $8
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [32])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	$0 = *($3 + [72])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $52(($3 + [32]), *($3 + [88]), $3, *($3 + [64]))
	$global$0 = ($3 + [96])
}

void .FUNC $4 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $221 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $222(*($1), *($0 + [8]))
}

int_32 .FUNC $5 ()
{
	return [8208]
}

int_32 .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $205(CALL $94($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $3 (int_32 $0)
{
}

void .FUNC $189 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [40])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [40])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13583])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $5, [8])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $144($3, *($3 + [40]), *($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $188 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [40])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [40])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13583])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $5, [8])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $139($3, *($3 + [40]), *($3 + [32]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([32])) + [16]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $197(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $10($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $48 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13348])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4730634643120193536, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $51($0, $5)
	if ( ((int_32)*($6 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13348])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $0 ()
{
	CALL $4()
}

void .FUNC $236 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [40])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $10($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $43($0, *($1))
	CALL $43($0, *($1 + [4]))
	CALL $10($1)
	
.LABEL $label$1
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	*($0) = *($1)
	*(($0 + [8])) = *(($1 + [8]))
	CALL $24(($0 + [16]), ($1 + [16]))
	*(($0 + [40])) = *(($1 + [40]))
	*($0 + [32]) = *($1 + [32])
	*(($2 = ($0 + [52]))) = (int_64)0
	*($0 + [48]) = $2
	$4 = ($1 + [52])
	$3 = *($1 + [48])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	$5 = [0]
	$6 = ($0 + [48])
	$7 = ($0 + [52])
	$8 = ($0 + [56])
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$3 }
	$10 = [28]
	goto $label$1 
	
.LABEL $label$3
	$10 = [3]
	goto $label$1 
	
.LABEL $label$2
	$10 = [29]
	
.LABEL $label$1
	
.LOOP $label$4:
	goto $label$103 
	
.LABEL $label$130
	$5 = *($7)
	$3 = $9
	if ( ((int_32)*($6) == (int_32)$2) ){ goto $label$59 }
	$10 = [3]
	goto $label$4 
	
.LABEL $label$129
	$9 = $5
	$11 = $2
	if ( ($5 == 0) ){ goto $label$42 }
	$10 = [4]
	goto $label$4 
	
.LABEL $label$128
	$12 = $9
	$9 = *($12 + [4])
	if ( $9 ){ goto $label$43 }
	goto $label$44 
	
.LABEL $label$127
	$12 = *($11 + [8])
	$9 = ((int_32)*($12) == (int_32)$11)
	$11 = $12
	if ( $9 ){ goto $label$41 }
	$10 = [5]
	goto $label$4 
	
.LABEL $label$126
	$9 = *(($3 + [16]))
	if ( (*($12 + [16]) <= $9) ){ goto $label$58 }
	$10 = [6]
	goto $label$4 
	
.LABEL $label$125
	if ( ($5 == 0) ){ goto $label$40 }
	$10 = [7]
	goto $label$4 
	
.LABEL $label$124
	$11 = $2
	$12 = *($5 + [16])
	if ( ((uint_32)$9 >= (uint_32)$12) ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$123
	$11 = $5
	$5 = $12
	$12 = *($5 + [16])
	if ( ((uint_32)$9 >= (uint_32)$12) ){ goto $label$55 }
	$10 = [20]
	goto $label$4 
	
.LABEL $label$122
	$12 = *($5)
	if ( $12 ){ goto $label$30 }
	goto $label$31 
	
.LABEL $label$121
	if ( ((uint_32)$12 >= (uint_32)$9) ){ goto $label$37 }
	$10 = [17]
	goto $label$4 
	
.LABEL $label$120
	$11 = ($5 + [4])
	$12 = *($5 + [4])
	if ( ($12 == 0) ){ goto $label$32 }
	$10 = [18]
	goto $label$4 
	
.LABEL $label$119
	$5 = $11
	goto $label$54 
	
.LABEL $label$118
	$12 = $2
	$10 = [24]
	goto $label$4 
	
.LABEL $label$117
	if ( ($5 == 0) ){ goto $label$29 }
	$10 = [25]
	goto $label$4 
	
.LABEL $label$116
	$5 = ($12 + [4])
	if ( (*($5) == 0) ){ goto $label$34 }
	$10 = [10]
	goto $label$4 
	
.LABEL $label$115
	$12 = *($3 + [4])
	if ( $12 ){ goto $label$51 }
	$10 = [11]
	goto $label$4 
	
.LABEL $label$114
	$9 = *($3 + [8])
	if ( ((int_32)*($9) == (int_32)$3) ){ goto $label$48 }
	$10 = [12]
	goto $label$4 
	
.LABEL $label$113
	$11 = ($3 + [8])
	$10 = [13]
	goto $label$4 
	
.LABEL $label$112
	$12 = *($11)
	$11 = ($12 + [8])
	$9 = *($12 + [8])
	if ( ((int_32)$12 != (int_32)*($9)) ){ goto $label$46 }
	goto $label$47 
	
.LABEL $label$111
	$12 = $2
	$5 = $2
	if ( *($5) ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$110
	$5 = $2
	$12 = $2
	goto $label$57 
	
.LABEL $label$109
	$12 = $5
	goto $label$56 
	
.LABEL $label$108
	$12 = $5
	$5 = $11
	if ( *($5) ){ goto $label$52 }
	goto $label$53 
	
.LABEL $label$107
	$12 = $5
	$5 = $11
	$10 = [14]
	goto $label$4 
	
.LABEL $label$106
	*(($9 = CALL $8([32])) + [16]) = *(($3 + [16]))
	CALL $24(($9 + [20]), ($3 + [20]))
	*($9 + [8]) = $12
	*($9) = (int_64)0
	*($5) = $9
	$12 = *(*($6))
	if ( ($12 == 0) ){ goto $label$33 }
	$10 = [15]
	goto $label$4 
	
.LABEL $label$105
	*($6) = $12
	$9 = *($5)
	$10 = [16]
	goto $label$4 
	
.LABEL $label$104
	CALL $45(*($7), $9)
	*($8) = (*($8) + [1])
	$12 = *($3 + [4])
	if ( ($12 == 0) ){ goto $label$49 }
	$10 = [0]
	goto $label$4 
	
.LABEL $label$103
	$9 = $12
	$12 = *($9)
	if ( $12 ){ goto $label$50 }
	$10 = [1]
	goto $label$4 
	
.LABEL $label$102
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$45 }
	$10 = [29]
	goto $label$4 
	
.LABEL $label$101
	$2 = ($0 + [64])
	*($0 + [60]) = $2
	*($2) = (int_64)0
	$8 = ($1 + [64])
	$3 = *($1 + [60])
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$28 }
	$10 = [30]
	goto $label$4 
	
.LABEL $label$100
	$5 = [0]
	$4 = ($0 + [60])
	$13 = ($0 + [64])
	$7 = ($0 + [68])
	$6 = ($3 + [16])
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$99
	$5 = *($13)
	$3 = $9
	$6 = ($3 + [16])
	if ( ((int_32)*($4) == (int_32)$2) ){ goto $label$69 }
	$10 = [31]
	goto $label$4 
	
.LABEL $label$98
	$9 = $5
	$11 = $2
	if ( ($5 == 0) ){ goto $label$23 }
	$10 = [32]
	goto $label$4 
	
.LABEL $label$97
	$12 = $9
	$9 = *($12 + [4])
	if ( $9 ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$96
	$12 = *($11 + [8])
	$9 = ((int_32)*($12) == (int_32)$11)
	$11 = $12
	if ( $9 ){ goto $label$22 }
	$10 = [33]
	goto $label$4 
	
.LABEL $label$95
	$9 = *($6)
	if ( (*($12 + [16]) <= $9) ){ goto $label$68 }
	$10 = [34]
	goto $label$4 
	
.LABEL $label$94
	if ( ($5 == 0) ){ goto $label$21 }
	$10 = [35]
	goto $label$4 
	
.LABEL $label$93
	$11 = $2
	$12 = *($5 + [16])
	if ( ((uint_32)$9 >= (uint_32)$12) ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$92
	$11 = $5
	$5 = $12
	$12 = *($5 + [16])
	if ( ((uint_32)$9 >= (uint_32)$12) ){ goto $label$65 }
	$10 = [56]
	goto $label$4 
	
.LABEL $label$91
	$12 = *($5)
	if ( $12 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$90
	if ( ((uint_32)$12 >= (uint_32)$9) ){ goto $label$18 }
	$10 = [53]
	goto $label$4 
	
.LABEL $label$89
	$11 = ($5 + [4])
	$12 = *($5 + [4])
	if ( ($12 == 0) ){ goto $label$7 }
	$10 = [54]
	goto $label$4 
	
.LABEL $label$88
	$5 = $11
	goto $label$64 
	
.LABEL $label$87
	$12 = $2
	$10 = [43]
	goto $label$4 
	
.LABEL $label$86
	if ( ($5 == 0) ){ goto $label$9 }
	$10 = [44]
	goto $label$4 
	
.LABEL $label$85
	$5 = ($12 + [4])
	if ( (*($5) == 0) ){ goto $label$15 }
	$10 = [38]
	goto $label$4 
	
.LABEL $label$84
	$12 = *($3 + [4])
	if ( $12 ){ goto $label$61 }
	$10 = [48]
	goto $label$4 
	
.LABEL $label$83
	$9 = *($3 + [8])
	if ( ((int_32)*($9) == (int_32)$3) ){ goto $label$13 }
	$10 = [49]
	goto $label$4 
	
.LABEL $label$82
	$11 = ($3 + [8])
	$10 = [50]
	goto $label$4 
	
.LABEL $label$81
	$12 = *($11)
	$11 = ($12 + [8])
	$9 = *($12 + [8])
	if ( ((int_32)$12 != (int_32)*($9)) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$80
	$12 = $2
	$5 = $2
	if ( *($5) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$79
	$5 = $2
	$12 = $2
	goto $label$67 
	
.LABEL $label$78
	$12 = $5
	goto $label$66 
	
.LABEL $label$77
	$12 = $5
	$5 = $11
	if ( *($5) ){ goto $label$62 }
	goto $label$63 
	
.LABEL $label$76
	$12 = $5
	$5 = $11
	$10 = [45]
	goto $label$4 
	
.LABEL $label$75
	*((($9 = CALL $8([32])) + [24])) = *(($6 + [8]))
	*($9 + [16]) = *($6)
	*($9) = (int_64)0
	*($9 + [8]) = $12
	*($5) = $9
	$12 = *(*($4))
	if ( ($12 == 0) ){ goto $label$8 }
	$10 = [46]
	goto $label$4 
	
.LABEL $label$74
	*($4) = $12
	$9 = *($5)
	$10 = [47]
	goto $label$4 
	
.LABEL $label$73
	CALL $45(*($13), $9)
	*($7) = (*($7) + [1])
	$12 = *($3 + [4])
	if ( ($12 == 0) ){ goto $label$14 }
	$10 = [39]
	goto $label$4 
	
.LABEL $label$72
	$9 = $12
	$12 = *($9)
	if ( $12 ){ goto $label$60 }
	$10 = [40]
	goto $label$4 
	
.LABEL $label$71
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$10 }
	$10 = [52]
	goto $label$4 
	
.LABEL $label$70
	*($0 + [72]) = *($1 + [72])
	return $0
	
.LABEL $label$69
	$10 = [42]
	goto $label$4 
	
.LABEL $label$68
	$10 = [43]
	goto $label$4 
	
.LABEL $label$67
	$10 = [45]
	goto $label$4 
	
.LABEL $label$66
	$10 = [45]
	goto $label$4 
	
.LABEL $label$65
	$10 = [36]
	goto $label$4 
	
.LABEL $label$64
	$10 = [55]
	goto $label$4 
	
.LABEL $label$63
	$10 = [45]
	goto $label$4 
	
.LABEL $label$62
	$10 = [38]
	goto $label$4 
	
.LABEL $label$61
	$10 = [39]
	goto $label$4 
	
.LABEL $label$60
	$10 = [39]
	goto $label$4 
	
.LABEL $label$59
	$10 = [28]
	goto $label$4 
	
.LABEL $label$58
	$10 = [24]
	goto $label$4 
	
.LABEL $label$57
	$10 = [14]
	goto $label$4 
	
.LABEL $label$56
	$10 = [14]
	goto $label$4 
	
.LABEL $label$55
	$10 = [8]
	goto $label$4 
	
.LABEL $label$54
	$10 = [19]
	goto $label$4 
	
.LABEL $label$53
	$10 = [14]
	goto $label$4 
	
.LABEL $label$52
	$10 = [10]
	goto $label$4 
	
.LABEL $label$51
	$10 = [0]
	goto $label$4 
	
.LABEL $label$50
	$10 = [0]
	goto $label$4 
	
.LABEL $label$49
	$10 = [11]
	goto $label$4 
	
.LABEL $label$48
	$10 = [1]
	goto $label$4 
	
.LABEL $label$47
	$10 = [1]
	goto $label$4 
	
.LABEL $label$46
	$10 = [13]
	goto $label$4 
	
.LABEL $label$45
	$10 = [2]
	goto $label$4 
	
.LABEL $label$44
	$10 = [5]
	goto $label$4 
	
.LABEL $label$43
	$10 = [4]
	goto $label$4 
	
.LABEL $label$42
	$10 = [27]
	goto $label$4 
	
.LABEL $label$41
	$10 = [27]
	goto $label$4 
	
.LABEL $label$40
	$10 = [23]
	goto $label$4 
	
.LABEL $label$39
	$10 = [20]
	goto $label$4 
	
.LABEL $label$38
	$10 = [8]
	goto $label$4 
	
.LABEL $label$37
	$10 = [9]
	goto $label$4 
	
.LABEL $label$36
	$10 = [14]
	goto $label$4 
	
.LABEL $label$35
	$10 = [10]
	goto $label$4 
	
.LABEL $label$34
	$10 = [14]
	goto $label$4 
	
.LABEL $label$33
	$10 = [16]
	goto $label$4 
	
.LABEL $label$32
	$10 = [22]
	goto $label$4 
	
.LABEL $label$31
	$10 = [21]
	goto $label$4 
	
.LABEL $label$30
	$10 = [19]
	goto $label$4 
	
.LABEL $label$29
	$10 = [26]
	goto $label$4 
	
.LABEL $label$28
	$10 = [52]
	goto $label$4 
	
.LABEL $label$27
	$10 = [42]
	goto $label$4 
	
.LABEL $label$26
	$10 = [31]
	goto $label$4 
	
.LABEL $label$25
	$10 = [33]
	goto $label$4 
	
.LABEL $label$24
	$10 = [32]
	goto $label$4 
	
.LABEL $label$23
	$10 = [60]
	goto $label$4 
	
.LABEL $label$22
	$10 = [60]
	goto $label$4 
	
.LABEL $label$21
	$10 = [59]
	goto $label$4 
	
.LABEL $label$20
	$10 = [56]
	goto $label$4 
	
.LABEL $label$19
	$10 = [36]
	goto $label$4 
	
.LABEL $label$18
	$10 = [37]
	goto $label$4 
	
.LABEL $label$17
	$10 = [45]
	goto $label$4 
	
.LABEL $label$16
	$10 = [38]
	goto $label$4 
	
.LABEL $label$15
	$10 = [45]
	goto $label$4 
	
.LABEL $label$14
	$10 = [48]
	goto $label$4 
	
.LABEL $label$13
	$10 = [40]
	goto $label$4 
	
.LABEL $label$12
	$10 = [40]
	goto $label$4 
	
.LABEL $label$11
	$10 = [50]
	goto $label$4 
	
.LABEL $label$10
	$10 = [41]
	goto $label$4 
	
.LABEL $label$9
	$10 = [51]
	goto $label$4 
	
.LABEL $label$8
	$10 = [47]
	goto $label$4 
	
.LABEL $label$7
	$10 = [58]
	goto $label$4 
	
.LABEL $label$6
	$10 = [57]
	goto $label$4 
	
.LABEL $label$5
	$10 = [55]
	goto $label$4 
	return $10
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([96])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [52 align=4]) = (int_64)0
	*($5 + [64 align=4]) = (int_64)0
	*($5 + [76]) = $0
	*($5 + [48]) = ($5 + [52])
	*($5 + [60]) = ($5 + [64])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	*($3 + [48]) = ($5 + [48])
	*($3 + [52]) = ($5 + [60])
	*($3 + [56]) = ($5 + [72])
	CALL $208(($3 + [32]), ($3 + [24]))
	*($5 + [80]) = $1
	*($5 + [84 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5 + [8])
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $209(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $43(($1 + [60]), *(($1 + [64])))
	CALL $44(($1 + [48]), *(($1 + [52])))
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [24])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $40 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($2 + [40])) = [0]
	*($2 + [16]) = (int_64)5300903188324233184
	*($2 + [8]) = (int_64)5300903188324233184
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	*($2 + [44]) = [0]
	$3 = CALL db_find_i64((int_64)5300903188324233184, (int_64)5300903188324233184, (int_64)5301158973880139776, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $41(($2 + [8]), $3)
	if ( ((int_32)*($3 + [76]) == (int_32)($2 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$4
	CALL $42($0, $3)
	$4 = *($2 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [8439])
	CALL $42($0, [0])
	$4 = *($2 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($2 + [36])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $43(($0 + [60]), *(($0 + [64])))
	CALL $44(($0 + [48]), *(($0 + [52])))
	if ( ((*($0 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*(($0 + [24])))
	
.LABEL $label$9
	CALL $10($0)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$7 }
	$0 = *(($2 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $4
	
.LABEL $label$5
	*($5) = $4
	CALL $10($0)
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$1
	$global$0 = ($2 + [48])
}

void .FUNC $47 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [128])
	$global$0 = $2
	$3 = (int_64)6138568071520102272
	$4 = (int_64)6138568071520102272
	if ( ((int_64)$1 == (int_64)5300892218633719088) ){ goto $label$1 }
	CALL $40(($2 + [48]), $1)
	$3 = *(($2 + [88]))
	CALL $43(($2 + [108]), *(($2 + [112])))
	CALL $44(($2 + [96]), *(($2 + [100])))
	if ( ((*($2 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $10(*(($2 + [72])))
	
.LABEL $label$2
	$4 = $1
	
.LABEL $label$1
	$5 = [0]
	*((($2 + [48]) + [32])) = [0]
	*($2 + [56]) = $4
	*($2 + [48]) = $3
	*($2 + [64]) = (int_64)-1
	*($2 + [72]) = (int_64)0
	*((($2 + [8]) + [32])) = [0]
	*($2 + [16]) = $4
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$6 = CALL db_find_i64($3, $4, (int_64)-7880044397109182464, $0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $49(($2 + [48]), $6)
	if ( ((int_32)*($5 + [16]) == (int_32)($2 + [48])) ){ goto $label$6 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$6
	if ( ((int_64)*($5 + [8]) == (int_64)0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [13105])
	if ( ((int_64)*([0] + [8]) != (int_64)0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [13180])
	
.LABEL $label$3
	*($2 + [4]) = [0]
	*($2) = ($2 + [8])
	if ( ((int_64)*(*(CALL $50($2) + [4]) + [24]) == (int_64)*(($5 + [8]))) ){ goto $label$7 }
	CALL eosio_assert([0], [13265])
	
.LABEL $label$7
	$7 = *($2 + [32])
	if ( ($7 == 0) ){ goto $label$8 }
	$8 = ($2 + [36])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [-24])
	$5 = *($6)
	*($6) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [12]) & [1]) == 0) ){ goto $label$13 }
	CALL $10(*(($5 + [20])))
	
.LABEL $label$13
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL $10(*($5 + [8]))
	
.LABEL $label$14
	CALL $10($5)
	
.LABEL $label$12
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$11 }
	$5 = *(($2 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$5 = $7
	
.LABEL $label$9
	*($8) = $7
	CALL $10($5)
	
.LABEL $label$8
	$7 = *($2 + [72])
	if ( ($7 == 0) ){ goto $label$15 }
	$8 = ($2 + [76])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$17 }
	
.LOOP $label$18:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$19 }
	CALL $10($6)
	
.LABEL $label$19
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$18 }
	$5 = *(($2 + [72]))
	goto $label$16 
	
.LABEL $label$17
	$5 = $7
	
.LABEL $label$16
	*($8) = $7
	CALL $10($5)
	
.LABEL $label$15
	$global$0 = ($2 + [128])
}

void .FUNC $46 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [48])
	$global$0 = $4
	CALL require_auth($1)
	CALL $47($1, $3)
	*(($4 + [40])) = (int_64)0
	*($4 + [16]) = $3
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [8]) = *($0)
	CALL $48(($4 + [8]), $1, [8541])
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	if ( (*($2 + [4]) <= [256]) ){ goto $label$1 }
	CALL eosio_assert([0], [8620])
	
.LABEL $label$1
	$5 = *($4 + [32])
	if ( ($5 == 0) ){ goto $label$2 }
	$6 = ($4 + [36])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $10($0)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$5 }
	$2 = *(($4 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$2 = $5
	
.LABEL $label$3
	*($6) = $5
	CALL $10($2)
	
.LABEL $label$2
	$global$0 = ($4 + [48])
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $44($0, *($1))
	CALL $44($0, *($1 + [4]))
	if ( ((*(($1 + [20])) & [1]) == 0) ){ goto $label$2 }
	CALL $10(*(($1 + [28])))
	
.LABEL $label$2
	CALL $10($1)
	
.LABEL $label$1
}

int_32 .FUNC $222 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13779])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [8])
	$4 = (*($7) + [8])
	*($7) = $4
	$6 = ($6 + [8])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $234 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $233 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13583])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13583])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($4) = ((int_32)*($2 + [8]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $226 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($8) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [13779])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [4])
	$4 = (*($6) + [4])
	*($6) = $4
	if ( ((int_32)(*($8) - $4) > (int_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [13779])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [4]), [2])
	$4 = (*($6) + [2])
	*($6) = $4
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $167 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	*($3 + [8]) = (int_64)0
	$2 = [0]
	$5 = ($3 + [8])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	*($3 + [8]) = (int_64)0
	$5 = ($3 + [8])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13583])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	CALL eosio_assert([0], [9538])
	$global$0 = ($3 + [16])
}

void .FUNC $166 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	$6 = ($2 + $4)
	CALL memcpy($3, $5, [1])
	$5 = *($3)
	*($3 + [32]) = (int_64)0
	$7 = ($2 + [9])
	if ( ((uint_32)($4 + [-9]) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$7
	CALL memcpy(($3 + [32]), $7, [8])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [17])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $69($3, *($3 + [40]), ((int_32)($5 & [255]) != (int_32)[0]), *($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $165 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	*($3) = (int_64)0
	$2 = [0]
	$5 = $3
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	*($3) = (int_64)0
	$5 = $3
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13583])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$2 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy(($3 + [15]), $2, [1])
	CALL eosio_assert([0], [9326])
	$global$0 = ($3 + [16])
}

void .FUNC $164 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [32]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $6, [8])
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	$0 = *($3 + [32])
	$1 = *($3 + [40])
	CALL require_auth($1)
	CALL $65($3, $1, [0], $0)
	$global$0 = ($3 + [48])
}

void .FUNC $163 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	*($3 + [8]) = (int_64)0
	$2 = [0]
	$5 = ($3 + [8])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	*($3 + [8]) = (int_64)0
	$5 = ($3 + [8])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13583])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	CALL eosio_assert([0], [9271])
	$global$0 = ($3 + [16])
}

void .FUNC $162 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [32]), $5, [8])
	*(($5 = (($3 + [72]) + [8]))) = *($3 + [32])
	*($3 + [64]) = (int_64)0
	$7 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$8
	CALL memcpy(($3 + [64]), $7, [8])
	*((($3 + [32]) + [24])) = $4
	$8 = *($5)
	*((($3 + [16]) + [8])) = $8
	*(($3 + [8])) = $8
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [32])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	$0 = *($3 + [72])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $57(($3 + [32]), *($3 + [88]), $3, *($3 + [64]))
	$global$0 = ($3 + [96])
}

void .FUNC $161 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	*($3 + [16]) = (int_64)0
	$2 = [0]
	$5 = ($3 + [16])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	*($3 + [16]) = (int_64)0
	$5 = ($3 + [16])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13583])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*($3 + [24]) = (int_64)0
	$2 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$7
	CALL memcpy(($3 + [24]), $2, [8])
	*(($3 + [8])) = *($3 + [24])
	CALL eosio_assert([0], [8999])
	$global$0 = ($3 + [32])
}

void .FUNC $160 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [104]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$5
	CALL memcpy(($3 + [104]), $2, [8])
	*($3 + [96]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy(($3 + [96]), $5, [8])
	*($3 + [88]) = (int_64)0
	*($3 + [80]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$7
	CALL memcpy(($3 + [80]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$8
	$4 = ($2 + $4)
	CALL memcpy(($3 + [40]), $5, [8])
	*((($3 + [80]) + [8])) = *($3 + [40])
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$9
	CALL memcpy(($3 + [72]), $5, [8])
	*(($3 + [64])) = $4
	$7 = *((($3 + [80]) + [8]))
	*((($3 + [24]) + [8])) = $7
	*((($3 + [8]) + [8])) = $7
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [40])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	$0 = *($3 + [80])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $151(($3 + [40]), *($3 + [104]), *($3 + [96]), ($3 + [8]), *($3 + [72]))
	$global$0 = ($3 + [112])
}

int_32 .FUNC $230 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13583])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13583])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*($1 + [8]) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13583])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $169 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	*($3 + [8]) = (int_64)0
	$2 = [0]
	$5 = ($3 + [8])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	*($3 + [8]) = (int_64)0
	$5 = ($3 + [8])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13583])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	CALL eosio_assert([0], [9592])
	$global$0 = ($3 + [16])
}

void .FUNC $168 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [32]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $6, [8])
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	$0 = *($3 + [32])
	$1 = *($3 + [40])
	CALL require_auth($1)
	CALL $80($3, $1, $0)
	$global$0 = ($3 + [48])
}

void .FUNC $175 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [52]) = $2
	*($3 + [48]) = $2
	*($3 + [56]) = ($2 + $4)
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$2 = *($3 + [52])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [52]) = ($2 + [8])
	*($3 + [32]) = [0]
	*($3 + [24]) = (int_64)0
	CALL $172(($3 + [48]), ($3 + [24]))
	*($3 + [16]) = (int_64)0
	$2 = *($3 + [52])
	if ( ((uint_32)(*((($3 + [48]) + [8])) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	$2 = *($3 + [52])
	
.LABEL $label$6
	CALL memcpy(($3 + [16]), $2, [8])
	*($3 + [52]) = (*($3 + [52]) + [8])
	$5 = *($3 + [40])
	$2 = CALL $24($3, ($3 + [24]))
	CALL require_auth($5)
	if ( (*($2) & [1]) ){ goto $label$9 }
	if ( (*($3 + [24]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10(*(($3 + [32])))
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [64])
}

void .FUNC $58 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [80])
	$global$0 = $3
	$4 = [0]
	*(($3 + [72])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	*($3 + [48]) = $2
	*($3 + [40]) = $1
	*(($5 = (($3 + [8]) + [24]))) = (int_64)0
	*((($3 + [8]) + [8])) = (int_64)0
	*((($3 + [8]) + [16])) = (int_64)0
	*($5) = [0]
	*($3 + [8]) = (int_64)0
	*($3 + [8]) = [0]
	*($3 + [36]) = [0]
	$5 = CALL db_find_i64($1, $2, (int_64)-4157503053760561152, (int_64)-4157503053760561152)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $64(($3 + [40]), $5)
	if ( ((int_32)*($4 + [32]) == (int_32)($3 + [40])) ){ goto $label$1 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$1
	$4 = ( $4 ? ($3 + [8]) : $4 )
	*($0) = *($4)
	*(($0 + [24])) = *(($4 + [24]))
	*(($0 + [16])) = *(($4 + [16]))
	*(($0 + [8])) = *(($4 + [8]))
	$5 = *($3 + [64])
	if ( ($5 == 0) ){ goto $label$2 }
	$6 = ($3 + [68])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $10($4)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($3 + [64]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $5
	
.LABEL $label$3
	*($6) = $5
	CALL $10($0)
	
.LABEL $label$2
	$global$0 = ($3 + [80])
}

void .FUNC $59 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [32]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157503053760561152, (int_64)-4157503053760561152)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $64($0, $4)
	if ( ((int_32)*($4 + [32]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$2
	*($3) = $1
	CALL $202($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $203($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

int_32 .FUNC $50 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [36]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13476])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-7880044396392173568)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13422])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13422])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $196(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $8([80])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [52]) = [0]
	*($5 + [56]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [24])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [52])
	CALL $216(($3 + [40]), ($3 + [32]))
	*($5 + [60]) = $1
	*($5 + [64 align=4]) = (int_64)-1
	*($5 + [72 align=4]) = (int_64)-1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $62(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $52 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [128])
	$global$0 = $4
	CALL require_auth($1)
	CALL $47($1, $3)
	*(($4 + [120])) = (int_64)0
	*($4 + [96]) = $3
	*($4 + [112]) = (int_64)0
	$5 = *($0)
	*($4 + [88]) = $5
	*($4 + [104]) = (int_64)-1
	if ( ((int_64)*($2) > (int_64)-1) ){ goto $label$1 }
	CALL eosio_assert([0], [8753])
	$5 = *($0)
	
.LABEL $label$1
	CALL $53(($4 + [8]), $5, $3)
	if ( ((int_64)*($2 + [8]) == (int_64)*(($4 + [72]))) ){ goto $label$2 }
	CALL eosio_assert([0], [13524])
	
.LABEL $label$2
	if ( ((int_64)*($2) <= (int_64)*($4 + [64])) ){ goto $label$3 }
	CALL eosio_assert([0], [8826])
	
.LABEL $label$3
	$0 = CALL $48(($4 + [88]), $1, [8917])
	*($4 + [8]) = $2
	CALL $54(($4 + [88]), $0, $1, ($4 + [8]))
	$6 = *($4 + [112])
	if ( ($6 == 0) ){ goto $label$4 }
	$7 = ($4 + [116])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $10($0)
	
.LABEL $label$8
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$7 }
	$2 = *(($4 + [112]))
	goto $label$5 
	
.LABEL $label$6
	$2 = $6
	
.LABEL $label$5
	*($7) = $6
	CALL $10($2)
	
.LABEL $label$4
	$global$0 = ($4 + [128])
}

void .FUNC $53 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [128])
	$global$0 = $3
	$4 = [0]
	*((($3 + [88]) + [32])) = [0]
	*($3 + [104]) = (int_64)-1
	*($3 + [112]) = (int_64)0
	*($3 + [96]) = $2
	*($3 + [88]) = $1
	*(($5 = ($3 + [32]))) = (int_64)0
	*(($3 + [56])) = (int_64)0
	*(($3 + [48])) = (int_64)0
	*((($3 + [8]) + [32])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = (int_64)0
	*($5) = [773]
	*($3 + [8]) = (int_64)0
	*($3 + [64]) = (int_64)0
	*($3 + [36]) = [604800]
	$5 = CALL db_find_i64($1, $2, (int_64)4982871455592087552, (int_64)4982871455592087552)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $55(($3 + [88]), $5)
	if ( ((int_32)*($4 + [80]) == (int_32)($3 + [88])) ){ goto $label$1 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$1
	CALL memcpy($0, ( $4 ? ($3 + [8]) : $4 ), [80])
	$5 = *($3 + [112])
	if ( ($5 == 0) ){ goto $label$2 }
	$6 = ($3 + [116])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $10($0)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	$4 = *(($3 + [112]))
	goto $label$3 
	
.LABEL $label$4
	$4 = $5
	
.LABEL $label$3
	*($6) = $5
	CALL $10($4)
	
.LABEL $label$2
	$global$0 = ($3 + [128])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	$6 = *($1)
	*($5 + [16]) = $6
	$7 = ($1 + [40])
	$8 = *($7)
	*($5 + [24]) = $8
	$9 = ($1 + [8])
	*($5 + [40]) = *($9)
	*($5 + [32]) = ((int_64)$8 ^ (int_64)-1)
	$3 = *($3)
	*(($1 + [16])) = *(($3 + [8]))
	*($9) = *($3)
	$3 = $4
	$4 = ($3 + [-64])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-11])
	*($5 + [48]) = $5
	*($5 + [60]) = $9
	*($5 + [56]) = $1
	*($5 + [64]) = ($1 + [24])
	*($5 + [68]) = $7
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [52])
	CALL $56(($5 + [56]), ($5 + [48]))
	CALL db_update_i64(*($1 + [60]), $2, $4, [53])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$4 = (($5 + [16]) + [8])
	*($5 + [56]) = *($1)
	if ( (CALL $17(($5 + [16]), ($5 + [56]), [8]) == 0) ){ goto $label$4 }
	$3 = ($1 + [64])
	$9 = *($3)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$5 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($5 + [48]), $6)
	*($3) = $9
	
.LABEL $label$5
	CALL db_idx64_update($9, $2, ($5 + [56]))
	
.LABEL $label$4
	$9 = (($5 + [16]) + [16])
	*($5 + [56]) = *($7)
	if ( (CALL $17($4, ($5 + [56]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [68])
	$4 = *($3)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$7 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193537, ($5 + [48]), $6)
	*($3) = $4
	
.LABEL $label$7
	CALL db_idx64_update($4, $2, ($5 + [56]))
	
.LABEL $label$6
	$4 = (($5 + [16]) + [24])
	*($5 + [56]) = ((int_64)*($7) ^ (int_64)-1)
	if ( (CALL $17($9, ($5 + [56]), [8]) == 0) ){ goto $label$8 }
	$9 = ($1 + [72])
	$7 = *($9)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$9 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193538, ($5 + [48]), $6)
	*($9) = $7
	
.LABEL $label$9
	CALL db_idx64_update($7, $2, ($5 + [56]))
	
.LABEL $label$8
	*($5 + [56]) = *(($1 + [8]))
	if ( (CALL $17($4, ($5 + [56]), [8]) == 0) ){ goto $label$10 }
	$7 = ($1 + [76])
	$1 = *($7)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$11 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193539, ($5 + [48]), $6)
	*($7) = $1
	
.LABEL $label$11
	CALL db_idx64_update($1, $2, ($5 + [56]))
	
.LABEL $label$10
	$global$0 = ($5 + [80])
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([96])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = [773]
	*($5 + [28]) = [604800]
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [24])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [25])
	*($3 + [44]) = ($5 + [28])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [36])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [44])
	*($3 + [64]) = ($5 + [45])
	*($3 + [68]) = ($5 + [46])
	*($3 + [72]) = ($5 + [48])
	*($3 + [76]) = ($5 + [56])
	CALL $157(($3 + [32]), ($3 + [24]))
	*($5 + [84]) = $1
	*($3 + [24]) = $5
	*($3 + [32]) = (int_64)4982871455592087552
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)4982871455592087552
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $199(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [13779])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($1, $4, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $57 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [320])
	$global$0 = $4
	CALL require_auth($1)
	CALL $47($1, $3)
	CALL $58(($4 + [176]), *($0), $3)
	CALL $53(($4 + [96]), *($0), $3)
	if ( ((int_64)*($2) > (int_64)-1) ){ goto $label$1 }
	CALL eosio_assert([0], [8753])
	
.LABEL $label$1
	if ( ((int_64)*($2 + [8]) == (int_64)*(($4 + [160]))) ){ goto $label$2 }
	CALL eosio_assert([0], [13524])
	
.LABEL $label$2
	if ( ((int_64)*($2) <= (int_64)*($4 + [152])) ){ goto $label$3 }
	CALL eosio_assert([0], [9054])
	
.LABEL $label$3
	*($4 + [200]) = (*($4 + [200]) + [1])
	$5 = *($0)
	*((($4 + [208]) + [32])) = [0]
	*($4 + [216]) = $3
	*($4 + [208]) = $5
	*($4 + [224]) = (int_64)-1
	*($4 + [232]) = (int_64)0
	CALL $59(($4 + [208]), ($4 + [176]), (int_64)0)
	$6 = *($4 + [232])
	if ( ($6 == 0) ){ goto $label$4 }
	$7 = ($4 + [236])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$8 }
	CALL $10($9)
	
.LABEL $label$8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$7 }
	$8 = *(($4 + [232]))
	goto $label$5 
	
.LABEL $label$6
	$8 = $6
	
.LABEL $label$5
	*($7) = $6
	CALL $10($8)
	
.LABEL $label$4
	*((($4 + [56]) + [32])) = [0]
	*($4 + [72]) = (int_64)-1
	*($4 + [80]) = (int_64)0
	$5 = *($0)
	*($4 + [56]) = $5
	*($4 + [64]) = $3
	$8 = CALL db_find_i64($5, $3, (int_64)-6150061881596206944, $1)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$10 }
	$8 = CALL $60(($4 + [56]), $8)
	if ( ((int_32)*($8 + [36]) == (int_32)($4 + [56])) ){ goto $label$11 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$11
	*($4 + [52]) = $8
	*($4 + [48]) = ($4 + [56])
	goto $label$9 
	
.LABEL $label$10
	$8 = [0]
	*($4 + [52]) = [0]
	*($4 + [48]) = ($4 + [56])
	
.LABEL $label$9
	*(($4 + [40])) = (int_64)0
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$5 = *($0)
	*($4 + [8]) = $5
	*($4 + [16]) = $3
	$9 = CALL db_find_i64($5, $3, (int_64)4730634643120193536, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$14 }
	$8 = CALL $51(($4 + [8]), $9)
	if ( ((int_32)*($8 + [56]) == (int_32)($4 + [8])) ){ goto $label$15 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$15
	if ( (*($8 + [48]) == 0) ){ goto $label$16 }
	CALL eosio_assert([0], [8357])
	
.LABEL $label$16
	*($4 + [208]) = $2
	*($4 + [212]) = ($4 + [48])
	*($4 + [216]) = ($4 + [56])
	*($4 + [220]) = ($4 + [96])
	CALL $61(($4 + [8]), $8, $1, ($4 + [208]))
	$6 = *($4 + [32])
	if ( $6 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	if ( ($8 == 0) ){ goto $label$20 }
	if ( ((int_64)*(($8 + [16])) != (int_64)*($4 + [104])) ){ goto $label$21 }
	if ( ((int_64)*($8 + [8]) < (int_64)*($4 + [96])) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	CALL eosio_assert([0], [13524])
	if ( ((int_64)*($8 + [8]) >= (int_64)*($4 + [96])) ){ goto $label$19 }
	
.LABEL $label$20
	CALL eosio_assert([0], [9142])
	if ( ((int_64)CALL current_receiver() != (int_64)*($4 + [8])) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [8])) ){ goto $label$17 }
	
.LABEL $label$18
	CALL eosio_assert([0], [13785])
	
.LABEL $label$17
	*(($8 = CALL $8([80])) + [32]) = (int_64)0
	*($8 + [24]) = (int_64)0
	*($8 + [52]) = [0]
	*($8 + [56]) = ($4 + [8])
	*($8) = $1
	*(($8 + [16])) = *(($2 + [8]))
	*($8 + [8]) = *($2)
	$9 = *($4 + [52])
	$3 = *(($9 + [16]))
	$5 = *($9 + [8])
	*($8 + [40]) = (int_64)0
	*($8 + [48]) = [1]
	*($8 + [32]) = $3
	*($8 + [24]) = $5
	*($4 + [280]) = (($4 + [208]) + [53])
	*($4 + [276]) = ($4 + [208])
	*($4 + [272]) = ($4 + [208])
	*($4 + [288]) = ($4 + [272])
	$0 = ($8 + [8])
	*($4 + [300]) = $0
	*($4 + [296]) = $8
	*($4 + [304]) = ($8 + [24])
	$6 = ($8 + [40])
	*($4 + [308]) = $6
	*($4 + [312]) = ($8 + [48])
	*($4 + [316]) = ($8 + [52])
	CALL $56(($4 + [296]), ($4 + [288]))
	$3 = *($8)
	$9 = (($4 + [8]) + [8])
	*($8 + [60]) = CALL db_store_i64(*($9), (int_64)4730634643120193536, $1, $3, ($4 + [208]), [53])
	$2 = (($4 + [8]) + [16])
	if ( (uint_64)($3 <= *($2)) ){ goto $label$22 }
	*($2) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	$3 = *($9)
	$5 = *($8)
	*($4 + [296]) = $5
	*($8 + [64]) = CALL db_idx64_store($3, (int_64)4730634643120193536, $1, $5, ($4 + [296]))
	$3 = *($8)
	$5 = *($9)
	*($4 + [296]) = *($6)
	*($8 + [68]) = CALL db_idx64_store($5, (int_64)4730634643120193537, $1, $3, ($4 + [296]))
	$3 = *($8)
	$5 = *($9)
	*($4 + [296]) = ((int_64)*($6) ^ (int_64)-1)
	*($8 + [72]) = CALL db_idx64_store($5, (int_64)4730634643120193538, $1, $3, ($4 + [296]))
	$3 = *($8)
	$5 = *($9)
	*($4 + [296]) = *($0)
	*($8 + [76]) = CALL db_idx64_store($5, (int_64)4730634643120193539, $1, $3, ($4 + [296]))
	*($4 + [296]) = $8
	$3 = *($8)
	*($4 + [208]) = $3
	$6 = *(($8 + [60]))
	*($4 + [272]) = $6
	$0 = ($4 + [36])
	$9 = *($0)
	if ( ((uint_32)$9 >= (uint_32)*(($4 + [40]))) ){ goto $label$25 }
	*($9 + [8]) = $3
	*($9 + [16]) = $6
	*($4 + [296]) = [0]
	*($9) = $8
	*($0) = ($9 + [24])
	$8 = *($4 + [296])
	*($4 + [296]) = [0]
	if ( $8 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL $62(($4 + [32]), ($4 + [296]), ($4 + [208]), ($4 + [272]))
	$8 = *($4 + [296])
	*($4 + [296]) = [0]
	if ( ($8 == 0) ){ goto $label$23 }
	
.LABEL $label$24
	CALL $10($8)
	
.LABEL $label$23
	$3 = *($4 + [48])
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( $8) ){ goto $label$26 }
	CALL eosio_assert([0], [14177])
	CALL eosio_assert([0], [14211])
	
.LABEL $label$26
	$9 = CALL db_next_i64(*($8 + [40]), ($4 + [208]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$27 }
	CALL $60((CASTING uint_32)(uint_64 $3), $9)
	
.LABEL $label$27
	CALL $63(($4 + [56]), $8)
	$6 = *($4 + [32])
	if ( ($6 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$0 = ($4 + [36])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$29 }
	
.LOOP $label$30:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$31 }
	CALL $10($9)
	
.LABEL $label$31
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$30 }
	$8 = *(($4 + [32]))
	goto $label$28 
	
.LABEL $label$29
	$8 = $6
	
.LABEL $label$28
	*($0) = $6
	CALL $10($8)
	
.LABEL $label$12
	$6 = *($4 + [80])
	if ( ($6 == 0) ){ goto $label$32 }
	$0 = ($4 + [84])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$34 }
	
.LOOP $label$35:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$36 }
	if ( ((*($9 + [24]) & [1]) == 0) ){ goto $label$37 }
	CALL $10(*(($9 + [32])))
	
.LABEL $label$37
	CALL $10($9)
	
.LABEL $label$36
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$35 }
	$8 = *(($4 + [80]))
	goto $label$33 
	
.LABEL $label$34
	$8 = $6
	
.LABEL $label$33
	*($0) = $6
	CALL $10($8)
	
.LABEL $label$32
	$global$0 = ($4 + [320])
}

int_32 .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [14085])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $38($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $152 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$3 = ($global$0 - [192])
	$global$0 = $3
	CALL $40(($3 + [72]), $2)
	CALL prints([13836])
	CALL printui((int_64)0)
	CALL prints([8486])
	$4 = ($3 + [136])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$1 }
	if ( (*($5 + [16]) == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = $5
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [16]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = *((*($4) + [24]))
	CALL require_auth($6)
	$5 = *($1 + [44])
	if ( ($5 <= *($1 + [25])) ){ goto $label$3 }
	CALL eosio_assert([0], [12664])
	$5 = *(($1 + [44]))
	
.LABEL $label$3
	$4 = *($1 + [45])
	if ( ((uint_32)$4 <= (uint_32)($5 & [255])) ){ goto $label$4 }
	CALL eosio_assert([0], [12817])
	$4 = *(($1 + [45]))
	
.LABEL $label$4
	if ( ((uint_32)*($1 + [46]) <= (uint_32)($4 & [255])) ){ goto $label$5 }
	CALL eosio_assert([0], [12937])
	
.LABEL $label$5
	*((($3 + [32]) + [32])) = [0]
	*($3 + [40]) = $2
	*($3 + [48]) = (int_64)-1
	*($3 + [56]) = (int_64)0
	*($3 + [32]) = *($0)
	CALL $153(($3 + [32]), $1, $6)
	CALL $58($3, *($0), $2)
	$7 = *($0)
	*((($3 + [152]) + [32])) = [0]
	*($3 + [160]) = $2
	*($3 + [152]) = $7
	*($3 + [168]) = (int_64)-1
	*($3 + [176]) = (int_64)0
	CALL $59(($3 + [152]), $3, $6)
	$1 = *($3 + [176])
	if ( ($1 == 0) ){ goto $label$6 }
	$0 = ($3 + [180])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $10($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$9 }
	$5 = *(($3 + [176]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($0) = $1
	CALL $10($5)
	
.LABEL $label$6
	CALL prints([13055])
	CALL printn($2)
	$1 = *($3 + [56])
	if ( ($1 == 0) ){ goto $label$11 }
	$0 = ($3 + [60])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $10($4)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$14 }
	$5 = *(($3 + [56]))
	goto $label$12 
	
.LABEL $label$13
	$5 = $1
	
.LABEL $label$12
	*($0) = $1
	CALL $10($5)
	
.LABEL $label$11
	CALL $43(($3 + [132]), *(($3 + [136])))
	CALL $44(($3 + [120]), *(($3 + [124])))
	if ( ((*($3 + [88]) & [1]) == 0) ){ goto $label$16 }
	CALL $10(*(($3 + [96])))
	
.LABEL $label$16
	$global$0 = ($3 + [192])
}

void .FUNC $153 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [80]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4982871455592087552, (int_64)4982871455592087552)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $55($0, $4)
	if ( ((int_32)*($4 + [80]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$2
	*($3) = $1
	CALL $154($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $155($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $150 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [32])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $10($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $151 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [192])
	$global$0 = $5
	CALL prints([12569])
	CALL printn($1)
	CALL prints([12590])
	CALL printn($2)
	CALL prints([12596])
	CALL $119(($5 + [72]), $3)
	$6 = *($5 + [72])
	$7 = ($6 & [1])
	CALL prints_l(( *($5 + [80]) ? (($5 + [72]) | [1]) : $7 ), ( *($5 + [76]) ? uint_32($6 >> [1]) : $7 ))
	if ( ((*($5 + [72]) & [1]) == 0) ){ goto $label$1 }
	CALL $10(*(($5 + [80])))
	
.LABEL $label$1
	CALL $40(($5 + [72]), $4)
	$8 = *(($5 + [112]))
	CALL prints([12495])
	CALL printn($8)
	CALL require_auth($8)
	*(($5 + [64])) = [0]
	*($5 + [40]) = $4
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	*($5 + [68]) = [0]
	$8 = *($0)
	*($5 + [32]) = $8
	CALL $58($5, $8, $4)
	$7 = *(($5 + [60]))
	$9 = *($5 + [56])
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$6:
	$6 = ($7 + [-24])
	$10 = *($6)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$5 }
	$7 = $6
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$4 }
	if ( ((int_32)*($10 + [28]) == (int_32)($5 + [32])) ){ goto $label$7 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$7
	if ( $10 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = CALL db_find_i64(*($5 + [32]), *(($5 + [40])), (int_64)-2507752926491967488, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$10 = CALL $105(($5 + [32]), $6)
	if ( ((int_32)*($10 + [28]) == (int_32)($5 + [32])) ){ goto $label$3 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$3
	$8 = *($3)
	$1 = (int_64))((int_64)0 - $8)
	$7 = *(($10 + [20]))
	$6 = *($10 + [16])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$9 }
	
.LOOP $label$10:
	CALL $113($0, *($6), $1, $4)
	$6 = ($6 + [8])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$10 }
	$6 = *(($10 + [16]))
	$7 = *(($10 + [20]))
	$8 = *($3)
	goto $label$8 
	
.LABEL $label$9
	$7 = $6
	
.LABEL $label$8
	*($5 + [8]) = (int_64))(*($5 + [8]) - $8)
	*($5 + [16]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 int_32(($7 - $6) >> [3])) * (int_64)$1) + (int_64)*($5 + [16]))
	
.LABEL $label$2
	$7 = *(($5 + [60]))
	$9 = *(($5 + [56]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$13 }
	
.LOOP $label$15:
	$6 = ($7 + [-24])
	$10 = *($6)
	if ( ((int_64)*($10) == (int_64)$2) ){ goto $label$14 }
	$7 = $6
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$13 }
	if ( ((int_32)*($10 + [28]) == (int_32)($5 + [32])) ){ goto $label$16 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$16
	if ( $10 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$6 = CALL db_find_i64(*($5 + [32]), *(($5 + [40])), (int_64)-2507752926491967488, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$11 }
	$10 = CALL $105(($5 + [32]), $6)
	if ( ((int_32)*($10 + [28]) == (int_32)($5 + [32])) ){ goto $label$12 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$12
	$1 = *($3)
	$7 = *(($10 + [20]))
	$6 = *($10 + [16])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$18 }
	
.LOOP $label$19:
	CALL $113($0, *($6), $1, $4)
	$6 = ($6 + [8])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$19 }
	$6 = *(($10 + [16]))
	$7 = *(($10 + [20]))
	$2 = *($3)
	goto $label$17 
	
.LABEL $label$18
	$2 = $1
	$7 = $6
	
.LABEL $label$17
	*($5 + [8]) = ((int_64)*($5 + [8]) + (int_64)$2)
	*($5 + [16]) = ((int_64)((int_64)$1 * (int_64)(CASTING uint_64)(uint_32 int_32(($7 - $6) >> [3]))) + (int_64)*($5 + [16]))
	
.LABEL $label$11
	$1 = *($0)
	*(($5 + [184])) = [0]
	*($5 + [160]) = $4
	*($5 + [152]) = $1
	*($5 + [168]) = (int_64)-1
	*($5 + [176]) = (int_64)0
	CALL $59(($5 + [152]), $5, (int_64)0)
	$7 = *($5 + [176])
	if ( ($7 == 0) ){ goto $label$20 }
	$10 = ($5 + [180])
	$6 = *($10)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$22 }
	
.LOOP $label$23:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$24 }
	CALL $10($0)
	
.LABEL $label$24
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$23 }
	$6 = *(($5 + [176]))
	goto $label$21 
	
.LABEL $label$22
	$6 = $7
	
.LABEL $label$21
	*($10) = $7
	CALL $10($6)
	
.LABEL $label$20
	$10 = *($5 + [56])
	if ( ($10 == 0) ){ goto $label$25 }
	$9 = ($5 + [60])
	$6 = *($9)
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$27 }
	
.LOOP $label$28:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$29 }
	$7 = *($0 + [16])
	if ( ($7 == 0) ){ goto $label$30 }
	*(($0 + [20])) = $7
	CALL $10($7)
	
.LABEL $label$30
	CALL $10($0)
	
.LABEL $label$29
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$28 }
	$6 = *(($5 + [56]))
	goto $label$26 
	
.LABEL $label$27
	$6 = $10
	
.LABEL $label$26
	*($9) = $10
	CALL $10($6)
	
.LABEL $label$25
	CALL $43(($5 + [132]), *(($5 + [136])))
	CALL $44(($5 + [120]), *(($5 + [124])))
	if ( ((*($5 + [88]) & [1]) == 0) ){ goto $label$31 }
	CALL $10(*(($5 + [96])))
	
.LABEL $label$31
	$global$0 = ($5 + [192])
}

void .FUNC $156 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [92]) = $4
	*($3 + [88]) = $4
	*($3 + [96]) = ($4 + $5)
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = [773]
	*($3 + [36]) = [604800]
	*($3 + [64]) = (int_64)0
	*($3 + [104]) = ($3 + [88])
	*($3 + [116]) = ($3 + [32])
	*($3 + [120]) = ($3 + [33])
	*($3 + [124]) = ($3 + [36])
	*($3 + [128]) = ($3 + [40])
	*($3 + [132]) = ($3 + [44])
	*($3 + [136]) = ($3 + [48])
	*($3 + [140]) = ($3 + [52])
	*($3 + [144]) = ($3 + [53])
	*($3 + [148]) = ($3 + [54])
	*($3 + [152]) = ($3 + [56])
	*($3 + [156]) = ($3 + [64])
	*($3 + [112]) = ($3 + [8])
	CALL $157(($3 + [112]), ($3 + [104]))
	CALL eosio_assert([0], [12608])
	$global$0 = ($3 + [160])
}

void .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $230(*($1), *($0))
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy(($2 + [15]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [15]) != (int_32)[0])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$8 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$9 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	CALL $230(*($1), *($0 + [44]))
	$global$0 = ($2 + [16])
}

void .FUNC $154 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	$1 = CALL memcpy($1, *($3), [80])
	$3 = $4
	$4 = ($3 + [-80])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-10])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [24])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [25])
	*($5 + [44]) = ($1 + [28])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [36])
	*($5 + [56]) = ($1 + [40])
	*($5 + [60]) = ($1 + [44])
	*($5 + [64]) = ($1 + [45])
	*($5 + [68]) = ($1 + [46])
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [56])
	CALL $213(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [84]), $2, $4, [70])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)4982871455592087552) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)4982871455592087553
	
.LABEL $label$3
	$global$0 = ($5 + [80])
}

void .FUNC $155 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [13785])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL $8([96])
	CALL $212($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)4982871455592087552
	$5 = *($3 + [84])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)4982871455592087552
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $199(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $10($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $158 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [384])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [276]) = $2
	*($3 + [272]) = $2
	*($3 + [280]) = ($2 + $4)
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = (int_64)0
	*($3 + [200]) = (int_64)0
	*($3 + [192]) = (int_64)0
	*($3 + [208]) = (int_64)0
	*($3 + [216]) = [773]
	*($3 + [220]) = [604800]
	*($3 + [248]) = (int_64)0
	*($3 + [320]) = ($3 + [272])
	*($3 + [340]) = (($3 + [192]) + [24])
	*($3 + [344]) = ($3 + [217])
	*($3 + [348]) = ($3 + [220])
	*($3 + [352]) = ($3 + [224])
	*($3 + [356]) = ($3 + [228])
	*($3 + [360]) = ($3 + [232])
	*($3 + [364]) = ($3 + [236])
	*($3 + [368]) = ($3 + [237])
	*($3 + [372]) = ($3 + [238])
	*($3 + [376]) = ($3 + [240])
	*($3 + [380]) = ($3 + [248])
	*($3 + [336]) = ($3 + [192])
	CALL $157(($3 + [336]), ($3 + [320]))
	*($3 + [184]) = (int_64)0
	$2 = *($3 + [276])
	if ( ((uint_32)(*($3 + [280]) - $2) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$2 = *($3 + [276])
	
.LABEL $label$5
	CALL memcpy(($3 + [184]), $2, [8])
	*($3 + [276]) = (*($3 + [276]) + [8])
	*(($2 = (($3 + [168]) + [8]))) = *((($3 + [272]) + [8]))
	*($3 + [168]) = *($3 + [272])
	$2 = *($2)
	*((($3 + [288]) + [8])) = $2
	*(($4 = (($3 + [304]) + [8]))) = $2
	$5 = *($3 + [168])
	*($3 + [304]) = $5
	*($3 + [288]) = $5
	$2 = *($4)
	*((($3 + [320]) + [8])) = $2
	*((($3 + [336]) + [24])) = $2
	*($3 + [336]) = $0
	*($3 + [344]) = $1
	$0 = *($3 + [304])
	*($3 + [352]) = $0
	*($3 + [320]) = $0
	CALL memcpy(($3 + [88]), ($3 + [192]), [80])
	$0 = *($3 + [184])
	CALL memcpy(($3 + [8]), ($3 + [88]), [80])
	CALL $152(($3 + [336]), ($3 + [8]), $0)
	$global$0 = ($3 + [384])
}

void .FUNC $159 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [32]), $5, [8])
	*(($5 = (($3 + [72]) + [8]))) = *($3 + [32])
	*($3 + [64]) = (int_64)0
	$7 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$8
	CALL memcpy(($3 + [64]), $7, [8])
	*((($3 + [32]) + [24])) = $4
	$8 = *($5)
	*((($3 + [16]) + [8])) = $8
	*(($3 + [8])) = $8
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [32])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	$0 = *($3 + [72])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $146(($3 + [32]), *($3 + [88]), $3, *($3 + [64]))
	$global$0 = ($3 + [96])
}

void .FUNC $179 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [52]) = $2
	*($3 + [48]) = $2
	*($3 + [56]) = ($2 + $4)
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$2 = *($3 + [52])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [52]) = ($2 + [8])
	*($3 + [32]) = [0]
	*($3 + [24]) = (int_64)0
	CALL $180(($3 + [48]), ($3 + [24]))
	*($3 + [16]) = [0]
	*($3 + [8]) = (int_64)0
	$2 = (*($3 + [28]) - *($3 + [24]))
	if ( ($2 == 0) ){ goto $label$7 }
	$4 = int_32($2 >> [3])
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$6 }
	$2 = CALL $8($2)
	*(($3 + [16])) = ($2 + ($4 << [3]))
	*($3 + [8]) = $2
	*($3 + [12]) = $2
	$5 = *($3 + [24])
	$4 = (*($3 + [28]) - $5)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($2, $5, $4)
	*($3 + [12]) = (*($3 + [12]) + $4)
	
.LABEL $label$7
	CALL eosio_assert([0], [10215])
	$2 = *($3 + [8])
	if ( ($2 == 0) ){ goto $label$8 }
	*($3 + [12]) = $2
	CALL $10($2)
	
.LABEL $label$8
	$2 = *($3 + [24])
	if ( ($2 == 0) ){ goto $label$9 }
	*($3 + [28]) = $2
	CALL $10($2)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return (unreachable)
	
.LABEL $label$6
	CALL $33(($3 + [8]))
}

int_32 .FUNC $224 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[44]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$3 }
	
.LOOP $label$4:
	*($2 + [8]) = $0
	CALL $227($4, ($2 + [8]), [1])
	$7 = *($6 + [4])
	$6 = *($2 + [8])
	if ( ((int_32)(*($6 + [8]) - $7) > (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [13779])
	$7 = *(($6 + [4]))
	
.LABEL $label$5
	CALL memcpy($7, ($4 + [40]), [2])
	*(($6 = ($6 + [4]))) = (*($6) + [2])
	$4 = ($4 + [44])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $183 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*($3 + [24]) = [0]
	*($3 + [16]) = (int_64)0
	CALL $172(($3 + [32]), ($3 + [16]))
	$4 = CALL $24($3, ($3 + [16]))
	CALL eosio_assert([0], [11689])
	if ( (*($4) & [1]) ){ goto $label$6 }
	if ( (*($3 + [16]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $10(*($4 + [8]))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $10(*(($3 + [24])))
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [48])
}

void .FUNC $69 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [80])
	$global$0 = $4
	CALL $40($4, $3)
	CALL prints([13836])
	CALL printui((int_64)0)
	CALL prints([8486])
	$5 = ($4 + [64])
	$6 = *($5)
	if ( ($6 == 0) ){ goto $label$1 }
	if ( (*($6 + [16]) == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$5 = $6
	$6 = *($5)
	if ( ($6 == 0) ){ goto $label$1 }
	if ( *($6 + [16]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL require_auth(*((*($5) + [24])))
	CALL $65($0, $1, $2, $3)
	CALL $43(($4 + [60]), *(($4 + [64])))
	CALL $44(($4 + [48]), *(($4 + [52])))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $10(*(($4 + [24])))
	
.LABEL $label$3
	$global$0 = ($4 + [80])
}

void .FUNC $68 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [80])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	*($1 + [48]) = [0]
	$5 = *($1)
	*($4 + [16]) = $5
	$6 = ($1 + [40])
	$7 = *($6)
	*($4 + [24]) = $7
	$8 = ($1 + [8])
	*($4 + [40]) = *($8)
	*($4 + [32]) = ((int_64)$7 ^ (int_64)-1)
	$9 = ($1 + [48])
	if ( (*(*($2)) == 0) ){ goto $label$3 }
	CALL prints([14389])
	*($1 + [52]) = ((int_64)*(*($2 + [4])) / (int_64)1000000)
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [13720])
	
.LABEL $label$3
	$2 = $3
	$3 = ($2 + [-64])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($2 + [-11])
	*($4 + [48]) = $4
	*($4 + [68]) = $6
	*($4 + [72]) = $9
	*($4 + [56]) = $1
	*($4 + [60]) = $8
	*($4 + [64]) = ($1 + [24])
	*($4 + [76]) = ($1 + [52])
	CALL $56(($4 + [56]), ($4 + [48]))
	CALL db_update_i64(*($1 + [60]), (int_64)0, $3, [53])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$3 = (($4 + [16]) + [8])
	*($4 + [56]) = *($1)
	if ( (CALL $17(($4 + [16]), ($4 + [56]), [8]) == 0) ){ goto $label$5 }
	$8 = ($1 + [64])
	$2 = *($8)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$6 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($4 + [48]), $5)
	*($8) = $2
	
.LABEL $label$6
	CALL db_idx64_update($2, (int_64)0, ($4 + [56]))
	
.LABEL $label$5
	$2 = ($4 + [32])
	*($4 + [56]) = *($6)
	if ( (CALL $17($3, ($4 + [56]), [8]) == 0) ){ goto $label$7 }
	$8 = ($1 + [68])
	$3 = *($8)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$8 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193537, ($4 + [48]), $5)
	*($8) = $3
	
.LABEL $label$8
	CALL db_idx64_update($3, (int_64)0, ($4 + [56]))
	
.LABEL $label$7
	$3 = (($4 + [16]) + [24])
	*($4 + [56]) = ((int_64)*($6) ^ (int_64)-1)
	if ( (CALL $17($2, ($4 + [56]), [8]) == 0) ){ goto $label$9 }
	$2 = ($1 + [72])
	$6 = *($2)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$10 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193538, ($4 + [48]), $5)
	*($2) = $6
	
.LABEL $label$10
	CALL db_idx64_update($6, (int_64)0, ($4 + [56]))
	
.LABEL $label$9
	*($4 + [56]) = *(($1 + [8]))
	if ( (CALL $17($3, ($4 + [56]), [8]) == 0) ){ goto $label$11 }
	$6 = ($1 + [76])
	$1 = *($6)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$12 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193539, ($4 + [48]), $5)
	*($6) = $1
	
.LABEL $label$12
	CALL db_idx64_update($1, (int_64)0, ($4 + [56]))
	
.LABEL $label$11
	$global$0 = ($4 + [80])
}

int_32 .FUNC $225 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[24]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [31]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [31]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$6 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$4:
	*($2 + [8]) = $0
	*($2 + [16]) = $4
	*($2 + [20]) = ($4 + [16])
	CALL $228(($2 + [16]), ($2 + [8]))
	$4 = ($4 + [24])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $65 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [224])
	$global$0 = $4
	*($4 + [175]) = $2
	CALL $58(($4 + [136]), *($0), $3)
	CALL $53(($4 + [56]), *($0), $3)
	*($4 + [160]) = (*($4 + [160]) + [-1])
	$5 = *($0)
	*(($6 = (($4 + [176]) + [32]))) = [0]
	*($4 + [184]) = $3
	*($4 + [176]) = $5
	*($4 + [192]) = (int_64)-1
	*($4 + [200]) = (int_64)0
	CALL $59(($4 + [176]), ($4 + [136]), (int_64)0)
	$7 = *($4 + [200])
	if ( ($7 == 0) ){ goto $label$1 }
	$8 = ($4 + [204])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$9 = *($2)
	*($2) = [0]
	if ( ($9 == 0) ){ goto $label$5 }
	CALL $10($9)
	
.LABEL $label$5
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$4 }
	$2 = *(($4 + [200]))
	goto $label$2 
	
.LABEL $label$3
	$2 = $7
	
.LABEL $label$2
	*($8) = $7
	CALL $10($2)
	
.LABEL $label$1
	*($6) = (int_64)0
	*($4 + [184]) = $3
	*($4 + [192]) = (int_64)-1
	*($4 + [200]) = (int_64)0
	$5 = *($0)
	*($4 + [176]) = $5
	*((($4 + [16]) + [32])) = [0]
	*($4 + [24]) = $3
	*($4 + [16]) = $5
	*($4 + [32]) = (int_64)-1
	*($4 + [40]) = (int_64)0
	$2 = CALL $48(($4 + [176]), $1, [10073])
	$9 = CALL db_find_i64($5, $3, (int_64)4730638517607071744, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$6 }
	$9 = CALL $66(($4 + [16]), $9)
	if ( ((int_32)*($9 + [16]) == (int_32)($4 + [16])) ){ goto $label$7 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$7
	$7 = CALL db_next_i64(*($9 + [20]), ($4 + [216]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	CALL $66(($4 + [16]), $7)
	
.LABEL $label$8
	CALL $67(($4 + [16]), $9)
	
.LABEL $label$6
	*($4 + [216]) = ((int_64)CALL $34() + (int_64)((int_64)*($4 + [104]) * (int_64)1000000))
	CALL prints([10154])
	*($4 + [12]) = ($4 + [216])
	*($4 + [8]) = ($4 + [175])
	CALL $68(($4 + [176]), $2, ($4 + [8]))
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$9 }
	$0 = ($4 + [44])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($2 + [-24])
	$9 = *($2)
	*($2) = [0]
	if ( ($9 == 0) ){ goto $label$13 }
	CALL $10($9)
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$12 }
	$2 = *(($4 + [40]))
	goto $label$10 
	
.LABEL $label$11
	$2 = $7
	
.LABEL $label$10
	*($0) = $7
	CALL $10($2)
	
.LABEL $label$9
	$7 = *($4 + [200])
	if ( ($7 == 0) ){ goto $label$14 }
	$0 = ($4 + [204])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$17:
	$2 = ($2 + [-24])
	$9 = *($2)
	*($2) = [0]
	if ( ($9 == 0) ){ goto $label$18 }
	CALL $10($9)
	
.LABEL $label$18
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$17 }
	$2 = *(($4 + [200]))
	goto $label$15 
	
.LABEL $label$16
	$2 = $7
	
.LABEL $label$15
	*($0) = $7
	CALL $10($2)
	
.LABEL $label$14
	$global$0 = ($4 + [224])
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $8([48])) + [8]) = (int_64)0
	*($5) = [0]
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [28]) = [0]
	*($5 + [32]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [28])
	CALL $200(($3 + [40]), ($3 + [32]))
	*($5 + [36]) = $1
	*($3 + [32]) = $5
	*($3 + [40]) = (int_64)-4157503053760561152
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)-4157503053760561152
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $201(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14241])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [14286])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [14336])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $89(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $10($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $61 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	*($1 + [48]) = [1]
	$6 = *($1)
	*($5 + [16]) = $6
	$7 = ($1 + [40])
	$8 = *($7)
	*($5 + [24]) = $8
	$9 = ($1 + [8])
	*($5 + [40]) = *($9)
	*($5 + [32]) = ((int_64)$8 ^ (int_64)-1)
	$10 = *($3)
	*(($1 + [16])) = *(($10 + [8]))
	*($9) = *($10)
	$10 = *(*($3 + [4]) + [4])
	if ( ($10 == 0) ){ goto $label$4 }
	$11 = ($1 + [32])
	if ( ((int_64)*(($10 + [16])) == (int_64)*($11)) ){ goto $label$5 }
	CALL eosio_assert([0], [13898])
	
.LABEL $label$5
	$8 = ((int_64)*($1 + [24]) + (int_64)*($10 + [8]))
	*($1 + [24]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [13941])
	$8 = *(($1 + [24]))
	
.LABEL $label$6
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [13960])
	goto $label$3 
	
.LABEL $label$4
	$11 = ($1 + [32])
	
.LABEL $label$3
	$3 = *($3 + [12])
	if ( ((int_64)*($11) == (int_64)*($3 + [8])) ){ goto $label$7 }
	CALL eosio_assert([0], [13524])
	
.LABEL $label$7
	if ( ((int_64)*($1 + [24]) >= (int_64)*($3)) ){ goto $label$8 }
	CALL eosio_assert([0], [14093])
	
.LABEL $label$8
	$10 = ($1 + [48])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [13720])
	
.LABEL $label$9
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-11])
	*($5 + [48]) = $5
	*($5 + [60]) = $9
	*($5 + [68]) = $7
	*($5 + [72]) = $10
	*($5 + [56]) = $1
	*($5 + [64]) = ($1 + [24])
	*($5 + [76]) = ($1 + [52])
	CALL $56(($5 + [56]), ($5 + [48]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [53])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	$3 = (($5 + [16]) + [8])
	*($5 + [56]) = *($1)
	if ( (CALL $17(($5 + [16]), ($5 + [56]), [8]) == 0) ){ goto $label$11 }
	$9 = ($1 + [64])
	$4 = *($9)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$12 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($5 + [48]), $6)
	*($9) = $4
	
.LABEL $label$12
	CALL db_idx64_update($4, $2, ($5 + [56]))
	
.LABEL $label$11
	$4 = (($5 + [16]) + [16])
	*($5 + [56]) = *($7)
	if ( (CALL $17($3, ($5 + [56]), [8]) == 0) ){ goto $label$13 }
	$9 = ($1 + [68])
	$3 = *($9)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$14 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193537, ($5 + [48]), $6)
	*($9) = $3
	
.LABEL $label$14
	CALL db_idx64_update($3, $2, ($5 + [56]))
	
.LABEL $label$13
	$3 = ($5 + [40])
	*($5 + [56]) = ((int_64)*($7) ^ (int_64)-1)
	if ( (CALL $17($4, ($5 + [56]), [8]) == 0) ){ goto $label$15 }
	$4 = ($1 + [72])
	$7 = *($4)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$16 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193538, ($5 + [48]), $6)
	*($4) = $7
	
.LABEL $label$16
	CALL db_idx64_update($7, $2, ($5 + [56]))
	
.LABEL $label$15
	*($5 + [56]) = *(($1 + [8]))
	if ( (CALL $17($3, ($5 + [56]), [8]) == 0) ){ goto $label$17 }
	$3 = ($1 + [76])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$18 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193539, ($5 + [48]), $6)
	*($3) = $1
	
.LABEL $label$18
	CALL db_idx64_update($1, $2, ($5 + [56]))
	
.LABEL $label$17
	$global$0 = ($5 + [80])
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($3 = $2) + [44]) = $1
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$2 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$2 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*($3 + [8]) = $0
	*($3 + [12]) = ($3 + [32])
	*($3 + [16]) = ($3 + [44])
	*(($5 = CALL $8([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32]) = [0]
	*($5 + [36]) = $0
	CALL $215(($3 + [8]), $5)
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [8]) = $6
	$7 = *($5 + [40])
	*($3 + [4]) = $7
	$8 = ($0 + [28])
	$1 = *($8)
	if ( ((uint_32)$1 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($1 + [8]) = $6
	*($1 + [16]) = $7
	*($3 + [24]) = [0]
	*($1) = $5
	*($8) = ($1 + [24])
	if ( $2 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $150(($0 + [24]), ($3 + [24]), ($3 + [8]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [32])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14241])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [14286])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [14336])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $10(*(($5 + [32])))
	
.LABEL $label$13
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [24]) & [1]) == 0) ){ goto $label$16 }
	CALL $10(*(($8 + [32])))
	
.LABEL $label$16
	CALL $10($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [40]))
}

void .FUNC $62 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC apply (int_64 $0, int_64 apply, int_64 $2)
{
	CALL $0()
	CALL $156($0, $1)
	CALL $158($0, $1)
	CALL $159($0, $1)
	CALL $160($0, $1)
	CALL $161($0, $1)
	CALL $162($0, $1)
	CALL $163($0, $1)
	CALL $164($0, $1)
	CALL $165($0, $1)
	CALL $166($0, $1)
	CALL $167($0, $1)
	CALL $168($0, $1)
	CALL $169($0, $1)
	CALL $170($0, $1)
	CALL $171($0, $1)
	CALL $174($0, $1)
	CALL $175($0, $1)
	CALL $176($0, $1)
	CALL $177($0, $1)
	CALL $178($0, $1)
	CALL $179($0, $1)
	CALL $182($0, $1)
	CALL $183($0, $1)
	CALL $184($0, $1)
	CALL $185($0, $1)
	CALL $186($0, $1)
	CALL $187($0, $1)
	CALL $188($0, $1)
	CALL $189($0, $1)
	CALL $190($0, $1)
	CALL $191($0, $1)
	CALL $192($0, $1)
	CALL $193($0, $1)
	CALL $194($0, $1)
	CALL $195($0, $1)
	CALL eosio_assert_code([0], (int_64)8000000000000000000)
	CALL eosio_assert_code([0], (int_64)8000000000000000001)
	CALL $36([0])
	((int_64)$0 == (int_64)$1)
	((int_64)-3075276122089661248 == (int_64)$2)
	((int_64)-3075276122089661238 == (int_64)$2)
	((int_64)4732048857729966240 == (int_64)$2)
	((int_64)-3617168760267214416 == (int_64)$2)
	((int_64)-7123311857955133808 == (int_64)$2)
	((int_64)-7123311857955133792 == (int_64)$2)
	((int_64)-2039333636192229744 == (int_64)$2)
	((int_64)-2039333636192229728 == (int_64)$2)
	((int_64)6606398136736808960 == (int_64)$2)
	((int_64)6606398136742051840 == (int_64)$2)
	((int_64)-4994238767917809664 == (int_64)$2)
	((int_64)-4994238767917804544 == (int_64)$2)
	((int_64)6606398483286982656 == (int_64)$2)
	((int_64)6606398483292225536 == (int_64)$2)
	((int_64)-3075276122726858752 == (int_64)$2)
	((int_64)-3075276122726694912 == (int_64)$2)
	((int_64)-4149088294487982080 == (int_64)$2)
	((int_64)-4149088294487545984 == (int_64)$2)
	((int_64)-3075276114202636832 == (int_64)$2)
	((int_64)-3075276114202637152 == (int_64)$2)
	((int_64)-2507761262604058624 == (int_64)$2)
	((int_64)-2507761262598815744 == (int_64)$2)
	((int_64)-7297707859695370240 == (int_64)$2)
	((int_64)-7297707859695206400 == (int_64)$2)
	((int_64)-4708736118785595248 == (int_64)$2)
	((int_64)4921565043520176128 == (int_64)$2)
	((int_64)4921565043525419008 == (int_64)$2)
	((int_64)-4997502822803747360 == (int_64)$2)
	((int_64)-4999377782186881568 == (int_64)$2)
	((int_64)-3102536759825661952 == (int_64)$2)
	((int_64)-3102536759657889792 == (int_64)$2)
	((int_64)4923678915970629632 == (int_64)$2)
	((int_64)-7811085199994781696 == (int_64)$2)
	((int_64)4923678842997964800 == (int_64)$2)
	((int_64)-4417092946231296000 == (int_64)$2)
	((int_64)$0 != (int_64)6138663577826885632)
	((int_64)6138663577826885632 == (int_64)$1)
	((int_64)-6569208335818555392 == (int_64)$2)
}

void .FUNC $227 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($1)
	$1 = *($5 + [4])
	$6 = ($5 + [8])
	$7 = ($5 + [4])
	
.LOOP $label$1:
	$8 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$9 = ((int_64)$4) != (int_64)0
	*($3 + [15]) = (($9) << [7]) | ($8 & [127]))
	if ( ((int_32)(*($6) - $1) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$1 = *($7)
	
.LABEL $label$2
	CALL memcpy($1, ($3 + [15]), [1])
	$1 = (*($7) + [1])
	*($7) = $1
	if ( $9 ){ goto $label$1 }
	$7 = ($0 + [4])
	if ( ((int_32)(*(($5 + [8])) - $1) > (int_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$1 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $7, [33])
	*(($1 = ($5 + [4]))) = (*($1) + [33])
	$global$0 = ($3 + [16])
}

void .FUNC $228 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	$5 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $5
	$2 = ($2 + [8])
	if ( ((int_32)(*(($3 + [8])) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$5 = *($4)
	
.LABEL $label$2
	CALL memcpy($5, $2, [8])
	*($4) = (*($4) + [8])
	$5 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $5, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
}

int_32 .FUNC $229 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13583])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13583])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	*($2) = (*($2) + [8])
	$2 = ($1 + [40])
	$1 = *($0 + [4])
	$0 = CALL $230($0, ($1 + [16]))
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13583])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $1, [4])
	*(($1 = ($0 + [4]))) = (*($1) + [4])
	return $0
}

void .FUNC $89 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = $global$0
	$4 = $3
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	*($1 + [8]) = *(*($2))
	$5 = *($1)
	$3 = $3
	$2 = ($3 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($3 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $4
}

int_32 .FUNC $87 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [240])
	$global$0 = $3
	$4 = CALL $34()
	*(($3 + [204])) = (int_64)0
	*(($3 + [220])) = (int_64)0
	*(($3 + [228])) = (int_64)0
	*($3 + [188]) = [0]
	*($3 + [192]) = [0]
	*($3 + [196 align=4]) = (int_64)0
	*($3 + [212 align=4]) = (int_64)0
	*($3 + [176]) = ((CASTING uint_32)(uint_64 ((int_64)$4 / (int_64)1000000)) + [60])
	*(($3 + [144])) = (int_64)0
	*((($3 + [136]) + [24])) = (int_64)0
	*((($3 + [136]) + [32])) = (int_64)0
	*($3 + [136]) = (int_64)0
	*($3 + [152]) = (int_64)0
	*($3 + [88]) = (int_64)3617214756542218240
	*($3 + [80]) = $1
	*($3 + [24]) = $2
	*($3 + [16]) = $1
	*($3 + [32]) = (int_64)-6402241254016417792
	CALL $90((($3 + [16]) + [24]), ($3 + [136]))
	$5 = CALL $91(($3 + [96]), ($3 + [80]), (int_64)6138663577826885632, (int_64)-3075276123059568640, ($3 + [16]))
	CALL $92(($3 + [212]), $5)
	$6 = *($5 + [28])
	if ( ($6 == 0) ){ goto $label$1 }
	*(($5 + [32])) = $6
	CALL $10($6)
	
.LABEL $label$1
	$6 = *($5 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	*(($5 + [20])) = $6
	CALL $10($6)
	
.LABEL $label$2
	$5 = *(($3 + [68]))
	if ( ($5 == 0) ){ goto $label$3 }
	*(($3 + [72])) = $5
	CALL $10($5)
	
.LABEL $label$3
	$5 = *(($3 + [56]))
	if ( ($5 == 0) ){ goto $label$4 }
	*(($3 + [60])) = $5
	CALL $10($5)
	
.LABEL $label$4
	$5 = *(($3 + [44]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [48])) = $5
	CALL $10($5)
	
.LABEL $label$5
	$5 = [0]
	*($3 + [104]) = [0]
	*($3 + [96]) = (int_64)0
	*($3 + [16]) = [0]
	CALL $37(($3 + [16]), ($3 + [176]))
	$6 = *($3 + [16])
	if ( ($6 == 0) ){ goto $label$7 }
	CALL $38(($3 + [96]), $6)
	$7 = *($3 + [100])
	$6 = *($3 + [96])
	goto $label$6 
	
.LABEL $label$7
	$7 = [0]
	$6 = [0]
	
.LABEL $label$6
	*($3 + [20]) = $6
	*($3 + [16]) = $6
	*($3 + [24]) = $7
	CALL $39(($3 + [16]), ($3 + [176]))
	*($3 + [88]) = [0]
	*($3 + [80]) = (int_64)0
	*($3 + [24]) = (int_64)3617214756542218240
	*($3 + [16]) = $1
	CALL $93(($3 + [80]), ($3 + [16]))
	*($3 + [8]) = [0]
	*($3) = (int_64)0
	$7 = *($3 + [80])
	$6 = *($3 + [84])
	$8 = ($6 - $7)
	$1 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$8:
	$5 = ($5 + [-1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$8 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$12 }
	$6 = ($8 & [-16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$11 }
	$6 = [0]
	$5 = [0]
	goto $label$9 
	
.LABEL $label$12
	$5 = ([0] - $5)
	goto $label$10 
	
.LABEL $label$11
	$5 = ($6 - $5)
	
.LABEL $label$10
	CALL $38($3, $5)
	$6 = *($3 + [4])
	$5 = *($3)
	
.LABEL $label$9
	*($3 + [20]) = $5
	*($3 + [16]) = $5
	*($3 + [24]) = $6
	CALL $94(($3 + [16]), ($3 + [80]))
	$5 = *($3)
	$5 = *($3 + [96])
	$6 = CALL check_transaction_authorization($5, (*($3 + [100]) - $5), [0], [0], $5, (*($3 + [4]) - $5))
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$13 }
	*($3 + [4]) = $5
	CALL $10($5)
	
.LABEL $label$13
	$5 = *($3 + [80])
	if ( ($5 == 0) ){ goto $label$14 }
	*($3 + [84]) = $5
	CALL $10($5)
	
.LABEL $label$14
	$5 = *($3 + [96])
	if ( ($5 == 0) ){ goto $label$15 }
	*($3 + [100]) = $5
	CALL $10($5)
	
.LABEL $label$15
	$5 = *(($3 + [164]))
	if ( ($5 == 0) ){ goto $label$16 }
	*(($3 + [168])) = $5
	CALL $10($5)
	
.LABEL $label$16
	$5 = *(($3 + [152]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [156])) = $5
	CALL $10($5)
	
.LABEL $label$17
	$5 = *($3 + [140])
	if ( ($5 == 0) ){ goto $label$18 }
	*(($3 + [144])) = $5
	CALL $10($5)
	
.LABEL $label$18
	CALL $76(($3 + [176]))
	$global$0 = ($3 + [240])
	return ((int_32)$6 > (int_32)[0])
}

void .FUNC $86 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [128])
	$global$0 = $4
	*($4 + [88]) = $2
	CALL require_auth($1)
	CALL $47($1, $3)
	if ( CALL $87($0, $1, $2) ){ goto $label$1 }
	CALL eosio_assert([0], [9644])
	
.LABEL $label$1
	*((($4 + [48]) + [32])) = (int_64)0
	*($4 + [56]) = $3
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	*($4 + [48]) = *($0)
	CALL $48(($4 + [48]), $1, [9429])
	*((($4 + [8]) + [32])) = [0]
	*($4 + [16]) = $3
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$5 = *($0)
	*($4 + [8]) = $5
	$0 = CALL db_find_i64($5, $3, (int_64)4730638517607071744, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$8 }
	$0 = CALL $66(($4 + [8]), $0)
	if ( ((int_32)*($0 + [16]) == (int_32)($4 + [8])) ){ goto $label$9 }
	CALL eosio_assert([0], [13348])
	$2 = *($4 + [88])
	
.LABEL $label$9
	if ( ((int_64)$2 != (int_64)3617214756542218240) ){ goto $label$7 }
	$6 = CALL db_next_i64(*($0 + [20]), ($4 + [112]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$10 }
	CALL $66(($4 + [8]), $6)
	
.LABEL $label$10
	CALL $67(($4 + [8]), $0)
	$7 = *($4 + [32])
	if ( $7 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$8
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [8])) ){ goto $label$11 }
	CALL eosio_assert([0], [13785])
	
.LABEL $label$11
	*(($0 = CALL $8([32])) + [16]) = ($4 + [8])
	*($0) = $1
	*($0 + [8]) = *($4 + [88])
	CALL memcpy(($4 + [112]), $0, [8])
	CALL memcpy((($4 + [112]) | [8]), ($0 + [8]), [8])
	$3 = *($0)
	$7 = CALL db_store_i64(*((($4 + [8]) + [8])), (int_64)4730638517607071744, $1, $3, ($4 + [112]), [16])
	*($0 + [20]) = $7
	$6 = (($4 + [8]) + [16])
	if ( (uint_64)($3 <= *($6)) ){ goto $label$12 }
	*($6) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($4 + [104]) = $0
	$1 = *($0)
	*($4 + [112]) = $1
	*($4 + [100]) = $7
	$8 = ($4 + [36])
	$6 = *($8)
	if ( ((uint_32)$6 >= (uint_32)*((($4 + [8]) + [32]))) ){ goto $label$6 }
	*($6 + [8]) = $1
	*($6 + [16]) = $7
	*($4 + [104]) = [0]
	*($6) = $0
	*($8) = ($6 + [24])
	$0 = *($4 + [104])
	*($4 + [104]) = [0]
	if ( $0 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	*($4 + [112]) = ($4 + [88])
	CALL $88(($4 + [8]), $0, ($4 + [112]))
	$7 = *($4 + [32])
	if ( $7 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	CALL $89(($4 + [32]), ($4 + [104]), ($4 + [112]), ($4 + [100]))
	$0 = *($4 + [104])
	*($4 + [104]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $10($0)
	
.LABEL $label$4
	$7 = *($4 + [32])
	if ( ($7 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = ($4 + [36])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$14 }
	
.LOOP $label$15:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$16 }
	CALL $10($6)
	
.LABEL $label$16
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$15 }
	$0 = *(($4 + [32]))
	goto $label$13 
	
.LABEL $label$14
	$0 = $7
	
.LABEL $label$13
	*($8) = $7
	CALL $10($0)
	
.LABEL $label$2
	$7 = *($4 + [72])
	if ( ($7 == 0) ){ goto $label$17 }
	$8 = ($4 + [76])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$19 }
	
.LOOP $label$20:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$21 }
	CALL $10($6)
	
.LABEL $label$21
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$20 }
	$0 = *(($4 + [72]))
	goto $label$18 
	
.LABEL $label$19
	$0 = $7
	
.LABEL $label$18
	*($8) = $7
	CALL $10($0)
	
.LABEL $label$17
	$global$0 = ($4 + [128])
}

void .FUNC $85 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [80])
	$global$0 = $3
	CALL $40($3, $2)
	CALL prints([13836])
	CALL printui((int_64)0)
	CALL prints([8486])
	$4 = ($3 + [64])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$1 }
	if ( (*($5 + [16]) == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = $5
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [16]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL require_auth(*((*($4) + [24])))
	CALL $80($0, $1, $2)
	CALL $43(($3 + [60]), *(($3 + [64])))
	CALL $44(($3 + [48]), *(($3 + [52])))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $10(*(($3 + [24])))
	
.LABEL $label$3
	$global$0 = ($3 + [80])
}

void .FUNC $84 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [496])
	$global$0 = $2
	*(($2 + [488])) = [0]
	*($2 + [464]) = $1
	*($2 + [472]) = (int_64)-1
	*($2 + [480]) = (int_64)0
	*($2 + [492]) = [0]
	$3 = *($0)
	*($2 + [456]) = $3
	CALL $53(($2 + [376]), $3, $1)
	CALL $40(($2 + [296]), $1)
	CALL prints([13836])
	CALL printui((int_64)0)
	CALL prints([8486])
	$4 = ($2 + [360])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$1 }
	if ( (*($5 + [16]) == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = $5
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [16]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = *((*($4) + [24]))
	*($2 + [288]) = [0]
	*($2 + [280]) = (int_64)0
	CALL prints([11512])
	$5 = CALL db_lowerbound_i64(*($2 + [456]), *((($2 + [456]) + [8])), (int_64)5094022140569452544, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $81(($2 + [456]), $5)
	$6 = (($2 + [136]) + [16])
	$7 = (($2 + [280]) + [8])
	
.LOOP $label$4:
	CALL $101(($2 + [136]), $0, *($4), $1)
	*($6) = [1]
	$5 = *($2 + [284])
	if ( ((int_32)$5 == (int_32)*($7)) ){ goto $label$6 }
	*($5) = *($2 + [136])
	*(($5 + [16])) = *($6)
	*(($5 + [8])) = *((($2 + [136]) + [8]))
	*($2 + [284]) = ($5 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $102(($2 + [280]), ($2 + [136]))
	
.LABEL $label$5
	$5 = CALL db_next_i64(*($4 + [36]), ($2 + [136]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$3 }
	$4 = CALL $81(($2 + [456]), $5)
	goto $label$4 
	
.LABEL $label$3
	*(($2 + [252])) = (int_64)0
	*(($2 + [260])) = (int_64)0
	*($2 + [244 align=4]) = (int_64)0
	*($2 + [240]) = *($2 + [420])
	$5 = (*($2 + [284]) - *($2 + [280]))
	$4 = ((int_32)$5 / (int_32)[24])
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$10 }
	$5 = CALL $8($5)
	*(($2 + [256])) = $5
	*(($6 = ($2 + [260]))) = $5
	*((($2 + [240]) + [24])) = ($5 + ((int_32)$4 * (int_32)[24]))
	$0 = *($2 + [280])
	$4 = (*($2 + [284]) - $0)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$11 }
	CALL memcpy($5, $0, $4)
	*($6) = (*($6) + ((int_32)((uint_32)$4 / (uint_32)[24]) * (int_32)[24]))
	
.LABEL $label$11
	*(($2 + [276])) = [0]
	*($2 + [268 align=4]) = (int_64)0
	CALL prints([11543])
	*($2 + [104]) = (int_64)-6402241254016417792
	*($2 + [96]) = $3
	*($2 + [144]) = (int_64)7753175456936886272
	*($2 + [136]) = $3
	*($2 + [152]) = (int_64)3617214756542218240
	CALL $90(($2 + [160]), ($2 + [240]))
	$5 = CALL $91(($2 + [200]), ($2 + [96]), (int_64)6138663577826885632, (int_64)-3075276123059568640, ($2 + [136]))
	CALL $103($5)
	$4 = *($5 + [28])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($5 + [32])) = $4
	CALL $10($4)
	
.LABEL $label$12
	$4 = *($5 + [16])
	if ( ($4 == 0) ){ goto $label$13 }
	*(($5 + [20])) = $4
	CALL $10($4)
	
.LABEL $label$13
	$5 = *(($2 + [188]))
	if ( ($5 == 0) ){ goto $label$14 }
	*(($2 + [192])) = $5
	CALL $10($5)
	
.LABEL $label$14
	$5 = *(($2 + [176]))
	if ( ($5 == 0) ){ goto $label$15 }
	*(($2 + [180])) = $5
	CALL $10($5)
	
.LABEL $label$15
	$5 = *(($2 + [164]))
	if ( ($5 == 0) ){ goto $label$16 }
	*(($2 + [168])) = $5
	CALL $10($5)
	
.LABEL $label$16
	CALL prints([11596])
	*(($2 + [212])) = (int_64)0
	*(($2 + [220])) = (int_64)0
	*($2 + [204 align=4]) = (int_64)0
	*($2 + [200]) = *($2 + [421])
	$5 = (*($2 + [284]) - *($2 + [280]))
	$4 = ((int_32)$5 / (int_32)[24])
	if ( ($5 == 0) ){ goto $label$17 }
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$9 }
	$5 = CALL $8($5)
	*(($2 + [216])) = $5
	*(($6 = ($2 + [220]))) = $5
	*((($2 + [200]) + [24])) = ($5 + ((int_32)$4 * (int_32)[24]))
	$0 = *($2 + [280])
	$4 = (*($2 + [284]) - $0)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$17 }
	CALL memcpy($5, $0, $4)
	*($6) = (*($6) + ((int_32)((uint_32)$4 / (uint_32)[24]) * (int_32)[24]))
	
.LABEL $label$17
	*(($2 + [236])) = [0]
	*($2 + [228 align=4]) = (int_64)0
	*($2 + [64]) = (int_64)-6402241254016417792
	*($2 + [56]) = $3
	*($2 + [144]) = (int_64)-7885239997572317184
	*($2 + [136]) = $3
	*($2 + [152]) = (int_64)7753175456936886272
	CALL $90((($2 + [136]) + [24]), ($2 + [200]))
	$5 = CALL $91(($2 + [96]), ($2 + [56]), (int_64)6138663577826885632, (int_64)-3075276123059568640, ($2 + [136]))
	CALL $103($5)
	$4 = *($5 + [28])
	if ( ($4 == 0) ){ goto $label$18 }
	*(($5 + [32])) = $4
	CALL $10($4)
	
.LABEL $label$18
	$4 = *($5 + [16])
	if ( ($4 == 0) ){ goto $label$19 }
	*(($5 + [20])) = $4
	CALL $10($4)
	
.LABEL $label$19
	$5 = *(($2 + [188]))
	if ( ($5 == 0) ){ goto $label$20 }
	*(($2 + [192])) = $5
	CALL $10($5)
	
.LABEL $label$20
	$5 = *(($2 + [176]))
	if ( ($5 == 0) ){ goto $label$21 }
	*(($2 + [180])) = $5
	CALL $10($5)
	
.LABEL $label$21
	$5 = *(($2 + [164]))
	if ( ($5 == 0) ){ goto $label$22 }
	*(($2 + [168])) = $5
	CALL $10($5)
	
.LABEL $label$22
	*(($2 + [108])) = (int_64)0
	*(($2 + [116])) = (int_64)0
	*($2 + [100 align=4]) = (int_64)0
	*($2 + [96]) = *($2 + [422])
	$5 = (*($2 + [284]) - *($2 + [280]))
	$4 = ((int_32)$5 / (int_32)[24])
	if ( ($5 == 0) ){ goto $label$23 }
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$8 }
	$5 = CALL $8($5)
	*(($2 + [112])) = $5
	*(($6 = ($2 + [116]))) = $5
	*((($2 + [96]) + [24])) = ($5 + ((int_32)$4 * (int_32)[24]))
	$0 = *($2 + [280])
	$4 = (*($2 + [284]) - $0)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$23 }
	CALL memcpy($5, $0, $4)
	*($6) = (*($6) + ((int_32)((uint_32)$4 / (uint_32)[24]) * (int_32)[24]))
	
.LABEL $label$23
	*(($2 + [132])) = [0]
	*($2 + [124 align=4]) = (int_64)0
	*($2 + [24]) = (int_64)-6402241254016417792
	*($2 + [16]) = $3
	*($2 + [144]) = (int_64)-8270860715665915904
	*($2 + [136]) = $3
	*($2 + [152]) = (int_64)-7885239997572317184
	CALL $90((($2 + [136]) + [24]), ($2 + [96]))
	$5 = CALL $91(($2 + [56]), ($2 + [16]), (int_64)6138663577826885632, (int_64)-3075276123059568640, ($2 + [136]))
	CALL $103($5)
	$4 = *($5 + [28])
	if ( ($4 == 0) ){ goto $label$24 }
	*(($5 + [32])) = $4
	CALL $10($4)
	
.LABEL $label$24
	$4 = *($5 + [16])
	if ( ($4 == 0) ){ goto $label$25 }
	*(($5 + [20])) = $4
	CALL $10($4)
	
.LABEL $label$25
	$5 = *(($2 + [188]))
	if ( ($5 == 0) ){ goto $label$26 }
	*(($2 + [192])) = $5
	CALL $10($5)
	
.LABEL $label$26
	$5 = *(($2 + [176]))
	if ( ($5 == 0) ){ goto $label$27 }
	*(($2 + [180])) = $5
	CALL $10($5)
	
.LABEL $label$27
	$5 = *(($2 + [164]))
	if ( ($5 == 0) ){ goto $label$28 }
	*(($2 + [168])) = $5
	CALL $10($5)
	
.LABEL $label$28
	*(($2 + [64])) = (int_64)0
	*((($2 + [56]) + [24])) = [0]
	*($2 + [56]) = (int_64)1
	*($2 + [72]) = (int_64)0
	$5 = (*($2 + [284]) - *($2 + [280]))
	$4 = ((int_32)$5 / (int_32)[24])
	if ( ($5 == 0) ){ goto $label$29 }
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$7 }
	$5 = CALL $8($5)
	*(($2 + [72])) = $5
	*(($6 = ($2 + [76]))) = $5
	*((($2 + [56]) + [24])) = ($5 + ((int_32)$4 * (int_32)[24]))
	$0 = *($2 + [280])
	$4 = (*($2 + [284]) - $0)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$29 }
	CALL memcpy($5, $0, $4)
	*($6) = (*($6) + ((int_32)((uint_32)$4 / (uint_32)[24]) * (int_32)[24]))
	
.LABEL $label$29
	*(($2 + [92])) = [0]
	*($2 + [84 align=4]) = (int_64)0
	*($2 + [8]) = (int_64)-6402241254016417792
	*($2) = $3
	*($2 + [144]) = (int_64)-6569625956426711040
	*($2 + [136]) = $3
	*($2 + [152]) = (int_64)-8270860715665915904
	CALL $90((($2 + [136]) + [24]), ($2 + [56]))
	$5 = CALL $91(($2 + [16]), $2, (int_64)6138663577826885632, (int_64)-3075276123059568640, ($2 + [136]))
	CALL $103($5)
	$4 = *($5 + [28])
	if ( ($4 == 0) ){ goto $label$30 }
	*(($5 + [32])) = $4
	CALL $10($4)
	
.LABEL $label$30
	$4 = *($5 + [16])
	if ( ($4 == 0) ){ goto $label$31 }
	*(($5 + [20])) = $4
	CALL $10($4)
	
.LABEL $label$31
	$5 = *(($2 + [188]))
	if ( ($5 == 0) ){ goto $label$32 }
	*(($2 + [192])) = $5
	CALL $10($5)
	
.LABEL $label$32
	$5 = *(($2 + [176]))
	if ( ($5 == 0) ){ goto $label$33 }
	*(($2 + [180])) = $5
	CALL $10($5)
	
.LABEL $label$33
	$5 = *((($2 + [136]) + [28]))
	if ( ($5 == 0) ){ goto $label$34 }
	*(($2 + [168])) = $5
	CALL $10($5)
	
.LABEL $label$34
	CALL prints([11650])
	$5 = *((($2 + [56]) + [28]))
	if ( ($5 == 0) ){ goto $label$35 }
	*(($2 + [88])) = $5
	CALL $10($5)
	
.LABEL $label$35
	$5 = *($2 + [72])
	if ( ($5 == 0) ){ goto $label$36 }
	*(($2 + [76])) = $5
	CALL $10($5)
	
.LABEL $label$36
	$5 = *($2 + [60])
	if ( ($5 == 0) ){ goto $label$37 }
	*(($2 + [64])) = $5
	CALL $10($5)
	
.LABEL $label$37
	$5 = *(($2 + [124]))
	if ( ($5 == 0) ){ goto $label$38 }
	*(($2 + [128])) = $5
	CALL $10($5)
	
.LABEL $label$38
	$5 = *($2 + [112])
	if ( ($5 == 0) ){ goto $label$39 }
	*(($2 + [116])) = $5
	CALL $10($5)
	
.LABEL $label$39
	$5 = *($2 + [100])
	if ( ($5 == 0) ){ goto $label$40 }
	*(($2 + [104])) = $5
	CALL $10($5)
	
.LABEL $label$40
	$5 = *(($2 + [228]))
	if ( ($5 == 0) ){ goto $label$41 }
	*(($2 + [232])) = $5
	CALL $10($5)
	
.LABEL $label$41
	$5 = *($2 + [216])
	if ( ($5 == 0) ){ goto $label$42 }
	*(($2 + [220])) = $5
	CALL $10($5)
	
.LABEL $label$42
	$5 = *($2 + [204])
	if ( ($5 == 0) ){ goto $label$43 }
	*(($2 + [208])) = $5
	CALL $10($5)
	
.LABEL $label$43
	$5 = *(($2 + [268]))
	if ( ($5 == 0) ){ goto $label$44 }
	*(($2 + [272])) = $5
	CALL $10($5)
	
.LABEL $label$44
	$5 = *($2 + [256])
	if ( ($5 == 0) ){ goto $label$45 }
	*(($2 + [260])) = $5
	CALL $10($5)
	
.LABEL $label$45
	$5 = *($2 + [244])
	if ( ($5 == 0) ){ goto $label$46 }
	*(($2 + [248])) = $5
	CALL $10($5)
	
.LABEL $label$46
	$5 = *($2 + [280])
	if ( ($5 == 0) ){ goto $label$47 }
	*($2 + [284]) = $5
	CALL $10($5)
	
.LABEL $label$47
	CALL $43(($2 + [356]), *(($2 + [360])))
	CALL $44(($2 + [344]), *(($2 + [348])))
	if ( ((*($2 + [312]) & [1]) == 0) ){ goto $label$48 }
	CALL $10(*(($2 + [320])))
	
.LABEL $label$48
	$6 = *($2 + [480])
	if ( ($6 == 0) ){ goto $label$49 }
	$0 = ($2 + [484])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$51 }
	
.LOOP $label$52:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$53 }
	CALL $10($4)
	
.LABEL $label$53
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$52 }
	$5 = *(($2 + [480]))
	goto $label$50 
	
.LABEL $label$51
	$5 = $6
	
.LABEL $label$50
	*($0) = $6
	CALL $10($5)
	
.LABEL $label$49
	$global$0 = ($2 + [496])
	return (unreachable)
	
.LABEL $label$10
	CALL $33(($2 + [256]))
	
.LABEL $label$9
	CALL $33(($2 + [216]))
	
.LABEL $label$8
	CALL $33(($2 + [112]))
	
.LABEL $label$7
	CALL $33(($2 + [72]))
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $83 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$3 = ($global$0 - [304])
	$global$0 = $3
	CALL prints([11168])
	*((($3 + [224]) + [32])) = [0]
	*($3 + [232]) = $2
	*($3 + [240]) = (int_64)-1
	*($3 + [248]) = (int_64)0
	*($3 + [260]) = [0]
	$4 = *($0)
	*($3 + [224]) = $4
	*((($3 + [184]) + [32])) = (int_64)0
	*($3 + [192]) = $2
	*($3 + [184]) = $4
	*($3 + [200]) = (int_64)-1
	*($3 + [208]) = (int_64)0
	CALL $53(($3 + [104]), $4, $2)
	CALL $40(($3 + [16]), $2)
	CALL prints([13836])
	CALL printui((int_64)0)
	CALL prints([8486])
	$5 = ($3 + [80])
	$6 = *($5)
	if ( ($6 == 0) ){ goto $label$1 }
	if ( (*($6 + [16]) == 0) ){ goto $label$1 }
	$0 = $6
	
.LOOP $label$2:
	$5 = $0
	$0 = *($5)
	if ( ($0 == 0) ){ goto $label$1 }
	if ( *($0 + [16]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = *((*($5) + [24]))
	CALL $43(($3 + [76]), $6)
	CALL $44(($3 + [64]), *(($3 + [68])))
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$3 }
	CALL $10(*((($3 + [16]) + [24])))
	
.LABEL $label$3
	*($3 + [8]) = ($3 + [184])
	*($3 + [16]) = (int_64)0
	CALL $95($3, ($3 + [8]), ($3 + [16]))
	$7 = *($3 + [129])
	if ( $1 ){ goto $label$4 }
	CALL prints([11210])
	$0 = CALL db_lowerbound_i64(*($3 + [224]), *(($3 + [232])), (int_64)5094022140569452544, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $81(($3 + [224]), $0)
	
.LOOP $label$5:
	$5 = CALL $48(($3 + [184]), *($0), [11301])
	*($3 + [16]) = ($3 + [104])
	CALL $96(($3 + [184]), $5, ($3 + [16]))
	$5 = [0]
	$6 = CALL db_next_i64(*($0 + [36]), ($3 + [16]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$5 = CALL $81(($3 + [224]), $6)
	
.LABEL $label$6
	CALL $82(($3 + [224]), $0)
	$0 = $5
	if ( $5 ){ goto $label$5 }
	
.LABEL $label$4
	CALL prints([11413])
	$1 = [0]
	$0 = CALL db_lowerbound_i64(*($3 + [224]), *(($3 + [232])), (int_64)5094022140569452544, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$7 }
	$0 = CALL db_next_i64(*(CALL $81(($3 + [224]), $0) + [36]), ($3 + [16]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$8 }
	$1 = [1]
	
.LOOP $label$9:
	$1 = ($1 + [1])
	$0 = CALL db_next_i64(*(CALL $81(($3 + [224]), $0) + [36]), ($3 + [16]))
	if ( ((int_32)$0 >= (int_32)[0]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$1 = [1]
	
.LABEL $label$7
	$8 = ($7 & [255])
	if ( ((uint_32)($1 & [255]) >= (uint_32)$8) ){ goto $label$10 }
	$9 = (($3 + [224]) + [24])
	$10 = (($3 + [16]) + [32])
	$11 = ($3 + [252])
	$12 = (($3 + [224]) + [8])
	
.LOOP $label$12:
	$0 = *($3 + [4])
	if ( ($0 == 0) ){ goto $label$11 }
	if ( ((int_64)*($0 + [40]) == (int_64)0) ){ goto $label$11 }
	if ( (*($0 + [48]) == 0) ){ goto $label$14 }
	$2 = *($0)
	$5 = *($11)
	$6 = *($9)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$18:
	$0 = ($5 + [-24])
	$7 = *($0)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$17 }
	$5 = $0
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$16 }
	if ( ((int_32)*($7 + [32]) != (int_32)($3 + [224])) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$0 = CALL db_find_i64(*($3 + [224]), *($12), (int_64)5094022140569452544, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$13 }
	if ( ((int_32)*(CALL $81(($3 + [224]), $0) + [32]) == (int_32)($3 + [224])) ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], [13348])
	
.LABEL $label$14
	CALL $97($3)
	if ( (($1 & [255]) <= $8) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [224])) ){ goto $label$19 }
	CALL eosio_assert([0], [13785])
	
.LABEL $label$19
	*(($0 = CALL $8([48])) + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [32]) = ($3 + [224])
	$5 = *($3 + [4])
	*($0) = *($5)
	*($0 + [16]) = *(($5 + [16]))
	*($0 + [8]) = *($5 + [8])
	*($0 + [24]) = *($5 + [40])
	*((($3 + [264]) + [8])) = $10
	*($3 + [268]) = ($3 + [16])
	*($3 + [264]) = ($3 + [16])
	*($3 + [280]) = ($3 + [264])
	$5 = ($0 + [24])
	*((($3 + [288]) + [8])) = $5
	$6 = ($0 + [8])
	*($3 + [292]) = $6
	*($3 + [288]) = $0
	CALL $98(($3 + [288]), ($3 + [280]))
	$2 = *($0)
	*($0 + [36]) = CALL db_store_i64(*($12), (int_64)5094022140569452544, $4, $2, ($3 + [16]), [32])
	$7 = (($3 + [224]) + [16])
	if ( (uint_64)($2 <= *($7)) ){ goto $label$20 }
	*($7) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	$2 = *($0)
	$13 = *($12)
	*($3 + [288]) = ((int_64)*($5) ^ (int_64)-1)
	*($0 + [40]) = CALL db_idx64_store($13, (int_64)5094022140569452544, $4, $2, ($3 + [288]))
	$2 = *($0)
	$13 = *($12)
	*($3 + [288]) = *($6)
	*($0 + [44]) = CALL db_idx64_store($13, (int_64)5094022140569452545, $4, $2, ($3 + [288]))
	*($3 + [288]) = $0
	$2 = *($0)
	*($3 + [16]) = $2
	$6 = *(($0 + [36]))
	*($3 + [264]) = $6
	$5 = *($11)
	if ( ((uint_32)$5 >= (uint_32)*((($3 + [224]) + [32]))) ){ goto $label$23 }
	*($5 + [8]) = $2
	*($5 + [16]) = $6
	*($3 + [288]) = [0]
	*($5) = $0
	*($11) = ($5 + [24])
	$0 = *($3 + [288])
	*($3 + [288]) = [0]
	if ( $0 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL $99($9, ($3 + [288]), ($3 + [16]), ($3 + [264]))
	$0 = *($3 + [288])
	*($3 + [288]) = [0]
	if ( ($0 == 0) ){ goto $label$21 }
	
.LABEL $label$22
	CALL $10($0)
	
.LABEL $label$21
	$0 = *($3 + [4])
	*($3 + [16]) = ($3 + [104])
	if ( $0 ){ goto $label$24 }
	CALL eosio_assert([0], [13588])
	
.LABEL $label$24
	CALL $100(*($3 + [8]), $0, ($3 + [16]))
	CALL $97($3)
	$1 = ($1 + [1])
	if ( (($1 & [255]) <= $8) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL prints([11461])
	
.LABEL $label$10
	$6 = *($3 + [208])
	if ( ($6 == 0) ){ goto $label$25 }
	$1 = ($3 + [212])
	$0 = *($1)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$27 }
	
.LOOP $label$28:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$29 }
	CALL $10($5)
	
.LABEL $label$29
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$28 }
	$0 = *(($3 + [208]))
	goto $label$26 
	
.LABEL $label$27
	$0 = $6
	
.LABEL $label$26
	*($1) = $6
	CALL $10($0)
	
.LABEL $label$25
	$6 = *($3 + [248])
	if ( ($6 == 0) ){ goto $label$30 }
	$1 = ($3 + [252])
	$0 = *($1)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$32 }
	
.LOOP $label$33:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$34 }
	CALL $10($5)
	
.LABEL $label$34
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$33 }
	$0 = *(($3 + [248]))
	goto $label$31 
	
.LABEL $label$32
	$0 = $6
	
.LABEL $label$31
	*($1) = $6
	CALL $10($0)
	
.LABEL $label$30
	$global$0 = ($3 + [304])
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14241])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [14286])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [14336])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $10($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $10($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
	$9 = *(($1 + [40]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5094022140569452544, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$9 = *(($1 + [44]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5094022140569452545, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	CALL $218(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = $1
	*($5 + [40 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $99(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $80 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = [0]
	*(($3 + [32])) = [0]
	*($3 + [8]) = $2
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	*($3 + [36]) = [0]
	$5 = *($0)
	*($3) = $5
	$6 = CALL db_find_i64($5, $2, (int_64)5094022140569452544, $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$4 = CALL $81($3, $6)
	if ( ((int_32)*($4 + [32]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$4
	CALL prints([10029])
	if ( ($4 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9928])
	CALL prints([10029])
	if ( [0] ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [14177])
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	$6 = CALL db_next_i64(*($4 + [36]), ($3 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	CALL $81($3, $6)
	
.LABEL $label$5
	CALL $82($3, $4)
	CALL $65($0, $1, [1], $2)
	CALL $83($0, [1], $2)
	CALL $84($0, $2)
	$6 = *($3 + [24])
	if ( ($6 == 0) ){ goto $label$6 }
	$7 = ($3 + [28])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $10($4)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($3 + [24]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $6
	
.LABEL $label$7
	*($7) = $6
	CALL $10($0)
	
.LABEL $label$6
	$global$0 = ($3 + [48])
}

void .FUNC $182 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	*($3 + [104]) = ($2 + $4)
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [100]) = ($2 + [8])
	*($3 + [80]) = [0]
	*($3 + [72]) = (int_64)0
	CALL $180(($3 + [96]), ($3 + [72]))
	*($3 + [64]) = (int_64)0
	$2 = *($3 + [100])
	$4 = (($3 + [96]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [64]), $2, [8])
	*($3 + [100]) = (*($3 + [100]) + [8])
	*(($2 = (($3 + [16]) + [8]))) = *($4)
	*($3 + [16]) = *($3 + [96])
	$2 = *($2)
	*((($3 + [112]) + [8])) = $2
	*(($4 = (($3 + [128]) + [8]))) = $2
	$5 = *($3 + [16])
	*($3 + [128]) = $5
	*($3 + [112]) = $5
	$2 = *($4)
	*((($3 + [144]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$0 = *($3 + [128])
	*($3 + [48]) = $0
	*($3 + [144]) = $0
	*($3) = (int_64)0
	*($3 + [8]) = [0]
	$0 = *($3 + [88])
	$2 = (*($3 + [76]) - *($3 + [72]))
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = int_32($2 >> [3])
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$7 }
	$2 = CALL $8($2)
	*(($3 + [8])) = ($2 + ($4 << [3]))
	*($3) = $2
	*($3 + [4]) = $2
	$6 = *($3 + [72])
	$4 = (*($3 + [76]) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($2, $6, $4)
	*($3 + [4]) = (*($3 + [4]) + $4)
	
.LABEL $label$8
	CALL $104(($3 + [32]), $0, $3, *($3 + [64]))
	$2 = *($3)
	if ( ($2 == 0) ){ goto $label$9 }
	*($3 + [4]) = $2
	CALL $10($2)
	
.LABEL $label$9
	$2 = *($3 + [72])
	if ( ($2 == 0) ){ goto $label$10 }
	*($3 + [76]) = $2
	CALL $10($2)
	
.LABEL $label$10
	$global$0 = ($3 + [160])
	return (unreachable)
	
.LABEL $label$7
	CALL $33($3)
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$4 = *($4 + [4])
	*(($1 + [16])) = *(($4 + [8]))
	*($1 + [8]) = *($4)
	$4 = *($1 + [24])
	$6 = ( *(($1 + [28])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($6 + [24])
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	CALL $237($3, $1)
	$7 = *($1)
	*($1 + [40]) = CALL db_store_i64(*($5 + [8]), (int_64)-6150061881596206944, *(*($0 + [8])), $7, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$7 >= (uint_64)*($5 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $3($2)
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [16])
}

void .FUNC $148 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [13898])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [13941])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [13960])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [13720])
	
.LABEL $label$4
	$3 = *($1 + [24])
	$8 = ( *(($1 + [28])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [24])
	$7 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ($3 <= [513]) ){ goto $label$11 }
	$4 = CALL $2($3)
	goto $label$10 
	
.LABEL $label$11
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$10
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL $237($5, $1)
	CALL db_update_i64(*($1 + [40]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $3($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	
.LABEL $label$13
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$12
	$global$0 = ($5 + [16])
}

int_32 .FUNC $145 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = [0]
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	*($3 + [36]) = [0]
	$5 = *($0)
	*($3) = $5
	*($3 + [8]) = $5
	$0 = CALL db_find_i64($5, $5, (int_64)-6150061881656115200, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $137($3, $0)
	if ( ((int_32)*($0 + [44]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$2
	if ( (CALL has_auth(*($0 + [8])) == 0) ){ goto $label$1 }
	$6 = ($0 + [8])
	CALL $47(*($6), $2)
	CALL require_auth(*($6))
	$6 = CALL db_next_i64(*($0 + [48]), ($3 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	CALL $137($3, $6)
	
.LABEL $label$3
	CALL $142($3, $0)
	$4 = [1]
	
.LABEL $label$1
	$7 = *($3 + [24])
	if ( ($7 == 0) ){ goto $label$4 }
	$8 = ($3 + [28])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$8 }
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*(($6 + [40])))
	
.LABEL $label$9
	CALL $10($6)
	
.LABEL $label$8
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($3 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $7
	
.LABEL $label$5
	*($8) = $7
	CALL $10($0)
	
.LABEL $label$4
	$global$0 = ($3 + [48])
	return $4
}

void .FUNC $144 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	if ( CALL $145($0, $1, $2) ){ goto $label$1 }
	*(($3 + [40])) = [0]
	*($3 + [16]) = $2
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	*($3 + [44]) = [0]
	*($3 + [8]) = *($0)
	$0 = CALL $134(($3 + [8]), $1, [12324])
	CALL $47(*($0 + [8]), $2)
	CALL require_auth(*($0 + [8]))
	CALL $141(($3 + [8]), $0)
	$4 = *($3 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	$5 = ($3 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $10($6)
	
.LABEL $label$5
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($3 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $4
	
.LABEL $label$2
	*($5) = $4
	CALL $10($0)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
}

void .FUNC $147 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	$6 = *($1)
	*($5 + [16]) = $6
	$7 = ($1 + [40])
	$8 = *($7)
	*($5 + [24]) = $8
	*($5 + [40]) = *(($1 + [8]))
	*($5 + [32]) = ((int_64)$8 ^ (int_64)-1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$3 }
	CALL eosio_assert([0], [13898])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $8
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$8 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [13941])
	if ( ((int_64)*(($1 + [24])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [13960])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [13720])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-64])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-11])
	*($5 + [48]) = $5
	*($5 + [68]) = $7
	*($5 + [56]) = $1
	*($5 + [60]) = ($1 + [8])
	*($5 + [64]) = ($1 + [24])
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [52])
	CALL $56(($5 + [56]), ($5 + [48]))
	CALL db_update_i64(*($1 + [60]), $2, $4, [53])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$4 = (($5 + [16]) + [8])
	*($5 + [56]) = *($1)
	if ( (CALL $17(($5 + [16]), ($5 + [56]), [8]) == 0) ){ goto $label$10 }
	$9 = ($1 + [64])
	$3 = *($9)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$11 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($5 + [48]), $6)
	*($9) = $3
	
.LABEL $label$11
	CALL db_idx64_update($3, $2, ($5 + [56]))
	
.LABEL $label$10
	$3 = ($5 + [32])
	*($5 + [56]) = *($7)
	if ( (CALL $17($4, ($5 + [56]), [8]) == 0) ){ goto $label$12 }
	$9 = ($1 + [68])
	$4 = *($9)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$13 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193537, ($5 + [48]), $6)
	*($9) = $4
	
.LABEL $label$13
	CALL db_idx64_update($4, $2, ($5 + [56]))
	
.LABEL $label$12
	$4 = ($5 + [40])
	*($5 + [56]) = ((int_64)*($7) ^ (int_64)-1)
	if ( (CALL $17($3, ($5 + [56]), [8]) == 0) ){ goto $label$14 }
	$3 = ($1 + [72])
	$7 = *($3)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$15 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193538, ($5 + [48]), $6)
	*($3) = $7
	
.LABEL $label$15
	CALL db_idx64_update($7, $2, ($5 + [56]))
	
.LABEL $label$14
	*($5 + [56]) = *(($1 + [8]))
	if ( (CALL $17($4, ($5 + [56]), [8]) == 0) ){ goto $label$16 }
	$7 = ($1 + [76])
	$1 = *($7)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$17 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193539, ($5 + [48]), $6)
	*($7) = $1
	
.LABEL $label$17
	CALL db_idx64_update($1, $2, ($5 + [56]))
	
.LABEL $label$16
	$global$0 = ($5 + [80])
}

void .FUNC $146 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [224])
	$global$0 = $4
	*($4 + [176]) = $1
	CALL $40(($4 + [96]), $3)
	$5 = *(($4 + [136]))
	CALL prints([12495])
	CALL printn($5)
	CALL require_auth($5)
	*((($4 + [56]) + [32])) = (int_64)0
	*($4 + [64]) = $3
	*($4 + [72]) = (int_64)-1
	*($4 + [80]) = (int_64)0
	$5 = *($0)
	*($4 + [56]) = $5
	$6 = CALL db_find_i64($5, $3, (int_64)4730634643120193536, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $51(($4 + [56]), $6)
	if ( ((int_32)*($6 + [56]) == (int_32)($4 + [56])) ){ goto $label$4 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$4
	$3 = *($0)
	*($4 + [16]) = $2
	CALL $147(($4 + [56]), $6, $3, ($4 + [16]))
	$6 = *($4 + [80])
	if ( $6 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*((($4 + [16]) + [32])) = [0]
	*($4 + [32]) = (int_64)-1
	*($4 + [40]) = (int_64)0
	$5 = *($0)
	*($4 + [16]) = $5
	*($4 + [24]) = $3
	$6 = CALL db_find_i64($5, $3, (int_64)-6150061881596206944, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $60(($4 + [16]), $6)
	if ( ((int_32)*($6 + [36]) == (int_32)($4 + [16])) ){ goto $label$8 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$8
	$3 = *($0)
	*($4 + [192]) = $2
	CALL $148(($4 + [16]), $6, $3, ($4 + [192]))
	CALL prints([12512])
	CALL printn(*($4 + [176]))
	$6 = *($4 + [40])
	if ( $6 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$3 = *($0)
	*($4 + [12]) = $2
	*($4 + [8]) = ($4 + [176])
	*($4 + [216]) = $3
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [16])) ){ goto $label$9 }
	CALL eosio_assert([0], [13785])
	
.LABEL $label$9
	*($4 + [196]) = ($4 + [8])
	*($4 + [192]) = ($4 + [16])
	*($4 + [200]) = ($4 + [216])
	*(($0 = CALL $8([48])) + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [24 align=4]) = (int_64)0
	*($0 + [32]) = [0]
	*($0 + [36]) = ($4 + [16])
	CALL $149(($4 + [192]), $0)
	*($4 + [208]) = $0
	$3 = *($0)
	*($4 + [192]) = $3
	$6 = *($0 + [40])
	*($4 + [188]) = $6
	$7 = ($4 + [44])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($4 + [48]))) ){ goto $label$12 }
	*($2 + [8]) = $3
	*($2 + [16]) = $6
	*($4 + [208]) = [0]
	*($2) = $0
	*($7) = ($2 + [24])
	$0 = *($4 + [208])
	*($4 + [208]) = [0]
	if ( $0 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $150(($4 + [40]), ($4 + [208]), ($4 + [192]), ($4 + [188]))
	$0 = *($4 + [208])
	*($4 + [208]) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((*($0 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $10(*(($0 + [32])))
	
.LABEL $label$13
	CALL $10($0)
	
.LABEL $label$10
	CALL prints([12546])
	CALL printn(*($4 + [176]))
	$6 = *($4 + [40])
	if ( ($6 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($4 + [44])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	if ( ((*($2 + [24]) & [1]) == 0) ){ goto $label$18 }
	CALL $10(*(($2 + [32])))
	
.LABEL $label$18
	CALL $10($2)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($4 + [40]))
	goto $label$14 
	
.LABEL $label$15
	$0 = $6
	
.LABEL $label$14
	*($7) = $6
	CALL $10($0)
	
.LABEL $label$5
	$6 = *($4 + [80])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($4 + [84])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$20 }
	
.LOOP $label$21:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$22 }
	CALL $10($2)
	
.LABEL $label$22
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$21 }
	$0 = *(($4 + [80]))
	goto $label$19 
	
.LABEL $label$20
	$0 = $6
	
.LABEL $label$19
	*($7) = $6
	CALL $10($0)
	
.LABEL $label$1
	CALL $43(($4 + [156]), *(($4 + [160])))
	CALL $44(($4 + [144]), *(($4 + [148])))
	if ( ((*($4 + [112]) & [1]) == 0) ){ goto $label$23 }
	CALL $10(*(($4 + [120])))
	
.LABEL $label$23
	$global$0 = ($4 + [224])
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14241])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [14286])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [14336])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $10($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $10($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [48]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $143(($2 + [8]), ($0 + [36]), ($0 + [37]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $140 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = [0]
	if ( ((int_64)*($0) != (int_64)$2) ){ goto $label$1 }
	CALL require_auth($2)
	$4 = [0]
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	*($3 + [44]) = [0]
	$2 = *($0)
	*($3 + [8]) = $2
	*($3 + [16]) = $2
	$0 = CALL db_find_i64($2, $2, (int_64)-6150061881656115200, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $137(($3 + [8]), $0)
	if ( ((int_32)*($4 + [44]) == (int_32)($3 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [13348])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [12324])
	
.LABEL $label$2
	CALL $142(($3 + [8]), $4)
	$5 = *($3 + [32])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($3 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*(($4 + [40])))
	
.LABEL $label$9
	CALL $10($4)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($3 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $10($0)
	
.LABEL $label$4
	$4 = [1]
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $4
}

void .FUNC $143 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [32])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4 + [4])
	$6 = *($5 + [52])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = *($4)
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-6150061881656114176, $3, *($5))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($6)
	
.LABEL $label$1
	$6 = *($0)
	$4 = *($6 + [4])
	$0 = *(($4 + [56]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = *($6)
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	$0 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)-6150061881656114175, $3, [2], *($4))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx256_remove($0)
	
.LABEL $label$3
	$global$0 = ($3 + [32])
}

void .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14241])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [14286])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [14336])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$13 }
	CALL $10(*(($6 + [40])))
	
.LABEL $label$13
	CALL $10($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$16 }
	CALL $10(*(($9 + [40])))
	
.LABEL $label$16
	CALL $10($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [48]))
	$9 = *($1 + [52])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6150061881656115200, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

int_32 .FUNC $72 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL $8([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $38($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $77(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[40])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[107374183]) ){ goto $label$2 }
	$5 = [107374182]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL $8(((int_32)$5 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1 + [16 align=4])
	*($1 + [16 align=4]) = (int_64)0
	$4 = ($1 + [24])
	$7 = *($4)
	*($4) = (int_64)0
	$4 = ($1 + [32])
	$8 = *($4)
	*($4) = (int_64)0
	*(($9 = ($2 + ((int_32)$3 * (int_32)[40])))) = *($1)
	*($9 + [16 align=4]) = $6
	*(($9 + [8])) = *(($1 + [8]))
	*(($9 + [24])) = $7
	*(($9 + [32])) = $8
	$10 = ($2 + ((int_32)$5 * (int_32)[40]))
	$11 = ($9 + [40])
	$1 = *($0)
	$12 = *(($0 + [4]))
	if ( ((int_32)$12 == (int_32)$1) ){ goto $label$6 }
	$13 = ($1 - $12)
	$2 = [0]
	
.LOOP $label$7:
	$5 = ($12 + $2)
	*((($1 = ($9 + $2)) + [-32])) = *(($5 + [-32]))
	*(($1 + [-40])) = *(($5 + [-40]))
	*(($3 = ($1 + [-24]))) = (int_64)0
	*(($4 = ($1 + [-16]))) = [0]
	$14 = ($5 + [-24])
	*($3) = *($14)
	$3 = ($5 + [-16])
	*($4) = *($3)
	*($3) = [0]
	*(($3 = ($1 + [-12]))) = (int_64)0
	*(($1 = ($1 + [-4]))) = [0]
	$4 = ($5 + [-12])
	*($3) = *($4)
	*($14) = (int_64)0
	$5 = ($5 + [-4])
	*($1) = *($5)
	*($5) = [0]
	*($4) = (int_64)0
	$2 = ($2 + [-40])
	if ( ((int_32)$13 != (int_32)$2) ){ goto $label$7 }
	$9 = ($9 + $2)
	$1 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $1
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = *(($1 + [-12]))
	if ( ($5 == 0) ){ goto $label$10 }
	*(($1 + [-8])) = $5
	CALL $10($5)
	
.LABEL $label$10
	$5 = ($1 + [-40])
	$2 = *(($1 + [-24]))
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [-20])) = $2
	CALL $10($2)
	
.LABEL $label$11
	$1 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $10($3)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $70 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$3 = ($global$0 - [256])
	$global$0 = $3
	CALL $71($3, *($0), $1, $2)
	CALL $53(($3 + [168]), *($0), $2)
	$4 = *($3 + [184])
	$5 = *($3 + [176])
	*(($3 + [160])) = (int_64)0
	*($3 + [136]) = $2
	*($3 + [144]) = (int_64)-1
	*($3 + [152]) = (int_64)0
	*($3 + [128]) = *($0)
	$6 = CALL $48(($3 + [128]), $1, [9429])
	$7 = CALL $34()
	*(($3 + [196])) = (int_64)0
	*(($3 + [212])) = (int_64)0
	*(($3 + [220])) = (int_64)0
	*($3 + [180]) = [0]
	*($3 + [184]) = [0]
	*($3 + [188 align=4]) = (int_64)0
	*($3 + [204 align=4]) = (int_64)0
	*($3 + [168]) = ((CASTING uint_32)(uint_64 ((int_64)$7 / (int_64)1000000)) + [60])
	*($3 + [80]) = (int_64)-1525189753492733952
	$7 = *($0)
	*($3 + [72]) = $7
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$8 = CALL $16([9500])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$9 = ($6 + [24])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$4 }
	*($3) = ($8 << [1])
	$6 = ($3 | [1])
	if ( $8 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$10 = (($8 + [16]) & [-16])
	$6 = CALL $8($10)
	*($3) = ($10 | [1])
	*($3 + [8]) = $6
	*($3 + [4]) = $8
	
.LABEL $label$3
	CALL memcpy($6, [9500], $8)
	
.LABEL $label$2
	$10 = ($3 + [204])
	*(($6 + $8)) = [0]
	*((($3 + [16]) + [24])) = *(($9 + [8]))
	$11 = *($9)
	$8 = ($3 + [8])
	*((($3 + [16]) + [40])) = *($8)
	*($8) = [0]
	*($3 + [24]) = $1
	*($3 + [16]) = $7
	*($3 + [32]) = $11
	*($3 + [48]) = *($3)
	*($3) = (int_64)0
	$8 = CALL $72(($3 + [88]), ($3 + [72]), $4, (int_64)-3617168760277827584, ($3 + [16]))
	$9 = (($3 + [168]) + [40])
	$6 = *($9)
	if ( ((uint_32)$6 >= (uint_32)*(($3 + [212]))) ){ goto $label$7 }
	*($6) = *($3 + [88])
	*($6 + [16]) = [0]
	*(($6 + [8])) = *((($3 + [88]) + [8]))
	*(($12 = ($6 + [20]))) = (int_64)0
	*($6 + [16]) = *($8 + [16])
	$13 = ($8 + [20])
	*($12) = *($13)
	$12 = ($8 + [24])
	*(($6 + [24])) = *($12)
	*($12) = [0]
	*($6 + [28 align=4]) = (int_64)0
	*($13) = [0]
	*($8 + [16]) = [0]
	*(($12 = ($6 + [36]))) = [0]
	*($6 + [28]) = *($8 + [28])
	$6 = ($8 + [32])
	*(($6 + [32])) = *($6)
	$13 = ($8 + [36])
	*($12) = *($13)
	*($6) = [0]
	*($8 + [28]) = [0]
	*($13) = [0]
	*($9) = (*($9) + [40])
	$6 = *($8 + [16])
	if ( $6 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $73($10, $8)
	$6 = *($8 + [28])
	if ( ($6 == 0) ){ goto $label$8 }
	*(($8 + [32])) = $6
	CALL $10($6)
	
.LABEL $label$8
	$6 = *($8 + [16])
	if ( ($6 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*(($8 + [20])) = $6
	CALL $10($6)
	
.LABEL $label$5
	if ( ((*(($3 + [48])) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*(($3 + [56])))
	
.LABEL $label$9
	if ( ((*($3) & [1]) == 0) ){ goto $label$10 }
	CALL $10(*(($3 + [8])))
	
.LABEL $label$10
	$4 = (uint_64)$5 >> (uint_64)(int_64)8)
	$11 = *($0)
	$8 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$7 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$4 = $7
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$4 = $7
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$6 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $6 ){ goto $label$15 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [13864])
	
.LABEL $label$11
	*((($3 + [88]) + [16])) = $5
	*($3 + [96]) = (int_64)0
	*($3 + [88]) = $1
	*($3 + [112]) = $2
	*($3 + [16]) = $11
	*($3 + [24]) = (int_64)4923678915970629632
	*(($8 = CALL $8([16]))) = $11
	*($8 + [8]) = (int_64)-6216093385678127104
	*(($6 = (($3 + [16]) + [36]))) = [0]
	$12 = ($8 + [16])
	*(($9 = (($3 + [16]) + [24]))) = $12
	*(($13 = (($3 + [16]) + [20]))) = $12
	*($3 + [32]) = $8
	*($3 + [44 align=4]) = (int_64)0
	$12 = ($3 + [44])
	CALL $38($12, [32])
	$14 = (($3 + [16]) + [32])
	$8 = *($14)
	$15 = *($3 + [44])
	*($3 + [76]) = $15
	*($3 + [72]) = $15
	*($3 + [80]) = $8
	*($3 + [248]) = ($3 + [72])
	*($3) = ($3 + [88])
	CALL $74($3, ($3 + [248]))
	$15 = (($3 + [168]) + [40])
	$8 = *($15)
	if ( ((uint_32)$8 >= (uint_32)*(($3 + [212]))) ){ goto $label$18 }
	*($8) = *($3 + [16])
	*($8 + [16]) = [0]
	*(($8 + [8])) = *((($3 + [16]) + [8]))
	*(($10 = ($8 + [20]))) = (int_64)0
	$16 = (($3 + [16]) + [16])
	*($8 + [16]) = *($16)
	*($10) = *($13)
	*(($8 + [24])) = *($9)
	*($9) = [0]
	*($8 + [28 align=4]) = (int_64)0
	*($13) = [0]
	*($16) = [0]
	*(($9 = ($8 + [36]))) = [0]
	*($8 + [28]) = *($12)
	*(($8 + [32])) = *($14)
	*($9) = *($6)
	*($14) = [0]
	*($12) = [0]
	*($6) = [0]
	*($15) = (*($15) + [40])
	$8 = *($3 + [32])
	if ( $8 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $73($10, ($3 + [16]))
	$8 = *($3 + [44])
	if ( ($8 == 0) ){ goto $label$19 }
	*(($3 + [48])) = $8
	CALL $10($8)
	
.LABEL $label$19
	$8 = *($3 + [32])
	if ( ($8 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	*(($3 + [36])) = $8
	CALL $10($8)
	
.LABEL $label$16
	*(($3 + [188])) = [3600]
	*($3 + [24]) = (int_64)0
	*($3 + [16]) = $1
	CALL $75(($3 + [168]), ($3 + [16]), *($0), [0])
	CALL $76(($3 + [168]))
	$9 = *($3 + [152])
	if ( ($9 == 0) ){ goto $label$20 }
	$0 = ($3 + [156])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$22 }
	
.LOOP $label$23:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$24 }
	CALL $10($6)
	
.LABEL $label$24
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$23 }
	$8 = *(($3 + [152]))
	goto $label$21 
	
.LABEL $label$22
	$8 = $9
	
.LABEL $label$21
	*($0) = $9
	CALL $10($8)
	
.LABEL $label$20
	$global$0 = ($3 + [256])
	return (unreachable)
	
.LABEL $label$1
	CALL $23($3)
}

void .FUNC $71 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [208])
	$global$0 = $4
	CALL $40(($4 + [128]), $3)
	CALL $43(($4 + [188]), *(($4 + [192])))
	CALL $44(($4 + [176]), *(($4 + [180])))
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$1 }
	CALL $10(*(($4 + [152])))
	
.LABEL $label$1
	*(($4 + [120])) = (int_64)0
	*($4 + [96]) = $3
	*($4 + [88]) = $1
	*($4 + [104]) = (int_64)-1
	*($4 + [112]) = (int_64)0
	$5 = CALL $48(($4 + [88]), $2, [9429])
	CALL $53(($4 + [8]), $1, $3)
	if ( (*($5 + [48]) == 0) ){ goto $label$2 }
	CALL eosio_assert([0], [9697])
	
.LABEL $label$2
	$3 = CALL $34()
	if ( (*($5 + [52]) <= (CASTING uint_32)(uint_64 ((int_64)$3 / (int_64)1000000))) ){ goto $label$3 }
	CALL eosio_assert([0], [9815])
	
.LABEL $label$3
	$6 = *($4 + [112])
	if ( ($6 == 0) ){ goto $label$4 }
	$7 = ($4 + [116])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = ($5 + [-24])
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$8 }
	CALL $10($8)
	
.LABEL $label$8
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$7 }
	$5 = *(($4 + [112]))
	goto $label$5 
	
.LABEL $label$6
	$5 = $6
	
.LABEL $label$5
	*($7) = $6
	CALL $10($5)
	
.LABEL $label$4
	$global$0 = ($4 + [208])
}

int_32 .FUNC $76 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $10($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $10($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $10($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $10($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $10($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13779])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $217(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *(($5 + [16]))
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [24])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $1) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13779])
	$1 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $75 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $37(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $38($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $39(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL $10($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

void .FUNC $78 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [48])
	$global$0 = $4
	CALL require_auth(*($0))
	CALL $71($0, *($0), $1, $3)
	*(($4 + [40])) = (int_64)0
	*($4 + [16]) = $3
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [8]) = *($0)
	$0 = CALL $48(($4 + [8]), $1, [9429])
	*($4) = $2
	CALL $79(($4 + [8]), $0, $1, $4)
	$5 = *($4 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = ($4 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $10($2)
	
.LABEL $label$5
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($4 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $5
	
.LABEL $label$2
	*($6) = $5
	CALL $10($0)
	
.LABEL $label$1
	$global$0 = ($4 + [48])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	$6 = *($1)
	*($5 + [16]) = $6
	$7 = ($1 + [40])
	$8 = *($7)
	*($5 + [24]) = $8
	$9 = ($1 + [8])
	*($5 + [40]) = *($9)
	*($5 + [32]) = ((int_64)$8 ^ (int_64)-1)
	$3 = *($3)
	*(($1 + [32])) = *(($3 + [8]))
	*($1 + [24]) = *($3)
	$3 = $4
	$4 = ($3 + [-64])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-11])
	*($5 + [48]) = $5
	*($5 + [60]) = $9
	*($5 + [56]) = $1
	*($5 + [64]) = ($1 + [24])
	*($5 + [68]) = $7
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [52])
	CALL $56(($5 + [56]), ($5 + [48]))
	CALL db_update_i64(*($1 + [60]), $2, $4, [53])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$4 = (($5 + [16]) + [8])
	*($5 + [56]) = *($1)
	if ( (CALL $17(($5 + [16]), ($5 + [56]), [8]) == 0) ){ goto $label$4 }
	$9 = ($1 + [64])
	$3 = *($9)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$5 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($5 + [48]), $6)
	*($9) = $3
	
.LABEL $label$5
	CALL db_idx64_update($3, $2, ($5 + [56]))
	
.LABEL $label$4
	$3 = (($5 + [16]) + [16])
	*($5 + [56]) = *($7)
	if ( (CALL $17($4, ($5 + [56]), [8]) == 0) ){ goto $label$6 }
	$9 = ($1 + [68])
	$4 = *($9)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$7 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193537, ($5 + [48]), $6)
	*($9) = $4
	
.LABEL $label$7
	CALL db_idx64_update($4, $2, ($5 + [56]))
	
.LABEL $label$6
	$4 = (($5 + [16]) + [24])
	*($5 + [56]) = ((int_64)*($7) ^ (int_64)-1)
	if ( (CALL $17($3, ($5 + [56]), [8]) == 0) ){ goto $label$8 }
	$3 = ($1 + [72])
	$7 = *($3)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$9 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193538, ($5 + [48]), $6)
	*($3) = $7
	
.LABEL $label$9
	CALL db_idx64_update($7, $2, ($5 + [56]))
	
.LABEL $label$8
	*($5 + [56]) = *(($1 + [8]))
	if ( (CALL $17($4, ($5 + [56]), [8]) == 0) ){ goto $label$10 }
	$7 = ($1 + [76])
	$1 = *($7)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$11 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193539, ($5 + [48]), $6)
	*($7) = $1
	
.LABEL $label$11
	CALL db_idx64_update($1, $2, ($5 + [56]))
	
.LABEL $label$10
	$global$0 = ($5 + [80])
}

void .FUNC $223 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13779])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $99 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13779])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13779])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $95 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)4730634643120193538, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [56]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [13348])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $51($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)4730634643120193536, $6))
	if ( ((int_32)*($4 + [56]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$2
	*(($4 + [72])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $96 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [80])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	$5 = *($1)
	*($4 + [16]) = $5
	$6 = ($1 + [40])
	$7 = *($6)
	*($4 + [24]) = $7
	$8 = ($1 + [8])
	*($4 + [40]) = *($8)
	*($4 + [32]) = ((int_64)$7 ^ (int_64)-1)
	CALL prints([14389])
	$7 = CALL $34()
	*($1 + [52]) = (*(*($2) + [48]) + (CASTING uint_32)(uint_64 ((int_64)$7 / (int_64)1000000)))
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [13720])
	
.LABEL $label$3
	$2 = $3
	$3 = ($2 + [-64])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($2 + [-11])
	*($4 + [48]) = $4
	*($4 + [68]) = $6
	*($4 + [56]) = $1
	*($4 + [60]) = $8
	*($4 + [64]) = ($1 + [24])
	*($4 + [72]) = ($1 + [48])
	*($4 + [76]) = ($1 + [52])
	CALL $56(($4 + [56]), ($4 + [48]))
	CALL db_update_i64(*($1 + [60]), (int_64)0, $3, [53])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$3 = (($4 + [16]) + [8])
	*($4 + [56]) = *($1)
	if ( (CALL $17(($4 + [16]), ($4 + [56]), [8]) == 0) ){ goto $label$5 }
	$8 = ($1 + [64])
	$2 = *($8)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$6 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($4 + [48]), $5)
	*($8) = $2
	
.LABEL $label$6
	CALL db_idx64_update($2, (int_64)0, ($4 + [56]))
	
.LABEL $label$5
	$2 = ($4 + [32])
	*($4 + [56]) = *($6)
	if ( (CALL $17($3, ($4 + [56]), [8]) == 0) ){ goto $label$7 }
	$8 = ($1 + [68])
	$3 = *($8)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$8 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193537, ($4 + [48]), $5)
	*($8) = $3
	
.LABEL $label$8
	CALL db_idx64_update($3, (int_64)0, ($4 + [56]))
	
.LABEL $label$7
	$3 = (($4 + [16]) + [24])
	*($4 + [56]) = ((int_64)*($6) ^ (int_64)-1)
	if ( (CALL $17($2, ($4 + [56]), [8]) == 0) ){ goto $label$9 }
	$2 = ($1 + [72])
	$6 = *($2)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$10 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193538, ($4 + [48]), $5)
	*($2) = $6
	
.LABEL $label$10
	CALL db_idx64_update($6, (int_64)0, ($4 + [56]))
	
.LABEL $label$9
	*($4 + [56]) = *(($1 + [8]))
	if ( (CALL $17($3, ($4 + [56]), [8]) == 0) ){ goto $label$11 }
	$6 = ($1 + [76])
	$1 = *($6)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$12 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193539, ($4 + [48]), $5)
	*($6) = $1
	
.LABEL $label$12
	CALL db_idx64_update($1, (int_64)0, ($4 + [56]))
	
.LABEL $label$11
	$global$0 = ($4 + [80])
}

int_32 .FUNC $97 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *(($2 + [72]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)4730634643120193538, ($1 + [8]), *($2))
	*((*(($0 + [4])) + [72])) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$4 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$5 = *($1 + [8])
	$3 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$7:
	$2 = ($3 + [-24])
	$8 = *($2)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$5 }
	$3 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	if ( ((int_32)*($8 + [56]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [13348])
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL $51($6, CALL $fimport$7(*($6), *($6 + [8]), (int_64)4730634643120193536, $5))
	if ( ((int_32)*($8 + [56]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$3
	*(($0 + [4])) = $8
	*(($8 + [72])) = $4
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($0 + [8])) = (int_64)0
	*($0 + [4]) = [0]
	*($0) = *($1)
	$2 = (*(($1 + [8])) - *($1 + [4]))
	$3 = ((int_32)$2 / (int_32)[44])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[97612894]) ){ goto $label$3 }
	$2 = CALL $8($2)
	*(($0 + [4])) = $2
	*(($0 + [12])) = ($2 + ((int_32)$3 * (int_32)[44]))
	*(($3 = ($0 + [8]))) = $2
	$4 = *(($1 + [4]))
	$5 = (*(($1 + [8])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[44]) * (int_32)[44]))
	
.LABEL $label$4
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = [0]
	$2 = (*(($1 + [20])) - *($1 + [16]))
	$3 = ((int_32)$2 / (int_32)[24])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[178956971]) ){ goto $label$2 }
	$2 = CALL $8($2)
	*(($0 + [16])) = $2
	*(($0 + [24])) = ($2 + ((int_32)$3 * (int_32)[24]))
	*(($3 = ($0 + [20]))) = $2
	$4 = *(($1 + [16]))
	$5 = (*(($1 + [20])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[24]) * (int_32)[24]))
	
.LABEL $label$5
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$2 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = int_32($2 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$2 = CALL $8($2)
	*(($0 + [28])) = $2
	*(($0 + [36])) = ($2 + ($3 << [3]))
	*(($3 = ($0 + [32]))) = $2
	$5 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $5, $1)
	*($3) = (*($3) + $1)
	
.LABEL $label$6
	return $0
	
.LABEL $label$3
	CALL $33(($0 + [4]))
	
.LABEL $label$2
	CALL $33(($0 + [16]))
	
.LABEL $label$1
	CALL $33(($0 + [28]))
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $91 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	$6 = [0]
	*(($7 = ($0 + [24]))) = [0]
	$8 = CALL $8([16])
	*($0 + [16]) = $8
	*(($9 = ($0 + [20]))) = $8
	$10 = ($8 + [16])
	*($7) = $10
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($9) = $10
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	*($5) = [24]
	*($5 + [8]) = $5
	*($5 + [20]) = ($4 + [28])
	*($5 + [16]) = ($4 + [24])
	*($5 + [24]) = ($4 + [40])
	*($5 + [28]) = ($4 + [52])
	CALL $115(($5 + [16]), ($5 + [8]))
	$8 = *($5)
	if ( ($8 == 0) ){ goto $label$2 }
	$1 = ($0 + [28])
	CALL $38($1, $8)
	$6 = *(($0 + [32]))
	$8 = *($1)
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	*($5 + [20]) = $8
	*($5 + [16]) = $8
	*($5 + [24]) = $6
	*($5) = ($5 + [16])
	*($5 + [8]) = $4
	CALL $116(($5 + [8]), $5)
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[40])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[107374183]) ){ goto $label$2 }
	$5 = [107374182]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL $8(((int_32)$5 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1 + [16 align=4])
	*($1 + [16 align=4]) = (int_64)0
	$4 = ($1 + [24])
	$7 = *($4)
	*($4) = (int_64)0
	$4 = ($1 + [32])
	$8 = *($4)
	*($4) = (int_64)0
	*(($9 = ($2 + ((int_32)$3 * (int_32)[40])))) = *($1)
	*($9 + [16 align=4]) = $6
	*(($9 + [8])) = *(($1 + [8]))
	*(($9 + [24])) = $7
	*(($9 + [32])) = $8
	$10 = ($2 + ((int_32)$5 * (int_32)[40]))
	$11 = ($9 + [40])
	$1 = *($0)
	$12 = *(($0 + [4]))
	if ( ((int_32)$12 == (int_32)$1) ){ goto $label$6 }
	$13 = ($1 - $12)
	$2 = [0]
	
.LOOP $label$7:
	$5 = ($12 + $2)
	*((($1 = ($9 + $2)) + [-32])) = *(($5 + [-32]))
	*(($1 + [-40])) = *(($5 + [-40]))
	*(($3 = ($1 + [-24]))) = (int_64)0
	*(($4 = ($1 + [-16]))) = [0]
	$14 = ($5 + [-24])
	*($3) = *($14)
	$3 = ($5 + [-16])
	*($4) = *($3)
	*($3) = [0]
	*(($3 = ($1 + [-12]))) = (int_64)0
	*(($1 = ($1 + [-4]))) = [0]
	$4 = ($5 + [-12])
	*($3) = *($4)
	*($14) = (int_64)0
	$5 = ($5 + [-4])
	*($1) = *($5)
	*($5) = [0]
	*($4) = (int_64)0
	$2 = ($2 + [-40])
	if ( ((int_32)$13 != (int_32)$2) ){ goto $label$7 }
	$9 = ($9 + $2)
	$1 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $1
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = *(($1 + [-12]))
	if ( ($5 == 0) ){ goto $label$10 }
	*(($1 + [-8])) = $5
	CALL $10($5)
	
.LABEL $label$10
	$5 = ($1 + [-40])
	$2 = *(($1 + [-24]))
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [-20])) = $2
	CALL $10($2)
	
.LABEL $label$11
	$1 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $10($3)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [4])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [4]) > (uint_32)[134217726]) ){ goto $label$5 }
	$6 = int_32($7 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $8(($6 << [4]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $33($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [4])))) = *($1)
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 - $1)
	$6 = ($5 + ($6 << [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $10($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	*($2) = (*($2) + [8])
	$2 = ($1 + [40])
	$1 = *($0 + [4])
	$0 = CALL $214($0, ($1 + [16]))
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $2, [4])
	*(($1 = ($0 + [4]))) = (*($1) + [4])
	return $0
}

void .FUNC $139 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	if ( CALL $140($0, $1, $2) ){ goto $label$1 }
	CALL require_auth(*($0))
	*(($3 + [40])) = [0]
	*($3 + [16]) = $2
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	*($3 + [44]) = [0]
	*($3 + [8]) = *($0)
	CALL $141(($3 + [8]), CALL $134(($3 + [8]), $1, [12324]))
	$4 = *($3 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	$5 = ($3 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $10($6)
	
.LABEL $label$5
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($3 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $4
	
.LABEL $label$2
	*($5) = $4
	CALL $10($0)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
}

void .FUNC $130 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	float_64 $13
	$3 = ($global$0 - [240])
	$global$0 = $3
	CALL $53(($3 + [120]), *($0), $2)
	CALL $58(($3 + [88]), *($0), $2)
	if ( ((uint_32)((CASTING uint_32)(uint_64 ((int_64)CALL $34() / (int_64)1000000)) - *($3 + [88])) > (uint_32)*($3 + [148])) ){ goto $label$1 }
	CALL eosio_assert([0], [11072])
	
.LABEL $label$1
	CALL $40(($3 + [8]), $2)
	$4 = [0]
	*((($3 + [200]) + [32])) = [0]
	*($3 + [216]) = (int_64)-1
	$5 = ($3 + [48])
	$6 = *($5)
	*($3 + [200]) = $6
	$7 = (uint_64)*($3 + [40]) >> (uint_64)(int_64)8
	*($3 + [208]) = $7)
	*($3 + [224]) = (int_64)0
	$8 = CALL db_lowerbound_i64($6, $7, (int_64)-4157508551318700032, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $131(($3 + [200]), $8)
	$9 = *($3 + [224])
	if ( ($9 == 0) ){ goto $label$2 }
	$10 = ($3 + [228])
	$8 = *($10)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = ($8 + [-24])
	$11 = *($8)
	*($8) = [0]
	if ( ($11 == 0) ){ goto $label$6 }
	CALL $10($11)
	
.LABEL $label$6
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$5 }
	$8 = *(($3 + [224]))
	goto $label$3 
	
.LABEL $label$4
	$8 = $9
	
.LABEL $label$3
	*($10) = $9
	CALL $10($8)
	
.LABEL $label$2
	$6 = *((($3 + [8]) + [32]))
	$7 = *($5)
	CALL prints([11742])
	CALL $119(($3 + [200]), $4)
	$8 = *($3 + [200])
	$11 = ($8 & [1])
	CALL prints_l(( *($3 + [208]) ? (($3 + [200]) | [1]) : $11 ), ( *($3 + [204]) ? uint_32($8 >> [1]) : $11 ))
	if ( ((*($3 + [200]) & [1]) == 0) ){ goto $label$7 }
	CALL $10(*(($3 + [208])))
	
.LABEL $label$7
	CALL prints([11752])
	CALL printn($7)
	CALL prints([11764])
	CALL printui(((int_64)$6 & (int_64)255))
	CALL prints([14091])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( (int_64)($6) == 0) ){ goto $label$8 }
	$8 = [0]
	$7 = (int_64)0
	
.LOOP $label$10:
	*((($3 + [200]) + $8)) = $6
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((uint_32)$8 > (uint_32)[5]) ){ goto $label$9 }
	$8 = ($8 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$10 }
	
.LABEL $label$9
	CALL prints(($3 + [200]))
	CALL printi($7)
	
.LABEL $label$8
	$6 = *($4)
	$7 = *($3 + [96])
	CALL prints([11774])
	CALL printui($6)
	CALL prints([11816])
	CALL printi(*($3 + [96]))
	CALL prints([11838])
	CALL printui(*($3 + [156]))
	CALL prints([11868])
	$12 = *($3 + [96])
	CALL prints([11888])
	$13 = (CASTING float_64)(uint_64 $6)
	CALL printdf(((float_64)$13 * (float_64)(float_64)0.0001))
	CALL prints([11816])
	CALL printdf(((float_64)(CASTING float_64)(int_64 $12) * (float_64)(float_64)0.0001))
	CALL prints([11905])
	CALL printui(*($3 + [156]))
	CALL prints([11868])
	CALL prints([11936])
	CALL printui(*($3 + [160]))
	CALL prints([11967])
	CALL prints([12027])
	$13 = ((float_64)((float_64)(CASTING float_64)(int_64 $7) / (float_64)$13) * (float_64)(float_64)100)
	CALL printdf($13)
	CALL prints([12067])
	if ( *($3 + [116]) ){ goto $label$11 }
	if ( ((float_64)$13 > (float_64)(CASTING float_64)(uint_32 *(($3 + [156])))) ){ goto $label$11 }
	CALL eosio_assert([0], [12070])
	
.LABEL $label$11
	*(($3 + [116])) = [1]
	if ( ((float_64)$13 > (float_64)(CASTING float_64)(uint_32 *(($3 + [160])))) ){ goto $label$12 }
	CALL eosio_assert([0], [12170])
	
.LABEL $label$12
	CALL $117($0, $2)
	CALL $83($0, [0], $2)
	CALL $84($0, $2)
	*($3 + [88]) = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $35()) * (int_64)500000) + (int_64)946684800000000) / (uint_64)(int_64)1000000)
	$6 = *($0)
	*(($3 + [232])) = [0]
	*($3 + [208]) = $2
	*($3 + [200]) = $6
	*($3 + [216]) = (int_64)-1
	*($3 + [224]) = (int_64)0
	CALL $59(($3 + [200]), ($3 + [88]), (int_64)0)
	$9 = *($3 + [224])
	if ( ($9 == 0) ){ goto $label$13 }
	$0 = ($3 + [228])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$15 }
	
.LOOP $label$16:
	$8 = ($8 + [-24])
	$11 = *($8)
	*($8) = [0]
	if ( ($11 == 0) ){ goto $label$17 }
	CALL $10($11)
	
.LABEL $label$17
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$16 }
	$8 = *(($3 + [224]))
	goto $label$14 
	
.LABEL $label$15
	$8 = $9
	
.LABEL $label$14
	*($0) = $9
	CALL $10($8)
	
.LABEL $label$13
	CALL $43(($3 + [68]), *(($3 + [72])))
	CALL $44(($3 + [56]), *(($3 + [60])))
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$18 }
	CALL $10(*(($3 + [32])))
	
.LABEL $label$18
	$global$0 = ($3 + [240])
}

int_32 .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = [0]
	*($5 + [44]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	*($3 + [44]) = ($5 + [40])
	CALL $233(($3 + [32]), ($3 + [24]))
	*($5 + [48]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $234(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $132 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$3 = ($global$0 - [432])
	$global$0 = $3
	if ( CALL $133($0, $1, $2) ){ goto $label$2 }
	*(($3 + [424])) = [0]
	*($3 + [400]) = $2
	*($3 + [408]) = (int_64)-1
	*($3 + [416]) = (int_64)0
	*($3 + [428]) = [0]
	*($3 + [392]) = *($0)
	CALL $40(($3 + [312]), $2)
	CALL $53(($3 + [232]), *($0), $2)
	$4 = CALL $134(($3 + [392]), $1, [12324])
	CALL $47(*($4 + [8]), $2)
	CALL require_auth(*($4 + [8]))
	$5 = CALL $34()
	*(($3 + [196])) = (int_64)0
	*(($3 + [212])) = (int_64)0
	*(($3 + [220])) = (int_64)0
	*($3 + [180]) = [0]
	*($3 + [184]) = [0]
	*($3 + [188 align=4]) = (int_64)0
	*($3 + [204 align=4]) = (int_64)0
	*($3 + [168]) = ((CASTING uint_32)(uint_64 ((int_64)$5 / (int_64)1000000)) + [60])
	*($3 + [160]) = [0]
	*($3 + [152]) = (int_64)0
	*(($3 + [144])) = [0]
	*($3 + [136]) = (int_64)0
	$6 = CALL $16([12378])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [136]) = ($6 << [1])
	$7 = (($3 + [136]) | [1])
	if ( $6 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$8 = (($6 + [16]) & [-16])
	$7 = CALL $8($8)
	*($3 + [136]) = ($8 | [1])
	*($3 + [144]) = $7
	*($3 + [140]) = $6
	
.LABEL $label$7
	CALL memcpy($7, [12378], $6)
	
.LABEL $label$6
	*(($7 + $6)) = [0]
	CALL prints([13836])
	CALL printui((int_64)5)
	CALL prints([8486])
	$9 = ($3 + [376])
	$6 = *($9)
	if ( ($6 == 0) ){ goto $label$9 }
	$8 = $9
	$7 = *($6 + [16])
	if ( ($7 <= [6]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$9
	$8 = $9
	$10 = [3]
	goto $label$1 
	
.LABEL $label$5
	CALL $23(($3 + [136]))
	
.LABEL $label$4
	$10 = [81]
	goto $label$1 
	
.LABEL $label$3
	$10 = [2]
	goto $label$1 
	
.LABEL $label$2
	$10 = [54]
	
.LABEL $label$1
	
.LOOP $label$10:
	goto $label$152 
	
.LABEL $label$155
	$8 = $6
	$6 = $7
	$7 = *($6 + [16])
	if ( ($7 <= [6]) ){ goto $label$70 }
	$10 = [81]
	goto $label$10 
	
.LABEL $label$154
	$8 = $6
	$7 = *($6)
	if ( $7 ){ goto $label$65 }
	goto $label$66 
	
.LABEL $label$153
	if ( ((int_32)$7 == (int_32)[5]) ){ goto $label$67 }
	$10 = [0]
	goto $label$10 
	
.LABEL $label$152
	$7 = *($6 + [4])
	$8 = ($6 + [4])
	$6 = $8
	if ( $7 ){ goto $label$68 }
	goto $label$69 
	
.LABEL $label$151
	$11 = *((*($8) + [24]))
	CALL prints([13836])
	CALL printui((int_64)1)
	CALL prints([8486])
	$8 = ($3 + [376])
	$6 = *($8)
	if ( ($6 == 0) ){ goto $label$64 }
	$10 = [4]
	goto $label$10 
	
.LABEL $label$150
	$7 = *($6 + [16])
	if ( ($7 <= [2]) ){ goto $label$62 }
	goto $label$63 
	
.LABEL $label$149
	$8 = $6
	$6 = $7
	$7 = *($6 + [16])
	if ( ($7 <= [2]) ){ goto $label$73 }
	$10 = [79]
	goto $label$10 
	
.LABEL $label$148
	$8 = $6
	$7 = *($6)
	if ( $7 ){ goto $label$59 }
	goto $label$60 
	
.LABEL $label$147
	if ( $7 ){ goto $label$61 }
	$10 = [77]
	goto $label$10 
	
.LABEL $label$146
	$7 = *($6 + [4])
	$8 = ($6 + [4])
	$6 = $8
	if ( $7 ){ goto $label$71 }
	goto $label$72 
	
.LABEL $label$145
	$8 = $9
	$10 = [6]
	goto $label$10 
	
.LABEL $label$144
	$12 = *((*($8) + [24]))
	if ( (*($3 + [264]) == 0) ){ goto $label$58 }
	$10 = [7]
	goto $label$10 
	
.LABEL $label$143
	$5 = *(($4 + [8]))
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$57 }
	$10 = [8]
	goto $label$10 
	
.LABEL $label$142
	$7 = [0]
	$8 = *([0] + [14048])
	$10 = [9]
	goto $label$10 
	
.LABEL $label$141
	*(($3 + ($6 = $7))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$7 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$55 }
	$10 = [10]
	goto $label$10 
	
.LABEL $label$140
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$56 }
	$10 = [11]
	goto $label$10 
	
.LABEL $label$139
	*(($3 + [128])) = [0]
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$54 }
	$10 = [65]
	goto $label$10 
	
.LABEL $label$138
	*($3 + [120]) = ($7 << [1])
	$8 = (($3 + [120]) | [1])
	goto $label$53 
	
.LABEL $label$137
	CALL $135($3, ($3 + [136]), [12404])
	CALL $32(($3 + [64]), $1)
	$6 = *($3 + [64])
	$7 = ($6 & [1])
	$6 = CALL $30($3, ( *($3 + [72]) ? (($3 + [64]) | [1]) : $7 ), ( *($3 + [68]) ? uint_32($6 >> [1]) : $7 ))
	$7 = *($6 + [4])
	$8 = *($6)
	*($6) = (int_64)0
	$9 = *($6 + [8])
	*($6 + [8]) = [0]
	if ( (*($3 + [152]) & [1]) ){ goto $label$15 }
	$10 = [76]
	goto $label$10 
	
.LABEL $label$136
	*($3 + [152]) = [0]
	goto $label$14 
	
.LABEL $label$135
	*((($3 + [120]) + [8])) = [0]
	*($3 + [120]) = (int_64)0
	*($3 + [120]) = [0]
	$6 = (($3 + [120]) | [1])
	goto $label$51 
	
.LABEL $label$134
	$9 = (($7 + [16]) & [-16])
	$8 = CALL $8($9)
	*($3 + [120]) = ($9 | [1])
	*($3 + [128]) = $8
	*($3 + [124]) = $7
	$10 = [13]
	goto $label$10 
	
.LABEL $label$133
	$9 = ($6 + [1])
	$6 = [0]
	$10 = [14]
	goto $label$10 
	
.LABEL $label$132
	*(($8 + $6)) = *(($3 + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$52 }
	$10 = [15]
	goto $label$10 
	
.LABEL $label$131
	$6 = ($8 + $7)
	$10 = [16]
	goto $label$10 
	
.LABEL $label$130
	*($6) = [0]
	$6 = CALL $29(($3 + [120]), [12404])
	$7 = ($6 + [8])
	*((($3 + [48]) + [8])) = *($7)
	*($3 + [48]) = *($6)
	*($6) = (int_64)0
	*($7) = [0]
	$6 = *($3 + [136])
	$7 = ($6 & [1])
	$6 = CALL $30(($3 + [48]), ( *($3 + [144]) ? (($3 + [136]) | [1]) : $7 ), ( *($3 + [140]) ? uint_32($6 >> [1]) : $7 ))
	$7 = ($6 + [8])
	*((($3 + [64]) + [8])) = *($7)
	*($3 + [64]) = *($6)
	*($6) = (int_64)0
	*($7) = [0]
	$6 = CALL $29(($3 + [64]), [12404])
	$7 = ($6 + [8])
	*(($3 + [8])) = *($7)
	*($3) = *($6)
	*($6) = (int_64)0
	*($7) = [0]
	CALL $32(($3 + [104]), $1)
	$6 = *($3 + [104])
	$7 = ($6 & [1])
	$6 = CALL $30($3, ( *($3 + [112]) ? (($3 + [104]) | [1]) : $7 ), ( *($3 + [108]) ? uint_32($6 >> [1]) : $7 ))
	$7 = *($6 + [4])
	$8 = *($6)
	*($6) = (int_64)0
	$9 = *($6 + [8])
	*($6 + [8]) = [0]
	if ( (*($3 + [152]) & [1]) ){ goto $label$50 }
	$10 = [64]
	goto $label$10 
	
.LABEL $label$129
	*($3 + [152]) = [0]
	goto $label$49 
	
.LABEL $label$128
	*(*((($3 + [152]) + [8]))) = [0]
	*($3 + [156]) = [0]
	$10 = [18]
	goto $label$10 
	
.LABEL $label$127
	CALL $26(($3 + [152]), [0])
	*((($3 + [152]) + [8])) = $9
	*($3 + [156]) = $7
	*($3 + [152]) = $8
	if ( (*($3 + [104]) & [1]) ){ goto $label$48 }
	$10 = [63]
	goto $label$10 
	
.LABEL $label$126
	if ( (*($3) & [1]) ){ goto $label$47 }
	$10 = [62]
	goto $label$10 
	
.LABEL $label$125
	$6 = [1]
	if ( (*($3 + [64]) & [1]) ){ goto $label$45 }
	$10 = [61]
	goto $label$10 
	
.LABEL $label$124
	if ( (*($3 + [48]) & $6) ){ goto $label$43 }
	$10 = [60]
	goto $label$10 
	
.LABEL $label$123
	$6 = [1]
	if ( ((*($3 + [120]) & [1]) == 0) ){ goto $label$41 }
	$10 = [23]
	goto $label$10 
	
.LABEL $label$122
	CALL $10(*($3 + [128]))
	$10 = [24]
	goto $label$10 
	
.LABEL $label$121
	CALL $31($3, [12406], ($3 + [152]))
	$7 = *($3)
	$8 = ($7 & $6)
	CALL prints_l(( *($3 + [8]) ? ($3 | $6) : $8 ), ( *($3 + [4]) ? uint_32($7 >> $6) : $8 ))
	if ( ((*($3) & $6) == 0) ){ goto $label$38 }
	$10 = [25]
	goto $label$10 
	
.LABEL $label$120
	CALL $10(*(($3 + [8])))
	goto $label$37 
	
.LABEL $label$119
	CALL $10(*((($3 + [104]) + [8])))
	if ( ((*($3) & [1]) == 0) ){ goto $label$46 }
	$10 = [20]
	goto $label$10 
	
.LABEL $label$118
	CALL $10(*($3 + [8]))
	$6 = [1]
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$44 }
	$10 = [21]
	goto $label$10 
	
.LABEL $label$117
	CALL $10(*($3 + [72]))
	if ( ((*($3 + [48]) & $6) == 0) ){ goto $label$42 }
	$10 = [22]
	goto $label$10 
	
.LABEL $label$116
	CALL $10(*($3 + [56]))
	$6 = [1]
	if ( (*($3 + [120]) & [1]) ){ goto $label$39 }
	goto $label$40 
	
.LABEL $label$115
	*(*(($3 + [160]))) = [0]
	*($3 + [156]) = [0]
	$10 = [69]
	goto $label$10 
	
.LABEL $label$114
	CALL $26(($3 + [152]), [0])
	*((($3 + [152]) + [8])) = $9
	*($3 + [156]) = $7
	*($3 + [152]) = $8
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$13 }
	$10 = [70]
	goto $label$10 
	
.LABEL $label$113
	CALL $10(*((($3 + [64]) + [8])))
	$10 = [71]
	goto $label$10 
	
.LABEL $label$112
	if ( ((*($3) & [1]) == 0) ){ goto $label$12 }
	$10 = [72]
	goto $label$10 
	
.LABEL $label$111
	CALL $10(*($3 + [8]))
	$10 = [73]
	goto $label$10 
	
.LABEL $label$110
	CALL $31($3, [12450], ($3 + [152]))
	$6 = *($3)
	$7 = ($6 & [1])
	CALL prints_l(( *($3 + [8]) ? ($3 | [1]) : $7 ), ( *($3 + [4]) ? uint_32($6 >> [1]) : $7 ))
	if ( ((*($3) & [1]) == 0) ){ goto $label$11 }
	$10 = [74]
	goto $label$10 
	
.LABEL $label$109
	CALL $10(*(($3 + [8])))
	$10 = [75]
	goto $label$10 
	
.LABEL $label$108
	$11 = *(($4 + [8]))
	$10 = [26]
	goto $label$10 
	
.LABEL $label$107
	*($3 + [56]) = (int_64)-1525189753492733952
	*($3 + [48]) = $12
	$5 = *(($3 + [304]))
	*(($3 + [24])) = *(($4 + [24]))
	*($3 + [8]) = $11
	*($3) = $12
	*($3 + [16]) = *($4 + [16])
	CALL $24(($3 + [32]), ($3 + [152]))
	$6 = CALL $72(($3 + [64]), ($3 + [48]), $5, (int_64)-3617168760277827584, $3)
	$8 = (($3 + [168]) + [36])
	$9 = (($3 + [168]) + [40])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)*(($3 + [212]))) ){ goto $label$36 }
	$10 = [59]
	goto $label$10 
	
.LABEL $label$106
	*($7) = *($3 + [64])
	*($7 + [16]) = [0]
	*(($7 + [8])) = *((($3 + [64]) + [8]))
	*(($13 = ($7 + [20]))) = (int_64)0
	*($7 + [16]) = *($6 + [16])
	$14 = ($6 + [20])
	*($13) = *($14)
	$13 = ($6 + [24])
	*(($7 + [24])) = *($13)
	*($13) = [0]
	*($7 + [28 align=4]) = (int_64)0
	*($14) = [0]
	*($6 + [16]) = [0]
	*(($13 = ($7 + [36]))) = [0]
	*($7 + [28]) = *($6 + [28])
	$7 = ($6 + [32])
	*(($7 + [32])) = *($7)
	$14 = ($6 + [36])
	*($13) = *($14)
	*($7) = [0]
	*($6 + [28]) = [0]
	*($14) = [0]
	*($9) = (*($9) + [40])
	$7 = *($6 + [16])
	if ( $7 ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$105
	CALL $73($8, $6)
	$7 = *($6 + [28])
	if ( ($7 == 0) ){ goto $label$35 }
	$10 = [28]
	goto $label$10 
	
.LABEL $label$104
	*(($6 + [32])) = $7
	CALL $10($7)
	$10 = [29]
	goto $label$10 
	
.LABEL $label$103
	$7 = *($6 + [16])
	if ( ($7 == 0) ){ goto $label$34 }
	$10 = [30]
	goto $label$10 
	
.LABEL $label$102
	*(($6 + [20])) = $7
	CALL $10($7)
	$10 = [31]
	goto $label$10 
	
.LABEL $label$101
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$31 }
	$10 = [32]
	goto $label$10 
	
.LABEL $label$100
	CALL $10(*(($3 + [40])))
	$10 = [33]
	goto $label$10 
	
.LABEL $label$99
	$5 = *($0)
	*($3 + [72]) = $2
	*($3 + [64]) = $1
	*($3) = $5
	*($3 + [8]) = (int_64)-4997502822803747360
	*(($6 = CALL $8([16]))) = $5
	*($6 + [8]) = (int_64)-6216093385678127104
	*(($3 + [36])) = [0]
	$7 = ($6 + [16])
	*(($3 + [24])) = $7
	*(($3 + [20])) = $7
	*($3 + [16]) = $6
	*($3 + [28 align=4]) = (int_64)0
	CALL $38(($3 + [28]), [16])
	$6 = *($3 + [28])
	$7 = (*(($3 + [32])) - $6)
	if ( ((int_32)$7 > (int_32)[7]) ){ goto $label$30 }
	$10 = [58]
	goto $label$10 
	
.LABEL $label$98
	CALL eosio_assert([0], [13779])
	$10 = [34]
	goto $label$10 
	
.LABEL $label$97
	CALL memcpy($6, ($3 + [64]), [8])
	$6 = ($6 + [8])
	$9 = (($3 + [64]) + [8])
	if ( ((int_32)($7 + [-8]) > (int_32)[7]) ){ goto $label$29 }
	$10 = [57]
	goto $label$10 
	
.LABEL $label$96
	CALL eosio_assert([0], [13779])
	$10 = [35]
	goto $label$10 
	
.LABEL $label$95
	CALL memcpy($6, $9, [8])
	$7 = (($3 + [168]) + [40])
	$6 = *($7)
	if ( ((uint_32)$6 >= (uint_32)*(($3 + [212]))) ){ goto $label$28 }
	$10 = [56]
	goto $label$10 
	
.LABEL $label$94
	*($6) = *($3)
	*($6 + [16]) = [0]
	*(($6 + [8])) = *(($3 + [8]))
	*(($8 = ($6 + [20]))) = (int_64)0
	$9 = ($3 + [16])
	*($6 + [16]) = *($9)
	$13 = ($3 + [20])
	*($8) = *($13)
	$8 = ($3 + [24])
	*(($6 + [24])) = *($8)
	*($8) = [0]
	*($6 + [28 align=4]) = (int_64)0
	*($13) = [0]
	*($9) = [0]
	*(($8 = ($6 + [36]))) = [0]
	$9 = ($3 + [28])
	*($6 + [28]) = *($9)
	$6 = ($3 + [32])
	*(($6 + [32])) = *($6)
	$13 = ($3 + [36])
	*($8) = *($13)
	*($6) = [0]
	*($9) = [0]
	*($13) = [0]
	*($7) = (*($7) + [40])
	$6 = *($3 + [16])
	if ( $6 ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$93
	CALL $73($8, $3)
	$6 = *($3 + [28])
	if ( ($6 == 0) ){ goto $label$27 }
	$10 = [37]
	goto $label$10 
	
.LABEL $label$92
	*(($3 + [32])) = $6
	CALL $10($6)
	$10 = [38]
	goto $label$10 
	
.LABEL $label$91
	$6 = *($3 + [16])
	if ( ($6 == 0) ){ goto $label$26 }
	$10 = [39]
	goto $label$10 
	
.LABEL $label$90
	*(($3 + [20])) = $6
	CALL $10($6)
	$10 = [40]
	goto $label$10 
	
.LABEL $label$89
	*(($3 + [188])) = [3600]
	$5 = CALL $34()
	*($3 + [8]) = $1
	*($3) = ((int_64)((int_64)$5 / (int_64)1000000) & (int_64)4294967295)
	CALL $75(($3 + [168]), $3, *($0), [0])
	CALL $136(($3 + [392]), $4)
	if ( ((*($3 + [136]) & [1]) == 0) ){ goto $label$23 }
	$10 = [41]
	goto $label$10 
	
.LABEL $label$88
	CALL $10(*($3 + [144]))
	$10 = [42]
	goto $label$10 
	
.LABEL $label$87
	if ( ((*($3 + [152]) & [1]) == 0) ){ goto $label$22 }
	$10 = [43]
	goto $label$10 
	
.LABEL $label$86
	CALL $10(*(($3 + [160])))
	$10 = [44]
	goto $label$10 
	
.LABEL $label$85
	CALL $76(($3 + [168]))
	CALL $43(($3 + [372]), *(($3 + [376])))
	CALL $44(($3 + [360]), *(($3 + [364])))
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$21 }
	$10 = [45]
	goto $label$10 
	
.LABEL $label$84
	CALL $10(*(($3 + [336])))
	$10 = [46]
	goto $label$10 
	
.LABEL $label$83
	$8 = *($3 + [416])
	if ( ($8 == 0) ){ goto $label$20 }
	$10 = [47]
	goto $label$10 
	
.LABEL $label$82
	$9 = ($3 + [420])
	$6 = *($9)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$19 }
	$10 = [48]
	goto $label$10 
	
.LABEL $label$81
	$10 = [49]
	goto $label$10 
	
.LABEL $label$80
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$17 }
	$10 = [50]
	goto $label$10 
	
.LABEL $label$79
	CALL $10($7)
	$10 = [51]
	goto $label$10 
	
.LABEL $label$78
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$18 }
	$10 = [52]
	goto $label$10 
	
.LABEL $label$77
	$6 = *(($3 + [416]))
	goto $label$16 
	
.LABEL $label$76
	$6 = $8
	$10 = [53]
	goto $label$10 
	
.LABEL $label$75
	*($9) = $8
	CALL $10($6)
	$10 = [54]
	goto $label$10 
	
.LABEL $label$74
	$global$0 = ($3 + [432])
	return 
	
.LABEL $label$73
	$10 = [5]
	goto $label$10 
	
.LABEL $label$72
	$10 = [6]
	goto $label$10 
	
.LABEL $label$71
	$10 = [78]
	goto $label$10 
	
.LABEL $label$70
	$10 = [2]
	goto $label$10 
	
.LABEL $label$69
	$10 = [3]
	goto $label$10 
	
.LABEL $label$68
	$10 = [1]
	goto $label$10 
	
.LABEL $label$67
	$10 = [3]
	goto $label$10 
	
.LABEL $label$66
	$10 = [3]
	goto $label$10 
	
.LABEL $label$65
	$10 = [1]
	goto $label$10 
	
.LABEL $label$64
	$10 = [80]
	goto $label$10 
	
.LABEL $label$63
	$10 = [79]
	goto $label$10 
	
.LABEL $label$62
	$10 = [5]
	goto $label$10 
	
.LABEL $label$61
	$10 = [6]
	goto $label$10 
	
.LABEL $label$60
	$10 = [6]
	goto $label$10 
	
.LABEL $label$59
	$10 = [78]
	goto $label$10 
	
.LABEL $label$58
	$10 = [67]
	goto $label$10 
	
.LABEL $label$57
	$10 = [66]
	goto $label$10 
	
.LABEL $label$56
	$10 = [9]
	goto $label$10 
	
.LABEL $label$55
	$10 = [11]
	goto $label$10 
	
.LABEL $label$54
	$10 = [12]
	goto $label$10 
	
.LABEL $label$53
	$10 = [13]
	goto $label$10 
	
.LABEL $label$52
	$10 = [14]
	goto $label$10 
	
.LABEL $label$51
	$10 = [16]
	goto $label$10 
	
.LABEL $label$50
	$10 = [17]
	goto $label$10 
	
.LABEL $label$49
	$10 = [18]
	goto $label$10 
	
.LABEL $label$48
	$10 = [19]
	goto $label$10 
	
.LABEL $label$47
	$10 = [20]
	goto $label$10 
	
.LABEL $label$46
	$10 = [62]
	goto $label$10 
	
.LABEL $label$45
	$10 = [21]
	goto $label$10 
	
.LABEL $label$44
	$10 = [61]
	goto $label$10 
	
.LABEL $label$43
	$10 = [22]
	goto $label$10 
	
.LABEL $label$42
	$10 = [60]
	goto $label$10 
	
.LABEL $label$41
	$10 = [24]
	goto $label$10 
	
.LABEL $label$40
	$10 = [24]
	goto $label$10 
	
.LABEL $label$39
	$10 = [23]
	goto $label$10 
	
.LABEL $label$38
	$10 = [26]
	goto $label$10 
	
.LABEL $label$37
	$10 = [26]
	goto $label$10 
	
.LABEL $label$36
	$10 = [27]
	goto $label$10 
	
.LABEL $label$35
	$10 = [29]
	goto $label$10 
	
.LABEL $label$34
	$10 = [31]
	goto $label$10 
	
.LABEL $label$33
	$10 = [31]
	goto $label$10 
	
.LABEL $label$32
	$10 = [30]
	goto $label$10 
	
.LABEL $label$31
	$10 = [33]
	goto $label$10 
	
.LABEL $label$30
	$10 = [34]
	goto $label$10 
	
.LABEL $label$29
	$10 = [35]
	goto $label$10 
	
.LABEL $label$28
	$10 = [36]
	goto $label$10 
	
.LABEL $label$27
	$10 = [38]
	goto $label$10 
	
.LABEL $label$26
	$10 = [40]
	goto $label$10 
	
.LABEL $label$25
	$10 = [40]
	goto $label$10 
	
.LABEL $label$24
	$10 = [39]
	goto $label$10 
	
.LABEL $label$23
	$10 = [42]
	goto $label$10 
	
.LABEL $label$22
	$10 = [44]
	goto $label$10 
	
.LABEL $label$21
	$10 = [46]
	goto $label$10 
	
.LABEL $label$20
	$10 = [54]
	goto $label$10 
	
.LABEL $label$19
	$10 = [55]
	goto $label$10 
	
.LABEL $label$18
	$10 = [49]
	goto $label$10 
	
.LABEL $label$17
	$10 = [51]
	goto $label$10 
	
.LABEL $label$16
	$10 = [53]
	goto $label$10 
	
.LABEL $label$15
	$10 = [68]
	goto $label$10 
	
.LABEL $label$14
	$10 = [69]
	goto $label$10 
	
.LABEL $label$13
	$10 = [71]
	goto $label$10 
	
.LABEL $label$12
	$10 = [73]
	goto $label$10 
	
.LABEL $label$11
	$10 = [75]
	goto $label$10 
	(unreachable)
	$10
}

int_32 .FUNC $133 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$3 = ($global$0 - [416])
	$global$0 = $3
	$4 = [0]
	*(($3 + [408])) = [0]
	*($3 + [392]) = (int_64)-1
	*($3 + [400]) = (int_64)0
	*($3 + [412]) = [0]
	$5 = *($0)
	*($3 + [376]) = $5
	*($3 + [384]) = $5
	CALL $40(($3 + [296]), $2)
	CALL $53(($3 + [216]), *($0), $2)
	$6 = CALL db_find_i64($5, $5, (int_64)-6150061881656115200, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $137(($3 + [376]), $6)
	if ( ((int_32)*($7 + [44]) == (int_32)($3 + [376])) ){ goto $label$3 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$3
	if ( (CALL has_auth(*($7 + [8])) == 0) ){ goto $label$4 }
	$6 = ($7 + [8])
	CALL $47(*($6), $2)
	CALL require_auth(*($6))
	$5 = CALL $34()
	*(($3 + [180])) = (int_64)0
	*(($3 + [196])) = (int_64)0
	*(($3 + [204])) = (int_64)0
	*($3 + [164]) = [0]
	*($3 + [168]) = [0]
	*($3 + [172 align=4]) = (int_64)0
	*($3 + [188 align=4]) = (int_64)0
	*($3 + [152]) = ((CASTING uint_32)(uint_64 ((int_64)$5 / (int_64)1000000)) + [60])
	*($3 + [144]) = [0]
	*($3 + [136]) = (int_64)0
	CALL prints([13836])
	CALL printui((int_64)5)
	CALL prints([8486])
	$4 = ($3 + [360])
	$6 = *($4)
	if ( ($6 == 0) ){ goto $label$7 }
	$8 = $4
	$9 = *($6 + [16])
	if ( ($9 <= [6]) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	$8 = $4
	$10 = [3]
	goto $label$1 
	
.LABEL $label$6
	$10 = [82]
	goto $label$1 
	
.LABEL $label$5
	$10 = [2]
	goto $label$1 
	
.LABEL $label$4
	$10 = [43]
	goto $label$1 
	
.LABEL $label$2
	$10 = [43]
	
.LABEL $label$1
	
.LOOP $label$8:
	goto $label$151 
	
.LABEL $label$154
	$8 = $6
	$6 = $9
	$9 = *($6 + [16])
	if ( ($9 <= [6]) ){ goto $label$68 }
	$10 = [82]
	goto $label$8 
	
.LABEL $label$153
	$8 = $6
	$9 = *($6)
	if ( $9 ){ goto $label$63 }
	goto $label$64 
	
.LABEL $label$152
	if ( ((int_32)$9 == (int_32)[5]) ){ goto $label$65 }
	$10 = [0]
	goto $label$8 
	
.LABEL $label$151
	$9 = *($6 + [4])
	$8 = ($6 + [4])
	$6 = $8
	if ( $9 ){ goto $label$66 }
	goto $label$67 
	
.LABEL $label$150
	$11 = *((*($8) + [24]))
	CALL prints([13836])
	CALL printui((int_64)1)
	CALL prints([8486])
	$8 = ($3 + [360])
	$6 = *($8)
	if ( ($6 == 0) ){ goto $label$62 }
	$10 = [4]
	goto $label$8 
	
.LABEL $label$149
	$9 = *($6 + [16])
	if ( ($9 <= [2]) ){ goto $label$60 }
	goto $label$61 
	
.LABEL $label$148
	$8 = $6
	$6 = $9
	$9 = *($6 + [16])
	if ( ($9 <= [2]) ){ goto $label$71 }
	$10 = [80]
	goto $label$8 
	
.LABEL $label$147
	$8 = $6
	$9 = *($6)
	if ( $9 ){ goto $label$57 }
	goto $label$58 
	
.LABEL $label$146
	if ( $9 ){ goto $label$59 }
	$10 = [78]
	goto $label$8 
	
.LABEL $label$145
	$9 = *($6 + [4])
	$8 = ($6 + [4])
	$6 = $8
	if ( $9 ){ goto $label$69 }
	goto $label$70 
	
.LABEL $label$144
	$8 = $4
	$10 = [6]
	goto $label$8 
	
.LABEL $label$143
	$2 = *((*($8) + [24]))
	if ( (*($3 + [248]) == 0) ){ goto $label$56 }
	$10 = [7]
	goto $label$8 
	
.LABEL $label$142
	$5 = *(($7 + [8]))
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$55 }
	$10 = [8]
	goto $label$8 
	
.LABEL $label$141
	$9 = [0]
	$8 = *([0] + [14048])
	$10 = [9]
	goto $label$8 
	
.LABEL $label$140
	*(($3 + ($6 = $9))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$9 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$53 }
	$10 = [10]
	goto $label$8 
	
.LABEL $label$139
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$54 }
	$10 = [11]
	goto $label$8 
	
.LABEL $label$138
	*(($3 + [128])) = [0]
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$52 }
	$10 = [66]
	goto $label$8 
	
.LABEL $label$137
	*($3 + [120]) = ($9 << [1])
	$8 = (($3 + [120]) | [1])
	goto $label$51 
	
.LABEL $label$136
	CALL $135($3, ($7 + [32]), [12404])
	CALL $32(($3 + [64]), $1)
	$6 = *($3 + [64])
	$9 = ($6 & [1])
	$6 = CALL $30($3, ( *($3 + [72]) ? (($3 + [64]) | [1]) : $9 ), ( *($3 + [68]) ? uint_32($6 >> [1]) : $9 ))
	$9 = *($6 + [4])
	$8 = *($6)
	*($6) = (int_64)0
	$4 = *($6 + [8])
	*($6 + [8]) = [0]
	if ( (*($3 + [136]) & [1]) ){ goto $label$13 }
	$10 = [77]
	goto $label$8 
	
.LABEL $label$135
	*($3 + [136]) = [0]
	goto $label$12 
	
.LABEL $label$134
	*((($3 + [120]) + [8])) = [0]
	*($3 + [120]) = (int_64)0
	*($3 + [120]) = [0]
	$6 = (($3 + [120]) | [1])
	goto $label$49 
	
.LABEL $label$133
	$4 = (($9 + [16]) & [-16])
	$8 = CALL $8($4)
	*($3 + [120]) = ($4 | [1])
	*($3 + [128]) = $8
	*($3 + [124]) = $9
	$10 = [13]
	goto $label$8 
	
.LABEL $label$132
	$4 = ($6 + [1])
	$6 = [0]
	$10 = [14]
	goto $label$8 
	
.LABEL $label$131
	*(($8 + $6)) = *(($3 + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$50 }
	$10 = [15]
	goto $label$8 
	
.LABEL $label$130
	$6 = ($8 + $9)
	$10 = [16]
	goto $label$8 
	
.LABEL $label$129
	*($6) = [0]
	$6 = CALL $29(($3 + [120]), [12404])
	$9 = ($6 + [8])
	*((($3 + [48]) + [8])) = *($9)
	*($3 + [48]) = *($6)
	*($6) = (int_64)0
	*($9) = [0]
	$6 = *($7 + [32])
	$9 = ($6 & [1])
	$6 = CALL $30(($3 + [48]), ( *(($7 + [40])) ? ($7 + [33]) : $9 ), ( *(($7 + [36])) ? uint_32($6 >> [1]) : $9 ))
	$9 = ($6 + [8])
	*((($3 + [64]) + [8])) = *($9)
	*($3 + [64]) = *($6)
	*($6) = (int_64)0
	*($9) = [0]
	$6 = CALL $29(($3 + [64]), [12404])
	$9 = ($6 + [8])
	*(($3 + [8])) = *($9)
	*($3) = *($6)
	*($6) = (int_64)0
	*($9) = [0]
	CALL $32(($3 + [104]), $1)
	$6 = *($3 + [104])
	$9 = ($6 & [1])
	$6 = CALL $30($3, ( *($3 + [112]) ? (($3 + [104]) | [1]) : $9 ), ( *($3 + [108]) ? uint_32($6 >> [1]) : $9 ))
	$9 = *($6 + [4])
	$8 = *($6)
	*($6) = (int_64)0
	$4 = *($6 + [8])
	*($6 + [8]) = [0]
	if ( (*($3 + [136]) & [1]) ){ goto $label$48 }
	$10 = [65]
	goto $label$8 
	
.LABEL $label$128
	*($3 + [136]) = [0]
	goto $label$47 
	
.LABEL $label$127
	*(*((($3 + [136]) + [8]))) = [0]
	*($3 + [140]) = [0]
	$10 = [18]
	goto $label$8 
	
.LABEL $label$126
	CALL $26(($3 + [136]), [0])
	*((($3 + [136]) + [8])) = $4
	*($3 + [140]) = $9
	*($3 + [136]) = $8
	if ( (*($3 + [104]) & [1]) ){ goto $label$46 }
	$10 = [64]
	goto $label$8 
	
.LABEL $label$125
	if ( (*($3) & [1]) ){ goto $label$45 }
	$10 = [63]
	goto $label$8 
	
.LABEL $label$124
	$6 = [1]
	if ( (*($3 + [64]) & [1]) ){ goto $label$43 }
	$10 = [62]
	goto $label$8 
	
.LABEL $label$123
	if ( (*($3 + [48]) & $6) ){ goto $label$41 }
	$10 = [61]
	goto $label$8 
	
.LABEL $label$122
	$6 = [1]
	if ( ((*($3 + [120]) & [1]) == 0) ){ goto $label$39 }
	$10 = [23]
	goto $label$8 
	
.LABEL $label$121
	CALL $10(*($3 + [128]))
	$10 = [24]
	goto $label$8 
	
.LABEL $label$120
	CALL $31($3, [12406], ($3 + [136]))
	$9 = *($3)
	$8 = ($9 & $6)
	CALL prints_l(( *($3 + [8]) ? ($3 | $6) : $8 ), ( *($3 + [4]) ? uint_32($9 >> $6) : $8 ))
	if ( ((*($3) & $6) == 0) ){ goto $label$36 }
	$10 = [25]
	goto $label$8 
	
.LABEL $label$119
	CALL $10(*(($3 + [8])))
	goto $label$35 
	
.LABEL $label$118
	CALL $10(*((($3 + [104]) + [8])))
	if ( ((*($3) & [1]) == 0) ){ goto $label$44 }
	$10 = [20]
	goto $label$8 
	
.LABEL $label$117
	CALL $10(*($3 + [8]))
	$6 = [1]
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$42 }
	$10 = [21]
	goto $label$8 
	
.LABEL $label$116
	CALL $10(*($3 + [72]))
	if ( ((*($3 + [48]) & $6) == 0) ){ goto $label$40 }
	$10 = [22]
	goto $label$8 
	
.LABEL $label$115
	CALL $10(*($3 + [56]))
	$6 = [1]
	if ( (*($3 + [120]) & [1]) ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$114
	*(*(($3 + [144]))) = [0]
	*($3 + [140]) = [0]
	$10 = [70]
	goto $label$8 
	
.LABEL $label$113
	CALL $26(($3 + [136]), [0])
	*((($3 + [136]) + [8])) = $4
	*($3 + [140]) = $9
	*($3 + [136]) = $8
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$11 }
	$10 = [71]
	goto $label$8 
	
.LABEL $label$112
	CALL $10(*((($3 + [64]) + [8])))
	$10 = [72]
	goto $label$8 
	
.LABEL $label$111
	if ( ((*($3) & [1]) == 0) ){ goto $label$10 }
	$10 = [73]
	goto $label$8 
	
.LABEL $label$110
	CALL $10(*($3 + [8]))
	$10 = [74]
	goto $label$8 
	
.LABEL $label$109
	CALL $31($3, [12450], ($3 + [136]))
	$6 = *($3)
	$9 = ($6 & [1])
	CALL prints_l(( *($3 + [8]) ? ($3 | [1]) : $9 ), ( *($3 + [4]) ? uint_32($6 >> [1]) : $9 ))
	if ( ((*($3) & [1]) == 0) ){ goto $label$9 }
	$10 = [75]
	goto $label$8 
	
.LABEL $label$108
	CALL $10(*(($3 + [8])))
	$10 = [76]
	goto $label$8 
	
.LABEL $label$107
	$11 = *(($7 + [8]))
	$10 = [26]
	goto $label$8 
	
.LABEL $label$106
	*($3 + [56]) = (int_64)-1525189753492733952
	*($3 + [48]) = $2
	$5 = *(($3 + [288]))
	*(($3 + [24])) = *(($7 + [24]))
	*($3 + [8]) = $11
	*($3) = $2
	*($3 + [16]) = *($7 + [16])
	CALL $24(($3 + [32]), ($3 + [136]))
	$6 = CALL $72(($3 + [64]), ($3 + [48]), $5, (int_64)-3617168760277827584, $3)
	$8 = (($3 + [152]) + [36])
	$4 = (($3 + [152]) + [40])
	$9 = *($4)
	if ( ((uint_32)$9 >= (uint_32)*(($3 + [196]))) ){ goto $label$34 }
	$10 = [60]
	goto $label$8 
	
.LABEL $label$105
	*($9) = *($3 + [64])
	*($9 + [16]) = [0]
	*(($9 + [8])) = *((($3 + [64]) + [8]))
	*(($7 = ($9 + [20]))) = (int_64)0
	*($9 + [16]) = *($6 + [16])
	$12 = ($6 + [20])
	*($7) = *($12)
	$7 = ($6 + [24])
	*(($9 + [24])) = *($7)
	*($7) = [0]
	*($9 + [28 align=4]) = (int_64)0
	*($12) = [0]
	*($6 + [16]) = [0]
	*(($7 = ($9 + [36]))) = [0]
	*($9 + [28]) = *($6 + [28])
	$9 = ($6 + [32])
	*(($9 + [32])) = *($9)
	$12 = ($6 + [36])
	*($7) = *($12)
	*($9) = [0]
	*($6 + [28]) = [0]
	*($12) = [0]
	*($4) = (*($4) + [40])
	$9 = *($6 + [16])
	if ( $9 ){ goto $label$30 }
	goto $label$31 
	
.LABEL $label$104
	CALL $73($8, $6)
	$9 = *($6 + [28])
	if ( ($9 == 0) ){ goto $label$33 }
	$10 = [28]
	goto $label$8 
	
.LABEL $label$103
	*(($6 + [32])) = $9
	CALL $10($9)
	$10 = [29]
	goto $label$8 
	
.LABEL $label$102
	$9 = *($6 + [16])
	if ( ($9 == 0) ){ goto $label$32 }
	$10 = [30]
	goto $label$8 
	
.LABEL $label$101
	*(($6 + [20])) = $9
	CALL $10($9)
	$10 = [31]
	goto $label$8 
	
.LABEL $label$100
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$29 }
	$10 = [32]
	goto $label$8 
	
.LABEL $label$99
	CALL $10(*(($3 + [40])))
	$10 = [33]
	goto $label$8 
	
.LABEL $label$98
	$5 = *($0)
	*($3 + [72]) = $5
	*($3 + [64]) = $1
	*($3) = $5
	*($3 + [8]) = (int_64)-4997502822803747360
	*(($6 = CALL $8([16]))) = $5
	*($6 + [8]) = (int_64)-6216093385678127104
	*(($3 + [36])) = [0]
	$9 = ($6 + [16])
	*(($3 + [24])) = $9
	*(($3 + [20])) = $9
	*($3 + [16]) = $6
	*($3 + [28 align=4]) = (int_64)0
	CALL $38(($3 + [28]), [16])
	$6 = *($3 + [28])
	$9 = (*(($3 + [32])) - $6)
	if ( ((int_32)$9 > (int_32)[7]) ){ goto $label$28 }
	$10 = [59]
	goto $label$8 
	
.LABEL $label$97
	CALL eosio_assert([0], [13779])
	$10 = [34]
	goto $label$8 
	
.LABEL $label$96
	CALL memcpy($6, ($3 + [64]), [8])
	$6 = ($6 + [8])
	$4 = (($3 + [64]) + [8])
	if ( ((int_32)($9 + [-8]) > (int_32)[7]) ){ goto $label$27 }
	$10 = [58]
	goto $label$8 
	
.LABEL $label$95
	CALL eosio_assert([0], [13779])
	$10 = [35]
	goto $label$8 
	
.LABEL $label$94
	CALL memcpy($6, $4, [8])
	$9 = (($3 + [152]) + [40])
	$6 = *($9)
	if ( ((uint_32)$6 >= (uint_32)*(($3 + [196]))) ){ goto $label$26 }
	$10 = [57]
	goto $label$8 
	
.LABEL $label$93
	*($6) = *($3)
	*($6 + [16]) = [0]
	*(($6 + [8])) = *(($3 + [8]))
	*(($8 = ($6 + [20]))) = (int_64)0
	$4 = ($3 + [16])
	*($6 + [16]) = *($4)
	$7 = ($3 + [20])
	*($8) = *($7)
	$8 = ($3 + [24])
	*(($6 + [24])) = *($8)
	*($8) = [0]
	*($6 + [28 align=4]) = (int_64)0
	*($7) = [0]
	*($4) = [0]
	*(($8 = ($6 + [36]))) = [0]
	$4 = ($3 + [28])
	*($6 + [28]) = *($4)
	$6 = ($3 + [32])
	*(($6 + [32])) = *($6)
	$7 = ($3 + [36])
	*($8) = *($7)
	*($6) = [0]
	*($4) = [0]
	*($7) = [0]
	*($9) = (*($9) + [40])
	$6 = *($3 + [16])
	if ( $6 ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$92
	CALL $73($8, $3)
	$6 = *($3 + [28])
	if ( ($6 == 0) ){ goto $label$25 }
	$10 = [37]
	goto $label$8 
	
.LABEL $label$91
	*(($3 + [32])) = $6
	CALL $10($6)
	$10 = [38]
	goto $label$8 
	
.LABEL $label$90
	$6 = *($3 + [16])
	if ( ($6 == 0) ){ goto $label$24 }
	$10 = [39]
	goto $label$8 
	
.LABEL $label$89
	*(($3 + [20])) = $6
	CALL $10($6)
	$10 = [40]
	goto $label$8 
	
.LABEL $label$88
	*(($3 + [172])) = [3600]
	$5 = CALL $34()
	*($3 + [8]) = $1
	*($3) = ((int_64)((int_64)$5 / (int_64)1000000) & (int_64)4294967295)
	CALL $75(($3 + [152]), $3, *($0), [0])
	$4 = [1]
	if ( ((*($3 + [136]) & [1]) == 0) ){ goto $label$21 }
	$10 = [41]
	goto $label$8 
	
.LABEL $label$87
	CALL $10(*(($3 + [144])))
	$10 = [42]
	goto $label$8 
	
.LABEL $label$86
	CALL $76(($3 + [152]))
	$10 = [43]
	goto $label$8 
	
.LABEL $label$85
	CALL $43(($3 + [356]), *(($3 + [360])))
	CALL $44(($3 + [344]), *(($3 + [348])))
	if ( ((*($3 + [312]) & [1]) == 0) ){ goto $label$20 }
	$10 = [44]
	goto $label$8 
	
.LABEL $label$84
	CALL $10(*(($3 + [320])))
	$10 = [45]
	goto $label$8 
	
.LABEL $label$83
	$8 = *($3 + [400])
	if ( ($8 == 0) ){ goto $label$19 }
	$10 = [46]
	goto $label$8 
	
.LABEL $label$82
	$0 = ($3 + [404])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$18 }
	$10 = [47]
	goto $label$8 
	
.LABEL $label$81
	$10 = [48]
	goto $label$8 
	
.LABEL $label$80
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$16 }
	$10 = [49]
	goto $label$8 
	
.LABEL $label$79
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$15 }
	$10 = [50]
	goto $label$8 
	
.LABEL $label$78
	CALL $10(*(($9 + [40])))
	$10 = [51]
	goto $label$8 
	
.LABEL $label$77
	CALL $10($9)
	$10 = [52]
	goto $label$8 
	
.LABEL $label$76
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$17 }
	$10 = [53]
	goto $label$8 
	
.LABEL $label$75
	$6 = *(($3 + [400]))
	goto $label$14 
	
.LABEL $label$74
	$6 = $8
	$10 = [54]
	goto $label$8 
	
.LABEL $label$73
	*($0) = $8
	CALL $10($6)
	$10 = [55]
	goto $label$8 
	
.LABEL $label$72
	$global$0 = ($3 + [416])
	return $4
	
.LABEL $label$71
	$10 = [5]
	goto $label$8 
	
.LABEL $label$70
	$10 = [6]
	goto $label$8 
	
.LABEL $label$69
	$10 = [79]
	goto $label$8 
	
.LABEL $label$68
	$10 = [2]
	goto $label$8 
	
.LABEL $label$67
	$10 = [3]
	goto $label$8 
	
.LABEL $label$66
	$10 = [1]
	goto $label$8 
	
.LABEL $label$65
	$10 = [3]
	goto $label$8 
	
.LABEL $label$64
	$10 = [3]
	goto $label$8 
	
.LABEL $label$63
	$10 = [1]
	goto $label$8 
	
.LABEL $label$62
	$10 = [81]
	goto $label$8 
	
.LABEL $label$61
	$10 = [80]
	goto $label$8 
	
.LABEL $label$60
	$10 = [5]
	goto $label$8 
	
.LABEL $label$59
	$10 = [6]
	goto $label$8 
	
.LABEL $label$58
	$10 = [6]
	goto $label$8 
	
.LABEL $label$57
	$10 = [79]
	goto $label$8 
	
.LABEL $label$56
	$10 = [68]
	goto $label$8 
	
.LABEL $label$55
	$10 = [67]
	goto $label$8 
	
.LABEL $label$54
	$10 = [9]
	goto $label$8 
	
.LABEL $label$53
	$10 = [11]
	goto $label$8 
	
.LABEL $label$52
	$10 = [12]
	goto $label$8 
	
.LABEL $label$51
	$10 = [13]
	goto $label$8 
	
.LABEL $label$50
	$10 = [14]
	goto $label$8 
	
.LABEL $label$49
	$10 = [16]
	goto $label$8 
	
.LABEL $label$48
	$10 = [17]
	goto $label$8 
	
.LABEL $label$47
	$10 = [18]
	goto $label$8 
	
.LABEL $label$46
	$10 = [19]
	goto $label$8 
	
.LABEL $label$45
	$10 = [20]
	goto $label$8 
	
.LABEL $label$44
	$10 = [63]
	goto $label$8 
	
.LABEL $label$43
	$10 = [21]
	goto $label$8 
	
.LABEL $label$42
	$10 = [62]
	goto $label$8 
	
.LABEL $label$41
	$10 = [22]
	goto $label$8 
	
.LABEL $label$40
	$10 = [61]
	goto $label$8 
	
.LABEL $label$39
	$10 = [24]
	goto $label$8 
	
.LABEL $label$38
	$10 = [24]
	goto $label$8 
	
.LABEL $label$37
	$10 = [23]
	goto $label$8 
	
.LABEL $label$36
	$10 = [26]
	goto $label$8 
	
.LABEL $label$35
	$10 = [26]
	goto $label$8 
	
.LABEL $label$34
	$10 = [27]
	goto $label$8 
	
.LABEL $label$33
	$10 = [29]
	goto $label$8 
	
.LABEL $label$32
	$10 = [31]
	goto $label$8 
	
.LABEL $label$31
	$10 = [31]
	goto $label$8 
	
.LABEL $label$30
	$10 = [30]
	goto $label$8 
	
.LABEL $label$29
	$10 = [33]
	goto $label$8 
	
.LABEL $label$28
	$10 = [34]
	goto $label$8 
	
.LABEL $label$27
	$10 = [35]
	goto $label$8 
	
.LABEL $label$26
	$10 = [36]
	goto $label$8 
	
.LABEL $label$25
	$10 = [38]
	goto $label$8 
	
.LABEL $label$24
	$10 = [40]
	goto $label$8 
	
.LABEL $label$23
	$10 = [40]
	goto $label$8 
	
.LABEL $label$22
	$10 = [39]
	goto $label$8 
	
.LABEL $label$21
	$10 = [42]
	goto $label$8 
	
.LABEL $label$20
	$10 = [45]
	goto $label$8 
	
.LABEL $label$19
	$10 = [55]
	goto $label$8 
	
.LABEL $label$18
	$10 = [56]
	goto $label$8 
	
.LABEL $label$17
	$10 = [48]
	goto $label$8 
	
.LABEL $label$16
	$10 = [52]
	goto $label$8 
	
.LABEL $label$15
	$10 = [51]
	goto $label$8 
	
.LABEL $label$14
	$10 = [54]
	goto $label$8 
	
.LABEL $label$13
	$10 = [69]
	goto $label$8 
	
.LABEL $label$12
	$10 = [70]
	goto $label$8 
	
.LABEL $label$11
	$10 = [72]
	goto $label$8 
	
.LABEL $label$10
	$10 = [74]
	goto $label$8 
	
.LABEL $label$9
	$10 = [76]
	goto $label$8 
	return $10
}

int_32 .FUNC $134 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13348])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6150061881656114176, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $126($0, $5)
	if ( ((int_32)*($6 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13348])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $135 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL $16($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1)
	$7 = *($1 + [8])
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($5 + [16]) & [-16])
	$5 = CALL $8($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($5, ( $7 ? ($1 + [1]) : ($6 & [1]) ), $3)
	
.LABEL $label$2
	*(($5 + $3)) = [0]
	CALL $30($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $23($0)
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	$4 = ($1 + [8])
	$5 = *($4)
	*($3 + [16]) = *(($1 + [24]))
	*($3 + [24]) = *(($1 + [32]))
	CALL $120(($3 + [96]), $4, ($3 + [16]))
	*((($3 + [16]) + [24])) = *($3 + [104])
	*((($3 + [16]) + [32])) = *(($3 + [112]))
	*(($3 + [56])) = *((($3 + [96]) + [24]))
	*($3 + [16]) = $5
	*($3 + [32]) = *($3 + [96])
	$5 = *($1)
	*($1 + [40]) = ((CASTING uint_32)(uint_64 ((int_64)CALL $34() / (int_64)1000000)) + [3600])
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [13720])
	
.LABEL $label$3
	$6 = $2
	$2 = ($6 + [-48])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($6 + [-4])
	CALL $138($3, $1)
	CALL db_update_i64(*($1 + [48]), (int_64)0, $2, [44])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($3 + [96]) = *(($1 + [8]))
	if ( (CALL $17(($3 + [16]), ($3 + [96]), [8]) == 0) ){ goto $label$5 }
	$2 = *($1 + [52])
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$6 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6150061881656114176, ($3 + [64]), $5)
	*(($1 + [52])) = $2
	
.LABEL $label$6
	CALL db_idx64_update($2, (int_64)0, ($3 + [96]))
	
.LABEL $label$5
	*($3 + [64]) = *(($1 + [24]))
	*($3 + [72]) = *(($1 + [32]))
	CALL $120(($3 + [96]), $4, ($3 + [64]))
	if ( (CALL $17(($3 + [32]), ($3 + [96]), [32]) == 0) ){ goto $label$7 }
	$2 = ($1 + [56])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	*(($3 + [88])) = (int_64)0
	*(($3 + [80])) = (int_64)0
	*($3 + [72]) = (int_64)0
	*($3 + [64]) = (int_64)0
	$1 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)-6150061881656114175, ($3 + [64]), [2], $5)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx256_update($1, (int_64)0, ($3 + [96]), [2])
	
.LABEL $label$7
	$global$0 = ($3 + [128])
}

int_32 .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([56])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40]) = [0]
	*($5 + [44]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	CALL $235(($3 + [32]), ($3 + [24]))
	*($5 + [52]) = [-1]
	*($5 + [48]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $236(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [40])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $213 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $214(*($1), *($0))
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($1)
	*($2 + [15]) = *(*($0 + [16]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, ($2 + [15]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	CALL $214(*($1), *($0 + [44]))
	$global$0 = ($2 + [16])
}

void .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $172(*($1), *($0 + [8]))
	$6 = *($0 + [12])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($6) = *($2 + [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	$6 = ($6 + [8])
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13583])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, $3, [8])
	*($5) = (*($5) + [8])
	CALL $210(*($1), *($0 + [16]))
	CALL $211(*($1), *($0 + [20]))
	$4 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $209 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $43(($1 + [60]), *(($1 + [64])))
	CALL $44(($1 + [48]), *(($1 + [52])))
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [24])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $10($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $202 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($1 + [21])) = *(($3 + [21]))
	*(($6 = ($1 + [16]))) = *(($3 + [16]))
	*(($7 = ($1 + [8]))) = *(($3 + [8]))
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-7])
	*($5 + [16]) = $5
	*($5 + [28]) = $7
	*($5 + [24]) = $1
	*($5 + [32]) = $6
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [28])
	CALL $204(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*(($1 + [36])), $2, $3, [25])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4157503053760561152) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)-4157503053760561151
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $203 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [80])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [13785])
	
.LABEL $label$1
	*(($5 = CALL $8([48])) + [8]) = (int_64)0
	*($5) = [0]
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [28]) = [0]
	*($5 + [32]) = $1
	$3 = *($3)
	*($5) = *($3)
	*($5 + [8]) = *(($3 + [8]))
	*($5 + [16]) = *(($3 + [16]))
	*(($5 + [21])) = *(($3 + [21]))
	*($4 + [40]) = ($4 + [25])
	*($4 + [36]) = $4
	*($4 + [32]) = $4
	*($4 + [48]) = ($4 + [32])
	*($4 + [60]) = ($5 + [8])
	*($4 + [56]) = $5
	*($4 + [64]) = ($5 + [16])
	*($4 + [68]) = ($5 + [24])
	*($4 + [72]) = ($5 + [28])
	CALL $204(($4 + [56]), ($4 + [48]))
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)-4157503053760561152, $2, (int_64)-4157503053760561152, $4, [25])
	*($5 + [36]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-4157503053760561152) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)-4157503053760561151
	
.LABEL $label$2
	*($4 + [56]) = $5
	*($4) = (int_64)-4157503053760561152
	*($4 + [32]) = $6
	$3 = *(($1 + [28]))
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)-4157503053760561152
	*($3 + [16]) = $6
	*($4 + [56]) = [0]
	*($3) = $5
	*(($1 + [28])) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $201(($1 + [24]), ($4 + [56]), $4, ($4 + [32]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [56])
	*($4 + [56]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $10($5)
	
.LABEL $label$5
	$global$0 = ($4 + [80])
}

void .FUNC $200 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [15]), $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($4) = ((int_32)*($2 + [15]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $201 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [13779])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [13779])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [13779])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $207 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [13779])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $205($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

void .FUNC $204 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [13779])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$1 = *($1)
	*($2 + [15]) = *(*($0 + [16]))
	$0 = *($1 + [4])
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [13779])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, ($2 + [15]), [1])
	*(($0 = ($1 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [3])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($2 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $8(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $33($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [3]))
	$3 = ($2 + ($3 << [3]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [3]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $10($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1)
	$4 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-8] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $38($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	
.LABEL $label$2
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $4
	CALL $217($2, $1)
	$1 = ($1 + [16])
	$3 = *($2 + [4])
	if ( ((int_32)(*($2 + [8]) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13779])
	$3 = *($2 + [4])
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	$global$0 = ($2 + [16])
}

void .FUNC $128 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$3 = ($global$0 - [112])
	$global$0 = $3
	CALL $40(($3 + [32]), $2)
	CALL prints([13836])
	CALL printui((int_64)0)
	CALL prints([8486])
	$4 = ($3 + [96])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$1 }
	if ( (*($5 + [16]) == 0) ){ goto $label$1 }
	$6 = $5
	
.LOOP $label$2:
	$4 = $6
	$6 = *($4)
	if ( ($6 == 0) ){ goto $label$1 }
	if ( *($6 + [16]) ){ goto $label$2 }
	
.LABEL $label$1
	$7 = *((*($4) + [24]))
	CALL $43(($3 + [92]), $5)
	CALL $44(($3 + [80]), *(($3 + [84])))
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$3 }
	CALL $10(*((($3 + [32]) + [24])))
	
.LABEL $label$3
	$8 = *($0)
	CALL $24(($3 + [8]), $1)
	*($3 + [32]) = $8
	*($3 + [24]) = $2
	*($3 + [40]) = (int_64)-4708736118785595248
	*(($6 = CALL $8([16]))) = $7
	*($6 + [8]) = (int_64)-6402241254016417792
	$4 = ($6 + [16])
	*((($3 + [32]) + [24])) = $4
	*(($3 + [52])) = $4
	*($3 + [48]) = $6
	CALL $129(($3 + [60]), ($3 + [8]))
	CALL $103(($3 + [32]))
	$6 = *($3 + [60])
	if ( ($6 == 0) ){ goto $label$4 }
	*(($3 + [64])) = $6
	CALL $10($6)
	
.LABEL $label$4
	$6 = *($3 + [48])
	if ( ($6 == 0) ){ goto $label$5 }
	*(($3 + [52])) = $6
	CALL $10($6)
	
.LABEL $label$5
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$6 }
	CALL $10(*($3 + [16]))
	
.LABEL $label$6
	$global$0 = ($3 + [112])
}

int_32 .FUNC $8 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $2($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $2($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $9 (int_32 $0)
{
	return CALL $8($0)
}

void .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-6150061881656114176, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $126($6, $8)
	*($3 + [20]) = [0]
	*($3 + [16]) = $6
	$7 = *(*(CALL $232(($3 + [16])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [14500])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$8 = *($5 + [8])
	*(($6 = ($3 + [8]))) = *(($8 + [8]))
	*($3) = *($8)
	$7 = *(*($5 + [12]) + [16])
	$9 = *($6)
	*((($3 + [16]) + [8])) = $9
	*(($5 = (($3 + [48]) + [8]))) = $9
	$9 = *($3)
	*($3 + [48]) = $9
	*($3 + [16]) = $9
	*(($6 = ($1 + [32]))) = $7
	*(($8 = ($1 + [24]))) = *($5)
	*($1 + [16]) = *($3 + [48])
	*($1 + [40]) = [0]
	$2 = $2
	$5 = ($2 + [-48])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($2 + [-4])
	CALL $138($3, $1)
	$7 = *($1)
	*($1 + [48]) = CALL db_store_i64(*($4 + [8]), (int_64)-6150061881656114176, *(*($0 + [8])), $7, $5, [44])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$4 = ($4 + [8])
	$7 = *($4)
	$0 = *(($0 + [8]))
	$9 = *($0)
	$10 = *($1)
	$5 = ($1 + [8])
	*($3 + [16]) = *($5)
	*($1 + [52]) = CALL db_idx64_store($7, (int_64)-6150061881656114176, $9, $10, ($3 + [16]))
	$7 = *($0)
	$9 = *($4)
	$10 = *($1)
	*($3 + [48]) = *($8)
	*($3 + [56]) = *($6)
	CALL $120(($3 + [16]), $5, ($3 + [48]))
	*(($1 + [56])) = CALL db_idx256_store($9, (int_64)-6150061881656114175, $7, $10, ($3 + [16]), [2])
	$global$0 = ($3 + [64])
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL prints($0)
	CALL $119($2, $1)
	$0 = *($2)
	$3 = ($0 & [1])
	CALL prints_l(( *($2 + [8]) ? ($2 | [1]) : $3 ), ( *($2 + [4]) ? uint_32($0 >> [1]) : $3 ))
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	CALL $10(*(($2 + [8])))
	
.LABEL $label$1
	CALL prints([14089])
	CALL printn(*($1 + [16]))
	$global$0 = ($2 + [16])
}

void .FUNC $121 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [32]) = (int_64)0
	*(($3 + [24])) = *(($2 + [24]))
	*(($3 + [16])) = *(($2 + [16]))
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = *($1)
	$5 = CALL db_idx256_lowerbound(*($4), *($4 + [8]), (int_64)-6150061881656114175, $3, [2], ($3 + [32]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$6 = *($3 + [32])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$6:
	$4 = ($9 + [-24])
	$10 = *($4)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$4 }
	$9 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	$4 = [0]
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($10 + [44]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [13348])
	goto $label$2 
	
.LABEL $label$3
	$10 = CALL $126($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-6150061881656114176, $6))
	if ( ((int_32)*($10 + [44]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$2
	*(($10 + [56])) = $5
	$4 = [0]
	if ( ($10 == 0) ){ goto $label$1 }
	*($3 + [32]) = *(($10 + [24]))
	*($3 + [40]) = *(($10 + [32]))
	CALL $120($3, ($10 + [8]), ($3 + [32]))
	if ( ((int_64)(((int_64)((int_64)*($2) ^ (int_64)*($3)) | (int_64)((int_64)*(($2 + [8])) ^ (int_64)*($3 + [8]))) == 0) == 0) ){ goto $label$1 }
	$4 = ( $10 ? [0] : (int_64)(((int_64)((int_64)*($2 + [16]) ^ (int_64)*($3 + [16])) | (int_64)((int_64)*(($2 + [24])) ^ (int_64)*(($3 + [24])))) == 0) )
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [48])
}

void .FUNC $120 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [80])
	$global$0 = $3
	*($3 + [40]) = *($2 + [8])
	*($3 + [32]) = (uint_64)*($2) >> (uint_64)(int_64)8)
	$4 = (int_64)0
	*($3 + [24]) = (int_64)0
	CALL memcpy(($3 + [48]), $1, [8])
	CALL memcpy((($3 + [48]) | [8]), ($3 + [40]), [8])
	$2 = [16]
	CALL memcpy((($3 + [48]) + [16]), ($3 + [32]), [8])
	CALL memcpy(($3 + [72]), ($3 + [24]), [8])
	$1 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	$6 = (($3 + [48]) + $1)
	if ( ($2 <= [2]) ){ goto $label$3 }
	$4 = ((int_64)$4 | (int_64)*($6))
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)(uint_64)$4 >> (uint_64)(int_64)56))
	$2 = ($2 + [-1])
	$4 = ((int_64)$4 << (int_64)8)
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[32]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [14003])
	
.LABEL $label$4
	*($0 + [8]) = $5
	*($0) = ((int_64)$4 | (int_64)*($6))
	$2 = [16]
	$0 = ($0 + [16])
	$4 = (int_64)0
	$5 = (int_64)0
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$2 == (int_32)[16]) ){ goto $label$5 }
	if ( ($2 <= [2]) ){ goto $label$6 }
	CALL __ashlti3(($3 + [8]), $4, $5, (($2 << [3]) + [-8]))
	$5 = *(($3 + [16]))
	$4 = *($3 + [8])
	
.LABEL $label$6
	*($0) = $4
	*($0 + [8]) = $5
	
.LABEL $label$5
	$global$0 = ($3 + [80])
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8240])
	return $3
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $8([64])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = [0]
	*($5 + [44]) = $0
	CALL $229(($3 + [32]), $5)
	*($5 + [48]) = $1
	*($5 + [52 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $124(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $125 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	$5 = ($1 + [8])
	$6 = *($5)
	$7 = ($1 + [24])
	*($4) = *($7)
	$8 = ($1 + [32])
	*($4 + [8]) = *($8)
	CALL $120(($4 + [80]), $5, $4)
	*(($4 + [24])) = *($4 + [88])
	*(($4 + [32])) = *(($4 + [96]))
	*(($4 + [40])) = *((($4 + [80]) + [24]))
	*($4) = $6
	*($4 + [16]) = *($4 + [80])
	$6 = *($1)
	$10 = *($2)
	*(($9 = (($4 + [112]) + [8]))) = *(($10 + [8]))
	*($4 + [112]) = *($10)
	$11 = *(*($2 + [4]) + [16])
	$12 = *($9)
	*((($4 + [48]) + [8])) = $12
	*((($4 + [80]) + [8])) = $12
	*($4 + [96]) = $11
	$11 = *($4 + [112])
	*($4 + [80]) = $11
	*($4 + [48]) = $11
	CALL $231([14465], ($4 + [80]))
	$9 = *($2)
	$11 = *($9 + [8])
	$12 = *($9)
	if ( ((int_64)*($8) == (int_64)*(*($2 + [4]) + [16])) ){ goto $label$3 }
	CALL eosio_assert([0], [13884])
	
.LABEL $label$3
	if ( ((int_64)$11 == (int_64)*($7)) ){ goto $label$4 }
	CALL eosio_assert([0], [13898])
	
.LABEL $label$4
	$11 = ((int_64)*($1 + [16]) + (int_64)$12)
	*($1 + [16]) = $11
	if ( ((int_64)$11 <= (int_64)-4611686018427387904) ){ goto $label$9 }
	if ( ((int_64)$11 >= (int_64)4611686018427387904) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL eosio_assert([0], [13941])
	if ( ((int_64)*(($1 + [16])) < (int_64)4611686018427387904) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [13960])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [13720])
	
.LABEL $label$5
	$3 = $3
	$2 = ($3 + [-48])
	$global$0 = $2
	*($4 + [116]) = $2
	*($4 + [112]) = $2
	*($4 + [120]) = ($3 + [-4])
	CALL $138(($4 + [112]), $1)
	CALL db_update_i64(*($1 + [48]), (int_64)0, $2, [44])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($4 + [80]) = *(($1 + [8]))
	if ( (CALL $17($4, ($4 + [80]), [8]) == 0) ){ goto $label$11 }
	$2 = *($1 + [52])
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$12 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6150061881656114176, ($4 + [48]), $6)
	*(($1 + [52])) = $2
	
.LABEL $label$12
	CALL db_idx64_update($2, (int_64)0, ($4 + [80]))
	
.LABEL $label$11
	*($4 + [48]) = *(($1 + [24]))
	*($4 + [56]) = *(($1 + [32]))
	CALL $120(($4 + [80]), $5, ($4 + [48]))
	if ( (CALL $17(($4 + [16]), ($4 + [80]), [32]) == 0) ){ goto $label$13 }
	$2 = ($1 + [56])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$14 }
	*(($4 + [72])) = (int_64)0
	*(($4 + [64])) = (int_64)0
	*($4 + [56]) = (int_64)0
	*($4 + [48]) = (int_64)0
	$1 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)-6150061881656114175, ($4 + [48]), [2], $6)
	*($2) = $1
	
.LABEL $label$14
	CALL db_idx256_update($1, (int_64)0, ($4 + [80]), [2])
	
.LABEL $label$13
	$global$0 = ($4 + [128])
}

void .FUNC $124 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	CALL $14($0, $1)
}

int_32 .FUNC $16 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $10 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $11 (int_32 $0)
{
	CALL $10($0)
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $7(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $7(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	return CALL $12($0, $1)
}

void .FUNC $185 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [100]) = $4
	*($3 + [96]) = $4
	*($3 + [104]) = ($4 + $5)
	*($3 + [88]) = [0]
	*($3 + [80]) = (int_64)0
	CALL $172(($3 + [96]), ($3 + [80]))
	*($3 + [72]) = (int_64)0
	$4 = *($3 + [100])
	if ( ((uint_32)(*($3 + [104]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13583])
	$4 = *($3 + [100])
	
.LABEL $label$4
	CALL memcpy(($3 + [72]), $4, [8])
	*($3 + [100]) = (*($3 + [100]) + [8])
	*(($4 = (($3 + [24]) + [8]))) = *((($3 + [96]) + [8]))
	*($3 + [24]) = *($3 + [96])
	$4 = *($4)
	*((($3 + [112]) + [8])) = $4
	*(($5 = (($3 + [128]) + [8]))) = $4
	$6 = *($3 + [24])
	*($3 + [128]) = $6
	*($3 + [112]) = $6
	$4 = *($5)
	*((($3 + [144]) + [8])) = $4
	*(($3 + [64])) = $4
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$0 = *($3 + [128])
	*($3 + [56]) = $0
	*($3 + [144]) = $0
	$4 = CALL $24(($3 + [8]), ($3 + [80]))
	CALL $130(($3 + [40]), $3, *($3 + [72]))
	if ( (*($4) & [1]) ){ goto $label$7 }
	if ( (*($3 + [80]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $10(*($4 + [8]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $10(*(($3 + [88])))
	$global$0 = ($3 + [160])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [160])
}

int_32 .FUNC $18 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [1] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $20($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $20($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [8272]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

void .FUNC $19 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

void .FUNC $184 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [100]) = $4
	*($3 + [96]) = $4
	*($3 + [104]) = ($4 + $5)
	*($3 + [88]) = [0]
	*($3 + [80]) = (int_64)0
	CALL $172(($3 + [96]), ($3 + [80]))
	*($3 + [72]) = (int_64)0
	$4 = *($3 + [100])
	if ( ((uint_32)(*($3 + [104]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13583])
	$4 = *($3 + [100])
	
.LABEL $label$4
	CALL memcpy(($3 + [72]), $4, [8])
	*($3 + [100]) = (*($3 + [100]) + [8])
	*(($4 = (($3 + [24]) + [8]))) = *((($3 + [96]) + [8]))
	*($3 + [24]) = *($3 + [96])
	$4 = *($4)
	*((($3 + [112]) + [8])) = $4
	*(($5 = (($3 + [128]) + [8]))) = $4
	$6 = *($3 + [24])
	*($3 + [128]) = $6
	*($3 + [112]) = $6
	$4 = *($5)
	*((($3 + [144]) + [8])) = $4
	*(($3 + [64])) = $4
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$0 = *($3 + [128])
	*($3 + [56]) = $0
	*($3 + [144]) = $0
	$4 = CALL $24(($3 + [8]), ($3 + [80]))
	CALL $128(($3 + [40]), $4, *($3 + [72]))
	if ( (*($4) & [1]) ){ goto $label$7 }
	if ( (*($3 + [80]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $10(*($4 + [8]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $10(*(($3 + [88])))
	$global$0 = ($3 + [160])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [160])
}

void .FUNC $187 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [40])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [40])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13583])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $5, [8])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $132($3, *($3 + [40]), *($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $218 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13583])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $186 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [8])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$5 = ($3 + [8])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13583])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	CALL eosio_assert([0], [12272])
	$global$0 = ($3 + [16])
}

int_32 .FUNC $180 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [14085])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [3])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $181($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [3]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13583])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [8])
	$2 = (*($6) + [8])
	*($6) = $2
	$7 = ($7 + [8])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [52])
	$4 = ($3 + [40])
	$2 = ($3 + [28])
	$5 = ($3 + [24])
	$1 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $1) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [13779])
	$1 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $5, [4])
	*(($1 = ($3 + [4]))) = (*($1) + [4])
	CALL $224($3, $2)
	CALL $225($3, $4)
	CALL $226($3, $0)
}

void .FUNC $117 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	$2 = ($global$0 - [432])
	$global$0 = $2
	*((($2 + [352]) + [32])) = [0]
	*($2 + [360]) = $1
	*($2 + [368]) = (int_64)-1
	*($2 + [376]) = (int_64)0
	*($2 + [388]) = [0]
	$3 = *($0)
	*($2 + [352]) = $3
	*((($2 + [312]) + [32])) = [0]
	*($2 + [320]) = $1
	*($2 + [312]) = $3
	*($2 + [328]) = (int_64)-1
	*($2 + [336]) = (int_64)0
	*($2 + [348]) = [0]
	CALL $53(($2 + [232]), $3, $1)
	CALL $40(($2 + [152]), $1)
	CALL prints([13836])
	CALL printui((int_64)0)
	CALL prints([8486])
	$4 = ($2 + [216])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$1 }
	if ( (*($5 + [16]) == 0) ){ goto $label$1 }
	$0 = $5
	
.LOOP $label$2:
	$4 = $0
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$1 }
	if ( *($0 + [16]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = *((*($4) + [24]))
	CALL $43(($2 + [212]), $5)
	CALL $44(($2 + [200]), *(($2 + [204])))
	if ( ((*($2 + [168]) & [1]) == 0) ){ goto $label$3 }
	CALL $10(*((($2 + [152]) + [24])))
	
.LABEL $label$3
	$3 = (int_64)0
	*($2 + [128]) = (int_64)0
	*($2 + [136]) = *(($2 + [296]))
	*($2 + [144]) = *(($2 + [304]))
	$0 = CALL db_lowerbound_i64(*($2 + [352]), *((($2 + [352]) + [8])), (int_64)5094022140569452544, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $81(($2 + [352]), $0)
	$3 = (int_64)0
	$4 = (($2 + [128]) + [8])
	
.LOOP $label$5:
	if ( ((int_64)*($4) != (int_64)*(($0 + [16]))) ){ goto $label$6 }
	$1 = ((int_64)*($2 + [128]) + (int_64)*($0 + [8]))
	*($2 + [128]) = $1
	if ( ((int_64)$1 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [13941])
	$1 = *($2 + [128])
	
.LABEL $label$7
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [13960])
	
.LABEL $label$8
	$3 = ((int_64)$3 + (int_64)1)
	
.LABEL $label$6
	$0 = CALL db_next_i64(*($0 + [36]), ($2 + [152]))
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL $81(($2 + [352]), $0)
	goto $label$5 
	
.LABEL $label$4
	CALL prints([10903])
	CALL printi($3)
	CALL $118([10927], ($2 + [128]))
	if ( (int_64)($3 == 0) ){ goto $label$10 }
	*((($2 + [112]) + [8])) = *((($2 + [128]) + [8]))
	$1 = *($2 + [128])
	*($2 + [112]) = $1
	if ( ((int_64)$3 != (int_64)-1) ){ goto $label$11 }
	if ( ((int_64)$1 != (int_64)-9223372036854775808) ){ goto $label$11 }
	CALL eosio_assert([0], [13978])
	
.LABEL $label$11
	*($2 + [112]) = ((int_64)$1 / (int_64)$3)
	goto $label$9 
	
.LABEL $label$10
	*((($2 + [112]) + [8])) = *((($2 + [128]) + [8]))
	*($2 + [112]) = *($2 + [128])
	
.LABEL $label$9
	CALL prints([10936])
	CALL $119(($2 + [152]), ($2 + [112]))
	$0 = *($2 + [152])
	$4 = ($0 & [1])
	CALL prints_l(( *($2 + [160]) ? (($2 + [152]) | [1]) : $4 ), ( *($2 + [156]) ? uint_32($0 >> [1]) : $4 ))
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$12 }
	CALL $10(*(($2 + [160])))
	
.LABEL $label$12
	$1 = *($2 + [112])
	*($2 + [104]) = ($2 + [312])
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$13 }
	$0 = CALL db_lowerbound_i64(*($2 + [352]), *((($2 + [352]) + [8])), (int_64)5094022140569452544, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$13 }
	$7 = (($2 + [312]) + [24])
	$4 = CALL $81(($2 + [352]), $0)
	$8 = ($2 + [167])
	$9 = ($2 + [163])
	$10 = ($2 + [162])
	$11 = ($2 + [161])
	$12 = ($2 + [166])
	$13 = ($2 + [165])
	$14 = ($2 + [164])
	$15 = ($2 + [175])
	$16 = ($2 + [183])
	$17 = ($2 + [179])
	$18 = ($2 + [178])
	$19 = ($2 + [177])
	$20 = ($2 + [171])
	$21 = ($2 + [170])
	$22 = ($2 + [169])
	$23 = ($2 + [182])
	$24 = ($2 + [181])
	$25 = (($2 + [152]) + [28])
	$26 = ($2 + [174])
	$27 = ($2 + [173])
	$28 = ($2 + [172])
	
.LOOP $label$14:
	*((($2 + [72]) + [24])) = *(($4 + [24]))
	*((($2 + [72]) + [16])) = *(($4 + [16]))
	*((($2 + [72]) + [8])) = *(($4 + [8]))
	*($2 + [72]) = *($4)
	CALL prints([10957])
	CALL printn(*($2 + [72]))
	$29 = (($2 + [128]) + [16])
	*(($5 = (($2 + [152]) + [8]))) = *($29)
	$30 = (($2 + [128]) + [8])
	*($2 + [152]) = *($30)
	CALL $120(($2 + [32]), ($2 + [72]), ($2 + [152]))
	CALL prints([10988])
	$1 = *($2 + [32])
	$0 = (CASTING uint_32)(uint_64 $1)
	*($8) = $0
	*($9) = (uint_64)$1 >> (uint_64)(int_64)32)
	*($10) = (uint_64)$1 >> (uint_64)(int_64)40)
	*($11) = (uint_64)$1 >> (uint_64)(int_64)48)
	*($5) = (uint_64)$1 >> (uint_64)(int_64)56)
	*($12) = uint_32($0 >> [8])
	*($13) = uint_32($0 >> [16])
	*($14) = uint_32($0 >> [24])
	$1 = *($2 + [40])
	*($2 + [155]) = (uint_64)$1 >> (uint_64)(int_64)32)
	*($2 + [154]) = (uint_64)$1 >> (uint_64)(int_64)40)
	*($2 + [153]) = (uint_64)$1 >> (uint_64)(int_64)48)
	*($2 + [152]) = (uint_64)$1 >> (uint_64)(int_64)56)
	$0 = (CASTING uint_32)(uint_64 $1)
	*($2 + [159]) = $0
	*($2 + [158]) = uint_32($0 >> [8])
	*($2 + [157]) = uint_32($0 >> [16])
	*($2 + [156]) = uint_32($0 >> [24])
	$1 = *((($2 + [32]) + [24]))
	*($15) = $1
	$3 = *((($2 + [32]) + [16]))
	$0 = (CASTING uint_32)(uint_64 $3)
	*($16) = $0
	*($17) = (uint_64)$3 >> (uint_64)(int_64)32)
	*($18) = (uint_64)$3 >> (uint_64)(int_64)40)
	*($19) = (uint_64)$3 >> (uint_64)(int_64)48)
	*((($2 + [152]) + [24])) = (uint_64)$3 >> (uint_64)(int_64)56)
	*($20) = (uint_64)$1 >> (uint_64)(int_64)32)
	*($21) = (uint_64)$1 >> (uint_64)(int_64)40)
	*($22) = (uint_64)$1 >> (uint_64)(int_64)48)
	*(($31 = (($2 + [152]) + [16]))) = (uint_64)$1 >> (uint_64)(int_64)56)
	*($23) = uint_32($0 >> [8])
	*($24) = uint_32($0 >> [16])
	*($25) = uint_32($0 >> [24])
	$0 = (CASTING uint_32)(uint_64 $1)
	*($26) = uint_32($0 >> [8])
	*($27) = uint_32($0 >> [16])
	*($28) = uint_32($0 >> [24])
	CALL printhex(($2 + [152]), [32])
	CALL $121(($2 + [24]), ($2 + [104]), ($2 + [32]))
	$0 = *($2 + [28])
	if ( ($0 == 0) ){ goto $label$17 }
	if ( ((int_64)*($0 + [8]) != (int_64)*($2 + [72])) ){ goto $label$17 }
	if ( ((int_64)*(($0 + [24])) != (int_64)*($30)) ){ goto $label$17 }
	if ( ((int_64)*(($0 + [32])) != (int_64)*($29)) ){ goto $label$17 }
	if ( (*($0 + [40]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	*(($0 = (($2 + [8]) + [8]))) = *((($2 + [112]) + [8]))
	*($2 + [8]) = *($2 + [112])
	*($31) = *($29)
	$1 = *($0)
	*(($29 = (($2 + [392]) + [8]))) = $1
	*($5) = $1
	$1 = *($2 + [8])
	*($2 + [152]) = $1
	*($2 + [392]) = $1
	CALL $122([11014], ($2 + [152]))
	*($5) = ($2 + [112])
	*($14) = ($2 + [128])
	*($2 + [156]) = ($2 + [72])
	*($2 + [152]) = ($2 + [312])
	*($2 + [424]) = $6
	if ( ((int_64)CALL current_receiver() == (int_64)*($2 + [312])) ){ goto $label$18 }
	CALL eosio_assert([0], [13785])
	
.LABEL $label$18
	*($29) = ($2 + [424])
	*($2 + [396]) = ($2 + [152])
	*($2 + [392]) = ($2 + [312])
	*(($0 = CALL $8([64])) + [16]) = (int_64)0
	*($0 + [8]) = (int_64)0
	*($0 + [24]) = (int_64)0
	*($0 + [32]) = (int_64)0
	*($0 + [40]) = [0]
	*($0 + [44]) = ($2 + [312])
	CALL $123(($2 + [392]), $0)
	*($2 + [416]) = $0
	$1 = *($0)
	*($2 + [392]) = $1
	$29 = *($0 + [48])
	*($2 + [412]) = $29
	$31 = (($2 + [312]) + [28])
	$5 = *($31)
	if ( ((uint_32)$5 >= (uint_32)*((($2 + [312]) + [32]))) ){ goto $label$20 }
	*($5 + [8]) = $1
	*($5 + [16]) = $29
	*($2 + [416]) = [0]
	*($5) = $0
	*($31) = ($5 + [24])
	$0 = *($2 + [416])
	*($2 + [416]) = [0]
	if ( $0 ){ goto $label$19 }
	goto $label$15 
	
.LABEL $label$20
	CALL $124($7, ($2 + [416]), ($2 + [392]), ($2 + [412]))
	$0 = *($2 + [416])
	*($2 + [416]) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	
.LABEL $label$19
	CALL $10($0)
	goto $label$15 
	
.LABEL $label$16
	*($2 + [156]) = ($2 + [128])
	*($2 + [152]) = ($2 + [112])
	CALL $125(*($2 + [104]), $0, ($2 + [152]))
	
.LABEL $label$15
	$0 = CALL db_next_i64(*($4 + [36]), ($2 + [152]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$13 }
	$4 = CALL $81(($2 + [352]), $0)
	goto $label$14 
	
.LABEL $label$13
	CALL prints([11052])
	$5 = *($2 + [336])
	if ( ($5 == 0) ){ goto $label$21 }
	$29 = ($2 + [340])
	$0 = *($29)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$23 }
	
.LOOP $label$24:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$25 }
	CALL $10($4)
	
.LABEL $label$25
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$24 }
	$0 = *(($2 + [336]))
	goto $label$22 
	
.LABEL $label$23
	$0 = $5
	
.LABEL $label$22
	*($29) = $5
	CALL $10($0)
	
.LABEL $label$21
	$5 = *($2 + [376])
	if ( ($5 == 0) ){ goto $label$26 }
	$29 = ($2 + [380])
	$0 = *($29)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$28 }
	
.LOOP $label$29:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$30 }
	CALL $10($4)
	
.LABEL $label$30
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$29 }
	$0 = *(($2 + [376]))
	goto $label$27 
	
.LABEL $label$28
	$0 = $5
	
.LABEL $label$27
	*($29) = $5
	CALL $10($0)
	
.LABEL $label$26
	$global$0 = ($2 + [432])
}

void .FUNC $114 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [80])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	$5 = *($1)
	*($4 + [16]) = $5
	$6 = ($1 + [40])
	$7 = *($6)
	*($4 + [24]) = $7
	$8 = ($1 + [8])
	*($4 + [40]) = *($8)
	*($4 + [32]) = ((int_64)$7 ^ (int_64)-1)
	$9 = *($2)
	*($6) = ((int_64)$7 + (int_64)*($9))
	$2 = *(($2 + [4]))
	CALL prints([14421])
	CALL printn(*($2))
	CALL prints([14445])
	CALL printi(*($9))
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [13720])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($3 + [-11])
	*($4 + [48]) = $4
	*($4 + [68]) = $6
	*($4 + [56]) = $1
	*($4 + [60]) = $8
	*($4 + [64]) = ($1 + [24])
	*($4 + [72]) = ($1 + [48])
	*($4 + [76]) = ($1 + [52])
	CALL $56(($4 + [56]), ($4 + [48]))
	CALL db_update_i64(*($1 + [60]), (int_64)0, $2, [53])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [16]) + [8])
	*($4 + [56]) = *($1)
	if ( (CALL $17(($4 + [16]), ($4 + [56]), [8]) == 0) ){ goto $label$5 }
	$8 = ($1 + [64])
	$3 = *($8)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$6 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($4 + [48]), $5)
	*($8) = $3
	
.LABEL $label$6
	CALL db_idx64_update($3, (int_64)0, ($4 + [56]))
	
.LABEL $label$5
	$3 = ($4 + [32])
	*($4 + [56]) = *($6)
	if ( (CALL $17($2, ($4 + [56]), [8]) == 0) ){ goto $label$7 }
	$8 = ($1 + [68])
	$2 = *($8)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193537, ($4 + [48]), $5)
	*($8) = $2
	
.LABEL $label$8
	CALL db_idx64_update($2, (int_64)0, ($4 + [56]))
	
.LABEL $label$7
	$2 = (($4 + [16]) + [24])
	*($4 + [56]) = ((int_64)*($6) ^ (int_64)-1)
	if ( (CALL $17($3, ($4 + [56]), [8]) == 0) ){ goto $label$9 }
	$3 = ($1 + [72])
	$6 = *($3)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$10 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193538, ($4 + [48]), $5)
	*($3) = $6
	
.LABEL $label$10
	CALL db_idx64_update($6, (int_64)0, ($4 + [56]))
	
.LABEL $label$9
	*($4 + [56]) = *(($1 + [8]))
	if ( (CALL $17($2, ($4 + [56]), [8]) == 0) ){ goto $label$11 }
	$6 = ($1 + [76])
	$1 = *($6)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$12 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193539, ($4 + [48]), $5)
	*($6) = $1
	
.LABEL $label$12
	CALL db_idx64_update($1, (int_64)0, ($4 + [56]))
	
.LABEL $label$11
	$global$0 = ($4 + [80])
}

void .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = (*($2) + [4])
	*(($2 = *($1))) = $1
	$3 = *($3)
	$3 = *($0 + [4])
	$4 = *($3 + [4])
	$5 = (CASTING uint_64)(uint_32 ((int_32)($4 - $3) / (int_32)[44]))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$3:
	$1 = ($1 + [35])
	$5 = *($3)
	
.LOOP $label$4:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$4 }
	$3 = ($3 + [44])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$3 }
	*($2) = $1
	
.LABEL $label$2
	$3 = *($3)
	$3 = *($0 + [8])
	$4 = *($3 + [4])
	$6 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[24]))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$6 }
	$1 = ((((int_32)((uint_32)($6 + [-24]) / (uint_32)[24]) * (int_32)[18]) + $1) + [18])
	
.LABEL $label$6
	*($2) = $1
	$3 = *($3)
	$3 = *($0 + [12])
	$4 = *($3 + [4])
	$0 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($0 >> [3]))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$8 }
	$1 = ((((int_32)uint_32(($0 + [-8]) >> [3]) * (int_32)[6]) + $1) + [6])
	
.LABEL $label$8
	*($2) = $1
}

int_32 .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $223(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $10($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $113 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [48]) = $2
	*($4 + [56]) = $1
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$6 }
	*(($4 + [40])) = (int_64)0
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$5 = *($0)
	*($4 + [8]) = $5
	*($4 + [16]) = $3
	$0 = CALL db_find_i64($5, $3, (int_64)4730634643120193536, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	$0 = CALL $51(($4 + [8]), $0)
	if ( ((int_32)*($0 + [56]) == (int_32)($4 + [8])) ){ goto $label$7 }
	CALL eosio_assert([0], [13348])
	$2 = *($4 + [48])
	
.LABEL $label$7
	$1 = *($0 + [40])
	$3 = ((int_64)$1 + (int_64)$2)
	if ( ((int_64)$2 <= (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$3 >= (uint_64)$1) ){ goto $label$3 }
	CALL eosio_assert([0], [10721])
	goto $label$3 
	
.LABEL $label$6
	CALL prints([10594])
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$5
	CALL prints([10638])
	CALL printn(*($4 + [56]))
	$6 = *($4 + [32])
	if ( $6 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	if ( (uint_64)($3 <= $1) ){ goto $label$3 }
	CALL eosio_assert([0], [10691])
	
.LABEL $label$3
	*($4 + [4]) = ($4 + [56])
	*($4) = ($4 + [48])
	CALL $114(($4 + [8]), $0, $4)
	$6 = *($4 + [32])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($4 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$8 = *($0)
	*($0) = [0]
	if ( ($8 == 0) ){ goto $label$11 }
	CALL $10($8)
	
.LABEL $label$11
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($4 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $6
	
.LABEL $label$8
	*($7) = $6
	CALL $10($0)
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$1
	$global$0 = ($4 + [64])
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $110($0, *($1))
	CALL $110($0, *($1 + [4]))
	CALL $10($1)
	
.LABEL $label$1
}

void .FUNC $111 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [16])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [20])) = $2
	CALL $10($2)
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $10($4)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $237 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$4 = ($1 + [8])
	CALL memcpy($3, $1, [8])
	$5 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $5
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$5 = *($3)
	
.LABEL $label$2
	$6 = ($1 + [24])
	CALL memcpy($5, $4, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	CALL $217($0, $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL prints($0)
	CALL $119($2, $1)
	$0 = *($2)
	$3 = ($0 & [1])
	CALL prints_l(( *($2 + [8]) ? ($2 | [1]) : $3 ), ( *($2 + [4]) ? uint_32($0 >> [1]) : $3 ))
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	CALL $10(*(($2 + [8])))
	
.LABEL $label$1
	CALL prints([14089])
	CALL printn(*($1 + [16]))
	$global$0 = ($2 + [16])
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [8])
	$5 = (CASTING uint_32)(uint_64 $4)
	$6 = ((int_64)$4 & (int_64)255)
	$7 = (int_64)($6 == 0)
	if ( $7 ){ goto $label$2 }
	$8 = ((int_64)$6 + (int_64)1)
	$9 = (int_64)1
	
.LOOP $label$3:
	$9 = ((int_64)$9 * (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)1
	
.LABEL $label$1
	$5 = ($5 & [255])
	$10 = ($2 - (($5 + [16]) & [496]))
	$2 = $10
	$global$0 = $2
	*(($11 = ($10 + $5))) = [0]
	$12 = *($1)
	if ( $7 ){ goto $label$4 }
	$8 = ((int_64)( (int_64)-1 ? (int_64)1 : ((int_64)$12 < (int_64)0) ) * (int_64)((int_64)$12 % (int_64)$9))
	$6 = ((int_64)$6 + (int_64)1)
	$1 = ($11 + [-1])
	
.LOOP $label$5:
	$13 = ((int_64)$8 / (int_64)10)
	*($1) = ((CASTING uint_32)(uint_64 (int_64))($8 - ((int_64)$13 * (int_64)10))) + [48])
	$1 = ($1 + [-1])
	$8 = $13
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)$6 > (int_64)1) ){ goto $label$5 }
	
.LABEL $label$4
	$11 = ($2 - (($5 + [47]) & [496]))
	$global$0 = $11
	$14 = ( [14462] ? [14464] : *($10) )
	$9 = ((int_64)$12 / (int_64)$9)
	$15 = ($5 + [32])
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( (int_64)($8) == 0) ){ goto $label$9 }
	$5 = [0]
	
.LOOP $label$11:
	*((($3 + [41]) + ($1 = $5))) = $8
	$5 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$11 }
	
.LABEL $label$10
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [24]) = ($5 << [1])
	$2 = (($3 + [24]) | [1])
	goto $label$7 
	
.LABEL $label$9
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	*($3 + [24]) = [0]
	$1 = (($3 + [24]) | [1])
	$5 = $1
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$2 = CALL $8($7)
	*($3 + [24]) = ($7 | [1])
	*($3 + [32]) = $2
	*($3 + [28]) = $5
	
.LABEL $label$7
	$7 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$12:
	*(($2 + $1)) = *((($3 + [41]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$12 }
	$5 = ($2 + $5)
	$1 = (($3 + [24]) | [1])
	
.LABEL $label$6
	*($5) = [0]
	*(($3 + [16])) = ( *($3 + [32]) ? $1 : (*($3 + [24]) & [1]) )
	*($3 + [12]) = $10
	*($3 + [8]) = $14
	*($3) = $9
	CALL $22($11, $15, [14450], $3)
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $10(*(($3 + [32])))
	
.LABEL $label$13
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL $16($11)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$17 }
	*($0) = ($1 << [1])
	$5 = ($0 + [1])
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$2 = (($1 + [16]) & [-16])
	$5 = CALL $8($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $1
	
.LABEL $label$16
	CALL memcpy($5, $11, $1)
	
.LABEL $label$15
	*(($5 + $1)) = [0]
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$14
	CALL $23($0)
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $16($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $25($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $8($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $10($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $235 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13583])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $172(*($1), *($0 + [12]))
	$global$0 = ($2 + [16])
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $20 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $23 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $18([2], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

void .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $8($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $10($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $8($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $27 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$5 = uint_32($3 >> [1])
	if ( ($5 <= $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($1 - $5)
	if ( ($1 == 0) ){ goto $label$2 }
	if ( $4 ){ goto $label$8 }
	$5 = [10]
	$4 = uint_32($3 >> [1])
	if ( (([10] - $4) <= $1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = *($0 + [4])
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	if ( ((uint_32)($5 - $4) >= (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $28($0, $5, (($4 + $1) - $5), $4, $4, [0], [0])
	$3 = *($0)
	
.LABEL $label$6
	if ( ($3 & [1]) ){ goto $label$10 }
	$3 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$3 = *($0 + [8])
	
.LABEL $label$9
	CALL memset(($3 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$11
	*($0 + [4]) = $1
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	*((($0 + $1) + [1])) = [0]
	*($0) = ($1 << [1])
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*((*($0 + [8]) + $1)) = [0]
	*($0 + [4]) = $1
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $8(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $10($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

int_32 .FUNC $232 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [48]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13476])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-6150061881656114176)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13422])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13422])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $126(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $101 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$5 = *($1)
	*($4 + [8]) = $5
	*($4 + [16]) = $3
	$6 = (int_64)3617214756542218240
	$7 = CALL db_find_i64($5, $3, (int_64)4730638517607071744, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $66(($4 + [8]), $7)
	if ( ((int_32)*($7 + [16]) == (int_32)($4 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$2
	if ( (CALL $87($1, $2, *($7 + [8])) == 0) ){ goto $label$1 }
	$6 = *(($7 + [8]))
	
.LABEL $label$1
	*($0 + [8]) = $6
	*($0) = $2
	$7 = *($4 + [32])
	if ( ($7 == 0) ){ goto $label$3 }
	$8 = ($4 + [36])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $10($1)
	
.LABEL $label$7
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($4 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $7
	
.LABEL $label$4
	*($8) = $7
	CALL $10($0)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [80])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	$5 = *($1)
	*($4 + [16]) = $5
	$6 = ($1 + [40])
	$7 = *($6)
	*($4 + [24]) = $7
	$8 = ($1 + [8])
	*($4 + [40]) = *($8)
	*($4 + [32]) = ((int_64)$7 ^ (int_64)-1)
	CALL prints([14389])
	$7 = CALL $34()
	*($1 + [52]) = (*(*($2) + [48]) + (CASTING uint_32)(uint_64 ((int_64)$7 / (int_64)1000000)))
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [13720])
	
.LABEL $label$3
	$2 = $3
	$3 = ($2 + [-64])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($2 + [-11])
	*($4 + [48]) = $4
	*($4 + [68]) = $6
	*($4 + [56]) = $1
	*($4 + [60]) = $8
	*($4 + [64]) = ($1 + [24])
	*($4 + [72]) = ($1 + [48])
	*($4 + [76]) = ($1 + [52])
	CALL $56(($4 + [56]), ($4 + [48]))
	CALL db_update_i64(*($1 + [60]), (int_64)0, $3, [53])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$3 = (($4 + [16]) + [8])
	*($4 + [56]) = *($1)
	if ( (CALL $17(($4 + [16]), ($4 + [56]), [8]) == 0) ){ goto $label$5 }
	$8 = ($1 + [64])
	$2 = *($8)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$6 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($4 + [48]), $5)
	*($8) = $2
	
.LABEL $label$6
	CALL db_idx64_update($2, (int_64)0, ($4 + [56]))
	
.LABEL $label$5
	$2 = ($4 + [32])
	*($4 + [56]) = *($6)
	if ( (CALL $17($3, ($4 + [56]), [8]) == 0) ){ goto $label$7 }
	$8 = ($1 + [68])
	$3 = *($8)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$8 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193537, ($4 + [48]), $5)
	*($8) = $3
	
.LABEL $label$8
	CALL db_idx64_update($3, (int_64)0, ($4 + [56]))
	
.LABEL $label$7
	$3 = (($4 + [16]) + [24])
	*($4 + [56]) = ((int_64)*($6) ^ (int_64)-1)
	if ( (CALL $17($2, ($4 + [56]), [8]) == 0) ){ goto $label$9 }
	$2 = ($1 + [72])
	$6 = *($2)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$10 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193538, ($4 + [48]), $5)
	*($2) = $6
	
.LABEL $label$10
	CALL db_idx64_update($6, (int_64)0, ($4 + [56]))
	
.LABEL $label$9
	*($4 + [56]) = *(($1 + [8]))
	if ( (CALL $17($3, ($4 + [56]), [8]) == 0) ){ goto $label$11 }
	$6 = ($1 + [76])
	$1 = *($6)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$12 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193539, ($4 + [48]), $5)
	*($6) = $1
	
.LABEL $label$12
	CALL db_idx64_update($1, (int_64)0, ($4 + [56]))
	
.LABEL $label$11
	$global$0 = ($4 + [80])
}

void .FUNC $103 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $38($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $127(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $10($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$6 = [178956970]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $8(((int_32)$6 * (int_32)[24]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	*(($4 = ($5 + ((int_32)$4 * (int_32)[24])))) = *($1)
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 + ((int_32)((int_32)$1 / (int_32)[-24]) * (int_32)[24]))
	$6 = ($5 + ((int_32)$6 * (int_32)[24]))
	$4 = ($4 + [24])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $10($3)
	
.LABEL $label$6
	(unreachable)
}

int_32 .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [28]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	CALL $219(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = [-1]
	*($5 + [32]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $111(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$4 = *($1 + [16])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [20])) = $4
	CALL $10($4)
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $104 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$4 = ($global$0 - [304])
	$global$0 = $4
	*($4 + [256]) = $1
	*(($4 + [248])) = (int_64)0
	*($4 + [224]) = $3
	*($4 + [232]) = (int_64)-1
	*($4 + [240]) = (int_64)0
	$5 = *($0)
	*($4 + [216]) = $5
	CALL $53(($4 + [136]), $5, $3)
	CALL require_auth($1)
	CALL $47($1, $3)
	$7 = *($2)
	$6 = *($2 + [4])
	if ( ((uint_32)int_32(($6 - $7) >> [3]) <= (uint_32)*($4 + [160])) ){ goto $label$1 }
	CALL eosio_assert([0], [10267])
	$6 = *(($2 + [4]))
	$7 = *($2)
	
.LABEL $label$1
	*($4 + [124 align=4]) = (int_64)0
	$8 = (($4 + [120]) | [4])
	*($4 + [120]) = $8
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$3 }
	$9 = (($4 + [120]) + [8])
	$10 = [0]
	$1 = *($7)
	if ( [0] ){ goto $label$4 }
	$11 = [13]
	goto $label$2 
	
.LABEL $label$4
	$11 = [6]
	goto $label$2 
	
.LABEL $label$3
	$11 = [14]
	
.LABEL $label$2
	
.LOOP $label$5:
	goto $label$130 
	
.LABEL $label$134
	$1 = *($7)
	$10 = *($4 + [124])
	if ( ($10 == 0) ){ goto $label$59 }
	$11 = [6]
	goto $label$5 
	
.LABEL $label$133
	$12 = $8
	$5 = *($10 + [16])
	if ( ((uint_64)$1 >= (uint_64)$5) ){ goto $label$51 }
	goto $label$52 
	
.LABEL $label$132
	$12 = $10
	$10 = $13
	$5 = *($10 + [16])
	if ( ((uint_64)$1 >= (uint_64)$5) ){ goto $label$56 }
	$11 = [7]
	goto $label$5 
	
.LABEL $label$131
	$13 = *($10)
	if ( $13 ){ goto $label$44 }
	goto $label$45 
	
.LABEL $label$130
	if ( ((uint_64)$5 >= (uint_64)$1) ){ goto $label$53 }
	$11 = [73]
	goto $label$5 
	
.LABEL $label$129
	$12 = ($10 + [4])
	$13 = *($10 + [4])
	if ( ($13 == 0) ){ goto $label$55 }
	$11 = [74]
	goto $label$5 
	
.LABEL $label$128
	$10 = $12
	goto $label$54 
	
.LABEL $label$127
	$10 = $8
	$12 = $8
	$11 = [1]
	goto $label$5 
	
.LABEL $label$126
	if ( (*($12) == 0) ){ goto $label$50 }
	$11 = [2]
	goto $label$5 
	
.LABEL $label$125
	CALL eosio_assert([0], [10343])
	goto $label$57 
	
.LABEL $label$124
	$12 = $10
	if ( *($12) ){ goto $label$58 }
	$11 = [10]
	goto $label$5 
	
.LABEL $label$123
	*(($13 = CALL $8([24]))) = (int_64)0
	*($13 + [8]) = $10
	*($12) = $13
	*($13 + [16]) = $1
	$10 = *(*($4 + [120]))
	if ( ($10 == 0) ){ goto $label$43 }
	$11 = [11]
	goto $label$5 
	
.LABEL $label$122
	*($4 + [120]) = $10
	$13 = *($12)
	$11 = [12]
	goto $label$5 
	
.LABEL $label$121
	CALL $45(*($4 + [124]), $13)
	*($9) = (*($9) + [1])
	$11 = [3]
	goto $label$5 
	
.LABEL $label$120
	if ( (*(CALL $48(($4 + [216]), $1, [10420]) + [48]) == 0) ){ goto $label$49 }
	$11 = [4]
	goto $label$5 
	
.LABEL $label$119
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$47 }
	goto $label$48 
	
.LABEL $label$118
	CALL eosio_assert([0], [10485])
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$46 }
	$11 = [14]
	goto $label$5 
	
.LABEL $label$117
	*(($4 + [112])) = [0]
	*($4 + [96]) = (int_64)-1
	*($4 + [104]) = (int_64)0
	*($4 + [116]) = [0]
	$1 = *($0)
	*($4 + [80]) = $1
	*($4 + [88]) = $3
	$5 = *($4 + [256])
	$10 = CALL db_find_i64($1, $3, (int_64)-2507752926491967488, $5)
	if ( ((int_32)$10 <= (int_32)[-1]) ){ goto $label$42 }
	$11 = [15]
	goto $label$5 
	
.LABEL $label$116
	$10 = CALL $105(($4 + [80]), $10)
	if ( ((int_32)*($10 + [28]) == (int_32)($4 + [80])) ){ goto $label$41 }
	$11 = [16]
	goto $label$5 
	
.LABEL $label$115
	CALL eosio_assert([0], [13348])
	$11 = [17]
	goto $label$5 
	
.LABEL $label$114
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = [0]
	$1 = *($4 + [256])
	$12 = (*(($10 + [20])) - *($10 + [16]))
	if ( ($12 == 0) ){ goto $label$40 }
	$11 = [18]
	goto $label$5 
	
.LABEL $label$113
	$13 = int_32($12 >> [3])
	if ( ((uint_32)$13 >= (uint_32)[536870912]) ){ goto $label$39 }
	$11 = [19]
	goto $label$5 
	
.LABEL $label$112
	$12 = CALL $8($12)
	*(($4 + [72])) = ($12 + ($13 << [3]))
	*($4 + [64]) = $12
	*($4 + [68]) = $12
	$7 = *(($10 + [16]))
	$13 = (*(($10 + [20])) - $7)
	if ( ((int_32)$13 < (int_32)[1]) ){ goto $label$38 }
	$11 = [55]
	goto $label$5 
	
.LABEL $label$111
	CALL memcpy($12, $7, $13)
	*($4 + [68]) = (*($4 + [68]) + $13)
	$11 = [20]
	goto $label$5 
	
.LABEL $label$110
	*($4 + [56]) = [0]
	*($4 + [48]) = (int_64)0
	$12 = (*(($2 + [4])) - *($2))
	if ( ($12 == 0) ){ goto $label$37 }
	$11 = [21]
	goto $label$5 
	
.LABEL $label$109
	$13 = int_32($12 >> [3])
	if ( ((uint_32)$13 >= (uint_32)[536870912]) ){ goto $label$36 }
	$11 = [22]
	goto $label$5 
	
.LABEL $label$108
	$12 = CALL $8($12)
	*(($4 + [56])) = ($12 + ($13 << [3]))
	*($4 + [48]) = $12
	*($4 + [52]) = $12
	$7 = *($2)
	$13 = (*(($2 + [4])) - $7)
	if ( ((int_32)$13 < (int_32)[1]) ){ goto $label$35 }
	$11 = [53]
	goto $label$5 
	
.LABEL $label$107
	CALL memcpy($12, $7, $13)
	*($4 + [52]) = (*($4 + [52]) + $13)
	$11 = [23]
	goto $label$5 
	
.LABEL $label$106
	CALL $106($0, $1, ($4 + [64]), ($4 + [48]), $3)
	$12 = *($4 + [48])
	if ( ($12 == 0) ){ goto $label$34 }
	$11 = [24]
	goto $label$5 
	
.LABEL $label$105
	*($4 + [52]) = $12
	CALL $10($12)
	$11 = [25]
	goto $label$5 
	
.LABEL $label$104
	$12 = *($4 + [64])
	if ( ($12 == 0) ){ goto $label$33 }
	$11 = [26]
	goto $label$5 
	
.LABEL $label$103
	*($4 + [68]) = $12
	CALL $10($12)
	$11 = [27]
	goto $label$5 
	
.LABEL $label$102
	if ( ((int_32)*(($2 + [4])) != (int_32)*($2)) ){ goto $label$32 }
	$11 = [50]
	goto $label$5 
	
.LABEL $label$101
	$12 = CALL db_next_i64(*($10 + [32]), ($4 + [272]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$13 }
	$11 = [51]
	goto $label$5 
	
.LABEL $label$100
	CALL $105(($4 + [80]), $12)
	$11 = [52]
	goto $label$5 
	
.LABEL $label$99
	CALL $107(($4 + [80]), $10)
	CALL prints([10571])
	$7 = *($4 + [104])
	if ( $7 ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$98
	*($4 + [40]) = [0]
	*($4 + [32]) = (int_64)0
	*($4 + [16]) = (int_64)0
	*($4 + [24]) = [0]
	$10 = (*(($2 + [4])) - *($2))
	if ( ($10 == 0) ){ goto $label$12 }
	$11 = [58]
	goto $label$5 
	
.LABEL $label$97
	$12 = int_32($10 >> [3])
	if ( ((uint_32)$12 >= (uint_32)[536870912]) ){ goto $label$11 }
	$11 = [59]
	goto $label$5 
	
.LABEL $label$96
	$10 = CALL $8($10)
	*(($4 + [24])) = ($10 + ($12 << [3]))
	*($4 + [16]) = $10
	*($4 + [20]) = $10
	$13 = *($2)
	$12 = (*(($2 + [4])) - $13)
	if ( ((int_32)$12 < (int_32)[1]) ){ goto $label$10 }
	$11 = [70]
	goto $label$5 
	
.LABEL $label$95
	CALL memcpy($10, $13, $12)
	*($4 + [20]) = (*($4 + [20]) + $12)
	$11 = [60]
	goto $label$5 
	
.LABEL $label$94
	CALL $106($0, $5, ($4 + [32]), ($4 + [16]), $3)
	$10 = *($4 + [16])
	if ( ($10 == 0) ){ goto $label$9 }
	$11 = [61]
	goto $label$5 
	
.LABEL $label$93
	*($4 + [20]) = $10
	CALL $10($10)
	$11 = [62]
	goto $label$5 
	
.LABEL $label$92
	$1 = *($4 + [256])
	*($4 + [12]) = $2
	*($4 + [8]) = ($4 + [256])
	*($4 + [296]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [80])) ){ goto $label$8 }
	$11 = [63]
	goto $label$5 
	
.LABEL $label$91
	CALL eosio_assert([0], [13785])
	$11 = [64]
	goto $label$5 
	
.LABEL $label$90
	*($4 + [276]) = ($4 + [8])
	*($4 + [272]) = ($4 + [80])
	*($4 + [280]) = ($4 + [296])
	*(($10 = CALL $8([40])) + [8]) = (int_64)0
	*($10) = (int_64)0
	*($10 + [16 align=4]) = (int_64)0
	*($10 + [24]) = [0]
	*($10 + [28]) = ($4 + [80])
	CALL $108(($4 + [272]), $10)
	*($4 + [288]) = $10
	$1 = *($10)
	*($4 + [272]) = $1
	$13 = *($10 + [32])
	*($4 + [268]) = $13
	$7 = ($4 + [108])
	$12 = *($7)
	if ( ((uint_32)$12 >= (uint_32)*(($4 + [112]))) ){ goto $label$7 }
	$11 = [69]
	goto $label$5 
	
.LABEL $label$89
	*($12 + [8]) = $1
	*($12 + [16]) = $13
	*($4 + [288]) = [0]
	*($12) = $10
	*($7) = ($12 + [24])
	$10 = *($4 + [288])
	*($4 + [288]) = [0]
	if ( ($10 == 0) ){ goto $label$29 }
	$11 = [66]
	goto $label$5 
	
.LABEL $label$88
	$12 = *($10 + [16])
	if ( ($12 == 0) ){ goto $label$6 }
	$11 = [67]
	goto $label$5 
	
.LABEL $label$87
	*(($10 + [20])) = $12
	CALL $10($12)
	$11 = [68]
	goto $label$5 
	
.LABEL $label$86
	CALL $10($10)
	$7 = *($4 + [104])
	if ( $7 ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$85
	$1 = *($4 + [256])
	*($4 + [272]) = $2
	CALL $109(($4 + [80]), $10, $1, ($4 + [272]))
	$11 = [29]
	goto $label$5 
	
.LABEL $label$84
	$7 = *($4 + [104])
	if ( ($7 == 0) ){ goto $label$28 }
	$11 = [30]
	goto $label$5 
	
.LABEL $label$83
	$9 = ($4 + [108])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$23 }
	$11 = [31]
	goto $label$5 
	
.LABEL $label$82
	$11 = [32]
	goto $label$5 
	
.LABEL $label$81
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$21 }
	$11 = [33]
	goto $label$5 
	
.LABEL $label$80
	$13 = *($12 + [16])
	if ( ($13 == 0) ){ goto $label$20 }
	$11 = [34]
	goto $label$5 
	
.LABEL $label$79
	*(($12 + [20])) = $13
	CALL $10($13)
	$11 = [35]
	goto $label$5 
	
.LABEL $label$78
	CALL $10($12)
	$11 = [36]
	goto $label$5 
	
.LABEL $label$77
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$22 }
	$11 = [37]
	goto $label$5 
	
.LABEL $label$76
	$10 = *(($4 + [104]))
	goto $label$19 
	
.LABEL $label$75
	$10 = $7
	$11 = [38]
	goto $label$5 
	
.LABEL $label$74
	*($9) = $7
	CALL $10($10)
	$11 = [39]
	goto $label$5 
	
.LABEL $label$73
	CALL $110(($4 + [120]), *($4 + [124]))
	$13 = *($4 + [240])
	if ( ($13 == 0) ){ goto $label$18 }
	$11 = [40]
	goto $label$5 
	
.LABEL $label$72
	$7 = ($4 + [244])
	$10 = *($7)
	if ( ((int_32)$10 == (int_32)$13) ){ goto $label$17 }
	$11 = [41]
	goto $label$5 
	
.LABEL $label$71
	$11 = [42]
	goto $label$5 
	
.LABEL $label$70
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$15 }
	$11 = [43]
	goto $label$5 
	
.LABEL $label$69
	CALL $10($12)
	$11 = [44]
	goto $label$5 
	
.LABEL $label$68
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$16 }
	$11 = [45]
	goto $label$5 
	
.LABEL $label$67
	$10 = *(($4 + [240]))
	goto $label$14 
	
.LABEL $label$66
	$10 = $13
	$11 = [46]
	goto $label$5 
	
.LABEL $label$65
	*($7) = $13
	CALL $10($10)
	$11 = [47]
	goto $label$5 
	
.LABEL $label$64
	$global$0 = ($4 + [304])
	return (unreachable)
	
.LABEL $label$63
	CALL $111(($4 + [104]), ($4 + [288]), ($4 + [272]), ($4 + [268]))
	$10 = *($4 + [288])
	*($4 + [288]) = [0]
	if ( $10 ){ goto $label$30 }
	goto $label$31 
	
.LABEL $label$62
	CALL $33(($4 + [64]))
	
.LABEL $label$61
	CALL $33(($4 + [48]))
	
.LABEL $label$60
	CALL $33(($4 + [16]))
	
.LABEL $label$59
	$11 = [13]
	goto $label$5 
	
.LABEL $label$58
	$11 = [2]
	goto $label$5 
	
.LABEL $label$57
	$11 = [3]
	goto $label$5 
	
.LABEL $label$56
	$11 = [0]
	goto $label$5 
	
.LABEL $label$55
	$11 = [1]
	goto $label$5 
	
.LABEL $label$54
	$11 = [8]
	goto $label$5 
	
.LABEL $label$53
	$11 = [1]
	goto $label$5 
	
.LABEL $label$52
	$11 = [7]
	goto $label$5 
	
.LABEL $label$51
	$11 = [0]
	goto $label$5 
	
.LABEL $label$50
	$11 = [10]
	goto $label$5 
	
.LABEL $label$49
	$11 = [72]
	goto $label$5 
	
.LABEL $label$48
	$11 = [14]
	goto $label$5 
	
.LABEL $label$47
	$11 = [5]
	goto $label$5 
	
.LABEL $label$46
	$11 = [5]
	goto $label$5 
	
.LABEL $label$45
	$11 = [9]
	goto $label$5 
	
.LABEL $label$44
	$11 = [8]
	goto $label$5 
	
.LABEL $label$43
	$11 = [12]
	goto $label$5 
	
.LABEL $label$42
	$11 = [57]
	goto $label$5 
	
.LABEL $label$41
	$11 = [17]
	goto $label$5 
	
.LABEL $label$40
	$11 = [20]
	goto $label$5 
	
.LABEL $label$39
	$11 = [56]
	goto $label$5 
	
.LABEL $label$38
	$11 = [20]
	goto $label$5 
	
.LABEL $label$37
	$11 = [23]
	goto $label$5 
	
.LABEL $label$36
	$11 = [54]
	goto $label$5 
	
.LABEL $label$35
	$11 = [23]
	goto $label$5 
	
.LABEL $label$34
	$11 = [25]
	goto $label$5 
	
.LABEL $label$33
	$11 = [27]
	goto $label$5 
	
.LABEL $label$32
	$11 = [28]
	goto $label$5 
	
.LABEL $label$31
	$11 = [29]
	goto $label$5 
	
.LABEL $label$30
	$11 = [66]
	goto $label$5 
	
.LABEL $label$29
	$11 = [29]
	goto $label$5 
	
.LABEL $label$28
	$11 = [39]
	goto $label$5 
	
.LABEL $label$27
	$11 = [39]
	goto $label$5 
	
.LABEL $label$26
	$11 = [30]
	goto $label$5 
	
.LABEL $label$25
	$11 = [39]
	goto $label$5 
	
.LABEL $label$24
	$11 = [30]
	goto $label$5 
	
.LABEL $label$23
	$11 = [49]
	goto $label$5 
	
.LABEL $label$22
	$11 = [32]
	goto $label$5 
	
.LABEL $label$21
	$11 = [36]
	goto $label$5 
	
.LABEL $label$20
	$11 = [35]
	goto $label$5 
	
.LABEL $label$19
	$11 = [38]
	goto $label$5 
	
.LABEL $label$18
	$11 = [47]
	goto $label$5 
	
.LABEL $label$17
	$11 = [48]
	goto $label$5 
	
.LABEL $label$16
	$11 = [42]
	goto $label$5 
	
.LABEL $label$15
	$11 = [44]
	goto $label$5 
	
.LABEL $label$14
	$11 = [46]
	goto $label$5 
	
.LABEL $label$13
	$11 = [52]
	goto $label$5 
	
.LABEL $label$12
	$11 = [60]
	goto $label$5 
	
.LABEL $label$11
	$11 = [71]
	goto $label$5 
	
.LABEL $label$10
	$11 = [60]
	goto $label$5 
	
.LABEL $label$9
	$11 = [62]
	goto $label$5 
	
.LABEL $label$8
	$11 = [64]
	goto $label$5 
	
.LABEL $label$7
	$11 = [65]
	goto $label$5 
	
.LABEL $label$6
	$11 = [68]
	goto $label$5 
	$11
	(unreachable)
	(unreachable)
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14241])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [14286])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [14336])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$3 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	$8 = *($6 + [16])
	if ( ($8 == 0) ){ goto $label$13 }
	*(($6 + [20])) = $8
	CALL $10($8)
	
.LABEL $label$13
	CALL $10($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$3 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	$8 = *($9 + [16])
	if ( ($8 == 0) ){ goto $label$16 }
	*(($9 + [20])) = $8
	CALL $10($8)
	
.LABEL $label$16
	CALL $10($9)
	
.LABEL $label$15
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $3
	CALL db_remove_i64(*($1 + [32]))
	$9 = *($1 + [36])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507752926491967488, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $106 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [192])
	$global$0 = $5
	CALL prints([10750])
	CALL printn($1)
	CALL prints([8486])
	CALL $40(($5 + [72]), $4)
	*(($5 + [64])) = [0]
	*($5 + [40]) = $1
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	$6 = *(($5 + [112]))
	*($5 + [32]) = $6
	$7 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, (uint_64)*($5 + [104]) >> (uint_64)(int_64)8)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$10 }
	$7 = CALL $112(($5 + [32]), $7)
	if ( ((int_32)*($7 + [16]) == (int_32)($5 + [32])) ){ goto $label$11 }
	CALL eosio_assert([0], [13348])
	
.LABEL $label$11
	$1 = *($7)
	CALL $58($5, *($0), $4)
	if ( ((int_64)$1 <= (int_64)-1) ){ goto $label$9 }
	if ( ((int_32)*($2 + [4]) == (int_32)*($2)) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	CALL prints([10772])
	$0 = *($5 + [56])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$9
	CALL eosio_assert([0], [10834])
	if ( ((int_32)*($2 + [4]) != (int_32)*($2)) ){ goto $label$7 }
	
.LABEL $label$8
	*(($7 = ($5 + [8]))) = ((int_64)*($7) + (int_64)$1)
	if ( ((int_64)$1 > (int_64)-1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((int_64)$1 <= (int_64)-1) ){ goto $label$5 }
	
.LABEL $label$6
	$9 = *($3)
	$8 = *($3 + [4])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10868])
	$9 = *($3)
	$8 = *($3 + [4])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	*(($7 = ($5 + [8]))) = (int_64))(*($7) - $1)
	
.LABEL $label$3
	$6 = (int_64))((int_64)0 - $1)
	$10 = *(($2 + [4]))
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$10) ){ goto $label$13 }
	
.LOOP $label$14:
	CALL $113($0, *($7), $6, $4)
	$7 = ($7 + [8])
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$14 }
	$8 = *(($3 + [4]))
	$10 = *(($2 + [4]))
	$9 = *($3)
	$7 = *($2)
	goto $label$12 
	
.LABEL $label$13
	$10 = $7
	
.LABEL $label$12
	$6 = ((int_64)((int_64)(CASTING uint_64)(uint_32 int_32(($10 - $7) >> [3])) * (int_64)$6) + (int_64)*($5 + [16]))
	*($5 + [16]) = $6
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	CALL $113($0, *($9), $1, $4)
	$9 = ($9 + [8])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$17 }
	$7 = *(($3 + [4]))
	$8 = *($3)
	$6 = *(($5 + [16]))
	goto $label$15 
	
.LABEL $label$16
	$7 = $8
	
.LABEL $label$15
	*(($5 + [16])) = ((int_64)((int_64)$1 * (int_64)(CASTING uint_64)(uint_32 int_32(($7 - $8) >> [3]))) + (int_64)$6)
	$1 = *($0)
	*(($5 + [184])) = [0]
	*($5 + [160]) = $4
	*($5 + [152]) = $1
	*($5 + [168]) = (int_64)-1
	*($5 + [176]) = (int_64)0
	CALL $59(($5 + [152]), $5, (int_64)0)
	$0 = *($5 + [176])
	if ( ($0 == 0) ){ goto $label$18 }
	$8 = ($5 + [180])
	$7 = *($8)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$20 }
	
.LOOP $label$21:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$22 }
	CALL $10($9)
	
.LABEL $label$22
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$21 }
	$7 = *(($5 + [176]))
	goto $label$19 
	
.LABEL $label$20
	$7 = $0
	
.LABEL $label$19
	*($8) = $0
	CALL $10($7)
	
.LABEL $label$18
	$0 = *($5 + [56])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($5 + [60])
	$7 = *($8)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$24 }
	
.LOOP $label$25:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$26 }
	CALL $10($9)
	
.LABEL $label$26
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$25 }
	$7 = *(($5 + [56]))
	goto $label$23 
	
.LABEL $label$24
	$7 = $0
	
.LABEL $label$23
	*($8) = $0
	CALL $10($7)
	
.LABEL $label$1
	CALL $43(($5 + [132]), *(($5 + [136])))
	CALL $44(($5 + [120]), *(($5 + [124])))
	if ( ((*($5 + [88]) & [1]) == 0) ){ goto $label$27 }
	CALL $10(*(($5 + [96])))
	
.LABEL $label$27
	$global$0 = ($5 + [192])
}

void .FUNC $109 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13669])
	
.LABEL $label$2
	$6 = ($1 + [8])
	*($5 + [16]) = *($6)
	$7 = *($1)
	$3 = *($3)
	$8 = ($1 + [16])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	CALL $220($8, *($3), *($3 + [4]))
	*($6) = (int_64)0
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [13720])
	goto $label$3 
	
.LABEL $label$4
	*($6) = (int_64)0
	
.LABEL $label$3
	$9 = *($1 + [16])
	$6 = *(($1 + [20]))
	$10 = ($6 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	$3 = [16]
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$6 }
	$3 = (($10 & [-8]) + $3)
	
.LABEL $label$6
	if ( ($3 <= [513]) ){ goto $label$8 }
	$4 = CALL $2($3)
	goto $label$7 
	
.LABEL $label$8
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$7
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [24]) = $5
	*($5 + [40]) = $8
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	CALL $221(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [32]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$9 }
	CALL $3($4)
	
.LABEL $label$9
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($5 + [32]) = *(($1 + [8]))
	if ( (CALL $17(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$11 }
	$3 = *($1 + [36])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$12 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507752926491967488, ($5 + [24]), $7)
	*(($1 + [36])) = $3
	
.LABEL $label$12
	CALL db_idx64_update($3, $2, ($5 + [32]))
	
.LABEL $label$11
	$global$0 = ($5 + [48])
}

void .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = [16]
	$6 = *($0)
	$4 = *($4 + [4])
	$7 = ($1 + [16])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	CALL $220($7, *($4), *($4 + [4]))
	
.LABEL $label$1
	$8 = *($1 + [16])
	$4 = *(($1 + [20]))
	$9 = ($4 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$5 = (($9 & [-8]) + $5)
	
.LABEL $label$3
	if ( ($5 <= [513]) ){ goto $label$5 }
	$2 = CALL $2($5)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $5)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = $7
	CALL $221(($3 + [32]), ($3 + [24]))
	$10 = *($1)
	*($1 + [32]) = CALL db_store_i64(*($6 + [8]), (int_64)-2507752926491967488, *(*($0 + [8])), $10, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	if ( (uint_64)($10 <= *($6 + [16])) ){ goto $label$7 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$10 = *(($6 + [8]))
	$11 = *(*(($0 + [8])))
	$12 = *($1)
	*($3 + [32]) = *($1 + [8])
	*($1 + [36]) = CALL db_idx64_store($10, (int_64)-2507752926491967488, $11, $12, ($3 + [32]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $212 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [24]) = [773]
	*($0 + [28]) = [604800]
	*($0 + [56]) = (int_64)0
	*($0 + [80]) = $1
	*(($0 + [64])) = (int_64)0
	*(($0 + [72])) = (int_64)0
	$1 = *($2)
	$0 = CALL memcpy($0, *(*($2 + [4])), [80])
	*($3 + [80]) = ($3 + [70])
	*($3 + [76]) = $3
	*($3 + [72]) = $3
	*($3 + [88]) = ($3 + [72])
	*($3 + [100]) = ($0 + [24])
	*($3 + [96]) = $0
	*($3 + [104]) = ($0 + [25])
	*($3 + [108]) = ($0 + [28])
	*($3 + [112]) = ($0 + [32])
	*($3 + [116]) = ($0 + [36])
	*($3 + [120]) = ($0 + [40])
	*($3 + [124]) = ($0 + [44])
	*($3 + [128]) = ($0 + [45])
	*($3 + [132]) = ($0 + [46])
	*($3 + [136]) = ($0 + [48])
	*($3 + [140]) = ($0 + [56])
	CALL $213(($3 + [96]), ($3 + [88]))
	*($0 + [84]) = CALL db_store_i64(*($1 + [8]), (int_64)4982871455592087552, *(*($2 + [8])), (int_64)4982871455592087552, $3, [70])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)4982871455592087552) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)4982871455592087553
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return $0
}

void .FUNC $231 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL prints($0)
	CALL $119($2, $1)
	$0 = *($2)
	$3 = ($0 & [1])
	CALL prints_l(( *($2 + [8]) ? ($2 | [1]) : $3 ), ( *($2 + [4]) ? uint_32($0 >> [1]) : $3 ))
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	CALL $10(*(($2 + [8])))
	
.LABEL $label$1
	CALL prints([14089])
	CALL printn(*($1 + [16]))
	$global$0 = ($2 + [16])
}

void .FUNC $219 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13583])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13583])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $180(*($1), *($0 + [8]))
}

void .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $8($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $33($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $10($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $206($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $127($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [13779])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $127($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $207($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

void .FUNC $36 (int_32 $0)
{
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

int_64 .FUNC $34 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8232])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8232]) = $0
	return $0
}

int_32 .FUNC $35 ()
{
	int_64 $0
	int_32 $1
	if ( (*([0] + [8221]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	if ( (*([0] + [8220]) == 0) ){ goto $label$3 }
	$0 = *([0] + [8232])
	goto $label$2 
	
.LABEL $label$3
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8232]) = $0
	
.LABEL $label$2
	*([0] + [8221]) = [1]
	$1 = (CASTING uint_32)(uint_64 ((int_64)((int_64)((int_64)$0 / (int_64)1000) + (int_64)-946684800000) / (int_64)500))
	*([0] + [8224]) = $1
	return $1
}

void .FUNC $32 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $27(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $22(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8352], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $27(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $27(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $33 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $30 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $25($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $31 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$3 = CALL $16($1)
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$7 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$6 = (($5 + [16]) & [-16])
	$5 = CALL $8($6)
	*($0) = ($6 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL memcpy($5, $1, $3)
	
.LABEL $label$5
	*(($5 + $3)) = [0]
	$3 = ($2 + [1])
	$5 = (*($2) & [1])
	$2 = *($2 + [8])
	$6 = *($0)
	$7 = ($6 & [1])
	if ( $7 ){ goto $label$9 }
	$1 = [10]
	$3 = ( $2 ? $3 : $5 )
	$2 = uint_32($6 >> [1])
	if ( (([10] - $2) <= $4) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$3 = ( $2 ? $3 : $5 )
	$2 = *(($0 + [4]))
	$1 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($1 - $2) >= (uint_32)$4) ){ goto $label$3 }
	
.LABEL $label$8
	CALL $25($0, $1, (($2 + $4) - $1), $2, $2, [0], $4, $3)
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	if ( ($4 == 0) ){ goto $label$2 }
	$5 = ( *(($0 + [8])) ? ($0 + [1]) : $7 )
	CALL memcpy(($5 + $2), $3, $4)
	$2 = ($2 + $4)
	if ( (*($0) & [1]) ){ goto $label$1 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return 
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($0 + [4])) = $2
	*(($5 + $2)) = [0]
	(unreachable)
}

void .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$4 = *($3 + [4])
	$3 = *($0 + [4])
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13583])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	$5 = ($1 + [8])
	CALL memcpy($1, $4, [8])
	$6 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $6
	if ( ((uint_32)(*(($3 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13583])
	$6 = *($4)
	
.LABEL $label$2
	$7 = ($1 + [24])
	CALL memcpy($5, $6, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($3 + [8])) - $6) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13583])
	$6 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $6, [8])
	*(($1 + [16])) = *($2 + [8])
	*(($4 = ($3 + [4]))) = (*($4) + [8])
	CALL $172($3, $7)
	*($1 + [40]) = *(*($0 + [8]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $214 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13779])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13779])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $217 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13779])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [13779])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $216 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [13583])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $43($1, *($1 + [4]))
	$3 = ($1 + [4])
	*($1) = $3
	$4 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [14085])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	$8 = *($5)
	$9 = ($5 + [1])
	*(($0 + [4])) = $9
	$5 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $5)))
	$7 = ($5 + [7])
	$5 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$10 = (CASTING uint_32)(uint_64 $4)
	if ( ($10 == 0) ){ goto $label$4 }
	$11 = ($1 + [4])
	$12 = [0]
	*($2) = (int_64)0
	$13 = ($0 + [8])
	if ( ((int_32)*($13) != (int_32)$9) ){ goto $label$5 }
	$15 = [7]
	goto $label$3 
	
.LABEL $label$5
	$15 = [0]
	goto $label$3 
	
.LABEL $label$4
	$15 = [8]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$40 
	
.LABEL $label$42
	$9 = *($14)
	*($2) = (int_64)0
	if ( ((int_32)$9 != (int_32)*($13)) ){ goto $label$22 }
	$15 = [7]
	goto $label$6 
	
.LABEL $label$41
	CALL eosio_assert([0], [13583])
	$9 = *(($0 + [4]))
	$15 = [0]
	goto $label$6 
	
.LABEL $label$40
	CALL memcpy(($2 + [15]), $9, [1])
	$5 = (*($14) + [1])
	*(($14 = ($0 + [4]))) = $5
	if ( ((uint_32)(*($13) - $5) > (uint_32)[7]) ){ goto $label$23 }
	$15 = [18]
	goto $label$6 
	
.LABEL $label$39
	CALL eosio_assert([0], [13583])
	$5 = *($14)
	$15 = [1]
	goto $label$6 
	
.LABEL $label$38
	CALL memcpy($2, $5, [8])
	*($14) = (*($14) + [8])
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$21 }
	$15 = [2]
	goto $label$6 
	
.LABEL $label$37
	$9 = $11
	$8 = *($5 + [16])
	$6 = *($2 + [15])
	$7 = ($6 & [255])
	if ( ((uint_32)$7 >= (uint_32)$8) ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$36
	$9 = $5
	$5 = $8
	$8 = *($5 + [16])
	$7 = ($6 & [255])
	if ( ((uint_32)$7 >= (uint_32)$8) ){ goto $label$18 }
	$15 = [15]
	goto $label$6 
	
.LABEL $label$35
	$8 = *($5)
	if ( $8 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$34
	if ( ((uint_32)$8 >= (uint_32)$7) ){ goto $label$16 }
	$15 = [12]
	goto $label$6 
	
.LABEL $label$33
	$9 = ($5 + [4])
	$8 = *($5 + [4])
	if ( ($8 == 0) ){ goto $label$17 }
	$15 = [13]
	goto $label$6 
	
.LABEL $label$32
	$5 = $9
	goto $label$7 
	
.LABEL $label$31
	$5 = $3
	$9 = $3
	$15 = [4]
	goto $label$6 
	
.LABEL $label$30
	if ( (*($9) == 0) ){ goto $label$15 }
	$15 = [5]
	goto $label$6 
	
.LABEL $label$29
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$28
	$9 = $5
	if ( *($9) ){ goto $label$14 }
	$15 = [9]
	goto $label$6 
	
.LABEL $label$27
	*(($8 = CALL $8([32]))) = (int_64)0
	*($8 + [8]) = $5
	*($9) = $8
	*($8 + [16]) = *($2 + [15])
	*($8 + [24]) = *($2)
	$5 = *(*($1))
	if ( ($5 == 0) ){ goto $label$10 }
	$15 = [10]
	goto $label$6 
	
.LABEL $label$26
	*($1) = $5
	$8 = *($9)
	$15 = [11]
	goto $label$6 
	
.LABEL $label$25
	CALL $45(*(($1 + [4])), $8)
	*(($5 = ($1 + [8]))) = (*($5) + [1])
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$11 }
	$15 = [8]
	goto $label$6 
	
.LABEL $label$24
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$23
	$15 = [1]
	goto $label$6 
	
.LABEL $label$22
	$15 = [0]
	goto $label$6 
	
.LABEL $label$21
	$15 = [17]
	goto $label$6 
	
.LABEL $label$20
	$15 = [15]
	goto $label$6 
	
.LABEL $label$19
	$15 = [3]
	goto $label$6 
	
.LABEL $label$18
	$15 = [3]
	goto $label$6 
	
.LABEL $label$17
	$15 = [4]
	goto $label$6 
	
.LABEL $label$16
	$15 = [4]
	goto $label$6 
	
.LABEL $label$15
	$15 = [9]
	goto $label$6 
	
.LABEL $label$14
	$15 = [5]
	goto $label$6 
	
.LABEL $label$13
	$15 = [8]
	goto $label$6 
	
.LABEL $label$12
	$15 = [6]
	goto $label$6 
	
.LABEL $label$11
	$15 = [6]
	goto $label$6 
	
.LABEL $label$10
	$15 = [11]
	goto $label$6 
	
.LABEL $label$9
	$15 = [16]
	goto $label$6 
	
.LABEL $label$8
	$15 = [14]
	goto $label$6 
	
.LABEL $label$7
	$15 = [14]
	goto $label$6 
	return $15
}

int_32 .FUNC $210 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $44($1, *($1 + [4]))
	$3 = ($1 + [4])
	*($1) = $3
	$4 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [14085])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	$8 = *($5)
	$9 = ($5 + [1])
	*(($0 + [4])) = $9
	$5 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $5)))
	$7 = ($5 + [7])
	$5 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$10 = (CASTING uint_32)(uint_64 $4)
	if ( ($10 == 0) ){ goto $label$3 }
	$11 = ($1 + [4])
	$12 = [0]
	
.LOOP $label$4:
	*(($14 = ($2 + [8]))) = [0]
	*($2) = (int_64)0
	if ( ((int_32)*(($0 + [8])) != (int_32)$9) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	$9 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [15]), $9, [1])
	*(($13 = ($0 + [4]))) = (*($13) + [1])
	CALL $172($0, $2)
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$9 }
	$9 = $11
	$8 = *($5 + [16])
	$6 = *($2 + [15])
	$7 = ($6 & [255])
	if ( ((uint_32)$7 >= (uint_32)$8) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	$5 = $3
	$9 = $3
	$15 = [3]
	goto $label$6 
	
.LABEL $label$8
	$15 = [12]
	goto $label$6 
	
.LABEL $label$7
	$15 = [2]
	
.LABEL $label$6
	
.LOOP $label$11:
	goto $label$33 
	
.LABEL $label$37
	$9 = $5
	$5 = $8
	$8 = *($5 + [16])
	$7 = ($6 & [255])
	if ( ((uint_32)$7 >= (uint_32)$8) ){ goto $label$24 }
	$15 = [12]
	goto $label$11 
	
.LABEL $label$36
	$8 = *($5)
	if ( $8 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$35
	if ( ((uint_32)$8 >= (uint_32)$7) ){ goto $label$19 }
	$15 = [11]
	goto $label$11 
	
.LABEL $label$34
	$9 = ($5 + [4])
	$8 = *($5 + [4])
	if ( ($8 == 0) ){ goto $label$22 }
	$15 = [0]
	goto $label$11 
	
.LABEL $label$33
	$5 = $9
	goto $label$23 
	
.LABEL $label$32
	if ( (*($9) == 0) ){ goto $label$18 }
	$15 = [4]
	goto $label$11 
	
.LABEL $label$31
	if ( (*($2) & [1]) ){ goto $label$16 }
	$15 = [7]
	goto $label$11 
	
.LABEL $label$30
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$14 }
	goto $label$3 
	
.LABEL $label$29
	$9 = $5
	if ( *($9) ){ goto $label$17 }
	$15 = [8]
	goto $label$11 
	
.LABEL $label$28
	*(($8 = CALL $8([32]))) = (int_64)0
	*($8 + [8]) = $5
	*($8 + [20 align=4]) = *($2)
	*(($8 + [28])) = *($14)
	*($9) = $8
	*($8 + [16]) = *($2 + [15])
	*($14) = [0]
	*($2) = (int_64)0
	$5 = *(*($1))
	if ( ($5 == 0) ){ goto $label$12 }
	$15 = [9]
	goto $label$11 
	
.LABEL $label$27
	*($1) = $5
	$8 = *($9)
	$15 = [10]
	goto $label$11 
	
.LABEL $label$26
	CALL $45(*(($1 + [4])), $8)
	*(($5 = ($1 + [8]))) = (*($5) + [1])
	if ( ((*($2) & [1]) == 0) ){ goto $label$15 }
	$15 = [5]
	goto $label$11 
	
.LABEL $label$25
	CALL $10(*($14))
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$13 }
	goto $label$3 
	
.LABEL $label$24
	$15 = [2]
	goto $label$11 
	
.LABEL $label$23
	$15 = [1]
	goto $label$11 
	
.LABEL $label$22
	$15 = [3]
	goto $label$11 
	
.LABEL $label$21
	$15 = [13]
	goto $label$11 
	
.LABEL $label$20
	$15 = [1]
	goto $label$11 
	
.LABEL $label$19
	$15 = [3]
	goto $label$11 
	
.LABEL $label$18
	$15 = [8]
	goto $label$11 
	
.LABEL $label$17
	$15 = [4]
	goto $label$11 
	
.LABEL $label$16
	$15 = [5]
	goto $label$11 
	
.LABEL $label$15
	$15 = [7]
	goto $label$11 
	
.LABEL $label$14
	$15 = [6]
	goto $label$11 
	
.LABEL $label$13
	$15 = [6]
	goto $label$11 
	
.LABEL $label$12
	$15 = [10]
	goto $label$11 
	
.LABEL $label$10
	$9 = *($13)
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	$15
	return $0
}

void .FUNC $198 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [12]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [20])))
	
.LABEL $label$11
	if ( ((*($1) & [1]) == 0) ){ goto $label$12 }
	CALL $10(*($1 + [8]))
	
.LABEL $label$12
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $10($2)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $199 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13399])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $8([48]))) = (int_64)0
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [32]) = $0
	CALL $172(($3 + [32]), $5)
	CALL $172(($3 + [32]), ($5 + [12]))
	$2 = ($5 + [24])
	$7 = *($3 + [36])
	if ( ((uint_32)(*($3 + [40]) - $7) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	$7 = *($3 + [36])
	
.LABEL $label$7
	CALL memcpy($2, $7, [8])
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	*($3 + [36]) = (*($3 + [36]) + [8])
	$8 = *($2)
	*($3 + [16]) = $8
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = $8
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $198(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $3($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	if ( ((*($1 + [12]) & [1]) == 0) ){ goto $label$12 }
	CALL $10(*(($1 + [20])))
	
.LABEL $label$12
	if ( ((*($1) & [1]) == 0) ){ goto $label$13 }
	CALL $10(*($1 + [8]))
	
.LABEL $label$13
	CALL $10($1)
	
.LABEL $label$11
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $197 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $33($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $194 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [14])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$5 = ($3 + [14])
	if ( ((uint_32)$4 > (uint_32)[1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13583])
	
.LABEL $label$1
	CALL memcpy($5, $2, [2])
	$global$0 = ($3 + [16])
}

void .FUNC $195 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [48]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [48]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $5, [8])
	*((($3 + [8]) + [24])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	CALL $86(($3 + [8]), *($3 + [56]), *($3 + [48]), *($3 + [40]))
	$global$0 = ($3 + [64])
}

void .FUNC $192 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [32]), $5, [8])
	*(($5 = (($3 + [72]) + [8]))) = *($3 + [32])
	*($3 + [64]) = (int_64)0
	$7 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$8
	CALL memcpy(($3 + [64]), $7, [8])
	*((($3 + [32]) + [24])) = $4
	$8 = *($5)
	*((($3 + [16]) + [8])) = $8
	*(($3 + [8])) = $8
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [32])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	$0 = *($3 + [72])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $78(($3 + [32]), *($3 + [88]), $3, *($3 + [64]))
	$global$0 = ($3 + [96])
}

void .FUNC $193 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [14])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$5 = ($3 + [14])
	if ( ((uint_32)$4 > (uint_32)[1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13583])
	
.LABEL $label$1
	CALL memcpy($5, $2, [2])
	$global$0 = ($3 + [16])
}

void .FUNC $190 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	*($3 + [8]) = (int_64)0
	$2 = [0]
	$5 = ($3 + [8])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	*($3 + [8]) = (int_64)0
	$5 = ($3 + [8])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13583])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	CALL eosio_assert([0], [9378])
	$global$0 = ($3 + [16])
}

void .FUNC $191 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [32]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13583])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $6, [8])
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $70($3, *($3 + [40]), *($3 + [32]))
	$global$0 = ($3 + [48])
}