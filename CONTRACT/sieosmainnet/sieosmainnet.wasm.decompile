(data (i32.const 4) "@j\00\00")
(data (i32.const 16) "invalid symbol name\00")
(data (i32.const 48) "invalid supply\00")
(data (i32.const 64) "max-supply must be positive\00")
(data (i32.const 96) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 160) "token with symbol already exists\00")
(data (i32.const 208) "cannot create objects in table of another contract\00")
(data (i32.const 272) "write\00")
(data (i32.const 288) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 352) "error reading iterator\00")
(data (i32.const 384) "read\00")
(data (i32.const 400) "memo has more than 256 bytes\00")
(data (i32.const 432) "token with symbol does not exist, create token before issue\00")
(data (i32.const 496) "invalid quantity\00")
(data (i32.const 528) "must issue positive quantity\00")
(data (i32.const 560) "symbol precision mismatch\00")
(data (i32.const 592) "quantity exceeds available supply\00")
(data (i32.const 640) "object passed to modify is not in multi_index\00")
(data (i32.const 688) "cannot modify objects in table of another contract\00")
(data (i32.const 752) "attempt to add asset with different symbol\00")
(data (i32.const 800) "addition underflow\00")
(data (i32.const 832) "addition overflow\00")
(data (i32.const 864) "updater cannot change primary key when modifying an object\00")
(data (i32.const 928) "active\00")
(data (i32.const 944) "cannot pass end iterator to modify\00")
(data (i32.const 992) "cannot transfer to self\00")
(data (i32.const 1024) "to account does not exist\00")
(data (i32.const 1056) "unable to find key\00")
(data (i32.const 1088) "must transfer positive quantity\00")
(data (i32.const 1120) "no balance object found\00")
(data (i32.const 1152) "overdrawn balance\00")
(data (i32.const 1184) "attempt to subtract asset with different symbol\00")
(data (i32.const 1232) "subtraction underflow\00")
(data (i32.const 1264) "subtraction overflow\00")
(data (i32.const 1296) "object passed to erase is not in multi_index\00")
(data (i32.const 1344) "cannot erase objects in table of another contract\00")
(data (i32.const 1408) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1472) "0\00")
(data (i32.const 1488) "eosio.token\00")
(data (i32.const 1504) "transfer\00")
(data (i32.const 1520) "next primary key in table is at autoincrement limit\00")
(data (i32.const 1584) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 1648) "cannot decrement iterator at beginning of table\00")
(data (i32.const 1696) "cannot pass end iterator to erase\00")
(data (i32.const 1744) "cannot increment end iterator\00")
(data (i32.const 1776) "Must burn a positive amount\00")
(data (i32.const 1808) "Sell happyeosslot.com share DMT.\00")
(data (i32.const 1856) "Illegal convertion.\00")
(data (i32.const 1888) "get\00")
(data (i32.const 1904) "Invalid token transfer\00")
(data (i32.const 1936) "bet\00")
(data (i32.const 1952) "minakokojima\00")
(data (i32.const 1968) "buy\00")
(data (i32.const 1984) "for\00")
(data (i32.const 2000) "Unknown happyeosslot deposit.\00")
(data (i32.const 2032) "only core token allowed\00")
(data (i32.const 2064) "must bet a positive amount\00")
(data (i32.const 2096) "Must buy with positive Eos.\00")
(data (i32.const 2128) "must reserve a positive amount!\00")
(data (i32.const 2160) "issue some new dmt\00")
(data (i32.const 2192) "Bet number should smaller than 100.\00")
(data (i32.const 2240) "only one bet at one time.\00")
(data (i32.const 2272) "betreceipt\00")
(data (i32.const 2288) "Should be a valid number\00")
(data (i32.const 10720) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "assert_sha256" (func $fimport$2 (param i32 i32 i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "current_time" (func $fimport$4 (result i64)))
(import "env" "db_end_i64" (func $fimport$5 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$8 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$9 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$10 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$11 (param i32)))
(import "env" "db_store_i64" (func $fimport$12 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$13 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$14 (param i32 i32)))
(import "env" "eosio_exit" (func $fimport$15 (param i32)))
(import "env" "is_account" (func $fimport$16 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$17 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$18 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$19 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$20 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$21 (param i64)))
(import "env" "require_auth2" (func $fimport$22 (param i64 i64)))
(import "env" "require_recipient" (func $fimport$23 (param i64)))
(import "env" "send_inline" (func $fimport$24 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN5eosio5token6createEyNS_5assetE" (func $5))
(export "_ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $11))
(export "_ZN5eosio5token11add_balanceEyNS_5assetEy" (func $12))
(export "_ZN5eosio5token8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $23))
(export "_ZN5eosio5token11sub_balanceEyNS_5assetE" (func $25))
(export "_Z13string_to_intNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE" (func $28))
(export "_Z13int_to_stringy" (func $29))
(export "apply" (func $30))
(export "_ZN12sieosmainnet10onTransferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $31))
(export "_ZN12sieosmainnet6createEyN5eosio5assetE" (func $33))
(export "_ZN12sieosmainnet5issueEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $35))
(export "_ZN12sieosmainnet8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $37))
(export "_ZN12sieosmainnet4initERK11checksum256" (func $38))
(export "_ZN12sieosmainnet4testEyN5eosio5assetE" (func $40))
(export "_ZN12sieosmainnet6revealERK11checksum256S2_" (func $41))
(export "_ZN12sieosmainnet4sellEyN5eosio5assetE" (func $57))
(export "_ZN12sieosmainnet3betEyyN5eosio5assetERK11checksum256y" (func $66))
(export "_ZN12sieosmainnet3buyEyN5eosio5assetE" (func $67))
(export "_ZN12sieosmainnet15set_roll_resultEyy" (func $69))
(export "_ZNK12sieosmainnet11grief_ratioEv" (func $74))
(export "_ZN12sieosmainnet18send_referal_bonusEyN5eosio5assetE" (func $75))
(export "_ZN12sieosmainnet10betreceiptERK7rec_bet" (func $76))
(export "_ZN12sieosmainnet7receiptERK10rec_reveal" (func $77))
(export "_ZN12sieosmainnet10buyreceiptERK7rec_buy" (func $78))
(export "_ZN12sieosmainnet11sellreceiptERK8rec_sell" (func $79))
(export "_ZNK12sieosmainnet10parse_memoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $80))
(export "_ZN12sieosmainnet9deal_withEN5eosio11multi_indexILy11733754445404569600ENS_5offerEJEE14const_iteratorERK11checksum256" (func $81))
(export "_ZNK12sieosmainnet9get_bonusEy" (func $82))
(export "_ZNK12sieosmainnet10merge_seedERK11checksum256S2_" (func $83))
(export "malloc" (func $84))
(export "free" (func $87))
(export "memcmp" (func $99))
(export "strlen" (func $100))
(table $0 8 8 anyfunc)
(elem (i32.const 0) $101 $31 $37 $33 $41 $40 $35 $38)



int_32 .FUNC $98 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $88($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC $94 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$3 = ($6 & [1])
	if ( $3 ){ goto $label$3 }
	$4 = uint_32($6 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $3 ){ goto $label$6 }
	$5 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $3 ? $2 : ($3 <= $2) )
	$3 = ($4 - $1)
	$3 = ($3 - $2)
	if ( ($3 == 0) ){ goto $label$7 }
	$1 = ($5 + $1)
	CALL memmove($1, ($1 + $2), $3)
	$6 = *($0)
	
.LABEL $label$7
	$2 = ($4 - $2)
	if ( ($6 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($5 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $95 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

void .FUNC $96 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $88($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $90 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $88(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $89($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = *($0)
	$2 = ($4 & [1])
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ((*($0) & [-2]) + [-1])
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [10]
	$4 = uint_32($4 >> [1])
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $93($0, $3, [1], $3, $3, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($4 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($4 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $4)) + [1]) = [0]
	*($0) = $1
}

void .FUNC $93 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $88($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $89($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC _ZN12sieosmainnet4initERK11checksum256 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	$2 = *(($0 + [80]))
	$7 = *(($0 + [84]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( (int_64)(*(*($6)) == 0) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [56])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [56]) == (int_32)$4), [96])
	if ( $6 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = CALL db_find_i64(*(($0 + [56])), *(($0 + [64])), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $44($4, $6)
	CALL eosio_assert(((int_32)*($6 + [56]) == (int_32)$4), [96])
	
.LABEL $label$5
	CALL eosio_assert([1], [944])
	CALL eosio_assert(((int_32)*($6 + [56]) == (int_32)$4), [640])
	CALL eosio_assert(((int_64)*(($0 + [56])) == (int_64)CALL $fimport$3()), [688])
	*(($6 + [44])) = *(($1 + [28]))
	*(($6 + [40])) = *(($1 + [24]))
	*(($6 + [36])) = *(($1 + [20]))
	*(($6 + [32])) = *(($1 + [16]))
	*(($6 + [28])) = *(($1 + [12]))
	*(($6 + [24])) = *(($1 + [8]))
	*(($6 + [20])) = *(($1 + [4]))
	*($6 + [16]) = *($1)
	$8 = *($6)
	CALL eosio_assert([1], [864])
	CALL eosio_assert([1], [272])
	CALL memcpy(($9 + [16]), $6, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy((($9 + [16]) | [8]), ($6 + [16]), [32])
	CALL eosio_assert([1], [272])
	CALL memcpy((($9 + [16]) + [40]), ($6 + [48]), [8])
	CALL db_update_i64(*($6 + [60]), (int_64)0, ($9 + [16]), [48])
	$6 = ($0 + [72])
	if ( (uint_64)($8 <= *($6)) ){ goto $label$3 }
	*($6) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$4
	$5 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [56])) == (int_64)CALL $fimport$3()), [208])
	*(($6 = CALL $88([80])) + [56]) = $4
	*($6 + [8]) = (int_64)0
	*($6) = (int_64)0
	*(($6 + [44])) = *(($1 + [28]))
	*(($6 + [40])) = *(($1 + [24]))
	*(($6 + [36])) = *(($1 + [20]))
	*(($6 + [32])) = *(($1 + [16]))
	*(($6 + [28])) = *(($1 + [12]))
	*(($6 + [24])) = *(($1 + [8]))
	*(($6 + [20])) = *(($1 + [4]))
	*($6 + [16]) = *($1)
	*($6 + [48]) = (int_64)0
	CALL eosio_assert([1], [272])
	CALL memcpy(($9 + [16]), $6, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy((($9 + [16]) | [8]), ($6 + [16]), [32])
	CALL eosio_assert([1], [272])
	CALL memcpy((($9 + [16]) + [40]), ($6 + [48]), [8])
	$8 = *($6)
	$7 = CALL db_store_i64(*(($0 + [64])), (int_64)7235159537265672192, $5, $8, ($9 + [16]), [48])
	*($6 + [60]) = $7
	$4 = ($0 + [72])
	if ( (uint_64)($8 <= *($4)) ){ goto $label$7 }
	*($4) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($9 + [80]) = $6
	$8 = *($6)
	*($9 + [16]) = $8
	*($9 + [76]) = $7
	$3 = ($0 + [84])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [88]))) ){ goto $label$9 }
	*($4 + [8]) = $8
	*($4 + [16]) = $7
	*($9 + [80]) = [0]
	*($4) = $6
	*($3) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $49(($0 + [80]), ($9 + [80]), ($9 + [16]), ($9 + [76]))
	
.LABEL $label$8
	$6 = *($9 + [80])
	*($9 + [80]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $89($6)
	
.LABEL $label$3
	$4 = ($0 + [16])
	$7 = ($0 + [24])
	$6 = CALL db_lowerbound_i64(*($0 + [16]), *($7), (int_64)-7949128890230767616, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$11 }
	CALL $51($4, $6)
	goto $label$10 
	
.LABEL $label$11
	$5 = *($0)
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$3()), [208])
	$6 = CALL $88([64])
	$3 = CALL $54($6)
	*($6 + [48]) = $4
	*($6 + [16]) = (int_64)1414349828
	*($6 + [8]) = (int_64)250000000
	*($6 + [32]) = (int_64)1397703940
	*($6 + [24]) = *($0 + [8])
	*($9 + [88]) = (($9 + [16]) + [40])
	*($9 + [84]) = ($9 + [16])
	*($9 + [80]) = ($9 + [16])
	CALL $56(($9 + [80]), $3)
	$8 = *($6)
	$7 = CALL db_store_i64(*($7), (int_64)-7949128890230767616, $5, $8, ($9 + [16]), [40])
	*($6 + [52]) = $7
	$4 = ($0 + [32])
	if ( (uint_64)($8 <= *($4)) ){ goto $label$12 }
	*($4) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($9 + [80]) = $6
	$8 = *($6)
	*($9 + [16]) = $8
	*($9 + [76]) = $7
	$3 = ($0 + [44])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [48]))) ){ goto $label$14 }
	*($4 + [8]) = $8
	*($4 + [16]) = $7
	*($9 + [80]) = [0]
	*($4) = $6
	*($3) = ($4 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $55(($0 + [40]), ($9 + [80]), ($9 + [16]), ($9 + [76]))
	
.LABEL $label$13
	$4 = *($9 + [80])
	$6 = [0]
	*($9 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $89($4)
	
.LABEL $label$15
	$5 = *($0)
	CALL eosio_assert([1], [288])
	$8 = (int_64)5524804
	
.LOOP $label$17:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	CALL eosio_assert($4, [16])
	*($9 + [24]) = (int_64)1414349828
	*(($9 + [8])) = (int_64)1414349828
	*($9 + [16]) = (int_64)2250000000
	*($9) = (int_64)2250000000
	CALL _ZN5eosio5token6createEyNS_5assetE($0, _ZN5eosio5token6createEyNS_5assetE, $9)
	
.LABEL $label$10
	*([0] + [4]) = ($9 + [96])
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $88(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $96($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $89($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $89($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $48 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $88(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $96($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $89($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $89($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $43 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [120]))
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [124])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $89($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$4 = *(($0 + [120]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($3) = $1
	CALL $89($4)
	
.LABEL $label$1
	$1 = *(($0 + [80]))
	if ( ($1 == 0) ){ goto $label$6 }
	$3 = ($0 + [84])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $89($2)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$4 = *(($0 + [80]))
	goto $label$7 
	
.LABEL $label$8
	$4 = $1
	
.LABEL $label$7
	*($3) = $1
	CALL $89($4)
	
.LABEL $label$6
	$1 = *(($0 + [40]))
	if ( ($1 == 0) ){ goto $label$11 }
	$3 = ($0 + [44])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $89($2)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($0 + [40]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $89($4)
	
.LABEL $label$11
	return $0
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = (*([0] + [4]) - [192])
	$8 = $3
	*([0] + [4]) = $3
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($3 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*(($4 = ($8 + [24]))) = (int_64)0
	*(($5 = ($8 + [16]))) = (int_64)0
	*(($8 + [56])) = (int_64)0
	*(($8 + [48])) = (int_64)0
	*(($8 + [40])) = (int_64)0
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	*($8 + [32]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[31]), [384])
	CALL memcpy($8, $6, [32])
	CALL eosio_assert(((int_32)($1 & [-32]) != (int_32)[32]), [384])
	$3 = ($8 + [32])
	CALL memcpy($3, ($6 + [32]), [32])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	*(($1 = (($8 + [96]) + [24]))) = *($4)
	*(($6 = (($8 + [96]) + [16]))) = *($5)
	*($8 + [104]) = *($8 + [8])
	*($8 + [96]) = *($8)
	*(($4 = (($8 + [64]) + [24]))) = *(($3 + [24]))
	*(($5 = (($8 + [64]) + [16]))) = *(($3 + [16]))
	*($8 + [72]) = *(($3 + [8]))
	*($8 + [64]) = *($3)
	*((($8 + [160]) + [24])) = *($4)
	*((($8 + [160]) + [16])) = *($5)
	*($8 + [168]) = *($8 + [72])
	*($8 + [160]) = *($8 + [64])
	*((($8 + [128]) + [24])) = *($1)
	*((($8 + [128]) + [16])) = *($6)
	*($8 + [136]) = *($8 + [104])
	*($8 + [128]) = *($8 + [96])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 ($8 + [128])), (int_32 ($8 + [160])), (int_32 $7))
	*([0] + [4]) = ($8 + [192])
	return [1]
}

void .FUNC _ZN12sieosmainnet6revealERK11checksum256S2_ (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [48])
	*([0] + [4]) = $15
	CALL require_auth(*($0))
	$3 = ($0 + [56])
	$13 = [0]
	$14 = CALL db_lowerbound_i64(*($0 + [56]), *(($0 + [64])), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$1 }
	$13 = CALL $44($3, $14)
	
.LABEL $label$1
	CALL assert_sha256($1, [32], ($13 + [16]))
	$4 = ($0 + [96])
	$13 = ($0 + [112])
	$12 = *($13)
	if ( ((int_64)$12 != (int_64)-1) ){ goto $label$2 }
	$12 = (int_64)0
	$1 = CALL db_lowerbound_i64(*($4), *(($0 + [104])), (int_64)-6712989628304982016, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	CALL $45($4, $1)
	*($15 + [4]) = [0]
	*($15) = $4
	$12 = *(*(CALL $46($15) + [4]))
	$12 = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*(($0 + [112])) = $12
	
.LABEL $label$2
	CALL eosio_assert((uint_64)($12 <= (int_64)-2), [1520])
	$5 = *($13)
	if ( (int_64)($5 == 0) ){ goto $label$4 }
	$12 = (int_64)0
	$8 = ($0 + [120])
	$9 = ($0 + [124])
	$10 = ($0 + [104])
	$11 = ($0 + [96])
	
.LOOP $label$5:
	$6 = *($8)
	$14 = *($9)
	if ( ((int_32)$14 == (int_32)$6) ){ goto $label$6 }
	$13 = ($14 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$7:
	if ( ((int_64)*(*($13)) == (int_64)$12) ){ goto $label$6 }
	$14 = $13
	$1 = ($13 + [-24])
	$13 = $1
	if ( ((int_32)($1 + $7) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$14 == (int_32)$6) ){ goto $label$9 }
	CALL eosio_assert(((int_32)*(*(($14 + [-24])) + [64]) == (int_32)$4), [96])
	goto $label$8 
	
.LABEL $label$9
	$13 = CALL db_find_i64(*($11), *($10), (int_64)-6712989628304982016, $12)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert(((int_32)*(CALL $45($4, $13) + [64]) == (int_32)$4), [96])
	
.LABEL $label$8
	$12 = ((int_64)$12 + (int_64)1)
	if ( (uint_64)($12 <= $5) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = *(($0 + [80]))
	$14 = *(($0 + [84]))
	if ( ((int_32)$14 == (int_32)$6) ){ goto $label$10 }
	$13 = ($14 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$11:
	if ( (int_64)(*(*($13)) == 0) ){ goto $label$10 }
	$14 = $13
	$1 = ($13 + [-24])
	$13 = $1
	if ( ((int_32)($1 + $7) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$14 == (int_32)$6) ){ goto $label$13 }
	$13 = *(($14 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [56]) == (int_32)$3), [96])
	goto $label$12 
	
.LABEL $label$13
	$13 = [0]
	$1 = CALL db_find_i64(*(($0 + [56])), *(($0 + [64])), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$12 }
	$13 = CALL $44($3, $1)
	CALL eosio_assert(((int_32)*($13 + [56]) == (int_32)$3), [96])
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [944])
	CALL eosio_assert(((int_32)*($13 + [56]) == (int_32)$3), [640])
	CALL eosio_assert(((int_64)*(($0 + [56])) == (int_64)CALL $fimport$3()), [688])
	*(($13 + [44])) = *(($2 + [28]))
	*(($13 + [40])) = *(($2 + [24]))
	*(($13 + [36])) = *(($2 + [20]))
	*(($13 + [32])) = *(($2 + [16]))
	*(($13 + [28])) = *(($2 + [12]))
	*(($13 + [24])) = *(($2 + [8]))
	*(($13 + [20])) = *(($2 + [4]))
	*($13 + [16]) = *($2)
	$12 = *($13)
	*($13 + [48]) = (int_64)0
	CALL eosio_assert([1], [864])
	CALL eosio_assert([1], [272])
	CALL memcpy($15, $13, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy(($15 | [8]), ($13 + [16]), [32])
	CALL eosio_assert([1], [272])
	CALL memcpy(($15 + [40]), ($13 + [48]), [8])
	CALL db_update_i64(*($13 + [60]), (int_64)0, $15, [48])
	$13 = ($0 + [72])
	if ( (uint_64)($12 <= *($13)) ){ goto $label$14 }
	*($13) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	*([0] + [4]) = ($15 + [48])
}

void .FUNC _ZN12sieosmainnet4testEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	$4 = ($0 + [64])
	$6 = CALL db_lowerbound_i64(*($0 + [56]), *($4), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [56])
	
.LOOP $label$2:
	CALL $44($3, $6)
	$6 = [0]
	$5 = CALL db_lowerbound_i64(*($3), *($4), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $44($3, $5)
	
.LABEL $label$3
	$5 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($5, [1696])
	CALL eosio_assert($5, [1744])
	$5 = CALL db_next_i64(*($6 + [60]), ($7 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	CALL $44($3, $5)
	
.LABEL $label$4
	CALL $50($3, $6)
	$6 = CALL db_lowerbound_i64(*($3), *($4), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$6 >= (int_32)[0]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [24])
	$6 = CALL db_lowerbound_i64(*($0 + [16]), *($4), (int_64)-7949128890230767616, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$3 = ($0 + [16])
	
.LOOP $label$6:
	CALL $51($3, $6)
	$6 = [0]
	$5 = CALL db_lowerbound_i64(*($3), *($4), (int_64)-7949128890230767616, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $51($3, $5)
	
.LABEL $label$7
	$5 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($5, [1696])
	CALL eosio_assert($5, [1744])
	$5 = CALL db_next_i64(*($6 + [52]), ($7 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	CALL $51($3, $5)
	
.LABEL $label$8
	CALL $52($3, $6)
	$6 = CALL db_lowerbound_i64(*($3), *($4), (int_64)-7949128890230767616, (int_64)0)
	if ( ((int_32)$6 >= (int_32)[0]) ){ goto $label$6 }
	
.LABEL $label$5
	$4 = ($0 + [104])
	$6 = CALL db_lowerbound_i64(*($0 + [96]), *($4), (int_64)-6712989628304982016, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	$3 = ($0 + [96])
	
.LOOP $label$10:
	CALL $45($3, $6)
	$6 = [0]
	$5 = CALL db_lowerbound_i64(*($3), *($4), (int_64)-6712989628304982016, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$11 }
	$6 = CALL $45($3, $5)
	
.LABEL $label$11
	$5 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($5, [1696])
	CALL eosio_assert($5, [1744])
	$5 = CALL db_next_i64(*($6 + [68]), ($7 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$12 }
	CALL $45($3, $5)
	
.LABEL $label$12
	CALL $53($3, $6)
	$6 = CALL db_lowerbound_i64(*($3), *($4), (int_64)-6712989628304982016, (int_64)0)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$10 }
	
.LABEL $label$9
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[31]), [384])
	CALL memcpy(($1 + [32]), *($0 + [4]), [32])
	*($0 + [4]) = (*($0 + [4]) + [32])
	return $0
}

int_32 .FUNC $46 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [68]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1648])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-6712989628304982016)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1584])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1584])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $45(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [352])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $88([80])) + [64]) = $0
	CALL $47(($8 + [32]), $6)
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [68])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $48(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $89($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [352])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $88([80])) + [8]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [56]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [384])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((uint_32)($4 + [-8]) > (uint_32)[31]), [384])
	CALL memcpy(($6 + [16]), ($7 + [8]), [32])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[40]), [384])
	CALL memcpy(($6 + [48]), ($7 + [40]), [8])
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $49(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $89($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $9 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $88(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $96($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $89($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $89($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [352])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $88([56])
	CALL $7($6)
	*($6 + [40]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [16])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [32])
	CALL $10(($8 + [32]), ($8 + [24]))
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [32]) = $5)
	$7 = *($6 + [44])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $9(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $89($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $7 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [288])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [16])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [288])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [16])
	return $0
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _ZN5eosio5token6createEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	$8 = [0]
	$3 = *($2 + [8])
	$4 = (uint_64)$3 >> (uint_64)(int_64)8
	$7 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [16])
	$6 = [0]
	$5 = *($2)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$6 }
	$8 = [0]
	$7 = $4
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$6 = [0]
	
.LABEL $label$6
	CALL eosio_assert($6, [48])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [64])
	*((($9 + [8]) + [32])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$7 = *($0)
	*($9 + [8]) = $7
	*($9 + [16]) = $4
	$8 = CALL db_find_i64($7, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert(((int_32)*(CALL $6(($9 + [8]), $8) + [40]) == (int_32)($9 + [8])), [96])
	$8 = [0]
	goto $label$11 
	
.LABEL $label$12
	$8 = [1]
	
.LABEL $label$11
	CALL eosio_assert($8, [160])
	$4 = *($0)
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [208])
	$8 = CALL $88([56])
	CALL $7($8)
	*($8 + [40]) = ($9 + [8])
	*($8 + [8]) = $3
	*(($8 + [28])) = *(($2 + [12]))
	*(($8 + [24])) = *(($2 + [8]))
	*(($8 + [20])) = *(($2 + [4]))
	*($8 + [16]) = *($2)
	*($8 + [32]) = $1
	*($9 + [96]) = (($9 + [48]) + [40])
	*($9 + [92]) = ($9 + [48])
	*($9 + [88]) = ($9 + [48])
	*($9 + [104]) = ($9 + [88])
	*($9 + [116]) = ($8 + [16])
	*($9 + [112]) = $8
	*($9 + [120]) = ($8 + [32])
	CALL $8(($9 + [112]), ($9 + [104]))
	$7 = (uint_64)*($8 + [8]) >> (uint_64)(int_64)8
	$6 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)-4157508551318700032, $4, $7), ($9 + [48]), [40]
	*($8 + [44]) = $6)
	$2 = (($9 + [8]) + [16])
	if ( (uint_64)($7 <= *($2)) ){ goto $label$13 }
	*($2) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$13
	*($9 + [112]) = $8
	$7 = (uint_64)*(($8 + [8])) >> (uint_64)(int_64)8
	*($9 + [48]) = $7)
	*($9 + [88]) = $6
	$2 = *((($9 + [8]) + [28]))
	if ( ((uint_32)$2 >= (uint_32)*(($9 + [40]))) ){ goto $label$15 }
	*($2 + [8]) = $7
	*($2 + [16]) = $6
	*($9 + [112]) = [0]
	*($2) = $8
	*(($9 + [36])) = ($2 + [24])
	goto $label$14 
	
.LABEL $label$15
	CALL $9(($9 + [32]), ($9 + [112]), ($9 + [48]), ($9 + [88]))
	
.LABEL $label$14
	$8 = *($9 + [112])
	*($9 + [112]) = [0]
	if ( ($8 == 0) ){ goto $label$16 }
	CALL $89($8)
	
.LABEL $label$16
	$6 = *($9 + [32])
	if ( ($6 == 0) ){ goto $label$17 }
	$0 = ($9 + [36])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$19 }
	
.LOOP $label$20:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$21 }
	CALL $89($2)
	
.LABEL $label$21
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$20 }
	$8 = *(($9 + [32]))
	goto $label$18 
	
.LABEL $label$19
	$8 = $6
	
.LABEL $label$18
	*($0) = $6
	CALL $89($8)
	
.LABEL $label$17
	*([0] + [4]) = ($9 + [128])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $88($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $96($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $89($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $19(*($1), ($0 + [32]))
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $14($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [272])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [272])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $18(CALL $17($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [272])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [272])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [272])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [384])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [384])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC _ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [224])
	*([0] + [4]) = $13
	$8 = [0]
	$10 = *($2 + [8])
	$12 = (uint_64)$10 >> (uint_64)(int_64)8
	$7 = $12)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [16])
	$8 = *($3)
	if ( ($8 & [1]) ){ goto $label$7 }
	$8 = uint_32($8 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$8 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($8 <= [257]), [400])
	$9 = [0]
	*(($13 + [120])) = [0]
	*($13 + [104]) = (int_64)-1
	*($13 + [112]) = (int_64)0
	$7 = *($0)
	*($13 + [88]) = $7
	*($13 + [96]) = $12
	$6 = [0]
	$8 = CALL db_find_i64($7, $12, (int_64)-4157508551318700032, $12)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	$6 = CALL $6(($13 + [88]), $8)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($13 + [88])), [96])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [432])
	$7 = *($2)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$8 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$9 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$9 = [0]
	
.LABEL $label$9
	CALL eosio_assert($9, [496])
	CALL eosio_assert(((int_64)$7 > (int_64)0), [528])
	CALL eosio_assert(((int_64)$10 == (int_64)*($6 + [8])), [560])
	CALL eosio_assert(((int_64)$7 <= (int_64))(*($6 + [16]) - *($6))), [592])
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($13 + [88])), [640])
	CALL eosio_assert(((int_64)*($13 + [88]) == (int_64)CALL $fimport$3()), [688])
	$12 = *($6 + [8])
	CALL eosio_assert(((int_64)$10 == (int_64)$12), [752])
	$7 = ((int_64)*($6) + (int_64)$7)
	*($6) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [800])
	CALL eosio_assert(((int_64)*($6) < (int_64)4611686018427387904), [832])
	$7 = (uint_64)$12 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$7) == (int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8)), [864])
	*($13 + [192]) = (($13 + [128]) + [40])
	*($13 + [188]) = ($13 + [128])
	*($13 + [184]) = ($13 + [128])
	*($13 + [200]) = ($13 + [184])
	*($13 + [212]) = ($6 + [16])
	*($13 + [208]) = $6
	$8 = ($6 + [32])
	*($13 + [216]) = $8
	CALL $8(($13 + [208]), ($13 + [200]))
	CALL db_update_i64(*($6 + [44]), (int_64)0, ($13 + [128]), [40])
	$6 = (($13 + [88]) + [16])
	if ( (uint_64)($7 <= *($6)) ){ goto $label$14 }
	*($6) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$14
	*(($6 = (($13 + [72]) + [12]))) = *(($2 + [12]))
	*(($9 = (($13 + [72]) + [8]))) = *(($2 + [8]))
	*($13 + [76]) = *(($2 + [4]))
	*($13 + [72]) = *($2)
	$7 = *($8)
	*((($13 + [8]) + [12])) = *($6)
	*((($13 + [8]) + [8])) = *($9)
	*($13 + [12]) = *($13 + [76])
	*($13 + [8]) = *($13 + [72])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $7, ($13 + [8]), $7)
	$4 = *($8)
	if ( ((int_64)$4 == (int_64)$1) ){ goto $label$15 }
	$5 = *($0)
	$7 = (int_64)0
	$10 = (int_64)59
	$8 = [928]
	$11 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$21 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$6 = ($6 + [165])
	goto $label$19 
	
.LABEL $label$21
	$12 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$17
	$8 = ($8 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$16 }
	*(($13 + [52])) = *(($2 + [12]))
	*(($6 = (($13 + [24]) + [24]))) = *(($2 + [8]))
	*(($13 + [44])) = *(($2 + [4]))
	*($13 + [32]) = $1
	*($13 + [24]) = $4
	*($13 + [40]) = *($2)
	CALL $97(($13 + [56]), $3)
	*(($8 = CALL $88([16]))) = $4
	*($8 + [8]) = $11
	*($13 + [208]) = $8
	$8 = ($8 + [16])
	*($13 + [216]) = $8
	*($13 + [212]) = $8
	*($13 + [128]) = *($13 + [24])
	*($13 + [136]) = *($13 + [32])
	*((($13 + [128]) + [24])) = *($6)
	*($13 + [144]) = *($13 + [40])
	$8 = (($13 + [24]) + [40])
	*(($6 = (($13 + [128]) + [40]))) = *($8)
	*($13 + [160]) = *($13 + [56])
	*($13 + [56]) = [0]
	*(($13 + [60])) = [0]
	*($8) = [0]
	CALL $13($5, (int_64)-3617168760277827584, ($13 + [208]), ($13 + [128]))
	if ( ((*($13 + [160]) & [1]) == 0) ){ goto $label$22 }
	CALL $89(*($6))
	
.LABEL $label$22
	$8 = *($13 + [208])
	if ( ($8 == 0) ){ goto $label$23 }
	*($13 + [212]) = $8
	CALL $89($8)
	
.LABEL $label$23
	if ( ((*(($13 + [56])) & [1]) == 0) ){ goto $label$15 }
	CALL $89(*(($13 + [64])))
	
.LABEL $label$15
	$2 = *($13 + [112])
	if ( ($2 == 0) ){ goto $label$24 }
	$9 = ($13 + [116])
	$8 = *($9)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$26 }
	
.LOOP $label$27:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$28 }
	CALL $89($6)
	
.LABEL $label$28
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$27 }
	$8 = *(($13 + [112]))
	goto $label$25 
	
.LABEL $label$26
	$8 = $2
	
.LABEL $label$25
	*($9) = $2
	CALL $89($8)
	
.LABEL $label$24
	*([0] + [4]) = ($13 + [224])
}

void .FUNC _ZN5eosio5token11add_balanceEyNS_5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	$8 = [0]
	*((($9 + [8]) + [32])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$6 = *($0)
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$4 = *($2 + [8])
	$0 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $20(($9 + [8]), $0)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [96])
	CALL eosio_assert([1], [944])
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [640])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [688])
	$1 = *($8 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$1), [752])
	$6 = ((int_64)*($8) + (int_64)*($2))
	*($8) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [800])
	CALL eosio_assert(((int_64)*($8) < (int_64)4611686018427387904), [832])
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$1) == (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)), [864])
	CALL eosio_assert([1], [272])
	CALL memcpy(($9 + [64]), $8, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy((($9 + [64]) | [8]), ($8 + [8]), [8])
	CALL db_update_i64(*($8 + [20]), (int_64)0, ($9 + [64]), [16])
	$8 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$3 }
	*($8) = ((int_64)$1 + (int_64)1)
	$2 = *($9 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [208])
	*(($0 = CALL $88([32])) + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [288])
	$5 = ($0 + [8])
	$1 = (int_64)5462355
	
.LOOP $label$6:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert($7, [16])
	*($0 + [16]) = ($9 + [8])
	*(($8 = ($0 + [8]))) = *(($2 + [8]))
	*($0) = *($2)
	CALL eosio_assert([1], [272])
	CALL memcpy(($9 + [64]), $0, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy((($9 + [64]) | [8]), $5, [8])
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	$2 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)3607749779137757184, $3, $1), ($9 + [64]), [16]
	*($0 + [20]) = $2)
	$7 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$9 }
	*($7) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$9
	*($9 + [56]) = $0
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	*($9 + [64]) = $1)
	*($9 + [52]) = $2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($9 + [40]))) ){ goto $label$11 }
	*($8 + [8]) = $1
	*($8 + [16]) = $2
	*($9 + [56]) = [0]
	*($8) = $0
	*($7) = ($8 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $21(($9 + [32]), ($9 + [56]), ($9 + [64]), ($9 + [52]))
	
.LABEL $label$10
	$8 = *($9 + [56])
	*($9 + [56]) = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $89($8)
	
.LABEL $label$3
	$2 = *($9 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$8 = ($8 + [-24])
	$0 = *($8)
	*($8) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $89($0)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$14 }
	$8 = *(($9 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$8 = $2
	
.LABEL $label$12
	*($7) = $2
	CALL $89($8)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

void .FUNC $13 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $88($4)
	$6 = ($8 + ($5 << [4]))
	*(($9 + [16])) = $6
	*($9 + [8]) = $8
	*($9 + [12]) = $8
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $7, $2)
	$7 = ($8 + $2)
	*($9 + [12]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*(($9 + [44])) = $7
	*($9 + [32]) = $1
	*(($9 + [16])) = [0]
	*(($9 + [48])) = $6
	*($9 + [24]) = $0
	*($9 + [40]) = $8
	*($9 + [8]) = (int_64)0
	*($9 + [52]) = [0]
	*((($9 + [24]) + [32])) = [0]
	*((($9 + [24]) + [36])) = [0]
	$8 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($9 + [52])
	
.LOOP $label$4:
	$8 = ($8 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($8 == 0) ){ goto $label$6 }
	CALL $14($2, $8)
	$2 = *(($9 + [56]))
	$8 = *(($9 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$8 = [0]
	
.LABEL $label$5
	*($9 + [84]) = $8
	*($9 + [80]) = $8
	*($9 + [88]) = $2
	*($9 + [64]) = ($9 + [80])
	*($9 + [72]) = $3
	CALL $15(($9 + [72]), ($9 + [64]))
	CALL $16(($9 + [80]), ($9 + [24]))
	$8 = *($9 + [80])
	CALL send_inline($8, (*($9 + [84]) - $8))
	$8 = *($9 + [80])
	if ( ($8 == 0) ){ goto $label$7 }
	*($9 + [84]) = $8
	CALL $89($8)
	
.LABEL $label$7
	$8 = *($9 + [52])
	if ( ($8 == 0) ){ goto $label$8 }
	*(($9 + [56])) = $8
	CALL $89($8)
	
.LABEL $label$8
	$8 = *($9 + [40])
	if ( ($8 == 0) ){ goto $label$9 }
	*(($9 + [44])) = $8
	CALL $89($8)
	
.LABEL $label$9
	$8 = *($9 + [8])
	if ( ($8 == 0) ){ goto $label$10 }
	*($9 + [12]) = $8
	CALL $89($8)
	
.LABEL $label$10
	*([0] + [4]) = ($9 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $96(($9 + [8]))
}

void .FUNC _ZN12sieosmainnet18send_referal_bonusEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	CALL is_account($1)
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [272])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [272])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [272])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [272])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $58 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_64 $5
	int_64 $6
	$5 = *($2 + [8])
	if ( ((int_64)$5 != (int_64)1397703940) ){ goto $label$5 }
	if ( ((int_64)$3 != (int_64)1414349828) ){ goto $label$5 }
	$3 = ((int_64)*($1 + [24]) + (int_64)*($2))
	*($1 + [24]) = $3
	$4 = ((int_64)$3 * (int_64)5000000000)
	$6 = (int_64)2147483647
	$5 = (int_64)0
	
.LOOP $label$6:
	if ( ((uint_64)$5 >= (uint_64)$6) ){ goto $label$4 }
	
.LOOP $label$8:
	$3 = (uint_64)((int_64)$6 + (int_64)$5) >> (uint_64)(int_64)1
	if ( ((uint_64)((int_64)$3) * (int_64)$3) <= (uint_64)$4) ){ goto $label$7 }
	$6 = ((int_64)$3 + (int_64)-1)
	if ( (uint_64)($5 <= $6) ){ goto $label$8 }
	goto $label$4 
	
.LABEL $label$7
	$5 = ((int_64)$3 + (int_64)1)
	if ( ((uint_64)((int_64)$5 * (int_64)$5) <= (uint_64)$4) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_64)$5 != (int_64)1414349828) ){ goto $label$9 }
	if ( ((int_64)$3 != (int_64)1397703940) ){ goto $label$9 }
	$3 = *($2)
	$6 = *($1 + [8])
	$5 = (int_64)
	*($1 + [8]) = $5($6 - $3))
	*($1 + [24]) = ((uint_64)((int_64)$5 * (int_64)$5) / (uint_64)(int_64)5000000000)
	$3 = ((int_64)((int_64)$3 * (int_64))(((int_64)$6 << (int_64)1) - $3)) / (int_64)5000000000
	*($0) = $3)
	$5 = *(($1 + [32]))
	*($0 + [8]) = $5
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [288])
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$1 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$9
	CALL eosio_assert([0], [1856])
	*(($0 + [8])) = *(($2 + [8]))
	*($0) = *($2)
	return 
	
.LABEL $label$4
	$3 = $5
	
.LABEL $label$3
	$5 = *($1 + [8])
	*($1 + [8]) = $3
	*(($1 + [24])) = ((uint_64)((int_64)$3 * (int_64)$3) / (uint_64)(int_64)5000000000)
	$3 = (int_64)
	*($0) = $3($3 - $5))
	$5 = *(($1 + [16]))
	*($0 + [8]) = $5
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [288])
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$1 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$1 = [0]
	
.LABEL $label$13
	CALL eosio_assert($1, [16])
	return 
	
.LABEL $label$2
	$1 = [0]
	
.LABEL $label$1
	CALL eosio_assert($1, [16])
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $61($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $91($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $88($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $91($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $89($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $90($7)
	return (unreachable)
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [1296])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1344])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1408])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $89($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $89($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [60])))
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [352])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$4 = CALL malloc($7)
	CALL db_get_i64($1, $4, $7)
	CALL free($4)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $4
	CALL db_get_i64($1, $4, $7)
	
.LABEL $label$5
	$6 = CALL $88([64])
	CALL $54($6)
	*($6 + [48]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [384])
	CALL memcpy(($6 + [8]), $4, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [384])
	CALL memcpy(($6 + [16]), ($4 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [384])
	CALL memcpy(($6 + [24]), ($4 + [16]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[24]), [384])
	CALL memcpy(($6 + [32]), ($4 + [24]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[32]), [384])
	CALL memcpy(($6 + [40]), ($4 + [32]), [8])
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $55(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $89($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [1296])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1344])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1408])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $89($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $89($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1296])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1344])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1408])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $89($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $89($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
}

int_32 .FUNC $54 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [288])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [16])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [288])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [16])
	*(($0 + [40])) = (int_64)4602678819172646912
	return $0
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [288])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [16])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [384])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [384])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [384])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN12sieosmainnet4sellEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [272])
	*([0] + [4]) = $18
	CALL require_auth($1)
	$3 = ($0 + [16])
	$11 = (int_64)0
	$17 = [0]
	$9 = CALL db_lowerbound_i64(*($0 + [16]), *(($0 + [24])), (int_64)-7949128890230767616, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$17 = CALL $51($3, $9)
	
.LABEL $label$1
	$10 = (int_64)59
	$9 = [1488]
	$12 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$11 > (uint_64)(int_64)10) ){ goto $label$7 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$7
	$13 = (int_64)0
	if ( ((int_64)$11 == (int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$3
	$9 = ($9 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)1)
	if ( ((int_64)$11 != (int_64)13) ){ goto $label$2 }
	*(($18 + [232])) = [0]
	*($18 + [200]) = $12
	*($18 + [216]) = (int_64)-1
	*($18 + [224]) = (int_64)0
	*($18 + [208]) = *($0)
	$13 = *(CALL $26(($18 + [200]), (int_64)5459781, [1056]))
	$5 = *(($0 + [80]))
	$14 = *(($0 + [84]))
	if ( ((int_32)$14 == (int_32)$5) ){ goto $label$8 }
	$9 = ($14 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$9:
	if ( (int_64)(*(*($9)) == 0) ){ goto $label$8 }
	$14 = $9
	$4 = ($9 + [-24])
	$9 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	$9 = ($0 + [56])
	if ( ((int_32)$14 == (int_32)$5) ){ goto $label$11 }
	$4 = *(($14 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [56]) == (int_32)$9), [96])
	goto $label$10 
	
.LABEL $label$11
	$4 = CALL $44($9, CALL $fimport$6(*(($0 + [56])), *(($0 + [64])), (int_64)7235159537265672192, (int_64)0))
	CALL eosio_assert(((int_32)*($4 + [56]) == (int_32)$9), [96])
	
.LABEL $label$10
	$10 = *($4 + [48])
	$9 = ($0 + [16])
	$12 = *(CALL $51($3, CALL $fimport$8(*($9), *(($0 + [24])), (int_64)-7949128890230767616, (int_64)0)) + [24])
	$4 = [0]
	$15 = *($0 + [8])
	CALL eosio_assert(((int_32)$17 != (int_32)[0]), [944])
	CALL eosio_assert(((int_32)*($17 + [48]) == (int_32)$3), [640])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$3()), [688])
	$11 = *($17)
	*(($9 = (($18 + [104]) + [8]))) = *(($2 + [8]))
	$16 = *($2)
	*((($18 + [16]) + [12])) = *((($18 + [104]) + [12]))
	*((($18 + [16]) + [8])) = *($9)
	*($18 + [104]) = $16
	*($18 + [20]) = *($18 + [108])
	*($18 + [16]) = *($18 + [104])
	CALL $58(($18 + [160]), $17, ($18 + [16]), (int_64)1397703940)
	$16 = *($18 + [160])
	CALL eosio_assert(((int_64)$11 == (int_64)*($17)), [864])
	$14 = (($18 + [48]) + [40])
	*($18 + [168]) = $14
	*($18 + [164]) = ($18 + [48])
	*($18 + [160]) = ($18 + [48])
	CALL $56(($18 + [160]), $17)
	CALL db_update_i64(*($17 + [52]), (int_64)0, ($18 + [48]), [40])
	$12 = (int_64))($12 - $15)
	$13 = (int_64))($13 - $10)
	$9 = ($0 + [32])
	if ( (uint_64)($11 <= *($9)) ){ goto $label$12 }
	*($9) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$7 = ((uint_64)((int_64)$16 * (int_64)$13) / (uint_64)$12)
	CALL eosio_assert(((int_64)$7 > (int_64)0), [1776])
	*((($18 + [160]) + [32])) = [0]
	*($18 + [176]) = (int_64)-1
	*($18 + [184]) = (int_64)0
	$11 = *($0)
	*($18 + [160]) = $11
	*($18 + [168]) = (int_64)5459781
	$9 = CALL db_find_i64($11, (int_64)5459781, (int_64)-4157508551318700032, (int_64)5459781)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$13 }
	$4 = CALL $6(($18 + [160]), $9)
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)($18 + [160])), [96])
	
.LABEL $label$13
	$9 = [0]
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [432])
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)($18 + [160])), [640])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$3()), [688])
	$11 = *($4 + [8])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)$11), [1184])
	$13 = (int_64)
	*($4) = $13(*($4) - *($2)))
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [1232])
	CALL eosio_assert(((int_64)*($4) < (int_64)4611686018427387904), [1264])
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$11) == (int_64)(uint_64)*($4 + [8]) >> (uint_64)(int_64)8)), [864])
	*($18 + [264]) = $14
	*($18 + [260]) = ($18 + [48])
	*($18 + [256]) = ($18 + [48])
	*($18 + [32]) = ($18 + [256])
	*($18 + [108]) = ($4 + [16])
	*($18 + [104]) = $4
	*($18 + [112]) = ($4 + [32])
	CALL $8(($18 + [104]), ($18 + [32]))
	CALL db_update_i64(*($4 + [44]), (int_64)0, ($18 + [48]), [40])
	$4 = (($18 + [160]) + [16])
	if ( (uint_64)($11 <= *($4)) ){ goto $label$14 }
	*($4) = ((int_64)$11 + (int_64)1)
	
.LABEL $label$14
	*(($4 = (($18 + [144]) + [8]))) = *(($2 + [8]))
	$11 = *($2)
	*(($18 + [12])) = *((($18 + [144]) + [12]))
	*(($18 + [8])) = *($4)
	*($18 + [144]) = $11
	*($18 + [4]) = *($18 + [148])
	*($18) = *($18 + [144])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, $18)
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [288])
	$11 = (int_64)5459781
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$4 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$4 = [0]
	
.LABEL $label$15
	CALL eosio_assert($4, [16])
	$8 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [928]
	$12 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$25 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$4 = ($4 + [165])
	goto $label$23 
	
.LABEL $label$25
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$21
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$20 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1488]
	$15 = (int_64)0
	
.LOOP $label$26:
	if ( ((uint_64)$11 > (uint_64)(int_64)10) ){ goto $label$31 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$4 = ($4 + [165])
	goto $label$29 
	
.LABEL $label$31
	$13 = (int_64)0
	if ( ((int_64)$11 == (int_64)11) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$30
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$28
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$27
	$9 = ($9 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$15 = ((int_64)$13 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)1)
	if ( ((int_64)$11 != (int_64)13) ){ goto $label$26 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1504]
	$16 = (int_64)0
	
.LOOP $label$32:
	if ( ((uint_64)$11 > (uint_64)(int_64)7) ){ goto $label$37 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$36 }
	$4 = ($4 + [165])
	goto $label$35 
	
.LABEL $label$37
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$36
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$35
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$34
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$33
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$16 = ((int_64)$13 | (int_64)$16)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$32 }
	*(($18 + [40])) = [0]
	*($18 + [32]) = (int_64)0
	$9 = CALL strlen([1808])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$38 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$41 }
	*($18 + [32]) = ($9 << [1])
	$4 = (($18 + [32]) | [1])
	if ( $9 ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	$14 = (($9 + [16]) & [-16])
	$4 = CALL $88($14)
	*($18 + [32]) = ($14 | [1])
	*($18 + [40]) = $4
	*($18 + [36]) = $9
	
.LABEL $label$40
	CALL memcpy($4, [1808], $9)
	
.LABEL $label$39
	*(($4 + $9)) = [0]
	*((($18 + [48]) + [24])) = (int_64)1397703940
	*(($4 = (($18 + [48]) + [36]))) = *($18 + [36])
	*($18 + [56]) = $1
	$9 = ($18 + [40])
	*(($18 + [88])) = *($9)
	*($18 + [48]) = *($0)
	*($18 + [64]) = $7
	*($18 + [80]) = *($18 + [32])
	*($18 + [32]) = [0]
	*($18 + [36]) = [0]
	*($9) = [0]
	*($18 + [104]) = $15
	*($18 + [112]) = $16
	*(($9 = CALL $88([16]))) = $8
	*($9 + [8]) = $12
	*((($18 + [104]) + [32])) = [0]
	$0 = ($9 + [16])
	*((($18 + [104]) + [24])) = $0
	*(($18 + [124])) = $0
	*($18 + [120]) = $9
	*($18 + [132]) = [0]
	*((($18 + [104]) + [36])) = [0]
	$9 = *($18 + [80])
	$4 = ( *($4) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$9 = ($4 + [32])
	$11 = (CASTING uint_64)(uint_32 $4)
	$4 = ($18 + [132])
	
.LOOP $label$42:
	$9 = ($9 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$42 }
	if ( ($9 == 0) ){ goto $label$44 }
	CALL $14($4, $9)
	$4 = *(($18 + [136]))
	$9 = *(($18 + [132]))
	goto $label$43 
	
.LABEL $label$44
	$4 = [0]
	$9 = [0]
	
.LABEL $label$43
	*($18 + [260]) = $9
	*($18 + [256]) = $9
	*($18 + [264]) = $4
	*($18 + [240]) = ($18 + [256])
	*($18 + [248]) = ($18 + [48])
	CALL $15(($18 + [248]), ($18 + [240]))
	CALL $16(($18 + [256]), ($18 + [104]))
	$9 = *($18 + [256])
	CALL send_inline($9, (*($18 + [260]) - $9))
	$9 = *($18 + [256])
	if ( ($9 == 0) ){ goto $label$45 }
	*($18 + [260]) = $9
	CALL $89($9)
	
.LABEL $label$45
	$9 = *($18 + [132])
	if ( ($9 == 0) ){ goto $label$46 }
	*(($18 + [136])) = $9
	CALL $89($9)
	
.LABEL $label$46
	$9 = *($18 + [120])
	if ( ($9 == 0) ){ goto $label$47 }
	*(($18 + [124])) = $9
	CALL $89($9)
	
.LABEL $label$47
	if ( ((*(($18 + [80])) & [1]) == 0) ){ goto $label$48 }
	CALL $89(*(($18 + [88])))
	
.LABEL $label$48
	if ( ((*($18 + [32]) & [1]) == 0) ){ goto $label$49 }
	CALL $89(*(($18 + [40])))
	
.LABEL $label$49
	$0 = *($18 + [184])
	if ( ($0 == 0) ){ goto $label$50 }
	$14 = ($18 + [188])
	$9 = *($14)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$52 }
	
.LOOP $label$53:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$54 }
	CALL $89($4)
	
.LABEL $label$54
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$53 }
	$9 = *(($18 + [184]))
	goto $label$51 
	
.LABEL $label$52
	$9 = $0
	
.LABEL $label$51
	*($14) = $0
	CALL $89($9)
	
.LABEL $label$50
	$0 = *($18 + [224])
	if ( ($0 == 0) ){ goto $label$55 }
	$14 = ($18 + [228])
	$9 = *($14)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$57 }
	
.LOOP $label$58:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$59 }
	CALL $89($4)
	
.LABEL $label$59
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$58 }
	$9 = *(($18 + [224]))
	goto $label$56 
	
.LABEL $label$57
	$9 = $0
	
.LABEL $label$56
	*($14) = $0
	CALL $89($9)
	
.LABEL $label$55
	*([0] + [4]) = ($18 + [272])
	return (unreachable)
	
.LABEL $label$38
	CALL $90(($18 + [32]))
}

void .FUNC _ZN12sieosmainnet5issueEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	*(($4 = (($5 + [32]) + [8]))) = *(($2 + [8]))
	*($5 + [32]) = *($2)
	CALL $97(($5 + [16]), $3)
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [32])
	CALL _ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $1, $5, ($5 + [16]))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL $89(*($5 + [24]))
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _Z13int_to_stringy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$3 }
	*($6 + [8]) = [0]
	*($6) = (int_64)0
	
.LOOP $label$4:
	CALL $92($6, (CASTING uint_32)(uint_64 ((int_64)((uint_64)$1 % (uint_64)(int_64)10) | (int_64)48)))
	$2 = ((uint_64)$1 > (uint_64)(int_64)9)
	$1 = ((uint_64)$1 / (uint_64)(int_64)10)
	if ( $2 ){ goto $label$4 }
	$3 = ($6 + [8])
	$2 = ($2 & [1])
	$2 = *($6)
	$5 = ( *($6 + [4]) ? uint_32($2 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$5 }
	$2 = ( *($3) ? ($6 | [1]) : $2 )
	$5 = (($2 + $5) + [-1])
	if ( ((uint_32)$5 <= (uint_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$4 = *($2)
	*($2) = *($5)
	*($5) = $4
	$5 = ($5 + [-1])
	$2 = ($2 + [1])
	if ( ($2 <= $5) ){ goto $label$6 }
	
.LABEL $label$5
	*($0) = *($6)
	*(($0 + [8])) = *($3)
	goto $label$2 
	
.LABEL $label$3
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL strlen([1472])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	$5 = ($0 + [1])
	if ( $2 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$4 = (($2 + [16]) & [-16])
	$5 = CALL $88($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $2
	
.LABEL $label$8
	CALL memcpy($5, [1472], $2)
	
.LABEL $label$7
	*(($5 + $2)) = [0]
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $90($0)
}

int_64 .FUNC _Z13string_to_intNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$4 }
	$2 = uint_32($2 >> [1])
	if ( ($2 == 0) ){ goto $label$2 }
	$0 = ($0 + [1])
	$3 = (int_64)0
	
.LOOP $label$5:
	$3 = ((int_64)((int_64)((int_64)$3 + (int_64)*($0)) * (int_64)10) + (int_64)-480)
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$1 }
	$1 = *(($0 + [8]))
	$3 = (int_64)0
	$0 = [0]
	
.LOOP $label$6:
	$3 = ((int_64)((int_64)((int_64)$3 + (int_64)*(($1 + $0))) * (int_64)10) + (int_64)-480)
	$0 = ($0 + [1])
	if ( ($0 <= $2) ){ goto $label$6 }
	
.LABEL $label$3
	return $3
	
.LABEL $label$2
	return (int_64)0
	
.LABEL $label$1
	return (int_64)0
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $88(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $96($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $89($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $89($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $88(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $96($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $89($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $89($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [352])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $88([32])
	$6 = CALL $22($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $21(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $89($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN5eosio5token8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [112])
	*([0] + [4]) = $11
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [992])
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$16($2), [1024])
	$5 = *($3 + [8])
	$8 = [0]
	*(($11 + [104])) = [0]
	$9 = (uint_64)$5 >> (uint_64)(int_64)8
	*($11 + [80]) = $9)
	*($11 + [88]) = (int_64)-1
	*($11 + [96]) = (int_64)0
	*($11 + [72]) = *($0)
	$6 = CALL $24(($11 + [72]), $9, [1056])
	CALL require_recipient($1)
	CALL require_recipient($2)
	$7 = *($3)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$10 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [496])
	CALL eosio_assert(((int_64)$7 > (int_64)0), [1088])
	CALL eosio_assert(((int_64)$5 == (int_64)*($6 + [8])), [560])
	$10 = *($4)
	if ( ($10 & [1]) ){ goto $label$7 }
	$10 = uint_32($10 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$10 = *($4 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($10 <= [257]), [400])
	$8 = ($3 + [8])
	*(($10 = (($11 + [56]) + [8]))) = *($8)
	$9 = *($3)
	*((($11 + [24]) + [12])) = *((($11 + [56]) + [12]))
	*((($11 + [24]) + [8])) = *($10)
	*($11 + [56]) = $9
	*($11 + [28]) = *($11 + [60])
	*($11 + [24]) = *($11 + [56])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($11 + [24]))
	*(($10 = (($11 + [40]) + [8]))) = *($8)
	$9 = *($3)
	*((($11 + [8]) + [12])) = *((($11 + [40]) + [12]))
	*((($11 + [8]) + [8])) = *($10)
	*($11 + [40]) = $9
	*($11 + [12]) = *($11 + [44])
	*($11 + [8]) = *($11 + [40])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $2, ($11 + [8]), $1)
	$8 = *($11 + [96])
	if ( ($8 == 0) ){ goto $label$8 }
	$0 = ($11 + [100])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$10 }
	
.LOOP $label$11:
	$10 = ($10 + [-24])
	$3 = *($10)
	*($10) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $89($3)
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$11 }
	$10 = *(($11 + [96]))
	goto $label$9 
	
.LABEL $label$10
	$10 = $8
	
.LABEL $label$9
	*($0) = $8
	CALL $89($10)
	
.LABEL $label$8
	*([0] + [4]) = ($11 + [112])
}

int_32 .FUNC $22 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [288])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [16])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [384])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC _ZN5eosio5token11sub_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	*(($8 + [40])) = [0]
	*($8 + [16]) = $1
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	*($8 + [8]) = *($0)
	$4 = *($2)
	$3 = *($2 + [8])
	$0 = CALL $26(($8 + [8]), (uint_64)$3 >> (uint_64)(int_64)8), [1120]
	CALL eosio_assert(((int_64)*($0)) >= (int_64)$4), [1152])
	if ( ((int_64)$4 != (int_64)*($0)) ){ goto $label$3 }
	CALL $27(($8 + [8]), $0)
	$5 = *($8 + [32])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($8 + [8])), [640])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$3()), [688])
	$6 = *($0 + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)$6), [1184])
	$4 = (int_64)
	*($0) = $4(*($0) - $4))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1232])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [1264])
	$4 = (uint_64)$6 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$4) == (int_64)(uint_64)*($0 + [8]) >> (uint_64)(int_64)8)), [864])
	CALL eosio_assert([1], [272])
	CALL memcpy(($8 + [48]), $0, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy((($8 + [48]) | [8]), ($0 + [8]), [8])
	CALL db_update_i64(*($0 + [20]), $1, ($8 + [48]), [16])
	$0 = (($8 + [8]) + [16])
	if ( (uint_64)($4 <= *($0)) ){ goto $label$4 }
	*($0) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$4
	$5 = *($8 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $89($2)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($8 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($7) = $5
	CALL $89($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [64])
}

int_32 .FUNC $24 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [96])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $6($0, $5)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [96])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $27 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1296])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1344])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1408])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $89($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $89($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $26 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [96])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $20($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [96])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN12sieosmainnet15set_roll_resultEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	*((($8 + [8]) + [32])) = [0]
	*($8 + [24]) = (int_64)-1
	$3 = *($0)
	*($8 + [8]) = $3
	*($8 + [16]) = $1
	*($8 + [32]) = (int_64)0
	$5 = CALL db_lowerbound_i64($3, $1, (int_64)-4994024814571159552, (int_64)0)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL $72(($8 + [8]), $5)
	CALL eosio_assert([1], [944])
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($8 + [8])), [640])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$3()), [688])
	*($0 + [8]) = $2
	$1 = *($0)
	CALL eosio_assert([1], [864])
	CALL eosio_assert([1], [272])
	CALL memcpy(($8 + [64]), $0, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy((($8 + [64]) | [8]), ($0 + [8]), [8])
	CALL db_update_i64(*($0 + [20]), (int_64)0, ($8 + [64]), [16])
	$0 = (($8 + [8]) + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$4 = *($8 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$6 = *($0)
	CALL eosio_assert(((int_64)$3 == (int_64)CALL $fimport$3()), [208])
	*(($0 = CALL $88([32])) + [16]) = ($8 + [8])
	*($0 + [8]) = $2
	*($0) = (int_64)0
	CALL eosio_assert([1], [272])
	CALL memcpy(($8 + [64]), $0, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy((($8 + [64]) | [8]), ($0 + [8]), [8])
	$1 = *($0)
	$4 = CALL db_store_i64(*((($8 + [8]) + [8])), (int_64)-4994024814571159552, $6, $1, ($8 + [64]), [16])
	*($0 + [20]) = $4
	$5 = (($8 + [8]) + [16])
	if ( (uint_64)($1 <= *($5)) ){ goto $label$5 }
	*($5) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($8 + [56]) = $0
	$1 = *($0)
	*($8 + [64]) = $1
	*($8 + [52]) = $4
	$7 = ($8 + [36])
	$5 = *($7)
	if ( ((uint_32)$5 >= (uint_32)*(($8 + [40]))) ){ goto $label$7 }
	*($5 + [8]) = $1
	*($5 + [16]) = $4
	*($8 + [56]) = [0]
	*($5) = $0
	*($7) = ($5 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $71(($8 + [32]), ($8 + [56]), ($8 + [64]), ($8 + [52]))
	
.LABEL $label$6
	$0 = *($8 + [56])
	*($8 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $89($0)
	
.LABEL $label$3
	$4 = *($8 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL $89($5)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($8 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($7) = $4
	CALL $89($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [80])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [112])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [96])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [104])), (int_64)-6712989628304982016, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $45($5, $6)
	*($9 + [4]) = [0]
	*($9) = $5
	$7 = *(*(CALL $46($9) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [112])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [1520])
	*($1) = *($8)
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [24]) = *(*($3 + [8]))
	*($1 + [16]) = *(*($3 + [12]))
	$3 = *($3 + [16])
	*($1 + [32]) = *($3)
	*(($1 + [56])) = *(($3 + [24]))
	*(($1 + [48])) = *(($3 + [16]))
	*(($1 + [40])) = *(($3 + [8]))
	$10 = $10
	$3 = ($10 + [-64])
	*([0] + [4]) = $3
	*($9 + [4]) = $3
	*($9) = $3
	*($9 + [8]) = $10
	CALL $73($9, $1)
	$7 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)-6712989628304982016, *(*($0 + [8])), $7, $3, [64])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	if ( (*($1) & [1]) ){ goto $label$2 }
	*($1) = [0]
	goto $label$1 
	
.LABEL $label$2
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$1
	$7 = *($0 + [12])
	$8 = *($0)
	if ( ($8 & [1]) ){ goto $label$4 }
	$9 = uint_32($8 >> [1])
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$3 }
	$10 = ($0 + [12])
	
.LOOP $label$5:
	if ( ((int_32)*((($0 + $7) + [1])) != (int_32)[32]) ){ goto $label$3 }
	$7 = ($7 + [1])
	*($10) = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$9 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$3 }
	$10 = ($0 + [8])
	$3 = ($0 + [12])
	
.LOOP $label$6:
	if ( ((int_32)*((*($10) + $7)) != (int_32)[32]) ){ goto $label$3 }
	$7 = ($7 + [1])
	*($3) = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$6 }
	
.LABEL $label$3
	$2 = ($0 + [1])
	$5 = ($0 + [12])
	$6 = ($0 + [8])
	$4 = ($0 + [4])
	$3 = ($8 & [1])
	if ( $3 ){ goto $label$8 }
	$11 = [5]
	goto $label$7 
	
.LABEL $label$8
	$11 = [0]
	
.LABEL $label$7
	
.LOOP $label$9:
	goto $label$39 
	
.LABEL $label$41
	CALL $92($1, int_32(($7 << [24]) >> [24]))
	$7 = *($5)
	$8 = *($0)
	$3 = ($8 & [1])
	if ( $3 ){ goto $label$24 }
	$11 = [5]
	goto $label$9 
	
.LABEL $label$40
	if ( ((int_32)$7 != (int_32)uint_32(($8 & [254]) >> [1])) ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$39
	if ( ((int_32)$7 == (int_32)*($4)) ){ goto $label$23 }
	$11 = [1]
	goto $label$9 
	
.LABEL $label$38
	$10 = ($7 + [1])
	*($5) = $10
	$9 = $2
	if ( ($3 == 0) ){ goto $label$20 }
	$11 = [2]
	goto $label$9 
	
.LABEL $label$37
	$9 = *($6)
	$11 = [3]
	goto $label$9 
	
.LABEL $label$36
	$7 = *(($9 + $7))
	if ( ((int_32)$7 != (int_32)[32]) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$35
	$10 = $7
	$11 = [7]
	goto $label$9 
	
.LABEL $label$34
	if ( $3 ){ goto $label$17 }
	$11 = [13]
	goto $label$9 
	
.LABEL $label$33
	$9 = uint_32(($8 & [254]) >> [1])
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$13 }
	$11 = [14]
	goto $label$9 
	
.LABEL $label$32
	$7 = ($10 + [1])
	$9 = ([0] - $9)
	$10 = ($0 + [12])
	$11 = [15]
	goto $label$9 
	
.LABEL $label$31
	if ( ((int_32)*(($0 + $7)) != (int_32)[32]) ){ goto $label$12 }
	$11 = [16]
	goto $label$9 
	
.LABEL $label$30
	*($10) = $7
	$7 = ($7 + [1])
	if ( ((int_32)($9 + $7) != (int_32)[1]) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$29
	$7 = *(($0 + [4]))
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$16 }
	$11 = [9]
	goto $label$9 
	
.LABEL $label$28
	$9 = ($0 + [8])
	$3 = ($0 + [12])
	$11 = [10]
	goto $label$9 
	
.LABEL $label$27
	if ( ((int_32)*((*($9) + $10)) != (int_32)[32]) ){ goto $label$14 }
	$11 = [12]
	goto $label$9 
	
.LABEL $label$26
	$10 = ($10 + [1])
	*($3) = $10
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$15 }
	$11 = [11]
	goto $label$9 
	
.LABEL $label$25
	return 
	
.LABEL $label$24
	$11 = [0]
	goto $label$9 
	
.LABEL $label$23
	$11 = [6]
	goto $label$9 
	
.LABEL $label$22
	$11 = [6]
	goto $label$9 
	
.LABEL $label$21
	$11 = [1]
	goto $label$9 
	
.LABEL $label$20
	$11 = [3]
	goto $label$9 
	
.LABEL $label$19
	$11 = [7]
	goto $label$9 
	
.LABEL $label$18
	$11 = [4]
	goto $label$9 
	
.LABEL $label$17
	$11 = [8]
	goto $label$9 
	
.LABEL $label$16
	$11 = [11]
	goto $label$9 
	
.LABEL $label$15
	$11 = [10]
	goto $label$9 
	
.LABEL $label$14
	$11 = [11]
	goto $label$9 
	
.LABEL $label$13
	$11 = [11]
	goto $label$9 
	
.LABEL $label$12
	$11 = [11]
	goto $label$9 
	
.LABEL $label$11
	$11 = [11]
	goto $label$9 
	
.LABEL $label$10
	$11 = [15]
	goto $label$9 
	$11
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$8 = *($0 + [12])
	$10 = *($0)
	if ( ($10 & [1]) ){ goto $label$2 }
	$10 = uint_32($10 >> [1])
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$1 }
	$11 = ($0 + [12])
	
.LOOP $label$3:
	if ( ((int_32)*((($0 + $8) + [1])) != (int_32)[32]) ){ goto $label$1 }
	$8 = ($8 + [1])
	*($11) = $8
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$1 }
	$11 = ($0 + [8])
	$4 = ($0 + [12])
	
.LOOP $label$4:
	if ( ((int_32)*((*($11) + $8)) != (int_32)[32]) ){ goto $label$1 }
	$8 = ($8 + [1])
	*($4) = $8
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$4 }
	
.LABEL $label$1
	$2 = ($0 + [1])
	$9 = (int_64)0
	$6 = ($0 + [12])
	$7 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$7:
	*($1) = $9
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$9 }
	if ( ((int_32)$8 != (int_32)uint_32($3 >> [1])) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	if ( ((int_32)$8 == (int_32)*($5)) ){ goto $label$6 }
	
.LABEL $label$8
	$11 = ($8 + [1])
	*($6) = $11
	$10 = $2
	if ( ($4 == 0) ){ goto $label$10 }
	$10 = *($7)
	
.LABEL $label$10
	$8 = *(($10 + $8))
	if ( ((int_32)$8 == (int_32)[32]) ){ goto $label$5 }
	CALL eosio_assert(((($8 + [-48]) & [255]) <= [10]), [2288])
	$9 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56) + (int_64)((int_64)*($1) * (int_64)10)) + (int_64)-48)
	$8 = *($6)
	goto $label$7 
	
.LABEL $label$6
	$11 = $8
	
.LABEL $label$5
	if ( $4 ){ goto $label$12 }
	$10 = uint_32($3 >> [1])
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$11 }
	$8 = ($11 + [1])
	$10 = ([0] - $10)
	$11 = ($0 + [12])
	
.LOOP $label$13:
	if ( ((int_32)*(($0 + $8)) != (int_32)[32]) ){ goto $label$11 }
	*($11) = $8
	$8 = ($8 + [1])
	if ( ((int_32)($10 + $8) != (int_32)[1]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$8 = *(($0 + [4]))
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$11 }
	$10 = ($0 + [8])
	$0 = ($0 + [12])
	
.LOOP $label$14:
	if ( ((int_32)*((*($10) + $11)) != (int_32)[32]) ){ goto $label$11 }
	$11 = ($11 + [1])
	*($0) = $11
	if ( ((int_32)$8 != (int_32)$11) ){ goto $label$14 }
	
.LABEL $label$11
}

void .FUNC _ZN12sieosmainnet3buyEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [160])
	*([0] + [4]) = $14
	$3 = ($0 + [16])
	$9 = (int_64)0
	$13 = [0]
	$7 = CALL db_lowerbound_i64(*($0 + [16]), *(($0 + [24])), (int_64)-7949128890230767616, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$13 = CALL $51($3, $7)
	
.LABEL $label$1
	$8 = (int_64)59
	$7 = [1488]
	$10 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$9 > (uint_64)(int_64)10) ){ goto $label$7 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$7
	$11 = (int_64)0
	if ( ((int_64)$9 == (int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$3
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)1)
	if ( ((int_64)$9 != (int_64)13) ){ goto $label$2 }
	*(($14 + [88])) = [0]
	*($14 + [56]) = $10
	*($14 + [72]) = (int_64)-1
	*($14 + [80]) = (int_64)0
	*($14 + [64]) = *($0)
	$7 = CALL $26(($14 + [56]), (int_64)5459781, [1056])
	$11 = *($7)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*($7 + [8])), [1184])
	$9 = *($2)
	$11 = (int_64)
	CALL eosio_assert(((int_64)$11($11 - $9)) > (int_64)-4611686018427387904), [1232])
	CALL eosio_assert(((int_64)$11 < (int_64)4611686018427387904), [1264])
	$5 = *(($0 + [80]))
	$12 = *(($0 + [84]))
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$8 }
	$7 = ($12 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$9:
	if ( (int_64)(*(*($7)) == 0) ){ goto $label$8 }
	$12 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	$7 = ($0 + [56])
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$11 }
	$4 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [56]) == (int_32)$7), [96])
	goto $label$10 
	
.LABEL $label$11
	$4 = CALL $44($7, CALL $fimport$6(*(($0 + [56])), *(($0 + [64])), (int_64)7235159537265672192, (int_64)0))
	CALL eosio_assert(((int_32)*($4 + [56]) == (int_32)$7), [96])
	
.LABEL $label$10
	$8 = *($4 + [48])
	$4 = ($0 + [16])
	$7 = CALL $51($3, CALL $fimport$8(*($4), *(($0 + [24])), (int_64)-7949128890230767616, (int_64)0))
	$11 = (int_64)
	if ( ((int_64)$11($11 - $8)) < (int_64)1) ){ goto $label$12 }
	$8 = (int_64)
	if ( (int_64)($8(*($7 + [24]) - *($0 + [8]))) == 0) ){ goto $label$12 }
	$9 = ((uint_64)((int_64)$9 * (int_64)$8) / (uint_64)$11)
	*($2) = $9
	
.LABEL $label$12
	CALL eosio_assert(((int_64)$9 > (int_64)0), [2096])
	$7 = [0]
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [944])
	CALL eosio_assert(((int_32)*($13 + [48]) == (int_32)$3), [640])
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$3()), [688])
	$9 = *($13)
	*(($4 = (($14 + [144]) + [8]))) = *(($2 + [8]))
	$11 = *($2)
	*((($14 + [24]) + [12])) = *((($14 + [144]) + [12]))
	*((($14 + [24]) + [8])) = *($4)
	*($14 + [144]) = $11
	*($14 + [28]) = *($14 + [148])
	*($14 + [24]) = *($14 + [144])
	CALL $58(($14 + [96]), $13, ($14 + [24]), (int_64)1414349828)
	$11 = *($14 + [96])
	CALL eosio_assert(((int_64)$9 == (int_64)*($13)), [864])
	*($14 + [152]) = (($14 + [96]) + [40])
	*($14 + [148]) = ($14 + [96])
	*($14 + [144]) = ($14 + [96])
	CALL $56(($14 + [144]), $13)
	CALL db_update_i64(*($13 + [52]), (int_64)0, ($14 + [96]), [40])
	$4 = ($0 + [32])
	if ( (uint_64)($9 <= *($4)) ){ goto $label$13 }
	*($4) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	CALL eosio_assert(((int_64)$11 > (int_64)0), [2128])
	CALL eosio_assert((uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [288])
	$9 = (int_64)5524804
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$4 = [0]
	
.LABEL $label$14
	CALL eosio_assert($4, [16])
	*(($14 + [48])) = [0]
	*($14 + [40]) = (int_64)0
	$7 = CALL strlen([2160])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$19 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$22 }
	*($14 + [40]) = ($7 << [1])
	$4 = (($14 + [40]) | [1])
	if ( $7 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$12 = (($7 + [16]) & [-16])
	$4 = CALL $88($12)
	*($14 + [40]) = ($12 | [1])
	*($14 + [48]) = $4
	*($14 + [44]) = $7
	
.LABEL $label$21
	CALL memcpy($4, [2160], $7)
	
.LABEL $label$20
	*(($4 + $7)) = [0]
	*($14 + [104]) = (int_64)1414349828
	*($14 + [96]) = $11
	CALL $97(($14 + [144]), ($14 + [40]))
	*(($14 + [16])) = *($14 + [104])
	*($14 + [8]) = *($14 + [96])
	CALL _ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $1, ($14 + [8]), ($14 + [144]))
	if ( ((*($14 + [144]) & [1]) == 0) ){ goto $label$23 }
	CALL $89(*($14 + [152]))
	
.LABEL $label$23
	if ( ((*($14 + [40]) & [1]) == 0) ){ goto $label$24 }
	CALL $89(*($14 + [48]))
	
.LABEL $label$24
	$0 = *($14 + [80])
	if ( ($0 == 0) ){ goto $label$25 }
	$12 = ($14 + [84])
	$7 = *($12)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$27 }
	
.LOOP $label$28:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$29 }
	CALL $89($4)
	
.LABEL $label$29
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$28 }
	$7 = *(($14 + [80]))
	goto $label$26 
	
.LABEL $label$27
	$7 = $0
	
.LABEL $label$26
	*($12) = $0
	CALL $89($7)
	
.LABEL $label$25
	*([0] + [4]) = ($14 + [160])
	return (unreachable)
	
.LABEL $label$19
	CALL $90(($14 + [40]))
}

void .FUNC _ZN12sieosmainnet3betEyyN5eosio5assetERK11checksum256y (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [240])
	*([0] + [4]) = $15
	*($15 + [176]) = $1
	*($15 + [168]) = $5
	CALL eosio_assert(((uint_64)(((int_64)$5 + (int_64)-2) <= (int_64)96) | (uint_64)(((int_64)$5 + (int_64)-102) <= (int_64)96)), [2192])
	CALL is_account($2)
	$10 = ($0 + [96])
	$12 = [0]
	$11 = CALL db_lowerbound_i64(*($0 + [96]), *(($0 + [104])), (int_64)-6712989628304982016, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$2 }
	CALL $45($10, $11)
	goto $label$1 
	
.LABEL $label$2
	$12 = [1]
	
.LABEL $label$1
	CALL eosio_assert($12, [2240])
	$5 = *($0)
	*($15 + [48]) = $0
	*($15 + [60]) = $3
	*($15 + [64]) = $4
	*($15 + [52]) = ($15 + [176])
	*($15 + [56]) = ($15 + [168])
	*($15 + [208]) = $5
	CALL eosio_assert(((int_64)*($10) == (int_64)CALL $fimport$3()), [208])
	*($15 + [8]) = $10
	*($15 + [12]) = ($15 + [48])
	*($15 + [16]) = ($15 + [208])
	*(($12 = CALL $88([80])) + [64]) = $10
	CALL $68(($15 + [8]), $12)
	*($15 + [184]) = $12
	$5 = *($12)
	*($15 + [8]) = $5
	$11 = *($12 + [68])
	*($15 + [200]) = $11
	$7 = ($0 + [124])
	$10 = *($7)
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [128]))) ){ goto $label$4 }
	*($10 + [8]) = $5
	*($10 + [16]) = $11
	*($15 + [184]) = [0]
	*($10) = $12
	*($7) = ($10 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $48(($0 + [120]), ($15 + [184]), ($15 + [8]), ($15 + [200]))
	
.LABEL $label$3
	$12 = *($15 + [184])
	*($15 + [184]) = [0]
	if ( ($12 == 0) ){ goto $label$5 }
	CALL $89($12)
	
.LABEL $label$5
	$6 = *(($0 + [80]))
	$11 = *(($0 + [84]))
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$6 }
	$12 = ($11 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$7:
	if ( (int_64)(*(*($12)) == 0) ){ goto $label$6 }
	$11 = $12
	$10 = ($12 + [-24])
	$12 = $10
	if ( ((int_32)($10 + $7) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$10 = ($0 + [56])
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$9 }
	$12 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [56]) == (int_32)$10), [96])
	goto $label$8 
	
.LABEL $label$9
	$12 = [0]
	$11 = CALL db_find_i64(*(($0 + [56])), *(($0 + [64])), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$8 }
	$12 = CALL $44($10, $11)
	CALL eosio_assert(((int_32)*($12 + [56]) == (int_32)$10), [96])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [944])
	CALL eosio_assert(((int_32)*($12 + [56]) == (int_32)$10), [640])
	CALL eosio_assert(((int_64)*(($0 + [56])) == (int_64)CALL $fimport$3()), [688])
	*($12 + [48]) = ((int_64)*($12 + [48]) + (int_64)*($3))
	$1 = *($12)
	CALL eosio_assert([1], [864])
	CALL eosio_assert([1], [272])
	CALL memcpy(($15 + [48]), $12, [8])
	CALL eosio_assert([1], [272])
	$11 = (($15 + [48]) | [8])
	CALL memcpy($11, ($12 + [16]), [32])
	CALL eosio_assert([1], [272])
	CALL memcpy((($15 + [48]) + [40]), ($12 + [48]), [8])
	$5 = (int_64)0
	CALL db_update_i64(*($12 + [60]), (int_64)0, ($15 + [48]), [48])
	$10 = ($0 + [72])
	if ( (uint_64)($1 <= *($10)) ){ goto $label$10 }
	*($10) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	CALL _ZN12sieosmainnet15set_roll_resultEyy($0, *($15 + [176]), (int_64)256)
	$1 = *($15 + [168])
	*(($15 + [76])) = *(($3 + [12]))
	*((($15 + [48]) + [24])) = *(($3 + [8]))
	*(($15 + [68])) = *(($3 + [4]))
	*($15 + [56]) = $2
	*($15 + [48]) = *($15 + [176])
	*($15 + [64]) = *($3)
	$10 = (uint_64)($1 <= (int_64)100)
	*($15 + [80]) = ( (CASTING uint_32)(uint_64 $1) ? [-1] : $10 )
	*($15 + [81]) = ( [-1] ? (CASTING uint_32)(uint_64 ((int_64)$1 + (int_64)156)) : $10 )
	*((($15 + [48]) + [72])) = *(($12 + [40]))
	*(($15 + [112])) = *(($12 + [32]))
	*((($15 + [48]) + [56])) = *(($12 + [24]))
	*($15 + [96]) = *($12 + [16])
	*(($15 + [152])) = *(($4 + [24]))
	*(($15 + [144])) = *(($4 + [16]))
	*(($15 + [136])) = *(($4 + [8]))
	*($15 + [128]) = *($4)
	$7 = ($15 + [128])
	$3 = (($15 + [48]) + [48])
	$4 = ($15 + [81])
	$6 = (($15 + [48]) + [32])
	$8 = (($15 + [48]) + [16])
	$9 = *($0)
	$2 = (int_64)59
	$12 = [928]
	$13 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$5 > (uint_64)(int_64)5) ){ goto $label$16 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$10 = ($10 + [165])
	goto $label$14 
	
.LABEL $label$16
	$1 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$12
	$12 = ($12 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$13 = ((int_64)$1 | (int_64)$13)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$11 }
	$5 = (int_64)0
	$2 = (int_64)59
	$12 = [2272]
	$14 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$5 > (uint_64)(int_64)9) ){ goto $label$22 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$10 = ($10 + [165])
	goto $label$20 
	
.LABEL $label$22
	$1 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$18
	$12 = ($12 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$14 = ((int_64)$1 | (int_64)$14)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$17 }
	*($15 + [16]) = $14
	*($15 + [8]) = $9
	*(($12 = CALL $88([16]))) = $9
	*($12 + [8]) = $13
	*(($10 = ($15 + [40]))) = [0]
	$0 = ($12 + [16])
	*(($15 + [32])) = $0
	*(($15 + [28])) = $0
	*($15 + [24]) = $12
	*($15 + [36]) = [0]
	*(($15 + [44])) = [0]
	CALL $14(($15 + [36]), [98])
	$12 = *($10)
	$10 = *($15 + [36])
	*($15 + [188]) = $10
	*($15 + [184]) = $10
	*($15 + [192]) = $12
	*($15 + [200]) = ($15 + [184])
	*($15 + [212]) = $11
	*($15 + [216]) = $8
	*($15 + [220]) = $6
	*($15 + [224]) = $4
	*($15 + [228]) = $3
	*($15 + [232]) = $7
	*($15 + [208]) = ($15 + [48])
	CALL $70(($15 + [208]), ($15 + [200]))
	CALL $16(($15 + [208]), ($15 + [8]))
	$12 = *($15 + [208])
	CALL send_inline($12, (*($15 + [212]) - $12))
	$12 = *($15 + [208])
	if ( ($12 == 0) ){ goto $label$23 }
	*($15 + [212]) = $12
	CALL $89($12)
	
.LABEL $label$23
	$12 = *($15 + [36])
	if ( ($12 == 0) ){ goto $label$24 }
	*(($15 + [40])) = $12
	CALL $89($12)
	
.LABEL $label$24
	$12 = *($15 + [24])
	if ( ($12 == 0) ){ goto $label$25 }
	*(($15 + [28])) = $12
	CALL $89($12)
	
.LABEL $label$25
	*([0] + [4]) = ($15 + [240])
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1888])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $14($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [384])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*((($4 + [32]) + [12])) = *(($1 + [20]))
	*(($3 = (($4 + [32]) + [8]))) = *(($1 + [16]))
	*($4 + [32]) = *($1 + [8])
	*($4 + [36]) = *(($1 + [12]))
	$2 = *($1)
	CALL $97(($4 + [16]), ($1 + [24]))
	*((($4 + [48]) + [8])) = *($3)
	*($4 + [48]) = *($4 + [32])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($3 = (($4 + [80]) + [8]))) = *((($4 + [48]) + [8]))
	*($4 + [80]) = *($4 + [48])
	CALL $97(($4 + [64]), ($4 + [16]))
	*(($4 + [8])) = *($3)
	*($4) = *($4 + [80])
	CALL void $0((int_32 $2), (int_64 $4), (int_32 ($4 + [64])), (int_32 $1))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $89(*($4 + [72]))
	
.LABEL $label$2
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $89(*($4 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [96])
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $97(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $97(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $89(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $89(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [384])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [384])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $59(*($1), ($0 + [32]))
}

void .FUNC $101 ()
{
	(unreachable)
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $89 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $88 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10812])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [10700])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [10508]
	$1 = (((int_32)$2 * (int_32)[12]) + [10508])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $86 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10806]) == 0) ){ goto $label$2 }
	$7 = *([0] + [10808])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [10806]) = [1]
	$7 = ($7 << [16])
	*([0] + [10808]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10808])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [10808]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [10806]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [10806]) = [1]
	$3 = ($3 << [16])
	*([0] + [10808]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10808])
	
.LABEL $label$8
	*([0] + [10808]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $86($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [10720])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $85([2316], $0)
}

int_64 .FUNC _ZNK12sieosmainnet10merge_seedERK11checksum256S2_ (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$2 = ($2 + [31])
	$4 = (int_64)0
	$3 = [0]
	
.LOOP $label$1:
	$4 = ((int_64)(CASTING int_64)(int_32 ((((int_32)*($2) ^ (int_32)*($1)) & [255]) << ($3 & [56]))) ^ (int_64)$4)
	$1 = ($1 + [1])
	$2 = ($2 + [-1])
	$3 = ($3 + [8])
	if ( ((int_32)$3 != (int_32)[256]) ){ goto $label$1 }
	return $4
}

int_64 .FUNC _ZNK12sieosmainnet9get_bonusEy (int_32 $0, int_64 $1)
{
	return ((uint_64)$1 % (uint_64)(int_64)100)
}

void .FUNC _ZN12sieosmainnet9deal_withEN5eosio11multi_indexILy11733754445404569600ENS_5offerEJEE14const_iteratorERK11checksum256 (int_32 $0, int_32 $1, int_32 $2)
{
}

void .FUNC _ZNK12sieosmainnet10parse_memoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	CALL memset($0, [0], [32])
	$4 = ($3 & [1])
	$3 = *($2)
	$3 = ( *($2 + [4]) ? uint_32($3 >> [1]) : $4 )
	if ( ($3 == 0) ){ goto $label$1 }
	$4 = ( *($2 + [8]) ? ($2 + [1]) : $4 )
	
.LOOP $label$2:
	*(($2 = ($0 + ($5 & [31])))) = ((int_32)*($2) ^ (int_32)*(($4 + $5)))
	$5 = ($5 + [1])
	if ( ($5 <= $3) ){ goto $label$2 }
	
.LABEL $label$1
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [352])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $88([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [384])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [384])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $71(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $89($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[31]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [32])
	*($0 + [4]) = (*($0 + [4]) + [32])
	return $0
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [272])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [272])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[31]), [272])
	CALL memcpy(*($2 + [4]), $3, [32])
	*($2 + [4]) = (*($2 + [4]) + [32])
	$0 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[31]), [272])
	CALL memcpy(*($2 + [4]), $0, [32])
	*($2 + [4]) = (*($2 + [4]) + [32])
}

void .FUNC $71 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $88(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $96($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $89($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $89($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN12sieosmainnet10betreceiptERK7rec_bet (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
}

void .FUNC _ZN12sieosmainnet7receiptERK10rec_reveal (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
}

int_64 .FUNC _ZNK12sieosmainnet11grief_ratioEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	float_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [48])
	*([0] + [4]) = $11
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [1488]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)10) ){ goto $label$6 }
	$1 = *($5)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$1 = ($1 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((int_64)$7 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$6 = ((int_64)$6 + (int_64)-5)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$1 }
	*(($11 + [40])) = [0]
	*($11 + [8]) = $8
	*($11 + [24]) = (int_64)-1
	*($11 + [32]) = (int_64)0
	*($11 + [16]) = *($0)
	$7 = *(CALL $26(($11 + [8]), (int_64)5459781, [1056]))
	$2 = *(($0 + [80]))
	$4 = *(($0 + [84]))
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$7 }
	$5 = ($4 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$8:
	if ( (int_64)(*(*($5)) == 0) ){ goto $label$7 }
	$4 = $5
	$1 = ($5 + [-24])
	$5 = $1
	if ( ((int_32)($1 + $3) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	$5 = ($0 + [56])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	$1 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$5), [96])
	goto $label$9 
	
.LABEL $label$10
	$1 = CALL $44($5, CALL $fimport$6(*(($0 + [56])), *(($0 + [64])), (int_64)7235159537265672192, (int_64)0))
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$5), [96])
	
.LABEL $label$9
	$9 = *($1 + [48])
	$5 = CALL $51(($0 + [16]), CALL $fimport$8(*($0 + [16]), *(($0 + [24])), (int_64)-7949128890230767616, (int_64)0))
	$10 = (float_64)1
	$7 = (int_64)
	if ( ((int_64)$7($7 - $9)) < (int_64)1) ){ goto $label$11 }
	$9 = (int_64)
	if ( (int_64)($9(*($5 + [24]) - *($0 + [8]))) == 0) ){ goto $label$11 }
	$10 = ((float_64)(CASTING float_64)(int_64 $7) / (float_64)(CASTING float_64)(uint_64 $9))
	
.LABEL $label$11
	$4 = *($11 + [32])
	if ( ($4 == 0) ){ goto $label$12 }
	$3 = ($11 + [36])
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$14 }
	
.LOOP $label$15:
	$5 = ($5 + [-24])
	$1 = *($5)
	*($5) = [0]
	if ( ($1 == 0) ){ goto $label$16 }
	CALL $89($1)
	
.LABEL $label$16
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$15 }
	$5 = *(($11 + [32]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $4
	
.LABEL $label$13
	*($3) = $4
	CALL $89($5)
	
.LABEL $label$12
	*([0] + [4]) = ($11 + [48])
	return $10
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = (*([0] + [4]) - [96])
	$7 = $5
	*([0] + [4]) = $5
	$2 = *($1 + [4])
	$6 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	$5 = ($5 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $1)
	
.LABEL $label$1
	*(($3 = ($7 + [24]))) = (int_64)0
	*(($4 = ($7 + [16]))) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($7) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[31]), [384])
	CALL memcpy($7, $5, [32])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	*(($1 = (($7 + [32]) + [24]))) = *($3)
	*(($5 = (($7 + [32]) + [16]))) = *($4)
	*($7 + [40]) = *($7 + [8])
	*($7 + [32]) = *($7)
	*((($7 + [64]) + [24])) = *($1)
	*((($7 + [64]) + [16])) = *($5)
	*($7 + [72]) = *($7 + [40])
	*($7 + [64]) = *($7 + [32])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($1) + $6))
	
.LABEL $label$6
	CALL void $1((int_32 ($7 + [64])), (int_32 $6))
	*([0] + [4]) = ($7 + [96])
	return [1]
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [288])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [16])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [64]) = $0
	$1 = ($0 + $2)
	*($5 + [72]) = $1
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [384])
	CALL memcpy(($5 + [8]), $0, [8])
	$4 = ($0 + [8])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [384])
	CALL memcpy((($5 + [8]) + [8]), $4, [8])
	$4 = ($0 + [16])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [384])
	CALL memcpy((($5 + [8]) + [16]), $4, [8])
	*($5 + [68]) = ($0 + [24])
	CALL $59(($5 + [64]), (($5 + [8]) + [24]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $60(($5 + [64]), ($5 + [8]))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $89(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [80])
	return [1]
}

void .FUNC _ZN12sieosmainnet8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	if ( ((int_64)*($0) != (int_64)$2) ){ goto $label$2 }
	$2 = *(($3 + [8]))
	*((($7 + [64]) + [8])) = $2
	$6 = *($3)
	*(($7 + [8])) = $2
	*($7 + [64]) = $6
	*($7 + [4]) = *($7 + [68])
	*($7) = *($7 + [64])
	CALL _ZN12sieosmainnet4sellEyN5eosio5assetE($0, $1, $7)
	goto $label$1 
	
.LABEL $label$2
	*(($5 = (($7 + [48]) + [8]))) = *(($3 + [8]))
	*($7 + [48]) = *($3)
	CALL $97(($7 + [32]), $4)
	*((($7 + [16]) + [8])) = *($5)
	*($7 + [16]) = *($7 + [48])
	CALL _ZN5eosio5token8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $1, $2, ($7 + [16]), ($7 + [32]))
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $89(*($7 + [40]))
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

void .FUNC _ZN12sieosmainnet10buyreceiptERK7rec_buy (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
}

void .FUNC _ZN12sieosmainnet11sellreceiptERK8rec_sell (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [288])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [16])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $62(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $63(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $89(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC _ZN12sieosmainnet6createEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	$3 = *(($2 + [8]))
	*((($5 + [16]) + [8])) = $3
	$4 = *($2)
	*(($5 + [8])) = $3
	*($5 + [16]) = $4
	*($5 + [4]) = *($5 + [20])
	*($5) = *($5 + [16])
	CALL _ZN5eosio5token6createEyNS_5assetE($0, $1, _ZN5eosio5token6createEyNS_5assetE)
	*([0] + [4]) = ($5 + [32])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [256])
	*([0] + [4]) = $9
	*(($9 + [144])) = $0
	*(($9 + [152])) = (int_64)-1
	$6 = (int_64)0
	*(($9 + [160])) = (int_64)0
	*($9 + [128]) = (int_64)12500000
	*($9 + [120]) = $0
	*($9 + [136]) = $0
	*(($9 + [168])) = [0]
	*($9 + [176]) = $0
	*(($9 + [184])) = $0
	*(($9 + [192])) = (int_64)-1
	*(($9 + [200])) = [0]
	*(($9 + [204])) = [0]
	*(($9 + [208])) = [0]
	*($9 + [216]) = $0
	*(($9 + [224])) = $0
	*(($9 + [232])) = (int_64)-1
	*(($9 + [240])) = [0]
	*(($9 + [244])) = [0]
	*(($9 + [248])) = [0]
	$5 = (int_64)59
	$4 = [1488]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$9 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1504]
	$7 = (int_64)0
	
.LOOP $label$10:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$15 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$3 = ($3 + [165])
	goto $label$13 
	
.LABEL $label$15
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$12
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$11
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$10 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$9 }
	*($9 + [116]) = [0]
	*($9 + [112]) = [1]
	*($9 + [8 align=4]) = *($9 + [112])
	CALL $32(($9 + [120]), ($9 + [8]))
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $43(($9 + [120]))
	*([0] + [4]) = ($9 + [256])
	return (unreachable)
	
.LABEL $label$7
	if ( ((int_64)$2 > (int_64)5031766152489992191) ){ goto $label$21 }
	if ( ((int_64)$2 == (int_64)-4992623624440512512) ){ goto $label$20 }
	if ( ((int_64)$2 == (int_64)-3841130677495922688) ){ goto $label$19 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$16 }
	*($9 + [92]) = [0]
	*($9 + [88]) = [2]
	*($9 + [32 align=4]) = *($9 + [88])
	CALL $32(($9 + [120]), ($9 + [32]))
	goto $label$16 
	
.LABEL $label$21
	if ( ((int_64)$2 == (int_64)8516769789752901632) ){ goto $label$18 }
	if ( ((int_64)$2 == (int_64)8421045207927095296) ){ goto $label$17 }
	if ( ((int_64)$2 != (int_64)5031766152489992192) ){ goto $label$16 }
	*($9 + [108]) = [0]
	*($9 + [104]) = [3]
	*($9 + [16 align=4]) = *($9 + [104])
	CALL $34(($9 + [120]), ($9 + [16]))
	goto $label$16 
	
.LABEL $label$20
	*($9 + [68]) = [0]
	*($9 + [64]) = [4]
	*($9 + [56 align=4]) = *($9 + [64])
	CALL $42(($9 + [120]), ($9 + [56]))
	goto $label$16 
	
.LABEL $label$19
	*($9 + [76]) = [0]
	*($9 + [72]) = [5]
	*($9 + [48 align=4]) = *($9 + [72])
	CALL $34(($9 + [120]), ($9 + [48]))
	goto $label$16 
	
.LABEL $label$18
	*($9 + [100]) = [0]
	*($9 + [96]) = [6]
	*($9 + [24 align=4]) = *($9 + [96])
	CALL $36(($9 + [120]), ($9 + [24]))
	goto $label$16 
	
.LABEL $label$17
	*($9 + [84]) = [0]
	*($9 + [80]) = [7]
	*($9 + [40 align=4]) = *($9 + [80])
	CALL $39(($9 + [120]), ($9 + [40]))
	
.LABEL $label$16
	CALL eosio_exit([0])
}

void .FUNC _ZN12sieosmainnet10onTransferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [240])
	*([0] + [4]) = $14
	if ( ((int_64)*($0) != (int_64)$2) ){ goto $label$3 }
	CALL require_auth($1)
	$11 = *($3 + [8])
	$7 = [0]
	$9 = *($3)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$4 }
	$2 = (uint_64)$11 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$7 = [0]
	
.LABEL $label$4
	CALL eosio_assert($7, [1904])
	CALL eosio_assert(((int_64)$11 == (int_64)1397703940), [2032])
	CALL eosio_assert(((int_64)$9 > (int_64)0), [2064])
	CALL $97(($14 + [192]), $4)
	*($14 + [204]) = [0]
	*($14 + [184]) = [0]
	*($14 + [176]) = (int_64)0
	CALL $65(($14 + [192]), ($14 + [176]))
	$8 = *($14 + [176])
	$7 = CALL strlen([1936])
	if ( ((int_32)$7 != (int_32)( *($14 + [180]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$17 }
	if ( (CALL $95(($14 + [176]), [0], [-1], [1936], $7) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$8 = *($14 + [176])
	$7 = CALL strlen([1968])
	if ( ((int_32)$7 != (int_32)( *($14 + [180]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$18 }
	if ( (CALL $95(($14 + [176]), [0], [-1], [1968], $7) == 0) ){ goto $label$15 }
	
.LABEL $label$18
	$6 = *($0)
	$2 = (int_64)0
	$9 = (int_64)59
	$8 = [928]
	$10 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$24 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$7 = ($7 + [165])
	goto $label$22 
	
.LABEL $label$24
	$11 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$20
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$19 }
	$2 = (int_64)0
	$9 = (int_64)59
	$8 = [1488]
	$12 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$30 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$7 = ($7 + [165])
	goto $label$28 
	
.LABEL $label$30
	$11 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$26
	$8 = ($8 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$12 = ((int_64)$11 | (int_64)$12)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$25 }
	$2 = (int_64)0
	$9 = (int_64)59
	$8 = [1504]
	$1 = (int_64)0
	
.LOOP $label$31:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$36 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$7 = ($7 + [165])
	goto $label$34 
	
.LABEL $label$36
	$11 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$35
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$34
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$33
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$32
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$1 = ((int_64)$11 | (int_64)$1)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$31 }
	$2 = (int_64)0
	$11 = (int_64)59
	$8 = [1952]
	$13 = (int_64)0
	
.LOOP $label$37:
	$9 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$38 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$7 = ($7 + [165])
	goto $label$39 
	
.LABEL $label$40
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$38
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$13 = ((int_64)$9 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$37 }
	*(($14 + [40])) = [0]
	*($14 + [32]) = (int_64)0
	$8 = CALL strlen([2000])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$43 }
	*($14 + [32]) = ($8 << [1])
	$7 = (($14 + [32]) | [1])
	if ( $8 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	$4 = (($8 + [16]) & [-16])
	$7 = CALL $88($4)
	*($14 + [32]) = ($4 | [1])
	*($14 + [40]) = $7
	*($14 + [36]) = $8
	
.LABEL $label$42
	CALL memcpy($7, [2000], $8)
	
.LABEL $label$41
	*(($7 + $8)) = [0]
	*((($14 + [48]) + [28])) = *(($3 + [12]))
	*((($14 + [48]) + [24])) = *(($3 + [8]))
	*((($14 + [48]) + [20])) = *(($3 + [4]))
	*($14 + [56]) = $13
	*($14 + [48]) = *($0)
	*($14 + [64]) = *($3)
	$8 = (($14 + [32]) + [8])
	*(($14 + [88])) = *($8)
	*($14 + [80]) = *($14 + [32])
	*($14 + [32]) = [0]
	*($14 + [36]) = [0]
	*($8) = [0]
	*($14 + [104]) = $12
	*($14 + [112]) = $1
	*(($8 = CALL $88([16]))) = $6
	*($8 + [8]) = $10
	*((($14 + [104]) + [32])) = [0]
	$7 = ($8 + [16])
	*((($14 + [104]) + [24])) = $7
	*((($14 + [104]) + [20])) = $7
	*($14 + [120]) = $8
	*($14 + [132]) = [0]
	*((($14 + [104]) + [36])) = [0]
	$8 = *($14 + [80])
	$7 = ( *((($14 + [48]) + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($7 + [32])
	$2 = (CASTING uint_64)(uint_32 $7)
	$7 = (($14 + [104]) + [28])
	
.LOOP $label$44:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$44 }
	if ( ($8 == 0) ){ goto $label$46 }
	CALL $14($7, $8)
	$7 = *(($14 + [136]))
	$8 = *(($14 + [132]))
	goto $label$45 
	
.LABEL $label$46
	$7 = [0]
	$8 = [0]
	
.LABEL $label$45
	*($14 + [212]) = $8
	*($14 + [208]) = $8
	*($14 + [216]) = $7
	*($14 + [224]) = ($14 + [208])
	*($14 + [232]) = ($14 + [48])
	CALL $15(($14 + [232]), ($14 + [224]))
	CALL $16(($14 + [208]), ($14 + [104]))
	$8 = *($14 + [208])
	CALL send_inline($8, (*($14 + [212]) - $8))
	$8 = *($14 + [208])
	if ( ($8 == 0) ){ goto $label$47 }
	*($14 + [212]) = $8
	CALL $89($8)
	
.LABEL $label$47
	$8 = *($14 + [132])
	if ( ($8 == 0) ){ goto $label$48 }
	*(($14 + [136])) = $8
	CALL $89($8)
	
.LABEL $label$48
	$8 = *($14 + [120])
	if ( ($8 == 0) ){ goto $label$49 }
	*(($14 + [124])) = $8
	CALL $89($8)
	
.LABEL $label$49
	if ( ((*(($14 + [80])) & [1]) == 0) ){ goto $label$50 }
	CALL $89(*(($14 + [88])))
	
.LABEL $label$50
	if ( ((*($14 + [32]) & [1]) == 0) ){ goto $label$9 }
	CALL $89(*(($14 + [40])))
	goto $label$9 
	
.LABEL $label$16
	CALL $64(($14 + [192]), ($14 + [32]))
	*($14 + [104]) = (int_64)0
	*($14 + [112]) = [0]
	$8 = *($14 + [192])
	if ( ((int_32)*(($14 + [204])) == (int_32)( *($14 + [196]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$51 }
	CALL $65(($14 + [192]), ($14 + [104]))
	
.LABEL $label$51
	$8 = [0]
	CALL memset(($14 + [48]), [0], [32])
	$7 = ($7 & [1])
	$7 = *($14 + [104])
	$4 = ( *($14 + [108]) ? uint_32($7 >> [1]) : $7 )
	if ( ($4 == 0) ){ goto $label$52 }
	$5 = ( *(($14 + [112])) ? (($14 + [104]) | [1]) : $7 )
	
.LOOP $label$53:
	*(($7 = (($14 + [48]) + ($8 & [31])))) = ((int_32)*($7) ^ (int_32)*(($5 + $8)))
	$8 = ($8 + [1])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$53 }
	
.LABEL $label$52
	*(($14 + [216])) = [0]
	*($14 + [208]) = (int_64)0
	$8 = CALL strlen([1952])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$14 }
	*($14 + [208]) = ($8 << [1])
	$7 = (($14 + [208]) | [1])
	if ( $8 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$8 = *($4)
	if ( ($8 & [1]) ){ goto $label$11 }
	$8 = uint_32($8 >> [1])
	goto $label$10 
	
.LABEL $label$14
	$4 = (($8 + [16]) & [-16])
	$7 = CALL $88($4)
	*($14 + [208]) = ($4 | [1])
	*($14 + [216]) = $7
	*($14 + [212]) = $8
	
.LABEL $label$13
	CALL memcpy($7, [1952], $8)
	
.LABEL $label$12
	*(($7 + $8)) = [0]
	$8 = *($14 + [192])
	if ( ((int_32)*(($14 + [204])) == (int_32)( *($14 + [196]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$54 }
	CALL $65(($14 + [192]), ($14 + [208]))
	
.LABEL $label$54
	$8 = ( *($14 + [216]) ? (($14 + [208]) | [1]) : (*($14 + [208]) & [1]) )
	$7 = [-1]
	
.LOOP $label$55:
	$4 = ($8 + $7)
	$5 = ($7 + [1])
	$7 = $5
	if ( *(($4 + [1])) ){ goto $label$55 }
	$12 = (CASTING uint_64)(uint_32 $5)
	$2 = (int_64)0
	$11 = (int_64)59
	$10 = (int_64)0
	
.LOOP $label$56:
	$9 = (int_64)0
	if ( ((uint_64)$2 >= (uint_64)$12) ){ goto $label$57 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$7 = ($7 + [165])
	goto $label$58 
	
.LABEL $label$59
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$57
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$61 }
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	goto $label$60 
	
.LABEL $label$61
	$9 = ((int_64)$9 & (int_64)15)
	
.LABEL $label$60
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$56 }
	$11 = *(($3 + [8]))
	*((($14 + [160]) + [8])) = $11
	$2 = *($3)
	*(($14 + [8])) = $11
	*($14 + [160]) = $2
	$11 = *($14 + [32])
	*($14) = $2
	CALL _ZN12sieosmainnet3betEyyN5eosio5assetERK11checksum256y($0, $1, $10, $14, ($14 + [48]), $11)
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$62 }
	CALL $89(*((($14 + [208]) + [8])))
	
.LABEL $label$62
	if ( ((*($14 + [104]) & [1]) == 0) ){ goto $label$9 }
	CALL $89(*(($14 + [112])))
	goto $label$9 
	
.LABEL $label$11
	$8 = *($4 + [4])
	
.LABEL $label$10
	if ( ($8 <= [8]) ){ goto $label$63 }
	CALL $98(($14 + [48]), $4, [4], [3], $4)
	$7 = [0]
	$8 = *($14 + [48])
	$5 = CALL strlen([1984])
	if ( ((int_32)$5 != (int_32)( *($14 + [52]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$64 }
	$7 = (CALL $95(($14 + [48]), [0], [-1], [1984], $5) == 0)
	$8 = *($14 + [48])
	
.LABEL $label$64
	if ( (($8 & [1]) == 0) ){ goto $label$65 }
	CALL $89(*($14 + [56]))
	
.LABEL $label$65
	if ( ($7 == 0) ){ goto $label$63 }
	CALL $94($4, [0], [8])
	if ( (*($4) & [1]) ){ goto $label$67 }
	$8 = ($4 + [1])
	goto $label$66 
	
.LABEL $label$67
	$8 = *($4 + [8])
	
.LABEL $label$66
	$7 = [-1]
	
.LOOP $label$68:
	$4 = ($8 + $7)
	$5 = ($7 + [1])
	$7 = $5
	if ( *(($4 + [1])) ){ goto $label$68 }
	$12 = (CASTING uint_64)(uint_32 $5)
	$2 = (int_64)0
	$11 = (int_64)59
	$10 = (int_64)0
	
.LOOP $label$69:
	$9 = (int_64)0
	if ( ((uint_64)$2 >= (uint_64)$12) ){ goto $label$70 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$72 }
	$7 = ($7 + [165])
	goto $label$71 
	
.LABEL $label$72
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$71
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$70
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$74 }
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	goto $label$73 
	
.LABEL $label$74
	$9 = ((int_64)$9 & (int_64)15)
	
.LABEL $label$73
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$69 }
	$1 = ( $10 ? $1 : CALL is_account($10) )
	
.LABEL $label$63
	$2 = *(($3 + [8]))
	*((($14 + [144]) + [8])) = $2
	$11 = *($3)
	*((($14 + [16]) + [8])) = $2
	*($14 + [144]) = $11
	*($14 + [20]) = *($14 + [148])
	*($14 + [16]) = *($14 + [144])
	CALL _ZN12sieosmainnet3buyEyN5eosio5assetE($0, $1, ($14 + [16]))
	
.LABEL $label$9
	if ( ((*($14 + [176]) & [1]) == 0) ){ goto $label$75 }
	CALL $89(*(($14 + [184])))
	
.LABEL $label$75
	if ( ((*($14 + [192]) & [1]) == 0) ){ goto $label$3 }
	CALL $89(*($14 + [200]))
	
.LABEL $label$3
	*([0] + [4]) = ($14 + [240])
	return (unreachable)
	
.LABEL $label$2
	CALL $90(($14 + [32]))
	
.LABEL $label$1
	CALL $90(($14 + [208]))
	(unreachable)
}