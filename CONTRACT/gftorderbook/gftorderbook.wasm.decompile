(data (i32.const 8240) "failed to allocate pages\00Permission denied. Cannot set state\00")
(data (i32.const 8304) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 8384) "%d\00Seller is not a gyftie account.\00")
(data (i32.const 8432) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 8448) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 8464) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(data (i32.const 8480) "Contract is paused - no actions allowed.\00")
(data (i32.const 8521) "Permission denied.\00")
(data (i32.const 8540) "Withdrawal from GFT Order Book\00")
(data (i32.const 8571) "Bucket ID is not found.\00")
(data (i32.const 8595) "Proximity bucket maximum must be greater than zero.\00")
(data (i32.const 8647) "New bucket overlaps with existing bucket.\00")
(data (i32.const 8689) "Buyer is not a gyftie account.\00")
(data (i32.const 8720) "Instant sell order functionality is currently undergoing maintenance.\00")
(data (i32.const 8790) "Current user does not have a balance.\00")
(data (i32.const 8828) "Overdrawn balance for reassignment.\00")
(data (i32.const 8864) "Reassigned asset does not match token contract.\00")
(data (i32.const 8912) "Buy Order ID does not exist.\00")
(data (i32.const 8941) "Cancelled Buy Order\00")
(data (i32.const 8961) "Sell Order ID does not exist.\00")
(data (i32.const 8991) "Cancelled Sell Order\00")
(data (i32.const 9012) "FOR STAKING\00")
(data (i32.const 9024) "Funds are only accepted from Gyftie contract or valid counter token contract.\00")
(data (i32.const 9102) "Funds are only accepted in GFT symbol or valid counter token symbol.\00")
(data (i32.const 9171) "Invalid symbol from gyftie contract.\00")
(data (i32.const 9208) "Invalid symbol from counter token contract.\00")
(data (i32.const 9252) "Transfer does not match existing token contract.\00")
(data (i32.const 9301) "\n\00")
(data (i32.const 9303) " deposited:       \00")
(data (i32.const 9322) " funds available: \00")
(data (i32.const 9341) "write\00")
(data (i32.const 9347) "string is too long to be a valid symbol_code\00")
(data (i32.const 9392) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9445) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9494) "invalid symbol name\00")
(data (i32.const 9514) "attempt to add asset with different symbol\00")
(data (i32.const 9557) "addition underflow\00")
(data (i32.const 9576) "addition overflow\00")
(data (i32.const 9594) "cannot increment end iterator\00")
(data (i32.const 9624) "Sender does not have a balance within the contract.\00")
(data (i32.const 9676) "Insufficient balance.\00")
(data (i32.const 9698) "cannot pass end iterator to modify\00")
(data (i32.const 9733) "object passed to modify is not in multi_index\00")
(data (i32.const 9779) "cannot modify objects in table of another contract\00")
(data (i32.const 9830) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9889) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 9948) "---------- Payment -----------\n\00")
(data (i32.const 9980) "Token Contract   : \00")
(data (i32.const 10000) "From             : \00")
(data (i32.const 10020) "To               : \00")
(data (i32.const 10040) "Amount           : \00")
(data (i32.const 10060) "Memo             : \00")
(data (i32.const 10080) "---------- End Payment -------\n\00")
(data (i32.const 10112) "%lld%s%s %s\00")
(data (i32.const 10124) ".\00")
(data (i32.const 10127) "cannot pass end iterator to erase\00")
(data (i32.const 10161) "error reading iterator\00")
(data (i32.const 10184) "object passed to erase is not in multi_index\00")
(data (i32.const 10229) "cannot erase objects in table of another contract\00")
(data (i32.const 10279) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10332) "attempt to subtract asset with different symbol\00")
(data (i32.const 10380) "subtraction underflow\00")
(data (i32.const 10402) "subtraction overflow\00")
(data (i32.const 10423) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 10474) "cannot create objects in table of another contract\00")
(data (i32.const 10525) "singleton does not exist\00")
(data (i32.const 10550) "Type 2 financial incentive paid to market makers. See \'How Gyftie Works\' document - ask us for link.\00")
(data (i32.const 10651) "GFT\00")
(data (i32.const 10655) "cannot decrement end iterator when the index is empty\00")
(data (i32.const 10709) "cannot decrement iterator at beginning of index\00")
(data (i32.const 10757) "Cannot process order book. Account \00")
(data (i32.const 10793) " must upgrade profile to version 2.\00")
(data (i32.const 10829) " User \00")
(data (i32.const 10836) " not found in profile table 2.\00")
(data (i32.const 10867) "get\00")
(data (i32.const 10871) "read\00")
(data (i32.const 10876) "\80*\00\00")
(data (i32.const 10880) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 10913) "Price must be greater than zero.\00")
(data (i32.const 10946) "GFT amount must be greater than zero.\00")
(data (i32.const 10984) "Order value is less than 0.0001 EOS. Increase amount.\00")
(data (i32.const 11038) "divide by zero\00")
(data (i32.const 11053) "signed division overflow\00")
(data (i32.const 11078) "next primary key in table is at autoincrement limit\00")
(data (i32.const 11130) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 11184) "cannot decrement iterator at beginning of table\00")
(data (i32.const 11232) "User does not have a balance of required asset.\00")
(data (i32.const 11280) "Insufficient funds.\00")
(data (i32.const 11300) "multiplication overflow\00")
(data (i32.const 11324) "multiplication underflow\00")
(data (i32.const 11349) "Trade minus Taker Fees\00")
(data (i32.const 11372) "Trade\00")
(data (i32.const 11378) "Market Maker Reward\00")
(data (i32.const 11400) "\0d\00\00\00")
(data (i32.const 11404) "Net purchases (\00")
(data (i32.const 11420) ") must be greater than the sell amount of \00")
(data (i32.const 11463) " Permit :: permit, permission : \00")
(data (i32.const 11496) " Contract : \00")
(data (i32.const 11509) " Account : \00")
(data (i32.const 11521) " Permit::LOCK_ACTIVITY: \00")
(data (i32.const 11546) " Permit::ANY_SIGNATORY: \00")
(data (i32.const 11571) "Account is not an valid EOS account.\00")
(data (i32.const 11608) "Receiver is not a valid EOS account.\00")
(data (i32.const 11645) "Account \00")
(data (i32.const 11654) " must upgrade profile.\00")
(data (i32.const 11677) " does not have a profile.\00")
(data (i32.const 11703) "Receiver account \00")
(data (i32.const 11721) "Account is locked from performing activity.\00")
(data (i32.const 11765) "Contract is paused.\00")
(data (i32.const 11785) " has an active challenge.\00")
(data (i32.const 11811) "Receiver \00")
(data (i32.const 11821) "Account cannot challenge itself.\00")
(data (i32.const 11854) "Validator cannot validate an account they gyfted.\00")
(data (i32.const 11904) "Validator cannot validate their gyfter.\00")
(data (i32.const 11944) " \n Signatory Activity \n\00")
(data (i32.const 11968) " Signed by signatory: \00")
(data (i32.const 11991) "Transaction requires the approval of a signatory.\00")
(data (i32.const 12041) "\n Lock Activity \n\00")
(data (i32.const 12059) " \nAfter require auth\n\00")
(data (i32.const 12081) "Account is not a valid EOS account.\00")
(data (i32.const 12117) "Account does not have a Gyftie profile.\00")
(data (i32.const 12157) "Account is not a valid EOS account: \00")
(data (i32.const 12194) "Gyftie oracle is not set.\00")
(data (i32.const 12220) "Transaction requires the approval of the Gyftie account or a signatory.\00")
(data (i32.const 12292) " must be verified (with badge) to sell GFT.\00")
(data (i32.const 12336) " cannot sell. Selling amount must be less than net purchases. Net purchases: \00")
(data (i32.const 12414) "; Attempted selling amount: \00")
(data (i32.const 12443) "Buying GFT for the first time: \00")
(data (i32.const 12475) "Buyer\'s price is less than the seller\'s price.\00")
(data (i32.const 12522) "EOS\00")
(data (i32.const 0) "\f00\00\00")
(import "env" "abort" (func $fimport$0))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$4 (param i32 i32)))
(import "env" "require_auth" (func $fimport$5 (param i64)))
(import "env" "db_find_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$7 (param i32 i32) (result i32)))
(import "env" "has_auth" (func $fimport$8 (param i64) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "memmove" (func $fimport$10 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$11 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$12 (param i32 i32)))
(import "env" "__multf3" (func $fimport$13 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$14 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$15 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$16 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$17 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$20 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$21 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$22 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$23 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$24 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$25 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$26 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$27 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$28 (param i64 i64) (result i32)))
(import "env" "require_recipient" (func $fimport$29 (param i64)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$30 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$31 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$32 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$33 (result i64)))
(import "env" "get_active_producers" (func $fimport$34 (param i32 i32) (result i32)))
(import "env" "send_deferred" (func $fimport$35 (param i32 i64 i32 i32 i32)))
(import "env" "current_receiver" (func $fimport$36 (result i64)))
(import "env" "__multi3" (func $fimport$37 (param i32 i64 i64 i64 i64)))
(import "env" "db_store_i64" (func $fimport$38 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "prints" (func $fimport$39 (param i32)))
(import "env" "printn" (func $fimport$40 (param i64)))
(import "env" "eosio_exit" (func $fimport$41 (param i32)))
(import "env" "action_data_size" (func $fimport$42 (result i32)))
(import "env" "read_action_data" (func $fimport$43 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$44 (param i32 i64)))
(import "env" "db_idx64_lowerbound" (func $fimport$45 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$46 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_next" (func $fimport$47 (param i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$48 (param i32 i64 i32 i32)))
(import "env" "db_remove_i64" (func $fimport$49 (param i32)))
(import "env" "db_get_i64" (func $fimport$50 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_previous" (func $fimport$51 (param i32 i32) (result i32)))
(import "env" "db_idx64_end" (func $fimport$52 (param i64 i64 i64) (result i32)))
(import "env" "db_idx64_store" (func $fimport$53 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$54 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$55 (param i64 i64 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$56 (param i32 i64 i32)))
(import "env" "is_account" (func $fimport$57 (param i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$58 (param i32)))
(export "apply" (func $201))
(table $0 43 43 anyfunc)
(elem (i32.const 1) $21 $23 $199 $75 $86 $194 $108 $130 $165 $193 $159 $185 $186 $61 $118 $110 $167 $59 $171 $74 $42 $196 $50 $68 $124 $105 $91 $197 $198 $156 $151 $192 $195 $139 $164 $142 $128 $72 $125 $64 $191 $168)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 12526))
(global $global$2 i32 (i32.const 12526))


void .FUNC $121 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [128])
	$global$0 = $3
	$4 = [0]
	*(($3 + [120])) = [0]
	*($3 + [104]) = (int_64)-1
	*($3 + [112]) = (int_64)0
	$5 = *($0)
	*($3 + [88]) = $5
	*($3 + [96]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)-6497942611737529472, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $92(($3 + [88]), $6)
	if ( ((int_32)*($4 + [120]) == (int_32)($3 + [88])) ){ goto $label$1 }
	CALL eosio_assert([0], [10423])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8571])
	
.LABEL $label$1
	$6 = [0]
	*(($3 + [80])) = [0]
	*($3 + [64]) = (int_64)-1
	*($3 + [72]) = (int_64)0
	$5 = *($0)
	*($3 + [48]) = $5
	*($3 + [56]) = $5
	CALL $120(($3 + [32]), ($3 + [48]))
	$5 = *($2 + [8])
	*($3 + [24]) = $5
	$7 = *($3 + [32])
	$1 = *($2)
	$1 = ( $1 ? $7 : ((int_64)$1 < (int_64)$7) )
	*($3 + [16]) = $1
	if ( (uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$3 }
	CALL eosio_assert([0], [9445])
	$5 = *(($3 + [24]))
	
.LABEL $label$3
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$1 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$5 = $1
	$2 = $6
	$6 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$5 = $1
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$2 = ((int_32)$6 < (int_32)[6])
	$8 = ($6 + [1])
	$6 = $8
	if ( $2 ){ goto $label$8 }
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [9494])
	
.LABEL $label$4
	$5 = *($0)
	*($3 + [8]) = ($3 + [16])
	if ( $4 ){ goto $label$9 }
	CALL eosio_assert([0], [9698])
	
.LABEL $label$9
	CALL $123(($3 + [88]), $4, $5, ($3 + [8]))
	if ( ((int_64)*(($3 + [24])) == (int_64)*($3 + [40])) ){ goto $label$10 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$10
	$5 = (int_64)
	*($3 + [32]) = $5(*($3 + [32]) - *($3 + [16])))
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [10380])
	$5 = *($3 + [32])
	
.LABEL $label$11
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$12 }
	CALL eosio_assert([0], [10402])
	
.LABEL $label$12
	CALL $113(($3 + [48]), ($3 + [32]), *($0))
	$8 = *($3 + [72])
	if ( ($8 == 0) ){ goto $label$13 }
	$0 = ($3 + [76])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = ($6 + [-24])
	$2 = *($6)
	*($6) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	CALL $9($2)
	
.LABEL $label$17
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$16 }
	$6 = *(($3 + [72]))
	goto $label$14 
	
.LABEL $label$15
	$6 = $8
	
.LABEL $label$14
	*($0) = $8
	CALL $9($6)
	
.LABEL $label$13
	$8 = *($3 + [112])
	if ( ($8 == 0) ){ goto $label$18 }
	$0 = ($3 + [116])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$20 }
	
.LOOP $label$21:
	$6 = ($6 + [-24])
	$2 = *($6)
	*($6) = [0]
	if ( ($2 == 0) ){ goto $label$22 }
	CALL $9($2)
	
.LABEL $label$22
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$21 }
	$6 = *(($3 + [112]))
	goto $label$19 
	
.LABEL $label$20
	$6 = $8
	
.LABEL $label$19
	*($0) = $8
	CALL $9($6)
	
.LABEL $label$18
	$global$0 = ($3 + [128])
}

void .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [16]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-8381914203957624832, (int_64)-8381914203957624832)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $114($1, $2)
	if ( ((int_32)*($2 + [16]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [10423])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	CALL eosio_assert([0], [10525])
	
.LABEL $label$1
	*($0) = *($2)
	*(($0 + [8])) = *(($2 + [8]))
}

void .FUNC $364 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4)
	*($3 + [8]) = *(*($4 + [4]) + [8])
	if ( (CALL $17(*($4 + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$1 }
	$6 = *(*($4 + [12]) + [76])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)4520852774463733760, $3, *(*($4 + [16])))
	*(*(($4 + [12])) + [76]) = $6
	
.LABEL $label$2
	CALL db_idx64_update($6, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$1
	$4 = *($0)
	$6 = *($4)
	*($3 + [8]) = *(*($4 + [4]) + [16])
	if ( (CALL $17((*($4 + [8]) + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($4 + [12]) + [80]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)4520852774463733761, $3, *(*($4 + [16])))
	*((*(($4 + [12])) + [80])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5 + [12])
	$7 = *($5)
	$8 = *($7 + [16])
	if ( ((int_64)$8 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$8 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$8 = (int_64)0
	$9 = CALL db_lowerbound_i64(*($7), *($7 + [8]), (int_64)-6497942611737529472, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $92($7, $9)
	*($3 + [28]) = [0]
	*($3 + [24]) = $7
	$8 = *(*(CALL $384(($3 + [24])) + [4]))
	$8 = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	*(($7 + [16])) = $8
	if ( (uint_64)($8 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [11078])
	$8 = *(($7 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($7 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $8
	*($1 + [8]) = *(*($5 + [4]))
	*($1 + [16]) = *(*($5 + [8]))
	if ( (*($6 + [56]) & [1]) ){ goto $label$6 }
	$10 = (($6 + [56]) + [1])
	goto $label$5 
	
.LABEL $label$6
	$10 = *(($6 + [64]))
	
.LABEL $label$5
	$5 = CALL $16($10)
	if ( ($5 <= [8]) ){ goto $label$10 }
	CALL eosio_assert([0], [9347])
	goto $label$9 
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$11 = (int_64)0
	
.LOOP $label$11:
	$9 = (($10 + $5) + [-1])
	$7 = *($9)
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$12 }
	CALL eosio_assert([0], [9392])
	$7 = *($9)
	
.LABEL $label$12
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$11 }
	goto $label$7 
	
.LABEL $label$8
	$11 = (int_64)0
	
.LABEL $label$7
	$10 = ($1 + [16])
	$12 = ($1 + [8])
	$8 = ((int_64)$11 & (int_64)72057594037927935)
	$13 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)*($6 + [68]))
	$5 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$11 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$16 }
	$8 = $11
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$16
	$8 = $11
	
.LOOP $label$17:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$14 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$9 = ($5 + [1])
	$5 = $9
	if ( $7 ){ goto $label$17 }
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	CALL eosio_assert([0], [9494])
	
.LABEL $label$13
	*($1 + [104]) = (int_64)0
	*(($1 + [112])) = $13
	$7 = $2
	$5 = ($7 + [-128])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($7 + [-8])
	*($3 + [16]) = $3
	*($3 + [28]) = $12
	*($3 + [24]) = $1
	*($3 + [32]) = $10
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [40])
	*($3 + [44]) = ($1 + [56])
	*($3 + [48]) = ($1 + [72])
	*($3 + [52]) = ($1 + [88])
	*($3 + [56]) = ($1 + [104])
	CALL $278(($3 + [24]), ($3 + [16]))
	$8 = *($1)
	*($1 + [124]) = CALL db_store_i64(*($4 + [8]), (int_64)-6497942611737529472, *(*($0 + [8])), $8, $5, [120])
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$18 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$18
	$global$0 = ($3 + [64])
}

int_32 .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *($3)
	
.LABEL $label$2
	$6 = ($1 + [16])
	CALL memcpy($4, ($2 + [8]), [8])
	$1 = (*($3) + [8])
	*($3) = $1
	if ( ((int_32)(*($5) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $6, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $188 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9557])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9576])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [9830])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $189($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $270(CALL $269($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $48 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $46($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $49(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $9($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $264 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL $72($2)
	if ( (*($2 + [56]) & [1]) ){ goto $label$7 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

void .FUNC $265 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL $74($2)
	if ( (*($2 + [56]) & [1]) ){ goto $label$7 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

void .FUNC $266 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL $68($2)
	if ( (*($2 + [56]) & [1]) ){ goto $label$7 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

void .FUNC $267 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL $124($2)
	if ( (*($2 + [56]) & [1]) ){ goto $label$7 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$6 = [178956970]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$6 * (int_32)[24]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	*(($4 = ($5 + ((int_32)$4 * (int_32)[24])))) = *($1)
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 + ((int_32)((int_32)$1 / (int_32)[-24]) * (int_32)[24]))
	$6 = ($5 + ((int_32)$6 * (int_32)[24]))
	$4 = ($4 + [24])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $9($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $42 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$1 = ($global$0 - [272])
	$global$0 = $1
	*($1 + [224]) = (int_64)3617214756542218240
	*($1 + [216]) = (int_64)3786740701581235472
	*($1 + [232]) = [1]
	*($1 + [200]) = (int_64)3617214756542218240
	*($1 + [192]) = (int_64)5307181297324903472
	*($1 + [208]) = [1]
	*($1 + [176]) = (int_64)3617214756542218240
	*($1 + [168]) = (int_64)7130081133533855744
	*($1 + [184]) = [1]
	*($1 + [160]) = [0]
	*($1 + [152]) = (int_64)0
	CALL $43(($1 + [152]), ($1 + [216]))
	$3 = *($1 + [160])
	$2 = *($1 + [156])
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$4 }
	*($2) = *($1 + [192])
	*(($2 + [16])) = *((($1 + [192]) + [16]))
	*(($2 + [8])) = *((($1 + [192]) + [8]))
	$2 = ($2 + [24])
	*($1 + [156]) = $2
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $43(($1 + [152]), ($1 + [192]))
	$2 = *($1 + [156])
	if ( ((int_32)$2 != (int_32)*(($1 + [160]))) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $43(($1 + [152]), ($1 + [168]))
	$2 = *($1 + [156])
	goto $label$1 
	
.LABEL $label$2
	*($2) = *($1 + [168])
	*(($2 + [16])) = *((($1 + [168]) + [16]))
	*(($2 + [8])) = *((($1 + [168]) + [8]))
	$2 = ($2 + [24])
	*($1 + [156]) = $2
	
.LABEL $label$1
	*(($1 + [120])) = (int_64)0
	$3 = [0]
	*((($1 + [112]) + [24])) = [0]
	*($1 + [112]) = (int_64)2
	*($1 + [128]) = (int_64)0
	$2 = ($2 - *($1 + [152]))
	$4 = ((int_32)$2 / (int_32)[24])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$5 }
	$2 = CALL $7($2)
	*(($1 + [128])) = $2
	*(($5 = ($1 + [132]))) = $2
	*((($1 + [112]) + [24])) = ($2 + ((int_32)$4 * (int_32)[24]))
	$6 = *($1 + [152])
	$4 = (*($1 + [156]) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $6, $4)
	*($5) = (*($5) + ((int_32)((uint_32)$4 / (uint_32)[24]) * (int_32)[24]))
	
.LABEL $label$6
	*((($1 + [112]) + [36])) = [0]
	*($1 + [140 align=4]) = (int_64)0
	*($1 + [56]) = (int_64)3617214756542218240
	*($1 + [64]) = (int_64)-6402241254016417792
	*($1 + [48]) = *($0)
	$4 = CALL $44((($1 + [48]) + [24]), ($1 + [112]))
	*($1 + [8]) = (int_64)6138663577826885632
	*($1 + [16]) = (int_64)-3075276123059568640
	$7 = *($0)
	*(($2 = CALL $7([16]))) = $7
	*($2 + [8]) = (int_64)-6402241254016417792
	*((($1 + [8]) + [36])) = [0]
	$0 = ($2 + [16])
	*((($1 + [8]) + [24])) = $0
	*(($1 + [28])) = $0
	*($1 + [24]) = $2
	*($1 + [36 align=4]) = (int_64)0
	*($1 + [240]) = [24]
	*($1 + [248]) = ($1 + [240])
	*($1 + [260]) = (($1 + [48]) + [28])
	*($1 + [256]) = $4
	*($1 + [264]) = ($1 + [88])
	*($1 + [268]) = ($1 + [100])
	CALL $45(($1 + [256]), ($1 + [248]))
	$2 = *($1 + [240])
	if ( ($2 == 0) ){ goto $label$8 }
	$0 = (($1 + [8]) + [28])
	CALL $46($0, $2)
	$3 = *(($1 + [40]))
	$2 = *($0)
	goto $label$7 
	
.LABEL $label$8
	$2 = [0]
	
.LABEL $label$7
	*($1 + [260]) = $2
	*($1 + [256]) = $2
	*($1 + [264]) = $3
	*($1 + [240]) = ($1 + [256])
	*($1 + [248]) = ($1 + [48])
	CALL $47(($1 + [248]), ($1 + [240]))
	CALL $48(($1 + [8]))
	$2 = *($1 + [36])
	if ( ($2 == 0) ){ goto $label$9 }
	*(($1 + [40])) = $2
	CALL $9($2)
	
.LABEL $label$9
	$2 = *($1 + [24])
	if ( ($2 == 0) ){ goto $label$10 }
	*(($1 + [28])) = $2
	CALL $9($2)
	
.LABEL $label$10
	$2 = *(($1 + [100]))
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [104])) = $2
	CALL $9($2)
	
.LABEL $label$11
	$2 = *(($1 + [88]))
	if ( ($2 == 0) ){ goto $label$12 }
	*(($1 + [92])) = $2
	CALL $9($2)
	
.LABEL $label$12
	$2 = *((($1 + [48]) + [28]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($1 + [80])) = $2
	CALL $9($2)
	
.LABEL $label$13
	$2 = *((($1 + [112]) + [28]))
	if ( ($2 == 0) ){ goto $label$14 }
	*(($1 + [144])) = $2
	CALL $9($2)
	
.LABEL $label$14
	$2 = *($1 + [128])
	if ( ($2 == 0) ){ goto $label$15 }
	*(($1 + [132])) = $2
	CALL $9($2)
	
.LABEL $label$15
	$2 = *($1 + [116])
	if ( ($2 == 0) ){ goto $label$16 }
	*(($1 + [120])) = $2
	CALL $9($2)
	
.LABEL $label$16
	$2 = *($1 + [152])
	if ( ($2 == 0) ){ goto $label$17 }
	*($1 + [156]) = $2
	CALL $9($2)
	
.LABEL $label$17
	$global$0 = ($1 + [272])
	return (unreachable)
	
.LABEL $label$5
	CALL $15((($1 + [112]) + [16]))
}

void .FUNC $41 (int_32 $0)
{
}

int_64 .FUNC $40 (float_64 $0, float_64 $1)
{
	float_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	float_64 $19
	float_64 $20
	$2 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (CASTING int_64)(float_64 $1)
	$4 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	$5 = ($4) & [2147483647]
	if ( (($5) | $6) == 0) ){ goto $label$1 }
	$7 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32))
	$9 = (CASTING uint_32)(uint_64 $7)
	if ( $9 ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$10 = ($8 & [2147483647])
	if ( ((uint_32)$10 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$9 != (int_32)[0]) & ((int_32)$10 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$5 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$5 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$11 = [0]
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$8 }
	$11 = [2]
	if ( ((uint_32)$5 > (uint_32)[1128267775]) ){ goto $label$8 }
	$11 = [0]
	if ( ($5 <= [1072693248]) ){ goto $label$8 }
	$12 = uint_32($5 >> [20])
	if ( ($5 <= [1094713344]) ){ goto $label$7 }
	$11 = ([1075] - $12)
	$12 = uint_32($6 >> $11)
	$11 = ( ([2] - ($12 & [1])) ? [0] : ((int_32)($12 << $11) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$11 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $12)
	$11 = uint_32($5 >> $6)
	$11 = ( ([2] - ($11 & [1])) ? [0] : ((int_32)($11 << $6) == (int_32)$5) )
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($10 + [-1072693248]) | $9) == 0) ){ goto $label$1 }
	if ( ($10 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$4 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$4 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$4 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL $39($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$2 = CALL $19($0)
	if ( $9 ){ goto $label$26 }
	if ( ($10 == 0) ){ goto $label$25 }
	if ( ((int_32)($10 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$25 }
	
.LABEL $label$26
	$13 = (float_64)1
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$22 }
	if ( ((int_32)$11 == (int_32)[1]) ){ goto $label$24 }
	if ( $11 ){ goto $label$22 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$25
	$2 = ( ((float_64)(float_64)1 / (float_64)$2) ? $2 : ((int_32)$4 < (int_32)[0]) )
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($11 | ($10 + [-1072693248])) == 0) ){ goto $label$23 }
	return ( !(float_64)$2 ? $2 : ((int_32)$11 == (int_32)[1]) )
	
.LABEL $label$24
	$13 = (float_64)-1
	if ( ((uint_32)$5 >= (uint_32)[1105199105]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$1 = (float_64)
	return ((float_64)$1($2 - $2)) / (float_64)$1)
	
.LABEL $label$22
	if ( ($5 <= [1105199105]) ){ goto $label$20 }
	
.LABEL $label$21
	if ( ($5 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$10 > (uint_32)[1072693247]) ){ goto $label$19 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$4 < (int_32)[0]) )
	
.LABEL $label$27
	if ( ((uint_32)$10 > (uint_32)[1072693246]) ){ goto $label$18 }
	return ( ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300) ? ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300) : ((int_32)$4 < (int_32)[0]) )
	
.LABEL $label$20
	$5 = [0]
	if ( ((uint_32)$10 > (uint_32)[1048575]) ){ goto $label$29 }
	$2 = ((float_64)$2 * (float_64)(float_64)9007199254740992)
	$10 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $2) >> (uint_64)(int_64)32))
	$4 = [-53]
	goto $label$28 
	
.LABEL $label$29
	$4 = [0]
	
.LABEL $label$28
	$6 = ($10 & [1048575])
	$8 = ($6 | [1072693248])
	$4 = ((int_32($10 >> [20]) + $4) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$16 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$17 }
	$5 = [1]
	goto $label$16 
	
.LABEL $label$19
	return ( (float_64)inf ? (float_64)0 : ((int_32)$4 > (int_32)[0]) )
	
.LABEL $label$18
	if ( ($10 <= [1072693249]) ){ goto $label$15 }
	return ( ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300) ? ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300) : ((int_32)$4 > (int_32)[0]) )
	
.LABEL $label$17
	$8 = ($8 + [-1048576])
	$4 = ($4 + [1])
	
.LABEL $label$16
	$2 = (CASTING float_64)(int_32 $4)
	$16 = ((float_64)*(($6 + [8448])) + (float_64)((float_64)((float_64)(float_64))($2 - (float_64))($0 - $17)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$2 = ((float_64)((float_64)$15 * (float_64)$0) + (float_64)((float_64)$2 * (float_64)(float_64))($16 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $19))
	$0 = ((float_64)$2 * (float_64)$2)
	$20 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($8 >> [1]) | [536870912]) + ($5 << [18])) + [524288])) << (int_64)32))
	$15 = ((float_64)$18 * (float_64)(float_64))((float_64))($17 - ((float_64)$0 * (float_64)$20)) - ((float_64)$0 * (float_64)(float_64))($15 - (float_64))($20 - $16)
	$16 = ((float_64)((float_64)((float_64)$2 + (float_64)$0) * (float_64)$15))
	$19 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$19 + (float_64)(float_64)3) + (float_64)$16)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$18 = ((float_64)(float_64)1 / (float_64)((float_64)$16 + (float_64)$15))
	$16 = *(($6 + [8432]))
	$15 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $2) & (int_64)4294967295)))
	$17 = (float_64)
	$2 = ((float_64)$17($15 - $16)) * (float_64)$18
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $2)) & (int_64)-4294967296)
	$17 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$17 & (int_64)-4294967296))))
	$15 = ((float_64)$0 + (float_64)$2)
	$6 = ($5 << [3])
	$14 = *(($6 + [8464]))
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$14 + (float_64)((float_64)$15)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$14 = (float_64))((float_64))((float_64))($0 + (float_64)$16)))) + (float_64)$2)) & (int_64)-4294967296))) - $2) - $14) - $15)
	goto $label$14 
	
.LABEL $label$15
	$16 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$2 + (float_64)(float_64)-1)
	$2 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$2 + (float_64)$16))) & (int_64)-4294967296)
	$14 = (float_64))($0) - $2)
	
.LABEL $label$14
	$1 = ((float_64)((float_64)(float_64))($16 - $14) * (float_64)$1) + (float_64)((float_64)(float_64))($1 - $15) * (float_64)$0
	$15 = (CASTING float_64)(int_64 ((int_64)$3 & (int_64)-4294967296))
	$2 = ((float_64)$0 * (float_64)$15)
	$0 = ((float_64)$2 + (float_64)$1)
	$3 = (CASTING int_64)(float_64 $0)
	$5 = (CASTING uint_32)(uint_64 $3)))
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( ((int_32)$8) < (int_32)[1083179008]) ){ goto $label$34 }
	if ( ((($8 + [-1083179008]) | $5) == 0) ){ goto $label$33 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$34
	if ( (($8 & [2147482624]) <= [1083231232]) ){ goto $label$31 }
	if ( ((($8 + [1064252416]) | $5) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$33
	if ( ((int_32)((float_64)((float_64)$1 + (float_64)(float_64)8.008566259537294e-17) > (float_64)(float_64))($0 - $2)) ^ (int_32)[1]) ){ goto $label$31 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$32
	if ( (((int_32)((float_64)$1 <= (float_64)(float_64))($0 - $2)) ^ (int_32)[1]) == 0) ){ goto $label$30 }
	
.LABEL $label$31
	$5 = [0]
	$6 = ($8 & [2147483647])
	if ( ($6 <= [1071644673]) ){ goto $label$35 }
	$4 = (uint_32($6 >> [20]) & [2047])
	$6 = (uint_32([1048576] >> (uint_32($6 >> [20]) + [-1022])) + $8)
	$5 = uint_32((($6 & [1048575]) | [1048576]) >> ([1043] - $4))
	$5 = ( ([0] - $5) ? $5 : ((int_32)$8 < (int_32)[0]) )
	$2 = (float_64)
	$3 = (CASTING int_64)(float_64 ((float_64)$1 + (float_64)$2($2 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (int_32([-1048576] >> ($4 + [-1023])) & $6)) << (int_64)32))))))
	
.LABEL $label$35
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$2 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $2)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)$3 & (int_64)-4294967296))
	$15 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$15 + (float_64)$2 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = ((float_64)(float_64))($1)
	$3 = (CASTING int_64)(float_64 $1 - (float_64))(((float_64)((float_64)$1 * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)) - ((float_64)$0($2 - (float_64))($1 - $15))
	$8 = (($5 << [20]) + (CASTING uint_32)(uint_64 (uint_64)$3 + (float_64)((float_64)$1 * (float_64)$0)))
	if ( ((int_32)$8 + (float_64)(float_64)1)))) >> (uint_64)(int_64)32)))) > (int_32)[1048575]) ){ goto $label$36 }
	return ((float_64)$13 * (float_64)CALL $18($1, $5))
	
.LABEL $label$36
	return ((float_64)$13 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$3 & (int_64)4294967295))))
	
.LABEL $label$30
	return ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $2
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [52])
	$4 = ($3 + [40])
	$2 = ($3 + [28])
	$5 = ($3 + [24])
	$1 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $1) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$1 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $5, [4])
	*(($1 = ($3 + [4]))) = (*($1) + [4])
	CALL $375($3, $2)
	CALL $376($3, $4)
	CALL $377($3, $0)
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $7($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $15($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $9($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = (*($2) + [4])
	*(($2 = *($1))) = $1
	$3 = *($3)
	$3 = *($0 + [4])
	$4 = *($3 + [4])
	$5 = (CASTING uint_64)(uint_32 ((int_32)($4 - $3) / (int_32)[44]))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$3:
	$1 = ($1 + [35])
	$5 = *($3)
	
.LOOP $label$4:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$4 }
	$3 = ($3 + [44])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$3 }
	*($2) = $1
	
.LABEL $label$2
	$3 = *($3)
	$3 = *($0 + [8])
	$4 = *($3 + [4])
	$6 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[24]))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$6 }
	$1 = ((((int_32)((uint_32)($6 + [-24]) / (uint_32)[24]) * (int_32)[18]) + $1) + [18])
	
.LABEL $label$6
	*($2) = $1
	$3 = *($3)
	$3 = *($0 + [12])
	$4 = *($3 + [4])
	$0 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($0 >> [3]))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$8 }
	$1 = ((((int_32)uint_32(($0 + [-8]) >> [3]) * (int_32)[6]) + $1) + [6])
	
.LABEL $label$8
	*($2) = $1
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($0 + [8])) = (int_64)0
	*($0 + [4]) = [0]
	*($0) = *($1)
	$2 = (*(($1 + [8])) - *($1 + [4]))
	$3 = ((int_32)$2 / (int_32)[44])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[97612894]) ){ goto $label$3 }
	$2 = CALL $7($2)
	*(($0 + [4])) = $2
	*(($0 + [12])) = ($2 + ((int_32)$3 * (int_32)[44]))
	*(($3 = ($0 + [8]))) = $2
	$4 = *(($1 + [4]))
	$5 = (*(($1 + [8])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[44]) * (int_32)[44]))
	
.LABEL $label$4
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = [0]
	$2 = (*(($1 + [20])) - *($1 + [16]))
	$3 = ((int_32)$2 / (int_32)[24])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[178956971]) ){ goto $label$2 }
	$2 = CALL $7($2)
	*(($0 + [16])) = $2
	*(($0 + [24])) = ($2 + ((int_32)$3 * (int_32)[24]))
	*(($3 = ($0 + [20]))) = $2
	$4 = *(($1 + [16]))
	$5 = (*(($1 + [20])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[24]) * (int_32)[24]))
	
.LABEL $label$5
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$2 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = int_32($2 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$2 = CALL $7($2)
	*(($0 + [28])) = $2
	*(($0 + [36])) = ($2 + ($3 << [3]))
	*(($3 = ($0 + [32]))) = $2
	$5 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $5, $1)
	*($3) = (*($3) + $1)
	
.LABEL $label$6
	return $0
	
.LABEL $label$3
	CALL $15(($0 + [4]))
	
.LABEL $label$2
	CALL $15(($0 + [16]))
	
.LABEL $label$1
	CALL $15(($0 + [28]))
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $363 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	float_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *(*($0) + [4])
	if ( ((int_64)*(($4 + [40])) == (int_64)*(($1 + [40]))) ){ goto $label$1 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$1
	$5 = (int_64)
	*($1 + [32]) = $5(*($1 + [32]) - *($4 + [32])))
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [10380])
	$5 = *(($1 + [32]))
	
.LABEL $label$2
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [10402])
	$5 = *(($1 + [32]))
	
.LABEL $label$3
	$0 = *(*($0 + [8]) + [4])
	$6 = *($0 + [16])
	CALL __multi3($2, $5, (int_64)$5 >> (int_64)63), $6, (int_64)$6 >> (int_64)63))
	$7 = *(($0 + [24]))
	$6 = *(($2 + [8]))
	$5 = *($2)
	if ( (( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$6 < (int_64)0) : (int_64)($6 == 0) ) == 0) ){ goto $label$5 }
	if ( ( ((uint_64)$5 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$6 > (int_64)-1) : ((int_64)$6 == (int_64)-1) ) ){ goto $label$4 }
	CALL eosio_assert([0], [11324])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [11300])
	
.LABEL $label$4
	$8 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *($3 + [68])))
	if ( ((float_64)(float_64)|$8| < (float_64)(float_64)9223372036854775808) ){ goto $label$10 }
	$6 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$6 = (Rounds 0)($8)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [11038])
	$5 = ((int_64)$5 / (int_64)$6)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_64)$5 != (int_64)-9223372036854775808) ){ goto $label$11 }
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$11 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$11
	$5 = ((int_64)$5 / (int_64)$6)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10984])
	
.LABEL $label$6
	*($1 + [48]) = $5
	*(($1 + [56])) = $7
	$global$0 = ($2 + [16])
}

void .FUNC $362 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4)
	*($3 + [8]) = *(*($4 + [4]) + [8])
	if ( (CALL $17(*($4 + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$1 }
	$6 = *(*($4 + [12]) + [76])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)4520852774463733760, $3, *(*($4 + [16])))
	*(*(($4 + [12])) + [76]) = $6
	
.LABEL $label$2
	CALL db_idx64_update($6, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$1
	$4 = *($0)
	$6 = *($4)
	*($3 + [8]) = *(*($4 + [4]) + [16])
	if ( (CALL $17((*($4 + [8]) + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($4 + [12]) + [80]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)4520852774463733761, $3, *(*($4 + [16])))
	*((*(($4 + [12])) + [80])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $167 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	$4 = ($global$0 - [64])
	$global$0 = $4
	$5 = *(($2 + [8]))
	*((($4 + [48]) + [8])) = $5
	$6 = *($2)
	*((($4 + [16]) + [8])) = $5
	*($4 + [48]) = $6
	*($4 + [16]) = $6
	CALL $165($0, $1, ($4 + [16]))
	$5 = *(($3 + [8]))
	*((($4 + [32]) + [8])) = $5
	$6 = *($3)
	*(($4 + [8])) = $5
	*($4) = $6
	*($4 + [32]) = $6
	CALL $156($0, $1, $4)
	$global$0 = ($4 + [64])
}

void .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$global$0 = $2
	$3 = [0]
	*((($2 + [88]) + [32])) = [0]
	*($2 + [104]) = (int_64)-1
	*($2 + [112]) = (int_64)0
	*($2 + [124]) = [0]
	$4 = *($1)
	*($2 + [88]) = $4
	*($2 + [96]) = $4
	*($2 + [80]) = ($2 + [88])
	*($2 + [40]) = (int_64)0
	CALL $132(($2 + [8]), ($2 + [80]), ($2 + [40]))
	if ( (*($2 + [12]) == 0) ){ goto $label$3 }
	*($2 + [44]) = [0]
	*($2 + [40]) = ($2 + [80])
	$3 = *(CALL $133(($2 + [40])) + [4])
	*(($0 + [8])) = *(($3 + [24]))
	*($0) = *($3 + [16])
	$1 = *($2 + [112])
	if ( $1 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*((($2 + [40]) + [32])) = [0]
	*($2 + [56]) = (int_64)-1
	*($2 + [64]) = (int_64)0
	$4 = *($1)
	*($2 + [40]) = $4
	*($2 + [48]) = $4
	CALL $73(($2 + [8]), ($2 + [40]))
	*($0) = (int_64)0
	$4 = *($2 + [24])
	*($0 + [8]) = $4
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$4 = $5
	$0 = $3
	$3 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$4 = $5
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$0 = ((int_32)$3 < (int_32)[6])
	$1 = ($3 + [1])
	$3 = $1
	if ( $0 ){ goto $label$8 }
	$3 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [9494])
	
.LABEL $label$4
	$1 = *($2 + [64])
	if ( ($1 == 0) ){ goto $label$9 }
	$6 = ($2 + [68])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	CALL $9($0)
	
.LABEL $label$13
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$12 }
	$3 = *(($2 + [64]))
	goto $label$10 
	
.LABEL $label$11
	$3 = $1
	
.LABEL $label$10
	*($6) = $1
	CALL $9($3)
	
.LABEL $label$9
	$1 = *($2 + [112])
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($2 + [116])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$17 }
	CALL $9($0)
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$16 }
	$3 = *(($2 + [112]))
	goto $label$14 
	
.LABEL $label$15
	$3 = $1
	
.LABEL $label$14
	*($6) = $1
	CALL $9($3)
	
.LABEL $label$1
	$global$0 = ($2 + [128])
}

void .FUNC $165 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	float_32 $16
	$3 = ($global$0 - [256])
	$global$0 = $3
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	$4 = *($0)
	*($3) = $4
	*($3 + [8]) = $4
	CALL $73(($3 + [120]), $3)
	$5 = *($0 + [69])
	$6 = *($3 + [144])
	$7 = *($3 + [24])
	if ( ($7 == 0) ){ goto $label$1 }
	$8 = ($3 + [28])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$5 }
	CALL $9($10)
	
.LABEL $label$5
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$4 }
	$9 = *(($3 + [24]))
	goto $label$2 
	
.LABEL $label$3
	$9 = $7
	
.LABEL $label$2
	*($8) = $7
	CALL $9($9)
	
.LABEL $label$1
	if ( ((int_32)($6 & [255]) != (int_32)($5 & [255])) ){ goto $label$6 }
	CALL eosio_assert([0], [8480])
	
.LABEL $label$6
	*(($3 + [248])) = [0]
	*($3 + [232]) = (int_64)-1
	*($3 + [240]) = (int_64)0
	$4 = *($0)
	*($3 + [216]) = $4
	*($3 + [224]) = $4
	CALL $73(($3 + [184]), ($3 + [216]))
	if ( CALL has_auth($1) ){ goto $label$7 }
	if ( CALL has_auth(*($0)) ){ goto $label$7 }
	if ( CALL has_auth(*($3 + [184])) ){ goto $label$7 }
	CALL eosio_assert([0], [8521])
	
.LABEL $label$7
	if ( CALL $140($0, $1) ){ goto $label$8 }
	CALL eosio_assert([0], [8387])
	
.LABEL $label$8
	$11 = *($2)
	$12 = *($2 + [8])
	CALL $146($3, $0, $1, $12)
	if ( ((int_64)$12 == (int_64)*($3 + [8])) ){ goto $label$9 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$9
	if ( ((int_64)*($3) >= (int_64)$11) ){ goto $label$10 }
	CALL eosio_assert([0], [11280])
	
.LABEL $label$10
	CALL $166($3, $0)
	$13 = *($3 + [200])
	$4 = (uint_64)$13 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$14 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$16 }
	$4 = $14
	$10 = $9
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$16
	$4 = $14
	
.LOOP $label$17:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$10 = ((int_32)$9 < (int_32)[6])
	$7 = ($9 + [1])
	$9 = $7
	if ( $10 ){ goto $label$17 }
	$9 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$14 }
	
.LABEL $label$15
	$4 = *($3)
	$15 = *($3 + [8])
	if ( ((int_64)$13 == (int_64)$15) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [9494])
	$4 = *($3)
	$15 = *($3 + [8])
	if ( ((int_64)$13 == (int_64)$15) ){ goto $label$11 }
	
.LABEL $label$12
	CALL eosio_assert([0], [9514])
	
.LABEL $label$11
	if ( ((int_64)$4 <= (int_64)-4611686018427388104) ){ goto $label$19 }
	if ( ((int_64)$4 < (int_64)4611686018427387704) ){ goto $label$18 }
	CALL eosio_assert([0], [9576])
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [9557])
	
.LABEL $label$18
	$16 = ((float_32)(CASTING float_32)(int_64 $11) * (float_32)(float_32)0.009999999776482582)
	if ( ((float_32)(float_32)|$16| < (float_32)(float_32)9223372036854775808) ){ goto $label$21 }
	$11 = (int_64)-9223372036854775808
	goto $label$20 
	
.LABEL $label$21
	$11 = (Rounds 0)($16)
	
.LABEL $label$20
	if ( (uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$22 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$22
	$13 = ((int_64)$4 + (int_64)200)
	$4 = (uint_64)$12 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$14 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$26 }
	$4 = $14
	$10 = $9
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$26
	$4 = $14
	
.LOOP $label$27:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$24 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$10 = ((int_32)$9 < (int_32)[6])
	$7 = ($9 + [1])
	$9 = $7
	if ( $10 ){ goto $label$27 }
	$9 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	CALL eosio_assert([0], [9494])
	
.LABEL $label$23
	$4 = CALL $37()
	*((($3 + [120]) + [28])) = (int_64)0
	*(($3 + [164])) = (int_64)0
	*(($3 + [172])) = (int_64)0
	*($3 + [132]) = [0]
	*($3 + [136]) = [0]
	*($3 + [140 align=4]) = (int_64)0
	*($3 + [156 align=4]) = (int_64)0
	*($3 + [120]) = ((CASTING uint_32)(uint_64 ((int_64)$4 / (int_64)1000000)) + [60])
	*($3 + [112]) = (int_64)-6402241254016417792
	$4 = *($0)
	*($3 + [104]) = $4
	*($3 + [96]) = $4
	*($3 + [88]) = (int_64)-4157798404408355712
	*(($3 + [32])) = $12
	*(($3 + [48])) = $12
	*(($3 + [64])) = $15
	*(($3 + [16])) = *(($2 + [8]))
	*($3) = $1
	*($3 + [24]) = (int_64)0
	*($3 + [40]) = $11
	*($3 + [56]) = $13
	*($3 + [72]) = (int_64)4294967297
	*($3 + [8]) = *($2)
	CALL $158(($3 + [156]), ($3 + [104]), ($3 + [96]), ($3 + [88]), $3)
	*($3 + [140]) = [2]
	$4 = CALL $97($0)
	*($3 + [8]) = (int_64)0
	*($3) = $4
	CALL $98(($3 + [120]), $3, *($0), [0])
	CALL $99(($3 + [120]))
	$7 = *($3 + [240])
	if ( ($7 == 0) ){ goto $label$28 }
	$9 = *((($3 + [216]) + [28]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$30 }
	
.LOOP $label$31:
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$32 }
	CALL $9($10)
	
.LABEL $label$32
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$31 }
	$9 = *(($3 + [240]))
	goto $label$29 
	
.LABEL $label$30
	$9 = $7
	
.LABEL $label$29
	*(($3 + [244])) = $7
	CALL $9($9)
	
.LABEL $label$28
	$global$0 = ($3 + [256])
}

void .FUNC $164 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	float_32 $19
	$8 = ($global$0 - [336])
	$global$0 = $8
	CALL require_auth(*($0))
	$10 = *($2 + [8])
	$9 = *($3 + [8])
	if ( ((int_64)$9 == (int_64)$10) ){ goto $label$1 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$1
	$12 = *($2)
	$11 = *($3)
	if ( ((int_64)$11 >= (int_64)$12) ){ goto $label$3 }
	$13 = *($4 + [8])
	CALL $146(($8 + [64]), $0, $1, $13)
	if ( ((int_64)$13 == (int_64)*($8 + [72])) ){ goto $label$4 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$4
	$14 = *($4)
	if ( ((int_64)$14 <= (int_64)*($8 + [64])) ){ goto $label$2 }
	*(($3 = (($8 + [288]) + [8]))) = *(($5 + [8]))
	*($8 + [288]) = *($5)
	CALL $146(($8 + [272]), $0, $1, $13)
	*((($8 + [16]) + [8])) = *($3)
	*(($8 + [8])) = *((($8 + [272]) + [8]))
	*($8 + [16]) = *($8 + [288])
	*($8) = *($8 + [272])
	CALL $160($0, $1, ($8 + [16]), $8)
	$15 = CALL $37()
	*(($8 + [92])) = (int_64)0
	*(($8 + [108])) = (int_64)0
	*(($8 + [116])) = (int_64)0
	*($8 + [76]) = [0]
	*($8 + [80]) = [0]
	*($8 + [84 align=4]) = (int_64)0
	*($8 + [100 align=4]) = (int_64)0
	*($8 + [64]) = ((CASTING uint_32)(uint_64 ((int_64)$15 / (int_64)1000000)) + [60])
	*($8 + [184]) = (int_64)-6402241254016417792
	*($8 + [176]) = *($0)
	*($8 + [160]) = (int_64)-5915331450174627840
	CALL $153(($8 + [100]), ($8 + [176]), $0, ($8 + [160]), ($8 + [304]))
	*($8 + [84]) = [2]
	$15 = CALL $97($0)
	*($8 + [184]) = (int_64)0
	*($8 + [176]) = $15
	CALL $98(($8 + [64]), ($8 + [176]), *($0), [0])
	CALL $99(($8 + [64]))
	$global$0 = ($8 + [336])
	return 
	
.LABEL $label$3
	$15 = CALL $37()
	*(($8 + [92])) = (int_64)0
	*(($8 + [108])) = (int_64)0
	*(($8 + [116])) = (int_64)0
	*($8 + [76]) = [0]
	*($8 + [80]) = [0]
	*($8 + [84 align=4]) = (int_64)0
	*($8 + [100 align=4]) = (int_64)0
	*($8 + [64]) = ((CASTING uint_32)(uint_64 ((int_64)$15 / (int_64)1000000)) + [60])
	*($8 + [184]) = (int_64)-6402241254016417792
	*($8 + [176]) = *($0)
	*($8 + [160]) = (int_64)-5915331450174627840
	CALL $153(($8 + [100]), ($8 + [176]), $0, ($8 + [160]), ($8 + [304]))
	*($8 + [84]) = [2]
	$15 = CALL $97($0)
	*($8 + [184]) = (int_64)0
	*($8 + [176]) = $15
	CALL $98(($8 + [64]), ($8 + [176]), *($0), [0])
	CALL $99(($8 + [64]))
	$global$0 = ($8 + [336])
	return 
	
.LABEL $label$2
	$3 = ($5 + [8])
	$16 = *($3)
	*((($8 + [256]) + [8])) = $16
	$17 = *(($4 + [8]))
	*((($8 + [240]) + [8])) = $17
	$15 = *($4)
	$18 = *($5)
	*((($8 + [48]) + [8])) = $16
	*((($8 + [32]) + [8])) = $17
	*($8 + [256]) = $18
	*($8 + [240]) = $15
	*($8 + [48]) = $18
	*($8 + [32]) = $15
	CALL $160($0, $1, ($8 + [48]), ($8 + [32]))
	$19 = ((float_32)((float_32)((float_32)(CASTING float_32)(uint_32 $6) / (float_32)(float_32)100) + (float_32)(float_32)1) * (float_32)(CASTING float_32)(int_64 *($5)))
	if ( ((float_32)(float_32)|$19| < (float_32)(float_32)9223372036854775808) ){ goto $label$6 }
	$17 = (int_64)-9223372036854775808
	goto $label$5 
	
.LABEL $label$6
	$17 = (Rounds 0)($19)
	
.LABEL $label$5
	$16 = *($3)
	if ( (uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$7 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$7
	$15 = (uint_64)$16 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$18 = (uint_64)$15 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$15 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$15 = $18
	$4 = $3
	$3 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$15 = $18
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$15 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8)
	$4 = ((int_32)$3 < (int_32)[6])
	$5 = ($3 + [1])
	$3 = $5
	if ( $4 ){ goto $label$12 }
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [9494])
	
.LABEL $label$8
	$19 = ((float_32)((float_32)(CASTING float_32)(uint_32 $7) / (float_32)(float_32)100) * (float_32)(CASTING float_32)(int_64 $12))
	if ( ((float_32)(float_32)|$19| < (float_32)(float_32)9223372036854775808) ){ goto $label$14 }
	$12 = (int_64)-9223372036854775808
	goto $label$13 
	
.LABEL $label$14
	$12 = (Rounds 0)($19)
	
.LABEL $label$13
	if ( (uint_64)(((int_64)$12 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$15 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$15
	$15 = (uint_64)$10 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$18 = (uint_64)$15 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$15 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$15 = $18
	$4 = $3
	$3 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$15 = $18
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$15 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8)
	$4 = ((int_32)$3 < (int_32)[6])
	$5 = ($3 + [1])
	$3 = $5
	if ( $4 ){ goto $label$20 }
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [9494])
	
.LABEL $label$16
	$15 = CALL $37()
	*(($8 + [204])) = (int_64)0
	*(($8 + [220])) = (int_64)0
	*(($8 + [228])) = (int_64)0
	*($8 + [188]) = [0]
	*($8 + [192]) = [0]
	*($8 + [196 align=4]) = (int_64)0
	*($8 + [212 align=4]) = (int_64)0
	*($8 + [176]) = ((CASTING uint_32)(uint_64 ((int_64)$15 / (int_64)1000000)) + [60])
	*($8 + [168]) = (int_64)-6402241254016417792
	*($8 + [160]) = *($0)
	*($8 + [152]) = (int_64)-4157798404408355712
	if ( ((int_64)$13 == (int_64)$9) ){ goto $label$21 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$21
	$15 = ((int_64)$14 + (int_64)$11)
	if ( ((int_64)$15 <= (int_64)-4611686018427387904) ){ goto $label$23 }
	if ( ((int_64)$15 < (int_64)4611686018427387904) ){ goto $label$22 }
	CALL eosio_assert([0], [9576])
	goto $label$22 
	
.LABEL $label$23
	CALL eosio_assert([0], [9557])
	
.LABEL $label$22
	*((($8 + [64]) + [32])) = $9
	*(($8 + [112])) = $10
	*(($8 + [128])) = $16
	*((($8 + [64]) + [16])) = *(($2 + [8]))
	*($8 + [64]) = $1
	*($8 + [88]) = $15
	*($8 + [104]) = $12
	*($8 + [120]) = $17
	*($8 + [72]) = *($2)
	*($8 + [136]) = ($6 + [1])
	*($8 + [140]) = ($7 + [1])
	$4 = (($8 + [176]) + [40])
	$3 = *($4)
	if ( ((uint_32)$3 >= (uint_32)*(($8 + [220]))) ){ goto $label$25 }
	$15 = *($0)
	*($3 + [8]) = *($8 + [152])
	*($3) = $15
	*($3 + [16 align=4]) = (int_64)0
	*(($2 = ($3 + [24]))) = [0]
	$5 = CALL $7([16])
	*($3 + [16]) = $5
	$6 = ($5 + [16])
	*($2) = $6
	*(($5 + [8])) = *((($8 + [160]) + [8]))
	*($5) = *($8 + [160])
	*(($3 + [20])) = $6
	*($3 + [28 align=4]) = (int_64)0
	*(($3 + [36])) = [0]
	CALL $46(($3 + [28]), [80])
	$5 = *(($3 + [32]))
	$3 = *($3 + [28])
	*($8 + [308]) = $3
	*($8 + [304]) = $3
	*($8 + [312]) = $5
	*($8 + [320]) = ($8 + [304])
	*($8 + [328]) = ($8 + [64])
	CALL $154(($8 + [328]), ($8 + [320]))
	*($4) = (*($4) + [40])
	goto $label$24 
	
.LABEL $label$25
	CALL $155(($8 + [212]), ($8 + [160]), $0, ($8 + [152]), ($8 + [64]))
	
.LABEL $label$24
	*(($8 + [196])) = [2]
	$15 = CALL $97($0)
	*($8 + [72]) = (int_64)0
	*($8 + [64]) = $15
	CALL $98(($8 + [176]), ($8 + [64]), *($0), [0])
	CALL $99(($8 + [176]))
	$global$0 = ($8 + [336])
}

void .FUNC $163 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $7([88])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [68]) = $1
	CALL $297(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [72])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $298(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $9($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $162 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($4 + [136])) = [0]
	*($4 + [120]) = (int_64)-1
	*($4 + [128]) = (int_64)0
	$5 = *($0)
	*($4 + [104]) = $5
	*($4 + [112]) = $5
	CALL $71(($4 + [8]), ($4 + [104]))
	if ( ((int_64)*($1 + [8]) == (int_64)*(($4 + [32]))) ){ goto $label$1 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$1
	$5 = ((int_64)*($4 + [24]) + (int_64)*($1))
	*($4 + [24]) = $5
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [9557])
	$5 = *(($4 + [24]))
	
.LABEL $label$2
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [9576])
	
.LABEL $label$3
	if ( ((int_64)*($2 + [8]) == (int_64)*(($4 + [88]))) ){ goto $label$4 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$4
	$5 = ((int_64)*($4 + [80]) + (int_64)*($2))
	*($4 + [80]) = $5
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9557])
	$5 = *(($4 + [80]))
	
.LABEL $label$5
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [9576])
	
.LABEL $label$6
	*($4 + [100]) = (*($4 + [100]) + $3)
	CALL $65(($4 + [104]), ($4 + [8]), *($0))
	$0 = *($4 + [128])
	if ( ($0 == 0) ){ goto $label$7 }
	$3 = ($4 + [132])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $9($1)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($4 + [128]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $0
	
.LABEL $label$8
	*($3) = $0
	CALL $9($2)
	
.LABEL $label$7
	$global$0 = ($4 + [144])
}

void .FUNC $161 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [336])
	$global$0 = $3
	*($3 + [328]) = $1
	*(($3 + [320])) = [0]
	*($3 + [304]) = (int_64)-1
	*($3 + [312]) = (int_64)0
	$4 = *($0)
	*($3 + [288]) = $4
	*($3 + [296]) = $4
	CALL $73(($3 + [256]), ($3 + [288]))
	if ( ((int_64)*($3 + [256]) == (int_64)$1) ){ goto $label$5 }
	if ( ((int_64)$1 > (int_64)7130081133533855743) ){ goto $label$7 }
	if ( ((int_64)$1 == (int_64)5307181297324903472) ){ goto $label$5 }
	if ( ((int_64)$1 == (int_64)5307181297324903488) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_64)$1 == (int_64)7130081133533855744) ){ goto $label$5 }
	if ( ((int_64)$1 == (int_64)7464601112396324000) ){ goto $label$5 }
	
.LABEL $label$6
	*($3 + [80]) = (int_64)0
	CALL $173(($3 + [256]), ($3 + [328]), ($3 + [80]), [11400])
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = [0]
	$1 = *($3 + [256])
	*(($3 + [96])) = $1
	*(($3 + [136])) = $1
	*((($3 + [80]) + [104])) = $1
	*($3 + [80]) = $1
	*($3 + [88]) = $1
	*($3 + [128]) = $1
	*($3 + [176]) = $1
	*(($3 + [212])) = [0]
	*(($3 + [204])) = (int_64)0
	*(($3 + [224])) = $1
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [252])) = [0]
	*($3 + [216]) = $1
	$5 = ($3 + [128])
	$0 = CALL $174($5, CALL $fimport$6($1, $1, (int_64)-5915276602093076480, *($3 + [328])))
	if ( ((int_32)*($0 + [176]) == (int_32)$5) ){ goto $label$8 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$8
	$5 = ($0 + [96])
	if ( ((int_64)*(($0 + [104])) == (int_64)*($2 + [8])) ){ goto $label$9 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$9
	$1 = *($2)
	$4 = *($5)
	CALL $175(($3 + [16]), $5)
	$0 = CALL $34(($3 + [16]), [0], [11404])
	$5 = ($0 + [8])
	*((($3 + [32]) + [8])) = *($5)
	*($3 + [32]) = *($0)
	*($0) = (int_64)0
	*($5) = [0]
	$0 = CALL $31(($3 + [32]), [11420])
	$5 = ($0 + [8])
	*((($3 + [48]) + [8])) = *($5)
	*($3 + [48]) = *($0)
	*($0) = (int_64)0
	*($5) = [0]
	CALL $175($3, $2)
	$0 = *($3)
	$2 = ($0 & [1])
	$0 = CALL $32(($3 + [48]), ( *($3 + [8]) ? ($3 | [1]) : $2 ), ( *($3 + [4]) ? uint_32($0 >> [1]) : $2 ))
	$2 = ($0 + [8])
	*((($3 + [64]) + [8])) = *($2)
	*($3 + [64]) = *($0)
	*($0) = (int_64)0
	*($2) = [0]
	if ( ((int_64)$4 < (int_64)$1) ){ goto $label$20 }
	if ( (*($3 + [64]) & [1]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL eosio_assert([0], ( *($3 + [72]) ? (($3 + [64]) | [1]) : (*($3 + [64]) & [1]) ))
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL $9(*($3 + [72]))
	$0 = [1]
	if ( ((*($3) & [1]) == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$0 = [1]
	if ( (*($3) & [1]) ){ goto $label$16 }
	
.LABEL $label$17
	if ( (*($3 + [48]) & $0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $9(*(($3 + [8])))
	if ( ((*($3 + [48]) & $0) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $9(*($3 + [56]))
	$0 = [1]
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$0 = [1]
	if ( (*($3 + [32]) & [1]) ){ goto $label$12 }
	
.LABEL $label$13
	if ( ((*($3 + [16]) & $0) == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	CALL $9(*($3 + [40]))
	if ( ((*($3 + [16]) & $0) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*($3 + [24]))
	
.LABEL $label$10
	CALL $145(($3 + [80]))
	$5 = *($3 + [312])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($3 + [312])
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($3 + [316])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$21:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$22 }
	CALL $9($2)
	
.LABEL $label$22
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$21 }
	$0 = *(($3 + [312]))
	goto $label$1 
	
.LABEL $label$3
	$global$0 = ($3 + [336])
	return 
	
.LABEL $label$2
	$0 = $5
	
.LABEL $label$1
	*($6) = $5
	CALL $9($0)
	$global$0 = ($3 + [336])
}

void .FUNC $160 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	float_64 $9
	$4 = ($global$0 - [192])
	$global$0 = $4
	*($4 + [184]) = $1
	if ( ((int_64)*($2) <= (int_64)0) ){ goto $label$3 }
	$5 = *($3)
	if ( ((int_64)$5 <= (int_64)0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10913])
	$5 = *($3)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10946])
	$5 = *($3)
	
.LABEL $label$1
	$6 = ($3 + [8])
	$7 = *($6)
	*((($4 + [168]) + [8])) = $7
	$8 = *($3)
	*((($4 + [48]) + [8])) = $7
	*($4 + [168]) = $8
	*($4 + [48]) = $8
	CALL $161($0, $1, ($4 + [48]))
	$8 = *($6)
	CALL $146(($4 + [96]), $0, $1, $8)
	if ( ((int_64)$8 == (int_64)*($4 + [104])) ){ goto $label$4 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$4
	if ( ((int_64)*($4 + [96]) >= (int_64)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [11280])
	
.LABEL $label$5
	$8 = *($2)
	$1 = *($3)
	CALL __multi3(($4 + [32]), $1, (int_64)$1 >> (int_64)63), $8, (int_64)$8 >> (int_64)63))
	*((($4 + [152]) + [8])) = *(($3 + [8]))
	*($4 + [152]) = $1
	$5 = *($2 + [8])
	$8 = *((($4 + [32]) + [8]))
	$1 = *($4 + [32])
	if ( (( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$8 < (int_64)0) : (int_64)($8 == 0) ) == 0) ){ goto $label$7 }
	if ( ( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$8 > (int_64)-1) : ((int_64)$8 == (int_64)-1) ) ){ goto $label$6 }
	CALL eosio_assert([0], [11324])
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [11300])
	
.LABEL $label$6
	$9 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *($0 + [68])))
	*($4 + [144]) = $5
	*($4 + [136]) = $1
	if ( ((float_64)(float_64)|$9| < (float_64)(float_64)9223372036854775808) ){ goto $label$11 }
	$8 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$8 = (Rounds 0)($9)
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [11038])
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_64)$1 != (int_64)-9223372036854775808) ){ goto $label$8 }
	if ( ((int_64)$8 != (int_64)-1) ){ goto $label$8 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$8
	$1 = ((int_64)$1 / (int_64)$8)
	*($4 + [136]) = $1
	if ( ((int_64)$1 > (int_64)0) ){ goto $label$12 }
	CALL eosio_assert([0], [10984])
	
.LABEL $label$12
	*((($4 + [16]) + [8])) = *((($4 + [152]) + [8]))
	*(($4 + [8])) = *((($4 + [136]) + [8]))
	*($4 + [16]) = *($4 + [152])
	*($4) = *($4 + [136])
	CALL $162($0, ($4 + [16]), $4, [1])
	*(($4 + [128])) = [0]
	*($4 + [112]) = (int_64)-1
	*($4 + [120]) = (int_64)0
	*($4 + [132]) = [0]
	$1 = *($0)
	*($4 + [96]) = $1
	*($4 + [104]) = $1
	*($4 + [80]) = $2
	*($4 + [84]) = $3
	*($4 + [88]) = $0
	*($4 + [76]) = ($4 + [184])
	*($4 + [72]) = ($4 + [96])
	CALL $163(($4 + [64]), ($4 + [96]), $1, ($4 + [72]))
	$2 = *($4 + [120])
	if ( ($2 == 0) ){ goto $label$13 }
	$6 = ($4 + [124])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$17 }
	CALL $9($0)
	
.LABEL $label$17
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$16 }
	$3 = *(($4 + [120]))
	goto $label$14 
	
.LABEL $label$15
	$3 = $2
	
.LABEL $label$14
	*($6) = $2
	CALL $9($3)
	
.LABEL $label$13
	$global$0 = ($4 + [192])
}

void .FUNC $67 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [160])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$1
	*(($5 = CALL $7([112])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [96]) = $1
	$5 = CALL memcpy($5, *($3), [96])
	*($4 + [104]) = ($4 + [96])
	*($4 + [100]) = $4
	*($4 + [96]) = $4
	*($4 + [112]) = ($4 + [96])
	*($4 + [124]) = ($5 + [16])
	*($4 + [120]) = $5
	*($4 + [128]) = ($5 + [32])
	*($4 + [132]) = ($5 + [48])
	*($4 + [136]) = ($5 + [52])
	*($4 + [140]) = ($5 + [56])
	*($4 + [144]) = ($5 + [72])
	*($4 + [148]) = ($5 + [88])
	*($4 + [152]) = ($5 + [92])
	CALL $371(($4 + [120]), ($4 + [112]))
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)-4157502641443700736, $2, (int_64)-4157502641443700736, $4, [96])
	*($5 + [100]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-4157502641443700736) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)-4157502641443700735
	
.LABEL $label$2
	*($4 + [120]) = $5
	*($4) = (int_64)-4157502641443700736
	*($4 + [96]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)-4157502641443700736
	*($3 + [16]) = $6
	*($4 + [120]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $370(($1 + [24]), ($4 + [120]), $4, ($4 + [96]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [120])
	*($4 + [120]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [160])
}

void .FUNC $169 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	$3 = ($global$0 - [160])
	$global$0 = $3
	CALL require_auth($1)
	if ( CALL $140($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [8689])
	
.LABEL $label$1
	*(($3 + [152])) = [0]
	*($3 + [136]) = (int_64)-1
	*($3 + [144]) = (int_64)0
	$4 = *($0)
	*($3 + [120]) = $4
	*($3 + [128]) = $4
	CALL $73(($3 + [88]), ($3 + [120]))
	$5 = *($0 + [69])
	$6 = *($3 + [112])
	$7 = *($3 + [144])
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = ($3 + [148])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$6 }
	CALL $9($10)
	
.LABEL $label$6
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$5 }
	$9 = *(($3 + [144]))
	goto $label$3 
	
.LABEL $label$4
	$9 = $7
	
.LABEL $label$3
	*($8) = $7
	CALL $9($9)
	
.LABEL $label$2
	if ( ((int_32)($6 & [255]) != (int_32)($5 & [255])) ){ goto $label$7 }
	CALL eosio_assert([0], [8480])
	
.LABEL $label$7
	*(($3 + [152])) = [0]
	*($3 + [136]) = (int_64)-1
	*($3 + [144]) = (int_64)0
	*($3 + [156]) = [0]
	$4 = *($0)
	*($3 + [120]) = $4
	*($3 + [128]) = $4
	*($3 + [80]) = ($3 + [120])
	*($3 + [88]) = (int_64)0
	CALL $149(($3 + [72]), ($3 + [80]), ($3 + [88]))
	$9 = *($3 + [76])
	if ( ($9 == 0) ){ goto $label$8 }
	$4 = *($2)
	$11 = *($2 + [8])
	if ( ((int_64)*(($9 + [56])) == (int_64)$11) ){ goto $label$9 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$9
	$4 = (int_64)
	if ( ((int_64)$4($4 - *($9 + [48]))) <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$4 < (int_64)4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [10402])
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [10380])
	
.LABEL $label$10
	$12 = *(*($3 + [76]))
	$13 = *(($2 + [8]))
	*((($3 + [56]) + [8])) = $13
	$14 = *($2)
	*((($3 + [24]) + [8])) = $13
	*($3 + [56]) = $14
	*($3 + [24]) = $14
	CALL $170($0, $12, $1, ($3 + [24]))
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$8 }
	*((($3 + [8]) + [8])) = $11
	*($3 + [48]) = $11
	*($3 + [8]) = $4
	*($3 + [40]) = $4
	CALL $169($0, $1, ($3 + [8]))
	
.LABEL $label$8
	$7 = *($3 + [144])
	if ( ($7 == 0) ){ goto $label$12 }
	$0 = ($3 + [148])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$14 }
	
.LOOP $label$15:
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$16 }
	CALL $9($10)
	
.LABEL $label$16
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$15 }
	$9 = *(($3 + [144]))
	goto $label$13 
	
.LABEL $label$14
	$9 = $7
	
.LABEL $label$13
	*($0) = $7
	CALL $9($9)
	
.LABEL $label$12
	$global$0 = ($3 + [160])
}

void .FUNC $168 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [112])
	$global$0 = $3
	CALL require_auth($1)
	if ( CALL $140($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [8689])
	
.LABEL $label$1
	*(($3 + [104])) = [0]
	*($3 + [88]) = (int_64)-1
	*($3 + [96]) = (int_64)0
	$4 = *($0)
	*($3 + [72]) = $4
	*($3 + [80]) = $4
	CALL $73(($3 + [40]), ($3 + [72]))
	$5 = *($0 + [69])
	$6 = *($3 + [64])
	$7 = *($3 + [96])
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = ($3 + [100])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$6 }
	CALL $9($10)
	
.LABEL $label$6
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$5 }
	$9 = *(($3 + [96]))
	goto $label$3 
	
.LABEL $label$4
	$9 = $7
	
.LABEL $label$3
	*($8) = $7
	CALL $9($9)
	
.LABEL $label$2
	if ( ((int_32)($6 & [255]) != (int_32)($5 & [255])) ){ goto $label$7 }
	CALL eosio_assert([0], [8480])
	
.LABEL $label$7
	$11 = *(($2 + [8]))
	*((($3 + [24]) + [8])) = $11
	$4 = *($2)
	*((($3 + [8]) + [8])) = $11
	*($3 + [24]) = $4
	*($3 + [8]) = $4
	CALL $169($0, $1, ($3 + [8]))
	$global$0 = ($3 + [112])
}

void .FUNC $66 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [96]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	$1 = CALL memcpy($1, *($3), [96])
	$3 = $4
	$4 = ($3 + [-96])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = $3
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [16])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [32])
	*($5 + [36]) = ($1 + [48])
	*($5 + [40]) = ($1 + [52])
	*($5 + [44]) = ($1 + [56])
	*($5 + [48]) = ($1 + [72])
	*($5 + [52]) = ($1 + [88])
	*($5 + [56]) = ($1 + [92])
	CALL $371(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [100]), $2, $4, [96])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4157502641443700736) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)-4157502641443700735
	
.LABEL $label$3
	$global$0 = ($5 + [64])
}

void .FUNC $61 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth((int_64)7130081133533855744)
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	*($1 + [24]) = (int_64)0
	$2 = *($0)
	*($1) = $2
	*($1 + [8]) = $2
	$0 = CALL db_find_i64($2, $2, (int_64)-4157502641443700736, (int_64)-4157502641443700736)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $62($1, $0)
	if ( ((int_32)*($0 + [96]) == (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	$3 = CALL db_next_i64(*($0 + [100]), ($1 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	CALL $62($1, $3)
	
.LABEL $label$3
	CALL $63($1, $0)
	
.LABEL $label$1
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$4 }
	$5 = ($1 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $9($3)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($1 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $4
	
.LABEL $label$5
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$4
	$global$0 = ($1 + [48])
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10184])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10229])
	
.LABEL $label$2
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$5 }
	$4 = ($3 + [-24])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10279])
	$5 = *($2)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$6 }
	$2 = $3
	
.LOOP $label$7:
	$4 = *($2)
	*($2) = [0]
	$6 = ($2 + [-24])
	$3 = *($6)
	*($6) = $4
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $9($3)
	
.LABEL $label$8
	*(($2 + [-8])) = *(($2 + [16]))
	*(($2 + [-16])) = *(($2 + [8]))
	$2 = ($2 + [24])
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$7 }
	$4 = ($2 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$2) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ($3 + [-24])
	
.LABEL $label$4
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $9($2)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $4
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)*($1 + [96]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10184])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10229])
	
.LABEL $label$2
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$5 }
	$4 = ($3 + [-24])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10279])
	$5 = *($2)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$6 }
	$2 = $3
	
.LOOP $label$7:
	$4 = *($2)
	*($2) = [0]
	$6 = ($2 + [-24])
	$3 = *($6)
	*($6) = $4
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $9($3)
	
.LABEL $label$8
	*(($2 + [-8])) = *(($2 + [16]))
	*(($2 + [-16])) = *(($2 + [8]))
	$2 = ($2 + [24])
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$7 }
	$4 = ($2 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$2) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ($3 + [-24])
	
.LABEL $label$4
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $9($2)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $4
	CALL db_remove_i64(*($1 + [100]))
}

void .FUNC $241 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	*($3 + [304]) = (int_64)0
	*($3 + [296]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy(($3 + [296]), $5, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy(($3 + [160]), $5, [8])
	*((($3 + [296]) + [8])) = *($3 + [160])
	*($3 + [288]) = (int_64)0
	*($3 + [280]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$8
	CALL memcpy(($3 + [280]), $5, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$9
	CALL memcpy(($3 + [160]), $5, [8])
	*((($3 + [280]) + [8])) = *($3 + [160])
	*($3 + [272]) = (int_64)0
	*($3 + [264]) = (int_64)0
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$10
	CALL memcpy(($3 + [264]), $5, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [48])
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$11 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$11
	CALL memcpy(($3 + [160]), $5, [8])
	*((($3 + [264]) + [8])) = *($3 + [160])
	*($3 + [256]) = (int_64)0
	*($3 + [248]) = (int_64)0
	$5 = ($2 + [56])
	if ( ((int_32)$6 != (int_32)[56]) ){ goto $label$12 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$12
	CALL memcpy(($3 + [248]), $5, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [64])
	if ( ((int_32)$6 != (int_32)[64]) ){ goto $label$13 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$13
	CALL memcpy(($3 + [160]), $5, [8])
	*((($3 + [248]) + [8])) = *($3 + [160])
	$5 = ($2 + [72])
	$7 = ($4 & [-4])
	if ( ((int_32)$7 != (int_32)[72]) ){ goto $label$14 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$14
	$6 = ($2 + $4)
	CALL memcpy(($3 + [244]), $5, [4])
	$4 = ($2 + [76])
	if ( ((int_32)$7 != (int_32)[76]) ){ goto $label$15 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$15
	CALL memcpy(($3 + [240]), $4, [4])
	*((($3 + [64]) + [8])) = $6
	*($3 + [144]) = $2
	*($3 + [148]) = ($2 + [80])
	*($3 + [152]) = $6
	*($3 + [64]) = *($3 + [144])
	$2 = CALL $216(($3 + [160]), $0, $1, ($3 + [64]))
	*(($6 = (($3 + [128]) + [8]))) = *((($3 + [296]) + [8]))
	*(($4 = (($3 + [112]) + [8]))) = *((($3 + [280]) + [8]))
	*(($5 = (($3 + [96]) + [8]))) = *((($3 + [264]) + [8]))
	*(($7 = (($3 + [80]) + [8]))) = *((($3 + [248]) + [8]))
	*($3 + [128]) = *($3 + [296])
	*($3 + [112]) = *($3 + [280])
	*($3 + [96]) = *($3 + [264])
	*($3 + [80]) = *($3 + [248])
	$0 = *($3 + [312])
	$8 = *($3 + [244])
	$9 = *($3 + [240])
	*((($3 + [48]) + [8])) = *($6)
	*((($3 + [32]) + [8])) = *($4)
	*((($3 + [16]) + [8])) = *($5)
	*(($3 + [8])) = *($7)
	*($3 + [48]) = *($3 + [128])
	*($3 + [32]) = *($3 + [112])
	*($3 + [16]) = *($3 + [96])
	*($3) = *($3 + [80])
	CALL $151($2, $0, ($3 + [48]), ($3 + [32]), ($3 + [16]), $3, $8, $9)
	if ( (*($2 + [56]) & [1]) ){ goto $label$18 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [320])
	return 
	
.LABEL $label$16
	$global$0 = ($3 + [320])
}

void .FUNC $365 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	float_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *(*($0) + [4])
	if ( ((int_64)*(($4 + [40])) == (int_64)*(($1 + [40]))) ){ goto $label$1 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$1
	$5 = (int_64)
	*($1 + [32]) = $5(*($1 + [32]) - *($4 + [32])))
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [10380])
	$5 = *(($1 + [32]))
	
.LABEL $label$2
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [10402])
	$5 = *(($1 + [32]))
	
.LABEL $label$3
	$0 = *(*($0 + [8]) + [4])
	$6 = *($0 + [16])
	CALL __multi3($2, $5, (int_64)$5 >> (int_64)63), $6, (int_64)$6 >> (int_64)63))
	$7 = *(($0 + [24]))
	$6 = *(($2 + [8]))
	$5 = *($2)
	if ( (( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$6 < (int_64)0) : (int_64)($6 == 0) ) == 0) ){ goto $label$5 }
	if ( ( ((uint_64)$5 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$6 > (int_64)-1) : ((int_64)$6 == (int_64)-1) ) ){ goto $label$4 }
	CALL eosio_assert([0], [11324])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [11300])
	
.LABEL $label$4
	$8 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *($3 + [68])))
	if ( ((float_64)(float_64)|$8| < (float_64)(float_64)9223372036854775808) ){ goto $label$10 }
	$6 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$6 = (Rounds 0)($8)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [11038])
	$5 = ((int_64)$5 / (int_64)$6)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_64)$5 != (int_64)-9223372036854775808) ){ goto $label$11 }
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$11 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$11
	$5 = ((int_64)$5 / (int_64)$6)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10984])
	
.LABEL $label$6
	*($1 + [48]) = $5
	*(($1 + [56])) = $7
	$global$0 = ($2 + [16])
}

void .FUNC $87 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [32]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4992088121770901504, (int_64)-4992088121770901504)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $88($0, $4)
	if ( ((int_32)*($4 + [32]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*($3) = $1
	CALL $89($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $90($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $367 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $366 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4)
	*($3 + [8]) = *(*($4 + [4]) + [8])
	if ( (CALL $17(*($4 + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$1 }
	$6 = *(*($4 + [12]) + [76])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)-4421661421696319488, $3, *(*($4 + [16])))
	*(*(($4 + [12])) + [76]) = $6
	
.LABEL $label$2
	CALL db_idx64_update($6, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$1
	$4 = *($0)
	$6 = *($4)
	*($3 + [8]) = *(*($4 + [4]) + [16])
	if ( (CALL $17((*($4 + [8]) + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($4 + [12]) + [80]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-4421661421696319487, $3, *(*($4 + [16])))
	*((*(($4 + [12])) + [80])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

int_32 .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([88])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [68]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [64])
	CALL $302(($3 + [40]), ($3 + [32]))
	*($5 + [72]) = $1
	*($5 + [76 align=4]) = (int_64)-1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $298(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $68 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$1 = ($global$0 - [224])
	$global$0 = $1
	$2 = ($0 + [56])
	if ( (*($0 + [56]) & [1]) ){ goto $label$5 }
	$3 = ($2 + [1])
	$4 = CALL $16($3)
	if ( ((uint_32)$4 >= (uint_32)[8]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = *(($0 + [64]))
	$4 = CALL $16($3)
	if ( ($4 <= [8]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9347])
	goto $label$2 
	
.LABEL $label$3
	if ( $4 ){ goto $label$2 }
	$5 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	$5 = (int_64)0
	
.LOOP $label$6:
	$6 = (($3 + $4) + [-1])
	$7 = *($6)
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [9392])
	$7 = *($6)
	
.LABEL $label$7
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$6 }
	
.LABEL $label$1
	$8 = ((int_64)$5 & (int_64)72057594037927935)
	$9 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)*($0 + [68]))
	$4 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$5 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$8 = $5
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$8 = $5
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$6 = ($4 + [1])
	$4 = $6
	if ( $7 ){ goto $label$12 }
	$4 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [9494])
	
.LABEL $label$8
	*(($1 + [216])) = [0]
	*($1 + [200]) = (int_64)-1
	$5 = (int_64)0
	*($1 + [208]) = (int_64)0
	*($1 + [220]) = [0]
	$8 = *($0)
	*($1 + [184]) = $8
	*($1 + [192]) = $8
	$4 = CALL db_lowerbound_i64($8, $8, (int_64)-4421661421696319488, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$14 }
	$5 = (int_64)0
	$4 = CALL $69(($1 + [184]), $4)
	if ( ((int_64)*(($4 + [40])) != (int_64)$9) ){ goto $label$15 }
	$10 = [1]
	goto $label$13 
	
.LABEL $label$15
	$10 = [0]
	goto $label$13 
	
.LABEL $label$14
	$10 = [5]
	
.LABEL $label$13
	
.LOOP $label$16:
	goto $label$121 
	
.LABEL $label$122
	$4 = CALL $69(($1 + [184]), $4)
	if ( ((int_64)*(($4 + [40])) == (int_64)$9) ){ goto $label$59 }
	$10 = [0]
	goto $label$16 
	
.LABEL $label$121
	CALL eosio_assert([0], [9514])
	$10 = [1]
	goto $label$16 
	
.LABEL $label$120
	$5 = ((int_64)*($4 + [32]) + (int_64)$5)
	if ( ((int_64)$5 <= (int_64)-4611686018427387904) ){ goto $label$58 }
	$10 = [61]
	goto $label$16 
	
.LABEL $label$119
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$57 }
	$10 = [62]
	goto $label$16 
	
.LABEL $label$118
	CALL eosio_assert([0], [9576])
	goto $label$56 
	
.LABEL $label$117
	CALL eosio_assert([0], [9557])
	$10 = [3]
	goto $label$16 
	
.LABEL $label$116
	$4 = CALL db_next_i64(*($4 + [72]), ($1 + [8]))
	if ( ((int_32)$4 >= (int_32)[0]) ){ goto $label$55 }
	$10 = [5]
	goto $label$16 
	
.LABEL $label$115
	if ( (*($2) & [1]) ){ goto $label$54 }
	$10 = [60]
	goto $label$16 
	
.LABEL $label$114
	$3 = ($2 + [1])
	$4 = CALL $16($3)
	if ( ((uint_32)$4 >= (uint_32)[8]) ){ goto $label$52 }
	$10 = [7]
	goto $label$16 
	
.LABEL $label$113
	if ( $4 ){ goto $label$51 }
	$10 = [58]
	goto $label$16 
	
.LABEL $label$112
	$8 = (int_64)0
	goto $label$48 
	
.LABEL $label$111
	$3 = *(($0 + [64]))
	$4 = CALL $16($3)
	if ( ($4 <= [8]) ){ goto $label$53 }
	$10 = [59]
	goto $label$16 
	
.LABEL $label$110
	CALL eosio_assert([0], [9347])
	$10 = [8]
	goto $label$16 
	
.LABEL $label$109
	$8 = (int_64)0
	$10 = [9]
	goto $label$16 
	
.LABEL $label$108
	$6 = (($3 + $4) + [-1])
	$7 = *($6)
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$49 }
	$10 = [57]
	goto $label$16 
	
.LABEL $label$107
	CALL eosio_assert([0], [9392])
	$7 = *($6)
	$10 = [10]
	goto $label$16 
	
.LABEL $label$106
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$50 }
	$10 = [11]
	goto $label$16 
	
.LABEL $label$105
	$11 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)*(($0 + [68])))
	$8 = ((int_64)$8 & (int_64)72057594037927935)
	$4 = [0]
	$10 = [12]
	goto $label$16 
	
.LABEL $label$104
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$43 }
	$10 = [51]
	goto $label$16 
	
.LABEL $label$103
	$12 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$18 }
	$10 = [52]
	goto $label$16 
	
.LABEL $label$102
	$8 = $12
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$101
	$8 = $12
	$10 = [54]
	goto $label$16 
	
.LABEL $label$100
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$42 }
	$10 = [55]
	goto $label$16 
	
.LABEL $label$99
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$6 = ($4 + [1])
	$4 = $6
	if ( $7 ){ goto $label$17 }
	$10 = [56]
	goto $label$16 
	
.LABEL $label$98
	$4 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$97
	CALL eosio_assert([0], [9494])
	$10 = [14]
	goto $label$16 
	
.LABEL $label$96
	*((($1 + [144]) + [32])) = [0]
	*($1 + [160]) = (int_64)-1
	*($1 + [168]) = (int_64)0
	*($1 + [180]) = [0]
	$12 = *($0)
	*($1 + [144]) = $12
	*($1 + [152]) = $12
	$8 = (int_64)0
	$4 = CALL db_lowerbound_i64($12, $12, (int_64)4520852774463733760, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$41 }
	$10 = [15]
	goto $label$16 
	
.LABEL $label$95
	$8 = (int_64)0
	$4 = CALL $70(($1 + [144]), $4)
	if ( ((int_64)*(($4 + [40])) == (int_64)$11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$94
	$4 = CALL $70(($1 + [144]), $4)
	if ( ((int_64)*(($4 + [40])) == (int_64)$11) ){ goto $label$38 }
	$10 = [16]
	goto $label$16 
	
.LABEL $label$93
	CALL eosio_assert([0], [9514])
	$10 = [17]
	goto $label$16 
	
.LABEL $label$92
	$8 = ((int_64)*($4 + [32]) + (int_64)$8)
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$37 }
	$10 = [49]
	goto $label$16 
	
.LABEL $label$91
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$36 }
	$10 = [50]
	goto $label$16 
	
.LABEL $label$90
	CALL eosio_assert([0], [9576])
	goto $label$35 
	
.LABEL $label$89
	CALL eosio_assert([0], [9557])
	$10 = [19]
	goto $label$16 
	
.LABEL $label$88
	$4 = CALL db_next_i64(*($4 + [72]), ($1 + [8]))
	if ( ((int_32)$4 >= (int_32)[0]) ){ goto $label$34 }
	$10 = [21]
	goto $label$16 
	
.LABEL $label$87
	*((($1 + [104]) + [32])) = [0]
	*($1 + [120]) = (int_64)-1
	*($1 + [128]) = (int_64)0
	$12 = *($0)
	*($1 + [104]) = $12
	*($1 + [112]) = $12
	CALL $71(($1 + [8]), ($1 + [104]))
	*(($1 + [32])) = $9
	*(($1 + [48])) = $11
	*($1 + [24]) = $5
	*($1 + [40]) = $8
	CALL $65(($1 + [104]), ($1 + [8]), *($0))
	$6 = *($1 + [128])
	if ( ($6 == 0) ){ goto $label$33 }
	$10 = [22]
	goto $label$16 
	
.LABEL $label$86
	$3 = ($1 + [132])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$32 }
	$10 = [23]
	goto $label$16 
	
.LABEL $label$85
	$10 = [24]
	goto $label$16 
	
.LABEL $label$84
	$4 = ($4 + [-24])
	$7 = *($4)
	*($4) = [0]
	if ( ($7 == 0) ){ goto $label$30 }
	$10 = [25]
	goto $label$16 
	
.LABEL $label$83
	CALL $9($7)
	$10 = [26]
	goto $label$16 
	
.LABEL $label$82
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$31 }
	$10 = [27]
	goto $label$16 
	
.LABEL $label$81
	$4 = *(($1 + [128]))
	goto $label$29 
	
.LABEL $label$80
	$4 = $6
	$10 = [28]
	goto $label$16 
	
.LABEL $label$79
	*($3) = $6
	CALL $9($4)
	$10 = [29]
	goto $label$16 
	
.LABEL $label$78
	$6 = *($1 + [168])
	if ( ($6 == 0) ){ goto $label$28 }
	$10 = [30]
	goto $label$16 
	
.LABEL $label$77
	$3 = ($1 + [172])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$27 }
	$10 = [31]
	goto $label$16 
	
.LABEL $label$76
	$10 = [32]
	goto $label$16 
	
.LABEL $label$75
	$4 = ($4 + [-24])
	$7 = *($4)
	*($4) = [0]
	if ( ($7 == 0) ){ goto $label$25 }
	$10 = [33]
	goto $label$16 
	
.LABEL $label$74
	CALL $9($7)
	$10 = [34]
	goto $label$16 
	
.LABEL $label$73
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$26 }
	$10 = [35]
	goto $label$16 
	
.LABEL $label$72
	$4 = *(($1 + [168]))
	goto $label$24 
	
.LABEL $label$71
	$4 = $6
	$10 = [36]
	goto $label$16 
	
.LABEL $label$70
	*($3) = $6
	CALL $9($4)
	$10 = [37]
	goto $label$16 
	
.LABEL $label$69
	$6 = *($1 + [208])
	if ( ($6 == 0) ){ goto $label$23 }
	$10 = [38]
	goto $label$16 
	
.LABEL $label$68
	$3 = ($1 + [212])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$22 }
	$10 = [39]
	goto $label$16 
	
.LABEL $label$67
	$10 = [40]
	goto $label$16 
	
.LABEL $label$66
	$4 = ($4 + [-24])
	$7 = *($4)
	*($4) = [0]
	if ( ($7 == 0) ){ goto $label$20 }
	$10 = [41]
	goto $label$16 
	
.LABEL $label$65
	CALL $9($7)
	$10 = [42]
	goto $label$16 
	
.LABEL $label$64
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$21 }
	$10 = [43]
	goto $label$16 
	
.LABEL $label$63
	$4 = *(($1 + [208]))
	goto $label$19 
	
.LABEL $label$62
	$4 = $6
	$10 = [44]
	goto $label$16 
	
.LABEL $label$61
	*($3) = $6
	CALL $9($4)
	$10 = [45]
	goto $label$16 
	
.LABEL $label$60
	$global$0 = ($1 + [224])
	return 
	
.LABEL $label$59
	$10 = [1]
	goto $label$16 
	
.LABEL $label$58
	$10 = [2]
	goto $label$16 
	
.LABEL $label$57
	$10 = [3]
	goto $label$16 
	
.LABEL $label$56
	$10 = [3]
	goto $label$16 
	
.LABEL $label$55
	$10 = [4]
	goto $label$16 
	
.LABEL $label$54
	$10 = [6]
	goto $label$16 
	
.LABEL $label$53
	$10 = [7]
	goto $label$16 
	
.LABEL $label$52
	$10 = [59]
	goto $label$16 
	
.LABEL $label$51
	$10 = [8]
	goto $label$16 
	
.LABEL $label$50
	$10 = [9]
	goto $label$16 
	
.LABEL $label$49
	$10 = [10]
	goto $label$16 
	
.LABEL $label$48
	$10 = [11]
	goto $label$16 
	
.LABEL $label$47
	$10 = [12]
	goto $label$16 
	
.LABEL $label$46
	$10 = [14]
	goto $label$16 
	
.LABEL $label$45
	$10 = [12]
	goto $label$16 
	
.LABEL $label$44
	$10 = [14]
	goto $label$16 
	
.LABEL $label$43
	$10 = [13]
	goto $label$16 
	
.LABEL $label$42
	$10 = [13]
	goto $label$16 
	
.LABEL $label$41
	$10 = [21]
	goto $label$16 
	
.LABEL $label$40
	$10 = [17]
	goto $label$16 
	
.LABEL $label$39
	$10 = [16]
	goto $label$16 
	
.LABEL $label$38
	$10 = [17]
	goto $label$16 
	
.LABEL $label$37
	$10 = [18]
	goto $label$16 
	
.LABEL $label$36
	$10 = [19]
	goto $label$16 
	
.LABEL $label$35
	$10 = [19]
	goto $label$16 
	
.LABEL $label$34
	$10 = [20]
	goto $label$16 
	
.LABEL $label$33
	$10 = [29]
	goto $label$16 
	
.LABEL $label$32
	$10 = [48]
	goto $label$16 
	
.LABEL $label$31
	$10 = [24]
	goto $label$16 
	
.LABEL $label$30
	$10 = [26]
	goto $label$16 
	
.LABEL $label$29
	$10 = [28]
	goto $label$16 
	
.LABEL $label$28
	$10 = [37]
	goto $label$16 
	
.LABEL $label$27
	$10 = [47]
	goto $label$16 
	
.LABEL $label$26
	$10 = [32]
	goto $label$16 
	
.LABEL $label$25
	$10 = [34]
	goto $label$16 
	
.LABEL $label$24
	$10 = [36]
	goto $label$16 
	
.LABEL $label$23
	$10 = [45]
	goto $label$16 
	
.LABEL $label$22
	$10 = [46]
	goto $label$16 
	
.LABEL $label$21
	$10 = [40]
	goto $label$16 
	
.LABEL $label$20
	$10 = [42]
	goto $label$16 
	
.LABEL $label$19
	$10 = [44]
	goto $label$16 
	
.LABEL $label$18
	$10 = [53]
	goto $label$16 
	
.LABEL $label$17
	$10 = [54]
	goto $label$16 
	$10
}

void .FUNC $248 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	*($3 + [160]) = (int_64)0
	*($3 + [152]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [152]), $5, [8])
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy(($3 + [72]), $5, [8])
	*(($5 = (($3 + [152]) + [8]))) = *($3 + [72])
	*((($3 + [24]) + [8])) = $4
	*($3 + [56]) = $2
	*($3 + [60]) = ($2 + [24])
	*($3 + [64]) = $4
	*($3 + [24]) = *($3 + [56])
	$2 = CALL $216(($3 + [72]), $0, $1, ($3 + [24]))
	$0 = *($5)
	*((($3 + [40]) + [8])) = $0
	*((($3 + [8]) + [8])) = $0
	$0 = *($3 + [152])
	*($3 + [40]) = $0
	*($3 + [8]) = $0
	CALL $168($2, *($3 + [168]), ($3 + [8]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$10 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [176])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [176])
}

void .FUNC $249 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	*($3 + [160]) = (int_64)0
	*($3 + [152]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [152]), $5, [8])
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy(($3 + [72]), $5, [8])
	*(($5 = (($3 + [152]) + [8]))) = *($3 + [72])
	*((($3 + [24]) + [8])) = $4
	*($3 + [56]) = $2
	*($3 + [60]) = ($2 + [24])
	*($3 + [64]) = $4
	*($3 + [24]) = *($3 + [56])
	$2 = CALL $216(($3 + [72]), $0, $1, ($3 + [24]))
	$0 = *($5)
	*((($3 + [40]) + [8])) = $0
	*((($3 + [8]) + [8])) = $0
	$0 = *($3 + [152])
	*($3 + [40]) = $0
	*($3 + [8]) = $0
	CALL $171($2, *($3 + [168]), ($3 + [8]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$10 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [176])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [176])
}

void .FUNC $246 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [224])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [216]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($3 + [216]), $2, [8])
	*($3 + [208]) = (int_64)0
	*($3 + [200]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy(($3 + [200]), $5, [8])
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy(($3 + [104]), $5, [8])
	*((($3 + [200]) + [8])) = *($3 + [104])
	*($3 + [192]) = (int_64)0
	*($3 + [184]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$8
	$4 = ($2 + $4)
	CALL memcpy(($3 + [184]), $5, [8])
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$9
	CALL memcpy(($3 + [104]), $5, [8])
	*(($6 = (($3 + [184]) + [8]))) = *($3 + [104])
	*((($3 + [40]) + [8])) = $4
	*($3 + [88]) = $2
	*($3 + [92]) = ($2 + [40])
	*($3 + [96]) = $4
	*($3 + [40]) = *($3 + [88])
	$2 = CALL $216(($3 + [104]), $0, $1, ($3 + [40]))
	$0 = *((($3 + [200]) + [8]))
	*((($3 + [72]) + [8])) = $0
	$1 = *($6)
	*((($3 + [56]) + [8])) = $1
	*((($3 + [24]) + [8])) = $0
	*((($3 + [8]) + [8])) = $1
	$0 = *($3 + [200])
	*($3 + [72]) = $0
	$1 = *($3 + [184])
	*($3 + [56]) = $1
	*($3 + [24]) = $0
	*($3 + [8]) = $1
	CALL $159($2, *($3 + [216]), ($3 + [24]), ($3 + [8]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$12 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [224])
	return 
	
.LABEL $label$10
	$global$0 = ($3 + [224])
}

void .FUNC $247 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [288])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [216]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($3 + [216]), $2, [8])
	*($3 + [208]) = (int_64)0
	*($3 + [200]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy(($3 + [200]), $5, [8])
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy(($3 + [104]), $5, [8])
	*((($3 + [200]) + [8])) = *($3 + [104])
	*($3 + [192]) = (int_64)0
	*($3 + [184]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$8
	$4 = ($2 + $4)
	CALL memcpy(($3 + [184]), $5, [8])
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$9
	CALL memcpy(($3 + [104]), $5, [8])
	*(($6 = (($3 + [184]) + [8]))) = *($3 + [104])
	*((($3 + [40]) + [8])) = $4
	*($3 + [88]) = $2
	*($3 + [92]) = ($2 + [40])
	*($3 + [96]) = $4
	*($3 + [40]) = *($3 + [88])
	$2 = CALL $216(($3 + [104]), $0, $1, ($3 + [40]))
	*(($4 = (($3 + [72]) + [8]))) = *((($3 + [200]) + [8]))
	*(($5 = (($3 + [56]) + [8]))) = *($6)
	*($3 + [72]) = *($3 + [200])
	*($3 + [56]) = *($3 + [184])
	$0 = *($3 + [216])
	*(($6 = (($3 + [240]) + [8]))) = *($5)
	$1 = *($4)
	*((($3 + [224]) + [8])) = $1
	*((($3 + [272]) + [8])) = $1
	*((($3 + [24]) + [8])) = $1
	*($3 + [240]) = *($3 + [56])
	$1 = *($3 + [72])
	*($3 + [224]) = $1
	*($3 + [272]) = $1
	*($3 + [24]) = $1
	CALL $165($2, $0, ($3 + [24]))
	$1 = *($6)
	*((($3 + [256]) + [8])) = $1
	*((($3 + [8]) + [8])) = $1
	$1 = *($3 + [240])
	*($3 + [8]) = $1
	*($3 + [256]) = $1
	CALL $156($2, $0, ($3 + [8]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$12 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [288])
	return 
	
.LABEL $label$10
	$global$0 = ($3 + [288])
}

void .FUNC $244 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL $196($2)
	if ( (*($2 + [56]) & [1]) ){ goto $label$7 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

void .FUNC $245 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [224])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [216]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($3 + [216]), $2, [8])
	*($3 + [208]) = (int_64)0
	*($3 + [200]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy(($3 + [200]), $5, [8])
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy(($3 + [104]), $5, [8])
	*((($3 + [200]) + [8])) = *($3 + [104])
	*($3 + [192]) = (int_64)0
	*($3 + [184]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$8
	$4 = ($2 + $4)
	CALL memcpy(($3 + [184]), $5, [8])
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$9
	CALL memcpy(($3 + [104]), $5, [8])
	*(($6 = (($3 + [184]) + [8]))) = *($3 + [104])
	*((($3 + [40]) + [8])) = $4
	*($3 + [88]) = $2
	*($3 + [92]) = ($2 + [40])
	*($3 + [96]) = $4
	*($3 + [40]) = *($3 + [88])
	$2 = CALL $216(($3 + [104]), $0, $1, ($3 + [40]))
	$0 = *((($3 + [200]) + [8]))
	*((($3 + [72]) + [8])) = $0
	$1 = *($6)
	*((($3 + [56]) + [8])) = $1
	*((($3 + [24]) + [8])) = $0
	*((($3 + [8]) + [8])) = $1
	$0 = *($3 + [200])
	*($3 + [72]) = $0
	$1 = *($3 + [184])
	*($3 + [56]) = $1
	*($3 + [24]) = $0
	*($3 + [8]) = $1
	CALL $139($2, *($3 + [216]), ($3 + [24]), ($3 + [8]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$12 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [224])
	return 
	
.LABEL $label$10
	$global$0 = ($3 + [224])
}

void .FUNC $242 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL $61($2)
	if ( (*($2 + [56]) & [1]) ){ goto $label$7 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

void .FUNC $243 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	*($3 + [144]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [144]), $2, [8])
	*($3 + [64]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy(($3 + [64]), $6, [8])
	*(($4 = (($3 + [144]) + [8]))) = *($3 + [64])
	*((($3 + [16]) + [8])) = $5
	*($3 + [48]) = $2
	*($3 + [52]) = ($2 + [16])
	*($3 + [56]) = $5
	*($3 + [16]) = *($3 + [48])
	$2 = CALL $216(($3 + [64]), $0, $1, ($3 + [16]))
	$0 = *($4)
	*((($3 + [32]) + [8])) = $0
	*(($3 + [8])) = $0
	$0 = *($3 + [144])
	*($3) = $0
	*($3 + [32]) = $0
	CALL $64($2, $3)
	if ( (*($2 + [56]) & [1]) ){ goto $label$9 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [160])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [160])
}

void .FUNC $240 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	*($3 + [304]) = (int_64)0
	*($3 + [296]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy(($3 + [296]), $5, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy(($3 + [160]), $5, [8])
	*((($3 + [296]) + [8])) = *($3 + [160])
	*($3 + [288]) = (int_64)0
	*($3 + [280]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$8
	CALL memcpy(($3 + [280]), $5, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$9
	CALL memcpy(($3 + [160]), $5, [8])
	*((($3 + [280]) + [8])) = *($3 + [160])
	*($3 + [272]) = (int_64)0
	*($3 + [264]) = (int_64)0
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$10
	CALL memcpy(($3 + [264]), $5, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [48])
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$11 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$11
	CALL memcpy(($3 + [160]), $5, [8])
	*((($3 + [264]) + [8])) = *($3 + [160])
	*($3 + [256]) = (int_64)0
	*($3 + [248]) = (int_64)0
	$5 = ($2 + [56])
	if ( ((int_32)$6 != (int_32)[56]) ){ goto $label$12 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$12
	CALL memcpy(($3 + [248]), $5, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [64])
	if ( ((int_32)$6 != (int_32)[64]) ){ goto $label$13 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$13
	CALL memcpy(($3 + [160]), $5, [8])
	*((($3 + [248]) + [8])) = *($3 + [160])
	$5 = ($2 + [72])
	$7 = ($4 & [-4])
	if ( ((int_32)$7 != (int_32)[72]) ){ goto $label$14 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$14
	$6 = ($2 + $4)
	CALL memcpy(($3 + [244]), $5, [4])
	$4 = ($2 + [76])
	if ( ((int_32)$7 != (int_32)[76]) ){ goto $label$15 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$15
	CALL memcpy(($3 + [240]), $4, [4])
	*((($3 + [64]) + [8])) = $6
	*($3 + [144]) = $2
	*($3 + [148]) = ($2 + [80])
	*($3 + [152]) = $6
	*($3 + [64]) = *($3 + [144])
	$2 = CALL $216(($3 + [160]), $0, $1, ($3 + [64]))
	*(($6 = (($3 + [128]) + [8]))) = *((($3 + [296]) + [8]))
	*(($4 = (($3 + [112]) + [8]))) = *((($3 + [280]) + [8]))
	*(($5 = (($3 + [96]) + [8]))) = *((($3 + [264]) + [8]))
	*(($7 = (($3 + [80]) + [8]))) = *((($3 + [248]) + [8]))
	*($3 + [128]) = *($3 + [296])
	*($3 + [112]) = *($3 + [280])
	*($3 + [96]) = *($3 + [264])
	*($3 + [80]) = *($3 + [248])
	$0 = *($3 + [312])
	$8 = *($3 + [244])
	$9 = *($3 + [240])
	*((($3 + [48]) + [8])) = *($6)
	*((($3 + [32]) + [8])) = *($4)
	*((($3 + [16]) + [8])) = *($5)
	*(($3 + [8])) = *($7)
	*($3 + [48]) = *($3 + [128])
	*($3 + [32]) = *($3 + [112])
	*($3 + [16]) = *($3 + [96])
	*($3) = *($3 + [80])
	CALL $164($2, $0, ($3 + [48]), ($3 + [32]), ($3 + [16]), $3, $8, $9)
	if ( (*($2 + [56]) & [1]) ){ goto $label$18 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [320])
	return 
	
.LABEL $label$16
	$global$0 = ($3 + [320])
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([112])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [96]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [16])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [52])
	*($3 + [60]) = ($5 + [56])
	*($3 + [64]) = ($5 + [72])
	*($3 + [68]) = ($5 + [88])
	*($3 + [72]) = ($5 + [92])
	CALL $369(($3 + [40]), ($3 + [32]))
	*($5 + [100]) = $1
	*($3 + [32]) = $5
	*($3 + [40]) = (int_64)-4157502641443700736
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)-4157502641443700736
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $370(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $84 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = ($global$0 - [128])
	$global$0 = $6
	CALL prints([9948])
	CALL prints([9980])
	CALL printn($1)
	CALL prints([9301])
	CALL prints([10000])
	CALL printn($2)
	CALL prints([9301])
	CALL prints([10020])
	CALL printn($3)
	CALL prints([9301])
	CALL prints([10040])
	CALL $175(($6 + [8]), $4)
	$7 = *($6 + [8])
	$8 = ($7 & [1])
	CALL prints_l(( *($6 + [16]) ? (($6 + [8]) | [1]) : $8 ), ( *($6 + [12]) ? uint_32($7 >> [1]) : $8 ))
	if ( ((*($6 + [8]) & [1]) == 0) ){ goto $label$1 }
	CALL $9(*(($6 + [16])))
	
.LABEL $label$1
	CALL prints([9301])
	CALL prints([10060])
	$7 = *($5)
	$8 = ($7 & [1])
	CALL prints_l(( *($5 + [8]) ? ($5 + [1]) : $8 ), ( *($5 + [4]) ? uint_32($7 >> [1]) : $8 ))
	CALL prints([9301])
	*((($6 + [8]) + [24])) = *(($4 + [8]))
	*($6 + [16]) = $3
	*($6 + [8]) = $2
	*($6 + [24]) = *($4)
	$4 = CALL $26((($6 + [8]) + [32]), $5)
	*($6 + [64]) = (int_64)-3617168760277827584
	*($6 + [56]) = $1
	*(($5 = CALL $7([16]))) = $2
	*($5 + [8]) = (int_64)-6402241254016417792
	*((($6 + [56]) + [36])) = [0]
	$7 = ($5 + [16])
	*((($6 + [56]) + [24])) = $7
	*(($6 + [76])) = $7
	*($6 + [72]) = $5
	*($6 + [84 align=4]) = (int_64)0
	$5 = *($4)
	$4 = ( *((($6 + [8]) + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($4 + [32])
	$2 = (CASTING uint_64)(uint_32 $4)
	$4 = ($6 + [84])
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$2 }
	if ( ($5 == 0) ){ goto $label$4 }
	CALL $46($4, $5)
	$4 = *(($6 + [88]))
	$5 = *(($6 + [84]))
	goto $label$3 
	
.LABEL $label$4
	$4 = [0]
	$5 = [0]
	
.LABEL $label$3
	*($6 + [100]) = $5
	*($6 + [96]) = $5
	*($6 + [104]) = $4
	*($6 + [112]) = ($6 + [96])
	*($6 + [120]) = ($6 + [8])
	CALL $271(($6 + [120]), ($6 + [112]))
	CALL $48(($6 + [56]))
	$5 = *($6 + [84])
	if ( ($5 == 0) ){ goto $label$5 }
	*(($6 + [88])) = $5
	CALL $9($5)
	
.LABEL $label$5
	$5 = *($6 + [72])
	if ( ($5 == 0) ){ goto $label$6 }
	*(($6 + [76])) = $5
	CALL $9($5)
	
.LABEL $label$6
	if ( ((*($6 + [40]) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*(($6 + [48])))
	
.LABEL $label$7
	CALL prints([10080])
	$global$0 = ($6 + [128])
}

void .FUNC $199 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$5 = ($global$0 - [192])
	$global$0 = $5
	*(($5 + [128])) = [0]
	*($5 + [112]) = (int_64)-1
	*($5 + [120]) = (int_64)0
	$6 = *($0)
	*($5 + [96]) = $6
	*($5 + [104]) = $6
	CALL $73(($5 + [24]), ($5 + [96]))
	$7 = *($0 + [69])
	$8 = *($5 + [48])
	$9 = *($5 + [120])
	if ( ($9 == 0) ){ goto $label$1 }
	$10 = ($5 + [124])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$4:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$5 }
	CALL $9($12)
	
.LABEL $label$5
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$4 }
	$11 = *(($5 + [120]))
	goto $label$2 
	
.LABEL $label$3
	$11 = $9
	
.LABEL $label$2
	*($10) = $9
	CALL $9($11)
	
.LABEL $label$1
	if ( ((int_32)($8 & [255]) != (int_32)($7 & [255])) ){ goto $label$6 }
	CALL eosio_assert([0], [8480])
	
.LABEL $label$6
	if ( ((int_64)*($0) != (int_64)$2) ){ goto $label$7 }
	if ( (CALL $35($4, [9012]) == 0) ){ goto $label$7 }
	*(($5 + [128])) = [0]
	*($5 + [112]) = (int_64)-1
	*($5 + [120]) = (int_64)0
	$2 = *($0)
	*($5 + [96]) = $2
	*($5 + [104]) = $2
	CALL $73(($5 + [64]), ($5 + [96]))
	$2 = *($0 + [8])
	if ( ((int_64)$2 == (int_64)*($5 + [64])) ){ goto $label$8 }
	if ( ((int_64)$2 == (int_64)*($5 + [72])) ){ goto $label$8 }
	CALL eosio_assert([0], [9024])
	
.LABEL $label$8
	if ( (*($0 + [56]) & [1]) ){ goto $label$13 }
	$7 = (($0 + [56]) + [1])
	$11 = CALL $16($7)
	if ( ((uint_32)$11 >= (uint_32)[8]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$7 = *(($0 + [64]))
	$11 = CALL $16($7)
	if ( ($11 <= [8]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL eosio_assert([0], [9347])
	goto $label$10 
	
.LABEL $label$11
	if ( $11 ){ goto $label$10 }
	$2 = (int_64)0
	goto $label$9 
	
.LABEL $label$10
	$2 = (int_64)0
	
.LOOP $label$14:
	$9 = (($7 + $11) + [-1])
	$12 = *($9)
	if ( ((($12 + [-65]) & [255]) <= [26]) ){ goto $label$15 }
	CALL eosio_assert([0], [9392])
	$12 = *($9)
	
.LABEL $label$15
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56))
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$14 }
	
.LABEL $label$9
	$13 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)*($0 + [68]))
	$6 = *($3 + [8])
	if ( ((int_64)$6 == (int_64)$13) ){ goto $label$17 }
	if ( ((int_64)$6 == (int_64)*($5 + [80])) ){ goto $label$18 }
	CALL eosio_assert([0], [9102])
	$6 = *(($3 + [8]))
	
.LABEL $label$18
	$2 = *(($0 + [8]))
	if ( ((int_64)$2 != (int_64)*($5 + [64])) ){ goto $label$16 }
	if ( ((int_64)$6 == (int_64)$13) ){ goto $label$16 }
	CALL eosio_assert([0], [9171])
	
.LABEL $label$17
	$2 = *(($0 + [8]))
	
.LABEL $label$16
	if ( ((int_64)$2 != (int_64)*($5 + [72])) ){ goto $label$19 }
	if ( ((int_64)*(($3 + [8])) == (int_64)*($5 + [80])) ){ goto $label$19 }
	CALL eosio_assert([0], [9208])
	
.LABEL $label$19
	*(($5 + [56])) = [0]
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	$2 = *($0)
	*($5 + [24]) = $2
	*($5 + [32]) = $1
	*($5 + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	$11 = CALL db_find_i64($2, $1, (int_64)4152997948076064768, (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8)
	if ( ((int_32)$11) < (int_32)[0]) ){ goto $label$21 }
	$11 = CALL $76(($5 + [24]), $11)
	if ( ((int_32)*($11 + [24]) == (int_32)($5 + [24])) ){ goto $label$22 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$22
	if ( ((int_64)*($11 + [16]) == (int_64)*(($0 + [8]))) ){ goto $label$23 }
	CALL eosio_assert([0], [9252])
	
.LABEL $label$23
	$2 = *($0)
	*($5 + [144]) = $3
	*($5 + [148]) = ($5 + [8])
	CALL $200(($5 + [24]), $11, $2, ($5 + [144]))
	goto $label$20 
	
.LABEL $label$21
	$6 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [24])) ){ goto $label$24 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$24
	*(($11 = CALL $7([40])) + [24]) = ($5 + [24])
	$2 = *(($3 + [8]))
	*($11 + [8]) = $2
	$13 = *($3)
	*($11) = $13
	*($11 + [16]) = *(($0 + [8]))
	*((($5 + [8]) + [8])) = $2
	*($5 + [8]) = $13
	*($5 + [184]) = (($5 + [144]) + [24])
	*($5 + [180]) = ($5 + [144])
	*($5 + [176]) = ($5 + [144])
	CALL $189(($5 + [176]), $11)
	$2 = (uint_64)*($11 + [8]) >> (uint_64)(int_64)8
	$9 = CALL db_store_i64(*((($5 + [24]) + [8])), (int_64)4152997948076064768, $6, $2), ($5 + [144]), [24]
	*($11 + [28]) = $9)
	$12 = ($5 + [40])
	if ( (uint_64)($2 <= *($12)) ){ goto $label$25 }
	*($12) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$25
	*($5 + [176]) = $11
	$2 = (uint_64)*(($11 + [8])) >> (uint_64)(int_64)8
	*($5 + [144]) = $2)
	*($5 + [140]) = $9
	$7 = ($5 + [52])
	$12 = *($7)
	if ( ((uint_32)$12 >= (uint_32)*(($5 + [56]))) ){ goto $label$27 }
	*($12 + [8]) = $2
	*($12 + [16]) = $9
	*($5 + [176]) = [0]
	*($12) = $11
	*($7) = ($12 + [24])
	$11 = *($5 + [176])
	*($5 + [176]) = [0]
	if ( $11 ){ goto $label$26 }
	goto $label$20 
	
.LABEL $label$27
	CALL $190(($5 + [48]), ($5 + [176]), ($5 + [144]), ($5 + [140]))
	$11 = *($5 + [176])
	*($5 + [176]) = [0]
	if ( ($11 == 0) ){ goto $label$20 }
	
.LABEL $label$26
	CALL $9($11)
	
.LABEL $label$20
	CALL prints([9301])
	CALL printn($1)
	CALL prints([9303])
	CALL $175(($5 + [144]), $3)
	$12 = *($5 + [144])
	$9 = ($12 & [1])
	$11 = (($5 + [144]) | [1])
	CALL prints_l(( *($5 + [152]) ? $11 : $9 ), ( *($5 + [148]) ? uint_32($12 >> [1]) : $9 ))
	if ( ((*($5 + [144]) & [1]) == 0) ){ goto $label$28 }
	CALL $9(*(($5 + [152])))
	
.LABEL $label$28
	CALL prints([9301])
	CALL printn($1)
	CALL prints([9322])
	CALL $175(($5 + [144]), ($5 + [8]))
	$12 = *($5 + [144])
	$9 = ($12 & [1])
	CALL prints_l(( *($5 + [152]) ? $11 : $9 ), ( *($5 + [148]) ? uint_32($12 >> [1]) : $9 ))
	if ( ((*($5 + [144]) & [1]) == 0) ){ goto $label$29 }
	CALL $9(*(($5 + [152])))
	
.LABEL $label$29
	CALL prints([9301])
	$9 = *($5 + [48])
	if ( ($9 == 0) ){ goto $label$30 }
	$7 = ($5 + [52])
	$11 = *($7)
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$32 }
	
.LOOP $label$33:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$34 }
	CALL $9($12)
	
.LABEL $label$34
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$33 }
	$11 = *(($5 + [48]))
	goto $label$31 
	
.LABEL $label$32
	$11 = $9
	
.LABEL $label$31
	*($7) = $9
	CALL $9($11)
	
.LABEL $label$30
	$9 = *($5 + [120])
	if ( ($9 == 0) ){ goto $label$7 }
	$7 = ($5 + [124])
	$11 = *($7)
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$36 }
	
.LOOP $label$37:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$38 }
	CALL $9($12)
	
.LABEL $label$38
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$37 }
	$11 = *(($5 + [120]))
	goto $label$35 
	
.LABEL $label$36
	$11 = $9
	
.LABEL $label$35
	*($7) = $9
	CALL $9($11)
	
.LABEL $label$7
	$global$0 = ($5 + [192])
}

void .FUNC $83 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	$7 = *($3)
	$6 = *($1 + [8])
	if ( ((int_64)$6 == (int_64)*($7 + [8])) ){ goto $label$3 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$3
	$8 = *($1)
	if ( ((int_64)$8 != (int_64)*($7)) ){ goto $label$4 }
	*(*($3 + [4])) = [1]
	
.LABEL $label$4
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [8]))) ){ goto $label$5 }
	CALL eosio_assert([0], [10332])
	$8 = *($1)
	
.LABEL $label$5
	$8 = (int_64)
	*($1) = $8($8 - *($3)))
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [10380])
	$8 = *($1)
	
.LABEL $label$6
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [10402])
	
.LABEL $label$7
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$8 }
	CALL eosio_assert([0], [9830])
	
.LABEL $label$8
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	CALL $189($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $3, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$9
	$global$0 = ($5 + [16])
}

int_32 .FUNC $82 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [76])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9594])
	$2 = *(($0 + [4]))
	$3 = *($2 + [76])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)4520852774463733760, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [76]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$7 }
	$2 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10423])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $70($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)4520852774463733760, $6))
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$5
	*($4 + [76]) = $5
	
.LABEL $label$4
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $149 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-4421661421696319487, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $69($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)-4421661421696319488, $6))
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*(($4 + [80])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $81 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)4520852774463733760, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $70($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)4520852774463733760, $6))
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*($4 + [76]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $145 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [160]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [164])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $9($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [160]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$1
	$1 = *(($0 + [120]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [124])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [120]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$6
	$1 = *(($0 + [72]))
	if ( ($1 == 0) ){ goto $label$11 }
	$2 = ($0 + [76])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$13 }
	$3 = ($3 + [-24])
	
.LOOP $label$14:
	$4 = CALL $281($3)
	$3 = ($3 + [-24])
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$14 }
	$3 = *(($0 + [72]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $1
	
.LABEL $label$12
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$11
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$15 }
	$2 = ($0 + [36])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$17 }
	
.LOOP $label$18:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$19 }
	if ( ((*($3 + [28]) & [1]) == 0) ){ goto $label$20 }
	CALL $9(*(($3 + [36])))
	
.LABEL $label$20
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$21 }
	CALL $9(*(($3 + [24])))
	
.LABEL $label$21
	CALL $9($3)
	
.LABEL $label$19
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$18 }
	$3 = *(($0 + [32]))
	goto $label$16 
	
.LABEL $label$17
	$3 = $1
	
.LABEL $label$16
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$15
	return $0
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [144])
	$global$0 = $2
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$1 }
	CALL eosio_assert([0], [8265])
	
.LABEL $label$1
	*(($2 + [136])) = [0]
	*($2 + [120]) = (int_64)-1
	*($2 + [128]) = (int_64)0
	$3 = *($0)
	*($2 + [104]) = $3
	*($2 + [112]) = $3
	*(($2 + [32])) = (int_64)0
	*(($2 + [48])) = (int_64)0
	*((($2 + [8]) + [64])) = (int_64)0
	*(($2 + [88])) = (int_64)0
	*((($2 + [8]) + [8])) = *(($1 + [8]))
	*($2 + [24]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [64]) = (int_64)0
	*($2 + [80]) = (int_64)0
	*($2 + [8]) = *($1)
	$4 = ($0 + [56])
	if ( (*($0 + [56]) & [1]) ){ goto $label$6 }
	$5 = ($4 + [1])
	$1 = CALL $16($5)
	if ( ((uint_32)$1 >= (uint_32)[8]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$5 = *(($0 + [64]))
	$1 = CALL $16($5)
	if ( ($1 <= [8]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9347])
	goto $label$3 
	
.LABEL $label$4
	if ( $1 ){ goto $label$3 }
	$6 = (int_64)0
	goto $label$2 
	
.LABEL $label$3
	$6 = (int_64)0
	
.LOOP $label$7:
	$7 = (($5 + $1) + [-1])
	$8 = *($7)
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [9392])
	$8 = *($7)
	
.LABEL $label$8
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$2
	$3 = ((int_64)$6 & (int_64)72057594037927935)
	$9 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)*($0 + [68]))
	$1 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$6 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$3 = $6
	$8 = $1
	$1 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$3 = $6
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = ((int_32)$1 < (int_32)[6])
	$7 = ($1 + [1])
	$1 = $7
	if ( $8 ){ goto $label$13 }
	$1 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [9494])
	
.LABEL $label$9
	*(($2 + [32])) = $9
	*(($2 + [24])) = (int_64)0
	if ( (*($4) & [1]) ){ goto $label$18 }
	$5 = ($4 + [1])
	$1 = CALL $16($5)
	if ( ((uint_32)$1 >= (uint_32)[8]) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$5 = *(($0 + [64]))
	$1 = CALL $16($5)
	if ( ($1 <= [8]) ){ goto $label$16 }
	
.LABEL $label$17
	CALL eosio_assert([0], [9347])
	goto $label$15 
	
.LABEL $label$16
	if ( $1 ){ goto $label$15 }
	$3 = (int_64)0
	goto $label$14 
	
.LABEL $label$15
	$3 = (int_64)0
	
.LOOP $label$19:
	$7 = (($5 + $1) + [-1])
	$8 = *($7)
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$20 }
	CALL eosio_assert([0], [9392])
	$8 = *($7)
	
.LABEL $label$20
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$19 }
	
.LABEL $label$14
	$9 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)*(($0 + [68])))
	$3 = ((int_64)$3 & (int_64)72057594037927935)
	$1 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$6 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$24 }
	$3 = $6
	$8 = $1
	$1 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$24
	$3 = $6
	
.LOOP $label$25:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$22 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = ((int_32)$1 < (int_32)[6])
	$7 = ($1 + [1])
	$1 = $7
	if ( $8 ){ goto $label$25 }
	$1 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	CALL eosio_assert([0], [9494])
	
.LABEL $label$21
	*(($2 + [48])) = $9
	*(($2 + [40])) = (int_64)0
	$1 = [0]
	$10 = *($0 + [40])
	$3 = (uint_64)$10 >> (uint_64)(int_64)8
	$6 = $3)
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$30 }
	$6 = $9
	$8 = $1
	$1 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$30
	$6 = $9
	
.LOOP $label$31:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$27 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$1 < (int_32)[6])
	$7 = ($1 + [1])
	$1 = $7
	if ( $8 ){ goto $label$31 }
	$1 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$28 }
	
.LABEL $label$29
	$9 = $10
	goto $label$26 
	
.LABEL $label$27
	CALL eosio_assert([0], [9494])
	$9 = *(($0 + [40]))
	$3 = (uint_64)$9 >> (uint_64)(int_64)8)
	
.LABEL $label$26
	*(($2 + [88])) = $10
	*(($2 + [80])) = (int_64)0
	$1 = [0]
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$6 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$35 }
	$3 = $6
	$8 = $1
	$1 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$35
	$3 = $6
	
.LOOP $label$36:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$33 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = ((int_32)$1 < (int_32)[6])
	$7 = ($1 + [1])
	$1 = $7
	if ( $8 ){ goto $label$36 }
	$1 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	CALL eosio_assert([0], [9494])
	
.LABEL $label$32
	*(($2 + [72])) = $9
	*(($2 + [64])) = (int_64)0
	CALL $65(($2 + [104]), ($2 + [8]), *($0))
	$7 = *($2 + [128])
	if ( ($7 == 0) ){ goto $label$37 }
	$5 = ($2 + [132])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$39 }
	
.LOOP $label$40:
	$1 = ($1 + [-24])
	$8 = *($1)
	*($1) = [0]
	if ( ($8 == 0) ){ goto $label$41 }
	CALL $9($8)
	
.LABEL $label$41
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$40 }
	$1 = *(($2 + [128]))
	goto $label$38 
	
.LABEL $label$39
	$1 = $7
	
.LABEL $label$38
	*($5) = $7
	CALL $9($1)
	
.LABEL $label$37
	$global$0 = ($2 + [144])
}

void .FUNC $147 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($4 + [136])) = [0]
	*($4 + [120]) = (int_64)-1
	*($4 + [128]) = (int_64)0
	$5 = *($0)
	*($4 + [104]) = $5
	*($4 + [112]) = $5
	CALL $71(($4 + [8]), ($4 + [104]))
	if ( ((int_64)*($1 + [8]) == (int_64)*(($4 + [48]))) ){ goto $label$1 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$1
	$5 = ((int_64)*($4 + [40]) + (int_64)*($1))
	*($4 + [40]) = $5
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [9557])
	$5 = *(($4 + [40]))
	
.LABEL $label$2
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [9576])
	
.LABEL $label$3
	if ( ((int_64)*($2 + [8]) == (int_64)*(($4 + [72]))) ){ goto $label$4 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$4
	$5 = ((int_64)*($4 + [64]) + (int_64)*($2))
	*($4 + [64]) = $5
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9557])
	$5 = *(($4 + [64]))
	
.LABEL $label$5
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [9576])
	
.LABEL $label$6
	*($4 + [96]) = (*($4 + [96]) + $3)
	CALL $65(($4 + [104]), ($4 + [8]), *($0))
	$0 = *($4 + [128])
	if ( ($0 == 0) ){ goto $label$7 }
	$3 = ($4 + [132])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $9($1)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($4 + [128]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $0
	
.LABEL $label$8
	*($3) = $0
	CALL $9($2)
	
.LABEL $label$7
	$global$0 = ($4 + [144])
}

void .FUNC $146 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [64])
	$global$0 = $4
	$5 = [0]
	*(($4 + [56])) = [0]
	*($4 + [32]) = $2
	*($4 + [40]) = (int_64)-1
	*($4 + [48]) = (int_64)0
	$6 = *($1)
	*($4 + [24]) = $6
	$7 = CALL db_find_i64($6, $2, (int_64)4152997948076064768, (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $76(($4 + [24]), $7)
	if ( ((int_32)*($5 + [24]) == (int_32)($4 + [24])) ){ goto $label$1 }
	CALL eosio_assert([0], [10423])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [11232])
	
.LABEL $label$1
	CALL $77(($4 + [8]), $1, $2, $3)
	$2 = *(($5 + [8]))
	*(($0 + [8])) = $2
	*($0) = *($5)
	if ( ((int_64)$2 == (int_64)*($4 + [16])) ){ goto $label$3 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$3
	$2 = (int_64)
	*($0) = $2(*($0) - *($4 + [8])))
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$7 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [10402])
	$1 = *($4 + [48])
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	CALL eosio_assert([0], [10380])
	
.LABEL $label$6
	$1 = *($4 + [48])
	if ( ($1 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = ($4 + [52])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL $9($5)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($4 + [48]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $1
	
.LABEL $label$8
	*($7) = $1
	CALL $9($0)
	
.LABEL $label$4
	$global$0 = ($4 + [64])
}

void .FUNC $141 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	float_64 $8
	int_32 $9
	$4 = ($global$0 - [176])
	$global$0 = $4
	*($4 + [168]) = $1
	if ( ((int_64)*($2) <= (int_64)0) ){ goto $label$3 }
	$5 = *($3)
	if ( ((int_64)$5 <= (int_64)0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10913])
	$5 = *($3)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10946])
	$5 = *($3)
	
.LABEL $label$1
	$6 = *($2)
	CALL __multi3(($4 + [48]), $5, (int_64)$5 >> (int_64)63), $6, (int_64)$6 >> (int_64)63))
	$6 = *($2 + [8])
	$7 = *(($4 + [56]))
	$5 = *($4 + [48])
	if ( (( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : (int_64)($7 == 0) ) == 0) ){ goto $label$5 }
	if ( ( ((uint_64)$5 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$7 > (int_64)-1) : ((int_64)$7 == (int_64)-1) ) ){ goto $label$4 }
	CALL eosio_assert([0], [11324])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [11300])
	
.LABEL $label$4
	$8 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *($0 + [68])))
	if ( ((float_64)(float_64)|$8| < (float_64)(float_64)9223372036854775808) ){ goto $label$10 }
	$7 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$7 = (Rounds 0)($8)
	if ( ((int_64)$7 != (int_64)0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [11038])
	$5 = ((int_64)$5 / (int_64)$7)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_64)$5 != (int_64)-9223372036854775808) ){ goto $label$11 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$11 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$11
	$5 = ((int_64)$5 / (int_64)$7)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10984])
	
.LABEL $label$6
	CALL $146(($4 + [96]), $0, $1, $6)
	if ( ((int_64)*($4 + [104]) == (int_64)$6) ){ goto $label$12 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$12
	if ( ((int_64)*($4 + [96]) >= (int_64)$5) ){ goto $label$13 }
	CALL eosio_assert([0], [11280])
	
.LABEL $label$13
	$1 = *($2)
	$5 = *($3)
	CALL __multi3(($4 + [32]), $5, (int_64)$5 >> (int_64)63), $1, (int_64)$1 >> (int_64)63))
	*((($4 + [152]) + [8])) = *(($3 + [8]))
	*($4 + [152]) = $5
	$6 = *(($2 + [8]))
	$1 = *((($4 + [32]) + [8]))
	$5 = *($4 + [32])
	if ( (( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$15 }
	if ( ( ((uint_64)$5 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$14 }
	CALL eosio_assert([0], [11324])
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [11300])
	
.LABEL $label$14
	$8 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *(($0 + [68]))))
	*($4 + [144]) = $6
	*($4 + [136]) = $5
	if ( ((float_64)(float_64)|$8| < (float_64)(float_64)9223372036854775808) ){ goto $label$19 }
	$1 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$1 = (Rounds 0)($8)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL eosio_assert([0], [11038])
	goto $label$16 
	
.LABEL $label$17
	if ( ((int_64)$5 != (int_64)-9223372036854775808) ){ goto $label$16 }
	if ( ((int_64)$1 != (int_64)-1) ){ goto $label$16 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$16
	$5 = ((int_64)$5 / (int_64)$1)
	*($4 + [136]) = $5
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$20 }
	CALL eosio_assert([0], [10984])
	
.LABEL $label$20
	*((($4 + [16]) + [8])) = *((($4 + [152]) + [8]))
	*(($4 + [8])) = *((($4 + [136]) + [8]))
	*($4 + [16]) = *($4 + [152])
	*($4) = *($4 + [136])
	CALL $147($0, ($4 + [16]), $4, [1])
	*(($4 + [128])) = [0]
	*($4 + [112]) = (int_64)-1
	*($4 + [120]) = (int_64)0
	*($4 + [132]) = [0]
	$5 = *($0)
	*($4 + [96]) = $5
	*($4 + [104]) = $5
	*($4 + [80]) = $2
	*($4 + [84]) = $3
	*($4 + [88]) = $0
	*($4 + [76]) = ($4 + [168])
	*($4 + [72]) = ($4 + [96])
	CALL $148(($4 + [64]), ($4 + [96]), $5, ($4 + [72]))
	$3 = *($4 + [120])
	if ( ($3 == 0) ){ goto $label$21 }
	$9 = ($4 + [124])
	$0 = *($9)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$23 }
	
.LOOP $label$24:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$25 }
	CALL $9($2)
	
.LABEL $label$25
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$24 }
	$0 = *(($4 + [120]))
	goto $label$22 
	
.LABEL $label$23
	$0 = $3
	
.LABEL $label$22
	*($9) = $3
	CALL $9($0)
	
.LABEL $label$21
	$global$0 = ($4 + [176])
}

int_32 .FUNC $140 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [352])
	$global$0 = $2
	*($2 + [328]) = $1
	*(($2 + [320])) = [0]
	*($2 + [304]) = (int_64)-1
	*($2 + [312]) = (int_64)0
	$1 = *($0)
	*($2 + [288]) = $1
	*($2 + [296]) = $1
	CALL $73(($2 + [256]), ($2 + [288]))
	if ( (*($0 + [56]) & [1]) ){ goto $label$5 }
	$3 = (($0 + [56]) + [1])
	$0 = CALL $16($3)
	if ( ((uint_32)$0 >= (uint_32)[8]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = *(($0 + [64]))
	$0 = CALL $16($3)
	if ( ($0 <= [8]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9347])
	goto $label$2 
	
.LABEL $label$3
	if ( $0 ){ goto $label$2 }
	$1 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	$1 = (int_64)0
	
.LOOP $label$6:
	$4 = (($3 + $0) + [-1])
	$5 = *($4)
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [9392])
	$5 = *($4)
	
.LABEL $label$7
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$6 }
	
.LABEL $label$1
	*((($2 + [216]) + [32])) = [0]
	*($2 + [232]) = (int_64)-1
	*($2 + [240]) = (int_64)0
	$6 = *($2 + [256])
	*($2 + [216]) = $6
	$7 = *($2 + [328])
	*($2 + [224]) = $7
	$8 = [0]
	$0 = CALL db_find_i64($6, $7, (int_64)3607749779137757184, ((int_64)$1 & (int_64)72057594037927935))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$8 }
	$8 = [1]
	if ( ((int_32)*(CALL $143(($2 + [216]), $0) + [16]) == (int_32)($2 + [216])) ){ goto $label$8 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$8
	$1 = *($2 + [256])
	*(($2 + [56])) = $1
	*(($2 + [64])) = (int_64)-1
	*((($2 + [40]) + [32])) = (int_64)0
	*(($2 + [80])) = [0]
	*(($2 + [96])) = $1
	*(($2 + [104])) = (int_64)-1
	*(($2 + [112])) = (int_64)0
	*(($2 + [120])) = (int_64)0
	*(($2 + [128])) = [0]
	*(($2 + [144])) = $1
	*(($2 + [152])) = (int_64)-1
	*(($2 + [160])) = [0]
	*($2 + [40]) = $1
	*($2 + [48]) = $1
	*($2 + [88]) = $1
	*($2 + [136]) = $1
	*(($2 + [172])) = [0]
	*(($2 + [164])) = (int_64)0
	*(($2 + [184])) = $1
	*(($2 + [192])) = (int_64)-1
	*(($2 + [200])) = (int_64)0
	*(($2 + [208])) = [0]
	*(($2 + [212])) = [0]
	*($2 + [176]) = $1
	$9 = CALL $144(($2 + [40]), ($2 + [328]))
	$1 = *($2 + [328])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$12 }
	$5 = [0]
	$4 = *([0] + [10876])
	
.LOOP $label$14:
	*((($2 + [336]) + ($0 = $5))) = *(($4 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$0 == (int_32)[12]) )))))
	$5 = ($0 + [1])
	if ( ((uint_32)$0 > (uint_32)[11]) ){ goto $label$13 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$14 }
	
.LABEL $label$13
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$11 }
	*($2 + [8]) = ($5 << [1])
	$4 = (($2 + [8]) | [1])
	goto $label$10 
	
.LABEL $label$12
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [8]) = [0]
	$0 = (($2 + [8]) | [1])
	goto $label$9 
	
.LABEL $label$11
	$3 = (($5 + [16]) & [-16])
	$4 = CALL $7($3)
	*($2 + [8]) = ($3 | [1])
	*($2 + [16]) = $4
	*($2 + [12]) = $5
	
.LABEL $label$10
	$3 = ($0 + [1])
	$0 = [0]
	
.LOOP $label$15:
	*(($4 + $0)) = *((($2 + [336]) + $0))
	$0 = ($0 + [1])
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$15 }
	$0 = ($4 + $5)
	
.LABEL $label$9
	*($0) = [0]
	$0 = CALL $34(($2 + [8]), [0], [10757])
	$5 = ($0 + [8])
	*((($2 + [24]) + [8])) = *($5)
	*($2 + [24]) = *($0)
	*($0) = (int_64)0
	*($5) = [0]
	$0 = CALL $31(($2 + [24]), [10793])
	$5 = ($0 + [8])
	*((($2 + [336]) + [8])) = *($5)
	*($2 + [336]) = *($0)
	*($0) = (int_64)0
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$22 }
	$0 = [1]
	if ( (*($2 + [336]) & [1]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	CALL eosio_assert([0], ( *($2 + [344]) ? (($2 + [336]) | [1]) : (*($2 + [336]) & [1]) ))
	$0 = [1]
	if ( ((*($2 + [336]) & [1]) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	CALL $9(*($2 + [344]))
	if ( ((*($2 + [24]) & $0) == 0) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	if ( (*($2 + [24]) & $0) ){ goto $label$18 }
	
.LABEL $label$19
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	CALL $9(*($2 + [32]))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $9(*($2 + [16]))
	
.LABEL $label$16
	CALL $145(($2 + [40]))
	$4 = *($2 + [240])
	if ( ($4 == 0) ){ goto $label$23 }
	$3 = ($2 + [244])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$25 }
	
.LOOP $label$26:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$27 }
	CALL $9($5)
	
.LABEL $label$27
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$26 }
	$0 = *(($2 + [240]))
	goto $label$24 
	
.LABEL $label$25
	$0 = $4
	
.LABEL $label$24
	*($3) = $4
	CALL $9($0)
	
.LABEL $label$23
	$4 = *($2 + [312])
	if ( ($4 == 0) ){ goto $label$28 }
	$3 = ($2 + [316])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$30 }
	
.LOOP $label$31:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$32 }
	CALL $9($5)
	
.LABEL $label$32
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$31 }
	$0 = *(($2 + [312]))
	goto $label$29 
	
.LABEL $label$30
	$0 = $4
	
.LABEL $label$29
	*($3) = $4
	CALL $9($0)
	
.LABEL $label$28
	$global$0 = ($2 + [352])
	return $8
}

int_32 .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $282(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $142 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [128])
	$global$0 = $1
	*(($1 + [104])) = [0]
	*($1 + [88]) = (int_64)-1
	*($1 + [96]) = (int_64)0
	$2 = *($0)
	*($1 + [72]) = $2
	*($1 + [80]) = $2
	CALL $73(($1 + [16]), ($1 + [72]))
	$3 = *($0 + [69])
	$4 = *($1 + [40])
	$5 = *($1 + [96])
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = ($1 + [100])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$4:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$5 }
	CALL $9($8)
	
.LABEL $label$5
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	$7 = *(($1 + [96]))
	goto $label$2 
	
.LABEL $label$3
	$7 = $5
	
.LABEL $label$2
	*($6) = $5
	CALL $9($7)
	
.LABEL $label$1
	if ( ((int_32)($4 & [255]) != (int_32)($3 & [255])) ){ goto $label$6 }
	CALL eosio_assert([0], [8480])
	
.LABEL $label$6
	*((($1 + [72]) + [32])) = [0]
	*($1 + [88]) = (int_64)-1
	*($1 + [96]) = (int_64)0
	*($1 + [108]) = [0]
	$2 = *($0)
	*($1 + [72]) = $2
	*($1 + [80]) = $2
	*($1 + [64]) = ($1 + [72])
	*($1 + [16]) = (int_64)0
	CALL $149(($1 + [56]), ($1 + [64]), ($1 + [16]))
	*((($1 + [16]) + [32])) = [0]
	*($1 + [32]) = (int_64)-1
	*($1 + [40]) = (int_64)0
	*($1 + [52]) = [0]
	$2 = *($0)
	*($1 + [16]) = $2
	*($1 + [24]) = $2
	*($1 + [8]) = ($1 + [16])
	if ( (*($1 + [60]) == 0) ){ goto $label$7 }
	*($1 + [120]) = (int_64)0
	CALL $132(($1 + [112]), ($1 + [8]), ($1 + [120]))
	if ( (*($1 + [116]) == 0) ){ goto $label$7 }
	$7 = *($1 + [60])
	*($1 + [124]) = [0]
	*($1 + [120]) = ($1 + [8])
	$8 = CALL $133(($1 + [120]))
	$8 = *($8 + [4])
	if ( ((int_64)*(($7 + [24])) == (int_64)*(($8 + [24]))) ){ goto $label$8 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$8
	if ( ((int_64)*($7 + [16]) > (int_64)*($8 + [16])) ){ goto $label$7 }
	$2 = *(*($1 + [60]))
	*($1 + [124]) = [0]
	*($1 + [120]) = ($1 + [8])
	CALL $150($0, $2, *(*(CALL $133(($1 + [120])) + [4])))
	CALL $142($0)
	
.LABEL $label$7
	$5 = *($1 + [40])
	if ( ($5 == 0) ){ goto $label$9 }
	$0 = ($1 + [44])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$13 }
	CALL $9($8)
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$12 }
	$7 = *(($1 + [40]))
	goto $label$10 
	
.LABEL $label$11
	$7 = $5
	
.LABEL $label$10
	*($0) = $5
	CALL $9($7)
	
.LABEL $label$9
	$5 = *($1 + [96])
	if ( ($5 == 0) ){ goto $label$14 }
	$0 = ($1 + [100])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$18 }
	CALL $9($8)
	
.LABEL $label$18
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$17 }
	$7 = *(($1 + [96]))
	goto $label$15 
	
.LABEL $label$16
	$7 = $5
	
.LABEL $label$15
	*($0) = $5
	CALL $9($7)
	
.LABEL $label$14
	$global$0 = ($1 + [128])
}

void .FUNC $278 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [9341])
	$1 = *(($0 + [4]))
	
.LABEL $label$14
	CALL memcpy($1, $4, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = *($4 + [8])
	if ( ((int_32)(*(($0 + [8])) - $1) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [9341])
	$1 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy($1, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $148 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $7([88])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [68]) = $1
	CALL $291(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [72])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $292(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $9($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $98 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $103(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $46($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $104(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL $9($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

int_32 .FUNC $99 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $9($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $9($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $9($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $9($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $9($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $239 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL require_auth(*($2))
	CALL $106($2)
	if ( (*($2 + [56]) & [1]) ){ goto $label$7 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

void .FUNC $238 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL $118($2)
	if ( (*($2 + [56]) & [1]) ){ goto $label$7 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

void .FUNC $94 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [56]) = $1
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	$4 = *($0)
	*($3 + [16]) = $4
	*($3 + [24]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-4992121829547704320, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $100(($3 + [16]), $5)
	if ( ((int_32)*($5 + [24]) == (int_32)($3 + [16])) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	$4 = *($0)
	*($3 + [8]) = $2
	CALL $101(($3 + [16]), $5, $4, ($3 + [8]))
	$5 = *($3 + [40])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0)
	*($3 + [12]) = $2
	*($3 + [8]) = ($3 + [56])
	CALL $102($3, ($3 + [16]), $4, ($3 + [8]))
	$5 = *($3 + [40])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($3 + [44])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $9($2)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($3 + [40]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $9($0)
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$1
	$global$0 = ($3 + [64])
}

void .FUNC $236 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL $108($2)
	if ( (*($2 + [56]) & [1]) ){ goto $label$7 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

void .FUNC $96 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	*(($7 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL $7([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$6 = ($2 + [16])
	*($3) = $6
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $6
	$9 = ($5 + ((int_32)$8 * (int_32)[40]))
	$10 = ($7 + [40])
	$2 = *($0)
	$11 = *(($0 + [4]))
	if ( ((int_32)$11 == (int_32)$2) ){ goto $label$6 }
	$12 = ($2 - $11)
	$1 = [0]
	
.LOOP $label$7:
	$8 = ($11 + $1)
	*((($2 = ($7 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$6 = ($8 + [-24])
	*($5) = *($6)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($6) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$7 }
	$7 = ($7 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $7
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $8
	CALL $9($8)
	
.LABEL $label$10
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$11
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $234 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL $128($2)
	if ( (*($2 + [56]) & [1]) ){ goto $label$7 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

void .FUNC $233 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [120])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [120])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10871])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $216(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $130($2, *($3 + [120]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [128])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [128])
}

void .FUNC $91 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	float_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_64 $16
	$2 = ($global$0 - [240])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = [0]
	*(($2 + [224])) = [0]
	*($2 + [208]) = (int_64)-1
	*($2 + [216]) = (int_64)0
	$4 = *($0)
	*($2 + [192]) = $4
	*($2 + [200]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-6497942611737529472, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$3 }
	$3 = CALL $92(($2 + [192]), $5)
	if ( ((int_32)*($3 + [120]) == (int_32)($2 + [192])) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	if ( ((int_64)*($3 + [104]) >= (int_64)1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [8571])
	if ( ((int_64)*([0] + [104]) < (int_64)1) ){ goto $label$1 }
	
.LABEL $label$2
	*((($2 + [32]) + [32])) = [0]
	*($2 + [48]) = (int_64)-1
	*($2 + [56]) = (int_64)0
	$4 = *($0)
	*($2 + [32]) = $4
	*($2 + [40]) = $4
	CALL $73(($2 + [160]), ($2 + [32]))
	$6 = ($3 + [112])
	$7 = *($6)
	$8 = ($3 + [104])
	$9 = *($8)
	*((($2 + [112]) + [32])) = [0]
	*($2 + [128]) = (int_64)-1
	*($2 + [136]) = (int_64)0
	$4 = *($0)
	*($2 + [112]) = $4
	*($2 + [120]) = $1
	$5 = CALL db_lowerbound_i64($4, $1, (int_64)4508390643396374528, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$10 = CALL $93(($2 + [112]), $5)
	$11 = ($3 + [88])
	
.LOOP $label$6:
	$12 = ((float_32)((float_32)(CASTING float_32)(int_64 *($10 + [8])) / (float_32)(CASTING float_32)(int_64 *($11))) * (float_32)(CASTING float_32)(int_64 *($8)))
	if ( ((float_32)(float_32)|$12| < (float_32)(float_32)9223372036854775808) ){ goto $label$9 }
	$13 = (int_64)-9223372036854775808
	$4 = *($6)
	if ( ((uint_64)((int_64)-9223372036854775808 + (int_64)4611686018427387903) >= (uint_64)(int_64)9223372036854775807) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$4 = *($6)
	$13 = (Rounds 0)($12)
	if ( (uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9445])
	
.LABEL $label$7
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$1 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$4 = $1
	$14 = $5
	$5 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$4 = $1
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$14 = ((int_32)$5 < (int_32)[6])
	$15 = ($5 + [1])
	$5 = $15
	if ( $14 ){ goto $label$14 }
	$5 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9494])
	
.LABEL $label$10
	$16 = *($6)
	$13 = ( $9 ? $13 : ((int_64)$9 < (int_64)$13) )
	if ( (uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$15 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$15
	$4 = (uint_64)$16 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$1 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$4 = $1
	$14 = $5
	$5 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$21
	$4 = $1
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$14 = ((int_32)$5 < (int_32)[6])
	$15 = ($5 + [1])
	$5 = $15
	if ( $14 ){ goto $label$22 }
	$5 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$19 }
	
.LABEL $label$20
	if ( ((int_64)$16 == (int_64)$7) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	CALL eosio_assert([0], [9494])
	if ( ((int_64)$16 == (int_64)$7) ){ goto $label$16 }
	
.LABEL $label$17
	CALL eosio_assert([0], [10332])
	
.LABEL $label$16
	$9 = (int_64)
	if ( ((int_64)$9($9 - $13)) <= (int_64)-4611686018427387904) ){ goto $label$24 }
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$23 }
	CALL eosio_assert([0], [10402])
	goto $label$23 
	
.LABEL $label$24
	CALL eosio_assert([0], [10380])
	
.LABEL $label$23
	$4 = *($10)
	*((($2 + [96]) + [8])) = $16
	*((($2 + [8]) + [8])) = $16
	*($2 + [8]) = $13
	*($2 + [96]) = $13
	CALL $94($0, $4, ($2 + [8]))
	$5 = CALL db_next_i64(*($10 + [28]), ($2 + [232]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$10 = CALL $93(($2 + [112]), $5)
	goto $label$6 
	
.LABEL $label$5
	$4 = *($0)
	if ( $3 ){ goto $label$25 }
	CALL eosio_assert([0], [9698])
	
.LABEL $label$25
	CALL $95(($2 + [192]), $3, $4)
	$15 = *($2 + [136])
	if ( ($15 == 0) ){ goto $label$26 }
	$10 = ($2 + [140])
	$5 = *($10)
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$28 }
	
.LOOP $label$29:
	$5 = ($5 + [-24])
	$14 = *($5)
	*($5) = [0]
	if ( ($14 == 0) ){ goto $label$30 }
	CALL $9($14)
	
.LABEL $label$30
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$29 }
	$5 = *(($2 + [136]))
	goto $label$27 
	
.LABEL $label$28
	$5 = $15
	
.LABEL $label$27
	*($10) = $15
	CALL $9($5)
	
.LABEL $label$26
	$15 = *($2 + [56])
	if ( ($15 == 0) ){ goto $label$1 }
	$10 = ($2 + [60])
	$5 = *($10)
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$32 }
	
.LOOP $label$33:
	$5 = ($5 + [-24])
	$14 = *($5)
	*($5) = [0]
	if ( ($14 == 0) ){ goto $label$34 }
	CALL $9($14)
	
.LABEL $label$34
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$33 }
	$5 = *(($2 + [56]))
	goto $label$31 
	
.LABEL $label$32
	$5 = $15
	
.LABEL $label$31
	*($10) = $15
	CALL $9($5)
	
.LABEL $label$1
	if ( $3 ){ goto $label$35 }
	CALL eosio_assert([0], [9594])
	
.LABEL $label$35
	$5 = CALL db_next_i64(*($3 + [124]), ($2 + [32]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$38 }
	CALL $92(($2 + [192]), $5)
	$15 = *($2 + [216])
	if ( $15 ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	$4 = CALL $37()
	*(($2 + [60])) = (int_64)0
	*(($2 + [76])) = (int_64)0
	*(($2 + [84])) = (int_64)0
	*($2 + [44]) = [0]
	*($2 + [48]) = [0]
	*($2 + [52 align=4]) = (int_64)0
	*($2 + [68 align=4]) = (int_64)0
	*($2 + [32]) = ((CASTING uint_32)(uint_64 ((int_64)$4 / (int_64)1000000)) + [60])
	*($2 + [120]) = (int_64)-6402241254016417792
	$4 = *($0)
	*($2 + [112]) = $4
	*($2 + [160]) = $4
	*($2 + [232]) = (int_64)-6215682783192416256
	CALL $96(($2 + [68]), ($2 + [112]), ($2 + [160]), ($2 + [232]), ($2 + [24]))
	*($2 + [52]) = [1]
	$4 = CALL $97($0)
	*($2 + [120]) = (int_64)0
	*($2 + [112]) = $4
	CALL $98(($2 + [32]), ($2 + [112]), *($0), [0])
	CALL $99(($2 + [32]))
	$15 = *($2 + [216])
	if ( ($15 == 0) ){ goto $label$36 }
	
.LABEL $label$37
	$10 = ($2 + [220])
	$5 = *($10)
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$40 }
	
.LOOP $label$41:
	$5 = ($5 + [-24])
	$14 = *($5)
	*($5) = [0]
	if ( ($14 == 0) ){ goto $label$42 }
	CALL $9($14)
	
.LABEL $label$42
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$41 }
	$5 = *(($2 + [216]))
	goto $label$39 
	
.LABEL $label$40
	$5 = $15
	
.LABEL $label$39
	*($10) = $15
	CALL $9($5)
	$global$0 = ($2 + [240])
	return 
	
.LABEL $label$36
	$global$0 = ($2 + [240])
}

int_32 .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([136])) + [32]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [120]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [56])
	*($3 + [64]) = ($5 + [72])
	*($3 + [68]) = ($5 + [88])
	*($3 + [72]) = ($5 + [104])
	CALL $372(($3 + [40]), ($3 + [32]))
	*($5 + [124]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $127(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $230 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL $59($2)
	if ( (*($2 + [56]) & [1]) ){ goto $label$7 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = ($0 + [48])
	$4 = *($1)
	$6 = *(($0 + [76]))
	$5 = *(($0 + [72]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$6 = [1]
	if ( ((int_32)*($8 + [176]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	$global$0 = ($2 + [48])
	return [1]
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($3), *(($0 + [56])), (int_64)-5915276602093076480, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = [1]
	if ( ((int_32)*(CALL $174($3, $7) + [176]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	$global$0 = ($2 + [48])
	return $6
	
.LABEL $label$1
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$9 }
	$6 = [0]
	$5 = *([0] + [10876])
	
.LOOP $label$11:
	*((($2 + [32]) + ($7 = $6))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$6 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$10 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$11 }
	
.LABEL $label$10
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$8 }
	*($2) = ($6 << [1])
	$5 = ($2 | [1])
	goto $label$7 
	
.LABEL $label$9
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	*($2) = [0]
	$7 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	$8 = (($6 + [16]) & [-16])
	$5 = CALL $7($8)
	*($2) = ($8 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $6
	
.LABEL $label$7
	$8 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$12:
	*(($5 + $7)) = *((($2 + [32]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$12 }
	$7 = ($5 + $6)
	
.LABEL $label$6
	*($7) = [0]
	$7 = CALL $34($2, [0], [10829])
	$6 = ($7 + [8])
	*((($2 + [16]) + [8])) = *($6)
	*($2 + [16]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	$7 = CALL $31(($2 + [16]), [10836])
	$5 = ($7 + [8])
	*(($6 = (($2 + [32]) + [8]))) = *($5)
	*($2 + [32]) = *($7)
	*($7) = (int_64)0
	*($5) = [0]
	$7 = *($2 + [32])
	$5 = ($7 & [1])
	CALL prints_l(( *($6) ? (($2 + [32]) | [1]) : $5 ), ( *($2 + [36]) ? uint_32($7 >> [1]) : $5 ))
	if ( (*($2 + [32]) & [1]) ){ goto $label$17 }
	if ( (*($2 + [16]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $9(*($6))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $9(*($2 + [24]))
	if ( (*($2) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((*($2) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $9(*($2 + [8]))
	
.LABEL $label$13
	$global$0 = ($2 + [48])
	return [0]
}

void .FUNC $192 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [240])
	$global$0 = $2
	$3 = [0]
	*(($2 + [224])) = [0]
	*($2 + [208]) = (int_64)-1
	*($2 + [216]) = (int_64)0
	*($2 + [228]) = [0]
	$4 = *($0)
	*($2 + [192]) = $4
	*($2 + [200]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-4421661421696319488, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$3 }
	$3 = CALL $69(($2 + [192]), $5)
	if ( ((int_32)*($3 + [68]) == (int_32)($2 + [192])) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	if ( (CALL has_auth((int_64)7130081133533855744) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [8961])
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$1 }
	
.LABEL $label$2
	if ( CALL has_auth(*(($3 + [8]))) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [8521])
	
.LABEL $label$1
	*((($2 + [152]) + [32])) = [0]
	*($2 + [168]) = (int_64)-1
	*($2 + [176]) = (int_64)0
	$4 = *($0)
	*($2 + [152]) = $4
	*($2 + [160]) = $4
	CALL $73(($2 + [120]), ($2 + [152]))
	$4 = *(($3 + [8]))
	*((($2 + [104]) + [8])) = *(($3 + [40]))
	*((($2 + [88]) + [8])) = [0]
	*($2 + [104]) = *($3 + [32])
	*($2 + [88]) = (int_64)0
	$1 = *($2 + [120])
	$5 = CALL $16([8991])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($2 + [88]) = ($5 << [1])
	$6 = (($2 + [88]) | [1])
	if ( $5 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $7($7)
	*($2 + [88]) = ($7 | [1])
	*($2 + [96]) = $6
	*($2 + [92]) = $5
	
.LABEL $label$7
	CALL memcpy($6, [8991], $5)
	
.LABEL $label$6
	$7 = ($3 + [32])
	*(($6 + $5)) = [0]
	*((($2 + [40]) + [8])) = *((($2 + [104]) + [8]))
	*($2 + [40]) = *($2 + [104])
	CALL $78($0, $1, $4, $4, ($2 + [40]), ($2 + [88]))
	if ( ((*($2 + [88]) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*($2 + [96]))
	
.LABEL $label$9
	$8 = *(($7 + [8]))
	*((($2 + [72]) + [8])) = $8
	$9 = *(($3 + [56]))
	*((($2 + [56]) + [8])) = $9
	$4 = *($3 + [48])
	$1 = *($7)
	*((($2 + [24]) + [8])) = $8
	*((($2 + [8]) + [8])) = $9
	*($2 + [72]) = $1
	*($2 + [56]) = $4
	*($2 + [24]) = $1
	*($2 + [8]) = $4
	CALL $181($0, ($2 + [24]), ($2 + [8]), [65535])
	if ( $3 ){ goto $label$10 }
	CALL eosio_assert([0], [10127])
	CALL eosio_assert([0], [9594])
	
.LABEL $label$10
	$5 = CALL db_next_i64(*($3 + [72]), ($2 + [232]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$11 }
	CALL $69(($2 + [192]), $5)
	
.LABEL $label$11
	CALL $182(($2 + [192]), $3)
	$0 = *($2 + [176])
	if ( ($0 == 0) ){ goto $label$12 }
	$6 = ($2 + [180])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $9($5)
	
.LABEL $label$16
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$15 }
	$3 = *(($2 + [176]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $0
	
.LABEL $label$13
	*($6) = $0
	CALL $9($3)
	
.LABEL $label$12
	$0 = *($2 + [216])
	if ( ($0 == 0) ){ goto $label$17 }
	$6 = ($2 + [220])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$21 }
	CALL $9($5)
	
.LABEL $label$21
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$20 }
	$3 = *(($2 + [216]))
	goto $label$18 
	
.LABEL $label$19
	$3 = $0
	
.LABEL $label$18
	*($6) = $0
	CALL $9($3)
	
.LABEL $label$17
	$global$0 = ($2 + [240])
	return (unreachable)
	
.LABEL $label$5
	CALL $25(($2 + [88]))
}

void .FUNC $260 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [148]) = $4
	*($3 + [144]) = $4
	*($3 + [152]) = ($4 + $5)
	*($3 + [136]) = [0]
	*($3 + [128]) = (int_64)0
	CALL $222(($3 + [144]), ($3 + [128]))
	$4 = *($3 + [152])
	*((($3 + [32]) + [8])) = $4
	*(($3 + [8])) = $4
	$6 = *($3 + [144])
	*($3) = $6
	*($3 + [32]) = $6
	$4 = CALL $216(($3 + [48]), $0, $1, $3)
	*($3 + [24]) = [0]
	*($3 + [16]) = (int_64)0
	$5 = (*($3 + [132]) - *($3 + [128]))
	if ( ($5 == 0) ){ goto $label$8 }
	$2 = int_32($5 >> [3])
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$7 }
	$5 = CALL $7($5)
	*(($3 + [24])) = ($5 + ($2 << [3]))
	*($3 + [16]) = $5
	*($3 + [20]) = $5
	$7 = *($3 + [128])
	$2 = (*($3 + [132]) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($5, $7, $2)
	*($3 + [20]) = (*($3 + [20]) + $2)
	
.LABEL $label$8
	CALL $193($4, ($3 + [16]))
	$5 = *($3 + [16])
	if ( ($5 == 0) ){ goto $label$9 }
	*($3 + [20]) = $5
	CALL $9($5)
	
.LABEL $label$9
	if ( (*($4 + [56]) & [1]) ){ goto $label$11 }
	if ( (*($4 + [28]) & [1]) ){ goto $label$10 }
	goto $label$6 
	
.LABEL $label$11
	CALL $9(*(($4 + [64])))
	if ( ((*($4 + [28]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$10
	CALL $9(*(($4 + [36])))
	$4 = *($3 + [128])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	CALL $15(($3 + [16]))
	
.LABEL $label$6
	$4 = *($3 + [128])
	if ( ($4 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*($3 + [132]) = $4
	CALL $9($4)
	
.LABEL $label$4
	$global$0 = ($3 + [160])
	(unreachable)
}

void .FUNC $261 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [120])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [120])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10871])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $216(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $197($2, *($3 + [120]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [128])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [128])
}

void .FUNC $262 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [120])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [120])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10871])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $216(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $198($2, *($3 + [120]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [128])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [128])
}

void .FUNC $386 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $5
	*($2 + [8]) = *(($4 + [16]))
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $5
	*($2 + [8]) = *(($4 + [32]))
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [40])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $5
	*($2 + [8]) = *(($4 + [48]))
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $387(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $303 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($5 = $4) + [40]) = $2
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [8])
	*($5 + [32]) = *($1 + [16])
	$6 = *($1)
	*($5 + [16]) = $6
	CALL $307($3, $1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9830])
	
.LABEL $label$3
	$3 = ($0 + [36])
	$7 = $4
	$4 = ($7 + [-80])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($7 + [-12])
	*($5 + [48]) = $5
	*($5 + [56]) = $1
	*($5 + [60]) = ($1 + [8])
	*($5 + [64]) = ($1 + [16])
	*($5 + [68]) = ($1 + [32])
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [64])
	CALL $300(($5 + [56]), ($5 + [48]))
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [60]) = $1
	*($5 + [56]) = $0
	*($5 + [68]) = $1
	*($5 + [64]) = ($5 + [24])
	*($5 + [72]) = ($5 + [16])
	*($5 + [76]) = ($5 + [40])
	*($5 + [48]) = ($5 + [56])
	CALL $308(($5 + [48]), $3, ($3 + [1]))
	$global$0 = ($5 + [80])
}

void .FUNC $302 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $301 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [72]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11184])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4421661421696319488)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [11130])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11130])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $69(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $263 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [224])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [212]) = $2
	*($3 + [208]) = $2
	$5 = ($2 + $4)
	*($3 + [216]) = $5
	*($3 + [200]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$5 = *(($3 + [216]))
	$2 = *($3 + [212])
	
.LABEL $label$5
	CALL memcpy(($3 + [200]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [212]) = $2
	*($3 + [192]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	$5 = *((($3 + [208]) + [8]))
	$2 = *($3 + [212])
	
.LABEL $label$6
	CALL memcpy(($3 + [192]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [212]) = $2
	*($3 + [184]) = (int_64)0
	*($3 + [176]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	$5 = *(($3 + [216]))
	$2 = *($3 + [212])
	
.LABEL $label$7
	CALL memcpy(($3 + [176]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [212]) = $2
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	$2 = *($3 + [212])
	
.LABEL $label$8
	CALL memcpy(($3 + [80]), $2, [8])
	*(($5 = (($3 + [176]) + [8]))) = *($3 + [80])
	*($3 + [212]) = ($2 + [8])
	*($3 + [168]) = [0]
	*($3 + [160]) = (int_64)0
	CALL $228(($3 + [208]), ($3 + [160]))
	$2 = *((($3 + [208]) + [8]))
	*((($3 + [64]) + [8])) = $2
	*((($3 + [16]) + [8])) = $2
	$6 = *($3 + [208])
	*($3 + [16]) = $6
	*($3 + [64]) = $6
	$2 = CALL $216(($3 + [80]), $0, $1, ($3 + [16]))
	*(($4 = (($3 + [48]) + [8]))) = *($5)
	*($3 + [48]) = *($3 + [176])
	$0 = *($3 + [192])
	$1 = *($3 + [200])
	$5 = CALL $26(($3 + [32]), ($3 + [160]))
	*(($3 + [8])) = *($4)
	*($3) = *($3 + [48])
	CALL $199($2, $1, $0, $3, $5)
	if ( (*($5) & [1]) ){ goto $label$15 }
	if ( (*($2 + [56]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $9(*($5 + [8]))
	if ( ((*($2 + [56]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $9(*(($2 + [64])))
	$5 = [1]
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$5 = [1]
	if ( (*($2 + [28]) & [1]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( (*($3 + [160]) & $5) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $9(*(($2 + [36])))
	if ( ((*($3 + [160]) & $5) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9(*(($3 + [168])))
	$global$0 = ($3 + [224])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [224])
}

void .FUNC $307 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	float_64 $10
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($0)
	$5 = *(*($0 + [4]) + [4])
	*(($4 = (($2 + [64]) + [8]))) = *(($5 + [24]))
	*($2 + [64]) = *($5 + [16])
	$6 = *($0 + [8])
	*(($5 = (($2 + [48]) + [8]))) = *(($6 + [8]))
	$7 = *($6)
	*((($2 + [32]) + [8])) = *($4)
	*((($2 + [16]) + [8])) = *($5)
	*($2 + [48]) = $7
	*($2 + [32]) = *($2 + [64])
	*($2 + [16]) = *($2 + [48])
	CALL $152(($2 + [80]), $3, ($2 + [32]), ($2 + [16]))
	if ( ((int_64)*($2 + [88]) == (int_64)*(($1 + [40]))) ){ goto $label$1 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$1
	$7 = (int_64)
	*($1 + [32]) = $7(*($1 + [32]) - *($2 + [80])))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [10380])
	$7 = *(($1 + [32]))
	
.LABEL $label$2
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [10402])
	$7 = *(($1 + [32]))
	
.LABEL $label$3
	$0 = *(*(($0 + [4])) + [4])
	$8 = *($0 + [16])
	CALL __multi3($2, $7, (int_64)$7 >> (int_64)63), $8, (int_64)$8 >> (int_64)63))
	$9 = *(($0 + [24]))
	$8 = *(($2 + [8]))
	$7 = *($2)
	if ( (( (uint_64)($7 <= (int_64)4611686018427387904) ? ((int_64)$8 < (int_64)0) : (int_64)($8 == 0) ) == 0) ){ goto $label$5 }
	if ( ( ((uint_64)$7 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$8 > (int_64)-1) : ((int_64)$8 == (int_64)-1) ) ){ goto $label$4 }
	CALL eosio_assert([0], [11324])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [11300])
	
.LABEL $label$4
	$10 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *($3 + [68])))
	if ( ((float_64)(float_64)|$10| < (float_64)(float_64)9223372036854775808) ){ goto $label$10 }
	$8 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$8 = (Rounds 0)($10)
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [11038])
	$7 = ((int_64)$7 / (int_64)$8)
	if ( ((int_64)$7 > (int_64)0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_64)$7 != (int_64)-9223372036854775808) ){ goto $label$11 }
	if ( ((int_64)$8 != (int_64)-1) ){ goto $label$11 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$11
	$7 = ((int_64)$7 / (int_64)$8)
	if ( ((int_64)$7 > (int_64)0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10984])
	
.LABEL $label$6
	*($1 + [48]) = $7
	*(($1 + [56])) = $9
	$global$0 = ($2 + [96])
}

void .FUNC $306 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [40])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($6, $4, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = *(($3 + [48]))
	if ( ((int_32)(*(($5 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [8])
	*($6) = (*($6) + [8])
	$0 = *($0)
	$4 = ($0 + [56])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$6 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $4, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = *(($0 + [64]))
	if ( ((int_32)(*(($5 + [8])) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	*($6) = (*($6) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $305 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *(($0 + [32]))
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	*($2) = $0
	CALL $306($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $304 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *(($5 + [16]))
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $309 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [544])
	$global$0 = $3
	if ( CALL is_account(*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11571])
	
.LABEL $label$1
	if ( CALL is_account(*($2)) ){ goto $label$2 }
	CALL eosio_assert([0], [11608])
	
.LABEL $label$2
	$4 = *($0)
	*(($3 + [336])) = $4
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = (int_64)0
	$5 = [0]
	*(($3 + [360])) = [0]
	*(($3 + [376])) = $4
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = (int_64)0
	*(($3 + [408])) = [0]
	*(($3 + [424])) = $4
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = [0]
	*($3 + [320]) = $4
	*($3 + [328]) = $4
	*($3 + [368]) = $4
	*($3 + [416]) = $4
	*(($3 + [452])) = [0]
	*(($3 + [444])) = (int_64)0
	*(($3 + [464])) = $4
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = (int_64)0
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*($3 + [456]) = $4
	$6 = CALL $316(($3 + [320]), $1)
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$6 }
	$7 = *([0] + [10876])
	
.LOOP $label$8:
	*((($3 + [32]) + ($8 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$5 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$7 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$8 }
	
.LABEL $label$7
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [80]) = ($5 << [1])
	$7 = (($3 + [80]) | [1])
	goto $label$4 
	
.LABEL $label$6
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	*($3 + [80]) = [0]
	$8 = (($3 + [80]) | [1])
	goto $label$3 
	
.LABEL $label$5
	$9 = (($5 + [16]) & [-16])
	$7 = CALL $7($9)
	*($3 + [80]) = ($9 | [1])
	*($3 + [88]) = $7
	*($3 + [84]) = $5
	
.LABEL $label$4
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$9:
	*(($7 + $8)) = *((($3 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$9 }
	$8 = ($7 + $5)
	
.LABEL $label$3
	*($8) = [0]
	$8 = CALL $34(($3 + [80]), [0], [11645])
	$5 = ($8 + [8])
	*((($3 + [496]) + [8])) = *($5)
	*($3 + [496]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	$8 = CALL $31(($3 + [496]), [11654])
	$5 = ($8 + [8])
	*((($3 + [128]) + [8])) = *($5)
	*($3 + [128]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	if ( $6 ){ goto $label$16 }
	$8 = [1]
	if ( (*($3 + [128]) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL eosio_assert([0], ( *($3 + [136]) ? (($3 + [128]) | [1]) : (*($3 + [128]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $9(*($3 + [136]))
	if ( ((*($3 + [496]) & $8) == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	if ( (*($3 + [496]) & $8) ){ goto $label$12 }
	
.LABEL $label$13
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	CALL $9(*($3 + [504]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*($3 + [88]))
	
.LABEL $label$10
	$6 = CALL $144(($3 + [320]), $1)
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$20 }
	$5 = [0]
	$7 = *([0] + [10876])
	
.LOOP $label$22:
	*((($3 + [32]) + ($8 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$5 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$21 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$22 }
	
.LABEL $label$21
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$19 }
	*($3 + [80]) = ($5 << [1])
	$7 = (($3 + [80]) | [1])
	goto $label$18 
	
.LABEL $label$20
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	*($3 + [80]) = [0]
	$8 = (($3 + [80]) | [1])
	goto $label$17 
	
.LABEL $label$19
	$9 = (($5 + [16]) & [-16])
	$7 = CALL $7($9)
	*($3 + [80]) = ($9 | [1])
	*($3 + [88]) = $7
	*($3 + [84]) = $5
	
.LABEL $label$18
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$23:
	*(($7 + $8)) = *((($3 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$23 }
	$8 = ($7 + $5)
	
.LABEL $label$17
	*($8) = [0]
	$8 = CALL $34(($3 + [80]), [0], [11645])
	$5 = ($8 + [8])
	*((($3 + [496]) + [8])) = *($5)
	*($3 + [496]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	$8 = CALL $31(($3 + [496]), [11677])
	$5 = ($8 + [8])
	*((($3 + [128]) + [8])) = *($5)
	*($3 + [128]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$32 }
	$8 = [1]
	if ( (*($3 + [128]) & [1]) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	CALL eosio_assert([0], ( *($3 + [136]) ? (($3 + [128]) | [1]) : (*($3 + [128]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$30 }
	
.LABEL $label$31
	CALL $9(*($3 + [136]))
	if ( ((*($3 + [496]) & $8) == 0) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	if ( (*($3 + [496]) & $8) ){ goto $label$28 }
	
.LABEL $label$29
	if ( (*($3 + [80]) & [1]) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL $9(*($3 + [504]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL $9(*($3 + [88]))
	if ( (int_64)(*($2) == 0) ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$26
	if ( (int_64)(*($2) == 0) ){ goto $label$24 }
	
.LABEL $label$25
	$6 = CALL $316(($3 + [320]), $2)
	$4 = *($2)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$36 }
	$5 = [0]
	$7 = *([0] + [10876])
	
.LOOP $label$38:
	*((($3 + [32]) + ($8 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$5 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$37 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$38 }
	
.LABEL $label$37
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$35 }
	*($3 + [80]) = ($5 << [1])
	$7 = (($3 + [80]) | [1])
	goto $label$34 
	
.LABEL $label$36
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	*($3 + [80]) = [0]
	$8 = (($3 + [80]) | [1])
	goto $label$33 
	
.LABEL $label$35
	$9 = (($5 + [16]) & [-16])
	$7 = CALL $7($9)
	*($3 + [80]) = ($9 | [1])
	*($3 + [88]) = $7
	*($3 + [84]) = $5
	
.LABEL $label$34
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$39:
	*(($7 + $8)) = *((($3 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$39 }
	$8 = ($7 + $5)
	
.LABEL $label$33
	*($8) = [0]
	$8 = CALL $34(($3 + [80]), [0], [11703])
	$5 = ($8 + [8])
	*((($3 + [496]) + [8])) = *($5)
	*($3 + [496]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	$8 = CALL $31(($3 + [496]), [11654])
	$5 = ($8 + [8])
	*((($3 + [128]) + [8])) = *($5)
	*($3 + [128]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	if ( $6 ){ goto $label$46 }
	$8 = [1]
	if ( (*($3 + [128]) & [1]) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$46
	CALL eosio_assert([0], ( *($3 + [136]) ? (($3 + [128]) | [1]) : (*($3 + [128]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$44 }
	
.LABEL $label$45
	CALL $9(*($3 + [136]))
	if ( ((*($3 + [496]) & $8) == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	if ( (*($3 + [496]) & $8) ){ goto $label$42 }
	
.LABEL $label$43
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$40 }
	goto $label$41 
	
.LABEL $label$42
	CALL $9(*($3 + [504]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$40 }
	
.LABEL $label$41
	CALL $9(*($3 + [88]))
	
.LABEL $label$40
	$6 = CALL $144(($3 + [320]), $2)
	$4 = *($2)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$50 }
	$5 = [0]
	$7 = *([0] + [10876])
	
.LOOP $label$52:
	*((($3 + [32]) + ($8 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$5 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$51 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$52 }
	
.LABEL $label$51
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$49 }
	*($3 + [80]) = ($5 << [1])
	$7 = (($3 + [80]) | [1])
	goto $label$48 
	
.LABEL $label$50
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	*($3 + [80]) = [0]
	$8 = (($3 + [80]) | [1])
	goto $label$47 
	
.LABEL $label$49
	$9 = (($5 + [16]) & [-16])
	$7 = CALL $7($9)
	*($3 + [80]) = ($9 | [1])
	*($3 + [88]) = $7
	*($3 + [84]) = $5
	
.LABEL $label$48
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$53:
	*(($7 + $8)) = *((($3 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$53 }
	$8 = ($7 + $5)
	
.LABEL $label$47
	*($8) = [0]
	$8 = CALL $34(($3 + [80]), [0], [11703])
	$5 = ($8 + [8])
	*((($3 + [496]) + [8])) = *($5)
	*($3 + [496]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	$8 = CALL $31(($3 + [496]), [11677])
	$5 = ($8 + [8])
	*((($3 + [128]) + [8])) = *($5)
	*($3 + [128]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$59 }
	$8 = [1]
	if ( (*($3 + [128]) & [1]) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	CALL eosio_assert([0], ( *($3 + [136]) ? (($3 + [128]) | [1]) : (*($3 + [128]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$57 }
	
.LABEL $label$58
	CALL $9(*($3 + [136]))
	if ( ((*($3 + [496]) & $8) == 0) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$57
	if ( (*($3 + [496]) & $8) ){ goto $label$55 }
	
.LABEL $label$56
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$24 }
	goto $label$54 
	
.LABEL $label$55
	CALL $9(*($3 + [504]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$24 }
	
.LABEL $label$54
	CALL $9(*($3 + [88]))
	
.LABEL $label$24
	$4 = *($0)
	*((($3 + [128]) + [16])) = $4
	*((($3 + [128]) + [24])) = (int_64)-1
	*((($3 + [128]) + [32])) = (int_64)0
	*((($3 + [128]) + [40])) = [0]
	*(($3 + [184])) = $4
	*(($3 + [192])) = $4
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [222])) = [0]
	*(($3 + [220])) = [0]
	*(($3 + [224])) = $4
	*(($3 + [232])) = $4
	*(($3 + [240])) = $4
	*($3 + [128]) = $4
	*($3 + [136]) = $4
	*($3 + [176]) = $4
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [280])) = $4
	*(($3 + [288])) = $4
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*($3 + [272]) = $4
	$8 = CALL db_find_i64($4, $4, (int_64)-8281825045618098176, *($1))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$60 }
	$5 = (($3 + [128]) + [8])
	if ( ((int_32)*(CALL $317($5, $8) + [20]) == (int_32)$5) ){ goto $label$61 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$61
	CALL eosio_assert([0], [11721])
	
.LABEL $label$60
	$4 = *($0)
	*((($3 + [80]) + [16])) = $4
	*((($3 + [80]) + [24])) = (int_64)-1
	*((($3 + [80]) + [32])) = (int_64)0
	*((($3 + [80]) + [40])) = [0]
	*($3 + [80]) = $4
	*($3 + [88]) = $4
	*((($3 + [496]) + [40])) = (int_64)0
	*($3 + [520]) = (int_64)0
	*($3 + [528]) = (int_64)0
	*($3 + [496]) = (int_64)0
	*($3 + [504]) = (int_64)0
	*($3 + [512]) = (int_64)0
	*($3 + [524]) = [0]
	*($3 + [528]) = [0]
	CALL $318(($3 + [32]), (($3 + [80]) + [8]), $4, ($3 + [496]))
	if ( (*($3 + [56]) == 0) ){ goto $label$62 }
	CALL eosio_assert([0], [11765])
	
.LABEL $label$62
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = (int_64)0
	$6 = [0]
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	$4 = *($0)
	*(($3 + [512])) = $4
	*($3 + [496]) = $4
	*($3 + [504]) = $4
	$0 = ($3 + [504])
	$8 = CALL db_find_i64($4, $4, (int_64)4849559493988974592, *($1))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$63 }
	$6 = CALL $319($0, $8)
	if ( ((int_32)*($6 + [52]) == (int_32)$0) ){ goto $label$63 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$63
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$67 }
	$5 = [0]
	$7 = *([0] + [10876])
	
.LOOP $label$69:
	*((($3 + [32]) + ($8 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$5 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$68 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$69 }
	
.LABEL $label$68
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$66 }
	*($3) = ($5 << [1])
	$7 = ($3 | [1])
	goto $label$65 
	
.LABEL $label$67
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	*($3) = [0]
	$8 = ($3 | [1])
	goto $label$64 
	
.LABEL $label$66
	$9 = (($5 + [16]) & [-16])
	$7 = CALL $7($9)
	*($3) = ($9 | [1])
	*($3 + [8]) = $7
	*($3 + [4]) = $5
	
.LABEL $label$65
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$70:
	*(($7 + $8)) = *((($3 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$70 }
	$8 = ($7 + $5)
	
.LABEL $label$64
	*($8) = [0]
	$8 = CALL $34($3, [0], [11645])
	$5 = ($8 + [8])
	*((($3 + [16]) + [8])) = *($5)
	*($3 + [16]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	$8 = CALL $31(($3 + [16]), [11785])
	$5 = ($8 + [8])
	*((($3 + [32]) + [8])) = *($5)
	*($3 + [32]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$71 }
	CALL eosio_assert([0], ( *($3 + [40]) ? (($3 + [32]) | [1]) : (*($3 + [32]) & [1]) ))
	
.LABEL $label$71
	if ( (*($3 + [32]) & [1]) ){ goto $label$76 }
	if ( (*($3 + [16]) & [1]) ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	CALL $9(*($3 + [40]))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$74 }
	
.LABEL $label$75
	CALL $9(*($3 + [24]))
	if ( (*($3) & [1]) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$74
	if ( ((*($3) & [1]) == 0) ){ goto $label$72 }
	
.LABEL $label$73
	CALL $9(*($3 + [8]))
	
.LABEL $label$72
	$4 = *($2)
	$5 = *(($3 + [532]))
	$7 = *(($3 + [528]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$83 }
	
.LOOP $label$85:
	$8 = ($5 + [-24])
	$1 = *($8)
	if ( ((int_64)*($1) == (int_64)$4) ){ goto $label$84 }
	$5 = $8
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$85 }
	goto $label$83 
	
.LABEL $label$84
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$83 }
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$82 }
	CALL eosio_assert([0], [10423])
	$10 = (int_64)0
	$4 = *($2)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$83
	$1 = [0]
	$8 = CALL db_find_i64(*(($3 + [504])), *(($3 + [512])), (int_64)4849559493988974592, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$82 }
	$1 = CALL $319($0, $8)
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$82 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$82
	$10 = (int_64)0
	$4 = *($2)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$80 }
	
.LABEL $label$81
	$5 = [0]
	$7 = *([0] + [10876])
	
.LOOP $label$87:
	*((($3 + [32]) + ($8 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$5 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$86 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)$10) ){ goto $label$87 }
	
.LABEL $label$86
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$79 }
	*($3) = ($5 << [1])
	$7 = ($3 | [1])
	goto $label$78 
	
.LABEL $label$80
	*(($3 + [8])) = [0]
	*($3) = $10
	*($3) = [0]
	$8 = ($3 | [1])
	goto $label$77 
	
.LABEL $label$79
	$9 = (($5 + [16]) & [-16])
	$7 = CALL $7($9)
	*($3) = ($9 | [1])
	*($3 + [8]) = $7
	*($3 + [4]) = $5
	
.LABEL $label$78
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$88:
	*(($7 + $8)) = *((($3 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$88 }
	$8 = ($7 + $5)
	
.LABEL $label$77
	*($8) = [0]
	$8 = CALL $34($3, [0], [11811])
	$5 = ($8 + [8])
	*((($3 + [16]) + [8])) = *($5)
	*($3 + [16]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	$8 = CALL $31(($3 + [16]), [11785])
	$5 = ($8 + [8])
	*((($3 + [32]) + [8])) = *($5)
	*($3 + [32]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	if ( ($1 == 0) ){ goto $label$89 }
	CALL eosio_assert([0], ( *($3 + [40]) ? (($3 + [32]) | [1]) : (*($3 + [32]) & [1]) ))
	
.LABEL $label$89
	if ( (*($3 + [32]) & [1]) ){ goto $label$94 }
	if ( (*($3 + [16]) & [1]) ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$94
	CALL $9(*($3 + [40]))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$92 }
	
.LABEL $label$93
	CALL $9(*($3 + [24]))
	if ( (*($3) & [1]) ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$92
	if ( ((*($3) & [1]) == 0) ){ goto $label$90 }
	
.LABEL $label$91
	CALL $9(*($3 + [8]))
	
.LABEL $label$90
	$2 = *((($3 + [496]) + [32]))
	if ( ($2 == 0) ){ goto $label$95 }
	$6 = ($3 + [532])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$97 }
	
.LOOP $label$98:
	$9 = ($9 + [-24])
	$1 = *($9)
	*($9) = [0]
	if ( ($1 == 0) ){ goto $label$99 }
	$7 = *($1 + [16])
	if ( ($7 == 0) ){ goto $label$100 }
	$0 = ($1 + [20])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$102 }
	
.LOOP $label$103:
	$8 = ($5 + [-12])
	if ( ((*($8) & [1]) == 0) ){ goto $label$104 }
	CALL $9(*(($5 + [-4])))
	
.LABEL $label$104
	$5 = $8
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$103 }
	$8 = *(($1 + [16]))
	goto $label$101 
	
.LABEL $label$102
	$8 = $7
	
.LABEL $label$101
	*($0) = $7
	CALL $9($8)
	
.LABEL $label$100
	CALL $9($1)
	
.LABEL $label$99
	if ( ((int_32)$9 != (int_32)$2) ){ goto $label$98 }
	$8 = *(($3 + [528]))
	goto $label$96 
	
.LABEL $label$97
	$8 = $2
	
.LABEL $label$96
	*($6) = $2
	CALL $9($8)
	
.LABEL $label$95
	$7 = *((($3 + [80]) + [32]))
	if ( ($7 == 0) ){ goto $label$105 }
	$9 = ($3 + [116])
	$8 = *($9)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$107 }
	
.LOOP $label$108:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$109 }
	CALL $9($5)
	
.LABEL $label$109
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$108 }
	$8 = *(($3 + [112]))
	goto $label$106 
	
.LABEL $label$107
	$8 = $7
	
.LABEL $label$106
	*($9) = $7
	CALL $9($8)
	
.LABEL $label$105
	$7 = *(($3 + [304]))
	if ( ($7 == 0) ){ goto $label$110 }
	$9 = ($3 + [308])
	$8 = *($9)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$112 }
	
.LOOP $label$113:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$114 }
	CALL $9($5)
	
.LABEL $label$114
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$113 }
	$8 = *(($3 + [304]))
	goto $label$111 
	
.LABEL $label$112
	$8 = $7
	
.LABEL $label$111
	*($9) = $7
	CALL $9($8)
	
.LABEL $label$110
	CALL $320(($3 + [176]))
	$2 = *(($3 + [160]))
	if ( ($2 == 0) ){ goto $label$115 }
	$6 = ($3 + [164])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$117 }
	
.LOOP $label$118:
	$9 = ($9 + [-24])
	$1 = *($9)
	*($9) = [0]
	if ( ($1 == 0) ){ goto $label$119 }
	$7 = *($1 + [8])
	if ( ($7 == 0) ){ goto $label$120 }
	$0 = ($1 + [12])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$122 }
	
.LOOP $label$123:
	$8 = ($5 + [-12])
	if ( ((*($8) & [1]) == 0) ){ goto $label$124 }
	CALL $9(*(($5 + [-4])))
	
.LABEL $label$124
	$5 = $8
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$123 }
	$8 = *(($1 + [8]))
	goto $label$121 
	
.LABEL $label$122
	$8 = $7
	
.LABEL $label$121
	*($0) = $7
	CALL $9($8)
	
.LABEL $label$120
	CALL $9($1)
	
.LABEL $label$119
	if ( ((int_32)$9 != (int_32)$2) ){ goto $label$118 }
	$8 = *(($3 + [160]))
	goto $label$116 
	
.LABEL $label$117
	$8 = $2
	
.LABEL $label$116
	*($6) = $2
	CALL $9($8)
	
.LABEL $label$115
	CALL $145(($3 + [320]))
	$global$0 = ($3 + [544])
}

void .FUNC $308 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4)
	*($3 + [8]) = *(*($4 + [4]) + [8])
	if ( (CALL $17(*($4 + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$1 }
	$6 = *(*($4 + [12]) + [76])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)-4421661421696319488, $3, *(*($4 + [16])))
	*(*(($4 + [12])) + [76]) = $6
	
.LABEL $label$2
	CALL db_idx64_update($6, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$1
	$4 = *($0)
	$6 = *($4)
	*($3 + [8]) = *(*($4 + [4]) + [16])
	if ( (CALL $17((*($4 + [8]) + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($4 + [12]) + [80]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-4421661421696319487, $3, *(*($4 + [16])))
	*((*(($4 + [12])) + [80])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $282 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $268 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $5, [8])
	*($3 + [152]) = (int_64)0
	*($3 + [144]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [144]), $5, [8])
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$8
	CALL memcpy(($3 + [64]), $5, [8])
	*(($6 = (($3 + [144]) + [8]))) = *($3 + [64])
	*((($3 + [16]) + [8])) = $4
	*($3 + [48]) = $2
	*($3 + [52]) = ($2 + [32])
	*($3 + [56]) = $4
	*($3 + [16]) = *($3 + [48])
	$2 = CALL $216(($3 + [64]), $0, $1, ($3 + [16]))
	$0 = *($6)
	*((($3 + [32]) + [8])) = $0
	*(($3 + [8])) = $0
	$0 = *($3 + [144])
	*($3 + [32]) = $0
	*($3) = $0
	CALL $186($2, *($3 + [168]), *($3 + [160]), $3)
	if ( (*($2 + [56]) & [1]) ){ goto $label$11 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [176])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [176])
}

void .FUNC $129 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	*(($6 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16 align=4]) = (int_64)0
	*(($3 = ($6 + [24]))) = [0]
	$2 = CALL $7([16])
	*($6 + [16]) = $2
	*($6 + [28 align=4]) = (int_64)0
	*(($6 + [36])) = [0]
	$7 = ($2 + [16])
	*($3) = $7
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($6 + [20])) = $7
	CALL $46(($6 + [28]), [8])
	$2 = ((int_32)$8 * (int_32)[40])
	$8 = *($6 + [28])
	if ( ((int_32)(*(($6 + [32])) - $8) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	
.LABEL $label$5
	$9 = ($5 + $2)
	CALL memcpy($8, $4, [8])
	$10 = ($6 + [40])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$7 }
	$11 = ($2 - $7)
	$1 = [0]
	
.LOOP $label$8:
	$8 = ($7 + $1)
	*((($2 = ($6 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($8 + [-24])
	*($5) = *($4)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($4) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$8 }
	$6 = ($6 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$5 = $2
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$11 }
	*(($2 + [-8])) = $8
	CALL $9($8)
	
.LABEL $label$11
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$12 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$12
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ($5 == 0) ){ goto $label$13 }
	CALL $9($5)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $128 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$1 = ($global$0 - [144])
	$global$0 = $1
	*(($1 + [136])) = [0]
	*($1 + [120]) = (int_64)-1
	$2 = *($0)
	*($1 + [104]) = $2
	*($1 + [112]) = $2
	*($1 + [128]) = (int_64)0
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)-6497942611737529472, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$4 = ($1 + [76])
	$5 = CALL $92(($1 + [104]), $3)
	$6 = ($1 + [52])
	$7 = ($1 + [56])
	$8 = ($1 + [60])
	$9 = ($1 + [68])
	$10 = ($1 + [84])
	$11 = ($1 + [92])
	$12 = ($1 + [24])
	
.LOOP $label$2:
	$2 = CALL $37()
	$3 = [0]
	*($6) = [0]
	*($7) = [0]
	*($8) = (int_64)0
	*($9) = (int_64)0
	*($4) = (int_64)0
	*($10) = (int_64)0
	*($11) = (int_64)0
	*($1 + [40]) = ((CASTING uint_32)(uint_64 ((int_64)$2 / (int_64)1000000)) + [60])
	*($12) = (int_64)-6402241254016417792
	*($1 + [16]) = *($0)
	*($1 + [8]) = (int_64)4511785076043985408
	*($1) = *($5)
	CALL $129($4, ($1 + [16]), $0, ($1 + [8]), $1)
	*($8) = [1]
	$2 = CALL $97($0)
	*($1 + [24]) = (int_64)0
	*($1 + [16]) = $2
	CALL $98(($1 + [40]), ($1 + [16]), *($0), [0])
	$5 = CALL db_next_i64(*($5 + [124]), ($1 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $92(($1 + [104]), $5)
	
.LABEL $label$3
	CALL $99(($1 + [40]))
	$5 = $3
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$1
	$5 = *($1 + [128])
	if ( ($5 == 0) ){ goto $label$4 }
	$4 = ($1 + [132])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $9($3)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($1 + [128]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($4) = $5
	CALL $9($0)
	
.LABEL $label$4
	$global$0 = ($1 + [144])
}

void .FUNC $286 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $286($0, *($1))
	CALL $286($0, *($1 + [4]))
	if ( ((*(($1 + [24])) & [1]) == 0) ){ goto $label$2 }
	CALL $9(*(($1 + [32])))
	
.LABEL $label$2
	CALL $9($1)
	
.LABEL $label$1
}

int_32 .FUNC $287 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10867])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [3])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $289($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [3]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [8])
	$2 = (*($6) + [8])
	*($6) = $2
	$7 = ($7 + [8])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $284 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $228(*($1), *($0 + [4]))
	CALL $228(*($1), *($0 + [8]))
	CALL $228(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $287(*($1), *($0 + [32]))
	CALL $287(*($1), *($0 + [36]))
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $288(*($1), *($0 + [44]))
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [52])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$12
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $285 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$3 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($7 + [-24])
	$2 = *($4)
	*($4) = [0]
	*($1) = $2
	*(($1 + [16])) = *(($7 + [-8]))
	*(($1 + [8])) = *(($7 + [-16]))
	$1 = ($1 + [-24])
	$7 = $4
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$3 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $3
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$8 }
	$1 = ($3 + [-24])
	
.LOOP $label$9:
	$7 = CALL $281($1)
	$1 = ($1 + [-24])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $123 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [112]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [104]) + (int_64)*($3))
	*($1 + [104]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9557])
	if ( ((int_64)*(($1 + [104])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9576])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9830])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-128])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [40])
	*($5 + [44]) = ($1 + [56])
	*($5 + [48]) = ($1 + [72])
	*($5 + [52]) = ($1 + [88])
	*($5 + [56]) = ($1 + [104])
	CALL $278(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [124]), $2, $4, [120])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [64])
}

void .FUNC $122 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [256])
	$global$0 = $1
	*(($1 + [248])) = [0]
	*($1 + [232]) = (int_64)-1
	*($1 + [240]) = (int_64)0
	$2 = *($0)
	*($1 + [216]) = $2
	*($1 + [224]) = $2
	CALL $71(($1 + [120]), ($1 + [216]))
	if ( ((uint_32)*($1 + [172]) >= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $38()) * (int_64)500000) + (int_64)946684800000000) / (uint_64)(int_64)1000000))) ){ goto $label$1 }
	*((($1 + [120]) + [52])) = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $38()) * (int_64)500000) + (int_64)946684800000000) / (uint_64)(int_64)1000000)
	CALL $65(($1 + [216]), ($1 + [120]), *($0))
	$2 = CALL $37()
	*(($1 + [84])) = (int_64)0
	*(($1 + [100])) = (int_64)0
	*((($1 + [56]) + [52])) = (int_64)0
	*($1 + [68]) = [0]
	*($1 + [72]) = [0]
	*($1 + [76 align=4]) = (int_64)0
	*($1 + [92 align=4]) = (int_64)0
	*($1 + [56]) = ((CASTING uint_32)(uint_64 ((int_64)$2 / (int_64)1000000)) + [60])
	*($1 + [40]) = (int_64)-6402241254016417792
	$2 = *($0)
	*($1 + [32]) = $2
	*($1 + [24]) = $2
	*($1 + [16]) = (int_64)-6215682782605856768
	CALL $96(($1 + [92]), ($1 + [32]), ($1 + [24]), ($1 + [16]), ($1 + [8]))
	*($1 + [76]) = [1]
	$2 = CALL $97($0)
	*($1 + [40]) = (int_64)0
	*($1 + [32]) = $2
	CALL $98(($1 + [56]), ($1 + [32]), *($0), [0])
	CALL $99(($1 + [56]))
	
.LABEL $label$1
	$3 = *($1 + [240])
	if ( ($3 == 0) ){ goto $label$2 }
	$4 = ($1 + [244])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$6 }
	CALL $9($5)
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($1 + [240]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $3
	
.LABEL $label$3
	*($4) = $3
	CALL $9($0)
	
.LABEL $label$2
	$global$0 = ($1 + [256])
}

int_32 .FUNC $288 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	$2 = ($global$0 - [32])
	$global$0 = $2
	CALL $286($1, *($1 + [4]))
	$3 = ($1 + [4])
	*($1) = $3
	$4 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [10867])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	$8 = *($5)
	$9 = ($5 + [1])
	*(($0 + [4])) = $9
	$5 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $5)))
	$7 = ($5 + [7])
	$5 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$10 = (CASTING uint_32)(uint_64 $4)
	if ( ($10 == 0) ){ goto $label$3 }
	$11 = ($1 + [4])
	$12 = [0]
	
.LOOP $label$4:
	*($2 + [24]) = (int_64)0
	*(($6 = (($2 + [8]) + [8]))) = [0]
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $9) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$9 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [24]), $9, [8])
	*(($7 = ($0 + [4]))) = (*($7) + [8])
	CALL $228($0, ($2 + [8]))
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$9 }
	$9 = $11
	$13 = *($5 + [16])
	$4 = *($2 + [24])
	if ( ((uint_64)$4 >= (uint_64)$13) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	$5 = $3
	$9 = $3
	$14 = [3]
	goto $label$6 
	
.LABEL $label$8
	$14 = [12]
	goto $label$6 
	
.LABEL $label$7
	$14 = [2]
	
.LABEL $label$6
	
.LOOP $label$11:
	goto $label$33 
	
.LABEL $label$37
	$9 = $5
	$5 = $8
	$13 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$13) ){ goto $label$24 }
	$14 = [12]
	goto $label$11 
	
.LABEL $label$36
	$8 = *($5)
	if ( $8 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$35
	if ( ((uint_64)$13 >= (uint_64)$4) ){ goto $label$19 }
	$14 = [11]
	goto $label$11 
	
.LABEL $label$34
	$9 = ($5 + [4])
	$8 = *($5 + [4])
	if ( ($8 == 0) ){ goto $label$22 }
	$14 = [0]
	goto $label$11 
	
.LABEL $label$33
	$5 = $9
	goto $label$23 
	
.LABEL $label$32
	if ( (*($9) == 0) ){ goto $label$18 }
	$14 = [4]
	goto $label$11 
	
.LABEL $label$31
	if ( (*($2 + [8]) & [1]) ){ goto $label$16 }
	$14 = [7]
	goto $label$11 
	
.LABEL $label$30
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$14 }
	goto $label$3 
	
.LABEL $label$29
	$9 = $5
	if ( *($9) ){ goto $label$17 }
	$14 = [8]
	goto $label$11 
	
.LABEL $label$28
	*(($8 = CALL $7([40]))) = (int_64)0
	*($8 + [8]) = $5
	*($8 + [24 align=4]) = *($2 + [8])
	*(($8 + [32])) = *($6)
	*($9) = $8
	*($8 + [16]) = *($2 + [24])
	*($6) = [0]
	*($2 + [8]) = (int_64)0
	$5 = *(*($1))
	if ( ($5 == 0) ){ goto $label$12 }
	$14 = [9]
	goto $label$11 
	
.LABEL $label$27
	*($1) = $5
	$8 = *($9)
	$14 = [10]
	goto $label$11 
	
.LABEL $label$26
	CALL $290(*(($1 + [4])), $8)
	*(($5 = ($1 + [8]))) = (*($5) + [1])
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$15 }
	$14 = [5]
	goto $label$11 
	
.LABEL $label$25
	CALL $9(*($6))
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$13 }
	goto $label$3 
	
.LABEL $label$24
	$14 = [2]
	goto $label$11 
	
.LABEL $label$23
	$14 = [1]
	goto $label$11 
	
.LABEL $label$22
	$14 = [3]
	goto $label$11 
	
.LABEL $label$21
	$14 = [13]
	goto $label$11 
	
.LABEL $label$20
	$14 = [1]
	goto $label$11 
	
.LABEL $label$19
	$14 = [3]
	goto $label$11 
	
.LABEL $label$18
	$14 = [8]
	goto $label$11 
	
.LABEL $label$17
	$14 = [4]
	goto $label$11 
	
.LABEL $label$16
	$14 = [5]
	goto $label$11 
	
.LABEL $label$15
	$14 = [7]
	goto $label$11 
	
.LABEL $label$14
	$14 = [6]
	goto $label$11 
	
.LABEL $label$13
	$14 = [6]
	goto $label$11 
	
.LABEL $label$12
	$14 = [10]
	goto $label$11 
	
.LABEL $label$10
	$9 = *($7)
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	$14
	return $0
}

void .FUNC $289 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [3])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($2 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $7(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $15($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [3]))
	$3 = ($2 + ($3 << [3]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [3]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $9($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $127 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $183 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($5 = $4) + [40]) = $2
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [8])
	*($5 + [32]) = *($1 + [16])
	$6 = *($1)
	*($5 + [16]) = $6
	CALL $365($3, $1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9830])
	
.LABEL $label$3
	$3 = ($0 + [36])
	$7 = $4
	$4 = ($7 + [-80])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($7 + [-12])
	*($5 + [48]) = $5
	*($5 + [56]) = $1
	*($5 + [60]) = ($1 + [8])
	*($5 + [64]) = ($1 + [16])
	*($5 + [68]) = ($1 + [32])
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [64])
	CALL $300(($5 + [56]), ($5 + [48]))
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [60]) = $1
	*($5 + [56]) = $0
	*($5 + [68]) = $1
	*($5 + [64]) = ($5 + [24])
	*($5 + [72]) = ($5 + [16])
	*($5 + [76]) = ($5 + [40])
	*($5 + [48]) = ($5 + [56])
	CALL $366(($5 + [48]), $3, ($3 + [1]))
	$global$0 = ($5 + [80])
}

void .FUNC $125 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [112])
	$global$0 = $3
	*($3 + [64]) = $1
	*($3 + [56]) = $2
	CALL require_auth(*($0))
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$1 }
	CALL eosio_assert([0], [8595])
	
.LABEL $label$1
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	$2 = *($0)
	*($3 + [16]) = $2
	*($3 + [24]) = $2
	*($3 + [40]) = (int_64)0
	$4 = CALL db_lowerbound_i64($2, $2, (int_64)-6497942611737529472, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $92(($3 + [16]), $4)
	
.LOOP $label$3:
	$2 = *($3 + [56])
	$1 = *($4 + [8])
	$5 = *($3 + [64])
	if ( ((uint_64)$5 >= (uint_64)$1) ){ goto $label$7 }
	if ( (uint_64)($2 <= $1) ){ goto $label$6 }
	
.LABEL $label$7
	$1 = *($4 + [16])
	if ( ((uint_64)$2 <= (uint_64)$1) ){ goto $label$5 }
	if ( ((uint_64)$5 <= (uint_64)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$4 = CALL db_next_i64(*($4 + [124]), $3)
	if ( ((int_32)$4 >= (int_32)[0]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$5
	CALL eosio_assert([0], [8647])
	$4 = CALL db_next_i64(*($4 + [124]), $3)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	
.LABEL $label$4
	$4 = CALL $92(($3 + [16]), $4)
	goto $label$3 
	
.LABEL $label$2
	$2 = *($0)
	*($3 + [12]) = $0
	*($3 + [4]) = ($3 + [64])
	*($3) = ($3 + [16])
	*($3 + [8]) = ($3 + [56])
	*($3 + [104]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [16])) ){ goto $label$8 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$8
	*($3 + [84]) = $3
	*($3 + [80]) = ($3 + [16])
	*($3 + [88]) = ($3 + [104])
	*(($4 = CALL $7([136])) + [32]) = (int_64)0
	*($4 + [24]) = (int_64)0
	*($4 + [40]) = (int_64)0
	*($4 + [48]) = (int_64)0
	*($4 + [56]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [120]) = ($3 + [16])
	CALL $126(($3 + [80]), $4)
	*($3 + [96]) = $4
	$2 = *($4)
	*($3 + [80]) = $2
	$6 = *($4 + [124])
	*($3 + [76]) = $6
	$7 = ($3 + [44])
	$0 = *($7)
	if ( ((uint_32)$0 >= (uint_32)*(($3 + [48]))) ){ goto $label$11 }
	*($0 + [8]) = $2
	*($0 + [16]) = $6
	*($3 + [96]) = [0]
	*($0) = $4
	*($7) = ($0 + [24])
	$4 = *($3 + [96])
	*($3 + [96]) = [0]
	if ( $4 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $127(($3 + [40]), ($3 + [96]), ($3 + [80]), ($3 + [76]))
	$4 = *($3 + [96])
	*($3 + [96]) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9($4)
	
.LABEL $label$9
	$6 = *($3 + [40])
	if ( ($6 == 0) ){ goto $label$12 }
	$7 = ($3 + [44])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$16 }
	CALL $9($0)
	
.LABEL $label$16
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$15 }
	$4 = *(($3 + [40]))
	goto $label$13 
	
.LABEL $label$14
	$4 = $6
	
.LABEL $label$13
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$12
	$global$0 = ($3 + [112])
}

void .FUNC $124 (int_32 $0)
{
	CALL $125($0, (int_64)0, (int_64)10000)
	CALL $125($0, (int_64)10001, (int_64)20000)
	CALL $125($0, (int_64)20001, (int_64)30000)
	CALL $125($0, (int_64)30001, (int_64)50000)
	CALL $125($0, (int_64)50001, (int_64)70000)
	CALL $125($0, (int_64)70001, (int_64)100000)
	CALL $125($0, (int_64)100001, (int_64)150000)
	CALL $125($0, (int_64)150001, (int_64)200000)
	CALL $125($0, (int_64)200001, (int_64)300000)
	CALL $125($0, (int_64)300001, (int_64)500000)
	CALL $125($0, (int_64)500001, (int_64)700000)
	CALL $125($0, (int_64)700001, (int_64)1000000)
	CALL $125($0, (int_64)1000001, (int_64)2000000)
	CALL $125($0, (int_64)2000001, (int_64)3000000)
	CALL $125($0, (int_64)3000001, (int_64)4000000)
	CALL $125($0, (int_64)4000001, (int_64)5000000)
}

void .FUNC $182 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10184])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10229])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [10279])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [72]))
	$9 = *($1 + [76])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4421661421696319488, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$9 = *(($1 + [80]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4421661421696319487, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $185 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6)
{
	CALL require_auth(*($0))
}

void .FUNC $184 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($5 = $4) + [40]) = $2
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [8])
	*($5 + [32]) = *($1 + [16])
	$6 = *($1)
	*($5 + [16]) = $6
	CALL $363($3, $1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9830])
	
.LABEL $label$3
	$3 = ($0 + [36])
	$7 = $4
	$4 = ($7 + [-80])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($7 + [-12])
	*($5 + [48]) = $5
	*($5 + [56]) = $1
	*($5 + [60]) = ($1 + [8])
	*($5 + [64]) = ($1 + [16])
	*($5 + [68]) = ($1 + [32])
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [64])
	CALL $294(($5 + [56]), ($5 + [48]))
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [60]) = $1
	*($5 + [56]) = $0
	*($5 + [68]) = $1
	*($5 + [64]) = ($5 + [24])
	*($5 + [72]) = ($5 + [16])
	*($5 + [76]) = ($5 + [40])
	*($5 + [48]) = ($5 + [56])
	CALL $364(($5 + [48]), $3, ($3 + [1]))
	$global$0 = ($5 + [80])
}

void .FUNC $187 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10380])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10402])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [9830])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $189($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $186 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [144])
	$global$0 = $4
	CALL require_auth($1)
	$5 = [0]
	*(($4 + [80])) = [0]
	*($4 + [56]) = $1
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	$6 = *($0)
	*($4 + [48]) = $6
	$7 = CALL db_find_i64($6, $1, (int_64)4152997948076064768, (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $76(($4 + [48]), $7)
	if ( ((int_32)*($5 + [24]) == (int_32)($4 + [48])) ){ goto $label$1 }
	CALL eosio_assert([0], [10423])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8790])
	
.LABEL $label$1
	if ( ((int_64)*($5 + [8]) != (int_64)*(($3 + [8]))) ){ goto $label$7 }
	if ( ((int_64)*($5) < (int_64)*($3)) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [9889])
	if ( ((int_64)*($5) >= (int_64)*($3)) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [8828])
	$1 = *($0)
	*($4 + [8]) = $3
	if ( $5 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = *($0)
	*($4 + [8]) = $3
	if ( $5 ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9698])
	
.LABEL $label$3
	CALL $187(($4 + [48]), $5, $1, ($4 + [8]))
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$1 = *($0)
	*($4 + [8]) = $1
	$6 = *(($3 + [8]))
	*($4 + [16]) = $2
	$7 = CALL db_find_i64($1, $2, (int_64)4152997948076064768, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$10 }
	$7 = CALL $76(($4 + [8]), $7)
	if ( ((int_32)*($7 + [24]) == (int_32)($4 + [8])) ){ goto $label$11 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$11
	if ( ((int_64)*($7 + [16]) == (int_64)*($5 + [16])) ){ goto $label$12 }
	CALL eosio_assert([0], [8864])
	
.LABEL $label$12
	$1 = *($0)
	*($4 + [96]) = $3
	CALL $188(($4 + [8]), $7, $1, ($4 + [96]))
	$0 = *($4 + [32])
	if ( $0 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$2 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [8])) ){ goto $label$13 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$13
	*(($0 = CALL $7([40])) + [16]) = (int_64)0
	*($0 + [24]) = ($4 + [8])
	*($0 + [8]) = *(($3 + [8]))
	*($0) = *($3)
	*($0 + [16]) = *($5 + [16])
	*($4 + [136]) = (($4 + [96]) + [24])
	*($4 + [132]) = ($4 + [96])
	*($4 + [128]) = ($4 + [96])
	CALL $189(($4 + [128]), $0)
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8
	$5 = CALL db_store_i64(*((($4 + [8]) + [8])), (int_64)4152997948076064768, $2, $1), ($4 + [96]), [24]
	*($0 + [28]) = $5)
	$3 = ($4 + [24])
	if ( (uint_64)($1 <= *($3)) ){ goto $label$14 }
	*($3) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$14
	*($4 + [128]) = $0
	$1 = (uint_64)*(($0 + [8])) >> (uint_64)(int_64)8
	*($4 + [96]) = $1)
	*($4 + [92]) = $5
	$7 = ($4 + [36])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($4 + [40]))) ){ goto $label$17 }
	*($3 + [8]) = $1
	*($3 + [16]) = $5
	*($4 + [128]) = [0]
	*($3) = $0
	*($7) = ($3 + [24])
	$3 = *($4 + [128])
	*($4 + [128]) = [0]
	if ( $3 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $190(($4 + [32]), ($4 + [128]), ($4 + [96]), ($4 + [92]))
	$3 = *($4 + [128])
	*($4 + [128]) = [0]
	if ( ($3 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $9($3)
	
.LABEL $label$15
	$0 = *($4 + [32])
	if ( ($0 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$7 = ($4 + [36])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$21 }
	CALL $9($5)
	
.LABEL $label$21
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$20 }
	$3 = *(($4 + [32]))
	goto $label$18 
	
.LABEL $label$19
	$3 = $0
	
.LABEL $label$18
	*($7) = $0
	CALL $9($3)
	
.LABEL $label$8
	$0 = *($4 + [72])
	if ( ($0 == 0) ){ goto $label$22 }
	$7 = ($4 + [76])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$24 }
	
.LOOP $label$25:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$26 }
	CALL $9($5)
	
.LABEL $label$26
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$25 }
	$3 = *(($4 + [72]))
	goto $label$23 
	
.LABEL $label$24
	$3 = $0
	
.LABEL $label$23
	*($7) = $0
	CALL $9($3)
	
.LABEL $label$22
	$global$0 = ($4 + [144])
}

int_32 .FUNC $358 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [8])
	$4 = (*($7) + [8])
	*($7) = $4
	$6 = ($6 + [8])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $359 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($1 + [8])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$5 = ($1 + [4])
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$1 = ($0 + [8])
	$8 = ($0 + [4])
	
.LOOP $label$4:
	$6 = ($7 + [16])
	if ( ((int_32)(*($1) - $3) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$3 = *($8)
	
.LABEL $label$5
	CALL memcpy($3, $6, [8])
	*($8) = (*($8) + [8])
	CALL $272($0, ($7 + [24]))
	$3 = *($7 + [4])
	if ( ($3 == 0) ){ goto $label$7 }
	
.LOOP $label$8:
	$6 = $3
	$3 = *($6)
	if ( $3 ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$6 = *($7 + [8])
	if ( ((int_32)*($6) == (int_32)$7) ){ goto $label$6 }
	$7 = ($7 + [8])
	
.LOOP $label$9:
	$3 = *($7)
	$7 = ($3 + [8])
	$6 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($6)) ){ goto $label$9 }
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$3 }
	$3 = *($8)
	$7 = $6
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $354 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $272(*($1), ($4 + [16]))
}

void .FUNC $355 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = (*($2) + [8])
	*(($2 = *($1))) = $1
	$4 = *($3)
	$3 = *($0 + [4])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$2
	$4 = *($3)
	$3 = *($0 + [8])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$4
	$4 = *($3)
	$3 = *($0 + [12])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$6 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$6
	$1 = ($1 + [64])
	*($2) = $1
	$3 = *($3)
	$3 = *($0 + [32])
	$4 = *($3 + [4])
	$6 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$8 }
	$1 = (($6 & [-8]) + $1)
	
.LABEL $label$8
	*($2) = $1
	$3 = *($3)
	$3 = *($0 + [36])
	$4 = *($3 + [4])
	$6 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$9:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$10 }
	$1 = (($6 & [-8]) + $1)
	
.LABEL $label$10
	$1 = ($1 + [8])
	*($2) = $1
	$0 = *($0 + [44])
	$5 = *($0 + [8])
	
.LOOP $label$11:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$11 }
	*($2) = $1
	$6 = ($0 + [4])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$12 }
	
.LOOP $label$13:
	$1 = ($1 + [8])
	*($2) = $1
	$0 = *($4 + [24])
	$4 = $3
	$5 = (CASTING uint_64)(uint_32 ( *($4 + [28]) ? uint_32($0 >> [1]) : ($0 & [1]) ))
	
.LOOP $label$14:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$14 }
	*($2) = $1
	$0 = *(($4 + [24]))
	$0 = ( *(($4 + [28])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$15 }
	$1 = ($0 + $1)
	*($2) = $1
	
.LABEL $label$15
	$0 = *($4 + [4])
	if ( ($0 == 0) ){ goto $label$17 }
	
.LOOP $label$18:
	$3 = $0
	$0 = *($3)
	if ( $0 ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = *($4 + [8])
	if ( ((int_32)*($3) == (int_32)$4) ){ goto $label$16 }
	$4 = ($4 + [8])
	
.LOOP $label$19:
	$0 = *($4)
	$4 = ($0 + [8])
	$3 = *($0 + [8])
	if ( ((int_32)$0 != (int_32)*($3)) ){ goto $label$19 }
	
.LABEL $label$16
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$12
	*($2) = ($1 + [16])
}

void .FUNC $356 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $272(*($1), *($0 + [4]))
	CALL $272(*($1), *($0 + [8]))
	CALL $272(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $358(*($1), *($0 + [32]))
	CALL $358(*($1), *($0 + [36]))
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $359(*($1), *($0 + [44]))
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [52])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [9341])
	$1 = *(($0 + [4]))
	
.LABEL $label$12
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $357 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $17(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $17((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $17((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $17((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $17((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $350 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$3 = ($global$0 - [128])
	$global$0 = $3
	if ( (CALL $144($0, $1) == 0) ){ goto $label$1 }
	$4 = ($0 + [48])
	$5 = *($1)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$9:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$8 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	if ( ((int_32)*($9 + [176]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [10423])
	$5 = *($1)
	if ( ((int_64)$5 > (int_64)5307181297324903487) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$9 = [0]
	$8 = CALL db_find_i64(*($4), *(($0 + [56])), (int_64)-5915276602093076480, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$9 = CALL $174($4, $8)
	if ( ((int_32)*($9 + [176]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$6
	$5 = *($1)
	if ( ((int_64)$5 <= (int_64)5307181297324903487) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)5307181297324903488) ){ goto $label$2 }
	if ( ((int_64)$5 == (int_64)7130081133533855744) ){ goto $label$2 }
	if ( ((int_64)$5 == (int_64)7464601112396324000) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_64)$5 == (int_64)-205908660975170112) ){ goto $label$2 }
	if ( ((int_64)$5 == (int_64)5307181297324903472) ){ goto $label$2 }
	
.LABEL $label$3
	$10 = ($9 + [96])
	if ( ((int_64)*(($9 + [104])) == (int_64)*($2 + [8])) ){ goto $label$10 }
	CALL eosio_assert([0], [9889])
	$5 = *($1)
	
.LABEL $label$10
	$11 = *($2)
	$12 = *($10)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$14 }
	$7 = [0]
	$6 = *([0] + [10876])
	
.LOOP $label$16:
	*((($3 + [112]) + ($8 = $7))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$15 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$16 }
	
.LABEL $label$15
	*(($3 + [40])) = [0]
	*($3 + [32]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$13 }
	*($3 + [32]) = ($7 << [1])
	$6 = (($3 + [32]) | [1])
	goto $label$12 
	
.LABEL $label$14
	*(($3 + [40])) = [0]
	*($3 + [32]) = (int_64)0
	*($3 + [32]) = [0]
	$8 = (($3 + [32]) | [1])
	goto $label$11 
	
.LABEL $label$13
	$1 = (($7 + [16]) & [-16])
	$6 = CALL $7($1)
	*($3 + [32]) = ($1 | [1])
	*($3 + [40]) = $6
	*($3 + [36]) = $7
	
.LABEL $label$12
	$1 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$17:
	*(($6 + $8)) = *((($3 + [112]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$17 }
	$8 = ($6 + $7)
	
.LABEL $label$11
	*($8) = [0]
	$8 = CALL $34(($3 + [32]), [0], [11645])
	$7 = ($8 + [8])
	*((($3 + [48]) + [8])) = *($7)
	*($3 + [48]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	$8 = CALL $31(($3 + [48]), [12336])
	$7 = ($8 + [8])
	*((($3 + [64]) + [8])) = *($7)
	*($3 + [64]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	CALL $175(($3 + [16]), $10)
	$8 = *($3 + [16])
	$7 = ($8 & [1])
	$8 = CALL $32(($3 + [64]), ( *($3 + [24]) ? (($3 + [16]) | [1]) : $7 ), ( *($3 + [20]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($3 + [80]) + [8])) = *($7)
	*($3 + [80]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	$8 = CALL $31(($3 + [80]), [12414])
	$7 = ($8 + [8])
	*((($3 + [96]) + [8])) = *($7)
	*($3 + [96]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	CALL $175($3, $2)
	$8 = *($3)
	$7 = ($8 & [1])
	$8 = CALL $32(($3 + [96]), ( *($3 + [8]) ? ($3 | [1]) : $7 ), ( *($3 + [4]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($3 + [112]) + [8])) = *($7)
	*($3 + [112]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ((int_64)$12 < (int_64)$11) ){ goto $label$33 }
	if ( (*($3 + [112]) & [1]) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	CALL eosio_assert([0], ( *($3 + [120]) ? (($3 + [112]) | [1]) : (*($3 + [112]) & [1]) ))
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$31 }
	
.LABEL $label$32
	CALL $9(*($3 + [120]))
	$8 = [1]
	if ( ((*($3) & [1]) == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	$8 = [1]
	if ( (*($3) & [1]) ){ goto $label$29 }
	
.LABEL $label$30
	if ( (*($3 + [96]) & $8) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL $9(*(($3 + [8])))
	if ( ((*($3 + [96]) & $8) == 0) ){ goto $label$27 }
	
.LABEL $label$28
	CALL $9(*($3 + [104]))
	$8 = [1]
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$8 = [1]
	if ( (*($3 + [80]) & [1]) ){ goto $label$25 }
	
.LABEL $label$26
	if ( (*($3 + [16]) & $8) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL $9(*($3 + [88]))
	if ( ((*($3 + [16]) & $8) == 0) ){ goto $label$23 }
	
.LABEL $label$24
	CALL $9(*(($3 + [24])))
	$8 = [1]
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$8 = [1]
	if ( (*($3 + [64]) & [1]) ){ goto $label$21 }
	
.LABEL $label$22
	if ( (*($3 + [48]) & $8) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	CALL $9(*($3 + [72]))
	if ( ((*($3 + [48]) & $8) == 0) ){ goto $label$19 }
	
.LABEL $label$20
	CALL $9(*($3 + [56]))
	if ( (*($3 + [32]) & [1]) ){ goto $label$18 }
	goto $label$2 
	
.LABEL $label$19
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$18
	CALL $9(*($3 + [40]))
	
.LABEL $label$2
	$5 = *($0)
	*($3 + [112]) = $2
	if ( $9 ){ goto $label$34 }
	CALL eosio_assert([0], [9698])
	
.LABEL $label$34
	CALL $352($4, $9, $5, ($3 + [112]))
	
.LABEL $label$1
	$global$0 = ($3 + [128])
}

void .FUNC $351 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [128])
	$global$0 = $3
	if ( (CALL $144($0, $1) == 0) ){ goto $label$1 }
	$4 = ($0 + [48])
	$5 = *($1)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$7:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$6 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	if ( ((int_32)*($9 + [176]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	$5 = *($0)
	*($3 + [40]) = $2
	if ( $9 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$5
	$9 = [0]
	$8 = CALL db_find_i64(*($4), *(($0 + [56])), (int_64)-5915276602093076480, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$9 = CALL $174($4, $8)
	if ( ((int_32)*($9 + [176]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	$5 = *($0)
	*($3 + [40]) = $2
	if ( $9 ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9698])
	
.LABEL $label$2
	CALL $353($4, $9, $5, ($3 + [40]))
	
.LABEL $label$1
	CALL $175(($3 + [40]), $2)
	$8 = CALL $34(($3 + [40]), [0], [12443])
	$7 = ($8 + [8])
	*((($3 + [80]) + [8])) = *($7)
	*($3 + [80]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ((*($3 + [40]) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*($3 + [48]))
	
.LABEL $label$8
	$5 = *($0)
	*($3 + [16]) = (int_64)4520705709016350720
	*($3 + [8]) = *($1)
	$7 = CALL $26((($3 + [8]) + [16]), ($3 + [80]))
	*($3 + [48]) = (int_64)8516770035280461824
	*($3 + [40]) = $5
	*(($8 = CALL $7([16]))) = $5
	*($8 + [8]) = (int_64)-6402241254016417792
	*(($3 + [76])) = [0]
	$9 = ($8 + [16])
	*(($3 + [64])) = $9
	*((($3 + [40]) + [20])) = $9
	*($3 + [56]) = $8
	*($3 + [68 align=4]) = (int_64)0
	$8 = *($7)
	$7 = ( *((($3 + [8]) + [20])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($7 + [16])
	$5 = (CASTING uint_64)(uint_32 $7)
	$7 = ($3 + [68])
	
.LOOP $label$9:
	$8 = ($8 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$9 }
	if ( ($8 == 0) ){ goto $label$11 }
	CALL $46($7, $8)
	$7 = *(($3 + [72]))
	$8 = *(($3 + [68]))
	goto $label$10 
	
.LABEL $label$11
	$7 = [0]
	$8 = [0]
	
.LABEL $label$10
	*($3 + [100]) = $8
	*($3 + [96]) = $8
	*($3 + [104]) = $7
	*($3 + [112]) = ($3 + [96])
	*($3 + [120]) = ($3 + [8])
	CALL $354(($3 + [120]), ($3 + [112]))
	CALL $48(($3 + [40]))
	$8 = *($3 + [68])
	if ( ($8 == 0) ){ goto $label$12 }
	*(($3 + [72])) = $8
	CALL $9($8)
	
.LABEL $label$12
	$8 = *($3 + [56])
	if ( ($8 == 0) ){ goto $label$13 }
	*(($3 + [60])) = $8
	CALL $9($8)
	
.LABEL $label$13
	if ( (*($3 + [24]) & [1]) ){ goto $label$16 }
	if ( (*($3 + [80]) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $9(*(($3 + [32])))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $9(*($3 + [88]))
	$global$0 = ($3 + [128])
	return 
	
.LABEL $label$14
	$global$0 = ($3 + [128])
}

void .FUNC $352 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	$6 = *($1 + [96])
	*($5 + [64]) = $6
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$7 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $7
	*($5 + [56]) = $7
	$7 = *($1)
	*($5 + [24]) = $7
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [104]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10332])
	$6 = *(($1 + [96]))
	
.LABEL $label$3
	$6 = (int_64)
	*(($8 = ($1 + [96]))) = $6($6 - *($3)))
	if ( ((int_64)$6 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	$3 = [136]
	if ( ((int_64)$6 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10380])
	$3 = [136]
	if ( ((int_64)*($8) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10402])
	$8 = ($1 + $3)
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = ($1 + $3)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9830])
	
.LABEL $label$4
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [128]) = $8
	*($5 + [88]) = $1
	$9 = ($1 + [8])
	*($5 + [92]) = $9
	$10 = ($1 + [20])
	*($5 + [96]) = $10
	$11 = ($1 + [32])
	*($5 + [100]) = $11
	$12 = ($1 + [48])
	*($5 + [104]) = $12
	$13 = ($1 + [64])
	*($5 + [108]) = $13
	$14 = ($1 + [80])
	*($5 + [112]) = $14
	$15 = ($1 + [96])
	*($5 + [116]) = $15
	$16 = ($1 + [112])
	*($5 + [120]) = $16
	$17 = ($1 + [124])
	*($5 + [124]) = $17
	$18 = ($1 + [144])
	*($5 + [132]) = $18
	$19 = ($1 + [160])
	*($5 + [136]) = $19
	$20 = ($1 + [168])
	*($5 + [140]) = $20
	CALL $355(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$10 }
	$4 = CALL $1($3)
	$2 = *($5 + [72])
	goto $label$9 
	
.LABEL $label$10
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$9
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $9
	*($5 + [96]) = $10
	*($5 + [100]) = $11
	*($5 + [104]) = $12
	*($5 + [108]) = $13
	*($5 + [112]) = $14
	*($5 + [116]) = $15
	*($5 + [120]) = $16
	*($5 + [124]) = $17
	*($5 + [128]) = $8
	*($5 + [132]) = $18
	*($5 + [136]) = $19
	*($5 + [140]) = $20
	*($5 + [88]) = $1
	CALL $356(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$11 }
	CALL $2($4)
	
.LABEL $label$11
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $357(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $353 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	$6 = *($1 + [96])
	*($5 + [64]) = $6
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$7 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $7
	*($5 + [56]) = $7
	$7 = *($1)
	*($5 + [24]) = $7
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [104]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9514])
	$6 = *(($1 + [96]))
	
.LABEL $label$3
	$6 = ((int_64)$6 + (int_64)*($3))
	*(($8 = ($1 + [96]))) = $6
	if ( ((int_64)$6 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	$3 = [136]
	if ( ((int_64)$6 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9557])
	$3 = [136]
	if ( ((int_64)*($8) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9576])
	$8 = ($1 + $3)
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = ($1 + $3)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9830])
	
.LABEL $label$4
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [128]) = $8
	*($5 + [88]) = $1
	$9 = ($1 + [8])
	*($5 + [92]) = $9
	$10 = ($1 + [20])
	*($5 + [96]) = $10
	$11 = ($1 + [32])
	*($5 + [100]) = $11
	$12 = ($1 + [48])
	*($5 + [104]) = $12
	$13 = ($1 + [64])
	*($5 + [108]) = $13
	$14 = ($1 + [80])
	*($5 + [112]) = $14
	$15 = ($1 + [96])
	*($5 + [116]) = $15
	$16 = ($1 + [112])
	*($5 + [120]) = $16
	$17 = ($1 + [124])
	*($5 + [124]) = $17
	$18 = ($1 + [144])
	*($5 + [132]) = $18
	$19 = ($1 + [160])
	*($5 + [136]) = $19
	$20 = ($1 + [168])
	*($5 + [140]) = $20
	CALL $355(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$10 }
	$4 = CALL $1($3)
	$2 = *($5 + [72])
	goto $label$9 
	
.LABEL $label$10
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$9
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $9
	*($5 + [96]) = $10
	*($5 + [100]) = $11
	*($5 + [104]) = $12
	*($5 + [108]) = $13
	*($5 + [112]) = $14
	*($5 + [116]) = $15
	*($5 + [120]) = $16
	*($5 + [124]) = $17
	*($5 + [128]) = $8
	*($5 + [132]) = $18
	*($5 + [136]) = $19
	*($5 + [140]) = $20
	*($5 + [88]) = $1
	CALL $356(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$11 }
	CALL $2($4)
	
.LABEL $label$11
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $360(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $29 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$5 = uint_32($3 >> [1])
	if ( ($5 <= $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($1 - $5)
	if ( ($1 == 0) ){ goto $label$2 }
	if ( $4 ){ goto $label$8 }
	$5 = [10]
	$4 = uint_32($3 >> [1])
	if ( (([10] - $4) <= $1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = *($0 + [4])
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	if ( ((uint_32)($5 - $4) >= (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $30($0, $5, (($4 + $1) - $5), $4, $4, [0], [0])
	$3 = *($0)
	
.LABEL $label$6
	if ( ($3 & [1]) ){ goto $label$10 }
	$3 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$3 = *($0 + [8])
	
.LABEL $label$9
	CALL memset(($3 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$11
	*($0 + [4]) = $1
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	*((($0 + $1) + [1])) = [0]
	*($0) = ($1 << [1])
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*((*($0 + [8]) + $1)) = [0]
	*($0 + [4]) = $1
}

void .FUNC $310 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL $309($0, $1, $1)
	$4 = CALL is_account(*($2))
	$5 = *($2)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$4 }
	$1 = [0]
	$6 = *([0] + [10876])
	
.LOOP $label$6:
	*((($3 + [96]) + ($2 = $1))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$2 == (int_32)[12]) )))))
	$1 = ($2 + [1])
	if ( ((uint_32)$2 > (uint_32)[11]) ){ goto $label$5 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$6 }
	
.LABEL $label$5
	*(($3 + [56])) = [0]
	*($3 + [48]) = (int_64)0
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$3 }
	*($3 + [48]) = ($1 << [1])
	$6 = (($3 + [48]) | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($3 + [56])) = [0]
	*($3 + [48]) = (int_64)0
	*($3 + [48]) = [0]
	$2 = (($3 + [48]) | [1])
	goto $label$1 
	
.LABEL $label$3
	$7 = (($1 + [16]) & [-16])
	$6 = CALL $7($7)
	*($3 + [48]) = ($7 | [1])
	*($3 + [56]) = $6
	*($3 + [52]) = $1
	
.LABEL $label$2
	$7 = ($2 + [1])
	$2 = [0]
	
.LOOP $label$7:
	*(($6 + $2)) = *((($3 + [96]) + $2))
	$2 = ($2 + [1])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$2 = ($6 + $1)
	
.LABEL $label$1
	*($2) = [0]
	$2 = CALL $34(($3 + [48]), [0], [12157])
	$1 = ($2 + [8])
	*((($3 + [96]) + [8])) = *($1)
	*($3 + [96]) = *($2)
	*($2) = (int_64)0
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	$2 = [1]
	if ( (*($3 + [96]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], ( *($3 + [104]) ? (($3 + [96]) | [1]) : (*($3 + [96]) & [1]) ))
	$2 = [1]
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*($3 + [104]))
	if ( (*($3 + [48]) & $2) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( ((*($3 + [48]) & $2) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*($3 + [56]))
	
.LABEL $label$8
	*(($3 + [72])) = (int_64)-1
	*(($2 = ($3 + [80]))) = (int_64)0
	*((($3 + [48]) + [40])) = [0]
	$5 = *($0)
	*(($3 + [64])) = $5
	*($3 + [48]) = $5
	*($3 + [56]) = $5
	*(($1 = (($3 + [96]) + [40]))) = (int_64)0
	*($3 + [120]) = (int_64)0
	*($3 + [128]) = (int_64)0
	*($3 + [96]) = (int_64)0
	*($3 + [104]) = (int_64)0
	*($3 + [112]) = (int_64)0
	*($3 + [124]) = [0]
	*($3 + [128]) = [0]
	$6 = ($3 + [56])
	CALL $318($3, $6, $5, ($3 + [96]))
	if ( ((int_64)*($3 + [16]) != (int_64)0) ){ goto $label$13 }
	CALL eosio_assert([0], [12194])
	
.LABEL $label$13
	$5 = *($3 + [48])
	*($1) = (int_64)0
	*($3 + [120]) = (int_64)0
	*($3 + [128]) = (int_64)0
	*($3 + [96]) = (int_64)0
	*($3 + [104]) = (int_64)0
	*($3 + [112]) = (int_64)0
	*($3 + [124]) = [0]
	*($3 + [128]) = [0]
	CALL $318($3, $6, $5, ($3 + [96]))
	CALL require_auth(*($3 + [16]))
	$6 = *($2)
	if ( ($6 == 0) ){ goto $label$14 }
	$7 = ($3 + [84])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$18 }
	CALL $9($1)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$17 }
	$2 = *(($3 + [80]))
	goto $label$15 
	
.LABEL $label$16
	$2 = $6
	
.LABEL $label$15
	*($7) = $6
	CALL $9($2)
	
.LABEL $label$14
	$global$0 = ($3 + [144])
}

void .FUNC $311 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL $309($0, $1, $2)
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [86])) = [0]
	*(($3 + [84])) = [0]
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	$4 = *($0)
	*(($3 + [56])) = $4
	*(($3 + [96])) = $4
	*(($3 + [104])) = $4
	*($3 + [40]) = $4
	*($3 + [48]) = $4
	*($3 + [88]) = $4
	$5 = ($3 + [48])
	*($3 + [32]) = $5
	CALL $321(($3 + [136]), ($3 + [32]), $1)
	$0 = *($3 + [140])
	if ( ($0 == 0) ){ goto $label$2 }
	if ( ((int_64)*($1) != (int_64)*($0 + [8])) ){ goto $label$2 }
	$4 = *($3 + [136])
	*($3 + [24]) = $4
	$0 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ($0) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_64)*($0 + [8]) != (int_64)*($1)) ){ goto $label$1 }
	if ( ((int_64)*($0 + [16]) != (int_64)*($2)) ){ goto $label$4 }
	CALL eosio_assert([0], [11854])
	
.LABEL $label$4
	CALL $322(($3 + [24]))
	$0 = *($3 + [28])
	if ( $0 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($3 + [28]) = [0]
	*($3 + [24]) = ($3 + [32])
	
.LABEL $label$1
	*($3 + [16]) = $5
	CALL $323(($3 + [136]), ($3 + [16]), $1)
	$0 = *($3 + [140])
	if ( ($0 == 0) ){ goto $label$6 }
	if ( ((int_64)*($1) != (int_64)*($0 + [16])) ){ goto $label$6 }
	$4 = *($3 + [136])
	*($3 + [8]) = $4
	$0 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ($0) == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	if ( ((int_64)*($0 + [16]) != (int_64)*($1)) ){ goto $label$5 }
	if ( ((int_64)*($0 + [8]) != (int_64)*($2)) ){ goto $label$8 }
	CALL eosio_assert([0], [11904])
	
.LABEL $label$8
	CALL $324(($3 + [8]))
	$0 = *($3 + [12])
	if ( $0 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	*($3 + [12]) = [0]
	*($3 + [8]) = ($3 + [16])
	
.LABEL $label$5
	CALL $320(($3 + [40]))
	$global$0 = ($3 + [144])
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

int_32 .FUNC $20 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [1] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $22($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $22($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $22($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $22($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [8304]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $22($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $22($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $22($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

void .FUNC $23 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $25 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $24 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $20([2], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

void .FUNC $27 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $7($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $9($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $7($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $329 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([104]))) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [12])
	*($3 + [44]) = ($5 + [16])
	*($3 + [48]) = ($5 + [28])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [56])
	*($3 + [60]) = ($5 + [72])
	CALL $330(($3 + [32]), ($3 + [24]))
	*($5 + [92]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $331(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [28]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [36])))
	
.LABEL $label$11
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($1 + [24])))
	
.LABEL $label$12
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $328 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((*($3 + [72]) & [1]) == 0) ){ goto $label$14 }
	CALL $9(*(($3 + [80])))
	if ( ((*($3 + [60]) & [1]) == 0) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((*($3 + [60]) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $9(*(($3 + [68])))
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*(($3 + [56])))
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [28])))
	if ( (*($3 + [8]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [16])))
	
.LABEL $label$6
	CALL $9($3)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $9($3)
	
.LABEL $label$1
	return $0
}

void .FUNC $193 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$2 = ($global$0 - [112])
	$global$0 = $2
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [8521])
	
.LABEL $label$1
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)*($1 + [4])) ){ goto $label$2 }
	$4 = ($2 + [84])
	$5 = ($2 + [60])
	$6 = ($2 + [64])
	$7 = ($2 + [68])
	$8 = ($2 + [76])
	$9 = ($2 + [92])
	$10 = ($2 + [100])
	$1 = ($1 + [4])
	
.LOOP $label$3:
	$11 = CALL $37()
	*($5) = [0]
	*($6) = [0]
	*($7) = (int_64)0
	*($8) = (int_64)0
	*($4) = (int_64)0
	*($9) = (int_64)0
	*($10) = (int_64)0
	*($2 + [48]) = ((CASTING uint_32)(uint_64 ((int_64)$11 / (int_64)1000000)) + [60])
	*((($2 + [32]) + [8])) = (int_64)-6402241254016417792
	$11 = *($0)
	*($2 + [32]) = $11
	*($2 + [24]) = $11
	*($2 + [16]) = (int_64)5378288916589335920
	*($2 + [8]) = *($3)
	CALL $109($4, ($2 + [32]), ($2 + [24]), ($2 + [16]), ($2 + [8]))
	*($7) = [1]
	$11 = CALL $97($0)
	*($2 + [40]) = (int_64)0
	*($2 + [32]) = $11
	CALL $98(($2 + [48]), ($2 + [32]), *($0), [0])
	CALL $99(($2 + [48]))
	$3 = ($3 + [8])
	if ( ((int_32)$3 != (int_32)*($1)) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($2 + [112])
}

void .FUNC $321 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)7464606431203819520, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $342($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)7464606431203819520, $6))
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*($4 + [96]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $320 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [80]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [84])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $9($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [80]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$1
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [36])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	if ( ((*($3 + [68]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($3 + [76])))
	
.LABEL $label$11
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($3 + [64])))
	
.LABEL $label$12
	CALL $9($3)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$6
	return $0
}

void .FUNC $323 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)7464606431203819521, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $342($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)7464606431203819520, $6))
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*(($4 + [100])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $322 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [96])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9594])
	$2 = *(($0 + [4]))
	$3 = *($2 + [96])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)7464606431203819520, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [96]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$7 }
	$2 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10423])
	goto $label$5 
	
.LABEL $label$6
	$4 = [0]
	$3 = CALL db_find_i64(*($7), *($7 + [8]), (int_64)7464606431203819520, $6)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$4 = CALL $342($7, $3)
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$5
	*($4 + [96]) = $5
	
.LABEL $label$4
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $325 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([24])) + [8]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = $7
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $345(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $2($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $9($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $324 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [9594])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *(($2 + [100]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)7464606431203819521, ($1 + [8]), *($2))
	*((*(($0 + [4])) + [100])) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = *($1 + [8])
	$3 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$7:
	$2 = ($3 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$6 }
	$3 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	$2 = CALL db_find_i64(*($7), *($7 + [8]), (int_64)7464606431203819520, $6)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $342($7, $2)
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	*(($4 + [100])) = $5
	
.LABEL $label$3
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $327 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [68])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9594])
	$2 = *(($0 + [4]))
	$3 = *($2 + [68])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)4148594918074220544, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [68]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$7 }
	$2 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)*($4 + [60]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10423])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $346($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)4148594918074220544, $6))
	if ( ((int_32)*($4 + [60]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$5
	*($4 + [68]) = $5
	
.LABEL $label$4
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $326 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)4148594918074220544, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [60]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $346($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)4148594918074220544, $6))
	if ( ((int_32)*($4 + [60]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*($4 + [68]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $101 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9557])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9576])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9830])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $273($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [16])
}

int_32 .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$9
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [16])) = *($3 + [24])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = *($5)
	*($3 + [24]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $274(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $2($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $9($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

void .FUNC $102 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$1
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $1
	*($5) = *(*($3))
	$3 = *($3 + [4])
	*($5 + [8]) = *($3)
	*($5 + [16]) = *(($3 + [8]))
	*($4 + [56]) = (($4 + [16]) + [24])
	*($4 + [52]) = ($4 + [16])
	*($4 + [48]) = ($4 + [16])
	CALL $273(($4 + [48]), $5)
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-4992121829547704320, $2, $6, ($4 + [16]), [24])
	*($5 + [28]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [48]) = $5
	$6 = *($5)
	*($4 + [16]) = $6
	*($4 + [12]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [48]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $274(($1 + [24]), ($4 + [48]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [48])
	*($4 + [48]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [64])
}

void .FUNC $105 (int_32 $0)
{
	CALL require_auth(*($0))
	CALL $106($0)
}

int_32 .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $275($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $49($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $49($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $276($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10184])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10229])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10279])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $7(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $109 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	*(($6 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16 align=4]) = (int_64)0
	*(($3 = ($6 + [24]))) = [0]
	$2 = CALL $7([16])
	*($6 + [16]) = $2
	*($6 + [28 align=4]) = (int_64)0
	*(($6 + [36])) = [0]
	$7 = ($2 + [16])
	*($3) = $7
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($6 + [20])) = $7
	CALL $46(($6 + [28]), [8])
	$2 = ((int_32)$8 * (int_32)[40])
	$8 = *($6 + [28])
	if ( ((int_32)(*(($6 + [32])) - $8) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	
.LABEL $label$5
	$9 = ($5 + $2)
	CALL memcpy($8, $4, [8])
	$10 = ($6 + [40])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$7 }
	$11 = ($2 - $7)
	$1 = [0]
	
.LOOP $label$8:
	$8 = ($7 + $1)
	*((($2 = ($6 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($8 + [-24])
	*($5) = *($4)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($4) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$8 }
	$6 = ($6 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$5 = $2
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$11 }
	*(($2 + [-8])) = $8
	CALL $9($8)
	
.LABEL $label$11
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$12 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$12
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ($5 == 0) ){ goto $label$13 }
	CALL $9($5)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $108 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$1 = ($global$0 - [160])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($1 + [152])) = [0]
	*($1 + [136]) = (int_64)-1
	$2 = *($0)
	*($1 + [120]) = $2
	*($1 + [128]) = $2
	*($1 + [144]) = (int_64)0
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)-6497942611737529472, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$4 = ($1 + [92])
	$5 = CALL $92(($1 + [120]), $3)
	$6 = ($1 + [68])
	$7 = ($1 + [72])
	$8 = ($1 + [76])
	$9 = ($1 + [84])
	$10 = ($1 + [100])
	$11 = ($1 + [108])
	$12 = ($1 + [40])
	
.LOOP $label$2:
	$2 = CALL $37()
	$3 = [0]
	*($6) = [0]
	*($7) = [0]
	*($8) = (int_64)0
	*($9) = (int_64)0
	*($4) = (int_64)0
	*($10) = (int_64)0
	*($11) = (int_64)0
	*($1 + [56]) = ((CASTING uint_32)(uint_64 ((int_64)$2 / (int_64)1000000)) + [60])
	*($12) = (int_64)-6402241254016417792
	$2 = *($0)
	*($1 + [32]) = $2
	*($1 + [24]) = $2
	*($1 + [16]) = (int_64)-6215682782605863536
	*($1 + [8]) = *($5)
	CALL $109($4, ($1 + [32]), ($1 + [24]), ($1 + [16]), ($1 + [8]))
	*($8) = [1]
	$2 = CALL $97($0)
	*($1 + [40]) = (int_64)0
	*($1 + [32]) = $2
	CALL $98(($1 + [56]), ($1 + [32]), *($0), [0])
	$5 = CALL db_next_i64(*($5 + [124]), ($1 + [32]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $92(($1 + [120]), $5)
	
.LABEL $label$3
	CALL $99(($1 + [56]))
	$5 = $3
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$1
	$5 = *($1 + [144])
	if ( ($5 == 0) ){ goto $label$4 }
	$4 = ($1 + [148])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $9($0)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$7 }
	$3 = *(($1 + [144]))
	goto $label$5 
	
.LABEL $label$6
	$3 = $5
	
.LABEL $label$5
	*($4) = $5
	CALL $9($3)
	
.LABEL $label$4
	$global$0 = ($1 + [160])
}

void .FUNC $318 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = *(($1 + [28]))
	if ( ((int_32)$5 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$5 = *(($5 + [-24]))
	if ( ((int_32)*($5 + [48]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)3849324904583266304, (int_64)3849324904583266304)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $335($1, $5)
	if ( ((int_32)*($5 + [48]) == (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*($0) = *($5)
	*(($0 + [40])) = *(($5 + [40]))
	*(($0 + [32])) = *(($5 + [32]))
	*(($0 + [24])) = *(($5 + [24]))
	*(($0 + [16])) = *(($5 + [16]))
	*(($0 + [8])) = *(($5 + [8]))
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$1
	*($4 + [8]) = $3
	CALL $336($4, $1, $2, ($4 + [8]))
	$5 = *($4 + [4])
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	*(($0 + [16])) = *(($5 + [16]))
	*(($0 + [24])) = *(($5 + [24]))
	*(($0 + [32])) = *(($5 + [32]))
	*(($0 + [40])) = *(($5 + [40]))
	$global$0 = ($4 + [16])
}

int_32 .FUNC $319 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$5 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [20]) = $5
	*($3 + [16]) = $5
	*($3 + [24]) = ($5 + $4)
	*(($4 = CALL $7([64])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16 align=4]) = (int_64)0
	*($4 + [24]) = [0]
	*($4 + [32]) = (int_64)0
	*($4 + [40]) = (int_64)0
	*($4 + [52]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($4 + [8])
	*($3 + [40]) = $4
	*($3 + [48]) = ($4 + [16])
	*($3 + [52]) = ($4 + [32])
	*($3 + [56]) = ($4 + [48])
	CALL $340(($3 + [40]), ($3 + [32]))
	*($4 + [60]) = [-1]
	*($4 + [56]) = $1
	*($3 + [32]) = $4
	$7 = *($4)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $4
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $341(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($5)
	
.LABEL $label$7
	$2 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	$0 = *($2 + [16])
	if ( ($0 == 0) ){ goto $label$11 }
	$6 = ($2 + [20])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	$5 = ($1 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($1 + [-4])))
	
.LABEL $label$15
	$1 = $5
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$14 }
	$5 = *(($2 + [16]))
	goto $label$12 
	
.LABEL $label$13
	$5 = $0
	
.LABEL $label$12
	*($6) = $0
	CALL $9($5)
	
.LABEL $label$11
	CALL $9($2)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $4
}

void .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $228(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $214 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$3 = ($global$0 - [464])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [208]))) = (int_64)0
	*(($9 = ($4 + [224]))) = (int_64)0
	*(($10 = ($4 + [240]))) = (int_64)0
	*(($11 = ($4 + [256]))) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [232]) = (int_64)0
	*($4 + [248]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [180]) = $2
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + $7)
	*($4 + [448]) = ($4 + [176])
	*($4 + [96]) = ($4 + [192])
	CALL $224(($4 + [96]), ($4 + [448]))
	$3 = *($4 + [184])
	*((($4 + [80]) + [8])) = $3
	*((($4 + [64]) + [8])) = $3
	$12 = *($4 + [176])
	*($4 + [64]) = $12
	*($4 + [80]) = $12
	$3 = CALL $216(($4 + [96]), $0, $1, ($4 + [64]))
	*(($13 = (($4 + [320]) + [8]))) = *($8)
	*(($8 = (($4 + [304]) + [8]))) = *($9)
	*(($9 = (($4 + [288]) + [8]))) = *($10)
	*(($10 = (($4 + [272]) + [8]))) = *($11)
	*($4 + [320]) = *($4 + [200])
	*($4 + [304]) = *($4 + [216])
	*($4 + [288]) = *($4 + [232])
	*($4 + [272]) = *($4 + [248])
	$0 = *($4 + [192])
	$11 = *($4 + [264])
	$14 = *($4 + [268])
	*((($4 + [384]) + [8])) = *($10)
	*((($4 + [368]) + [8])) = *($9)
	*((($4 + [352]) + [8])) = *($8)
	*((($4 + [336]) + [8])) = *($13)
	*($4 + [384]) = *($4 + [272])
	*($4 + [368]) = *($4 + [288])
	*($4 + [352]) = *($4 + [304])
	*($4 + [336]) = *($4 + [320])
	$8 = (($4 + [96]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($8) + $6))
	
.LABEL $label$5
	$1 = *((($4 + [336]) + [8]))
	*((($4 + [448]) + [8])) = $1
	*(($5 = (($4 + [432]) + [8]))) = *((($4 + [352]) + [8]))
	*(($9 = (($4 + [416]) + [8]))) = *((($4 + [368]) + [8]))
	*(($10 = (($4 + [400]) + [8]))) = *((($4 + [384]) + [8]))
	*((($4 + [48]) + [8])) = $1
	$1 = *($4 + [336])
	*($4 + [448]) = $1
	*($4 + [432]) = *($4 + [352])
	*($4 + [416]) = *($4 + [368])
	*($4 + [400]) = *($4 + [384])
	*($4 + [48]) = $1
	*((($4 + [32]) + [8])) = *($5)
	*((($4 + [16]) + [8])) = *($9)
	*(($4 + [8])) = *($10)
	*($4 + [32]) = *($4 + [432])
	*($4 + [16]) = *($4 + [416])
	*($4) = *($4 + [400])
	CALL void $8((int_32 $0), (int_64 ($4 + [48])), (int_32 ($4 + [32])), (int_32 ($4 + [16])), (int_32 $4), (int_32 $11), (int_32 $14), (int_32 $6))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$10 }
	$2 = [1]
	if ( (*($3 + [56]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $2($2)
	$2 = [1]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [64])))
	if ( (*($3 + [28]) & $2) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [36])))
	
.LABEL $label$6
	$global$0 = ($4 + [464])
	return [1]
}

void .FUNC $217 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $26(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $26(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

int_32 .FUNC $216 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($0) = $1
	*($0 + [8]) = $2
	$2 = *($3)
	*($0 + [16]) = $2
	$3 = *(($3 + [8]))
	*(($4 + [8])) = $3
	*(($0 + [24])) = $3
	*($4) = $2
	*(($0 + [36])) = [0]
	*($0 + [28 align=4]) = (int_64)0
	$5 = ($0 + [28])
	$3 = CALL $16([12522])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$7 }
	*($5) = ($3 << [1])
	$6 = ($5 + [1])
	if ( $3 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$7 = (($3 + [16]) & [-16])
	$6 = CALL $7($7)
	*($0 + [28]) = ($7 | [1])
	*(($0 + [36])) = $6
	*(($0 + [32])) = $3
	
.LABEL $label$6
	CALL memcpy($6, [12522], $3)
	
.LABEL $label$5
	*(($6 + $3)) = [0]
	$3 = *($5)
	if ( ($3 & [1]) ){ goto $label$9 }
	$7 = ($5 + [1])
	$3 = uint_32($3 >> [1])
	if ( ((uint_32)$3 >= (uint_32)[8]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$7 = *(($0 + [36]))
	$3 = *(($0 + [32]))
	if ( ($3 <= [8]) ){ goto $label$3 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9347])
	goto $label$2 
	
.LABEL $label$4
	CALL $25($5)
	
.LABEL $label$3
	if ( $3 ){ goto $label$2 }
	$2 = (int_64)4
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)0
	
.LOOP $label$10:
	$6 = (($7 + $3) + [-1])
	$5 = *($6)
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [9392])
	$5 = *($6)
	
.LABEL $label$11
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	
.LABEL $label$1
	*($0 + [48]) = (int_64)1000000
	*($0 + [56 align=4]) = (int_64)0
	*(($0 + [40])) = $2
	*(($0 + [64])) = [0]
	$5 = ($0 + [56])
	$3 = CALL $16([10651])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$15 }
	*($5) = ($3 << [1])
	$5 = ($5 + [1])
	if ( $3 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = (($3 + [16]) & [-16])
	$5 = CALL $7($6)
	*($0 + [56]) = ($6 | [1])
	*(($0 + [64])) = $5
	*(($0 + [60])) = $3
	
.LABEL $label$14
	CALL memcpy($5, [10651], $3)
	
.LABEL $label$13
	*(($5 + $3)) = [0]
	*($0 + [70]) = [0]
	*($0 + [68]) = [264]
	*($0 + [72]) = [1008981770]
	$global$0 = ($4 + [16])
	return $0
	
.LABEL $label$12
	CALL $25($5)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $211 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [224])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [168]))) = (int_64)0
	*($4 + [152]) = (int_64)0
	*($4 + [144]) = (int_64)0
	*($4 + [160]) = (int_64)0
	*($4 + [132]) = $2
	*($4 + [128]) = $2
	*($4 + [136]) = ($2 + $7)
	*($4 + [208]) = ($4 + [128])
	*($4 + [48]) = ($4 + [144])
	CALL $225(($4 + [48]), ($4 + [208]))
	$3 = *($4 + [136])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [16]) + [8])) = $3
	$9 = *($4 + [128])
	*($4 + [16]) = $9
	*($4 + [32]) = $9
	$3 = CALL $216(($4 + [48]), $0, $1, ($4 + [16]))
	*(($10 = (($4 + [176]) + [8]))) = *($8)
	*($4 + [176]) = *($4 + [160])
	$0 = *($4 + [152])
	$1 = *($4 + [144])
	*((($4 + [192]) + [8])) = *($10)
	*($4 + [192]) = *($4 + [176])
	$8 = (($4 + [48]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($8) + $6))
	
.LABEL $label$5
	$9 = *((($4 + [192]) + [8]))
	*((($4 + [208]) + [8])) = $9
	*(($4 + [8])) = $9
	$9 = *($4 + [192])
	*($4) = $9
	*($4 + [208]) = $9
	CALL void $8((int_32 $1), (int_64 $0), (int_64 $4), (int_32 $6))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$10 }
	$2 = [1]
	if ( (*($3 + [56]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $2($2)
	$2 = [1]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [64])))
	if ( (*($3 + [28]) & $2) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [36])))
	
.LABEL $label$6
	$global$0 = ($4 + [224])
	return [1]
}

int_32 .FUNC $210 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$3 = ($global$0 - [400])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [216]))) = (int_64)0
	*(($9 = ($4 + [232]))) = (int_64)0
	*(($10 = ($4 + [248]))) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [172]) = $2
	*($4 + [168]) = $2
	*($4 + [176]) = ($2 + $7)
	*($4 + [384]) = ($4 + [168])
	*($4 + [88]) = ($4 + [184])
	CALL $223(($4 + [88]), ($4 + [384]))
	$3 = *($4 + [176])
	*((($4 + [72]) + [8])) = $3
	*((($4 + [56]) + [8])) = $3
	$11 = *($4 + [168])
	*($4 + [56]) = $11
	*($4 + [72]) = $11
	$3 = CALL $216(($4 + [88]), $0, $1, ($4 + [56]))
	*(($12 = (($4 + [288]) + [8]))) = *($8)
	*(($8 = (($4 + [272]) + [8]))) = *($9)
	*(($9 = (($4 + [256]) + [8]))) = *($10)
	*($4 + [288]) = *($4 + [208])
	*($4 + [272]) = *($4 + [224])
	*($4 + [256]) = *($4 + [240])
	$0 = *($4 + [200])
	$1 = *($4 + [192])
	$11 = *($4 + [184])
	*((($4 + [336]) + [8])) = *($9)
	*((($4 + [320]) + [8])) = *($8)
	*((($4 + [304]) + [8])) = *($12)
	*($4 + [336]) = *($4 + [256])
	*($4 + [320]) = *($4 + [272])
	*($4 + [304]) = *($4 + [288])
	$8 = (($4 + [88]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($8) + $6))
	
.LABEL $label$5
	$13 = *((($4 + [304]) + [8]))
	*((($4 + [384]) + [8])) = $13
	$14 = *((($4 + [320]) + [8]))
	*((($4 + [368]) + [8])) = $14
	$15 = *((($4 + [336]) + [8]))
	*((($4 + [352]) + [8])) = $15
	*((($4 + [40]) + [8])) = $13
	*((($4 + [24]) + [8])) = $14
	*((($4 + [8]) + [8])) = $15
	$13 = *($4 + [304])
	*($4 + [384]) = $13
	$14 = *($4 + [320])
	*($4 + [368]) = $14
	*($4 + [40]) = $13
	*($4 + [24]) = $14
	$13 = *($4 + [336])
	*($4 + [8]) = $13
	*($4 + [352]) = $13
	CALL void $8((int_32 $11), (int_64 $1), (int_64 $0), (int_64 ($4 + [40])), (int_32 ($4 + [24])), (int_32 ($4 + [8])), (int_32 $6))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$10 }
	$2 = [1]
	if ( (*($3 + [56]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $2($2)
	$2 = [1]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [64])))
	if ( (*($3 + [28]) & $2) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [36])))
	
.LABEL $label$6
	$global$0 = ($4 + [400])
	return [1]
}

int_32 .FUNC $213 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [176])
	$global$0 = $3
	*(($4 = $3) + [168]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [160])) = [0]
	*($4 + [144]) = (int_64)0
	*($4 + [136]) = (int_64)0
	*($4 + [152]) = (int_64)0
	*($4 + [164]) = [0]
	*($4 + [124]) = $2
	*($4 + [120]) = $2
	*($4 + [128]) = ($2 + $5)
	*($4 + [16]) = ($4 + [120])
	*($4 + [40]) = ($4 + [136])
	CALL $218(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [128])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [120])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $216(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [168])
	CALL $219(($4 + [16]), ($4 + [136]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$10 }
	$2 = [1]
	if ( (*($3 + [56]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $2($2)
	$2 = [1]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [64])))
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( (*($3 + [28]) & $2) ){ goto $label$6 }
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [152]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $9(*(($3 + [36])))
	$2 = [1]
	if ( ((*($4 + [152]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [160])))
	$global$0 = ($4 + [176])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [176])
	return $2
}

void .FUNC $223 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [32])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	*($2) = $0
	CALL $388($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $196 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [96])
	$global$0 = $1
	CALL require_auth(*($0))
	*((($1 + [48]) + [32])) = [0]
	*($1 + [64]) = (int_64)-1
	*($1 + [84]) = [0]
	$2 = *($0)
	*($1 + [48]) = $2
	*($1 + [56]) = $2
	*($1 + [72]) = (int_64)0
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)4520852774463733760, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $70(($1 + [48]), $3)
	CALL $191($0, *($3))
	$3 = CALL db_next_i64(*($3 + [72]), ($1 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	
.LOOP $label$2:
	$3 = CALL $70(($1 + [48]), $3)
	CALL $191($0, *($3))
	$3 = CALL db_next_i64(*($3 + [72]), ($1 + [8]))
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	
.LABEL $label$1
	*((($1 + [8]) + [32])) = [0]
	*($1 + [24]) = (int_64)-1
	*($1 + [44]) = [0]
	$2 = *($0)
	*($1 + [8]) = $2
	*($1 + [16]) = $2
	*($1 + [32]) = (int_64)0
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)-4421661421696319488, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $69(($1 + [8]), $3)
	CALL $192($0, *($3))
	$3 = CALL db_next_i64(*($3 + [72]), ($1 + [88]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = CALL $69(($1 + [8]), $3)
	CALL $192($0, *($3))
	$3 = CALL db_next_i64(*($3 + [72]), ($1 + [88]))
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$4 }
	
.LABEL $label$3
	$4 = *($1 + [32])
	if ( ($4 == 0) ){ goto $label$5 }
	$5 = ($1 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$9 }
	CALL $9($3)
	
.LABEL $label$9
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($1 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $4
	
.LABEL $label$6
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$5
	$4 = *($1 + [72])
	if ( ($4 == 0) ){ goto $label$10 }
	$5 = ($1 + [76])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$14 }
	CALL $9($3)
	
.LABEL $label$14
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($1 + [72]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $4
	
.LABEL $label$11
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$10
	$global$0 = ($1 + [96])
}

void .FUNC $197 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	*($2 + [36]) = [0]
	$4 = *($0)
	*($2) = $4
	*($2 + [8]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)4520852774463733760, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$3 }
	$3 = CALL $70($2, $5)
	if ( ((int_32)*($3 + [68]) == (int_32)$2) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	CALL require_auth(*($0))
	if ( ($3 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [8912])
	CALL require_auth(*($0))
	if ( [0] ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10127])
	CALL eosio_assert([0], [9594])
	
.LABEL $label$1
	$0 = CALL db_next_i64(*($3 + [72]), ($2 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	CALL $70($2, $0)
	
.LABEL $label$5
	CALL $178($2, $3)
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($2 + [28])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $9($0)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($2 + [24]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($3)
	
.LABEL $label$6
	$global$0 = ($2 + [48])
}

void .FUNC $194 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$2 = ($global$0 - [112])
	$global$0 = $2
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [8521])
	
.LABEL $label$1
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)*($1 + [4])) ){ goto $label$2 }
	$4 = ($2 + [84])
	$5 = ($2 + [60])
	$6 = ($2 + [64])
	$7 = ($2 + [68])
	$8 = ($2 + [76])
	$9 = ($2 + [92])
	$10 = ($2 + [100])
	$1 = ($1 + [4])
	
.LOOP $label$3:
	$11 = CALL $37()
	*($5) = [0]
	*($6) = [0]
	*($7) = (int_64)0
	*($8) = (int_64)0
	*($4) = (int_64)0
	*($9) = (int_64)0
	*($10) = (int_64)0
	*($2 + [48]) = ((CASTING uint_32)(uint_64 ((int_64)$11 / (int_64)1000000)) + [60])
	*((($2 + [32]) + [8])) = (int_64)-6402241254016417792
	$11 = *($0)
	*($2 + [32]) = $11
	*($2 + [24]) = $11
	*($2 + [16]) = (int_64)5377998870511529472
	*($2 + [8]) = *($3)
	CALL $109($4, ($2 + [32]), ($2 + [24]), ($2 + [16]), ($2 + [8]))
	*($7) = [1]
	$11 = CALL $97($0)
	*($2 + [40]) = (int_64)0
	*($2 + [32]) = $11
	CALL $98(($2 + [48]), ($2 + [32]), *($0), [0])
	CALL $99(($2 + [48]))
	$3 = ($3 + [8])
	if ( ((int_32)$3 != (int_32)*($1)) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($2 + [112])
}

void .FUNC $195 (int_32 $0, int_64 $1, int_64 $2)
{
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [8521])
	
.LABEL $label$1
	if ( ((uint_64)$1 > (uint_64)$2) ){ goto $label$2 }
	
.LOOP $label$3:
	CALL $192($0, $1)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((uint_64)$1 <= (uint_64)$2) ){ goto $label$3 }
	
.LABEL $label$2
}

void .FUNC $219 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$5 = CALL $26($2, ($1 + [16]))
	$6 = *($1 + [28])
	$1 = *($0 + [4])
	$7 = *($1 + [4])
	$0 = (*($0) + int_32($7 >> [1]))
	$1 = *($1)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$7 = CALL $26(($2 + [16]), $5)
	CALL void $0((int_32 $4), (int_64 $3), (int_64 $7), (int_32 ($6 & [255])), (int_32 $1))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($5) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($7 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($5 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $218 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $228(*($1), ($0 + [16]))
	$0 = ($0 + [28])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $190 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $191 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [240])
	$global$0 = $2
	$3 = [0]
	*(($2 + [224])) = [0]
	*($2 + [208]) = (int_64)-1
	*($2 + [216]) = (int_64)0
	*($2 + [228]) = [0]
	$4 = *($0)
	*($2 + [192]) = $4
	*($2 + [200]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)4520852774463733760, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$3 }
	$3 = CALL $70(($2 + [192]), $5)
	if ( ((int_32)*($3 + [68]) == (int_32)($2 + [192])) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	if ( (CALL has_auth((int_64)7130081133533855744) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [8912])
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$1 }
	
.LABEL $label$2
	if ( CALL has_auth(*(($3 + [8]))) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [8521])
	
.LABEL $label$1
	*(($2 + [184])) = [0]
	*($2 + [168]) = (int_64)-1
	*($2 + [176]) = (int_64)0
	$4 = *($0)
	*($2 + [152]) = $4
	*($2 + [160]) = $4
	CALL $73(($2 + [120]), ($2 + [152]))
	$4 = *(($3 + [8]))
	*((($2 + [104]) + [8])) = *(($3 + [56]))
	*((($2 + [88]) + [8])) = [0]
	*($2 + [104]) = *($3 + [48])
	*($2 + [88]) = (int_64)0
	$1 = *($2 + [128])
	$5 = CALL $16([8941])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($2 + [88]) = ($5 << [1])
	$6 = (($2 + [88]) | [1])
	if ( $5 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $7($7)
	*($2 + [88]) = ($7 | [1])
	*($2 + [96]) = $6
	*($2 + [92]) = $5
	
.LABEL $label$7
	CALL memcpy($6, [8941], $5)
	
.LABEL $label$6
	$7 = ($3 + [48])
	*(($6 + $5)) = [0]
	*((($2 + [40]) + [8])) = *((($2 + [104]) + [8]))
	*($2 + [40]) = *($2 + [104])
	CALL $78($0, $1, $4, $4, ($2 + [40]), ($2 + [88]))
	if ( ((*($2 + [88]) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*($2 + [96]))
	
.LABEL $label$9
	$8 = *(($3 + [40]))
	*((($2 + [72]) + [8])) = $8
	$9 = *(($7 + [8]))
	*((($2 + [56]) + [8])) = $9
	$4 = *($7)
	$1 = *($3 + [32])
	*((($2 + [24]) + [8])) = $8
	*((($2 + [8]) + [8])) = $9
	*($2 + [72]) = $1
	*($2 + [56]) = $4
	*($2 + [24]) = $1
	*($2 + [8]) = $4
	CALL $177($0, ($2 + [24]), ($2 + [8]), [65535])
	if ( $3 ){ goto $label$10 }
	CALL eosio_assert([0], [10127])
	CALL eosio_assert([0], [9594])
	
.LABEL $label$10
	$5 = CALL db_next_i64(*($3 + [72]), ($2 + [232]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$11 }
	CALL $70(($2 + [192]), $5)
	
.LABEL $label$11
	CALL $178(($2 + [192]), $3)
	$0 = *($2 + [176])
	if ( ($0 == 0) ){ goto $label$12 }
	$6 = ($2 + [180])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $9($5)
	
.LABEL $label$16
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$15 }
	$3 = *(($2 + [176]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $0
	
.LABEL $label$13
	*($6) = $0
	CALL $9($3)
	
.LABEL $label$12
	$0 = *($2 + [216])
	if ( ($0 == 0) ){ goto $label$17 }
	$6 = ($2 + [220])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$21 }
	CALL $9($5)
	
.LABEL $label$21
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$20 }
	$3 = *(($2 + [216]))
	goto $label$18 
	
.LABEL $label$19
	$3 = $0
	
.LABEL $label$18
	*($6) = $0
	CALL $9($3)
	
.LABEL $label$17
	$global$0 = ($2 + [240])
	return (unreachable)
	
.LABEL $label$5
	CALL $25(($2 + [88]))
}

void .FUNC $378 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($1)
	$1 = *($5 + [4])
	$6 = ($5 + [8])
	$7 = ($5 + [4])
	
.LOOP $label$1:
	$8 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$9 = ((int_64)$4) != (int_64)0
	*($3 + [15]) = (($9) << [7]) | ($8 & [127]))
	if ( ((int_32)(*($6) - $1) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$1 = *($7)
	
.LABEL $label$2
	CALL memcpy($1, ($3 + [15]), [1])
	$1 = (*($7) + [1])
	*($7) = $1
	if ( $9 ){ goto $label$1 }
	$7 = ($0 + [4])
	if ( ((int_32)(*(($5 + [8])) - $1) > (int_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$1 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $7, [33])
	*(($1 = ($5 + [4]))) = (*($1) + [33])
	$global$0 = ($3 + [16])
}

void .FUNC $379 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	$5 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $5
	$2 = ($2 + [8])
	if ( ((int_32)(*(($3 + [8])) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$5 = *($4)
	
.LABEL $label$2
	CALL memcpy($5, $2, [8])
	*($4) = (*($4) + [8])
	$5 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $5, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
}

void .FUNC $372 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$14
	CALL memcpy($4, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $1) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy(($2 + [8]), $1, [8])
	*($4 + [8]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $373 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [16])
	$global$0 = $3
	CALL $111($0)
	*($0 + [16]) = $1
	$4 = *($1 + [4])
	$1 = *($2 + [4])
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$4 = *(($1 + [4]))
	
.LABEL $label$1
	CALL memcpy($0, $4, [8])
	$5 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $5
	*($3 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *($4)
	
.LABEL $label$2
	CALL memcpy(($3 + [8]), $5, [8])
	*($0 + [8]) = *($3 + [8])
	*($4) = (*($4) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	$global$0 = ($3 + [16])
	return $0
}

void .FUNC $370 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $371 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9341])
	$6 = *($5)
	
.LABEL $label$6
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $6, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $6, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9341])
	$6 = *($5)
	
.LABEL $label$10
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [9341])
	$6 = *($5)
	
.LABEL $label$12
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$13 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, $6, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$14 }
	CALL eosio_assert([0], [9341])
	$1 = *(($0 + [4]))
	
.LABEL $label$14
	CALL memcpy($1, $4, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $376 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[24]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [31]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [31]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$6 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$4:
	*($2 + [8]) = $0
	*($2 + [16]) = $4
	*($2 + [20]) = ($4 + [16])
	CALL $379(($2 + [16]), ($2 + [8]))
	$4 = ($4 + [24])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

int_32 .FUNC $377 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($8) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [4])
	$4 = (*($6) + [4])
	*($6) = $4
	if ( ((int_32)(*($8) - $4) > (int_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [4]), [2])
	$4 = (*($6) + [2])
	*($6) = $4
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $374 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $375 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[44]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$3 }
	
.LOOP $label$4:
	*($2 + [8]) = $0
	CALL $378($4, ($2 + [8]), [1])
	$7 = *($6 + [4])
	$6 = *($2 + [8])
	if ( ((int_32)(*($6 + [8]) - $7) > (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$7 = *(($6 + [4]))
	
.LABEL $label$5
	CALL memcpy($7, ($4 + [40]), [2])
	*(($6 = ($6 + [4]))) = (*($6) + [2])
	$4 = ($4 + [44])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [96])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	$5 = CALL $7([208])
	CALL $283($5)
	*($5 + [176]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [20])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [64])
	*($3 + [64]) = ($5 + [80])
	*($3 + [68]) = ($5 + [96])
	*($3 + [72]) = ($5 + [112])
	*($3 + [76]) = ($5 + [124])
	*($3 + [80]) = ($5 + [136])
	*($3 + [84]) = ($5 + [144])
	*($3 + [88]) = ($5 + [160])
	*($3 + [92]) = ($5 + [168])
	CALL $284(($3 + [40]), ($3 + [32]))
	*($5 + [180]) = $1
	*($5 + [184 align=4]) = (int_64)-1
	*($5 + [192 align=4]) = (int_64)-1
	*($5 + [200]) = [-1]
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $285(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $286(($1 + [144]), *(($1 + [148])))
	$4 = *($1 + [124])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [128])) = $4
	CALL $9($4)
	
.LABEL $label$11
	$4 = *($1 + [112])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [116])) = $4
	CALL $9($4)
	
.LABEL $label$12
	if ( (*($1 + [32]) & [1]) ){ goto $label$17 }
	if ( (*($1 + [20]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $9(*(($1 + [40])))
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $9(*(($1 + [28])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $9(*(($1 + [16])))
	
.LABEL $label$13
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return $5
}

void .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [8])
	$5 = (CASTING uint_32)(uint_64 $4)
	$6 = ((int_64)$4 & (int_64)255)
	$7 = (int_64)($6 == 0)
	if ( $7 ){ goto $label$2 }
	$8 = ((int_64)$6 + (int_64)1)
	$9 = (int_64)1
	
.LOOP $label$3:
	$9 = ((int_64)$9 * (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)1
	
.LABEL $label$1
	$5 = ($5 & [255])
	$10 = ($2 - (($5 + [16]) & [496]))
	$2 = $10
	$global$0 = $2
	*(($11 = ($10 + $5))) = [0]
	$12 = *($1)
	if ( $7 ){ goto $label$4 }
	$8 = ((int_64)( (int_64)-1 ? (int_64)1 : ((int_64)$12 < (int_64)0) ) * (int_64)((int_64)$12 % (int_64)$9))
	$6 = ((int_64)$6 + (int_64)1)
	$1 = ($11 + [-1])
	
.LOOP $label$5:
	$13 = ((int_64)$8 / (int_64)10)
	*($1) = ((CASTING uint_32)(uint_64 (int_64))($8 - ((int_64)$13 * (int_64)10))) + [48])
	$1 = ($1 + [-1])
	$8 = $13
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)$6 > (int_64)1) ){ goto $label$5 }
	
.LABEL $label$4
	$11 = ($2 - (($5 + [47]) & [496]))
	$global$0 = $11
	$14 = ( [10124] ? [10126] : *($10) )
	$9 = ((int_64)$12 / (int_64)$9)
	$15 = ($5 + [32])
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( (int_64)($8) == 0) ){ goto $label$9 }
	$5 = [0]
	
.LOOP $label$11:
	*((($3 + [41]) + ($1 = $5))) = $8
	$5 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$11 }
	
.LABEL $label$10
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [24]) = ($5 << [1])
	$2 = (($3 + [24]) | [1])
	goto $label$7 
	
.LABEL $label$9
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	*($3 + [24]) = [0]
	$1 = (($3 + [24]) | [1])
	$5 = $1
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$2 = CALL $7($7)
	*($3 + [24]) = ($7 | [1])
	*($3 + [32]) = $2
	*($3 + [28]) = $5
	
.LABEL $label$7
	$7 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$12:
	*(($2 + $1)) = *((($3 + [41]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$12 }
	$5 = ($2 + $5)
	$1 = (($3 + [24]) | [1])
	
.LABEL $label$6
	*($5) = [0]
	*(($3 + [16])) = ( *($3 + [32]) ? $1 : (*($3 + [24]) & [1]) )
	*($3 + [12]) = $10
	*($3 + [8]) = $14
	*($3) = $9
	CALL $24($11, $15, [10112], $3)
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($3 + [32])))
	
.LABEL $label$13
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL $16($11)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$17 }
	*($0) = ($1 << [1])
	$5 = ($0 + [1])
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$2 = (($1 + [16]) & [-16])
	$5 = CALL $7($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $1
	
.LABEL $label$16
	CALL memcpy($5, $11, $1)
	
.LABEL $label$15
	*(($5 + $1)) = [0]
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$14
	CALL $25($0)
}

void .FUNC $176 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	float_64 $7
	int_64 $8
	float_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$5 = ($global$0 - [608])
	$global$0 = $5
	$6 = *($3)
	$6 = *($4)
	CALL __multi3(($5 + [48]), $6, (int_64)$6 >> (int_64)63), $6, (int_64)$6 >> (int_64)63))
	*($5 + [424]) = $2
	*($5 + [432]) = $1
	$6 = *($3 + [8])
	$2 = *(($5 + [56]))
	$1 = *($5 + [48])
	if ( (( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$2 }
	if ( ( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$1 }
	CALL eosio_assert([0], [11324])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	$7 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *($0 + [68])))
	if ( ((float_64)(float_64)|$7| < (float_64)(float_64)9223372036854775808) ){ goto $label$7 }
	$2 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = (Rounds 0)($7)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [11038])
	$8 = ((int_64)$1 / (int_64)$2)
	if ( ((int_64)$8 > (int_64)0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_64)$1 != (int_64)-9223372036854775808) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)-1) ){ goto $label$8 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$8
	$8 = ((int_64)$1 / (int_64)$2)
	if ( ((int_64)$8 > (int_64)0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [10984])
	
.LABEL $label$3
	$9 = ((float_32)(float_32))((float_32)1 - *($0 + [72])) * (float_32)(CASTING float_32)(int_64 $8)
	if ( ((float_32)(float_32)|$9)| < (float_32)(float_32)9223372036854775808) ){ goto $label$10 }
	$10 = (int_64)-9223372036854775808
	goto $label$9 
	
.LABEL $label$10
	$10 = (Rounds 0)($9)
	
.LABEL $label$9
	if ( (uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$11 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$11
	$1 = (uint_64)$6 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$18 }
	$1 = $2
	$12 = $11
	$11 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	$1 = $2
	
.LOOP $label$19:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$12 = ((int_32)$11 < (int_32)[6])
	$13 = ($11 + [1])
	$11 = $13
	if ( $12 ){ goto $label$19 }
	$11 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$16 }
	
.LABEL $label$17
	$2 = (int_64)
	if ( ((int_64)$2($8 - $10)) <= (int_64)-4611686018427387904) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL eosio_assert([0], [9494])
	$2 = (int_64)
	if ( ((int_64)$2($8 - $10)) > (int_64)-4611686018427387904) ){ goto $label$13 }
	
.LABEL $label$14
	CALL eosio_assert([0], [10380])
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$12 }
	CALL eosio_assert([0], [10402])
	
.LABEL $label$12
	*((($5 + [384]) + [32])) = [0]
	*($5 + [400]) = (int_64)-1
	*($5 + [408]) = (int_64)0
	$1 = *($0)
	*($5 + [384]) = $1
	*($5 + [392]) = $1
	CALL $73(($5 + [352]), ($5 + [384]))
	*(($5 + [200])) = (int_64)-1
	*((($5 + [176]) + [32])) = (int_64)0
	*(($5 + [216])) = [0]
	*(($5 + [240])) = (int_64)-1
	*(($5 + [248])) = (int_64)0
	*(($5 + [256])) = (int_64)0
	*(($5 + [264])) = [0]
	*(($5 + [288])) = (int_64)-1
	*(($5 + [296])) = [0]
	$1 = *($5 + [352])
	*(($5 + [192])) = $1
	*(($5 + [232])) = $1
	*(($5 + [280])) = $1
	*($5 + [176]) = $1
	*($5 + [184]) = $1
	*($5 + [224]) = $1
	*($5 + [272]) = $1
	*(($5 + [308])) = [0]
	*(($5 + [300])) = (int_64)0
	*(($5 + [320])) = $1
	*(($5 + [328])) = (int_64)-1
	*(($5 + [336])) = (int_64)0
	*(($5 + [344])) = [0]
	*(($5 + [348])) = [0]
	*($5 + [312]) = $1
	CALL $350(($5 + [176]), ($5 + [424]), $4)
	CALL $351(($5 + [176]), ($5 + [432]), $4)
	*((($5 + [144]) + [8])) = [0]
	*((($5 + [160]) + [8])) = *(($4 + [8]))
	*($5 + [144]) = (int_64)0
	*($5 + [160]) = *($4)
	$1 = *($5 + [432])
	$8 = *($5 + [424])
	$14 = *($5 + [352])
	$11 = CALL $16([11372])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$25 }
	*($5 + [144]) = ($11 << [1])
	$12 = (($5 + [144]) | [1])
	if ( $11 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$13 = (($11 + [16]) & [-16])
	$12 = CALL $7($13)
	*($5 + [144]) = ($13 | [1])
	*($5 + [152]) = $12
	*($5 + [148]) = $11
	
.LABEL $label$24
	CALL memcpy($12, [11372], $11)
	
.LABEL $label$23
	*(($12 + $11)) = [0]
	*((($5 + [32]) + [8])) = *((($5 + [160]) + [8]))
	*($5 + [32]) = *($5 + [160])
	CALL $78($0, $14, $8, $1, ($5 + [32]), ($5 + [144]))
	if ( ((*($5 + [144]) & [1]) == 0) ){ goto $label$26 }
	CALL $9(*($5 + [152]))
	
.LABEL $label$26
	*((($5 + [112]) + [8])) = [0]
	*($5 + [128]) = $10
	*($5 + [136]) = $6
	*($5 + [112]) = (int_64)0
	$1 = *($5 + [424])
	$10 = *($5 + [432])
	$8 = *($5 + [360])
	$11 = CALL $16([11349])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$21 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$29 }
	*($5 + [112]) = ($11 << [1])
	$12 = (($5 + [112]) | [1])
	if ( $11 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$13 = (($11 + [16]) & [-16])
	$12 = CALL $7($13)
	*($5 + [112]) = ($13 | [1])
	*($5 + [120]) = $12
	*($5 + [116]) = $11
	
.LABEL $label$28
	CALL memcpy($12, [11349], $11)
	
.LABEL $label$27
	*(($12 + $11)) = [0]
	*((($5 + [16]) + [8])) = *((($5 + [128]) + [8]))
	*($5 + [16]) = *($5 + [128])
	CALL $78($0, $8, $10, $1, ($5 + [16]), ($5 + [112]))
	if ( ((*($5 + [112]) & [1]) == 0) ){ goto $label$30 }
	CALL $9(*($5 + [120]))
	
.LABEL $label$30
	*((($5 + [80]) + [8])) = [0]
	*($5 + [96]) = $2
	*($5 + [104]) = $6
	*($5 + [80]) = (int_64)0
	$10 = *((($5 + [352]) + [8]))
	$1 = *($5 + [432])
	$11 = CALL $16([11378])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$20 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$33 }
	*($5 + [80]) = ($11 << [1])
	$12 = (($5 + [80]) | [1])
	if ( $11 ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	$13 = (($11 + [16]) & [-16])
	$12 = CALL $7($13)
	*($5 + [80]) = ($13 | [1])
	*($5 + [88]) = $12
	*($5 + [84]) = $11
	
.LABEL $label$32
	CALL memcpy($12, [11378], $11)
	
.LABEL $label$31
	*(($12 + $11)) = [0]
	*(($5 + [8])) = *((($5 + [96]) + [8]))
	*($5) = *($5 + [96])
	CALL $78($0, $10, $1, $1, $5, ($5 + [80]))
	if ( ((*($5 + [80]) & [1]) == 0) ){ goto $label$34 }
	CALL $9(*($5 + [88]))
	
.LABEL $label$34
	*(($11 = (($5 + [64]) + [8]))) = *(($3 + [8]))
	*($5 + [64]) = *($3)
	*(($12 = (($5 + [440]) + [8]))) = *($11)
	*($5 + [440]) = *($5 + [64])
	*(($15 = (($5 + [552]) + [32]))) = [0]
	*($5 + [568]) = (int_64)-1
	*($5 + [576]) = (int_64)0
	$1 = *($0)
	*($5 + [552]) = $1
	*($5 + [560]) = $1
	CALL $71(($5 + [456]), ($5 + [552]))
	*((($5 + [456]) + [8])) = *($12)
	*($5 + [456]) = *($5 + [440])
	CALL $65(($5 + [552]), ($5 + [456]), *($0))
	$13 = *($5 + [576])
	if ( ($13 == 0) ){ goto $label$35 }
	$16 = ($5 + [580])
	$11 = *($16)
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$37 }
	
.LOOP $label$38:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$39 }
	CALL $9($12)
	
.LABEL $label$39
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$38 }
	$11 = *(($5 + [576]))
	goto $label$36 
	
.LABEL $label$37
	$11 = $13
	
.LABEL $label$36
	*($16) = $13
	CALL $9($11)
	
.LABEL $label$35
	$1 = *($0)
	*(($5 + [520])) = $6
	*((($5 + [456]) + [32])) = *(($4 + [8]))
	*(($5 + [504])) = *(($3 + [8]))
	*($5 + [512]) = $2
	*($5 + [552]) = $1
	*($5 + [560]) = (int_64)-3617352385912897536
	$2 = *($5 + [432])
	*($5 + [456]) = $2
	*($5 + [464]) = *($5 + [424])
	*($5 + [472]) = $2
	*($5 + [480]) = *($4)
	*($5 + [496]) = *($3)
	*(($11 = CALL $7([16]))) = $1
	*($11 + [8]) = (int_64)-6402241254016417792
	*(($5 + [588])) = [0]
	$12 = ($11 + [16])
	*(($5 + [576])) = $12
	*(($5 + [572])) = $12
	*($5 + [568]) = $11
	*($5 + [580 align=4]) = (int_64)0
	CALL $46(($5 + [580]), [72])
	$11 = *($15)
	$12 = *($5 + [580])
	*($5 + [444]) = $12
	*($5 + [440]) = $12
	*($5 + [448]) = $11
	*($5 + [592]) = ($5 + [440])
	*($5 + [600]) = ($5 + [456])
	CALL $305(($5 + [600]), ($5 + [592]))
	CALL $48(($5 + [552]))
	$11 = *($5 + [580])
	if ( ($11 == 0) ){ goto $label$40 }
	*(($5 + [584])) = $11
	CALL $9($11)
	
.LABEL $label$40
	$11 = *($5 + [568])
	if ( ($11 == 0) ){ goto $label$41 }
	*(($5 + [572])) = $11
	CALL $9($11)
	
.LABEL $label$41
	CALL $145(($5 + [176]))
	$13 = *($5 + [408])
	if ( ($13 == 0) ){ goto $label$42 }
	$0 = ($5 + [412])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$44 }
	
.LOOP $label$45:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$46 }
	CALL $9($12)
	
.LABEL $label$46
	if ( ((int_32)$13 != (int_32)$11) ){ goto $label$45 }
	$11 = *(($5 + [408]))
	goto $label$43 
	
.LABEL $label$44
	$11 = $13
	
.LABEL $label$43
	*($0) = $13
	CALL $9($11)
	
.LABEL $label$42
	$global$0 = ($5 + [608])
	return (unreachable)
	
.LABEL $label$22
	CALL $25(($5 + [144]))
	
.LABEL $label$21
	CALL $25(($5 + [112]))
	
.LABEL $label$20
	CALL $25(($5 + [80]))
	(unreachable)
	(unreachable)
}

void .FUNC $177 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($4 + [136])) = [0]
	*($4 + [120]) = (int_64)-1
	*($4 + [128]) = (int_64)0
	$5 = *($0)
	*($4 + [104]) = $5
	*($4 + [112]) = $5
	CALL $71(($4 + [8]), ($4 + [104]))
	if ( ((int_64)*($1 + [8]) == (int_64)*(($4 + [48]))) ){ goto $label$1 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$1
	$5 = (int_64)
	*($4 + [40]) = $5(*($4 + [40]) - *($1)))
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [10380])
	$5 = *(($4 + [40]))
	
.LABEL $label$2
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [10402])
	
.LABEL $label$3
	if ( ((int_64)*($2 + [8]) == (int_64)*(($4 + [72]))) ){ goto $label$4 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$4
	$5 = (int_64)
	*($4 + [64]) = $5(*($4 + [64]) - *($2)))
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10380])
	$5 = *(($4 + [64]))
	
.LABEL $label$5
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [10402])
	
.LABEL $label$6
	*($4 + [96]) = (*($4 + [96]) + $3)
	CALL $65(($4 + [104]), ($4 + [8]), *($0))
	$0 = *($4 + [128])
	if ( ($0 == 0) ){ goto $label$7 }
	$3 = ($4 + [132])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $9($1)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($4 + [128]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $0
	
.LABEL $label$8
	*($3) = $0
	CALL $9($2)
	
.LABEL $label$7
	$global$0 = ($4 + [144])
}

void .FUNC $170 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [400])
	$global$0 = $4
	CALL require_auth($2)
	*(($4 + [376])) = [0]
	*($4 + [360]) = (int_64)-1
	*($4 + [368]) = (int_64)0
	*($4 + [380]) = [0]
	$5 = *($0)
	*($4 + [344]) = $5
	*($4 + [352]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)-4421661421696319488, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL $69(($4 + [344]), $6)
	if ( ((int_32)*($6 + [68]) == (int_32)($4 + [344])) ){ goto $label$3 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$3
	*($4 + [340]) = $6
	*($4 + [336]) = ($4 + [344])
	goto $label$1 
	
.LABEL $label$2
	*($4 + [340]) = [0]
	*($4 + [336]) = ($4 + [344])
	CALL eosio_assert([0], [8961])
	$6 = *($4 + [340])
	
.LABEL $label$1
	$7 = *($3 + [8])
	*($4 + [328]) = $7
	$1 = *($3)
	$5 = *($6 + [48])
	$5 = ( $5 ? $1 : ((int_64)$5 < (int_64)$1) )
	*($4 + [320]) = $5
	if ( (uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$4 }
	CALL eosio_assert([0], [9445])
	$7 = *(($4 + [328]))
	
.LABEL $label$4
	$5 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$1 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$5 = $1
	$6 = $3
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $1
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$6 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$3 < (int_32)[6])
	$8 = ($3 + [1])
	$3 = $8
	if ( $6 ){ goto $label$9 }
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	CALL eosio_assert([0], [9494])
	$7 = *(($4 + [328]))
	
.LABEL $label$5
	$5 = *($4 + [320])
	CALL $146(($4 + [384]), $0, $2, $7)
	if ( ((int_64)*($4 + [392]) == (int_64)$7) ){ goto $label$10 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$10
	if ( ((int_64)*($4 + [384]) >= (int_64)$5) ){ goto $label$11 }
	CALL eosio_assert([0], [11280])
	
.LABEL $label$11
	$3 = *($4 + [340])
	$1 = *($3 + [8])
	$8 = (($4 + [320]) + [8])
	*(($6 = (($4 + [256]) + [8]))) = *($8)
	$5 = *(($3 + [24]))
	*(($9 = (($4 + [272]) + [8]))) = $5
	*(($10 = (($4 + [304]) + [8]))) = $5
	$5 = *($3 + [16])
	*((($4 + [128]) + [8])) = *($6)
	*((($4 + [144]) + [8])) = *($9)
	$7 = *($4 + [320])
	*($4 + [256]) = $7
	*($4 + [304]) = $5
	*($4 + [272]) = $5
	*($4 + [144]) = $5
	*($4 + [128]) = $7
	CALL $152(($4 + [288]), $0, ($4 + [144]), ($4 + [128]))
	*((($4 + [112]) + [8])) = *($10)
	*((($4 + [96]) + [8])) = *((($4 + [288]) + [8]))
	*($4 + [112]) = *($4 + [304])
	*($4 + [96]) = *($4 + [288])
	CALL $180($0, $2, $1, ($4 + [112]), ($4 + [96]))
	$6 = $3
	if ( ((int_64)*($8) == (int_64)*(($3 + [56]))) ){ goto $label$12 }
	CALL eosio_assert([0], [9889])
	$6 = *($4 + [340])
	
.LABEL $label$12
	$5 = *($4 + [320])
	if ( ((int_64)$5 != (int_64)*($3 + [48])) ){ goto $label$15 }
	$7 = *(($6 + [40]))
	*((($4 + [240]) + [8])) = $7
	$2 = *(($6 + [56]))
	*((($4 + [224]) + [8])) = $2
	$5 = *($6 + [48])
	$1 = *($6 + [32])
	*((($4 + [16]) + [8])) = $7
	*(($4 + [8])) = $2
	*($4 + [240]) = $1
	*($4 + [224]) = $5
	*($4 + [16]) = $1
	*($4) = $5
	CALL $181($0, ($4 + [16]), $4, [65535])
	$5 = *($4 + [336])
	$3 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	if ( $3) ){ goto $label$16 }
	CALL eosio_assert([0], [10127])
	CALL eosio_assert([0], [9594])
	
.LABEL $label$16
	$6 = CALL db_next_i64(*($3 + [72]), ($4 + [384]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$17 }
	CALL $69((CASTING uint_32)(uint_64 $5), $6)
	
.LABEL $label$17
	CALL $182(($4 + [344]), $3)
	$8 = *($4 + [368])
	if ( $8 ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	if ( ((int_64)*(($6 + [56])) != (int_64)*(($4 + [328]))) ){ goto $label$20 }
	if ( ((int_64)*($6 + [48]) > (int_64)$5) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL eosio_assert([0], [9889])
	if ( ((int_64)*($6 + [48]) <= (int_64)*($4 + [320])) ){ goto $label$18 }
	
.LABEL $label$19
	$3 = *($4 + [340])
	$1 = *(($3 + [24]))
	*((($4 + [192]) + [8])) = $1
	$5 = *($3 + [16])
	*((($4 + [80]) + [8])) = $1
	$3 = (($4 + [320]) + [8])
	$1 = *($3)
	*((($4 + [64]) + [8])) = $1
	*((($4 + [176]) + [8])) = $1
	$1 = *($4 + [320])
	*($4 + [176]) = $1
	*($4 + [192]) = $5
	*($4 + [80]) = $5
	*($4 + [64]) = $1
	CALL $152(($4 + [208]), $0, ($4 + [80]), ($4 + [64]))
	$5 = *($3)
	*((($4 + [160]) + [8])) = $5
	*((($4 + [48]) + [8])) = *((($4 + [208]) + [8]))
	*((($4 + [32]) + [8])) = $5
	$5 = *($4 + [320])
	*($4 + [160]) = $5
	*($4 + [48]) = *($4 + [208])
	*($4 + [32]) = $5
	CALL $181($0, ($4 + [48]), ($4 + [32]), [0])
	$5 = *($0)
	$3 = *($4 + [340])
	*($4 + [384]) = $0
	*($4 + [388]) = ($4 + [336])
	*($4 + [392]) = ($4 + [320])
	if ( $3 ){ goto $label$21 }
	CALL eosio_assert([0], [9698])
	
.LABEL $label$21
	CALL $303(($4 + [344]), $3, $5, ($4 + [384]))
	$8 = *($4 + [368])
	if ( ($8 == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$18
	$8 = *($4 + [368])
	if ( $8 ){ goto $label$13 }
	
.LABEL $label$14
	$global$0 = ($4 + [400])
	return 
	
.LABEL $label$13
	$0 = ($4 + [372])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$23 }
	
.LOOP $label$24:
	$3 = ($3 + [-24])
	$6 = *($3)
	*($3) = [0]
	if ( ($6 == 0) ){ goto $label$25 }
	CALL $9($6)
	
.LABEL $label$25
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$24 }
	$3 = *(($4 + [368]))
	goto $label$22 
	
.LABEL $label$23
	$3 = $8
	
.LABEL $label$22
	*($0) = $8
	CALL $9($3)
	$global$0 = ($4 + [400])
}

void .FUNC $171 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$3 = ($global$0 - [256])
	$global$0 = $3
	CALL eosio_assert([0], [8720])
	$4 = *(($2 + [8]))
	*((($3 + [160]) + [8])) = $4
	$5 = *($2)
	*((($3 + [32]) + [8])) = $4
	*($3 + [32]) = $5
	*($3 + [160]) = $5
	CALL $161($0, $1, ($3 + [32]))
	*((($3 + [120]) + [32])) = [0]
	*($3 + [136]) = (int_64)-1
	*($3 + [144]) = (int_64)0
	$5 = *($0)
	*($3 + [120]) = $5
	*($3 + [128]) = $5
	CALL $73(($3 + [88]), ($3 + [120]))
	if ( CALL has_auth($1) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	if ( CALL has_auth(*($3 + [88])) ){ goto $label$1 }
	CALL eosio_assert([0], [8521])
	
.LABEL $label$1
	*((($3 + [208]) + [32])) = [0]
	*($3 + [224]) = (int_64)-1
	*($3 + [232]) = (int_64)0
	$5 = *($0)
	*($3 + [208]) = $5
	*($3 + [216]) = $5
	CALL $73(($3 + [176]), ($3 + [208]))
	$6 = *($0 + [69])
	$7 = *($3 + [200])
	$8 = *($3 + [232])
	if ( ($8 == 0) ){ goto $label$2 }
	$9 = ($3 + [236])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = ($10 + [-24])
	$11 = *($10)
	*($10) = [0]
	if ( ($11 == 0) ){ goto $label$6 }
	CALL $9($11)
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$5 }
	$10 = *(($3 + [232]))
	goto $label$3 
	
.LABEL $label$4
	$10 = $8
	
.LABEL $label$3
	*($9) = $8
	CALL $9($10)
	
.LABEL $label$2
	if ( ((int_32)($7 & [255]) != (int_32)($6 & [255])) ){ goto $label$7 }
	CALL eosio_assert([0], [8480])
	
.LABEL $label$7
	*(($3 + [240])) = [0]
	*($3 + [224]) = (int_64)-1
	*($3 + [232]) = (int_64)0
	*($3 + [244]) = [0]
	$5 = *($0)
	*($3 + [208]) = $5
	*($3 + [216]) = $5
	*($3 + [80]) = ($3 + [208])
	*($3 + [176]) = (int_64)0
	CALL $132(($3 + [248]), ($3 + [80]), ($3 + [176]))
	if ( (*($3 + [252]) == 0) ){ goto $label$8 }
	*($3 + [180]) = [0]
	*($3 + [176]) = ($3 + [80])
	$10 = CALL $133(($3 + [176]))
	$5 = *($2)
	$4 = *($2 + [8])
	$10 = *($10 + [4])
	if ( ((int_64)*(($10 + [40])) == (int_64)$4) ){ goto $label$9 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$9
	$5 = (int_64)
	if ( ((int_64)$5($5 - *($10 + [32]))) <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [10402])
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [10380])
	
.LABEL $label$10
	*($3 + [180]) = [0]
	*($3 + [176]) = ($3 + [80])
	$12 = *(*(CALL $133(($3 + [176])) + [4]))
	*(($10 = (($3 + [64]) + [8]))) = *(($2 + [8]))
	$13 = *($2)
	*((($3 + [16]) + [8])) = *($10)
	*($3 + [64]) = $13
	*($3 + [16]) = *($3 + [64])
	CALL $172($0, $12, $1, ($3 + [16]))
	if ( ((int_64)$5 < (int_64)1) ){ goto $label$8 }
	*(($3 + [8])) = $4
	*($3 + [56]) = $4
	*($3) = $5
	*($3 + [48]) = $5
	CALL $171($0, $1, $3)
	
.LABEL $label$8
	$8 = *($3 + [232])
	if ( ($8 == 0) ){ goto $label$12 }
	$0 = ($3 + [236])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$10 = ($10 + [-24])
	$11 = *($10)
	*($10) = [0]
	if ( ($11 == 0) ){ goto $label$16 }
	CALL $9($11)
	
.LABEL $label$16
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$15 }
	$10 = *(($3 + [232]))
	goto $label$13 
	
.LABEL $label$14
	$10 = $8
	
.LABEL $label$13
	*($0) = $8
	CALL $9($10)
	
.LABEL $label$12
	$8 = *($3 + [144])
	if ( ($8 == 0) ){ goto $label$17 }
	$0 = ($3 + [148])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$19 }
	
.LOOP $label$20:
	$10 = ($10 + [-24])
	$11 = *($10)
	*($10) = [0]
	if ( ($11 == 0) ){ goto $label$21 }
	CALL $9($11)
	
.LABEL $label$21
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$20 }
	$10 = *(($3 + [144]))
	goto $label$18 
	
.LABEL $label$19
	$10 = $8
	
.LABEL $label$18
	*($0) = $8
	CALL $9($10)
	
.LABEL $label$17
	$global$0 = ($3 + [256])
}

void .FUNC $172 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	float_64 $10
	$4 = ($global$0 - [288])
	$global$0 = $4
	*(($4 + [264])) = [0]
	*($4 + [248]) = (int_64)-1
	*($4 + [256]) = (int_64)0
	*($4 + [268]) = [0]
	$5 = *($0)
	*($4 + [232]) = $5
	*($4 + [240]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)4520852774463733760, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL $70(($4 + [232]), $6)
	if ( ((int_32)*($6 + [68]) == (int_32)($4 + [232])) ){ goto $label$3 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$3
	*($4 + [228]) = $6
	*($4 + [224]) = ($4 + [232])
	goto $label$1 
	
.LABEL $label$2
	*($4 + [228]) = [0]
	*($4 + [224]) = ($4 + [232])
	CALL eosio_assert([0], [8912])
	$6 = *($4 + [228])
	
.LABEL $label$1
	$7 = *($3 + [8])
	*($4 + [216]) = $7
	$1 = *($3)
	$5 = *($6 + [32])
	$5 = ( $5 ? $1 : ((int_64)$5 < (int_64)$1) )
	*($4 + [208]) = $5
	if ( (uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$4 }
	CALL eosio_assert([0], [9445])
	$7 = *(($4 + [216]))
	
.LABEL $label$4
	$5 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$1 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$5 = $1
	$6 = $3
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $1
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$6 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$3 < (int_32)[6])
	$8 = ($3 + [1])
	$3 = $8
	if ( $6 ){ goto $label$9 }
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	CALL eosio_assert([0], [9494])
	$7 = *(($4 + [216]))
	
.LABEL $label$5
	$5 = *($4 + [208])
	CALL $146(($4 + [272]), $0, $2, $7)
	if ( ((int_64)*($4 + [280]) == (int_64)$7) ){ goto $label$10 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$10
	if ( ((int_64)*($4 + [272]) >= (int_64)$5) ){ goto $label$11 }
	CALL eosio_assert([0], [11280])
	
.LABEL $label$11
	$3 = *($4 + [228])
	$1 = *($3 + [8])
	$8 = (($4 + [208]) + [8])
	*(($6 = (($4 + [176]) + [8]))) = *($8)
	*(($9 = (($4 + [192]) + [8]))) = *(($3 + [24]))
	$5 = *($3 + [16])
	*((($4 + [80]) + [8])) = *($6)
	*((($4 + [96]) + [8])) = *($9)
	$7 = *($4 + [208])
	*($4 + [176]) = $7
	*($4 + [192]) = $5
	*($4 + [96]) = $5
	*($4 + [80]) = $7
	CALL $176($0, $1, $2, ($4 + [96]), ($4 + [80]))
	$6 = $3
	if ( ((int_64)*($8) == (int_64)*(($3 + [40]))) ){ goto $label$12 }
	CALL eosio_assert([0], [9889])
	$6 = *($4 + [228])
	
.LABEL $label$12
	$8 = ($6 + [32])
	$5 = *($4 + [208])
	if ( ((int_64)$5 != (int_64)*($3 + [32])) ){ goto $label$15 }
	$7 = *(($8 + [8]))
	*((($4 + [160]) + [8])) = $7
	$2 = *(($6 + [56]))
	*((($4 + [144]) + [8])) = $2
	$5 = *($6 + [48])
	$1 = *($8)
	*((($4 + [16]) + [8])) = $7
	*(($4 + [8])) = $2
	*($4 + [160]) = $1
	*($4 + [144]) = $5
	*($4 + [16]) = $1
	*($4) = $5
	CALL $177($0, ($4 + [16]), $4, [65535])
	$5 = *($4 + [224])
	$3 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	if ( $3) ){ goto $label$16 }
	CALL eosio_assert([0], [10127])
	CALL eosio_assert([0], [9594])
	
.LABEL $label$16
	$6 = CALL db_next_i64(*($3 + [72]), ($4 + [272]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$17 }
	CALL $70((CASTING uint_32)(uint_64 $5), $6)
	
.LABEL $label$17
	CALL $178(($4 + [232]), $3)
	$8 = *($4 + [256])
	if ( $8 ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	if ( ((int_64)*(($6 + [40])) != (int_64)*(($4 + [216]))) ){ goto $label$20 }
	if ( ((int_64)*($8) > (int_64)$5) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL eosio_assert([0], [9889])
	if ( ((int_64)*($8) <= (int_64)*($4 + [208])) ){ goto $label$18 }
	
.LABEL $label$19
	$5 = *($3 + [16])
	$3 = *($4 + [228])
	$5 = *($3 + [32])
	CALL __multi3(($4 + [64]), $5, (int_64)$5 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	*((($4 + [128]) + [8])) = *((($4 + [208]) + [8]))
	*($4 + [128]) = *($4 + [208])
	$7 = *(($3 + [24]))
	$1 = *((($4 + [64]) + [8]))
	$5 = *($4 + [64])
	if ( (( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$22 }
	if ( ( ((uint_64)$5 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$21 }
	CALL eosio_assert([0], [11324])
	goto $label$21 
	
.LABEL $label$22
	CALL eosio_assert([0], [11300])
	
.LABEL $label$21
	$10 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *($0 + [68])))
	*($4 + [120]) = $7
	*($4 + [112]) = $5
	if ( ((float_64)(float_64)|$10| < (float_64)(float_64)9223372036854775808) ){ goto $label$26 }
	$1 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$1 = (Rounds 0)($10)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$24 }
	
.LABEL $label$25
	CALL eosio_assert([0], [11038])
	goto $label$23 
	
.LABEL $label$24
	if ( ((int_64)$5 != (int_64)-9223372036854775808) ){ goto $label$23 }
	if ( ((int_64)$1 != (int_64)-1) ){ goto $label$23 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$23
	$5 = ((int_64)$5 / (int_64)$1)
	*($4 + [112]) = $5
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$27 }
	CALL eosio_assert([0], [10984])
	
.LABEL $label$27
	*((($4 + [48]) + [8])) = *((($4 + [128]) + [8]))
	*((($4 + [32]) + [8])) = *((($4 + [112]) + [8]))
	*($4 + [48]) = *($4 + [128])
	*($4 + [32]) = *($4 + [112])
	CALL $177($0, ($4 + [48]), ($4 + [32]), [0])
	$5 = *($0)
	$3 = *($4 + [228])
	*($4 + [276]) = $0
	*($4 + [272]) = ($4 + [208])
	*($4 + [280]) = ($4 + [224])
	if ( $3 ){ goto $label$28 }
	CALL eosio_assert([0], [9698])
	
.LABEL $label$28
	CALL $179(($4 + [232]), $3, $5, ($4 + [272]))
	$8 = *($4 + [256])
	if ( ($8 == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$18
	$8 = *($4 + [256])
	if ( $8 ){ goto $label$13 }
	
.LABEL $label$14
	$global$0 = ($4 + [288])
	return 
	
.LABEL $label$13
	$0 = ($4 + [260])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$30 }
	
.LOOP $label$31:
	$3 = ($3 + [-24])
	$6 = *($3)
	*($3) = [0]
	if ( ($6 == 0) ){ goto $label$32 }
	CALL $9($6)
	
.LABEL $label$32
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$31 }
	$3 = *(($4 + [256]))
	goto $label$29 
	
.LABEL $label$30
	$3 = $8
	
.LABEL $label$29
	*($0) = $8
	CALL $9($3)
	$global$0 = ($4 + [288])
}

void .FUNC $173 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	CALL $36(($4 + [16]), *($3))
	CALL prints([11463])
	$5 = *($4 + [16])
	$6 = ($5 & [1])
	CALL prints_l(( *($4 + [24]) ? (($4 + [16]) | [1]) : $6 ), ( *($4 + [20]) ? uint_32($5 >> [1]) : $6 ))
	CALL prints([9301])
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL $9(*(($4 + [24])))
	
.LABEL $label$1
	$7 = *($0)
	if ( ((int_64)$7 == (int_64)0) ){ goto $label$5 }
	$6 = [0]
	$8 = *([0] + [10876])
	
.LOOP $label$7:
	*((($4 + [16]) + ($5 = $6))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$7 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$5 == (int_32)[12]) )))))
	$6 = ($5 + [1])
	if ( ((uint_32)$5 > (uint_32)[11]) ){ goto $label$6 }
	$7 = ((int_64)$7 << (int_64)5)
	if ( ((int_64)$7 != (int_64)0) ){ goto $label$7 }
	
.LABEL $label$6
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($4) = ($6 << [1])
	$8 = ($4 | [1])
	goto $label$3 
	
.LABEL $label$5
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	*($4) = [0]
	$8 = ($4 | [1])
	$5 = $8
	goto $label$2 
	
.LABEL $label$4
	$9 = (($6 + [16]) & [-16])
	$8 = CALL $7($9)
	*($4) = ($9 | [1])
	*($4 + [8]) = $8
	*($4 + [4]) = $6
	
.LABEL $label$3
	$9 = ($5 + [1])
	$5 = [0]
	
.LOOP $label$8:
	*(($8 + $5)) = *((($4 + [16]) + $5))
	$5 = ($5 + [1])
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$8 }
	$5 = ($8 + $6)
	$8 = ($4 | [1])
	
.LABEL $label$2
	*($5) = [0]
	CALL prints([11496])
	$5 = *($4)
	$6 = ($5 & [1])
	CALL prints_l(( *($4 + [8]) ? $8 : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	CALL prints([9301])
	if ( ((*($4) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($4 + [8])))
	
.LABEL $label$9
	$7 = *($1)
	if ( ((int_64)$7 == (int_64)0) ){ goto $label$13 }
	$6 = [0]
	$8 = *([0] + [10876])
	
.LOOP $label$15:
	*((($4 + [16]) + ($5 = $6))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$7 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$5 == (int_32)[12]) )))))
	$6 = ($5 + [1])
	if ( ((uint_32)$5 > (uint_32)[11]) ){ goto $label$14 }
	$7 = ((int_64)$7 << (int_64)5)
	if ( ((int_64)$7 != (int_64)0) ){ goto $label$15 }
	
.LABEL $label$14
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$12 }
	*($4) = ($6 << [1])
	$8 = ($4 | [1])
	goto $label$11 
	
.LABEL $label$13
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	*($4) = [0]
	$8 = ($4 | [1])
	$5 = $8
	goto $label$10 
	
.LABEL $label$12
	$9 = (($6 + [16]) & [-16])
	$8 = CALL $7($9)
	*($4) = ($9 | [1])
	*($4 + [8]) = $8
	*($4 + [4]) = $6
	
.LABEL $label$11
	$9 = ($5 + [1])
	$5 = [0]
	
.LOOP $label$16:
	*(($8 + $5)) = *((($4 + [16]) + $5))
	$5 = ($5 + [1])
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$16 }
	$5 = ($8 + $6)
	$8 = ($4 | [1])
	
.LABEL $label$10
	*($5) = [0]
	CALL prints([11509])
	$5 = *($4)
	$6 = ($5 & [1])
	CALL prints_l(( *($4 + [8]) ? $8 : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	CALL prints([9301])
	if ( ((*($4) & [1]) == 0) ){ goto $label$17 }
	CALL $9(*(($4 + [8])))
	
.LABEL $label$17
	CALL $36(($4 + [16]), [10])
	CALL prints([11521])
	$5 = *($4 + [16])
	$6 = ($5 & [1])
	CALL prints_l(( *($4 + [24]) ? (($4 + [16]) | [1]) : $6 ), ( *($4 + [20]) ? uint_32($5 >> [1]) : $6 ))
	CALL prints([9301])
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$18 }
	CALL $9(*(($4 + [24])))
	
.LABEL $label$18
	CALL $36(($4 + [16]), [8])
	CALL prints([11546])
	$5 = *($4 + [16])
	$6 = ($5 & [1])
	CALL prints_l(( *($4 + [24]) ? (($4 + [16]) | [1]) : $6 ), ( *($4 + [20]) ? uint_32($5 >> [1]) : $6 ))
	CALL prints([9301])
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$19 }
	CALL $9(*((($4 + [16]) + [8])))
	
.LABEL $label$19
	$5 = *($3)
	if ( ((uint_32)$5 > (uint_32)[13]) ){ goto $label$30 }
	goto $label$27 
	
.LABEL $label$31
	CALL $309($0, $1, $2)
	
.LABEL $label$30
	$global$0 = ($4 + [32])
	return 
	
.LABEL $label$29
	CALL $309($0, $1, $2)
	$7 = *($1)
	if ( ((int_64)$7 != (int_64)*($2)) ){ goto $label$32 }
	CALL eosio_assert([0], [11821])
	$7 = *($1)
	
.LABEL $label$32
	CALL require_auth($7)
	$global$0 = ($4 + [32])
	return 
	
.LABEL $label$28
	CALL $310($0, $1, $2)
	$global$0 = ($4 + [32])
	return 
	
.LABEL $label$27
	CALL $309($0, $1, $2)
	$global$0 = ($4 + [32])
	return 
	
.LABEL $label$26
	CALL $311($0, $1, $2)
	$global$0 = ($4 + [32])
	return 
	
.LABEL $label$25
	CALL $309($0, $1, $1)
	CALL require_auth(*($1))
	$global$0 = ($4 + [32])
	return 
	
.LABEL $label$24
	CALL $312($0)
	$global$0 = ($4 + [32])
	return 
	
.LABEL $label$23
	CALL $309($0, $1, $1)
	CALL require_auth(*($1))
	$global$0 = ($4 + [32])
	return 
	
.LABEL $label$22
	CALL $313($0, $1)
	$global$0 = ($4 + [32])
	return 
	
.LABEL $label$21
	CALL $314($0, $1)
	$global$0 = ($4 + [32])
	return 
	
.LABEL $label$20
	CALL $315($0, $1)
	$global$0 = ($4 + [32])
	$5
}

void .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10184])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10229])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [10279])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [72]))
	$9 = *($1 + [76])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4520852774463733760, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$9 = *(($1 + [80]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4520852774463733761, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $179 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($5 = $4) + [40]) = $2
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [8])
	*($5 + [32]) = *($1 + [16])
	$6 = *($1)
	*($5 + [16]) = $6
	CALL $361($3, $1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9830])
	
.LABEL $label$3
	$3 = ($0 + [36])
	$7 = $4
	$4 = ($7 + [-80])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($7 + [-12])
	*($5 + [48]) = $5
	*($5 + [56]) = $1
	*($5 + [60]) = ($1 + [8])
	*($5 + [64]) = ($1 + [16])
	*($5 + [68]) = ($1 + [32])
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [64])
	CALL $294(($5 + [56]), ($5 + [48]))
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [60]) = $1
	*($5 + [56]) = $0
	*($5 + [68]) = $1
	*($5 + [64]) = ($5 + [24])
	*($5 + [72]) = ($5 + [16])
	*($5 + [76]) = ($5 + [40])
	*($5 + [48]) = ($5 + [56])
	CALL $362(($5 + [48]), $3, ($3 + [1]))
	$global$0 = ($5 + [80])
}

void .FUNC $361 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	float_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($0)
	if ( ((int_64)*($4 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$1 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$1
	$5 = (int_64)
	*($1 + [32]) = $5(*($1 + [32]) - *($4)))
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [10380])
	$5 = *(($1 + [32]))
	
.LABEL $label$2
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [10402])
	$5 = *(($1 + [32]))
	
.LABEL $label$3
	$0 = *(*($0 + [8]) + [4])
	$6 = *($0 + [16])
	CALL __multi3($2, $5, (int_64)$5 >> (int_64)63), $6, (int_64)$6 >> (int_64)63))
	$7 = *(($0 + [24]))
	$6 = *(($2 + [8]))
	$5 = *($2)
	if ( (( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$6 < (int_64)0) : (int_64)($6 == 0) ) == 0) ){ goto $label$5 }
	if ( ( ((uint_64)$5 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$6 > (int_64)-1) : ((int_64)$6 == (int_64)-1) ) ){ goto $label$4 }
	CALL eosio_assert([0], [11324])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [11300])
	
.LABEL $label$4
	$8 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *($3 + [68])))
	if ( ((float_64)(float_64)|$8| < (float_64)(float_64)9223372036854775808) ){ goto $label$10 }
	$6 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$6 = (Rounds 0)($8)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [11038])
	$5 = ((int_64)$5 / (int_64)$6)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_64)$5 != (int_64)-9223372036854775808) ){ goto $label$11 }
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$11 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$11
	$5 = ((int_64)$5 / (int_64)$6)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10984])
	
.LABEL $label$6
	*($1 + [48]) = $5
	*(($1 + [56])) = $7
	$global$0 = ($2 + [16])
}

void .FUNC $237 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	*($3 + [144]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [144]), $2, [8])
	*($3 + [64]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy(($3 + [64]), $6, [8])
	*(($4 = (($3 + [144]) + [8]))) = *($3 + [64])
	*((($3 + [16]) + [8])) = $5
	*($3 + [48]) = $2
	*($3 + [52]) = ($2 + [16])
	*($3 + [56]) = $5
	*($3 + [16]) = *($3 + [48])
	$2 = CALL $216(($3 + [64]), $0, $1, ($3 + [16]))
	$0 = *($4)
	*((($3 + [32]) + [8])) = $0
	*(($3 + [8])) = $0
	$0 = *($3 + [144])
	*($3) = $0
	*($3 + [32]) = $0
	CALL $110($2, $3)
	if ( (*($2 + [56]) & [1]) ){ goto $label$9 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [160])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [160])
}

void .FUNC $95 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	*($1 + [104]) = (int_64)0
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-128])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($6 + [-8])
	*($4 + [16]) = $4
	*($4 + [28]) = ($1 + [8])
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [40])
	*($4 + [44]) = ($1 + [56])
	*($4 + [48]) = ($1 + [72])
	*($4 + [52]) = ($1 + [88])
	*($4 + [56]) = ($1 + [104])
	CALL $278(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [124]), $2, $3, [120])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [64])
}

void .FUNC $235 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [120])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [120])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10871])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $216(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $91($2, *($3 + [120]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [128])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [128])
}

void .FUNC $360 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $17(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $17((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $17((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $17((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $17((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

int_64 .FUNC $97 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [48])
	$global$0 = $1
	*(($1 + [40])) = [0]
	*($1 + [24]) = (int_64)-1
	*($1 + [32]) = (int_64)0
	$2 = *($0)
	*($1 + [8]) = $2
	*($1 + [16]) = $2
	$3 = CALL db_find_i64($2, $2, (int_64)-4420681754168262656, (int_64)-4420681754168262656)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $56(($1 + [8]), $3)
	if ( ((int_32)*($3 + [8]) == (int_32)($1 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	$2 = ((int_64)*($3) + (int_64)1)
	*($1) = $2
	CALL $52(($1 + [8]), $1, *($0))
	$4 = *($1 + [32])
	if ( ($4 == 0) ){ goto $label$3 }
	$5 = ($1 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $9($3)
	
.LABEL $label$7
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($1 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $4
	
.LABEL $label$4
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$3
	$global$0 = ($1 + [48])
	return $2
	
.LABEL $label$1
	CALL eosio_assert([0], [10525])
	return (unreachable)
}

void .FUNC $90 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$1
	*(($5 = CALL $7([48])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = $1
	$3 = *($3)
	*($5) = *($3)
	*(($6 = ($5 + [8]))) = *(($3 + [8]))
	*($5 + [16]) = *(($3 + [16]))
	*($5 + [24]) = *(($3 + [24]))
	*($4 + [48]) = ($4 + [32])
	*($4 + [44]) = $4
	*($4 + [40]) = $4
	*($4 + [56]) = ($4 + [40])
	*($4 + [68]) = $6
	*($4 + [64]) = $5
	*($4 + [72]) = ($5 + [16])
	CALL $381(($4 + [64]), ($4 + [56]))
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)-4992088121770901504, $2, (int_64)-4992088121770901504, $4, [32])
	*($5 + [36]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-4992088121770901504) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)-4992088121770901503
	
.LABEL $label$2
	*($4 + [64]) = $5
	*($4) = (int_64)-4992088121770901504
	*($4 + [40]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)-4992088121770901504
	*($3 + [16]) = $6
	*($4 + [64]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $382(($1 + [24]), ($4 + [64]), $4, ($4 + [40]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [64])
	*($4 + [64]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [80])
}

void .FUNC $86 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [80])
	$global$0 = $3
	CALL require_auth(*($0))
	*(($3 + [72])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	$4 = *($0)
	*($3 + [40]) = $4
	*($3 + [48]) = $4
	*(($3 + [32])) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [8]) = $1
	*($3 + [16]) = $2
	CALL $87(($3 + [40]), ($3 + [8]), $4)
	$5 = *($3 + [64])
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = ($3 + [68])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$5 }
	CALL $9($7)
	
.LABEL $label$5
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($3 + [64]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $5
	
.LABEL $label$2
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$1
	$global$0 = ($3 + [80])
}

void .FUNC $232 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [120])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [120])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10871])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy(($3 + [112]), $5, [8])
	*(($3 + [8])) = $6
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $6
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL $125($2, *($3 + [120]), *($3 + [112]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$9 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [128])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [128])
}

void .FUNC $231 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [128])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [128])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10871])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy(($3 + [120]), $5, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [24]) = $2
	*($3 + [28]) = ($2 + [16])
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$5 = CALL $216(($3 + [40]), $0, $1, ($3 + [8]))
	$1 = *($3 + [120])
	$7 = *($3 + [128])
	CALL require_auth(*($5))
	*(($3 + [200])) = [0]
	*($3 + [184]) = (int_64)-1
	*($3 + [192]) = (int_64)0
	$0 = *($5)
	*($3 + [168]) = $0
	*($3 + [176]) = $0
	*(($3 + [160])) = (int_64)0
	*($3 + [152]) = (int_64)0
	*($3 + [136]) = $7
	*($3 + [144]) = $1
	CALL $87(($3 + [168]), ($3 + [136]), $0)
	$6 = *($3 + [192])
	if ( ($6 == 0) ){ goto $label$7 }
	$8 = ($3 + [196])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $9($4)
	
.LABEL $label$11
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($3 + [192]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $6
	
.LABEL $label$8
	*($8) = $6
	CALL $9($2)
	
.LABEL $label$7
	if ( (*($5 + [56]) & [1]) ){ goto $label$14 }
	if ( (*($5 + [28]) & [1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $9(*(($5 + [64])))
	if ( ((*($5 + [28]) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $9(*(($5 + [36])))
	$global$0 = ($3 + [208])
	return 
	
.LABEL $label$12
	$global$0 = ($3 + [208])
}

int_32 .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$9
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [16])) = *($3 + [24])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = *($5)
	*($3 + [24]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $279(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $2($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $9($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [96]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157502641443700736, (int_64)-4157502641443700736)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $62($0, $4)
	if ( ((int_32)*($4 + [96]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*($3) = $1
	CALL $66($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $67($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10184])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10229])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10279])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $58 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$1
	*(($5 = CALL $7([24])) + [8]) = $1
	*($5) = *(*($3))
	CALL memcpy(($4 + [16]), $5, [8])
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)-4420681754168262656, $2, (int_64)-4420681754168262656, ($4 + [16]), [8])
	*($5 + [12]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-4420681754168262656) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)-4420681754168262655
	
.LABEL $label$2
	*($4 + [8]) = $5
	*($4 + [16]) = (int_64)-4420681754168262656
	*($4 + [4]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)-4420681754168262656
	*($3 + [16]) = $6
	*($4 + [8]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $277(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$1 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $9($1)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

void .FUNC $59 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	*($1 + [24]) = (int_64)0
	$2 = *($0)
	*($1) = $2
	*($1 + [8]) = $2
	$0 = CALL db_find_i64($2, $2, (int_64)4982871467403247616, (int_64)4982871467403247616)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $53($1, $0)
	if ( ((int_32)*($0 + [32]) == (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	$3 = CALL db_next_i64(*($0 + [36]), ($1 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	CALL $53($1, $3)
	
.LABEL $label$3
	CALL $60($1, $0)
	
.LABEL $label$1
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$4 }
	$5 = ($1 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $9($3)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($1 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $4
	
.LABEL $label$5
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$4
	$global$0 = ($1 + [48])
}

void .FUNC $271 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $272(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $270 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $277 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $276 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [9341])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $270($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

int_32 .FUNC $275 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9341])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [9341])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $274 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $50 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [128])
	$global$0 = $5
	CALL require_auth(*($0))
	*(($5 + [120])) = [0]
	*($5 + [104]) = (int_64)-1
	*($5 + [112]) = (int_64)0
	$6 = *($0)
	*($5 + [88]) = $6
	*($5 + [96]) = $6
	*($5 + [56]) = $1
	*($5 + [72]) = (int_64)0
	*($5 + [64]) = $2
	if ( (*($3) & [1]) ){ goto $label$5 }
	$7 = ($3 + [1])
	$3 = CALL $16($7)
	if ( ((uint_32)$3 >= (uint_32)[8]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = *($3 + [8])
	$3 = CALL $16($7)
	if ( ($3 <= [8]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9347])
	goto $label$2 
	
.LABEL $label$3
	if ( $3 ){ goto $label$2 }
	$2 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)0
	
.LOOP $label$6:
	$8 = (($7 + $3) + [-1])
	$9 = *($8)
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [9392])
	$9 = *($8)
	
.LABEL $label$7
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$6 }
	$2 = ((int_64)$2 << (int_64)8)
	
.LABEL $label$1
	*(($5 + [72])) = ((int_64)$2 | (int_64)(CASTING uint_64)(uint_32 $4))
	*($5 + [80]) = *($0 + [69])
	CALL $51(($5 + [88]), ($5 + [56]), *($0))
	*(($5 + [48])) = [0]
	*($5 + [32]) = (int_64)-1
	*($5 + [40]) = (int_64)0
	$2 = *($0)
	*($5 + [16]) = $2
	*($5 + [24]) = $2
	*($5 + [8]) = (int_64)1
	CALL $52(($5 + [16]), ($5 + [8]), $2)
	$8 = *($5 + [40])
	if ( ($8 == 0) ){ goto $label$8 }
	$7 = ($5 + [44])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$10 }
	
.LOOP $label$11:
	$3 = ($3 + [-24])
	$9 = *($3)
	*($3) = [0]
	if ( ($9 == 0) ){ goto $label$12 }
	CALL $9($9)
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$11 }
	$3 = *(($5 + [40]))
	goto $label$9 
	
.LABEL $label$10
	$3 = $8
	
.LABEL $label$9
	*($7) = $8
	CALL $9($3)
	
.LABEL $label$8
	$8 = *($5 + [112])
	if ( ($8 == 0) ){ goto $label$13 }
	$7 = ($5 + [116])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = ($3 + [-24])
	$9 = *($3)
	*($3) = [0]
	if ( ($9 == 0) ){ goto $label$17 }
	CALL $9($9)
	
.LABEL $label$17
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$16 }
	$3 = *(($5 + [112]))
	goto $label$14 
	
.LABEL $label$15
	$3 = $8
	
.LABEL $label$14
	*($7) = $8
	CALL $9($3)
	
.LABEL $label$13
	$global$0 = ($5 + [128])
}

void .FUNC $51 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [32]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4982871467403247616, (int_64)4982871467403247616)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $53($0, $4)
	if ( ((int_32)*($4 + [32]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*($3) = $1
	CALL $54($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $55($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $279 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	CALL $367(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	*($3 + [32]) = (int_64)4982871467403247616
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)4982871467403247616
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $368(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($6 = ($1 + [24]))) = *(($3 + [24]))
	*(($7 = ($1 + [16]))) = *(($3 + [16]))
	*(($8 = ($1 + [8]))) = *(($3 + [8]))
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-7])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $8
	*($5 + [32]) = $1
	*($5 + [40]) = $7
	*($5 + [44]) = $6
	CALL $380(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $3, [25])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)4982871467403247616) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)4982871467403247617
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$1
	*(($5 = CALL $7([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = $1
	$3 = *($3)
	*($5) = *($3)
	*($5 + [8]) = *(($3 + [8]))
	*($5 + [16]) = *(($3 + [16]))
	*(($6 = ($5 + [24]))) = *(($3 + [24]))
	*($4 + [48]) = ($4 + [25])
	*($4 + [44]) = $4
	*($4 + [40]) = $4
	*($4 + [56]) = ($4 + [40])
	*($4 + [68]) = ($5 + [8])
	*($4 + [64]) = $5
	*($4 + [72]) = ($5 + [16])
	*($4 + [76]) = $6
	CALL $380(($4 + [64]), ($4 + [56]))
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)4982871467403247616, $2, (int_64)4982871467403247616, $4, [25])
	*($5 + [36]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)4982871467403247616) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)4982871467403247617
	
.LABEL $label$2
	*($4 + [64]) = $5
	*($4) = (int_64)4982871467403247616
	*($4 + [40]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)4982871467403247616
	*($3 + [16]) = $6
	*($4 + [64]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $368(($1 + [24]), ($4 + [64]), $4, ($4 + [40]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [64])
	*($4 + [64]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [80])
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([24])) + [8]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)-4420681754168262656
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = (int_64)-4420681754168262656
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $277(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $2($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $9($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $57 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	*($1) = *(*($3))
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $3, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4420681754168262656) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)-4420681754168262655
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $152 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	float_64 $9
	float_32 $10
	int_64 $11
	if ( (*($1 + [56]) & [1]) ){ goto $label$5 }
	$4 = (($1 + [56]) + [1])
	$5 = CALL $16($4)
	if ( ((uint_32)$5 >= (uint_32)[8]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = *(($1 + [64]))
	$5 = CALL $16($4)
	if ( ($5 <= [8]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9347])
	goto $label$2 
	
.LABEL $label$3
	if ( $5 ){ goto $label$2 }
	$6 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)0
	
.LOOP $label$6:
	$7 = (($4 + $5) + [-1])
	$8 = *($7)
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [9392])
	$8 = *($7)
	
.LABEL $label$7
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$6 }
	
.LABEL $label$1
	$5 = *($1 + [68])
	$9 = CALL $40((float_64)10, (CASTING float_64)(uint_32 $5))
	*($0 + [8]) = ((int_64)((int_64)$6 << (int_64)8) | (int_64)(CASTING uint_64)(uint_32 $5))
	$10 = (DEMOTE float_32)(float_64 ((float_64)((float_64)$9 * (float_64)(CASTING float_64)(int_64 *($3))) / (float_64)(CASTING float_64)(int_64 *($2))))
	if ( ((float_32)(float_32)|$10| < (float_32)(float_32)9223372036854775808) ){ goto $label$9 }
	$11 = (int_64)-9223372036854775808
	goto $label$8 
	
.LABEL $label$9
	$11 = (Rounds 0)($10)
	
.LABEL $label$8
	*($0) = $11
	if ( (uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$10 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$10
	$6 = ((int_64)$6 & (int_64)72057594037927935)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$6 = $11
	$8 = $5
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	$6 = $11
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$15 }
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$12 }
	
.LABEL $label$13
	return 
	
.LABEL $label$11
	CALL eosio_assert([0], [9494])
}

void .FUNC $153 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	*(($7 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL $7([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$6 = ($2 + [16])
	*($3) = $6
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $6
	$9 = ($5 + ((int_32)$8 * (int_32)[40]))
	$10 = ($7 + [40])
	$2 = *($0)
	$11 = *(($0 + [4]))
	if ( ((int_32)$11 == (int_32)$2) ){ goto $label$6 }
	$12 = ($2 - $11)
	$1 = [0]
	
.LOOP $label$7:
	$8 = ($11 + $1)
	*((($2 = ($7 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$6 = ($8 + [-24])
	*($5) = *($6)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($6) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$7 }
	$7 = ($7 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $7
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $8
	CALL $9($8)
	
.LABEL $label$10
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$11
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $150 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	float_64 $13
	$3 = ($global$0 - [656])
	$global$0 = $3
	*(($3 + [648])) = [0]
	*($3 + [632]) = (int_64)-1
	*($3 + [640]) = (int_64)0
	*($3 + [652]) = [0]
	$4 = *($0)
	*($3 + [616]) = $4
	*($3 + [624]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-4421661421696319488, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $69(($3 + [616]), $5)
	if ( ((int_32)*($5 + [68]) == (int_32)($3 + [616])) ){ goto $label$3 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$3
	*($3 + [612]) = $5
	*($3 + [608]) = ($3 + [616])
	$6 = (($3 + [608]) | [4])
	goto $label$1 
	
.LABEL $label$2
	*($3 + [612]) = [0]
	*($3 + [608]) = ($3 + [616])
	CALL eosio_assert([0], [8961])
	$6 = (($3 + [608]) | [4])
	
.LABEL $label$1
	*(($3 + [600])) = [0]
	*($3 + [584]) = (int_64)-1
	*($3 + [592]) = (int_64)0
	*($3 + [604]) = [0]
	$4 = *($0)
	*($3 + [568]) = $4
	*($3 + [576]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)4520852774463733760, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $70(($3 + [568]), $5)
	if ( ((int_32)*($5 + [68]) == (int_32)($3 + [568])) ){ goto $label$6 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$6
	*($3 + [564]) = $5
	*($3 + [560]) = ($3 + [568])
	goto $label$4 
	
.LABEL $label$5
	*($3 + [564]) = [0]
	*($3 + [560]) = ($3 + [568])
	CALL eosio_assert([0], [8912])
	$5 = *($3 + [564])
	
.LABEL $label$4
	$7 = *($6)
	if ( ((int_64)*(($5 + [24])) == (int_64)*(($7 + [24]))) ){ goto $label$7 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$7
	if ( ((int_64)*($5 + [16]) >= (int_64)*($7 + [16])) ){ goto $label$8 }
	CALL eosio_assert([0], [12475])
	
.LABEL $label$8
	$5 = *($3 + [564])
	$1 = *(($5 + [40]))
	$2 = *($5 + [32])
	$4 = *(*($6) + [32])
	$8 = ( $4 ? $2 : ((int_64)$4 < (int_64)$2) )
	if ( (uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$9 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$9
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$2 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$4 = $2
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$4 = $2
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$9 = ($5 + [1])
	$5 = $9
	if ( $7 ){ goto $label$14 }
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9494])
	
.LABEL $label$10
	$5 = *($3 + [564])
	$4 = *($5 + [8])
	$7 = *($6)
	$2 = *($7 + [8])
	if ( ((uint_32)*($7 + [64]) >= (uint_32)*($5 + [64])) ){ goto $label$16 }
	$10 = *(($7 + [24]))
	*((($3 + [544]) + [8])) = $10
	$11 = *($7 + [16])
	*((($3 + [240]) + [8])) = $10
	*((($3 + [224]) + [8])) = $1
	*($3 + [528]) = $8
	*($3 + [536]) = $1
	*($3 + [544]) = $11
	*($3 + [240]) = $11
	*($3 + [224]) = $8
	CALL $180($0, $4, $2, ($3 + [240]), ($3 + [224]))
	goto $label$15 
	
.LABEL $label$16
	$10 = *(($5 + [24]))
	*((($3 + [512]) + [8])) = $10
	$11 = *($5 + [16])
	*((($3 + [272]) + [8])) = $10
	*((($3 + [256]) + [8])) = $1
	*($3 + [496]) = $8
	*($3 + [504]) = $1
	*($3 + [512]) = $11
	*($3 + [272]) = $11
	*($3 + [256]) = $8
	CALL $176($0, $4, $2, ($3 + [272]), ($3 + [256]))
	
.LABEL $label$15
	$7 = *($3 + [564])
	$5 = $7
	$12 = *($6)
	if ( ((int_64)*(($7 + [40])) == (int_64)*(($12 + [40]))) ){ goto $label$17 }
	CALL eosio_assert([0], [9889])
	$5 = *($3 + [564])
	
.LABEL $label$17
	$9 = ($5 + [32])
	if ( ((int_64)*($7 + [32]) != (int_64)*($12 + [32])) ){ goto $label$22 }
	$1 = *(($9 + [8]))
	*((($3 + [480]) + [8])) = $1
	$8 = *(($5 + [56]))
	*((($3 + [464]) + [8])) = $8
	$4 = *($5 + [48])
	$2 = *($9)
	*((($3 + [48]) + [8])) = $1
	*((($3 + [32]) + [8])) = $8
	*($3 + [480]) = $2
	*($3 + [464]) = $4
	*($3 + [48]) = $2
	*($3 + [32]) = $4
	CALL $177($0, ($3 + [48]), ($3 + [32]), [65535])
	$5 = *($6)
	$8 = *(($5 + [40]))
	*((($3 + [448]) + [8])) = $8
	$4 = *(($5 + [56]))
	$2 = *($5 + [48])
	$1 = *($5 + [32])
	*((($3 + [16]) + [8])) = $8
	*(($3 + [8])) = $4
	*((($3 + [432]) + [8])) = $4
	*($3 + [448]) = $1
	*($3 + [432]) = $2
	*($3 + [16]) = $1
	*($3) = $2
	CALL $181($0, ($3 + [16]), $3, [65535])
	$4 = *($3 + [608])
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $5) ){ goto $label$23 }
	CALL eosio_assert([0], [10127])
	CALL eosio_assert([0], [9594])
	
.LABEL $label$23
	$7 = CALL db_next_i64(*($5 + [72]), ($3 + [384]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$24 }
	CALL $69((CASTING uint_32)(uint_64 $4), $7)
	
.LABEL $label$24
	CALL $182(($3 + [616]), $5)
	$4 = *($3 + [560])
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $5) ){ goto $label$25 }
	CALL eosio_assert([0], [10127])
	CALL eosio_assert([0], [9594])
	
.LABEL $label$25
	$7 = CALL db_next_i64(*($5 + [72]), ($3 + [384]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$26 }
	CALL $70((CASTING uint_32)(uint_64 $4), $7)
	
.LABEL $label$26
	CALL $178(($3 + [568]), $5)
	$9 = *($3 + [592])
	if ( $9 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$22
	$12 = *($6)
	$7 = $12
	if ( ((int_64)*(($5 + [40])) == (int_64)*(($12 + [40]))) ){ goto $label$27 }
	CALL eosio_assert([0], [9889])
	$7 = *($6)
	
.LABEL $label$27
	$5 = ($7 + [32])
	if ( ((int_64)*($9) <= (int_64)*($12 + [32])) ){ goto $label$39 }
	$7 = *($3 + [564])
	$4 = *($7 + [16])
	$4 = *($7 + [32])
	CALL __multi3(($3 + [128]), $4, (int_64)$4 >> (int_64)63), $4, (int_64)$4 >> (int_64)63))
	*((($3 + [416]) + [8])) = *(($5 + [8]))
	*($3 + [416]) = *($5)
	$1 = *(($7 + [24]))
	$2 = *((($3 + [128]) + [8]))
	$4 = *($3 + [128])
	if ( (( (uint_64)($4 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$38 }
	if ( ( ((uint_64)$4 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$37 }
	CALL eosio_assert([0], [11324])
	goto $label$37 
	
.LABEL $label$39
	$7 = *($3 + [564])
	if ( ((int_64)*(($7 + [40])) != (int_64)*(($7 + [40]))) ){ goto $label$36 }
	if ( ((int_64)*($5) > (int_64)*($7 + [32])) ){ goto $label$35 }
	goto $label$28 
	
.LABEL $label$38
	CALL eosio_assert([0], [11300])
	
.LABEL $label$37
	$13 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *($0 + [68])))
	*($3 + [408]) = $1
	*($3 + [400]) = $4
	if ( ((float_64)(float_64)|$13| < (float_64)(float_64)9223372036854775808) ){ goto $label$34 }
	$2 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$33 }
	goto $label$30 
	
.LABEL $label$36
	CALL eosio_assert([0], [9889])
	if ( ((int_64)*($5) <= (int_64)*($7 + [32])) ){ goto $label$28 }
	
.LABEL $label$35
	$7 = *($6)
	$2 = *($7 + [16])
	$5 = *($3 + [564])
	$4 = *($5 + [32])
	CALL __multi3(($3 + [208]), $4, (int_64)$4 >> (int_64)63), $2, (int_64)$2 >> (int_64)63))
	*((($3 + [336]) + [8])) = *(($5 + [40]))
	*($3 + [336]) = $4
	$1 = *(($7 + [24]))
	$2 = *((($3 + [208]) + [8]))
	$4 = *($3 + [208])
	if ( (( (uint_64)($4 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$32 }
	if ( ( ((uint_64)$4 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$31 }
	CALL eosio_assert([0], [11324])
	goto $label$31 
	
.LABEL $label$34
	$2 = (Rounds 0)($13)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$30 }
	
.LABEL $label$33
	CALL eosio_assert([0], [11038])
	goto $label$29 
	
.LABEL $label$32
	CALL eosio_assert([0], [11300])
	
.LABEL $label$31
	$13 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *($0 + [68])))
	*($3 + [328]) = $1
	*($3 + [320]) = $4
	if ( ((float_64)(float_64)|$13| < (float_64)(float_64)9223372036854775808) ){ goto $label$43 }
	$2 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	$2 = (Rounds 0)($13)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$41 }
	
.LABEL $label$42
	CALL eosio_assert([0], [11038])
	goto $label$40 
	
.LABEL $label$41
	if ( ((int_64)$4 != (int_64)-9223372036854775808) ){ goto $label$40 }
	if ( ((int_64)$2 != (int_64)-1) ){ goto $label$40 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$40
	$4 = ((int_64)$4 / (int_64)$2)
	*($3 + [320]) = $4
	if ( ((int_64)$4 > (int_64)0) ){ goto $label$44 }
	CALL eosio_assert([0], [10984])
	
.LABEL $label$44
	*((($3 + [192]) + [8])) = *((($3 + [336]) + [8]))
	*((($3 + [176]) + [8])) = *((($3 + [320]) + [8]))
	*($3 + [192]) = *($3 + [336])
	*($3 + [176]) = *($3 + [320])
	CALL $181($0, ($3 + [192]), ($3 + [176]), [0])
	$4 = *($0)
	$5 = *($3 + [612])
	*($3 + [388]) = $0
	*($3 + [384]) = ($3 + [560])
	*($3 + [392]) = ($3 + [608])
	if ( $5 ){ goto $label$45 }
	CALL eosio_assert([0], [9698])
	
.LABEL $label$45
	CALL $183(($3 + [616]), $5, $4, ($3 + [384]))
	$5 = *($3 + [564])
	$1 = *(($5 + [40]))
	*((($3 + [304]) + [8])) = $1
	$4 = *($5 + [48])
	$2 = *($5 + [32])
	$8 = *(($5 + [56]))
	*((($3 + [144]) + [8])) = $8
	*((($3 + [160]) + [8])) = $1
	*((($3 + [288]) + [8])) = $8
	*($3 + [304]) = $2
	*($3 + [288]) = $4
	*($3 + [160]) = $2
	*($3 + [144]) = $4
	CALL $177($0, ($3 + [160]), ($3 + [144]), [65535])
	$4 = *($3 + [560])
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $5) ){ goto $label$46 }
	CALL eosio_assert([0], [10127])
	CALL eosio_assert([0], [9594])
	
.LABEL $label$46
	$7 = CALL db_next_i64(*($5 + [72]), ($3 + [384]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$47 }
	CALL $70((CASTING uint_32)(uint_64 $4), $7)
	
.LABEL $label$47
	CALL $178(($3 + [568]), $5)
	$9 = *($3 + [592])
	if ( ($9 == 0) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$30
	if ( ((int_64)$4 != (int_64)-9223372036854775808) ){ goto $label$29 }
	if ( ((int_64)$2 != (int_64)-1) ){ goto $label$29 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$29
	$4 = ((int_64)$4 / (int_64)$2)
	*($3 + [400]) = $4
	if ( ((int_64)$4 > (int_64)0) ){ goto $label$48 }
	CALL eosio_assert([0], [10984])
	
.LABEL $label$48
	*((($3 + [112]) + [8])) = *((($3 + [416]) + [8]))
	*((($3 + [96]) + [8])) = *((($3 + [400]) + [8]))
	*($3 + [112]) = *($3 + [416])
	*($3 + [96]) = *($3 + [400])
	CALL $177($0, ($3 + [112]), ($3 + [96]), [0])
	$4 = *($0)
	$5 = *($3 + [564])
	*($3 + [388]) = $0
	*($3 + [384]) = ($3 + [608])
	*($3 + [392]) = ($3 + [560])
	if ( $5 ){ goto $label$49 }
	CALL eosio_assert([0], [9698])
	
.LABEL $label$49
	CALL $184(($3 + [568]), $5, $4, ($3 + [384]))
	$5 = *($6)
	$8 = *(($5 + [40]))
	*((($3 + [368]) + [8])) = $8
	$4 = *(($5 + [56]))
	$2 = *($5 + [48])
	$1 = *($5 + [32])
	*((($3 + [80]) + [8])) = $8
	*((($3 + [64]) + [8])) = $4
	*((($3 + [352]) + [8])) = $4
	*($3 + [368]) = $1
	*($3 + [352]) = $2
	*($3 + [80]) = $1
	*($3 + [64]) = $2
	CALL $181($0, ($3 + [80]), ($3 + [64]), [65535])
	$4 = *($3 + [608])
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $5) ){ goto $label$50 }
	CALL eosio_assert([0], [10127])
	CALL eosio_assert([0], [9594])
	
.LABEL $label$50
	$7 = CALL db_next_i64(*($5 + [72]), ($3 + [384]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$51 }
	CALL $69((CASTING uint_32)(uint_64 $4), $7)
	
.LABEL $label$51
	CALL $182(($3 + [616]), $5)
	$9 = *($3 + [592])
	if ( $9 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$28
	$9 = *($3 + [592])
	if ( $9 ){ goto $label$20 }
	
.LABEL $label$21
	$9 = *($3 + [640])
	if ( $9 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$0 = ($3 + [596])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$52 }
	
.LOOP $label$53:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$54 }
	CALL $9($7)
	
.LABEL $label$54
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$53 }
	$5 = *(($3 + [592]))
	*($0) = $9
	CALL $9($5)
	$9 = *($3 + [640])
	if ( $9 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$52
	*($0) = $9
	CALL $9($9)
	$9 = *($3 + [640])
	if ( ($9 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	$0 = ($3 + [644])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$56 }
	
.LOOP $label$57:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$58 }
	CALL $9($7)
	
.LABEL $label$58
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$57 }
	$5 = *(($3 + [640]))
	goto $label$55 
	
.LABEL $label$56
	$5 = $9
	
.LABEL $label$55
	*($0) = $9
	CALL $9($5)
	$global$0 = ($3 + [656])
	return 
	
.LABEL $label$18
	$global$0 = ($3 + [656])
}

void .FUNC $151 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_64 $17
	int_64 $18
	int_64 $19
	float_32 $20
	int_64 $21
	$8 = ($global$0 - [464])
	$global$0 = $8
	CALL require_auth(*($0))
	$10 = *($2 + [8])
	$9 = *($3 + [8])
	if ( ((int_64)$9 == (int_64)$10) ){ goto $label$1 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$1
	$12 = *($2)
	$11 = *($3)
	if ( ((int_64)$11 >= (int_64)$12) ){ goto $label$3 }
	$13 = *($4 + [8])
	CALL $146(($8 + [128]), $0, $1, $13)
	if ( ((int_64)$13 == (int_64)*($8 + [136])) ){ goto $label$4 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$4
	$14 = *($4)
	if ( ((int_64)$14 <= (int_64)*($8 + [128])) ){ goto $label$2 }
	$15 = *(($5 + [8]))
	*(($3 = (($8 + [416]) + [8]))) = $15
	*(($4 = (($8 + [384]) + [8]))) = $15
	$15 = *($5)
	*($8 + [416]) = $15
	*($8 + [384]) = $15
	CALL $146(($8 + [368]), $0, $1, $13)
	*((($8 + [48]) + [8])) = *($4)
	*((($8 + [32]) + [8])) = *((($8 + [368]) + [8]))
	*($8 + [48]) = *($8 + [384])
	*($8 + [32]) = *($8 + [368])
	CALL $152(($8 + [400]), $0, ($8 + [48]), ($8 + [32]))
	*((($8 + [16]) + [8])) = *($3)
	*(($8 + [8])) = *((($8 + [400]) + [8]))
	*($8 + [16]) = *($8 + [416])
	*($8) = *($8 + [400])
	CALL $141($0, $1, ($8 + [16]), $8)
	$15 = CALL $37()
	*(($8 + [156])) = (int_64)0
	*(($8 + [172])) = (int_64)0
	*(($8 + [180])) = (int_64)0
	*($8 + [140]) = [0]
	*($8 + [144]) = [0]
	*($8 + [148 align=4]) = (int_64)0
	*($8 + [164 align=4]) = (int_64)0
	*($8 + [128]) = ((CASTING uint_32)(uint_64 ((int_64)$15 / (int_64)1000000)) + [60])
	*($8 + [248]) = (int_64)-6402241254016417792
	*($8 + [240]) = *($0)
	*($8 + [224]) = (int_64)-5915331450174627840
	CALL $153(($8 + [164]), ($8 + [240]), $0, ($8 + [224]), ($8 + [432]))
	*($8 + [148]) = [2]
	$15 = CALL $97($0)
	*($8 + [248]) = (int_64)0
	*($8 + [240]) = $15
	CALL $98(($8 + [128]), ($8 + [240]), *($0), [0])
	CALL $99(($8 + [128]))
	$global$0 = ($8 + [464])
	return 
	
.LABEL $label$3
	$15 = CALL $37()
	*(($8 + [156])) = (int_64)0
	*(($8 + [172])) = (int_64)0
	*(($8 + [180])) = (int_64)0
	*($8 + [140]) = [0]
	*($8 + [144]) = [0]
	*($8 + [148 align=4]) = (int_64)0
	*($8 + [164 align=4]) = (int_64)0
	*($8 + [128]) = ((CASTING uint_32)(uint_64 ((int_64)$15 / (int_64)1000000)) + [60])
	*($8 + [248]) = (int_64)-6402241254016417792
	*($8 + [240]) = *($0)
	*($8 + [224]) = (int_64)-5915331450174627840
	CALL $153(($8 + [164]), ($8 + [240]), $0, ($8 + [224]), ($8 + [432]))
	*($8 + [148]) = [2]
	$15 = CALL $97($0)
	*($8 + [248]) = (int_64)0
	*($8 + [240]) = $15
	CALL $98(($8 + [128]), ($8 + [240]), *($0), [0])
	CALL $99(($8 + [128]))
	$global$0 = ($8 + [464])
	return 
	
.LABEL $label$2
	$16 = ($5 + [8])
	$17 = *($16)
	*(($3 = (($8 + [352]) + [8]))) = $17
	*((($8 + [320]) + [8])) = $17
	$18 = *(($4 + [8]))
	$19 = *($4)
	$15 = *($5)
	*((($8 + [112]) + [8])) = $17
	*((($8 + [96]) + [8])) = $18
	*((($8 + [304]) + [8])) = $18
	*($8 + [352]) = $15
	*($8 + [320]) = $15
	*($8 + [304]) = $19
	*($8 + [96]) = $19
	*($8 + [112]) = $15
	CALL $152(($8 + [336]), $0, ($8 + [112]), ($8 + [96]))
	*((($8 + [80]) + [8])) = *($3)
	*((($8 + [64]) + [8])) = *((($8 + [336]) + [8]))
	*($8 + [80]) = *($8 + [352])
	*($8 + [64]) = *($8 + [336])
	CALL $141($0, $1, ($8 + [80]), ($8 + [64]))
	$20 = ((float_32)((float_32)((float_32)(CASTING float_32)(uint_32 $6) / (float_32)(float_32)-100) + (float_32)(float_32)1) * (float_32)(CASTING float_32)(int_64 *($5)))
	if ( ((float_32)(float_32)|$20| < (float_32)(float_32)9223372036854775808) ){ goto $label$6 }
	$19 = (int_64)-9223372036854775808
	goto $label$5 
	
.LABEL $label$6
	$19 = (Rounds 0)($20)
	
.LABEL $label$5
	$21 = *($16)
	if ( (uint_64)(((int_64)$19 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$7 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$7
	$3 = [0]
	$15 = (uint_64)$21 >> (uint_64)(int_64)8
	$17 = $15)
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$18 = (uint_64)$17 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$17 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$17 = $18
	$4 = $3
	$3 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$17 = $18
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$17 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8)
	$4 = ((int_32)$3 < (int_32)[6])
	$5 = ($3 + [1])
	$3 = $5
	if ( $4 ){ goto $label$12 }
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [9494])
	
.LABEL $label$8
	$19 = ( $19 ? (int_64)1 : ((int_64)$19 > (int_64)1) )
	if ( (uint_64)(((int_64)$19 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$13 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$13
	$3 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$17 = (uint_64)$15 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$15 & (int_64)65280) == (int_64)0) ){ goto $label$17 }
	$15 = $17
	$4 = $3
	$3 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$17
	$15 = $17
	
.LOOP $label$18:
	if ( ((int_64)((int_64)$15 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8)
	$4 = ((int_32)$3 < (int_32)[6])
	$5 = ($3 + [1])
	$3 = $5
	if ( $4 ){ goto $label$18 }
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [9494])
	
.LABEL $label$14
	$20 = ((float_32)((float_32)(CASTING float_32)(uint_32 $7) / (float_32)(float_32)100) * (float_32)(CASTING float_32)(int_64 $12))
	if ( ((float_32)(float_32)|$20| < (float_32)(float_32)9223372036854775808) ){ goto $label$20 }
	$18 = (int_64)-9223372036854775808
	goto $label$19 
	
.LABEL $label$20
	$18 = (Rounds 0)($20)
	
.LABEL $label$19
	if ( (uint_64)(((int_64)$18 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$21 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$21
	$15 = (uint_64)$10 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$17 = (uint_64)$15 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$15 & (int_64)65280) == (int_64)0) ){ goto $label$25 }
	$15 = $17
	$4 = $3
	$3 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$25
	$15 = $17
	
.LOOP $label$26:
	if ( ((int_64)((int_64)$15 & (int_64)65280) != (int_64)0) ){ goto $label$23 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8)
	$4 = ((int_32)$3 < (int_32)[6])
	$5 = ($3 + [1])
	$3 = $5
	if ( $4 ){ goto $label$26 }
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	CALL eosio_assert([0], [9494])
	
.LABEL $label$22
	$15 = CALL $37()
	*(($8 + [268])) = (int_64)0
	*(($8 + [284])) = (int_64)0
	*(($8 + [292])) = (int_64)0
	*($8 + [252]) = [0]
	*($8 + [256]) = [0]
	*($8 + [260 align=4]) = (int_64)0
	*($8 + [276 align=4]) = (int_64)0
	*($8 + [240]) = ((CASTING uint_32)(uint_64 ((int_64)$15 / (int_64)1000000)) + [60])
	*($8 + [232]) = (int_64)-6402241254016417792
	*($8 + [224]) = *($0)
	*($8 + [216]) = (int_64)-4157798687655161856
	if ( ((int_64)$13 == (int_64)$9) ){ goto $label$27 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$27
	$15 = ((int_64)$14 + (int_64)$11)
	if ( ((int_64)$15 <= (int_64)-4611686018427387904) ){ goto $label$29 }
	if ( ((int_64)$15 < (int_64)4611686018427387904) ){ goto $label$28 }
	CALL eosio_assert([0], [9576])
	goto $label$28 
	
.LABEL $label$29
	CALL eosio_assert([0], [9557])
	
.LABEL $label$28
	*((($8 + [128]) + [32])) = $9
	*(($8 + [176])) = $10
	*(($8 + [192])) = $21
	*((($8 + [128]) + [16])) = *(($2 + [8]))
	*($8 + [128]) = $1
	*($8 + [152]) = $15
	*($8 + [168]) = $18
	*($8 + [184]) = $19
	*($8 + [136]) = *($2)
	*($8 + [200]) = ($6 + [1])
	*($8 + [204]) = ($7 + [10])
	$4 = (($8 + [240]) + [40])
	$3 = *($4)
	if ( ((uint_32)$3 >= (uint_32)*(($8 + [284]))) ){ goto $label$31 }
	$15 = *($0)
	*($3 + [8]) = *($8 + [216])
	*($3) = $15
	*($3 + [16 align=4]) = (int_64)0
	*(($2 = ($3 + [24]))) = [0]
	$5 = CALL $7([16])
	*($3 + [16]) = $5
	$6 = ($5 + [16])
	*($2) = $6
	*(($5 + [8])) = *((($8 + [224]) + [8]))
	*($5) = *($8 + [224])
	*(($3 + [20])) = $6
	*($3 + [28 align=4]) = (int_64)0
	*(($3 + [36])) = [0]
	CALL $46(($3 + [28]), [80])
	$5 = *(($3 + [32]))
	$3 = *($3 + [28])
	*($8 + [436]) = $3
	*($8 + [432]) = $3
	*($8 + [440]) = $5
	*($8 + [448]) = ($8 + [432])
	*($8 + [456]) = ($8 + [128])
	CALL $154(($8 + [456]), ($8 + [448]))
	*($4) = (*($4) + [40])
	goto $label$30 
	
.LABEL $label$31
	CALL $155(($8 + [276]), ($8 + [224]), $0, ($8 + [216]), ($8 + [128]))
	
.LABEL $label$30
	*(($8 + [260])) = [2]
	$15 = CALL $97($0)
	*($8 + [136]) = (int_64)0
	*($8 + [128]) = $15
	CALL $98(($8 + [240]), ($8 + [128]), *($0), [0])
	CALL $99(($8 + [240]))
	$global$0 = ($8 + [464])
}

void .FUNC $156 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	float_32 $16
	$3 = ($global$0 - [176])
	$global$0 = $3
	CALL require_auth($1)
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	$4 = *($0)
	*($3) = $4
	*($3 + [8]) = $4
	CALL $73(($3 + [112]), $3)
	$5 = *($0 + [69])
	$6 = *($3 + [136])
	$7 = *($3 + [24])
	if ( ($7 == 0) ){ goto $label$1 }
	$8 = ($3 + [28])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$5 }
	CALL $9($10)
	
.LABEL $label$5
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$4 }
	$9 = *(($3 + [24]))
	goto $label$2 
	
.LABEL $label$3
	$9 = $7
	
.LABEL $label$2
	*($8) = $7
	CALL $9($9)
	
.LABEL $label$1
	if ( ((int_32)($6 & [255]) != (int_32)($5 & [255])) ){ goto $label$6 }
	CALL eosio_assert([0], [8480])
	
.LABEL $label$6
	if ( CALL $140($0, $1) ){ goto $label$7 }
	CALL eosio_assert([0], [8387])
	
.LABEL $label$7
	$11 = *($2)
	$12 = *($2 + [8])
	CALL $146($3, $0, $1, $12)
	if ( ((int_64)$12 == (int_64)*($3 + [8])) ){ goto $label$8 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$8
	if ( ((int_64)*($3) >= (int_64)$11) ){ goto $label$9 }
	CALL eosio_assert([0], [11280])
	
.LABEL $label$9
	CALL $157($3, $0)
	$4 = ((int_64)*($3) + (int_64)-1)
	$13 = ( $4 ? (int_64)1 : ((int_64)$4 > (int_64)1) )
	if ( (uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$10 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$10
	$9 = [0]
	$4 = (uint_64)$12 >> (uint_64)(int_64)8
	$14 = $4)
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$15 = (uint_64)$14 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$14 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$14 = $15
	$10 = $9
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$14 = $15
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$14 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8)
	$10 = ((int_32)$9 < (int_32)[6])
	$7 = ($9 + [1])
	$9 = $7
	if ( $10 ){ goto $label$15 }
	$9 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [9494])
	
.LABEL $label$11
	$16 = ((float_32)(CASTING float_32)(int_64 $11) * (float_32)(float_32)0.009999999776482582)
	if ( ((float_32)(float_32)|$16| < (float_32)(float_32)9223372036854775808) ){ goto $label$17 }
	$15 = (int_64)-9223372036854775808
	goto $label$16 
	
.LABEL $label$17
	$15 = (Rounds 0)($16)
	
.LABEL $label$16
	if ( (uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$18 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$18
	$9 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$14 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$4 = $14
	$10 = $9
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	$4 = $14
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$20 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$10 = ((int_32)$9 < (int_32)[6])
	$7 = ($9 + [1])
	$9 = $7
	if ( $10 ){ goto $label$23 }
	$9 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [9494])
	
.LABEL $label$19
	$4 = CALL $37()
	*(($3 + [140])) = (int_64)0
	*(($3 + [156])) = (int_64)0
	*(($3 + [164])) = (int_64)0
	*($3 + [124]) = [0]
	*($3 + [128]) = [0]
	*($3 + [132 align=4]) = (int_64)0
	*($3 + [148 align=4]) = (int_64)0
	*($3 + [112]) = ((CASTING uint_32)(uint_64 ((int_64)$4 / (int_64)1000000)) + [60])
	*($3 + [104]) = (int_64)-6402241254016417792
	$4 = *($0)
	*($3 + [96]) = $4
	*($3 + [88]) = $4
	*($3 + [80]) = (int_64)-4157798687655161856
	*(($3 + [32])) = $12
	*(($3 + [48])) = $12
	*(($3 + [64])) = $12
	*(($3 + [16])) = *(($2 + [8]))
	*($3) = $1
	*($3 + [24]) = (int_64)0
	*($3 + [40]) = $15
	*($3 + [56]) = $13
	*($3 + [72]) = (int_64)4294967297
	*($3 + [8]) = *($2)
	CALL $158(($3 + [148]), ($3 + [96]), ($3 + [88]), ($3 + [80]), $3)
	*($3 + [132]) = [2]
	$4 = CALL $97($0)
	*($3 + [8]) = (int_64)0
	*($3) = $4
	CALL $98(($3 + [112]), $3, *($0), [0])
	CALL $99(($3 + [112]))
	$global$0 = ($3 + [176])
}

void .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [128])
	$global$0 = $2
	$3 = [0]
	*((($2 + [88]) + [32])) = [0]
	*($2 + [104]) = (int_64)-1
	*($2 + [112]) = (int_64)0
	*($2 + [124]) = [0]
	$4 = *($1)
	*($2 + [88]) = $4
	*($2 + [96]) = $4
	*($2 + [80]) = ($2 + [88])
	*($2 + [32]) = (int_64)0
	CALL $149(($2 + [72]), ($2 + [80]), ($2 + [32]))
	$5 = *($2 + [76])
	if ( ($5 == 0) ){ goto $label$3 }
	*($0) = *($5 + [16])
	*(($0 + [8])) = *(($5 + [24]))
	$1 = *($2 + [112])
	if ( $1 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*((($2 + [32]) + [32])) = [0]
	*($2 + [48]) = (int_64)-1
	*($2 + [56]) = (int_64)0
	$4 = *($1)
	*($2 + [32]) = $4
	*($2 + [40]) = $4
	CALL $73($2, ($2 + [32]))
	*($0) = (int_64)0
	$4 = *($2 + [16])
	*($0 + [8]) = $4
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$4 = $6
	$0 = $3
	$3 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$4 = $6
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$0 = ((int_32)$3 < (int_32)[6])
	$1 = ($3 + [1])
	$3 = $1
	if ( $0 ){ goto $label$8 }
	$3 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [9494])
	
.LABEL $label$4
	$1 = *($2 + [56])
	if ( ($1 == 0) ){ goto $label$9 }
	$5 = ($2 + [60])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	CALL $9($0)
	
.LABEL $label$13
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$12 }
	$3 = *(($2 + [56]))
	goto $label$10 
	
.LABEL $label$11
	$3 = $1
	
.LABEL $label$10
	*($5) = $1
	CALL $9($3)
	
.LABEL $label$9
	$1 = *($2 + [112])
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($2 + [116])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$17 }
	CALL $9($0)
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$16 }
	$3 = *(($2 + [112]))
	goto $label$14 
	
.LABEL $label$15
	$3 = $1
	
.LABEL $label$14
	*($5) = $1
	CALL $9($3)
	
.LABEL $label$1
	$global$0 = ($2 + [128])
}

void .FUNC $154 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $5
	*($2 + [8]) = *(($4 + [16]))
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $5
	*($2 + [8]) = *(($4 + [32]))
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [40])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $5
	*($2 + [8]) = *(($4 + [48]))
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $385(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $155 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $7(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL $7([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = ($2 + [16])
	*($3) = $8
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $8
	CALL $46(($7 + [28]), [80])
	$2 = *(($7 + [32]))
	$1 = *($7 + [28])
	*($5 + [4]) = $1
	*($5) = $1
	*($5 + [8]) = $2
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$10 = ($6 + ((int_32)$9 * (int_32)[40]))
	$11 = ($7 + [40])
	CALL $154(($5 + [24]), ($5 + [16]))
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	$12 = ($2 - $8)
	$1 = [0]
	
.LOOP $label$7:
	$9 = ($8 + $1)
	*((($2 = ($7 + $1)) + [-32])) = *(($9 + [-32]))
	*(($2 + [-40])) = *(($9 + [-40]))
	*(($6 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($9 + [-24])
	*($6) = *($4)
	$6 = ($9 + [-16])
	*($3) = *($6)
	*($6) = [0]
	*(($6 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($9 + [-12])
	*($6) = *($3)
	*($4) = (int_64)0
	$9 = ($9 + [-4])
	*($2) = *($9)
	*($9) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$7 }
	$7 = ($7 + $1)
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $7
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = *(($2 + [-12]))
	if ( ($9 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $9
	CALL $9($9)
	
.LABEL $label$10
	$9 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$11
	$2 = $9
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	$global$0 = ($5 + [32])
	(unreachable)
}

void .FUNC $158 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $7(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL $7([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = ($2 + [16])
	*($3) = $8
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $8
	CALL $46(($7 + [28]), [80])
	$2 = *(($7 + [32]))
	$1 = *($7 + [28])
	*($5 + [4]) = $1
	*($5) = $1
	*($5 + [8]) = $2
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$10 = ($6 + ((int_32)$9 * (int_32)[40]))
	$11 = ($7 + [40])
	CALL $386(($5 + [24]), ($5 + [16]))
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	$12 = ($2 - $8)
	$1 = [0]
	
.LOOP $label$7:
	$9 = ($8 + $1)
	*((($2 = ($7 + $1)) + [-32])) = *(($9 + [-32]))
	*(($2 + [-40])) = *(($9 + [-40]))
	*(($6 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($9 + [-24])
	*($6) = *($4)
	$6 = ($9 + [-16])
	*($3) = *($6)
	*($6) = [0]
	*(($6 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($9 + [-12])
	*($6) = *($3)
	*($4) = (int_64)0
	$9 = ($9 + [-4])
	*($2) = *($9)
	*($9) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$7 }
	$7 = ($7 + $1)
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $7
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = *(($2 + [-12]))
	if ( ($9 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $9
	CALL $9($9)
	
.LABEL $label$10
	$9 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$11
	$2 = $9
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	$global$0 = ($5 + [32])
	(unreachable)
}

void .FUNC $159 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	$4 = ($global$0 - [208])
	$global$0 = $4
	*(($4 + [128])) = [0]
	*($4 + [112]) = (int_64)-1
	*($4 + [120]) = (int_64)0
	$5 = *($0)
	*($4 + [96]) = $5
	*($4 + [104]) = $5
	CALL $73(($4 + [64]), ($4 + [96]))
	if ( CALL has_auth($1) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	if ( CALL has_auth(*($4 + [64])) ){ goto $label$1 }
	CALL eosio_assert([0], [8521])
	
.LABEL $label$1
	if ( CALL $140($0, $1) ){ goto $label$2 }
	CALL eosio_assert([0], [8387])
	
.LABEL $label$2
	*(($4 + [200])) = [0]
	*($4 + [184]) = (int_64)-1
	*($4 + [192]) = (int_64)0
	$5 = *($0)
	*($4 + [168]) = $5
	*($4 + [176]) = $5
	CALL $73(($4 + [136]), ($4 + [168]))
	$6 = *($0 + [69])
	$7 = *($4 + [160])
	$8 = *($4 + [192])
	if ( ($8 == 0) ){ goto $label$3 }
	$9 = ($4 + [196])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$5 }
	
.LOOP $label$6:
	$10 = ($10 + [-24])
	$11 = *($10)
	*($10) = [0]
	if ( ($11 == 0) ){ goto $label$7 }
	CALL $9($11)
	
.LABEL $label$7
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$6 }
	$10 = *(($4 + [192]))
	goto $label$4 
	
.LABEL $label$5
	$10 = $8
	
.LABEL $label$4
	*($9) = $8
	CALL $9($10)
	
.LABEL $label$3
	if ( ((int_32)($7 & [255]) != (int_32)($6 & [255])) ){ goto $label$8 }
	CALL eosio_assert([0], [8480])
	
.LABEL $label$8
	$12 = *(($2 + [8]))
	*((($4 + [48]) + [8])) = $12
	$13 = *(($3 + [8]))
	*((($4 + [32]) + [8])) = $13
	$5 = *($3)
	$14 = *($2)
	*((($4 + [16]) + [8])) = $12
	*(($4 + [8])) = $13
	*($4 + [48]) = $14
	*($4 + [32]) = $5
	*($4 + [16]) = $14
	*($4) = $5
	CALL $160($0, $1, ($4 + [16]), $4)
	CALL $142($0)
	$8 = *($4 + [120])
	if ( ($8 == 0) ){ goto $label$9 }
	$0 = ($4 + [124])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$11 }
	
.LOOP $label$12:
	$10 = ($10 + [-24])
	$11 = *($10)
	*($10) = [0]
	if ( ($11 == 0) ){ goto $label$13 }
	CALL $9($11)
	
.LABEL $label$13
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$12 }
	$10 = *(($4 + [120]))
	goto $label$10 
	
.LABEL $label$11
	$10 = $8
	
.LABEL $label$10
	*($0) = $8
	CALL $9($10)
	
.LABEL $label$9
	$global$0 = ($4 + [208])
}

int_32 .FUNC $273 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$4 = ($1 + [8])
	CALL memcpy($3, $1, [8])
	$5 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $5
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$5 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $272 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $106 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = ($global$0 - [176])
	$global$0 = $1
	*((($1 + [128]) + [32])) = [0]
	*($1 + [144]) = (int_64)-1
	*($1 + [152]) = (int_64)0
	$2 = *($0)
	*($1 + [128]) = $2
	*($1 + [136]) = $2
	CALL $73(($1 + [96]), ($1 + [128]))
	*((($1 + [56]) + [32])) = [0]
	*($1 + [72]) = (int_64)-1
	*($1 + [80]) = (int_64)0
	$2 = *($0)
	*($1 + [56]) = $2
	*($1 + [64]) = $2
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)-4992121829547704320, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$4 = (($1 + [24]) | [1])
	$3 = CALL $100(($1 + [56]), $3)
	
.LOOP $label$3:
	if ( ((int_64)*($3 + [8]) < (int_64)1) ){ goto $label$4 }
	$5 = *($3)
	$2 = *($3 + [8])
	*(($6 = (($1 + [24]) + [8]))) = [0]
	*(($7 = (($1 + [40]) + [8]))) = *(($3 + [16]))
	*($1 + [40]) = $2
	*($1 + [24]) = (int_64)0
	$2 = *($1 + [96])
	$8 = CALL $16([10550])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$7 }
	*($1 + [24]) = ($8 << [1])
	$9 = $4
	if ( $8 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$10 = (($8 + [16]) & [-16])
	$9 = CALL $7($10)
	*($6) = $9
	*($1 + [24]) = ($10 | [1])
	*($1 + [28]) = $8
	
.LABEL $label$6
	CALL memcpy($9, [10550], $8)
	
.LABEL $label$5
	*(($9 + $8)) = [0]
	*((($1 + [8]) + [8])) = *($7)
	*($1 + [8]) = *($1 + [40])
	CALL $78($0, $2, $2, $5, ($1 + [8]), ($1 + [24]))
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*($6))
	
.LABEL $label$8
	$8 = [0]
	$9 = CALL db_next_i64(*($3 + [28]), ($1 + [168]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$9 }
	$8 = CALL $100(($1 + [56]), $9)
	
.LABEL $label$9
	CALL $107(($1 + [56]), $3)
	$3 = $8
	
.LABEL $label$4
	if ( $3 ){ goto $label$3 }
	
.LABEL $label$2
	$9 = *($1 + [80])
	if ( ($9 == 0) ){ goto $label$10 }
	$6 = ($1 + [84])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$12 }
	
.LOOP $label$13:
	$3 = ($3 + [-24])
	$8 = *($3)
	*($3) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$13 }
	$3 = *(($1 + [80]))
	goto $label$11 
	
.LABEL $label$12
	$3 = $9
	
.LABEL $label$11
	*($6) = $9
	CALL $9($3)
	
.LABEL $label$10
	$9 = *($1 + [152])
	if ( ($9 == 0) ){ goto $label$15 }
	$6 = ($1 + [156])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$3 = ($3 + [-24])
	$8 = *($3)
	*($3) = [0]
	if ( ($8 == 0) ){ goto $label$19 }
	CALL $9($8)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$18 }
	$3 = *(($1 + [152]))
	goto $label$16 
	
.LABEL $label$17
	$3 = $9
	
.LABEL $label$16
	*($6) = $9
	CALL $9($3)
	
.LABEL $label$15
	$global$0 = ($1 + [176])
	return (unreachable)
	
.LABEL $label$1
	CALL $25(($1 + [24]))
}

void .FUNC $344 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [68]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [76])))
	
.LABEL $label$11
	if ( ((*($1 + [56]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($1 + [64])))
	
.LABEL $label$12
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $9($2)
	
.LABEL $label$13
	(unreachable)
}

int_32 .FUNC $228 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $229($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $28($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $28($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $25($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $9($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $229 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10867])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $46($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $89 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($1 + [24])) = *(($3 + [24]))
	*(($6 = ($1 + [16]))) = *(($3 + [16]))
	*(($7 = ($1 + [8]))) = *(($3 + [8]))
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = $4
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $7
	*($5 + [32]) = $1
	*($5 + [40]) = $6
	CALL $381(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $3, [32])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4992088121770901504) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)-4992088121770901503
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

int_32 .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([48])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	CALL $383(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	*($3 + [32]) = (int_64)-4992088121770901504
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)-4992088121770901504
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $382(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $224 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*(($4 + [16])) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*(($4 + [32])) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [40])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	$5 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	$5 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*(($4 + [48])) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $389(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $225 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [16])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [24])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $226 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL $42($2)
	if ( (*($2 + [56]) & [1]) ){ goto $label$7 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

void .FUNC $227 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [180]) = $2
	*($3 + [176]) = $2
	$5 = ($2 + $4)
	*($3 + [184]) = $5
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$5 = *(($3 + [184]))
	$2 = *($3 + [180])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [180]) = $2
	*($3 + [160]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	$2 = *($3 + [180])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $2, [8])
	*($3 + [180]) = ($2 + [8])
	*($3 + [152]) = [0]
	*($3 + [144]) = (int_64)0
	CALL $228(($3 + [176]), ($3 + [144]))
	$2 = *($3 + [180])
	if ( ((int_32)*((($3 + [176]) + [8])) != (int_32)$2) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	$2 = *($3 + [180])
	
.LABEL $label$7
	CALL memcpy(($3 + [143]), $2, [1])
	*($3 + [180]) = (*($3 + [180]) + [1])
	$2 = *((($3 + [176]) + [8]))
	*((($3 + [40]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$6 = *($3 + [176])
	*($3 + [8]) = $6
	*($3 + [40]) = $6
	$4 = CALL $26(($3 + [24]), ($3 + [144]))
	$2 = CALL $216(($3 + [56]), $0, $1, ($3 + [8]))
	CALL $50($2, *($3 + [168]), *($3 + [160]), $4, *($3 + [143]))
	if ( (*($4) & [1]) ){ goto $label$14 }
	if ( (*($2 + [56]) & [1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $9(*($4 + [8]))
	if ( ((*($2 + [56]) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $9(*(($2 + [64])))
	$4 = [1]
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$4 = [1]
	if ( (*($2 + [28]) & [1]) ){ goto $label$10 }
	
.LABEL $label$11
	if ( (*($3 + [144]) & $4) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*(($2 + [36])))
	if ( ((*($3 + [144]) & $4) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [152])))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [192])
}

void .FUNC $220 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = ($0 + [24])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$1 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($4 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$1 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $1, [8])
	*(($0 + [32])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $221 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $222 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10867])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [3])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $257($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [3]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [8])
	$2 = (*($6) + [8])
	*($6) = $2
	$7 = ($7 + [8])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $80 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [76])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9594])
	$2 = *(($0 + [4]))
	$3 = *($2 + [76])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-4421661421696319488, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [76]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$7 }
	$2 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10423])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $69($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)-4421661421696319488, $6))
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$5
	*($4 + [76]) = $5
	
.LABEL $label$4
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $389 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [56])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*(($3 + [64])) = *($2 + [8])
	*($6) = (*($6) + [8])
	$4 = *($0)
	$0 = ($4 + [72])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$6 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $6, [4])
	*(($5 = ($5 + [4]))) = (*($5) + [4])
	$4 = ($4 + [76])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$6 = *(($5 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $6, [4])
	*(($5 = ($5 + [4]))) = (*($5) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $388 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [40])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*(($3 + [48])) = *($2 + [8])
	*($6) = (*($6) + [8])
	$0 = *($0)
	$4 = ($0 + [56])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$6 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$4 = *($6)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*(($0 + [64])) = *($2 + [8])
	*($6) = (*($6) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $383 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$4 = *($1)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $382 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $381 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $5, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$4 = *($1)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $380 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [8]) = *(*($0 + [8]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $387 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [56])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($6, $4, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = *(($3 + [64]))
	if ( ((int_32)(*(($5 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [8])
	*($6) = (*($6) + [8])
	$4 = *($0)
	$0 = ($4 + [72])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$6 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $0, [4])
	*(($5 = ($5 + [4]))) = (*($5) + [4])
	$4 = ($4 + [76])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$6 = *(($5 + [4]))
	
.LABEL $label$4
	CALL memcpy($6, $4, [4])
	*(($5 = ($5 + [4]))) = (*($5) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $52 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4420681754168262656, (int_64)-4420681754168262656)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $56($0, $4)
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*($3) = $1
	CALL $57($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $58($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $385 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [56])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($6, $4, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = *(($3 + [64]))
	if ( ((int_32)(*(($5 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [8])
	*($6) = (*($6) + [8])
	$4 = *($0)
	$0 = ($4 + [72])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$6 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $0, [4])
	*(($5 = ($5 + [4]))) = (*($5) + [4])
	$4 = ($4 + [76])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$6 = *(($5 + [4]))
	
.LABEL $label$4
	CALL memcpy($6, $4, [4])
	*(($5 = ($5 + [4]))) = (*($5) + [4])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $384 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [124]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11184])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-6497942611737529472)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [11130])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11130])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $92(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $72 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [80])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($1 + [72])) = [0]
	*($1 + [56]) = (int_64)-1
	*($1 + [64]) = (int_64)0
	$2 = *($0)
	*($1 + [40]) = $2
	*($1 + [48]) = $2
	CALL $73(($1 + [8]), ($1 + [40]))
	*($1 + [32]) = *($0 + [69])
	CALL $51(($1 + [40]), ($1 + [8]), *($0))
	$3 = *($1 + [64])
	if ( ($3 == 0) ){ goto $label$1 }
	$4 = ($1 + [68])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($1 + [64]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $3
	
.LABEL $label$2
	*($4) = $3
	CALL $9($0)
	
.LABEL $label$1
	$global$0 = ($1 + [80])
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [32]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)4982871467403247616, (int_64)4982871467403247616)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $53($1, $2)
	if ( ((int_32)*($2 + [32]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [10423])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	CALL eosio_assert([0], [10525])
	
.LABEL $label$1
	*($0) = *($2)
	*(($0 + [24])) = *(($2 + [24]))
	*(($0 + [16])) = *(($2 + [16]))
	*(($0 + [8])) = *(($2 + [8]))
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([88])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [68]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [64])
	CALL $296(($3 + [40]), ($3 + [32]))
	*($5 + [72]) = $1
	*($5 + [76 align=4]) = (int_64)-1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $292(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [96]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4157502641443700736, (int_64)-4157502641443700736)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $62($1, $2)
	if ( ((int_32)*($2 + [96]) == (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	CALL memcpy($0, $2, [96])
	return 
	
.LABEL $label$1
	CALL eosio_assert([0], [10525])
	CALL memcpy($0, [0], [96])
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$8
	$8 = ($5 + [16])
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [8])) = *($3 + [24])
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$9
	CALL memcpy($8, $7, [8])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($3 + [24]) = $9)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $190(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $2($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $9($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $77 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [144])
	$global$0 = $4
	*($0) = (int_64)0
	*($0 + [8]) = $3
	*($4 + [128]) = $2
	$2 = (uint_64)$3 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$2 = $6
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	$2 = $6
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $7 ){ goto $label$11 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$8 }
	
.LABEL $label$9
	$5 = [1]
	if ( (*($1 + [56]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [9494])
	$5 = [1]
	if ( ((*($1 + [56]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$9 = *(($1 + [64]))
	$5 = CALL $16($9)
	if ( ($5 <= [8]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$9 = (($1 + [56]) + $5)
	$5 = CALL $16($9)
	if ( ((uint_32)$5 >= (uint_32)[8]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( $5 ){ goto $label$2 }
	$2 = (int_64)0
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9347])
	
.LABEL $label$2
	$2 = (int_64)0
	
.LOOP $label$12:
	$8 = (($9 + $5) + [-1])
	$7 = *($8)
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$13 }
	CALL eosio_assert([0], [9392])
	$7 = *($8)
	
.LABEL $label$13
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$1
	$6 = *($1 + [68])
	*((($4 + [88]) + [32])) = [0]
	*($4 + [104]) = (int_64)-1
	*($4 + [112]) = (int_64)0
	$10 = *($1)
	*($4 + [88]) = $10
	*($4 + [96]) = $10
	CALL $73(($4 + [56]), ($4 + [88]))
	if ( ((int_64)((int_64)$6 | (int_64)((int_64)$2 << (int_64)8)) != (int_64)$3) ){ goto $label$24 }
	*((($4 + [16]) + [32])) = [0]
	*($4 + [32]) = (int_64)-1
	*($4 + [40]) = (int_64)0
	*($4 + [52]) = [0]
	$2 = *($1)
	*($4 + [16]) = $2
	*($4 + [24]) = $2
	*($4 + [8]) = ($4 + [16])
	CALL $79(($4 + [136]), ($4 + [8]), ($4 + [128]))
	$5 = *($4 + [140])
	if ( ($5 == 0) ){ goto $label$23 }
	if ( ((int_64)*($4 + [128]) != (int_64)*($5 + [8])) ){ goto $label$23 }
	$2 = *($4 + [136])
	*($4) = $2
	$5 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( ($5) == 0) ){ goto $label$22 }
	$2 = (int_64)0
	
.LOOP $label$25:
	if ( ((int_64)*($5 + [8]) != (int_64)*($4 + [128])) ){ goto $label$22 }
	if ( ((int_64)*(($5 + [40])) != (int_64)$3) ){ goto $label$27 }
	$2 = ((int_64)$2 + (int_64)*($5 + [32]))
	*($0) = $2
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$26 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$27 }
	CALL eosio_assert([0], [9576])
	
.LABEL $label$27
	CALL $80($4)
	$5 = *($4 + [4])
	if ( $5 ){ goto $label$25 }
	goto $label$22 
	
.LABEL $label$26
	CALL eosio_assert([0], [9557])
	CALL $80($4)
	$5 = *($4 + [4])
	if ( $5 ){ goto $label$25 }
	goto $label$22 
	
.LABEL $label$24
	if ( ((int_64)*($4 + [72]) != (int_64)$3) ){ goto $label$17 }
	*(($4 + [48])) = [0]
	*($4 + [32]) = (int_64)-1
	*($4 + [40]) = (int_64)0
	*($4 + [52]) = [0]
	$2 = *($1)
	*($4 + [16]) = $2
	*($4 + [24]) = $2
	*($4 + [8]) = ($4 + [16])
	CALL $81(($4 + [136]), ($4 + [8]), ($4 + [128]))
	$5 = *($4 + [140])
	if ( ($5 == 0) ){ goto $label$21 }
	if ( ((int_64)*($4 + [128]) != (int_64)*($5 + [8])) ){ goto $label$21 }
	$2 = *($4 + [136])
	*($4) = $2
	$5 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( ($5) == 0) ){ goto $label$20 }
	$2 = (int_64)0
	
.LOOP $label$28:
	if ( ((int_64)*($5 + [8]) != (int_64)*($4 + [128])) ){ goto $label$20 }
	if ( ((int_64)*(($5 + [56])) != (int_64)$3) ){ goto $label$30 }
	$2 = ((int_64)$2 + (int_64)*($5 + [48]))
	*($0) = $2
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$29 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$30 }
	CALL eosio_assert([0], [9576])
	
.LABEL $label$30
	CALL $82($4)
	$5 = *($4 + [4])
	if ( $5 ){ goto $label$28 }
	goto $label$20 
	
.LABEL $label$29
	CALL eosio_assert([0], [9557])
	CALL $82($4)
	$5 = *($4 + [4])
	if ( $5 ){ goto $label$28 }
	goto $label$20 
	
.LABEL $label$23
	*($4 + [4]) = [0]
	*($4) = ($4 + [8])
	
.LABEL $label$22
	$8 = *($4 + [40])
	if ( ($8 == 0) ){ goto $label$17 }
	$9 = ($4 + [44])
	$5 = *($9)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$19 }
	
.LOOP $label$31:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$32 }
	CALL $9($7)
	
.LABEL $label$32
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$31 }
	$5 = *(($4 + [40]))
	goto $label$18 
	
.LABEL $label$21
	*($4 + [4]) = [0]
	*($4) = ($4 + [8])
	
.LABEL $label$20
	$8 = *($4 + [40])
	if ( ($8 == 0) ){ goto $label$17 }
	$9 = ($4 + [44])
	$5 = *($9)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$33:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$34 }
	CALL $9($7)
	
.LABEL $label$34
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$33 }
	$5 = *(($4 + [40]))
	*($9) = $8
	CALL $9($5)
	$8 = *($4 + [112])
	if ( $8 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$19
	$5 = $8
	
.LABEL $label$18
	*($9) = $8
	CALL $9($5)
	
.LABEL $label$17
	$8 = *($4 + [112])
	if ( ($8 == 0) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$16
	*($9) = $8
	CALL $9($8)
	$8 = *($4 + [112])
	if ( ($8 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$9 = ($4 + [116])
	$5 = *($9)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$36 }
	
.LOOP $label$37:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$38 }
	CALL $9($7)
	
.LABEL $label$38
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$37 }
	$5 = *(($4 + [112]))
	goto $label$35 
	
.LABEL $label$36
	$5 = $8
	
.LABEL $label$35
	*($9) = $8
	CALL $9($5)
	
.LABEL $label$14
	$global$0 = ($4 + [144])
}

void .FUNC $74 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [80])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($1 + [72])) = [0]
	*($1 + [56]) = (int_64)-1
	*($1 + [64]) = (int_64)0
	$2 = *($0)
	*($1 + [40]) = $2
	*($1 + [48]) = $2
	CALL $73(($1 + [8]), ($1 + [40]))
	*($1 + [32]) = *($0 + [70])
	CALL $51(($1 + [40]), ($1 + [8]), *($0))
	$3 = *($1 + [64])
	if ( ($3 == 0) ){ goto $label$1 }
	$4 = ($1 + [68])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($1 + [64]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $3
	
.LABEL $label$2
	*($4) = $3
	CALL $9($0)
	
.LABEL $label$1
	$global$0 = ($1 + [80])
}

void .FUNC $75 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [224])
	$global$0 = $2
	*(($2 + [216])) = [0]
	*($2 + [200]) = (int_64)-1
	*($2 + [208]) = (int_64)0
	$3 = *($0)
	*($2 + [184]) = $3
	*($2 + [192]) = $3
	CALL $73(($2 + [112]), ($2 + [184]))
	$4 = *($0 + [69])
	$5 = *($2 + [136])
	$6 = *($2 + [208])
	if ( ($6 == 0) ){ goto $label$1 }
	$7 = ($2 + [212])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$4:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$5 }
	CALL $9($9)
	
.LABEL $label$5
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	$8 = *(($2 + [208]))
	goto $label$2 
	
.LABEL $label$3
	$8 = $6
	
.LABEL $label$2
	*($7) = $6
	CALL $9($8)
	
.LABEL $label$1
	if ( ((int_32)($5 & [255]) != (int_32)($4 & [255])) ){ goto $label$6 }
	CALL eosio_assert([0], [8480])
	
.LABEL $label$6
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$7 }
	if ( CALL has_auth($1) ){ goto $label$7 }
	CALL eosio_assert([0], [8521])
	
.LABEL $label$7
	if ( (*($0 + [56]) & [1]) ){ goto $label$12 }
	$4 = (($0 + [56]) + [1])
	$8 = CALL $16($4)
	if ( ((uint_32)$8 >= (uint_32)[8]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$4 = *(($0 + [64]))
	$8 = CALL $16($4)
	if ( ($8 <= [8]) ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [9347])
	goto $label$9 
	
.LABEL $label$10
	if ( $8 ){ goto $label$9 }
	$3 = (int_64)0
	goto $label$8 
	
.LABEL $label$9
	$3 = (int_64)0
	
.LOOP $label$13:
	$6 = (($4 + $8) + [-1])
	$9 = *($6)
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$14 }
	CALL eosio_assert([0], [9392])
	$9 = *($6)
	
.LABEL $label$14
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$13 }
	
.LABEL $label$8
	$10 = *($0 + [68])
	*((($2 + [184]) + [32])) = [0]
	*($2 + [200]) = (int_64)-1
	*($2 + [208]) = (int_64)0
	$11 = *($0)
	*($2 + [184]) = $11
	*($2 + [192]) = $11
	CALL $73(($2 + [152]), ($2 + [184]))
	*((($2 + [112]) + [32])) = [0]
	*($2 + [128]) = (int_64)-1
	*($2 + [136]) = (int_64)0
	$11 = *($0)
	*($2 + [112]) = $11
	*($2 + [120]) = $1
	$8 = CALL db_find_i64($11, $1, (int_64)4152997948076064768, ((int_64)$3 & (int_64)72057594037927935))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$17 }
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)$10)
	$8 = CALL $76(($2 + [112]), $8)
	if ( ((int_32)*($8 + [24]) == (int_32)($2 + [112])) ){ goto $label$18 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$18
	CALL $77(($2 + [96]), $0, $1, $3)
	$3 = *($8)
	$11 = *($8 + [8])
	if ( ((int_64)*($2 + [104]) == (int_64)$11) ){ goto $label$19 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$19
	$3 = (int_64)
	if ( ((int_64)$3($3 - *($2 + [96]))) <= (int_64)-4611686018427387904) ){ goto $label$22 }
	if ( ((int_64)$3 >= (int_64)4611686018427387904) ){ goto $label$21 }
	if ( ((int_64)$3 >= (int_64)1) ){ goto $label$20 }
	goto $label$17 
	
.LABEL $label$22
	CALL eosio_assert([0], [10380])
	goto $label$17 
	
.LABEL $label$21
	CALL eosio_assert([0], [10402])
	
.LABEL $label$20
	*(($2 + [72])) = [0]
	*($2 + [80]) = $3
	*($2 + [88]) = $11
	*($2 + [64]) = (int_64)0
	$3 = *($8 + [16])
	$8 = CALL $16([8540])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$25 }
	*($2 + [64]) = ($8 << [1])
	$9 = (($2 + [64]) | [1])
	if ( $8 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$6 = (($8 + [16]) & [-16])
	$9 = CALL $7($6)
	*($2 + [64]) = ($6 | [1])
	*($2 + [72]) = $9
	*($2 + [68]) = $8
	
.LABEL $label$24
	CALL memcpy($9, [8540], $8)
	
.LABEL $label$23
	*(($9 + $8)) = [0]
	*((($2 + [16]) + [8])) = *((($2 + [80]) + [8]))
	*($2 + [16]) = *($2 + [80])
	CALL $78($0, $3, $1, $1, ($2 + [16]), ($2 + [64]))
	if ( ((*($2 + [64]) & [1]) == 0) ){ goto $label$17 }
	CALL $9(*($2 + [72]))
	
.LABEL $label$17
	$3 = (uint_64)*($2 + [168]) >> (uint_64)(int_64)8)
	$9 = *(($2 + [140]))
	$4 = *(($2 + [136]))
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$30 }
	
.LOOP $label$32:
	$8 = ($9 + [-24])
	$6 = *($8)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$3) ){ goto $label$31 }
	$9 = $8
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$32 }
	goto $label$30 
	
.LABEL $label$31
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$30 }
	if ( ((int_32)*($6 + [24]) == (int_32)($2 + [112])) ){ goto $label$29 }
	CALL eosio_assert([0], [10423])
	goto $label$29 
	
.LABEL $label$30
	$8 = CALL db_find_i64(*($2 + [112]), *(($2 + [120])), (int_64)4152997948076064768, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$28 }
	$6 = CALL $76(($2 + [112]), $8)
	if ( ((int_32)*($6 + [24]) == (int_32)($2 + [112])) ){ goto $label$29 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$29
	CALL $77(($2 + [96]), $0, $1, *(($2 + [168])))
	$3 = *($6)
	$11 = *($6 + [8])
	if ( ((int_64)*($2 + [104]) == (int_64)$11) ){ goto $label$33 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$33
	$3 = (int_64)
	if ( ((int_64)$3($3 - *($2 + [96]))) <= (int_64)-4611686018427387904) ){ goto $label$36 }
	if ( ((int_64)$3 >= (int_64)4611686018427387904) ){ goto $label$35 }
	if ( ((int_64)$3 >= (int_64)1) ){ goto $label$34 }
	goto $label$28 
	
.LABEL $label$36
	CALL eosio_assert([0], [10380])
	$6 = *($2 + [136])
	if ( $6 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$35
	CALL eosio_assert([0], [10402])
	
.LABEL $label$34
	*(($2 + [40])) = [0]
	*($2 + [48]) = $3
	*($2 + [56]) = $11
	*($2 + [32]) = (int_64)0
	$3 = *($6 + [16])
	$8 = CALL $16([8540])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$39 }
	*($2 + [32]) = ($8 << [1])
	$9 = (($2 + [32]) | [1])
	if ( $8 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	$6 = (($8 + [16]) & [-16])
	$9 = CALL $7($6)
	*($2 + [32]) = ($6 | [1])
	*($2 + [40]) = $9
	*($2 + [36]) = $8
	
.LABEL $label$38
	CALL memcpy($9, [8540], $8)
	
.LABEL $label$37
	*(($9 + $8)) = [0]
	*(($2 + [8])) = *((($2 + [48]) + [8]))
	*($2) = *($2 + [48])
	CALL $78($0, $3, $1, $1, $2, ($2 + [32]))
	if ( ((*($2 + [32]) & [1]) == 0) ){ goto $label$28 }
	CALL $9(*($2 + [40]))
	
.LABEL $label$28
	$6 = *($2 + [136])
	if ( ($6 == 0) ){ goto $label$26 }
	
.LABEL $label$27
	$4 = ($2 + [140])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$41 }
	
.LOOP $label$42:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$43 }
	CALL $9($9)
	
.LABEL $label$43
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$42 }
	$8 = *(($2 + [136]))
	goto $label$40 
	
.LABEL $label$41
	$8 = $6
	
.LABEL $label$40
	*($4) = $6
	CALL $9($8)
	
.LABEL $label$26
	$6 = *($2 + [208])
	if ( ($6 == 0) ){ goto $label$44 }
	$4 = ($2 + [212])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$46 }
	
.LOOP $label$47:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$48 }
	CALL $9($9)
	
.LABEL $label$48
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$47 }
	$8 = *(($2 + [208]))
	goto $label$45 
	
.LABEL $label$46
	$8 = $6
	
.LABEL $label$45
	*($4) = $6
	CALL $9($8)
	
.LABEL $label$44
	$global$0 = ($2 + [224])
	return (unreachable)
	
.LABEL $label$16
	CALL $25(($2 + [64]))
	
.LABEL $label$15
	CALL $25(($2 + [32]))
	(unreachable)
}

void .FUNC $78 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$6 = ($global$0 - [112])
	$global$0 = $6
	if ( ((int_64)*($4) < (int_64)1) ){ goto $label$1 }
	$7 = [0]
	*(($6 + [96])) = [0]
	*($6 + [80]) = (int_64)-1
	*($6 + [88]) = (int_64)0
	$8 = *($0)
	*($6 + [64]) = $8
	$9 = *($4 + [8])
	*($6 + [72]) = $2
	$10 = CALL db_find_i64($8, $2, (int_64)4152997948076064768, (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_32)$10) <= (int_32)[-1]) ){ goto $label$3 }
	$7 = CALL $76(($6 + [64]), $10)
	if ( ((int_32)*($7 + [24]) == (int_32)($6 + [64])) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [9624])
	
.LABEL $label$2
	if ( ((int_64)*($7 + [8]) == (int_64)*(($4 + [8]))) ){ goto $label$4 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$4
	if ( ((int_64)*($7) >= (int_64)*($4)) ){ goto $label$5 }
	CALL eosio_assert([0], [9676])
	
.LABEL $label$5
	*($6 + [63]) = [0]
	$8 = *($0)
	*($6 + [104]) = $4
	*($6 + [108]) = ($6 + [63])
	if ( $7 ){ goto $label$6 }
	CALL eosio_assert([0], [9698])
	
.LABEL $label$6
	CALL $83(($6 + [64]), $7, $8, ($6 + [104]))
	CALL require_recipient($2)
	*(($10 = (($6 + [40]) + [8]))) = *(($4 + [8]))
	*($6 + [40]) = *($4)
	$2 = *($0)
	$4 = CALL $26(($6 + [24]), $5)
	*((($6 + [8]) + [8])) = *($10)
	*($6 + [8]) = *($6 + [40])
	CALL $84($0, $1, $2, $3, ($6 + [8]), $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*($4 + [8]))
	
.LABEL $label$7
	if ( (*($6 + [63]) == 0) ){ goto $label$8 }
	if ( $7 ){ goto $label$9 }
	CALL eosio_assert([0], [10127])
	CALL eosio_assert([0], [9594])
	
.LABEL $label$9
	$4 = CALL db_next_i64(*($7 + [28]), ($6 + [104]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$10 }
	CALL $76(($6 + [64]), $4)
	
.LABEL $label$10
	CALL $85(($6 + [64]), $7)
	
.LABEL $label$8
	$0 = *($6 + [88])
	if ( ($0 == 0) ){ goto $label$1 }
	$5 = ($6 + [92])
	$4 = *($5)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$12 }
	
.LOOP $label$13:
	$4 = ($4 + [-24])
	$7 = *($4)
	*($4) = [0]
	if ( ($7 == 0) ){ goto $label$14 }
	CALL $9($7)
	
.LABEL $label$14
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$13 }
	$4 = *(($6 + [88]))
	goto $label$11 
	
.LABEL $label$12
	$4 = $0
	
.LABEL $label$11
	*($5) = $0
	CALL $9($4)
	
.LABEL $label$1
	$global$0 = ($6 + [112])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-4421661421696319488, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $69($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)-4421661421696319488, $6))
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*($4 + [76]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $259 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [120])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [120])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10871])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy(($3 + [112]), $5, [8])
	*(($3 + [8])) = $6
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $6
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	$1 = *($3 + [112])
	$0 = *($3 + [120])
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$7 }
	if ( CALL has_auth(*($2)) ){ goto $label$7 }
	CALL eosio_assert([0], [8521])
	
.LABEL $label$7
	if ( ((uint_64)$0 > (uint_64)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	CALL $192($2, $0)
	$0 = ((int_64)$0 + (int_64)1)
	if ( ((uint_64)$0 <= (uint_64)$1) ){ goto $label$9 }
	
.LABEL $label$8
	if ( (*($2 + [56]) & [1]) ){ goto $label$12 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [128])
	return 
	
.LABEL $label$10
	$global$0 = ($3 + [128])
}

void .FUNC $258 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [120])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [120])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10871])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $216(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $192($2, *($3 + [120]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [128])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [128])
}

void .FUNC $312 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [64])
	$global$0 = $1
	CALL prints([11944])
	if ( CALL has_auth(*($0)) ){ goto $label$2 }
	$2 = [0]
	*(($1 + [56])) = [0]
	*($1 + [40]) = (int_64)-1
	$3 = *($0)
	*($1 + [24]) = $3
	*($1 + [32]) = $3
	*($1 + [48]) = (int_64)0
	$0 = CALL db_lowerbound_i64($3, $3, (int_64)-4352391049156317184, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $325(($1 + [24]), $0)
	
.LOOP $label$4:
	$2 = CALL has_auth(*($0))
	$0 = CALL db_next_i64(*($0 + [12]), ($1 + [8]))
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$3 }
	$0 = CALL $325(($1 + [24]), $0)
	if ( ($2 == 0) ){ goto $label$4 }
	
.LABEL $label$3
	CALL $36(($1 + [8]), $2)
	CALL prints([11968])
	$0 = *($1 + [8])
	$4 = ($0 & [1])
	CALL prints_l(( *($1 + [16]) ? (($1 + [8]) | [1]) : $4 ), ( *($1 + [12]) ? uint_32($0 >> [1]) : $4 ))
	CALL prints([9301])
	if ( (*($1 + [8]) & [1]) ){ goto $label$7 }
	if ( ($2 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($1 + [16])))
	if ( $2 ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [11991])
	$4 = *($1 + [48])
	if ( ($4 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$4 = *($1 + [48])
	if ( $4 ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($1 + [64])
	return 
	
.LABEL $label$1
	$5 = ($1 + [52])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($1 + [48]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($5) = $4
	CALL $9($0)
	$global$0 = ($1 + [64])
}

void .FUNC $313 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	$2 = ($global$0 - [176])
	$global$0 = $2
	CALL prints([12041])
	CALL prints([12059])
	CALL $312($0)
	if ( CALL is_account(*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [12081])
	
.LABEL $label$1
	$3 = *($0)
	*(($2 + [16])) = $3
	*(($2 + [24])) = (int_64)-1
	*(($2 + [32])) = (int_64)0
	*(($2 + [40])) = [0]
	*(($2 + [56])) = $3
	*(($2 + [64])) = (int_64)-1
	*(($2 + [72])) = (int_64)0
	*(($2 + [80])) = (int_64)0
	*(($2 + [88])) = [0]
	*(($2 + [104])) = $3
	*(($2 + [112])) = (int_64)-1
	*(($2 + [120])) = [0]
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [48]) = $3
	*($2 + [96]) = $3
	*(($2 + [132])) = [0]
	*(($2 + [124])) = (int_64)0
	*(($2 + [144])) = $3
	*(($2 + [152])) = (int_64)-1
	*(($2 + [160])) = (int_64)0
	*(($2 + [168])) = [0]
	*(($2 + [172])) = [0]
	*($2 + [136]) = $3
	if ( CALL $316($2, $1) ){ goto $label$2 }
	if ( CALL $144($2, $1) ){ goto $label$2 }
	CALL eosio_assert([0], [12117])
	
.LABEL $label$2
	CALL $145($2)
	$global$0 = ($2 + [176])
}

void .FUNC $314 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$global$0 = $2
	if ( CALL has_auth(*($1)) ){ goto $label$1 }
	if ( CALL has_auth(*($1)) ){ goto $label$1 }
	$1 = [0]
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($3, $3, (int_64)-4352391049156317184, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$1 = CALL $325($2, $0)
	
.LABEL $label$2
	
.LOOP $label$5:
	if ( ($1 == 0) ){ goto $label$4 }
	$0 = CALL has_auth(*($1))
	$4 = *($1 + [12])
	$1 = [0]
	$4 = CALL db_next_i64($4, ($2 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	$1 = CALL $325($2, $4)
	
.LABEL $label$6
	if ( ($0 == 0) ){ goto $label$5 }
	$4 = *($2 + [24])
	if ( $4 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert([0], [12220])
	$4 = *($2 + [24])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$3
	$5 = ($2 + [28])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $9($0)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$9 }
	$1 = *(($2 + [24]))
	goto $label$7 
	
.LABEL $label$8
	$1 = $4
	
.LABEL $label$7
	*($5) = $4
	CALL $9($1)
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$1
	$global$0 = ($2 + [48])
}

void .FUNC $315 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [336])
	$global$0 = $2
	CALL $309($0, $1, $1)
	CALL require_auth(*($1))
	*(($2 + [80])) = (int_64)-1
	*(($2 + [88])) = (int_64)0
	$3 = [0]
	*(($2 + [96])) = [0]
	*(($2 + [100])) = [0]
	*(($2 + [120])) = (int_64)-1
	*(($2 + [128])) = (int_64)0
	*(($2 + [136])) = [0]
	*(($2 + [140])) = [0]
	$4 = *($0)
	*(($2 + [72])) = $4
	*(($2 + [112])) = $4
	*($2 + [48]) = [1]
	*($2 + [56]) = (int_64)8238557860461690880
	*($2 + [40]) = $4
	*($2 + [64]) = $4
	*($2 + [104]) = $4
	*($2 + [144]) = $4
	*(($2 + [160])) = $4
	*(($2 + [152])) = $4
	*(($2 + [168])) = (int_64)-1
	*(($2 + [176])) = (int_64)0
	*(($2 + [184])) = [0]
	*(($2 + [192])) = $4
	*(($2 + [200])) = $4
	*(($2 + [208])) = (int_64)-1
	*(($2 + [216])) = (int_64)0
	*(($2 + [224])) = (int_64)0
	*(($2 + [232])) = [0]
	*(($2 + [240])) = $4
	*(($2 + [248])) = $4
	*(($2 + [256])) = (int_64)-1
	*(($2 + [264])) = (int_64)0
	*(($2 + [272])) = [0]
	*(($2 + [276])) = [0]
	*(($2 + [288])) = $4
	*(($2 + [280])) = $4
	*(($2 + [296])) = (int_64)-1
	*(($2 + [304])) = (int_64)0
	*(($2 + [312])) = [0]
	*(($2 + [316])) = [0]
	*($2 + [24]) = ($2 + [104])
	CALL $326(($2 + [320]), ($2 + [24]), $1)
	$4 = *($1)
	$0 = *($2 + [324])
	if ( ($0 == 0) ){ goto $label$6 }
	$5 = *($0 + [16])
	if ( ((int_64)$5 != (int_64)$4) ){ goto $label$6 }
	if ( ((int_64)*($0 + [8]) != (int_64)8238557860461690880) ){ goto $label$7 }
	$3 = [1]
	$4 = $5
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	
.LOOP $label$8:
	CALL $327(($2 + [320]))
	$4 = *($1)
	$0 = *($2 + [324])
	if ( ($0 == 0) ){ goto $label$6 }
	$5 = *($0 + [16])
	if ( ((int_64)$5 != (int_64)$4) ){ goto $label$6 }
	if ( ((int_64)*($0 + [8]) != (int_64)8238557860461690880) ){ goto $label$8 }
	$4 = $5
	$3 = [1]
	
.LABEL $label$6
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$4 }
	
.LABEL $label$5
	$1 = [0]
	$6 = *([0] + [10876])
	
.LOOP $label$10:
	*((($2 + [320]) + ($0 = $1))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$0 == (int_32)[12]) )))))
	$1 = ($0 + [1])
	if ( ((uint_32)$0 > (uint_32)[11]) ){ goto $label$9 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$10 }
	
.LABEL $label$9
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$3 }
	*($2 + [8]) = ($1 << [1])
	$6 = (($2 + [8]) | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [8]) = [0]
	$0 = (($2 + [8]) | [1])
	goto $label$1 
	
.LABEL $label$3
	$7 = (($1 + [16]) & [-16])
	$6 = CALL $7($7)
	*($2 + [8]) = ($7 | [1])
	*($2 + [16]) = $6
	*($2 + [12]) = $1
	
.LABEL $label$2
	$7 = ($0 + [1])
	$0 = [0]
	
.LOOP $label$11:
	*(($6 + $0)) = *((($2 + [320]) + $0))
	$0 = ($0 + [1])
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$11 }
	$0 = ($6 + $1)
	
.LABEL $label$1
	*($0) = [0]
	$0 = CALL $34(($2 + [8]), [0], [11645])
	$1 = ($0 + [8])
	*((($2 + [24]) + [8])) = *($1)
	*($2 + [24]) = *($0)
	*($0) = (int_64)0
	*($1) = [0]
	$0 = CALL $31(($2 + [24]), [12292])
	$1 = ($0 + [8])
	*((($2 + [320]) + [8])) = *($1)
	*($2 + [320]) = *($0)
	*($0) = (int_64)0
	*($1) = [0]
	if ( ($3 == 0) ){ goto $label$18 }
	$0 = [1]
	if ( (*($2 + [320]) & [1]) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL eosio_assert([0], ( *($2 + [328]) ? (($2 + [320]) | [1]) : (*($2 + [320]) & [1]) ))
	$0 = [1]
	if ( ((*($2 + [320]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $9(*($2 + [328]))
	if ( ((*($2 + [24]) & $0) == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( (*($2 + [24]) & $0) ){ goto $label$14 }
	
.LABEL $label$15
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	CALL $9(*($2 + [32]))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $9(*($2 + [16]))
	
.LABEL $label$12
	CALL $145(($2 + [144]))
	$6 = *(($2 + [128]))
	if ( ($6 == 0) ){ goto $label$19 }
	$7 = ($2 + [132])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$21 }
	
.LOOP $label$22:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$23 }
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$24 }
	CALL $9(*(($1 + [32])))
	
.LABEL $label$24
	CALL $9($1)
	
.LABEL $label$23
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$22 }
	$0 = *(($2 + [128]))
	goto $label$20 
	
.LABEL $label$21
	$0 = $6
	
.LABEL $label$20
	*($7) = $6
	CALL $9($0)
	
.LABEL $label$19
	CALL $328(($2 + [88]))
	$global$0 = ($2 + [336])
}

int_32 .FUNC $316 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($0 + [8])
	$3 = *($1)
	$5 = *(($0 + [36]))
	$4 = *(($0 + [32]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$1 = ($5 + [-24])
	$6 = *($1)
	if ( ((int_64)*($6) == (int_64)$3) ){ goto $label$3 }
	$5 = $1
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($6 + [88]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [10423])
	return ((int_32)$6 != (int_32)[0])
	
.LABEL $label$2
	$6 = [0]
	$1 = CALL db_find_i64(*($2), *(($0 + [16])), (int_64)-5915276602094125056, $3)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $329($2, $1)
	if ( ((int_32)*($6 + [88]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$1
	return ((int_32)$6 != (int_32)[0])
}

int_32 .FUNC $317 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $5
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$5 = CALL $1($6)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $6)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $6)
	*(($4 = CALL $7([32]))) = (int_64)0
	*($4 + [8 align=4]) = (int_64)0
	*($4 + [16]) = [0]
	*($4 + [20]) = $0
	$8 = ($4 + [8])
	$2 = $5
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	$2 = *($3 + [36])
	
.LABEL $label$7
	CALL memcpy($4, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $332(($3 + [32]), $8)
	*($4 + [24]) = $1
	*($3 + [24]) = $4
	$9 = *($4)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($6 + [8]) = $9
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $4
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $333(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $2($5)
	
.LABEL $label$8
	$6 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	$0 = *($6 + [8])
	if ( ($0 == 0) ){ goto $label$12 }
	$2 = ($6 + [12])
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$14 }
	
.LOOP $label$15:
	$5 = ($1 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($1 + [-4])))
	
.LABEL $label$16
	$1 = $5
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$15 }
	$5 = *(($6 + [8]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $0
	
.LABEL $label$13
	*($2) = $0
	CALL $9($5)
	
.LABEL $label$12
	CALL $9($6)
	
.LABEL $label$11
	$global$0 = ($3 + [48])
	return $4
}

void .FUNC $251 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	*($3 + [160]) = (int_64)0
	*($3 + [152]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [152]), $5, [8])
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy(($3 + [72]), $5, [8])
	*(($5 = (($3 + [152]) + [8]))) = *($3 + [72])
	*((($3 + [24]) + [8])) = $4
	*($3 + [56]) = $2
	*($3 + [60]) = ($2 + [24])
	*($3 + [64]) = $4
	*($3 + [24]) = *($3 + [56])
	$2 = CALL $216(($3 + [72]), $0, $1, ($3 + [24]))
	$0 = *($5)
	*((($3 + [40]) + [8])) = $0
	*((($3 + [8]) + [8])) = $0
	$0 = *($3 + [152])
	*($3 + [40]) = $0
	*($3 + [8]) = $0
	CALL $156($2, *($3 + [168]), ($3 + [8]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$10 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [176])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [176])
}

void .FUNC $250 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	*($3 + [160]) = (int_64)0
	*($3 + [152]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [152]), $5, [8])
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy(($3 + [72]), $5, [8])
	*(($5 = (($3 + [152]) + [8]))) = *($3 + [72])
	*((($3 + [24]) + [8])) = $4
	*($3 + [56]) = $2
	*($3 + [60]) = ($2 + [24])
	*($3 + [64]) = $4
	*($3 + [24]) = *($3 + [56])
	$2 = CALL $216(($3 + [72]), $0, $1, ($3 + [24]))
	$0 = *($5)
	*((($3 + [40]) + [8])) = $0
	*((($3 + [8]) + [8])) = $0
	$0 = *($3 + [152])
	*($3 + [40]) = $0
	*($3 + [8]) = $0
	CALL $165($2, *($3 + [168]), ($3 + [8]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$10 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [176])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [176])
}

void .FUNC $253 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [184]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($3 + [184]), $2, [8])
	*($3 + [176]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy(($3 + [176]), $5, [8])
	*($3 + [168]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$7
	CALL memcpy(($3 + [168]), $5, [8])
	*($3 + [160]) = (int_64)0
	*($3 + [152]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$8
	CALL memcpy(($3 + [152]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$9
	CALL memcpy(($3 + [40]), $5, [8])
	*((($3 + [152]) + [8])) = *($3 + [40])
	*($3 + [144]) = (int_64)0
	*($3 + [136]) = (int_64)0
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$10
	CALL memcpy(($3 + [136]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [48])
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$11 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$11
	CALL memcpy(($3 + [40]), $5, [8])
	*((($3 + [136]) + [8])) = *($3 + [40])
	*($3 + [128]) = (int_64)0
	*($3 + [120]) = (int_64)0
	$5 = ($2 + [56])
	if ( ((int_32)$6 != (int_32)[56]) ){ goto $label$12 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$12
	$4 = ($2 + $4)
	CALL memcpy(($3 + [120]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [64])
	if ( ((int_32)$6 != (int_32)[64]) ){ goto $label$13 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$13
	CALL memcpy(($3 + [40]), $5, [8])
	*((($3 + [120]) + [8])) = *($3 + [40])
	*((($3 + [8]) + [8])) = $4
	*($3 + [24]) = $2
	*($3 + [28]) = ($2 + [72])
	*($3 + [32]) = $4
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $216(($3 + [40]), $0, $1, ($3 + [8]))
	CALL require_auth(*($2))
	if ( (*($2 + [56]) & [1]) ){ goto $label$16 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$14
	$global$0 = ($3 + [192])
}

void .FUNC $252 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $216(($3 + [32]), $0, $1, $3)
	CALL $142($2)
	if ( (*($2 + [56]) & [1]) ){ goto $label$7 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

void .FUNC $255 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [120])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [120])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10871])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $216(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $191($2, *($3 + [120]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [128])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [128])
}

void .FUNC $254 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($3 + [120]), $2, [8])
	*((($3 + [8]) + [8])) = $5
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $5
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $216(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $75($2, *($3 + [120]))
	if ( (*($2 + [56]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [28]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*(($2 + [64])))
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($2 + [36])))
	$global$0 = ($3 + [128])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [128])
}

void .FUNC $257 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [3])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($2 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $7(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $15($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [3]))
	$3 = ($2 + ($3 << [3]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [3]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $9($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $256 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [148]) = $4
	*($3 + [144]) = $4
	*($3 + [152]) = ($4 + $5)
	*($3 + [136]) = [0]
	*($3 + [128]) = (int_64)0
	CALL $222(($3 + [144]), ($3 + [128]))
	$4 = *($3 + [152])
	*((($3 + [32]) + [8])) = $4
	*(($3 + [8])) = $4
	$6 = *($3 + [144])
	*($3) = $6
	*($3 + [32]) = $6
	$4 = CALL $216(($3 + [48]), $0, $1, $3)
	*($3 + [24]) = [0]
	*($3 + [16]) = (int_64)0
	$5 = (*($3 + [132]) - *($3 + [128]))
	if ( ($5 == 0) ){ goto $label$8 }
	$2 = int_32($5 >> [3])
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$7 }
	$5 = CALL $7($5)
	*(($3 + [24])) = ($5 + ($2 << [3]))
	*($3 + [16]) = $5
	*($3 + [20]) = $5
	$7 = *($3 + [128])
	$2 = (*($3 + [132]) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($5, $7, $2)
	*($3 + [20]) = (*($3 + [20]) + $2)
	
.LABEL $label$8
	CALL $194($4, ($3 + [16]))
	$5 = *($3 + [16])
	if ( ($5 == 0) ){ goto $label$9 }
	*($3 + [20]) = $5
	CALL $9($5)
	
.LABEL $label$9
	if ( (*($4 + [56]) & [1]) ){ goto $label$11 }
	if ( (*($4 + [28]) & [1]) ){ goto $label$10 }
	goto $label$6 
	
.LABEL $label$11
	CALL $9(*(($4 + [64])))
	if ( ((*($4 + [28]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$10
	CALL $9(*(($4 + [36])))
	$4 = *($3 + [128])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	CALL $15(($3 + [16]))
	
.LABEL $label$6
	$4 = *($3 + [128])
	if ( ($4 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*($3 + [132]) = $4
	CALL $9($4)
	
.LABEL $label$4
	$global$0 = ($3 + [160])
	(unreachable)
}

void .FUNC $181 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($4 + [136])) = [0]
	*($4 + [120]) = (int_64)-1
	*($4 + [128]) = (int_64)0
	$5 = *($0)
	*($4 + [104]) = $5
	*($4 + [112]) = $5
	CALL $71(($4 + [8]), ($4 + [104]))
	if ( ((int_64)*($1 + [8]) == (int_64)*(($4 + [32]))) ){ goto $label$1 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$1
	$5 = (int_64)
	*($4 + [24]) = $5(*($4 + [24]) - *($1)))
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [10380])
	$5 = *(($4 + [24]))
	
.LABEL $label$2
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [10402])
	
.LABEL $label$3
	if ( ((int_64)*($2 + [8]) == (int_64)*(($4 + [88]))) ){ goto $label$4 }
	CALL eosio_assert([0], [10332])
	
.LABEL $label$4
	$5 = (int_64)
	*($4 + [80]) = $5(*($4 + [80]) - *($2)))
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10380])
	$5 = *(($4 + [80]))
	
.LABEL $label$5
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [10402])
	
.LABEL $label$6
	*($4 + [100]) = (*($4 + [100]) + $3)
	CALL $65(($4 + [104]), ($4 + [8]), *($0))
	$0 = *($4 + [128])
	if ( ($0 == 0) ){ goto $label$7 }
	$3 = ($4 + [132])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $9($1)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($4 + [128]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $0
	
.LABEL $label$8
	*($3) = $0
	CALL $9($2)
	
.LABEL $label$7
	$global$0 = ($4 + [144])
}

void .FUNC $180 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	float_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_64 $15
	float_64 $16
	int_64 $17
	int_32 $18
	int_32 $19
	$5 = ($global$0 - [416])
	$global$0 = $5
	$6 = *($4)
	$7 = ((float_32)(float_32))((float_32)1 - *($0 + [72])) * (float_32)(CASTING float_32)(int_64 $6)
	if ( ((float_32)(float_32)|$7)| < (float_32)(float_32)9223372036854775808) ){ goto $label$2 }
	$8 = (int_64)-9223372036854775808
	goto $label$1 
	
.LABEL $label$2
	$8 = (Rounds 0)($7)
	
.LABEL $label$1
	$9 = *($4 + [8])
	if ( (uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$3 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$3
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$12 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$10 = $12
	$13 = $11
	$11 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$10 = $12
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$13 = ((int_32)$11 < (int_32)[6])
	$14 = ($11 + [1])
	$11 = $14
	if ( $13 ){ goto $label$8 }
	$11 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [9494])
	
.LABEL $label$4
	$10 = *($3)
	CALL __multi3(($5 + [48]), $10, (int_64)$10 >> (int_64)63), $6, (int_64)$6 >> (int_64)63))
	$15 = *($3 + [8])
	$12 = *(($5 + [56]))
	$10 = *($5 + [48])
	if ( (( (uint_64)($10 <= (int_64)4611686018427387904) ? ((int_64)$12 < (int_64)0) : (int_64)($12 == 0) ) == 0) ){ goto $label$10 }
	if ( ( ((uint_64)$10 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$12 > (int_64)-1) : ((int_64)$12 == (int_64)-1) ) ){ goto $label$9 }
	CALL eosio_assert([0], [11324])
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [11300])
	
.LABEL $label$9
	$16 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *($0 + [68])))
	if ( ((float_64)(float_64)|$16| < (float_64)(float_64)9223372036854775808) ){ goto $label$18 }
	$12 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$12 = (Rounds 0)($16)
	if ( ((int_64)$12 != (int_64)0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL eosio_assert([0], [11038])
	$12 = ((int_64)$10 / (int_64)$12)
	if ( ((int_64)$12 > (int_64)0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( ((int_64)$10 != (int_64)-9223372036854775808) ){ goto $label$19 }
	if ( ((int_64)$12 != (int_64)-1) ){ goto $label$19 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$19
	$12 = ((int_64)$10 / (int_64)$12)
	if ( ((int_64)$12 <= (int_64)0) ){ goto $label$14 }
	
.LABEL $label$15
	$10 = (int_64)
	if ( ((int_64)$10($6 - $8)) <= (int_64)-4611686018427387904) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL eosio_assert([0], [10984])
	$10 = (int_64)
	if ( ((int_64)$10($6 - $8)) > (int_64)-4611686018427387904) ){ goto $label$12 }
	
.LABEL $label$13
	CALL eosio_assert([0], [10380])
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_64)$10 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [10402])
	
.LABEL $label$11
	*((($5 + [208]) + [32])) = [0]
	*($5 + [224]) = (int_64)-1
	*($5 + [232]) = (int_64)0
	$6 = *($0)
	*($5 + [208]) = $6
	*($5 + [216]) = $6
	CALL $73(($5 + [176]), ($5 + [208]))
	$6 = *($0)
	$17 = *($5 + [176])
	*(($13 = (($5 + [264]) + [24]))) = [0]
	*((($5 + [360]) + [16])) = *(($4 + [8]))
	*($5 + [360]) = $1
	*($5 + [264]) = $17
	*($5 + [272]) = (int_64)4520833809837457408
	*($5 + [280]) = (int_64)0
	*($5 + [368]) = *($4)
	*(($11 = CALL $7([16]))) = $6
	*($11 + [8]) = (int_64)-6402241254016417792
	*(($5 + [300])) = [0]
	$14 = ($11 + [16])
	*($13) = $14
	*(($5 + [284])) = $14
	*($5 + [280]) = $11
	*($5 + [292 align=4]) = (int_64)0
	CALL $46(($5 + [292]), [24])
	$14 = (($5 + [264]) + [32])
	$11 = *($14)
	$13 = *($5 + [292])
	*($5 + [252]) = $13
	*($5 + [248]) = $13
	*($5 + [256]) = $11
	*($5 + [400]) = ($5 + [248])
	*($5 + [408]) = ($5 + [360])
	CALL $304(($5 + [408]), ($5 + [400]))
	CALL $48(($5 + [264]))
	$11 = *($5 + [292])
	if ( ($11 == 0) ){ goto $label$20 }
	*($14) = $11
	CALL $9($11)
	
.LABEL $label$20
	$11 = *($5 + [280])
	if ( ($11 == 0) ){ goto $label$21 }
	*(($5 + [284])) = $11
	CALL $9($11)
	
.LABEL $label$21
	$6 = *($0)
	$17 = *($5 + [176])
	*(($13 = (($5 + [264]) + [24]))) = [0]
	*((($5 + [360]) + [16])) = *(($4 + [8]))
	*($5 + [360]) = $2
	*($5 + [264]) = $17
	*($5 + [272]) = (int_64)-4421662014340890624
	*($5 + [280]) = (int_64)0
	*($5 + [368]) = *($4)
	*(($11 = CALL $7([16]))) = $6
	*($11 + [8]) = (int_64)-6402241254016417792
	*(($5 + [300])) = [0]
	$14 = ($11 + [16])
	*($13) = $14
	*(($5 + [284])) = $14
	*($5 + [280]) = $11
	*($5 + [292 align=4]) = (int_64)0
	CALL $46(($5 + [292]), [24])
	$14 = ($5 + [296])
	$11 = *($14)
	$13 = *($5 + [292])
	*($5 + [252]) = $13
	*($5 + [248]) = $13
	*($5 + [256]) = $11
	*($5 + [400]) = ($5 + [248])
	*($5 + [408]) = ($5 + [360])
	CALL $304(($5 + [408]), ($5 + [400]))
	CALL $48(($5 + [264]))
	$11 = *($5 + [292])
	if ( ($11 == 0) ){ goto $label$22 }
	*($14) = $11
	CALL $9($11)
	
.LABEL $label$22
	$11 = *($5 + [280])
	if ( ($11 == 0) ){ goto $label$23 }
	*(($5 + [284])) = $11
	CALL $9($11)
	
.LABEL $label$23
	*(($5 + [152])) = [0]
	*($5 + [160]) = $8
	*($5 + [168]) = $9
	*($5 + [144]) = (int_64)0
	$6 = *($5 + [176])
	$11 = CALL $16([11349])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$26 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$29 }
	*($5 + [144]) = ($11 << [1])
	$13 = (($5 + [144]) | [1])
	if ( $11 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$14 = (($11 + [16]) & [-16])
	$13 = CALL $7($14)
	*($5 + [144]) = ($14 | [1])
	*($5 + [152]) = $13
	*($5 + [148]) = $11
	
.LABEL $label$28
	CALL memcpy($13, [11349], $11)
	
.LABEL $label$27
	*(($13 + $11)) = [0]
	*((($5 + [32]) + [8])) = *((($5 + [160]) + [8]))
	*($5 + [32]) = *($5 + [160])
	CALL $78($0, $6, $2, $1, ($5 + [32]), ($5 + [144]))
	if ( ((*($5 + [144]) & [1]) == 0) ){ goto $label$30 }
	CALL $9(*($5 + [152]))
	
.LABEL $label$30
	*((($5 + [112]) + [8])) = [0]
	*($5 + [128]) = $12
	*($5 + [136]) = $15
	*($5 + [112]) = (int_64)0
	$12 = *($5 + [184])
	$11 = CALL $16([11372])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$25 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$33 }
	*($5 + [112]) = ($11 << [1])
	$13 = (($5 + [112]) | [1])
	if ( $11 ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	$14 = (($11 + [16]) & [-16])
	$13 = CALL $7($14)
	*($5 + [112]) = ($14 | [1])
	*($5 + [120]) = $13
	*($5 + [116]) = $11
	
.LABEL $label$32
	CALL memcpy($13, [11372], $11)
	
.LABEL $label$31
	*(($13 + $11)) = [0]
	*((($5 + [16]) + [8])) = *((($5 + [128]) + [8]))
	*($5 + [16]) = *($5 + [128])
	CALL $78($0, $12, $1, $2, ($5 + [16]), ($5 + [112]))
	if ( ((*($5 + [112]) & [1]) == 0) ){ goto $label$34 }
	CALL $9(*($5 + [120]))
	
.LABEL $label$34
	*((($5 + [80]) + [8])) = [0]
	*($5 + [96]) = $10
	*($5 + [104]) = $9
	*($5 + [80]) = (int_64)0
	$12 = *($5 + [176])
	$11 = CALL $16([11378])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$24 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$37 }
	*($5 + [80]) = ($11 << [1])
	$13 = (($5 + [80]) | [1])
	if ( $11 ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$37
	$14 = (($11 + [16]) & [-16])
	$13 = CALL $7($14)
	*($5 + [80]) = ($14 | [1])
	*($5 + [88]) = $13
	*($5 + [84]) = $11
	
.LABEL $label$36
	CALL memcpy($13, [11378], $11)
	
.LABEL $label$35
	*(($13 + $11)) = [0]
	*(($5 + [8])) = *((($5 + [96]) + [8]))
	*($5) = *($5 + [96])
	CALL $78($0, $12, $2, $2, $5, ($5 + [80]))
	if ( ((*($5 + [80]) & [1]) == 0) ){ goto $label$38 }
	CALL $9(*($5 + [88]))
	
.LABEL $label$38
	*(($11 = (($5 + [64]) + [8]))) = *(($3 + [8]))
	*($5 + [64]) = *($3)
	*(($13 = (($5 + [248]) + [8]))) = *($11)
	*($5 + [248]) = *($5 + [64])
	*(($18 = (($5 + [360]) + [32]))) = [0]
	*($5 + [376]) = (int_64)-1
	*($5 + [384]) = (int_64)0
	$12 = *($0)
	*($5 + [360]) = $12
	*($5 + [368]) = $12
	CALL $71(($5 + [264]), ($5 + [360]))
	*((($5 + [264]) + [8])) = *($13)
	*($5 + [264]) = *($5 + [248])
	CALL $65(($5 + [360]), ($5 + [264]), *($0))
	$14 = *($5 + [384])
	if ( ($14 == 0) ){ goto $label$39 }
	$19 = ($5 + [388])
	$11 = *($19)
	if ( ((int_32)$11 == (int_32)$14) ){ goto $label$41 }
	
.LOOP $label$42:
	$11 = ($11 + [-24])
	$13 = *($11)
	*($11) = [0]
	if ( ($13 == 0) ){ goto $label$43 }
	CALL $9($13)
	
.LABEL $label$43
	if ( ((int_32)$14 != (int_32)$11) ){ goto $label$42 }
	$11 = *(($5 + [384]))
	goto $label$40 
	
.LABEL $label$41
	$11 = $14
	
.LABEL $label$40
	*($19) = $14
	CALL $9($11)
	
.LABEL $label$39
	$12 = *($0)
	*(($5 + [328])) = $9
	*((($5 + [264]) + [32])) = *(($4 + [8]))
	*(($5 + [312])) = *(($3 + [8]))
	*($5 + [272]) = $2
	*($5 + [264]) = $1
	*($5 + [280]) = $2
	*($5 + [320]) = $10
	*($5 + [360]) = $12
	*($5 + [368]) = (int_64)-3617352385912897536
	*($5 + [288]) = *($4)
	*($5 + [304]) = *($3)
	*(($11 = CALL $7([16]))) = $12
	*($11 + [8]) = (int_64)-6402241254016417792
	*(($5 + [396])) = [0]
	$13 = ($11 + [16])
	*(($5 + [384])) = $13
	*(($5 + [380])) = $13
	*($5 + [376]) = $11
	*($5 + [388 align=4]) = (int_64)0
	CALL $46(($5 + [388]), [72])
	$11 = *($18)
	$13 = *($5 + [388])
	*($5 + [252]) = $13
	*($5 + [248]) = $13
	*($5 + [256]) = $11
	*($5 + [400]) = ($5 + [248])
	*($5 + [408]) = ($5 + [264])
	CALL $305(($5 + [408]), ($5 + [400]))
	CALL $48(($5 + [360]))
	$11 = *($5 + [388])
	if ( ($11 == 0) ){ goto $label$44 }
	*(($5 + [392])) = $11
	CALL $9($11)
	
.LABEL $label$44
	$11 = *($5 + [376])
	if ( ($11 == 0) ){ goto $label$45 }
	*(($5 + [380])) = $11
	CALL $9($11)
	
.LABEL $label$45
	$14 = *($5 + [232])
	if ( ($14 == 0) ){ goto $label$46 }
	$0 = ($5 + [236])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$14) ){ goto $label$48 }
	
.LOOP $label$49:
	$11 = ($11 + [-24])
	$13 = *($11)
	*($11) = [0]
	if ( ($13 == 0) ){ goto $label$50 }
	CALL $9($13)
	
.LABEL $label$50
	if ( ((int_32)$14 != (int_32)$11) ){ goto $label$49 }
	$11 = *(($5 + [232]))
	goto $label$47 
	
.LABEL $label$48
	$11 = $14
	
.LABEL $label$47
	*($0) = $14
	CALL $9($11)
	
.LABEL $label$46
	$global$0 = ($5 + [416])
	return (unreachable)
	
.LABEL $label$26
	CALL $25(($5 + [144]))
	
.LABEL $label$25
	CALL $25(($5 + [112]))
	
.LABEL $label$24
	CALL $25(($5 + [80]))
	(unreachable)
	(unreachable)
}

void .FUNC $138 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$1
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $1
	*($5) = *(*($3))
	$3 = *($3 + [4])
	*($5 + [8]) = *($3)
	*($5 + [16]) = *(($3 + [8]))
	*($4 + [56]) = (($4 + [16]) + [24])
	*($4 + [52]) = ($4 + [16])
	*($4 + [48]) = ($4 + [16])
	CALL $280(($4 + [48]), $5)
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)4508390643396374528, $2, $6, ($4 + [16]), [24])
	*($5 + [28]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [48]) = $5
	$6 = *($5)
	*($4 + [16]) = $6
	*($4 + [12]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [48]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $279(($1 + [24]), ($4 + [48]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [48])
	*($4 + [48]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [64])
}

void .FUNC $139 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	$4 = ($global$0 - [144])
	$global$0 = $4
	CALL require_auth($1)
	if ( CALL $140($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [8689])
	
.LABEL $label$1
	*(($4 + [136])) = [0]
	*($4 + [120]) = (int_64)-1
	*($4 + [128]) = (int_64)0
	$5 = *($0)
	*($4 + [104]) = $5
	*($4 + [112]) = $5
	CALL $73(($4 + [72]), ($4 + [104]))
	$6 = *($0 + [69])
	$7 = *($4 + [96])
	$8 = *($4 + [128])
	if ( ($8 == 0) ){ goto $label$2 }
	$9 = ($4 + [132])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = ($10 + [-24])
	$11 = *($10)
	*($10) = [0]
	if ( ($11 == 0) ){ goto $label$6 }
	CALL $9($11)
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$5 }
	$10 = *(($4 + [128]))
	goto $label$3 
	
.LABEL $label$4
	$10 = $8
	
.LABEL $label$3
	*($9) = $8
	CALL $9($10)
	
.LABEL $label$2
	if ( ((int_32)($7 & [255]) != (int_32)($6 & [255])) ){ goto $label$7 }
	CALL eosio_assert([0], [8480])
	
.LABEL $label$7
	$12 = *(($2 + [8]))
	*((($4 + [56]) + [8])) = $12
	$13 = *(($3 + [8]))
	*((($4 + [40]) + [8])) = $13
	$5 = *($3)
	$14 = *($2)
	*((($4 + [24]) + [8])) = $12
	*((($4 + [8]) + [8])) = $13
	*($4 + [56]) = $14
	*($4 + [40]) = $5
	*($4 + [24]) = $14
	*($4 + [8]) = $5
	CALL $141($0, $1, ($4 + [24]), ($4 + [8]))
	CALL $142($0)
	$global$0 = ($4 + [144])
}

void .FUNC $369 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	$6 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($6, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($6, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10871])
	$6 = *($5)
	
.LABEL $label$10
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [10871])
	$6 = *($5)
	
.LABEL $label$12
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$13 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($6, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$14 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$14
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $269 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9341])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $130 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	float_32 $12
	float_32 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$2 = ($global$0 - [288])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = [0]
	*(($2 + [136])) = [0]
	*($2 + [120]) = (int_64)-1
	*($2 + [128]) = (int_64)0
	$4 = *($0)
	*($2 + [104]) = $4
	*($2 + [112]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-6497942611737529472, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $92(($2 + [104]), $5)
	if ( ((int_32)*($3 + [120]) == (int_32)($2 + [104])) ){ goto $label$1 }
	CALL eosio_assert([0], [10423])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8571])
	
.LABEL $label$1
	*(($2 + [272])) = [0]
	*($2 + [256]) = (int_64)-1
	*($2 + [264]) = (int_64)0
	$4 = *($0)
	*($2 + [240]) = $4
	*($2 + [248]) = $4
	CALL $71(($2 + [144]), ($2 + [240]))
	$6 = *($2 + [152])
	$7 = *($2 + [144])
	$8 = *($2 + [264])
	if ( ($8 == 0) ){ goto $label$3 }
	$9 = ($2 + [268])
	$5 = *($9)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$5 }
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$10 = *($5)
	*($5) = [0]
	if ( ($10 == 0) ){ goto $label$7 }
	CALL $9($10)
	
.LABEL $label$7
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$6 }
	$5 = *(($2 + [264]))
	goto $label$4 
	
.LABEL $label$5
	$5 = $8
	
.LABEL $label$4
	*($9) = $8
	CALL $9($5)
	
.LABEL $label$3
	if ( (*($0 + [56]) & [1]) ){ goto $label$12 }
	$9 = (($0 + [56]) + [1])
	$5 = CALL $16($9)
	if ( ((uint_32)$5 >= (uint_32)[8]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$9 = *(($0 + [64]))
	$5 = CALL $16($9)
	if ( ($5 <= [8]) ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [9347])
	goto $label$9 
	
.LABEL $label$10
	if ( $5 ){ goto $label$9 }
	$4 = (int_64)0
	goto $label$8 
	
.LABEL $label$9
	$4 = (int_64)0
	
.LOOP $label$13:
	$8 = (($9 + $5) + [-1])
	$10 = *($8)
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$14 }
	CALL eosio_assert([0], [9392])
	$10 = *($8)
	
.LABEL $label$14
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$13 }
	
.LABEL $label$8
	*($2 + [88]) = (int_64)0
	*($2 + [96]) = ((int_64)((int_64)$4 << (int_64)8) | (int_64)*($0 + [68]))
	$4 = ((int_64)$4 & (int_64)72057594037927935)
	$5 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$11 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$18 }
	$4 = $11
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$18
	$4 = $11
	
.LOOP $label$19:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$16 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $10 ){ goto $label$19 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	CALL eosio_assert([0], [9494])
	
.LABEL $label$15
	CALL $131($0, $1)
	$12 = (CASTING float_32)(int_64 $7)
	$13 = ((float_32)((float_32)(CASTING float_32)(uint_64 *($3 + [8])) / (float_32)(CASTING float_32)(uint_64 *($0 + [48]))) * (float_32)$12)
	if ( ((float_32)(float_32)|$13| < (float_32)(float_32)9223372036854775808) ){ goto $label$21 }
	$14 = (int_64)-9223372036854775808
	goto $label$20 
	
.LABEL $label$21
	$14 = (Rounds 0)($13)
	
.LABEL $label$20
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$22 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$22
	$5 = [0]
	$4 = (uint_64)$6 >> (uint_64)(int_64)8
	$11 = $4)
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$15 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$29 }
	$11 = $15
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$29
	$11 = $15
	
.LOOP $label$30:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$26 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $10 ){ goto $label$30 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$27 }
	
.LABEL $label$28
	$11 = (int_64)
	if ( ((int_64)$11($7 - $14)) <= (int_64)-4611686018427387904) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	CALL eosio_assert([0], [9494])
	$11 = (int_64)
	if ( ((int_64)$11($7 - $14)) > (int_64)-4611686018427387904) ){ goto $label$24 }
	
.LABEL $label$25
	CALL eosio_assert([0], [10380])
	goto $label$23 
	
.LABEL $label$24
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$23 }
	CALL eosio_assert([0], [10402])
	
.LABEL $label$23
	*($2 + [80]) = $6
	$15 = ( $11 ? (int_64)0 : ((int_64)$11 > (int_64)0) )
	*($2 + [72]) = $15
	$11 = $4
	if ( (uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$31 }
	CALL eosio_assert([0], [9445])
	$11 = (uint_64)*(($2 + [80])) >> (uint_64)(int_64)8)
	
.LABEL $label$31
	$5 = [0]
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$15 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$35 }
	$11 = $15
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$35
	$11 = $15
	
.LOOP $label$36:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$33 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $10 ){ goto $label$36 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	CALL eosio_assert([0], [9494])
	
.LABEL $label$32
	$12 = ((float_32)((float_32)(CASTING float_32)(uint_64 *($3 + [16])) / (float_32)(CASTING float_32)(uint_64 *(($0 + [48])))) * (float_32)$12)
	if ( ((float_32)(float_32)|$12| < (float_32)(float_32)9223372036854775808) ){ goto $label$38 }
	$14 = (int_64)-9223372036854775808
	goto $label$37 
	
.LABEL $label$38
	$14 = (Rounds 0)($12)
	
.LABEL $label$37
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$39 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$39
	$5 = [0]
	$11 = $4
	
.LOOP $label$44:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$43 }
	$15 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$46 }
	$11 = $15
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$44 }
	goto $label$45 
	
.LABEL $label$46
	$11 = $15
	
.LOOP $label$47:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$43 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $10 ){ goto $label$47 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$44 }
	
.LABEL $label$45
	$11 = (int_64)
	if ( ((int_64)$11($7 - $14)) <= (int_64)-4611686018427387904) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	CALL eosio_assert([0], [9494])
	$11 = (int_64)
	if ( ((int_64)$11($7 - $14)) > (int_64)-4611686018427387904) ){ goto $label$41 }
	
.LABEL $label$42
	CALL eosio_assert([0], [10380])
	goto $label$40 
	
.LABEL $label$41
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$40 }
	CALL eosio_assert([0], [10402])
	
.LABEL $label$40
	*($2 + [64]) = $6
	$11 = ( $11 ? (int_64)0 : ((int_64)$11 > (int_64)0) )
	*($2 + [56]) = $11
	if ( (uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$48 }
	CALL eosio_assert([0], [9445])
	$4 = (uint_64)*(($2 + [64])) >> (uint_64)(int_64)8)
	
.LABEL $label$48
	$5 = [0]
	
.LOOP $label$51:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$50 }
	$11 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$52 }
	$4 = $11
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$52
	$4 = $11
	
.LOOP $label$53:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$50 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $10 ){ goto $label$53 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$50
	CALL eosio_assert([0], [9494])
	
.LABEL $label$49
	*(($2 + [176])) = [0]
	*($2 + [160]) = (int_64)-1
	*($2 + [168]) = (int_64)0
	*($2 + [180]) = [0]
	$4 = *($0)
	*($2 + [144]) = $4
	*($2 + [152]) = $4
	*($2 + [48]) = ($2 + [144])
	*(($2 + [248])) = [0]
	*(($5 = ($2 + [256]))) = [0]
	$4 = *($2 + [72])
	*($2 + [244]) = ($2 + [48])
	*($2 + [252]) = ($2 + [48])
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$54 }
	$10 = ($2 + [252])
	*($2 + [16]) = (int_64)0
	CALL $132(($2 + [280]), ($2 + [48]), ($2 + [16]))
	if ( ((int_32)*($5) == (int_32)*($2 + [284])) ){ goto $label$55 }
	$8 = ($2 + [252])
	$9 = ($2 + [80])
	$16 = ($2 + [256])
	
.LOOP $label$56:
	*($2 + [16]) = *($8)
	$5 = *(CALL $133(($2 + [16])) + [4])
	if ( ((int_64)*(($5 + [24])) == (int_64)*($9)) ){ goto $label$57 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$57
	if ( ((int_64)*($5 + [16]) <= (int_64)*($2 + [72])) ){ goto $label$55 }
	CALL $133($10)
	*($2 + [16]) = (int_64)0
	CALL $132(($2 + [280]), ($2 + [48]), ($2 + [16]))
	if ( ((int_32)*($16) != (int_32)*($2 + [284])) ){ goto $label$56 }
	
.LABEL $label$55
	*($2 + [16]) = (int_64)0
	CALL $132(($2 + [280]), ($2 + [48]), ($2 + [16]))
	$9 = ($2 + [256])
	if ( ((int_32)*($9) == (int_32)*($2 + [284])) ){ goto $label$54 }
	$5 = ($2 + [252])
	$16 = (($2 + [56]) + [8])
	
.LOOP $label$58:
	*($2 + [16]) = *($5)
	$8 = *(CALL $133(($2 + [16])) + [4])
	if ( ((int_64)*(($8 + [24])) == (int_64)*($16)) ){ goto $label$59 }
	CALL eosio_assert([0], [9889])
	
.LABEL $label$59
	if ( ((int_64)*($8 + [16]) <= (int_64)*($2 + [56])) ){ goto $label$54 }
	*($2 + [16]) = *($5)
	$8 = *(CALL $133(($2 + [16])) + [4])
	if ( ((int_64)*(($8 + [40])) == (int_64)*((($2 + [88]) + [8]))) ){ goto $label$60 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$60
	$4 = ((int_64)*($2 + [88]) + (int_64)*($8 + [32]))
	*($2 + [88]) = $4
	if ( ((int_64)$4 > (int_64)-4611686018427387904) ){ goto $label$61 }
	CALL eosio_assert([0], [9557])
	$4 = *($2 + [88])
	
.LABEL $label$61
	if ( ((int_64)$4 < (int_64)4611686018427387904) ){ goto $label$62 }
	CALL eosio_assert([0], [9576])
	
.LABEL $label$62
	*($2 + [16]) = *($5)
	$11 = *(*(CALL $133(($2 + [16])) + [4]) + [8])
	*($2 + [16]) = *($5)
	$8 = *(CALL $133(($2 + [16])) + [4])
	$15 = *(($8 + [40]))
	*((($2 + [32]) + [8])) = $15
	$4 = *($8 + [32])
	*(($2 + [8])) = $15
	*($2) = $4
	*($2 + [32]) = $4
	CALL $134($0, $1, $11, $2)
	CALL $133($10)
	*($2 + [16]) = (int_64)0
	CALL $132(($2 + [280]), ($2 + [48]), ($2 + [16]))
	if ( ((int_32)*($9) != (int_32)*($2 + [284])) ){ goto $label$58 }
	
.LABEL $label$54
	$4 = *($0)
	*($2 + [20]) = $0
	*($2 + [16]) = ($2 + [88])
	*($2 + [24]) = ($2 + [56])
	*($2 + [28]) = ($2 + [72])
	if ( ($3 == 0) ){ goto $label$64 }
	CALL $135(($2 + [104]), $3, $4, ($2 + [16]))
	goto $label$63 
	
.LABEL $label$64
	CALL eosio_assert([0], [9698])
	CALL $135(($2 + [104]), [0], $4, ($2 + [16]))
	CALL eosio_assert([0], [9594])
	
.LABEL $label$63
	$5 = CALL db_next_i64(*($3 + [124]), ($2 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$67 }
	CALL $92(($2 + [104]), $5)
	$8 = *($2 + [168])
	if ( $8 ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$67
	CALL $118($0)
	$8 = *($2 + [168])
	if ( ($8 == 0) ){ goto $label$65 }
	
.LABEL $label$66
	$9 = ($2 + [172])
	$5 = *($9)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$69 }
	
.LOOP $label$70:
	$5 = ($5 + [-24])
	$10 = *($5)
	*($5) = [0]
	if ( ($10 == 0) ){ goto $label$71 }
	CALL $9($10)
	
.LABEL $label$71
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$70 }
	$5 = *(($2 + [168]))
	goto $label$68 
	
.LABEL $label$69
	$5 = $8
	
.LABEL $label$68
	*($9) = $8
	CALL $9($5)
	
.LABEL $label$65
	$8 = *($2 + [128])
	if ( ($8 == 0) ){ goto $label$72 }
	$9 = ($2 + [132])
	$5 = *($9)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$74 }
	
.LOOP $label$75:
	$5 = ($5 + [-24])
	$10 = *($5)
	*($5) = [0]
	if ( ($10 == 0) ){ goto $label$76 }
	CALL $9($10)
	
.LABEL $label$76
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$75 }
	$5 = *(($2 + [128]))
	goto $label$73 
	
.LABEL $label$74
	$5 = $8
	
.LABEL $label$73
	*($9) = $8
	CALL $9($5)
	
.LABEL $label$72
	$global$0 = ($2 + [288])
}

void .FUNC $131 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $1
	*($2 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($3, $1, (int_64)4508390643396374528, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $93($2, $0)
	
.LOOP $label$2:
	$0 = [0]
	$5 = CALL db_next_i64(*($4 + [28]), ($2 + [40]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $93($2, $5)
	
.LABEL $label$3
	CALL $136($2, $4)
	$4 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($2 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $9($4)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($2 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$4
	$global$0 = ($2 + [48])
}

void .FUNC $132 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)4520852774463733761, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $70($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)4520852774463733760, $6))
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*(($4 + [80])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $133 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	*($1 + [8]) = (int_64)0
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$3 = *(($2 + [80]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$3 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)4520852774463733761, $1, *($2))
	*((*(($0 + [4])) + [80])) = $3
	
.LABEL $label$3
	$4 = CALL db_idx64_previous($3, ($1 + [8]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10709])
	goto $label$1 
	
.LABEL $label$2
	$2 = *(*($0))
	$2 = CALL db_idx64_end(*($2), *($2 + [8]), (int_64)4520852774463733761)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$4 }
	CALL eosio_assert([0], [10655])
	
.LABEL $label$4
	$4 = CALL db_idx64_previous($2, ($1 + [8]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10655])
	
.LABEL $label$1
	$5 = *($1 + [8])
	$3 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$8:
	$2 = ($3 + [-24])
	$8 = *($2)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$7 }
	$3 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	if ( ((int_32)*($8 + [68]) == (int_32)$6) ){ goto $label$5 }
	CALL eosio_assert([0], [10423])
	goto $label$5 
	
.LABEL $label$6
	$8 = [0]
	$2 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)4520852774463733760, $5)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $70($6, $2)
	if ( ((int_32)*($8 + [68]) == (int_32)$6) ){ goto $label$5 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$5
	*(($0 + [4])) = $8
	*(($8 + [80])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $134 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [56]) = $2
	*(($4 + [48])) = [0]
	*($4 + [32]) = (int_64)-1
	*($4 + [40]) = (int_64)0
	$5 = *($0)
	*($4 + [16]) = $5
	*($4 + [24]) = $1
	$6 = CALL db_find_i64($5, $1, (int_64)4508390643396374528, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $93(($4 + [16]), $6)
	if ( ((int_32)*($6 + [24]) == (int_32)($4 + [16])) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	$1 = *($0)
	*($4 + [8]) = $3
	CALL $137(($4 + [16]), $6, $1, ($4 + [8]))
	$6 = *($4 + [40])
	if ( $6 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$1 = *($0)
	*($4 + [12]) = $3
	*($4 + [8]) = ($4 + [56])
	CALL $138($4, ($4 + [16]), $1, ($4 + [8]))
	$6 = *($4 + [40])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($4 + [44])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $9($3)
	
.LABEL $label$8
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($4 + [40]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $6
	
.LABEL $label$5
	*($7) = $6
	CALL $9($0)
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$1
	$global$0 = ($4 + [64])
}

void .FUNC $135 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	$6 = *($3 + [4])
	$7 = *($3)
	*($1 + [88]) = *($7)
	*(($1 + [96])) = *(($7 + [8]))
	$8 = ($6 + [56])
	$9 = *($1)
	if ( (*($6 + [56]) & [1]) ){ goto $label$4 }
	$10 = ($8 + [1])
	goto $label$3 
	
.LABEL $label$4
	$10 = *(($6 + [64]))
	
.LABEL $label$3
	$7 = CALL $16($10)
	if ( ($7 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9347])
	goto $label$7 
	
.LABEL $label$8
	if ( ($7 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$11 = (int_64)0
	
.LOOP $label$9:
	$12 = (($10 + $7) + [-1])
	$13 = *($12)
	if ( ((($13 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [9392])
	$13 = *($12)
	
.LABEL $label$10
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	goto $label$5 
	
.LABEL $label$6
	$11 = (int_64)0
	
.LABEL $label$5
	$14 = ($1 + [88])
	$15 = ((int_64)$11 & (int_64)72057594037927935)
	$16 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)*($6 + [68]))
	$7 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$11 = (uint_64)$15 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$15 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$15 = $11
	$13 = $7
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$15 = $11
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$15 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8)
	$13 = ((int_32)$7 < (int_32)[6])
	$12 = ($7 + [1])
	$7 = $12
	if ( $13 ){ goto $label$15 }
	$7 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [9494])
	
.LABEL $label$11
	*($1 + [24]) = (int_64)0
	*(($1 + [32])) = $16
	if ( (*($8) & [1]) ){ goto $label$20 }
	$10 = ($8 + [1])
	$7 = CALL $16($10)
	if ( ((uint_32)$7 >= (uint_32)[8]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$10 = *(($6 + [64]))
	$7 = CALL $16($10)
	if ( ($7 <= [8]) ){ goto $label$18 }
	
.LABEL $label$19
	CALL eosio_assert([0], [9347])
	goto $label$17 
	
.LABEL $label$18
	if ( $7 ){ goto $label$17 }
	$15 = (int_64)0
	goto $label$16 
	
.LABEL $label$17
	$15 = (int_64)0
	
.LOOP $label$21:
	$12 = (($10 + $7) + [-1])
	$13 = *($12)
	if ( ((($13 + [-65]) & [255]) <= [26]) ){ goto $label$22 }
	CALL eosio_assert([0], [9392])
	$13 = *($12)
	
.LABEL $label$22
	$15 = ((int_64)((int_64)$15 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$21 }
	
.LABEL $label$16
	$16 = ((int_64)((int_64)$15 << (int_64)8) | (int_64)*(($6 + [68])))
	$15 = ((int_64)$15 & (int_64)72057594037927935)
	$7 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$11 = (uint_64)$15 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$15 & (int_64)65280) == (int_64)0) ){ goto $label$26 }
	$15 = $11
	$13 = $7
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$26
	$15 = $11
	
.LOOP $label$27:
	if ( ((int_64)((int_64)$15 & (int_64)65280) != (int_64)0) ){ goto $label$24 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8)
	$13 = ((int_32)$7 < (int_32)[6])
	$12 = ($7 + [1])
	$7 = $12
	if ( $13 ){ goto $label$27 }
	$7 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	CALL eosio_assert([0], [9494])
	
.LABEL $label$23
	*($1 + [40]) = (int_64)0
	*(($1 + [48])) = $16
	$7 = *($3 + [8])
	*($1 + [72]) = *($7)
	*(($1 + [80])) = *(($7 + [8]))
	$7 = *($3 + [12])
	*($1 + [56]) = *($7)
	*(($1 + [64])) = *(($7 + [8]))
	$13 = ($1 + [56])
	$12 = ($1 + [72])
	if ( ((int_64)$9 == (int_64)*($1)) ){ goto $label$28 }
	CALL eosio_assert([0], [9830])
	
.LABEL $label$28
	$10 = $4
	$7 = ($10 + [-128])
	$global$0 = $7
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = ($10 + [-8])
	*($5 + [16]) = $5
	*($5 + [44]) = $13
	*($5 + [48]) = $12
	*($5 + [52]) = $14
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [40])
	*($5 + [56]) = ($1 + [104])
	CALL $278(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [124]), $2, $7, [120])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$29 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$29
	$global$0 = ($5 + [64])
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10184])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10229])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10279])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $137 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9557])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9576])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9830])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $280($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [16])
}

int_32 .FUNC $33 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0)
	$5 = ($4 & [1])
	if ( $5 ){ goto $label$5 }
	$4 = uint_32($4 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = [10]
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$6
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$10 }
	CALL $27($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	goto $label$9 
	
.LABEL $label$10
	if ( ($3 == 0) ){ goto $label$9 }
	if ( $5 ){ goto $label$8 }
	$5 = ($0 + [1])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$7
	CALL memmove($6, $2, $3)
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL memmove(($6 + $3), $6, $1)
	CALL memmove($6, ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) ), $3)
	
.LABEL $label$1
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($3 << [1])
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$11
	*($0 + [4]) = $3
	*(($5 + $3)) = [0]
	(unreachable)
	return $0
}

void .FUNC $368 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $300 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9341])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9341])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [9341])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, $4, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $208 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [224])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [168]))) = (int_64)0
	*($4 + [160]) = (int_64)0
	*($4 + [152]) = (int_64)0
	*($4 + [140]) = $2
	*($4 + [136]) = $2
	*($4 + [144]) = ($2 + $7)
	*($4 + [208]) = ($4 + [136])
	*($4 + [56]) = ($4 + [152])
	CALL $221(($4 + [56]), ($4 + [208]))
	$3 = *($4 + [144])
	*((($4 + [40]) + [8])) = $3
	*((($4 + [24]) + [8])) = $3
	$9 = *($4 + [136])
	*($4 + [24]) = $9
	*($4 + [40]) = $9
	$3 = CALL $216(($4 + [56]), $0, $1, ($4 + [24]))
	*(($10 = (($4 + [176]) + [8]))) = *($8)
	*($4 + [176]) = *($4 + [160])
	$0 = *($4 + [152])
	*((($4 + [192]) + [8])) = *($10)
	*($4 + [192]) = *($4 + [176])
	$8 = (($4 + [56]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($8) + $6))
	
.LABEL $label$5
	$1 = *((($4 + [192]) + [8]))
	*((($4 + [208]) + [8])) = $1
	*((($4 + [8]) + [8])) = $1
	$1 = *($4 + [192])
	*($4 + [8]) = $1
	*($4 + [208]) = $1
	CALL void $8((int_32 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$10 }
	$2 = [1]
	if ( (*($3 + [56]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $2($2)
	$2 = [1]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [64])))
	if ( (*($3 + [28]) & $2) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [36])))
	
.LABEL $label$6
	$global$0 = ($4 + [224])
	return [1]
}

int_32 .FUNC $209 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$3 = ($global$0 - [304])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [184]))) = (int_64)0
	*(($9 = ($4 + [200]))) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $7)
	*($4 + [288]) = ($4 + [152])
	*($4 + [72]) = ($4 + [168])
	CALL $220(($4 + [72]), ($4 + [288]))
	$3 = *($4 + [160])
	*((($4 + [56]) + [8])) = $3
	*((($4 + [40]) + [8])) = $3
	$10 = *($4 + [152])
	*($4 + [40]) = $10
	*($4 + [56]) = $10
	$3 = CALL $216(($4 + [72]), $0, $1, ($4 + [40]))
	*(($11 = (($4 + [224]) + [8]))) = *($8)
	*(($8 = (($4 + [208]) + [8]))) = *($9)
	*($4 + [224]) = *($4 + [176])
	*($4 + [208]) = *($4 + [192])
	$0 = *($4 + [168])
	*((($4 + [256]) + [8])) = *($8)
	*((($4 + [240]) + [8])) = *($11)
	*($4 + [256]) = *($4 + [208])
	*($4 + [240]) = *($4 + [224])
	$8 = (($4 + [72]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($8) + $6))
	
.LABEL $label$5
	$1 = *((($4 + [240]) + [8]))
	*((($4 + [288]) + [8])) = $1
	$10 = *((($4 + [256]) + [8]))
	*((($4 + [272]) + [8])) = $10
	*((($4 + [24]) + [8])) = $1
	*((($4 + [8]) + [8])) = $10
	$1 = *($4 + [240])
	*($4 + [288]) = $1
	$10 = *($4 + [256])
	*($4 + [272]) = $10
	*($4 + [24]) = $1
	*($4 + [8]) = $10
	CALL void $8((int_32 $0), (int_64 ($4 + [24])), (int_32 ($4 + [8])), (int_32 $6))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$10 }
	$2 = [1]
	if ( (*($3 + [56]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $2($2)
	$2 = [1]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [64])))
	if ( (*($3 + [28]) & $2) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [36])))
	
.LABEL $label$6
	$global$0 = ($4 + [304])
	return [1]
}

int_32 .FUNC $202 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [192])
	$global$0 = $3
	*(($4 = $3) + [184]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [160])) = (int_64)0
	*(($4 + [176])) = [0]
	*($4 + [144]) = (int_64)0
	*($4 + [136]) = (int_64)0
	*($4 + [152]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [124]) = $2
	*($4 + [120]) = $2
	*($4 + [128]) = ($2 + $5)
	*($4 + [16]) = ($4 + [120])
	*($4 + [40]) = ($4 + [136])
	CALL $215(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [128])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [120])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $216(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [184])
	CALL $217(($4 + [16]), ($4 + [136]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$10 }
	$2 = [1]
	if ( (*($3 + [56]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $2($2)
	$2 = [1]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [64])))
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( (*($3 + [28]) & $2) ){ goto $label$6 }
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [168]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $9(*(($3 + [36])))
	$2 = [1]
	if ( ((*($4 + [168]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [176])))
	$global$0 = ($4 + [192])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [192])
	return $2
}

int_32 .FUNC $203 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [120]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($4 + [120]), $2, [8])
	*((($4 + [8]) + [8])) = $3
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$3 = CALL $216(($4 + [40]), $0, $1, ($4 + [8]))
	$8 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [120])
	if ( ($5 & [1]) ){ goto $label$12 }
	CALL void $8((int_32 $0), (int_64 $6))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL void $8((int_32 $0), (int_64 *((*($8) + $6))))
	if ( ($7 <= [513]) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $2($2)
	$2 = [1]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$2 = [1]
	if ( (*($3 + [56]) & [1]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	CALL $9(*(($3 + [64])))
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [36])))
	
.LABEL $label$6
	$global$0 = ($4 + [128])
	return [1]
}

void .FUNC $200 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	$7 = *($1 + [8])
	$6 = *($3)
	if ( ((int_64)*($6 + [8]) == (int_64)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$3
	$8 = ((int_64)*($1) + (int_64)*($6))
	*($1) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9557])
	$8 = *($1)
	
.LABEL $label$4
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9576])
	
.LABEL $label$5
	*(($3 = *($3 + [4]))) = *($1)
	$3 = ($1 + [8])
	*(($3 + [8])) = *($3)
	if ( ((int_64)$7 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [9830])
	
.LABEL $label$6
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	CALL $189($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $3, [24])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [640])
	$global$0 = $3
	CALL $0()
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*($3 + [636]) = [0]
	*($3 + [632]) = [3]
	*($3 + [312]) = *($3 + [632])
	CALL $202($0, $1, ($3 + [312]))
	
.LABEL $label$1
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$2 }
	if ( ((int_64)$2 <= (int_64)-4157798404408355713) ){ goto $label$40 }
	if ( ((int_64)$2 > (int_64)4511785076043985791) ){ goto $label$39 }
	if ( ((int_64)$2 > (int_64)3626098235149910015) ){ goto $label$37 }
	if ( ((int_64)$2 <= (int_64)-3104548728665538561) ){ goto $label$33 }
	if ( ((int_64)$2 == (int_64)-3104548728665538560) ){ goto $label$25 }
	if ( ((int_64)$2 == (int_64)-3068451320617762816) ){ goto $label$24 }
	if ( ((int_64)$2 != (int_64)-2039333636196532224) ){ goto $label$2 }
	*($3 + [516]) = [0]
	*($3 + [512]) = [4]
	*($3 + [112]) = *($3 + [512])
	CALL $203($1, $1, ($3 + [112]))
	CALL eosio_exit([0])
	
.LABEL $label$40
	if ( ((int_64)$2 <= (int_64)-5915331450174627841) ){ goto $label$38 }
	if ( ((int_64)$2 > (int_64)-4417032211467862017) ){ goto $label$36 }
	if ( ((int_64)$2 <= (int_64)-4997502816419664001) ){ goto $label$32 }
	if ( ((int_64)$2 == (int_64)-4997502816419664000) ){ goto $label$23 }
	if ( ((int_64)$2 == (int_64)-4417316219328135168) ){ goto $label$22 }
	if ( ((int_64)$2 != (int_64)-4417057680982876992) ){ goto $label$2 }
	*($3 + [372]) = [0]
	*($3 + [368]) = [5]
	*($3 + [256]) = *($3 + [368])
	CALL $204($1, $1, ($3 + [256]))
	CALL eosio_exit([0])
	
.LABEL $label$39
	if ( ((int_64)$2 > (int_64)5377998870511529471) ){ goto $label$35 }
	if ( ((int_64)$2 <= (int_64)4982484518109295263) ){ goto $label$31 }
	if ( ((int_64)$2 == (int_64)4982484518109295264) ){ goto $label$21 }
	if ( ((int_64)$2 == (int_64)5374620790476898304) ){ goto $label$20 }
	if ( ((int_64)$2 != (int_64)5377995445601449472) ){ goto $label$2 }
	*($3 + [548]) = [0]
	*($3 + [544]) = [6]
	*($3 + [80]) = *($3 + [544])
	CALL $205($1, $1, ($3 + [80]))
	CALL eosio_exit([0])
	
.LABEL $label$38
	if ( ((int_64)$2 <= (int_64)-6217917475468607489) ){ goto $label$34 }
	if ( ((int_64)$2 <= (int_64)-6215682783192416257) ){ goto $label$30 }
	if ( ((int_64)$2 == (int_64)-6215682783192416256) ){ goto $label$19 }
	if ( ((int_64)$2 == (int_64)-6215682782605863536) ){ goto $label$18 }
	if ( ((int_64)$2 != (int_64)-6215682782605856768) ){ goto $label$2 }
	*($3 + [324]) = [0]
	*($3 + [320]) = [7]
	*($3 + [304]) = *($3 + [320])
	CALL $206($1, $1, ($3 + [304]))
	CALL eosio_exit([0])
	
.LABEL $label$37
	if ( ((int_64)$2 <= (int_64)3631284095809290239) ){ goto $label$29 }
	if ( ((int_64)$2 == (int_64)3631284095809290240) ){ goto $label$17 }
	if ( ((int_64)$2 == (int_64)3631284095818203136) ){ goto $label$16 }
	if ( ((int_64)$2 != (int_64)4511785076043985408) ){ goto $label$2 }
	*($3 + [356]) = [0]
	*($3 + [352]) = [8]
	*($3 + [272]) = *($3 + [352])
	CALL $207($1, $1, ($3 + [272]))
	CALL eosio_exit([0])
	
.LABEL $label$36
	if ( ((int_64)$2 <= (int_64)-4157798687667388417) ){ goto $label$28 }
	if ( ((int_64)$2 == (int_64)-4157798687667388416) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)-4157798687655161856) ){ goto $label$14 }
	if ( ((int_64)$2 != (int_64)-4157798404408737792) ){ goto $label$2 }
	*($3 + [572]) = [0]
	*($3 + [568]) = [9]
	*($3 + [56]) = *($3 + [568])
	CALL $208($1, $1, ($3 + [56]))
	CALL eosio_exit([0])
	
.LABEL $label$35
	if ( ((int_64)$2 <= (int_64)5378288916589335919) ){ goto $label$27 }
	if ( ((int_64)$2 == (int_64)5378288916589335920) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)5378294512764190720) ){ goto $label$12 }
	if ( ((int_64)$2 != (int_64)5378294512764204544) ){ goto $label$2 }
	*($3 + [540]) = [0]
	*($3 + [536]) = [10]
	*($3 + [88]) = *($3 + [536])
	CALL $205($1, $1, ($3 + [88]))
	CALL eosio_exit([0])
	
.LABEL $label$34
	if ( ((int_64)$2 > (int_64)-7949128886020734977) ){ goto $label$26 }
	if ( ((int_64)$2 == (int_64)-8384316437029522944) ){ goto $label$11 }
	if ( ((int_64)$2 != (int_64)-8384316153777154160) ){ goto $label$2 }
	*($3 + [612]) = [0]
	*($3 + [608]) = [11]
	*($3 + [16]) = *($3 + [608])
	CALL $209($1, $1, ($3 + [16]))
	CALL eosio_exit([0])
	
.LABEL $label$33
	if ( ((int_64)$2 == (int_64)-4157798404408355712) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)-3617352385912897536) ){ goto $label$2 }
	*($3 + [484]) = [0]
	*($3 + [480]) = [12]
	*($3 + [144]) = *($3 + [480])
	CALL $210($1, $1, ($3 + [144]))
	CALL eosio_exit([0])
	
.LABEL $label$32
	if ( ((int_64)$2 == (int_64)-5915331450174627840) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)-5004189432031477760) ){ goto $label$2 }
	*($3 + [404]) = [0]
	*($3 + [400]) = [13]
	*($3 + [224]) = *($3 + [400])
	CALL $211($1, $1, ($3 + [224]))
	CALL eosio_exit([0])
	
.LABEL $label$31
	if ( ((int_64)$2 == (int_64)4511785076043985792) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)4923678915975348224) ){ goto $label$2 }
	*($3 + [420]) = [0]
	*($3 + [416]) = [14]
	*($3 + [208]) = *($3 + [416])
	CALL $206($1, $1, ($3 + [208]))
	CALL eosio_exit([0])
	
.LABEL $label$30
	if ( ((int_64)$2 == (int_64)-6217917475468607488) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)-6215786236135746112) ){ goto $label$2 }
	*($3 + [340]) = [0]
	*($3 + [336]) = [15]
	*($3 + [288]) = *($3 + [336])
	CALL $206($1, $1, ($3 + [288]))
	CALL eosio_exit([0])
	
.LABEL $label$29
	if ( ((int_64)$2 == (int_64)3626098235149910016) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)3626267804218535568) ){ goto $label$2 }
	*($3 + [396]) = [0]
	*($3 + [392]) = [16]
	*($3 + [232]) = *($3 + [392])
	CALL $212($1, $1, ($3 + [232]))
	CALL eosio_exit([0])
	
.LABEL $label$28
	if ( ((int_64)$2 == (int_64)-4417032211467862016) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-4157798822388432896) ){ goto $label$2 }
	*($3 + [588]) = [0]
	*($3 + [584]) = [17]
	*($3 + [40]) = *($3 + [584])
	CALL $209($1, $1, ($3 + [40]))
	CALL eosio_exit([0])
	
.LABEL $label$27
	if ( ((int_64)$2 == (int_64)5377998870511529472) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)5378012970202693632) ){ goto $label$2 }
	*($3 + [508]) = [0]
	*($3 + [504]) = [18]
	*($3 + [120]) = *($3 + [504])
	CALL $206($1, $1, ($3 + [120]))
	CALL eosio_exit([0])
	
.LABEL $label$26
	if ( ((int_64)$2 == (int_64)-7949128886020734976) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-7949128877168902144) ){ goto $label$2 }
	*($3 + [596]) = [0]
	*($3 + [592]) = [19]
	*($3 + [32]) = *($3 + [592])
	CALL $208($1, $1, ($3 + [32]))
	CALL eosio_exit([0])
	
.LABEL $label$25
	*($3 + [492]) = [0]
	*($3 + [488]) = [20]
	*($3 + [136]) = *($3 + [488])
	CALL $206($1, $1, ($3 + [136]))
	CALL eosio_exit([0])
	
.LABEL $label$24
	*($3 + [380]) = [0]
	*($3 + [376]) = [21]
	*($3 + [248]) = *($3 + [376])
	CALL $206($1, $1, ($3 + [248]))
	CALL eosio_exit([0])
	
.LABEL $label$23
	*($3 + [532]) = [0]
	*($3 + [528]) = [22]
	*($3 + [96]) = *($3 + [528])
	CALL $206($1, $1, ($3 + [96]))
	CALL eosio_exit([0])
	
.LABEL $label$22
	*($3 + [628]) = [0]
	*($3 + [624]) = [23]
	*($3) = *($3 + [624])
	CALL $213($1, $1, $3)
	CALL eosio_exit([0])
	
.LABEL $label$21
	*($3 + [460]) = [0]
	*($3 + [456]) = [24]
	*($3 + [168]) = *($3 + [456])
	CALL $206($1, $1, ($3 + [168]))
	CALL eosio_exit([0])
	
.LABEL $label$20
	*($3 + [556]) = [0]
	*($3 + [552]) = [25]
	*($3 + [72]) = *($3 + [552])
	CALL $206($1, $1, ($3 + [72]))
	CALL eosio_exit([0])
	
.LABEL $label$19
	*($3 + [388]) = [0]
	*($3 + [384]) = [26]
	*($3 + [240]) = *($3 + [384])
	CALL $206($1, $1, ($3 + [240]))
	CALL eosio_exit([0])
	
.LABEL $label$18
	*($3 + [332]) = [0]
	*($3 + [328]) = [27]
	*($3 + [296]) = *($3 + [328])
	CALL $207($1, $1, ($3 + [296]))
	CALL eosio_exit([0])
	
.LABEL $label$17
	*($3 + [428]) = [0]
	*($3 + [424]) = [28]
	*($3 + [200]) = *($3 + [424])
	CALL $207($1, $1, ($3 + [200]))
	CALL eosio_exit([0])
	
.LABEL $label$16
	*($3 + [436]) = [0]
	*($3 + [432]) = [29]
	*($3 + [192]) = *($3 + [432])
	CALL $207($1, $1, ($3 + [192]))
	CALL eosio_exit([0])
	
.LABEL $label$15
	*($3 + [580]) = [0]
	*($3 + [576]) = [30]
	*($3 + [48]) = *($3 + [576])
	CALL $208($1, $1, ($3 + [48]))
	CALL eosio_exit([0])
	
.LABEL $label$14
	*($3 + [468]) = [0]
	*($3 + [464]) = [31]
	*($3 + [160]) = *($3 + [464])
	CALL $214($1, $1, ($3 + [160]))
	CALL eosio_exit([0])
	
.LABEL $label$13
	*($3 + [444]) = [0]
	*($3 + [440]) = [32]
	*($3 + [184]) = *($3 + [440])
	CALL $207($1, $1, ($3 + [184]))
	CALL eosio_exit([0])
	
.LABEL $label$12
	*($3 + [564]) = [0]
	*($3 + [560]) = [33]
	*($3 + [64]) = *($3 + [560])
	CALL $204($1, $1, ($3 + [64]))
	CALL eosio_exit([0])
	
.LABEL $label$11
	*($3 + [620]) = [0]
	*($3 + [616]) = [34]
	*($3 + [8]) = *($3 + [616])
	CALL $209($1, $1, ($3 + [8]))
	CALL eosio_exit([0])
	
.LABEL $label$10
	*($3 + [476]) = [0]
	*($3 + [472]) = [35]
	*($3 + [152]) = *($3 + [472])
	CALL $214($1, $1, ($3 + [152]))
	CALL eosio_exit([0])
	
.LABEL $label$9
	*($3 + [524]) = [0]
	*($3 + [520]) = [36]
	*($3 + [104]) = *($3 + [520])
	CALL $206($1, $1, ($3 + [104]))
	CALL eosio_exit([0])
	
.LABEL $label$8
	*($3 + [348]) = [0]
	*($3 + [344]) = [37]
	*($3 + [280]) = *($3 + [344])
	CALL $206($1, $1, ($3 + [280]))
	CALL eosio_exit([0])
	
.LABEL $label$7
	*($3 + [500]) = [0]
	*($3 + [496]) = [38]
	*($3 + [128]) = *($3 + [496])
	CALL $206($1, $1, ($3 + [128]))
	CALL eosio_exit([0])
	
.LABEL $label$6
	*($3 + [364]) = [0]
	*($3 + [360]) = [39]
	*($3 + [264]) = *($3 + [360])
	CALL $204($1, $1, ($3 + [264]))
	CALL eosio_exit([0])
	
.LABEL $label$5
	*($3 + [412]) = [0]
	*($3 + [408]) = [40]
	*($3 + [216]) = *($3 + [408])
	CALL $212($1, $1, ($3 + [216]))
	CALL eosio_exit([0])
	
.LABEL $label$4
	*($3 + [452]) = [0]
	*($3 + [448]) = [41]
	*($3 + [176]) = *($3 + [448])
	CALL $207($1, $1, ($3 + [176]))
	CALL eosio_exit([0])
	
.LABEL $label$3
	*($3 + [604]) = [0]
	*($3 + [600]) = [42]
	*($3 + [24]) = *($3 + [600])
	CALL $208($1, $1, ($3 + [24]))
	
.LABEL $label$2
	CALL eosio_exit([0])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $206 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	$3 = ($2 + $7)
	*(($4 + [8])) = $3
	*($4 + [20]) = $2
	*($4 + [16]) = $2
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$3 = CALL $216(($4 + [32]), $0, $1, $4)
	$8 = (($4 + [32]) + int_32($5 >> [1]))
	if ( ($5 & [1]) ){ goto $label$11 }
	CALL void $8((int_32 $6))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL void $8((int_32 *((*($8) + $6))))
	if ( ($7 <= [513]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	$2 = [1]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$2 = [1]
	if ( (*($3 + [56]) & [1]) ){ goto $label$7 }
	
.LABEL $label$8
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	CALL $9(*(($3 + [64])))
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($3 + [36])))
	
.LABEL $label$5
	$global$0 = ($4 + [112])
	return [1]
}

int_32 .FUNC $207 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [120]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	CALL memcpy(($4 + [120]), $2, [8])
	*((($4 + [8]) + [8])) = $3
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$3 = CALL $216(($4 + [40]), $0, $1, ($4 + [8]))
	$8 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [120])
	if ( ($5 & [1]) ){ goto $label$12 }
	CALL void $8((int_32 $0), (int_64 $6))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL void $8((int_32 $0), (int_64 *((*($8) + $6))))
	if ( ($7 <= [513]) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $2($2)
	$2 = [1]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$2 = [1]
	if ( (*($3 + [56]) & [1]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	CALL $9(*(($3 + [64])))
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [36])))
	
.LABEL $label$6
	$global$0 = ($4 + [128])
	return [1]
}

int_32 .FUNC $204 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [120]) = (int_64)0
	*($4 + [112]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [112]) + [8])
	CALL memcpy(($4 + [112]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [16])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$3 = CALL $216(($4 + [32]), $0, $1, $4)
	$8 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *((($4 + [112]) + [8]))
	$1 = *($4 + [112])
	if ( ($5 & [1]) ){ goto $label$13 }
	CALL void $8((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL void $8((int_32 $1), (int_64 $0), (int_64 *((*($8) + $6))))
	if ( ($7 <= [513]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $2($2)
	$2 = [1]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$2 = [1]
	if ( (*($3 + [56]) & [1]) ){ goto $label$9 }
	
.LABEL $label$10
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	CALL $9(*(($3 + [64])))
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($3 + [36])))
	
.LABEL $label$7
	$global$0 = ($4 + [128])
	return [1]
}

int_32 .FUNC $205 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [176])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = [0]
	$2 = [0]
	$8 = CALL action_data_size()
	if ( ($8 == 0) ){ goto $label$1 }
	if ( ($8 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($8)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($8 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $8)
	
.LABEL $label$1
	*($4 + [136]) = [0]
	*($4 + [128]) = (int_64)0
	*($4 + [116]) = $2
	*($4 + [112]) = $2
	*($4 + [120]) = ($2 + $8)
	CALL $222(($4 + [112]), ($4 + [128]))
	$3 = *($4 + [120])
	*((($4 + [16]) + [8])) = $3
	*(($4 + [8])) = $3
	$9 = *($4 + [112])
	*($4) = $9
	*($4 + [16]) = $9
	$3 = CALL $216(($4 + [32]), $0, $1, $4)
	*($4 + [152]) = [0]
	*($4 + [144]) = (int_64)0
	$10 = (*($4 + [132]) - *($4 + [128]))
	if ( ($10 == 0) ){ goto $label$11 }
	$11 = int_32($10 >> [3])
	if ( ((uint_32)$11 >= (uint_32)[536870912]) ){ goto $label$10 }
	$7 = CALL $7($10)
	*(($4 + [152])) = ($7 + ($11 << [3]))
	*($4 + [144]) = $7
	*($4 + [148]) = $7
	$11 = *($4 + [128])
	$10 = (*($4 + [132]) - $11)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$11 }
	CALL memcpy($7, $11, $10)
	$7 = (*($4 + [148]) + $10)
	*($4 + [148]) = $7
	
.LABEL $label$11
	$10 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$12 }
	$6 = *((*($10) + $6))
	
.LABEL $label$12
	*($4 + [168]) = [0]
	*($4 + [160]) = (int_64)0
	$7 = ($7 - *($4 + [144]))
	if ( ($7 == 0) ){ goto $label$13 }
	$5 = int_32($7 >> [3])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$9 }
	$7 = CALL $7($7)
	*(($4 + [168])) = ($7 + ($5 << [3]))
	*($4 + [160]) = $7
	*($4 + [164]) = $7
	$11 = *($4 + [144])
	$5 = (*($4 + [148]) - $11)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$13 }
	CALL memcpy($7, $11, $5)
	*($4 + [164]) = ($7 + $5)
	
.LABEL $label$13
	CALL void $10((int_32 ($4 + [160])), (int_32 $6))
	$7 = *($4 + [160])
	if ( ($7 == 0) ){ goto $label$14 }
	*($4 + [164]) = $7
	CALL $9($7)
	
.LABEL $label$14
	$7 = *($4 + [144])
	if ( ($7 == 0) ){ goto $label$15 }
	*($4 + [148]) = $7
	CALL $9($7)
	
.LABEL $label$15
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$17 }
	$2 = [1]
	if ( (*($3 + [56]) & [1]) ){ goto $label$16 }
	goto $label$8 
	
.LABEL $label$17
	CALL $2($2)
	$2 = [1]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$16
	CALL $9(*(($3 + [64])))
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$10
	CALL $15(($4 + [144]))
	
.LABEL $label$9
	CALL $15(($4 + [160]))
	
.LABEL $label$8
	if ( (*($3 + [28]) & $2) ){ goto $label$6 }
	
.LABEL $label$7
	$2 = *($4 + [128])
	if ( ($2 == 0) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	CALL $9(*(($3 + [36])))
	$2 = *($4 + [128])
	if ( ($2 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*($4 + [132]) = $2
	CALL $9($2)
	
.LABEL $label$4
	$global$0 = ($4 + [176])
	(unreachable)
	(unreachable)
	return [1]
}

int_32 .FUNC $8 (int_32 $0)
{
	return CALL $7($0)
}

void .FUNC $9 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

int_32 .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $4())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $5($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $7 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $1($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $1($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $4 ()
{
	return [8208]
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $1($1)
	
.LABEL $label$2
	*(CALL $4()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $1(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $2($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $2 (int_32 $0)
{
}

void .FUNC $3 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $0 ()
{
	CALL $3()
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8240])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	CALL $13($0, $1)
}

void .FUNC $15 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $16 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $10 (int_32 $0)
{
	CALL $9($0)
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $6(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $6(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	return CALL $11($0, $1)
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

int_64 .FUNC $39 (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($2) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$3 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$2 > (int_32)[0]) ){ goto $label$3 }
	if ( ((($2 & [2147483647]) | $3) == 0) ){ goto $label$2 }
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$3 }
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
	
.LABEL $label$3
	$4 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $4) ){ goto $label$4 }
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = [0]
	$6 = $3
	if ( (($2 & [1048576]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = [0]
	
.LOOP $label$9:
	$2 = uint_32($3 >> [11])
	$4 = ($4 + [-21])
	$6 = ($3 << [21])
	$3 = $6
	if ( ($2 == 0) ){ goto $label$9 }
	if ( ($2 & [1048576]) ){ goto $label$6 }
	
.LABEL $label$7
	$5 = [0]
	
.LOOP $label$10:
	$5 = ($5 + [1])
	$3 = ($2 & [524288])
	$7 = ($2 << [1])
	$2 = $7
	if ( ($3 == 0) ){ goto $label$10 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $2
	
.LABEL $label$5
	$3 = ($6 << $5)
	$4 = (($4 + [1]) - $5)
	$2 = (uint_32($6 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$2 = (($2 & [1048575]) | [1048576])
	$7 = ($4 + [-1023])
	if ( (($7 & [1]) == 0) ){ goto $label$11 }
	$2 = (($2 << [1]) | uint_32($3 >> [31]))
	$3 = ($3 << [1])
	
.LABEL $label$11
	$5 = (uint_32($3 >> [31]) | ($2 << [1]))
	$2 = ((int_32)$5 < (int_32)[2097152])
	$8 = ( [0] ? [2097152] : $2 )
	$5 = ( [0] ? [4194304] : $2 )
	$2 = ($5 | [1048576])
	$5 = ($5 << [1])
	$4 = (( $5 ? ($5 + [-4194304]) : $2 ) | (uint_32($3 >> [30]) & [1]))
	if ( ((int_32)$4 < (int_32)$2) ){ goto $label$12 }
	$8 = ($8 | [1048576])
	$4 = ($4 - $2)
	$5 = ($2 + [1048576])
	
.LABEL $label$12
	$4 = ($5 + [524288])
	$2 = (($4 << [1]) | (uint_32($3 >> [29]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$13 }
	$8 = ($8 + [524288])
	$2 = ($2 - $4)
	$5 = ($5 + [1048576])
	
.LABEL $label$13
	$4 = ($5 + [262144])
	$2 = (($2 << [1]) | (uint_32($3 >> [28]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$14 }
	$8 = ($8 + [262144])
	$2 = ($2 - $4)
	$5 = ($5 + [524288])
	
.LABEL $label$14
	$4 = ($5 + [131072])
	$2 = (($2 << [1]) | (uint_32($3 >> [27]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$15 }
	$8 = ($8 + [131072])
	$2 = ($2 - $4)
	$5 = ($5 + [262144])
	
.LABEL $label$15
	$4 = ($5 + [65536])
	$2 = (($2 << [1]) | (uint_32($3 >> [26]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$16 }
	$8 = ($8 + [65536])
	$2 = ($2 - $4)
	$5 = ($5 + [131072])
	
.LABEL $label$16
	$4 = ($5 + [32768])
	$2 = (($2 << [1]) | (uint_32($3 >> [25]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$17 }
	$8 = ($8 + [32768])
	$2 = ($2 - $4)
	$5 = ($5 + [65536])
	
.LABEL $label$17
	$4 = ($5 + [16384])
	$2 = (($2 << [1]) | (uint_32($3 >> [24]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$18 }
	$8 = ($8 + [16384])
	$2 = ($2 - $4)
	$5 = ($5 + [32768])
	
.LABEL $label$18
	$4 = ($5 + [8192])
	$2 = (($2 << [1]) | (uint_32($3 >> [23]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$19 }
	$8 = ($8 + [8192])
	$2 = ($2 - $4)
	$5 = ($5 + [16384])
	
.LABEL $label$19
	$4 = ($5 + [4096])
	$2 = (($2 << [1]) | (uint_32($3 >> [22]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$20 }
	$8 = ($8 + [4096])
	$2 = ($2 - $4)
	$5 = ($5 + [8192])
	
.LABEL $label$20
	$4 = ($5 + [2048])
	$2 = (($2 << [1]) | (uint_32($3 >> [21]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$21 }
	$8 = ($8 + [2048])
	$2 = ($2 - $4)
	$5 = ($5 + [4096])
	
.LABEL $label$21
	$4 = ($5 + [1024])
	$2 = (($2 << [1]) | (uint_32($3 >> [20]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$22 }
	$8 = ($8 + [1024])
	$2 = ($2 - $4)
	$5 = ($5 + [2048])
	
.LABEL $label$22
	$4 = ($5 + [512])
	$2 = (($2 << [1]) | (uint_32($3 >> [19]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$23 }
	$8 = ($8 + [512])
	$2 = ($2 - $4)
	$5 = ($5 + [1024])
	
.LABEL $label$23
	$4 = ($5 + [256])
	$2 = (($2 << [1]) | (uint_32($3 >> [18]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$24 }
	$8 = ($8 + [256])
	$2 = ($2 - $4)
	$5 = ($5 + [512])
	
.LABEL $label$24
	$4 = ($5 + [128])
	$2 = (($2 << [1]) | (uint_32($3 >> [17]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$25 }
	$8 = ($8 + [128])
	$2 = ($2 - $4)
	$5 = ($5 + [256])
	
.LABEL $label$25
	$4 = ($5 + [64])
	$2 = (($2 << [1]) | (uint_32($3 >> [16]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$26 }
	$8 = ($8 + [64])
	$2 = ($2 - $4)
	$5 = ($5 + [128])
	
.LABEL $label$26
	$4 = ($5 + [32])
	$2 = (($2 << [1]) | (uint_32($3 >> [15]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$27 }
	$8 = ($8 + [32])
	$2 = ($2 - $4)
	$5 = ($5 + [64])
	
.LABEL $label$27
	$4 = ($5 + [16])
	$2 = (($2 << [1]) | (uint_32($3 >> [14]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$28 }
	$8 = ($8 + [16])
	$2 = ($2 - $4)
	$5 = ($5 + [32])
	
.LABEL $label$28
	$4 = ($5 + [8])
	$2 = (($2 << [1]) | (uint_32($3 >> [13]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$29 }
	$8 = ($8 + [8])
	$2 = ($2 - $4)
	$5 = ($5 + [16])
	
.LABEL $label$29
	$4 = ($5 + [4])
	$2 = (($2 << [1]) | (uint_32($3 >> [12]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$30 }
	$8 = ($8 + [4])
	$2 = ($2 - $4)
	$5 = ($5 + [8])
	
.LABEL $label$30
	$4 = ($5 + [2])
	$2 = (($2 << [1]) | (uint_32($3 >> [11]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$31 }
	$8 = ($8 + [2])
	$2 = ($2 - $4)
	$5 = ($5 + [4])
	
.LABEL $label$31
	$2 = ($5 + [1])
	$4 = (($2 << [1]) | (uint_32($3 >> [10]) & [1]))
	if ( ((int_32)$4 < (int_32)$2) ){ goto $label$32 }
	$8 = ($8 + [1])
	$4 = ($4 - $2)
	$5 = ($5 + [2])
	
.LABEL $label$32
	$2 = ($3 << [23])
	$3 = (($4 << [1]) | (uint_32($3 >> [9]) & [1]))
	$9 = uint_32($7 >> [1])
	$4 = [-2147483648]
	$10 = [0]
	$6 = [0]
	
.LOOP $label$33:
	$7 = ($6 + $4)
	if ( ((int_32)$3 > (int_32)$5) ){ goto $label$35 }
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$34 }
	if ( ($2 <= $7) ){ goto $label$34 }
	
.LABEL $label$35
	$3 = (($3 - $5) - ($2 <= $7))
	$6 = ($7 + $4)
	$5 = ($5 + (((int_32)$7 < (int_32)[0]) & ((int_32)$6 > (int_32)[-1])))
	$10 = ($10 + $4)
	$2 = ($2 - $7)
	
.LABEL $label$34
	$3 = (uint_32($2 >> [31]) | ($3 << [1]))
	$2 = ($2 << [1])
	$4 = uint_32($4 >> [1])
	if ( $4 ){ goto $label$33 }
	if ( (($2 | $3) == 0) ){ goto $label$36 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$37 }
	$10 = (($10 & [1]) + $10)
	goto $label$36 
	
.LABEL $label$37
	$8 = ($8 + [1])
	$10 = [0]
	
.LABEL $label$36
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($9 << [20]) + int_32($8 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($8 << [31])))))
	
.LABEL $label$2
	return $0
}

int_64 .FUNC $18 (float_64 $0, int_32 $1)
{
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	if ( ((int_32)$1 < (int_32)[2047]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	if ( ((int_32)$1 > (int_32)[-1992]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($1 + [-1023])
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 + [969])
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_64 .FUNC $19 (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

void .FUNC $338 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $339 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $336 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [112])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$1
	*(($5 = CALL $7([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [28 align=4]) = (int_64)0
	*($5 + [48]) = $1
	$3 = *($3)
	*($5) = *($3)
	*($5 + [8]) = *(($3 + [8]))
	*($5 + [16]) = *(($3 + [16]))
	*(($6 = ($5 + [24]))) = *(($3 + [24]))
	*($5 + [32]) = *(($3 + [32]))
	*(($7 = ($5 + [40]))) = *(($3 + [40]))
	*($4 + [64]) = ($4 + [41])
	*($4 + [60]) = $4
	*($4 + [56]) = $4
	*($4 + [72]) = ($4 + [56])
	*($4 + [84]) = ($5 + [8])
	*($4 + [80]) = $5
	*($4 + [88]) = ($5 + [16])
	*($4 + [92]) = $6
	*($4 + [96]) = ($5 + [28])
	*($4 + [100]) = ($5 + [32])
	*($4 + [104]) = $7
	CALL $337(($4 + [80]), ($4 + [72]))
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)3849324904583266304, $2, (int_64)3849324904583266304, $4, [41])
	*($5 + [52]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)3849324904583266304) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)3849324904583266305
	
.LABEL $label$2
	*($4 + [80]) = $5
	*($4) = (int_64)3849324904583266304
	*($4 + [56]) = $6
	$3 = *(($1 + [28]))
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)3849324904583266304
	*($3 + [16]) = $6
	*($4 + [80]) = [0]
	*($3) = $5
	*(($1 + [28])) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $338(($1 + [24]), ($4 + [80]), $4, ($4 + [56]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [112])
}

void .FUNC $337 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [9341])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9341])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $334 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[12]) >= (uint_32)$1) ){ goto $label$4 }
	$4 = *($0)
	$3 = ((int_32)($3 - $4) / (int_32)[12])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$2 = ((int_32)($2 - $4) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$5 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$5
	$2 = CALL $7(((int_32)$6 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$4
	$6 = $3
	$2 = $1
	
.LOOP $label$6:
	*($6) = (int_64)0
	*(($6 + [8])) = [0]
	$6 = ($6 + [12])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$6 }
	*(($0 + [4])) = ($3 + ((int_32)$1 * (int_32)[12]))
	return (unreachable)
	
.LABEL $label$3
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$4 = ($2 + ((int_32)$6 * (int_32)[12]))
	$3 = ($2 + ((int_32)$3 * (int_32)[12]))
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = [0]
	$6 = ($6 + [12])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	$5 = ($3 + ((int_32)$1 * (int_32)[12]))
	$2 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = ($6 + [-4])
	*(($3 + [-4])) = *($1)
	$6 = ($6 + [-12])
	*(($3 = ($3 + [-12]))) = *($6)
	*($6) = (int_64)0
	*($1) = [0]
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$1 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$1 = $2
	
.LABEL $label$8
	*($0) = $3
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$6 = ($2 + [-12])
	if ( ((*($6) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($2 + [-4])))
	
.LABEL $label$13
	$2 = $6
	if ( ((int_32)$1 != (int_32)$6) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($1 == 0) ){ goto $label$14 }
	CALL $9($1)
	
.LABEL $label$14
}

int_32 .FUNC $335 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [28 align=4]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [28])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [40])
	CALL $339(($3 + [32]), ($3 + [24]))
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	*($3 + [32]) = (int_64)3849324904583266304
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)3849324904583266304
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $338(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $332 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10867])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$5 = *($1)
	$7 = *($1 + [4])
	$6 = ((int_32)($7 - $5) / (int_32)[12])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $334($1, ($2 - $6))
	$7 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$6 = ($5 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($7 + [-12])
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($7 + [-4])))
	
.LABEL $label$9
	$7 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $6
	$7 = $6
	
.LABEL $label$6
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$10:
	CALL $228($0, $2)
	$2 = ($2 + [12])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$10 }
	
.LABEL $label$3
	return $0
}

void .FUNC $333 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($5 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$6 = ($4 + ((int_32)$7 * (int_32)[24]))
	$8 = ($1 + [24])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$1 = (($4 + $5) + [-24])
	
.LOOP $label$7:
	$4 = ($7 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($7 + [-8]))
	*(($1 + [8])) = *(($7 + [-16]))
	$1 = ($1 + [-24])
	$7 = $4
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $8
	*(($0 + [8])) = $6
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	$4 = *($3 + [8])
	if ( ($4 == 0) ){ goto $label$11 }
	$0 = ($3 + [12])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = ($7 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($7 + [-4])))
	
.LABEL $label$15
	$7 = $1
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$14 }
	$1 = *(($3 + [8]))
	goto $label$12 
	
.LABEL $label$13
	$1 = $4
	
.LABEL $label$12
	*($0) = $4
	CALL $9($1)
	
.LABEL $label$11
	CALL $9($3)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $9($5)
	
.LABEL $label$16
	(unreachable)
}

void .FUNC $330 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	CALL $228(*($1), *($0 + [12]))
	CALL $228(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $1) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $1, [8])
	*($4 + [8]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $331 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [28]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [36])))
	
.LABEL $label$11
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($1 + [24])))
	
.LABEL $label$12
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $9($2)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $116 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9733])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9779])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($6 = ($1 + [8]))) = *(($3 + [8]))
	$3 = $4
	$4 = ($3 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($6)
	CALL memcpy(($3 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-8381914203957624832) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)-8381914203957624831
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $117 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$1
	$5 = CALL $7([32])
	CALL $111($5)
	*($5 + [16]) = $1
	$3 = *($3)
	*($5) = *($3)
	*(($6 = ($5 + [8]))) = *(($3 + [8]))
	CALL memcpy(($4 + [16]), $5, [8])
	*($4 + [40]) = *($6)
	CALL memcpy((($4 + [16]) | [8]), ($4 + [40]), [8])
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)-8381914203957624832, $2, (int_64)-8381914203957624832, ($4 + [16]), [16])
	*($5 + [20]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-8381914203957624832) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)-8381914203957624831
	
.LABEL $label$2
	*($4 + [40]) = $5
	*($4 + [16]) = (int_64)-8381914203957624832
	*($4 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)-8381914203957624832
	*($3 + [16]) = $6
	*($4 + [40]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $374(($1 + [24]), ($4 + [40]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$1 = *($4 + [40])
	*($4 + [40]) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $9($1)
	
.LABEL $label$5
	$global$0 = ($4 + [48])
}

int_32 .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($3 = $2) + [44]) = $1
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$2 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$5 = CALL $1($4)
	$2 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $4)
	*($3 + [12]) = ($3 + [32])
	*($3 + [16]) = ($3 + [44])
	*($3 + [8]) = $0
	$1 = CALL $7([32])
	$6 = CALL $373($1, $0, ($3 + [8]))
	*($3 + [24]) = $1
	*($3 + [8]) = (int_64)-8381914203957624832
	$7 = *($1 + [20])
	*($3 + [4]) = $7
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)-8381914203957624832
	*($4 + [16]) = $7
	*($3 + [24]) = [0]
	*($4) = $1
	*($8) = ($4 + [24])
	if ( $2 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $374(($0 + [24]), ($3 + [24]), ($3 + [8]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($5)
	
.LABEL $label$7
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	CALL $9($5)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $6
}

void .FUNC $115 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10474])
	
.LABEL $label$1
	$5 = CALL $7([32])
	CALL $111($5)
	*($5 + [16]) = $1
	$3 = *($3)
	*($5) = *($3)
	*(($6 = ($5 + [8]))) = *(($3 + [8]))
	CALL memcpy(($4 + [16]), $5, [8])
	*($4 + [40]) = *($6)
	CALL memcpy((($4 + [16]) | [8]), ($4 + [40]), [8])
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)-8381914203957624832, $2, (int_64)-8381914203957624832, ($4 + [16]), [16])
	*($5 + [20]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-8381914203957624832) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)-8381914203957624831
	
.LABEL $label$2
	*($4 + [40]) = $5
	*($4 + [16]) = (int_64)-8381914203957624832
	*($4 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)-8381914203957624832
	*($3 + [16]) = $6
	*($4 + [40]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $374(($1 + [24]), ($4 + [40]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$1 = *($4 + [40])
	*($4 + [40]) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $9($1)
	
.LABEL $label$5
	$global$0 = ($4 + [48])
}

void .FUNC $112 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = *(($1 + [28]))
	if ( ((int_32)$5 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$5 = *(($5 + [-24]))
	if ( ((int_32)*($5 + [16]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-8381914203957624832, (int_64)-8381914203957624832)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $114($1, $5)
	if ( ((int_32)*($5 + [16]) == (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$1
	*($4 + [8]) = $3
	CALL $115($4, $1, $2, ($4 + [8]))
	$1 = *($4 + [4])
	*($0) = *($1)
	*(($0 + [8])) = *(($1 + [8]))
	$global$0 = ($4 + [16])
}

void .FUNC $113 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [16]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-8381914203957624832, (int_64)-8381914203957624832)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $114($0, $4)
	if ( ((int_32)*($4 + [16]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$2
	*($3) = $1
	CALL $116($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $117($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$global$0 = $2
	*((($2 + [104]) + [32])) = [0]
	*($2 + [120]) = (int_64)-1
	*($2 + [128]) = (int_64)0
	$3 = *($0)
	*($2 + [104]) = $3
	*($2 + [112]) = $3
	CALL $73(($2 + [72]), ($2 + [104]))
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	if ( CALL has_auth(*($2 + [72])) ){ goto $label$1 }
	CALL eosio_assert([0], [8521])
	
.LABEL $label$1
	*((($2 + [32]) + [32])) = [0]
	*($2 + [48]) = (int_64)-1
	*($2 + [56]) = (int_64)0
	$3 = *($0)
	*($2 + [32]) = $3
	*($2 + [40]) = $3
	*(($2 + [8])) = (int_64)0
	*($2) = (int_64)0
	CALL $112(($2 + [16]), ($2 + [32]), $3, CALL $111($2))
	if ( ((int_64)*($1 + [8]) == (int_64)*($2 + [24])) ){ goto $label$2 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$2
	$3 = ((int_64)*($2 + [16]) + (int_64)*($1))
	*($2 + [16]) = $3
	if ( ((int_64)$3 > (int_64)-4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [9557])
	$3 = *($2 + [16])
	
.LABEL $label$3
	if ( ((int_64)$3 < (int_64)4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9576])
	
.LABEL $label$4
	CALL $113(($2 + [32]), ($2 + [16]), *($0))
	$4 = *($2 + [56])
	if ( ($4 == 0) ){ goto $label$5 }
	$5 = ($2 + [60])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $9($1)
	
.LABEL $label$9
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($2 + [56]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $4
	
.LABEL $label$6
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$5
	$4 = *($2 + [128])
	if ( ($4 == 0) ){ goto $label$10 }
	$5 = ($2 + [132])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$14 }
	CALL $9($1)
	
.LABEL $label$14
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($2 + [128]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $4
	
.LABEL $label$11
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$10
	$global$0 = ($2 + [144])
}

int_32 .FUNC $111 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$1 = ($global$0 - [16])
	$global$0 = $1
	*(($1 + [8])) = [0]
	*($1) = (int_64)0
	$2 = CALL $16([10651])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$5 }
	*($1) = ($2 << [1])
	$3 = ($1 | [1])
	$4 = $3
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = (($2 + [16]) & [-16])
	$4 = CALL $7($3)
	*($1) = ($3 | [1])
	*($1 + [8]) = $4
	*($1 + [4]) = $2
	$3 = ($1 | [1])
	
.LABEL $label$4
	CALL memcpy($4, [10651], $2)
	
.LABEL $label$3
	*(($4 + $2)) = [0]
	$5 = ( *($1 + [8]) ? $3 : (*($1) & [1]) )
	$2 = CALL $16($5)
	if ( ($2 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9347])
	goto $label$7 
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$6 = (int_64)0
	
.LOOP $label$9:
	$3 = (($5 + $2) + [-1])
	$4 = *($3)
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [9392])
	$4 = *($3)
	
.LABEL $label$10
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$9 }
	goto $label$1 
	
.LABEL $label$6
	$6 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	CALL $25($1)
	
.LABEL $label$1
	*($0) = (int_64)0
	*($0 + [8]) = ((int_64)((int_64)$6 << (int_64)8) | (int_64)8)
	$6 = ((int_64)$6 & (int_64)72057594037927935)
	$2 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$16 }
	$6 = $7
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$16
	$6 = $7
	
.LOOP $label$17:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$3 = ($2 + [1])
	$2 = $3
	if ( $4 ){ goto $label$17 }
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$14 }
	
.LABEL $label$15
	if ( ((*($1) & [1]) == 0) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [9494])
	if ( ((*($1) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $9(*(($1 + [8])))
	
.LABEL $label$11
	$global$0 = ($1 + [16])
	(unreachable)
	return $0
}

void .FUNC $118 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	float_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	float_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	float_32 $15
	float_32 $16
	float_32 $17
	float_32 $18
	int_32 $19
	int_32 $20
	$1 = ($global$0 - [400])
	$global$0 = $1
	*((($1 + [352]) + [32])) = [0]
	*($1 + [368]) = (int_64)-1
	*($1 + [376]) = (int_64)0
	$2 = *($0)
	*($1 + [352]) = $2
	*($1 + [360]) = $2
	CALL $73(($1 + [320]), ($1 + [352]))
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	if ( CALL has_auth(*($1 + [320])) ){ goto $label$1 }
	CALL eosio_assert([0], [8521])
	
.LABEL $label$1
	*($1 + [312]) = [0]
	*($1 + [304]) = (int_64)0
	*((($1 + [264]) + [32])) = [0]
	*($1 + [280]) = (int_64)-1
	*($1 + [288]) = (int_64)0
	$2 = *($0)
	*($1 + [264]) = $2
	*($1 + [272]) = $2
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)-6497942611737529472, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $92(($1 + [264]), $3)
	$4 = (float_32)0
	$5 = ($0 + [48])
	$6 = ($1 + [312])
	
.LOOP $label$4:
	*($1 + [224]) = [0]
	$7 = [0]
	if ( ((int_64)*($3 + [88]) < (int_64)1) ){ goto $label$5 }
	$8 = ((float_32)(float_32)100 / (float_32)((float_32)(CASTING float_32)(uint_64 *($3 + [16])) / (float_32)(CASTING float_32)(uint_64 *($5))))
	*($1 + [224]) = $8
	$7 = (CASTING int_32)(float_32 $8)
	
.LABEL $label$5
	$9 = *($1 + [308])
	if ( ((int_32)$9 == (int_32)*($6)) ){ goto $label$7 }
	*($9) = $7
	*($1 + [308]) = ($9 + [4])
	goto $label$6 
	
.LABEL $label$7
	CALL $119(($1 + [304]), ($1 + [224]))
	
.LABEL $label$6
	$4 = ((float_32)$4 + (float_32)*($1 + [224]))
	$3 = CALL db_next_i64(*($3 + [124]), ($1 + [128]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $92(($1 + [264]), $3)
	goto $label$4 
	
.LABEL $label$3
	$4 = (float_32)0
	
.LABEL $label$2
	*((($1 + [224]) + [32])) = [0]
	*($1 + [240]) = (int_64)-1
	*($1 + [248]) = (int_64)0
	$2 = *($0)
	*($1 + [224]) = $2
	*($1 + [232]) = $2
	CALL $71(($1 + [128]), ($1 + [224]))
	$10 = *($1 + [160])
	*((($1 + [88]) + [32])) = [0]
	*($1 + [104]) = (int_64)-1
	*($1 + [112]) = (int_64)0
	$2 = *($0)
	*($1 + [88]) = $2
	*($1 + [96]) = $2
	$3 = CALL db_find_i64($2, $2, (int_64)-4992088121770901504, (int_64)-4992088121770901504)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$12 }
	$3 = CALL $88(($1 + [88]), $3)
	if ( ((int_32)*($3 + [32]) == (int_32)($1 + [88])) ){ goto $label$13 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$13
	$11 = *($3 + [8])
	$12 = *($3)
	*(($1 + [80])) = [0]
	*($1 + [64]) = (int_64)-1
	$2 = *($0)
	*($1 + [48]) = $2
	*($1 + [56]) = $2
	*($1 + [72]) = (int_64)0
	CALL $120(($1 + [32]), ($1 + [48]))
	$13 = *($1 + [40])
	$2 = *($1 + [32])
	$3 = CALL db_lowerbound_i64(*($1 + [264]), *((($1 + [264]) + [8])), (int_64)-6497942611737529472, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$9 }
	$14 = (uint_64)$13 >> (uint_64)(int_64)8)
	$15 = (CASTING float_32)(int_64 $2)
	$16 = (CASTING float_32)(uint_64 $11)
	$17 = (CASTING float_32)(uint_64 $12)
	$18 = (CASTING float_32)(int_64 $10)
	$19 = ($0 + [48])
	$5 = [0]
	$6 = CALL $92(($1 + [264]), $3)
	$2 = *($6 + [88])
	if ( ((int_64)$2 >= (int_64)1) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], [10525])
	
.LABEL $label$11
	$20 = [2]
	goto $label$8 
	
.LABEL $label$10
	$20 = [0]
	goto $label$8 
	
.LABEL $label$9
	$20 = [16]
	
.LABEL $label$8
	
.LOOP $label$14:
	goto $label$103 
	
.LABEL $label$118
	$5 = ($5 + [1])
	$6 = CALL $92(($1 + [264]), $3)
	$2 = *($6 + [88])
	if ( ((int_64)$2 < (int_64)1) ){ goto $label$53 }
	$20 = [2]
	goto $label$14 
	
.LABEL $label$117
	$8 = (CASTING float_32)(uint_64 *($19))
	$8 = ((float_32)((float_32)((float_32)((float_32)*((*($1 + [304]) + ($5 << [2]))) / (float_32)$4) * (float_32)((float_32)$17 / (float_32)$8)) + (float_32)((float_32)((float_32)(CASTING float_32)(int_64 $2) / (float_32)$18) * (float_32)((float_32)$16 / (float_32)$8))) * (float_32)$15)
	if ( ((float_32)(float_32)|$8| < (float_32)(float_32)9223372036854775808) ){ goto $label$52 }
	$20 = [15]
	goto $label$14 
	
.LABEL $label$116
	$11 = (int_64)-9223372036854775808
	if ( ((uint_64)((int_64)-9223372036854775808 + (int_64)4611686018427387903) >= (uint_64)(int_64)9223372036854775807) ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$115
	$11 = (Rounds 0)($8)
	if ( (uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$51 }
	$20 = [4]
	goto $label$14 
	
.LABEL $label$114
	CALL eosio_assert([0], [9445])
	$20 = [5]
	goto $label$14 
	
.LABEL $label$113
	$3 = [0]
	$2 = $14
	$20 = [6]
	goto $label$14 
	
.LABEL $label$112
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$44 }
	$20 = [9]
	goto $label$14 
	
.LABEL $label$111
	$10 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$42 }
	$20 = [10]
	goto $label$14 
	
.LABEL $label$110
	$2 = $10
	$7 = $3
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$109
	$2 = $10
	$20 = [12]
	goto $label$14 
	
.LABEL $label$108
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$43 }
	$20 = [13]
	goto $label$14 
	
.LABEL $label$107
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$3 < (int_32)[6])
	$9 = ($3 + [1])
	$3 = $9
	if ( $7 ){ goto $label$41 }
	$20 = [14]
	goto $label$14 
	
.LABEL $label$106
	$3 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$105
	CALL eosio_assert([0], [9494])
	$20 = [8]
	goto $label$14 
	
.LABEL $label$104
	$2 = *($6)
	*((($1 + [16]) + [8])) = $13
	*(($1 + [8])) = $13
	*($1) = $11
	*($1 + [16]) = $11
	CALL $121($0, $2, $1)
	$20 = [0]
	goto $label$14 
	
.LABEL $label$103
	$3 = CALL db_next_i64(*($6 + [124]), ($1 + [392]))
	if ( ((int_32)$3 >= (int_32)[0]) ){ goto $label$54 }
	$20 = [16]
	goto $label$14 
	
.LABEL $label$102
	CALL $122($0)
	$9 = *($1 + [72])
	if ( ($9 == 0) ){ goto $label$40 }
	$20 = [17]
	goto $label$14 
	
.LABEL $label$101
	$6 = ($1 + [76])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$39 }
	$20 = [18]
	goto $label$14 
	
.LABEL $label$100
	$20 = [19]
	goto $label$14 
	
.LABEL $label$99
	$3 = ($3 + [-24])
	$7 = *($3)
	*($3) = [0]
	if ( ($7 == 0) ){ goto $label$37 }
	$20 = [20]
	goto $label$14 
	
.LABEL $label$98
	CALL $9($7)
	$20 = [21]
	goto $label$14 
	
.LABEL $label$97
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$38 }
	$20 = [22]
	goto $label$14 
	
.LABEL $label$96
	$3 = *(($1 + [72]))
	goto $label$36 
	
.LABEL $label$95
	$3 = $9
	$20 = [23]
	goto $label$14 
	
.LABEL $label$94
	*($6) = $9
	CALL $9($3)
	$20 = [24]
	goto $label$14 
	
.LABEL $label$93
	$9 = *($1 + [112])
	if ( ($9 == 0) ){ goto $label$35 }
	$20 = [25]
	goto $label$14 
	
.LABEL $label$92
	$6 = ($1 + [116])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$34 }
	$20 = [26]
	goto $label$14 
	
.LABEL $label$91
	$20 = [27]
	goto $label$14 
	
.LABEL $label$90
	$3 = ($3 + [-24])
	$7 = *($3)
	*($3) = [0]
	if ( ($7 == 0) ){ goto $label$32 }
	$20 = [28]
	goto $label$14 
	
.LABEL $label$89
	CALL $9($7)
	$20 = [29]
	goto $label$14 
	
.LABEL $label$88
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$33 }
	$20 = [30]
	goto $label$14 
	
.LABEL $label$87
	$3 = *(($1 + [112]))
	goto $label$31 
	
.LABEL $label$86
	$3 = $9
	$20 = [31]
	goto $label$14 
	
.LABEL $label$85
	*($6) = $9
	CALL $9($3)
	$20 = [32]
	goto $label$14 
	
.LABEL $label$84
	$9 = *($1 + [248])
	if ( ($9 == 0) ){ goto $label$30 }
	$20 = [33]
	goto $label$14 
	
.LABEL $label$83
	$6 = ($1 + [252])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$29 }
	$20 = [34]
	goto $label$14 
	
.LABEL $label$82
	$20 = [35]
	goto $label$14 
	
.LABEL $label$81
	$3 = ($3 + [-24])
	$7 = *($3)
	*($3) = [0]
	if ( ($7 == 0) ){ goto $label$27 }
	$20 = [36]
	goto $label$14 
	
.LABEL $label$80
	CALL $9($7)
	$20 = [37]
	goto $label$14 
	
.LABEL $label$79
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$28 }
	$20 = [38]
	goto $label$14 
	
.LABEL $label$78
	$3 = *(($1 + [248]))
	goto $label$26 
	
.LABEL $label$77
	$3 = $9
	$20 = [39]
	goto $label$14 
	
.LABEL $label$76
	*($6) = $9
	CALL $9($3)
	$20 = [40]
	goto $label$14 
	
.LABEL $label$75
	$9 = *($1 + [288])
	if ( ($9 == 0) ){ goto $label$25 }
	$20 = [41]
	goto $label$14 
	
.LABEL $label$74
	$6 = ($1 + [292])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$24 }
	$20 = [42]
	goto $label$14 
	
.LABEL $label$73
	$20 = [43]
	goto $label$14 
	
.LABEL $label$72
	$3 = ($3 + [-24])
	$7 = *($3)
	*($3) = [0]
	if ( ($7 == 0) ){ goto $label$22 }
	$20 = [44]
	goto $label$14 
	
.LABEL $label$71
	CALL $9($7)
	$20 = [45]
	goto $label$14 
	
.LABEL $label$70
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$23 }
	$20 = [46]
	goto $label$14 
	
.LABEL $label$69
	$3 = *(($1 + [288]))
	goto $label$21 
	
.LABEL $label$68
	$3 = $9
	$20 = [47]
	goto $label$14 
	
.LABEL $label$67
	*($6) = $9
	CALL $9($3)
	$20 = [48]
	goto $label$14 
	
.LABEL $label$66
	$3 = *($1 + [304])
	if ( ($3 == 0) ){ goto $label$20 }
	$20 = [49]
	goto $label$14 
	
.LABEL $label$65
	*($1 + [308]) = $3
	CALL $9($3)
	$20 = [50]
	goto $label$14 
	
.LABEL $label$64
	$9 = *($1 + [376])
	if ( ($9 == 0) ){ goto $label$19 }
	$20 = [51]
	goto $label$14 
	
.LABEL $label$63
	$6 = ($1 + [380])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$18 }
	$20 = [52]
	goto $label$14 
	
.LABEL $label$62
	$20 = [53]
	goto $label$14 
	
.LABEL $label$61
	$3 = ($3 + [-24])
	$7 = *($3)
	*($3) = [0]
	if ( ($7 == 0) ){ goto $label$16 }
	$20 = [54]
	goto $label$14 
	
.LABEL $label$60
	CALL $9($7)
	$20 = [55]
	goto $label$14 
	
.LABEL $label$59
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$17 }
	$20 = [56]
	goto $label$14 
	
.LABEL $label$58
	$3 = *(($1 + [376]))
	goto $label$15 
	
.LABEL $label$57
	$3 = $9
	$20 = [57]
	goto $label$14 
	
.LABEL $label$56
	*($6) = $9
	CALL $9($3)
	$20 = [58]
	goto $label$14 
	
.LABEL $label$55
	$global$0 = ($1 + [400])
	return 
	
.LABEL $label$54
	$20 = [1]
	goto $label$14 
	
.LABEL $label$53
	$20 = [0]
	goto $label$14 
	
.LABEL $label$52
	$20 = [3]
	goto $label$14 
	
.LABEL $label$51
	$20 = [5]
	goto $label$14 
	
.LABEL $label$50
	$20 = [5]
	goto $label$14 
	
.LABEL $label$49
	$20 = [4]
	goto $label$14 
	
.LABEL $label$48
	$20 = [6]
	goto $label$14 
	
.LABEL $label$47
	$20 = [8]
	goto $label$14 
	
.LABEL $label$46
	$20 = [6]
	goto $label$14 
	
.LABEL $label$45
	$20 = [8]
	goto $label$14 
	
.LABEL $label$44
	$20 = [7]
	goto $label$14 
	
.LABEL $label$43
	$20 = [7]
	goto $label$14 
	
.LABEL $label$42
	$20 = [11]
	goto $label$14 
	
.LABEL $label$41
	$20 = [12]
	goto $label$14 
	
.LABEL $label$40
	$20 = [24]
	goto $label$14 
	
.LABEL $label$39
	$20 = [63]
	goto $label$14 
	
.LABEL $label$38
	$20 = [19]
	goto $label$14 
	
.LABEL $label$37
	$20 = [21]
	goto $label$14 
	
.LABEL $label$36
	$20 = [23]
	goto $label$14 
	
.LABEL $label$35
	$20 = [32]
	goto $label$14 
	
.LABEL $label$34
	$20 = [62]
	goto $label$14 
	
.LABEL $label$33
	$20 = [27]
	goto $label$14 
	
.LABEL $label$32
	$20 = [29]
	goto $label$14 
	
.LABEL $label$31
	$20 = [31]
	goto $label$14 
	
.LABEL $label$30
	$20 = [40]
	goto $label$14 
	
.LABEL $label$29
	$20 = [61]
	goto $label$14 
	
.LABEL $label$28
	$20 = [35]
	goto $label$14 
	
.LABEL $label$27
	$20 = [37]
	goto $label$14 
	
.LABEL $label$26
	$20 = [39]
	goto $label$14 
	
.LABEL $label$25
	$20 = [48]
	goto $label$14 
	
.LABEL $label$24
	$20 = [60]
	goto $label$14 
	
.LABEL $label$23
	$20 = [43]
	goto $label$14 
	
.LABEL $label$22
	$20 = [45]
	goto $label$14 
	
.LABEL $label$21
	$20 = [47]
	goto $label$14 
	
.LABEL $label$20
	$20 = [50]
	goto $label$14 
	
.LABEL $label$19
	$20 = [58]
	goto $label$14 
	
.LABEL $label$18
	$20 = [59]
	goto $label$14 
	
.LABEL $label$17
	$20 = [53]
	goto $label$14 
	
.LABEL $label$16
	$20 = [55]
	goto $label$14 
	
.LABEL $label$15
	$20 = [57]
	goto $label$14 
	(unreachable)
	$20
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [2])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$6 = [1073741823]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [2]) > (uint_32)[536870910]) ){ goto $label$5 }
	$6 = int_32($7 >> [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $7(($6 << [2]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $15($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [2])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [2]))
	$5 = ($4 + [4])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $9($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $299 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	float_64 $9
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [16])
	$4 = *($0)
	$5 = *($4 + [16])
	if ( ((int_64)$5 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$5 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = (int_64)0
	$6 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-4421661421696319488, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $69($4, $6)
	*($2 + [28]) = [0]
	*($2 + [24]) = $4
	$5 = *(*(CALL $301(($2 + [24])) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	*(($4 + [16])) = $5
	if ( (uint_64)($5 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [11078])
	$5 = *(($4 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($4 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $5
	*($1 + [8]) = *(*($0 + [4]))
	$4 = *($0 + [8])
	*(($1 + [24])) = *(($4 + [8]))
	*($1 + [16]) = *($4)
	$4 = *($0 + [12])
	*($1 + [32]) = *($4)
	*(($1 + [40])) = *(($4 + [8]))
	$0 = *($0 + [8])
	$5 = *($0)
	$5 = *(*($0 + [12]))
	CALL __multi3(($2 + [8]), $5, (int_64)$5 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	$7 = *($0 + [8])
	$8 = *((($2 + [8]) + [8]))
	$5 = *($2 + [8])
	if ( (( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$8 < (int_64)0) : (int_64)($8 == 0) ) == 0) ){ goto $label$6 }
	if ( ( ((uint_64)$5 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$8 > (int_64)-1) : ((int_64)$8 == (int_64)-1) ) ){ goto $label$5 }
	CALL eosio_assert([0], [11324])
	goto $label$5 
	
.LABEL $label$6
	CALL eosio_assert([0], [11300])
	
.LABEL $label$5
	$9 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *($3 + [68])))
	if ( ((float_64)(float_64)|$9| < (float_64)(float_64)9223372036854775808) ){ goto $label$11 }
	$8 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$8 = (Rounds 0)($9)
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [11038])
	$5 = ((int_64)$5 / (int_64)$8)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_64)$5 != (int_64)-9223372036854775808) ){ goto $label$12 }
	if ( ((int_64)$8 != (int_64)-1) ){ goto $label$12 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$12
	$5 = ((int_64)$5 / (int_64)$8)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [10984])
	
.LABEL $label$7
	*($1 + [48]) = $5
	*(($1 + [56])) = $7
	*($1 + [64]) = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $38()) * (int_64)500000) + (int_64)946684800000000) / (uint_64)(int_64)1000000)
	$global$0 = ($2 + [32])
}

void .FUNC $298 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $295 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [72]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11184])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)4520852774463733760)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [11130])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11130])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $70(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $294 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9341])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9341])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9341])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9341])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [9341])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, $4, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $297 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	$2 = ($global$0 - [128])
	$global$0 = $2
	$3 = *($0)
	CALL $299(*($0 + [4]), $1)
	*($2 + [88]) = ($2 + [68])
	*($2 + [84]) = $2
	*($2 + [80]) = $2
	*($2 + [96]) = ($2 + [80])
	*($2 + [108]) = ($1 + [8])
	*($2 + [104]) = $1
	*($2 + [112]) = ($1 + [16])
	*($2 + [116]) = ($1 + [32])
	*($2 + [120]) = ($1 + [48])
	*($2 + [124]) = ($1 + [64])
	CALL $300(($2 + [104]), ($2 + [96]))
	$4 = *($1)
	*($1 + [72]) = CALL db_store_i64(*($3 + [8]), (int_64)-4421661421696319488, *(*($0 + [8])), $4, $2, [68])
	if ( (uint_64)($4 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = ($3 + [8])
	$4 = *($3)
	$0 = *(($0 + [8]))
	$5 = *($0)
	$6 = *($1)
	*($2 + [104]) = *($1 + [8])
	*($1 + [76]) = CALL db_idx64_store($4, (int_64)-4421661421696319488, $5, $6, ($2 + [104]))
	$4 = *($0)
	$5 = *($3)
	$6 = *($1)
	*($2 + [104]) = *($1 + [16])
	*(($1 + [80])) = CALL db_idx64_store($5, (int_64)-4421661421696319487, $4, $6, ($2 + [104]))
	$global$0 = ($2 + [128])
}

void .FUNC $296 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $291 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	$2 = ($global$0 - [128])
	$global$0 = $2
	$3 = *($0)
	CALL $293(*($0 + [4]), $1)
	*($2 + [88]) = ($2 + [68])
	*($2 + [84]) = $2
	*($2 + [80]) = $2
	*($2 + [96]) = ($2 + [80])
	*($2 + [108]) = ($1 + [8])
	*($2 + [104]) = $1
	*($2 + [112]) = ($1 + [16])
	*($2 + [116]) = ($1 + [32])
	*($2 + [120]) = ($1 + [48])
	*($2 + [124]) = ($1 + [64])
	CALL $294(($2 + [104]), ($2 + [96]))
	$4 = *($1)
	*($1 + [72]) = CALL db_store_i64(*($3 + [8]), (int_64)4520852774463733760, *(*($0 + [8])), $4, $2, [68])
	if ( (uint_64)($4 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = ($3 + [8])
	$4 = *($3)
	$0 = *(($0 + [8]))
	$5 = *($0)
	$6 = *($1)
	*($2 + [104]) = *($1 + [8])
	*($1 + [76]) = CALL db_idx64_store($4, (int_64)4520852774463733760, $5, $6, ($2 + [104]))
	$4 = *($0)
	$5 = *($3)
	$6 = *($1)
	*($2 + [104]) = *($1 + [16])
	*(($1 + [80])) = CALL db_idx64_store($5, (int_64)4520852774463733761, $4, $6, ($2 + [104]))
	$global$0 = ($2 + [128])
}

void .FUNC $290 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

void .FUNC $293 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	float_64 $9
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [16])
	$4 = *($0)
	$5 = *($4 + [16])
	if ( ((int_64)$5 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$5 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = (int_64)0
	$6 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)4520852774463733760, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $70($4, $6)
	*($2 + [28]) = [0]
	*($2 + [24]) = $4
	$5 = *(*(CALL $295(($2 + [24])) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	*(($4 + [16])) = $5
	if ( (uint_64)($5 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [11078])
	$5 = *(($4 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($4 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $5
	*($1 + [8]) = *(*($0 + [4]))
	$4 = *($0 + [8])
	*(($1 + [24])) = *(($4 + [8]))
	*($1 + [16]) = *($4)
	$4 = *($0 + [12])
	*($1 + [32]) = *($4)
	*(($1 + [40])) = *(($4 + [8]))
	$0 = *($0 + [8])
	$5 = *($0)
	$5 = *(*($0 + [12]))
	CALL __multi3(($2 + [8]), $5, (int_64)$5 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	$7 = *($0 + [8])
	$8 = *((($2 + [8]) + [8]))
	$5 = *($2 + [8])
	if ( (( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$8 < (int_64)0) : (int_64)($8 == 0) ) == 0) ){ goto $label$6 }
	if ( ( ((uint_64)$5 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$8 > (int_64)-1) : ((int_64)$8 == (int_64)-1) ) ){ goto $label$5 }
	CALL eosio_assert([0], [11324])
	goto $label$5 
	
.LABEL $label$6
	CALL eosio_assert([0], [11300])
	
.LABEL $label$5
	$9 = CALL $40((float_64)10, (CASTING float_64)(uint_32 *($3 + [68])))
	if ( ((float_64)(float_64)|$9| < (float_64)(float_64)9223372036854775808) ){ goto $label$11 }
	$8 = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 == (int_64)0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$8 = (Rounds 0)($9)
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [11038])
	$5 = ((int_64)$5 / (int_64)$8)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_64)$5 != (int_64)-9223372036854775808) ){ goto $label$12 }
	if ( ((int_64)$8 != (int_64)-1) ){ goto $label$12 }
	CALL eosio_assert([0], [11053])
	
.LABEL $label$12
	$5 = ((int_64)$5 / (int_64)$8)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [10984])
	
.LABEL $label$7
	*($1 + [48]) = $5
	*(($1 + [56])) = $7
	*($1 + [64]) = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $38()) * (int_64)500000) + (int_64)946684800000000) / (uint_64)(int_64)1000000)
	$global$0 = ($2 + [32])
}

void .FUNC $292 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $198 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	*($2 + [36]) = [0]
	$4 = *($0)
	*($2) = $4
	*($2 + [8]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-4421661421696319488, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$3 }
	$3 = CALL $69($2, $5)
	if ( ((int_32)*($3 + [68]) == (int_32)$2) ){ goto $label$4 }
	CALL eosio_assert([0], [10423])
	
.LABEL $label$4
	CALL require_auth(*($0))
	if ( ($3 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [8961])
	CALL require_auth(*($0))
	if ( [0] ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10127])
	CALL eosio_assert([0], [9594])
	
.LABEL $label$1
	$0 = CALL db_next_i64(*($3 + [72]), ($2 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	CALL $69($2, $0)
	
.LABEL $label$5
	CALL $182($2, $3)
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($2 + [28])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $9($0)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($2 + [24]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($3)
	
.LABEL $label$6
	$global$0 = ($2 + [48])
}

void .FUNC $349 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $228(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $348 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [32])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $347 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [24 align=4]) = (int_64)0
	*($0 + [40]) = (int_64)0
	$4 = [0]
	*(($0 + [32])) = [0]
	*(($0 + [48])) = (int_64)1413891848
	$5 = (int_64)5523015
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $6
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $6
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $7 ){ goto $label$5 }
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9494])
	
.LABEL $label$1
	$4 = CALL $38()
	*($0 + [60]) = $1
	*($0 + [56]) = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $4) * (int_64)500000) + (int_64)946684800000000) / (uint_64)(int_64)1000000)
	*($3) = *($2 + [4])
	*($3 + [12]) = ($0 + [8])
	*($3 + [8]) = $0
	*($3 + [16]) = ($0 + [16])
	*($3 + [20]) = ($0 + [24])
	*($3 + [24]) = ($0 + [40])
	*($3 + [28]) = ($0 + [56])
	CALL $349(($3 + [8]), $3)
	*($0 + [64]) = *(*($2 + [8]))
	*($0 + [68 align=4]) = (int_64)-1
	$global$0 = ($3 + [32])
	return $0
}

int_32 .FUNC $346 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($3 = $2) + [44]) = $1
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$2 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$5 = CALL $1($4)
	$2 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $4)
	*($3 + [12]) = ($3 + [32])
	*($3 + [16]) = ($3 + [44])
	*($3 + [8]) = $0
	$1 = CALL $7([80])
	$6 = CALL $347($1, $0, ($3 + [8]))
	*($3 + [24]) = $1
	$7 = *($1)
	*($3 + [8]) = $7
	$8 = *($1 + [64])
	*($3 + [4]) = $8
	$9 = ($0 + [28])
	$4 = *($9)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $7
	*($4 + [16]) = $8
	*($3 + [24]) = [0]
	*($4) = $1
	*($9) = ($4 + [24])
	if ( $2 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $348(($0 + [24]), ($3 + [24]), ($3 + [8]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($5)
	
.LABEL $label$7
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($5 + [32])))
	
.LABEL $label$11
	CALL $9($5)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $6
}

void .FUNC $345 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $212 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [192])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [136]) = (int_64)0
	*($4 + [128]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$5
	$3 = ($2 + $7)
	CALL memcpy(($4 + [128]), $2, [8])
	*($4 + [48]) = (int_64)0
	$8 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	
.LABEL $label$6
	CALL memcpy(($4 + [48]), $8, [8])
	*(($8 = (($4 + [128]) + [8]))) = *($4 + [48])
	*((($4 + [16]) + [8])) = $3
	*($4 + [32]) = $2
	*($4 + [36]) = ($2 + [16])
	*($4 + [40]) = $3
	*($4 + [16]) = *($4 + [32])
	$3 = CALL $216(($4 + [48]), $0, $1, ($4 + [16]))
	*(($9 = (($4 + [144]) + [8]))) = *($8)
	*($4 + [144]) = *($4 + [128])
	*((($4 + [160]) + [8])) = *($9)
	*($4 + [160]) = *($4 + [144])
	$8 = (($4 + [48]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($8) + $6))
	
.LABEL $label$7
	$0 = *((($4 + [160]) + [8]))
	*((($4 + [176]) + [8])) = $0
	*(($4 + [8])) = $0
	$0 = *($4 + [160])
	*($4) = $0
	*($4 + [176]) = $0
	CALL void $8((int_32 $4), (int_32 $6))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$12 }
	$2 = [1]
	if ( (*($3 + [56]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $2($2)
	$2 = [1]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*(($3 + [64])))
	if ( (*($3 + [28]) & $2) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( ((*($3 + [28]) & $2) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [36])))
	
.LABEL $label$8
	$global$0 = ($4 + [192])
	return [1]
}

void .FUNC $343 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $228(*($1), *($0 + [20]))
	CALL $228(*($1), *($0 + [24]))
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[1]) ){ goto $label$9 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $1, [2])
	*(($0 = ($0 + [4]))) = (*($0) + [2])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $342 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10161])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([112])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56 align=4]) = (int_64)0
	*($5 + [64 align=4]) = (int_64)0
	*($5 + [72 align=4]) = (int_64)0
	*($5 + [88]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [56])
	*($3 + [64]) = ($5 + [68])
	*($3 + [68]) = ($5 + [80])
	*($3 + [72]) = ($5 + [84])
	CALL $343(($3 + [40]), ($3 + [32]))
	*($5 + [92]) = $1
	*($5 + [96 align=4]) = (int_64)-1
	*($5 + [104]) = [-1]
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $344(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [68]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [76])))
	
.LABEL $label$11
	if ( ((*($1 + [56]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($1 + [64])))
	
.LABEL $label$12
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $341 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($5 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$6 = ($4 + ((int_32)$7 * (int_32)[24]))
	$8 = ($1 + [24])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$1 = (($4 + $5) + [-24])
	
.LOOP $label$7:
	$4 = ($7 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($7 + [-8]))
	*(($1 + [8])) = *(($7 + [-16]))
	$1 = ($1 + [-24])
	$7 = $4
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $8
	*(($0 + [8])) = $6
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	$4 = *($3 + [16])
	if ( ($4 == 0) ){ goto $label$11 }
	$0 = ($3 + [20])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = ($7 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($7 + [-4])))
	
.LABEL $label$15
	$7 = $1
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$14 }
	$1 = *(($3 + [16]))
	goto $label$12 
	
.LABEL $label$13
	$1 = $4
	
.LABEL $label$12
	*($0) = $4
	CALL $9($1)
	
.LABEL $label$11
	CALL $9($3)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $9($5)
	
.LABEL $label$16
	(unreachable)
}

void .FUNC $340 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $332(*($1), *($0 + [8]))
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10871])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10871])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [10871])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $38 ()
{
	int_64 $0
	int_32 $1
	if ( (*([0] + [8221]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	if ( (*([0] + [8220]) == 0) ){ goto $label$3 }
	$0 = *([0] + [8232])
	goto $label$2 
	
.LABEL $label$3
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8232]) = $0
	
.LABEL $label$2
	*([0] + [8221]) = [1]
	$1 = (CASTING uint_32)(uint_64 ((int_64)((int_64)((int_64)$0 / (int_64)1000) + (int_64)-946684800000) / (int_64)500))
	*([0] + [8224]) = $1
	return $1
}

int_32 .FUNC $283 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	*($0) = (int_64)0
	*($0 + [8 align=4]) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*($0 + [48]) = (int_64)0
	*(($0 + [16])) = (int_64)0
	*(($0 + [24])) = (int_64)0
	$1 = [0]
	*(($0 + [40])) = [0]
	*(($0 + [56])) = (int_64)1413891848
	$2 = (int_64)5523015
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$2 = $3
	$4 = $1
	$1 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$2 = $3
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$5 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9494])
	
.LABEL $label$1
	*($0 + [64]) = (int_64)0
	*(($0 + [72])) = (int_64)1413891848
	$2 = (int_64)5523015
	$1 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$2 = $3
	$4 = $1
	$1 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$2 = $3
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$10 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [9494])
	
.LABEL $label$6
	*($0 + [80]) = (int_64)0
	*(($0 + [88])) = (int_64)1413891848
	$2 = (int_64)5523015
	$1 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$2 = $3
	$4 = $1
	$1 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$2 = $3
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$15 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [9494])
	
.LABEL $label$11
	*($0 + [96]) = (int_64)0
	*(($0 + [104])) = (int_64)1413891848
	$2 = (int_64)5523015
	$1 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$2 = $3
	$4 = $1
	$1 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$2 = $3
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$20 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [9494])
	
.LABEL $label$16
	*($0 + [112 align=4]) = (int_64)0
	*($0 + [136]) = (int_64)0
	*(($0 + [120])) = (int_64)0
	*(($0 + [128])) = (int_64)0
	*(($1 = ($0 + [148]))) = (int_64)0
	*($0 + [144]) = $1
	*($0 + [160]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $38()) * (int_64)500000) + (int_64)946684800000000)
	*($0 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $38()) * (int_64)500000) + (int_64)946684800000000)
	return $0
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $29(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $24(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8384], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $29(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $29(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

int_64 .FUNC $37 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8232])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8232]) = $0
	return $0
}

int_32 .FUNC $34 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $33($0, $1, $2, CALL $16($2))
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $16($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$3 = uint_32($3 >> [1])
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( $4 ){ goto $label$6 }
	$0 = ($0 + [1])
	$5 = ((uint_32)$3 > (uint_32)$2)
	$4 = ( $2 ? $3 : $5 )
	if ( ($4 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$5 = ((uint_32)$3 > (uint_32)$2)
	$4 = ( $2 ? $3 : $5 )
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$0 = CALL $17($0, $1, $4)
	if ( ($0 == 0) ){ goto $label$1 }
	return $0
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $5 : ($3 <= $2) )
}

int_32 .FUNC $32 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $27($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $280 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9341])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$4 = ($1 + [8])
	CALL memcpy($3, $1, [8])
	$5 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $5
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9341])
	$5 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9341])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $30 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $7($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $9($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $16($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $27($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $281 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $286(($1 + [144]), *(($1 + [148])))
	$2 = *($1 + [124])
	if ( ($2 == 0) ){ goto $label$2 }
	*(($1 + [128])) = $2
	CALL $9($2)
	
.LABEL $label$2
	$2 = *($1 + [112])
	if ( ($2 == 0) ){ goto $label$3 }
	*(($1 + [116])) = $2
	CALL $9($2)
	
.LABEL $label$3
	if ( (*($1 + [32]) & [1]) ){ goto $label$8 }
	if ( (*($1 + [20]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*(($1 + [40])))
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($1 + [28])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($1 + [16])))
	
.LABEL $label$4
	CALL $9($1)
	
.LABEL $label$1
	return $0
}