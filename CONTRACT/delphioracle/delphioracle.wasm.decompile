(data (i32.const 8544) "failed to allocate pages\00unexpected error in fixed_bytes constructor\00system\00")
(data (i32.const 8624) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 8704) "EOS\00")
(data (i32.const 8708) "length \00")
(data (i32.const 8716) "must supply non-empty array of quotes\00")
(data (i32.const 8754) "account is not a qualified oracle\00")
(data (i32.const 8788) "quote \00")
(data (i32.const 8795) " \00")
(data (i32.const 8797) "\n\00")
(data (i32.const 8799) "pair not allowed\00")
(data (i32.const 8816) "done \n\00")
(data (i32.const 8823) "user is not a qualified oracle\00")
(data (i32.const 8854) "previous_hash->timestamp\00")
(data (i32.const 8879) "gitr->write_cooldown\00")
(data (i32.const 8900) "ctime\00")
(data (i32.const 8906) "can only call every 60 seconds\00")
(data (i32.const 8937) "hash mismatch\00")
(data (i32.const 8952) "reveal must be empty string on first writehash call\00")
(data (i32.const 9004) "oracle not found\00")
(data (i32.const 9021) "no rewards to claim\00")
(data (i32.const 9041) "Cannot create a pair named system\00")
(data (i32.const 9075) "A pair with this name already exists.\00")
(data (i32.const 9113) "bounty doesn\'t exist\00")
(data (i32.const 9134) "itr->proposer\00")
(data (i32.const 9148) "missing required authority of contract or proposer\00")
(data (i32.const 9199) "cannot cancel live pair\00")
(data (i32.const 9223) "pair is already active.\00")
(data (i32.const 9247) "bounty not found.\00")
(data (i32.const 9265) "custodian found \n\00")
(data (i32.const 9283) "custodian added vote \n\00")
(data (i32.const 9306) "custodian already voting for bounty\00")
(data (i32.const 9342) "checking oracle qualification... \n\00")
(data (i32.const 9377) "oracle added vote \n\00")
(data (i32.const 9397) "oracle already voting for bounty\00")
(data (i32.const 9430) "owner not a qualified oracle\00")
(data (i32.const 9459) "activate bounty\00")
(data (i32.const 9475) "itr->name\00")
(data (i32.const 9485) "custodian is not voting for bounty\00")
(data (i32.const 9520) "custodian removed vote \n\00")
(data (i32.const 9545) "not an oracle or oracle is not voting for bounty\00")
(data (i32.const 9594) "oracle removed vote \n\00")
(data (i32.const 9616) "account not a custodian\00")
(data (i32.const 9640) "eosio\00")
(data (i32.const 9646) "abuser is not a qualified oracle\00")
(data (i32.const 9679) "user must donate or proxy vote to delphioracle to vote for abusers\00")
(data (i32.const 9746) "user: \00")
(data (i32.const 9753) " is voting for abuser: \00")
(data (i32.const 9777) " with total stake: \00")
(data (i32.const 9797) "delphibackup\00")
(data (i32.const 9810) "stats info already exists; call clear first\00")
(data (i32.const 9854) "string is too long to be a valid symbol_code\00")
(data (i32.const 9899) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9952) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 10001) "invalid symbol name\00")
(data (i32.const 10021) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 10072) "error reading iterator\00")
(data (i32.const 10095) "read\00")
(data (i32.const 10100) "get\00")
(data (i32.const 10104) "cannot increment end iterator\00")
(data (i32.const 10134) "unable to find key\00")
(data (i32.const 10153) "cannot pass end iterator to modify\00")
(data (i32.const 10188) "object passed to modify is not in multi_index\00")
(data (i32.const 10234) "cannot modify objects in table of another contract\00")
(data (i32.const 10285) "updater cannot change primary key when modifying an object\00")
(data (i32.const 10344) "write\00")
(data (i32.const 10350) "cannot create objects in table of another contract\00")
(data (i32.const 10401) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 10460) "gtable.begin()->total_datapoints_count:\00")
(data (i32.const 10500) "voting for bps:\00")
(data (i32.const 10516) "reveal:\00")
(data (i32.const 10524) "prev_multiparty:\00")
(data (i32.const 10541) "to_hash:\00")
(data (i32.const 10550) "h:\00")
(data (i32.const 10553) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 10607) "cannot decrement iterator at beginning of table\00")
(data (i32.const 10655) "0123456789abcdef\00")
(data (i32.const 10672) "string is too long to be a valid name\00")
(data (i32.const 10710) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 10777) "character is not in allowed character set for names\00")
(data (i32.const 10829) "transfer notifier\00")
(data (i32.const 10847) "transfer \00")
(data (i32.const 10857) "%lld%s%s %s\00")
(data (i32.const 10869) ".\00")
(data (i32.const 10871) "upperbound\00")
(data (i32.const 10882) "increment 1\00")
(data (i32.const 10894) "total_datapoints\00")
(data (i32.const 10911) "itr->owner\00")
(data (i32.const 10922) "datapoints\00")
(data (i32.const 10933) "percent\00")
(data (i32.const 10941) "uquota\00")
(data (i32.const 10948) "payout\00")
(data (i32.const 10955) "decrement 1\00")
(data (i32.const 10967) "next primary key in table is at autoincrement limit\00")
(data (i32.const 11019) "attempt to add asset with different symbol\00")
(data (i32.const 11062) "addition underflow\00")
(data (i32.const 11081) "addition overflow\00")
(data (i32.const 11099) "cannot decrement end iterator when the index is empty\00")
(data (i32.const 11153) "cannot decrement iterator at beginning of index\00")
(data (i32.const 11201) "attempt to subtract asset with different symbol\00")
(data (i32.const 11249) "subtraction underflow\00")
(data (i32.const 11271) "subtraction overflow\00")
(data (i32.const 11292) "cannot pass end iterator to erase\00")
(data (i32.const 11326) "object passed to erase is not in multi_index\00")
(data (i32.const 11371) "cannot erase objects in table of another contract\00")
(data (i32.const 11421) "attempt to remove object that was not in multi_index\00")
(data (i32.const 11474) "unexpected error in fixed_bytes constructor\00")
(data (i32.const 0) "\00-\00\00")
(import "env" "abort" (func $fimport$0))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$3 (param i64)))
(import "env" "prints" (func $fimport$4 (param i32)))
(import "env" "printi" (func $fimport$5 (param i64)))
(import "env" "db_find_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "printui" (func $fimport$7 (param i64)))
(import "env" "printn" (func $fimport$8 (param i64)))
(import "env" "db_lowerbound_i64" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$10 (param i32 i32)))
(import "env" "memcpy" (func $fimport$11 (param i32 i32 i32) (result i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$12 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$13 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$14 (result i64)))
(import "env" "get_active_producers" (func $fimport$15 (param i32 i32) (result i32)))
(import "env" "current_receiver" (func $fimport$16 (result i64)))
(import "env" "db_update_i64" (func $fimport$17 (param i32 i64 i32 i32)))
(import "env" "db_idx64_find_primary" (func $fimport$18 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$19 (param i32 i64 i32)))
(import "env" "memmove" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$21 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$22 (param i32 i32)))
(import "env" "__multf3" (func $fimport$23 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$24 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$25 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$26 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$27 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$28 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$29 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$30 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$31 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$32 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$33 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$34 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$35 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$36 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$37 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$38 (param i64 i64) (result i32)))
(import "env" "assert_sha256" (func $fimport$39 (param i32 i32 i32)))
(import "env" "assert_sha1" (func $fimport$40 (param i32 i32 i32)))
(import "env" "assert_sha512" (func $fimport$41 (param i32 i32 i32)))
(import "env" "assert_ripemd160" (func $fimport$42 (param i32 i32 i32)))
(import "env" "sha256" (func $fimport$43 (param i32 i32 i32)))
(import "env" "__ashlti3" (func $fimport$44 (param i32 i64 i64 i32)))
(import "env" "sha1" (func $fimport$45 (param i32 i32 i32)))
(import "env" "sha512" (func $fimport$46 (param i32 i32 i32)))
(import "env" "ripemd160" (func $fimport$47 (param i32 i32 i32)))
(import "env" "recover_key" (func $fimport$48 (param i32 i32 i32 i32 i32) (result i32)))
(import "env" "assert_recover_key" (func $fimport$49 (param i32 i32 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$50 (param i32 i32)))
(import "env" "db_store_i64" (func $fimport$51 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_store" (func $fimport$52 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "has_auth" (func $fimport$53 (param i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$54 (param i32 i32) (result i32)))
(import "env" "action_data_size" (func $fimport$55 (result i32)))
(import "env" "read_action_data" (func $fimport$56 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$57 (param i32 i64)))
(import "env" "db_idx_double_lowerbound" (func $fimport$58 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$59 (param i32 i32 i32) (result i32)))
(import "env" "db_idx_double_find_primary" (func $fimport$60 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx_double_next" (func $fimport$61 (param i32 i32) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$62 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$63 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$64 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$65 (param i64 i64 i64) (result i32)))
(import "env" "printhex" (func $fimport$66 (param i32 i32)))
(import "env" "printdf" (func $fimport$67 (param f64)))
(import "env" "db_idx64_previous" (func $fimport$68 (param i32 i32) (result i32)))
(import "env" "db_idx64_end" (func $fimport$69 (param i64 i64 i64) (result i32)))
(import "env" "db_remove_i64" (func $fimport$70 (param i32)))
(import "env" "db_idx64_remove" (func $fimport$71 (param i32)))
(import "env" "db_idx256_find_primary" (func $fimport$72 (param i64 i64 i64 i32 i32 i64) (result i32)))
(import "env" "db_idx256_remove" (func $fimport$73 (param i32)))
(import "env" "db_idx256_store" (func $fimport$74 (param i64 i64 i64 i64 i32 i32) (result i32)))
(export "apply" (func $1))
(table $0 4 4 anyfunc)
(elem (i32.const 1) $24 $26 $41)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 11518))
(global $global$2 i32 (i32.const 11518))


void .FUNC $220 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [3])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($2 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $9(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $18($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [3]))
	$3 = ($2 + ($3 << [3]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [3]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $11($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $174 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	float_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	float_64 $18
	int_64 $19
	int_32 $20
	$4 = ($global$0 - [256])
	$global$0 = $4
	*($4 + [240]) = $2
	*($4 + [248]) = $1
	*((($4 + [200]) + [32])) = [0]
	*($4 + [216]) = (int_64)-1
	*($4 + [224]) = (int_64)0
	$5 = *($0)
	*($4 + [200]) = $5
	*($4 + [208]) = $5
	*((($4 + [160]) + [32])) = [0]
	*($4 + [168]) = $2
	*($4 + [160]) = $5
	*($4 + [176]) = (int_64)-1
	*($4 + [184]) = (int_64)0
	*($4 + [196]) = [0]
	*((($4 + [120]) + [32])) = [0]
	*($4 + [128]) = $1
	*($4 + [120]) = $5
	*($4 + [136]) = (int_64)-1
	*($4 + [144]) = (int_64)0
	*($4 + [156]) = [0]
	*((($4 + [80]) + [32])) = [0]
	*($4 + [88]) = $5
	*($4 + [80]) = $5
	*($4 + [96]) = (int_64)-1
	*($4 + [104]) = (int_64)0
	*($4 + [116]) = [0]
	$6 = CALL db_find_i64($5, $5, (int_64)-3020371635640205312, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)*(CALL $123(($4 + [80]), $6) + [40]) == (int_32)($4 + [80])) ){ goto $label$1 }
	CALL eosio_assert([0], [10021])
	goto $label$1 
	
.LABEL $label$2
	CALL $122($0, $1)
	
.LABEL $label$1
	$5 = *($4 + [248])
	$8 = *(($4 + [108]))
	$7 = *(($4 + [104]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$4 }
	
.LOOP $label$6:
	$6 = ($8 + [-24])
	$9 = *($6)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$5 }
	$8 = $6
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$4 }
	if ( ((int_32)*($9 + [40]) == (int_32)($4 + [80])) ){ goto $label$3 }
	CALL eosio_assert([0], [10021])
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	$6 = CALL db_find_i64(*($4 + [80]), *(($4 + [88])), (int_64)-3020371635640205312, $5)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $123(($4 + [80]), $6)
	if ( ((int_32)*($9 + [40]) == (int_32)($4 + [80])) ){ goto $label$3 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$3
	$5 = *($0)
	*($4 + [8]) = $3
	CALL $199(($4 + [80]), $9, $5, ($4 + [8]))
	$5 = *($0)
	*($4 + [20]) = $3
	*($4 + [12]) = ($4 + [248])
	*($4 + [8]) = ($4 + [120])
	*($4 + [16]) = ($4 + [240])
	CALL $200(($4 + [48]), ($4 + [120]), $5, ($4 + [8]))
	$5 = (int_64)0
	$9 = [0]
	$6 = CALL db_lowerbound_i64(*($4 + [200]), *((($4 + [200]) + [8])), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$7 }
	$9 = CALL $52(($4 + [200]), $6)
	
.LABEL $label$7
	$6 = CALL db_lowerbound_i64(*($4 + [160]), *((($4 + [160]) + [8])), (int_64)-4157495357179166720, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$8 }
	$8 = CALL db_next_i64(*(CALL $44(($4 + [160]), $6) + [52]), ($4 + [8]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$6 = [1]
	
.LOOP $label$11:
	$6 = ($6 + [1])
	$8 = CALL db_next_i64(*(CALL $44(($4 + [160]), $8) + [52]), ($4 + [8]))
	if ( ((int_32)$8 >= (int_32)[0]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$6 = [1]
	
.LABEL $label$9
	$5 = (CASTING uint_64)(uint_32 $6)
	
.LABEL $label$8
	$1 = *($9 + [96])
	*($4 + [72]) = ($4 + [160])
	$2 = (int_64)0
	*($4 + [8]) = (int_64)0
	CALL $181(($4 + [64]), ($4 + [72]), ($4 + [8]))
	CALL prints([10871])
	$1 = ( $1 ? $5 : (uint_64)($1 <= $5) )
	CALL printui($1)
	CALL prints([8797])
	$6 = (int_64)($1 == 0)
	if ( $6 ){ goto $label$12 }
	$5 = (int_64)0
	$2 = (int_64)0
	
.LOOP $label$13:
	$10 = *(*($4 + [68]) + [16])
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((uint_64)$5 >= (uint_64)$1) ){ goto $label$14 }
	CALL $182(($4 + [64]))
	CALL prints([10882])
	CALL prints([8797])
	
.LABEL $label$14
	$2 = ((int_64)$10 + (int_64)$2)
	if ( (uint_64)($5 <= $1) ){ goto $label$13 }
	
.LABEL $label$12
	CALL prints([10894])
	CALL printui($2)
	CALL prints([8797])
	if ( $6 ){ goto $label$15 }
	$11 = (($4 + [8]) | [1])
	$12 = (CASTING float_64)(uint_64 $2)
	$7 = (($4 + [48]) + [8])
	$13 = ($4 + [44])
	$14 = ($4 + [24])
	$15 = ($4 + [40])
	$16 = ($4 + [36])
	$2 = *($3)
	$17 = $2
	
.LOOP $label$16:
	$6 = *($4 + [68])
	$5 = *($6 + [16])
	CALL prints([10911])
	CALL printn(*($6))
	CALL prints([8797])
	CALL prints([10922])
	CALL printui($5)
	CALL prints([8797])
	CALL prints([10933])
	$18 = ((float_64)(CASTING float_64)(uint_64 $5) / (float_64)$12)
	CALL printdf($18)
	CALL prints([8797])
	CALL prints([10941])
	$18 = ((float_64)$18 * (float_64)(CASTING float_64)(int_64 $2))
	if ( (((float_64)$18 < (float_64)(float_64)18446744073709551615) & ((float_64)$18 >= (float_64)(float_64)0)) ){ goto $label$18 }
	$10 = (int_64)0
	goto $label$17 
	
.LABEL $label$18
	$10 = (Rounds 0)($18)
	
.LABEL $label$17
	CALL printui($10)
	CALL prints([8797])
	*($7) = (int_64)0
	*($4 + [48]) = (int_64)0
	$6 = CALL $17([8704])
	if ( ((int_64)$1 != (int_64)1) ){ goto $label$30 }
	if ( ($6 <= [8]) ){ goto $label$29 }
	CALL eosio_assert([0], [9854])
	goto $label$28 
	
.LABEL $label$30
	if ( ($6 <= [8]) ){ goto $label$27 }
	CALL eosio_assert([0], [9854])
	goto $label$26 
	
.LABEL $label$29
	if ( ($6 == 0) ){ goto $label$25 }
	
.LABEL $label$28
	$5 = (int_64)0
	
.LOOP $label$31:
	$8 = *(($6 + [8703]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$32 }
	CALL eosio_assert([0], [9899])
	
.LABEL $label$32
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$31 }
	$19 = ((int_64)$5 << (int_64)8)
	if ( (uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$27
	if ( ($6 == 0) ){ goto $label$24 }
	
.LABEL $label$26
	$5 = (int_64)0
	
.LOOP $label$33:
	$8 = *(($6 + [8703]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$34 }
	CALL eosio_assert([0], [9899])
	
.LABEL $label$34
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$33 }
	$19 = ((int_64)$5 << (int_64)8)
	if ( (uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$25
	$19 = (int_64)0
	if ( ((uint_64)((int_64)$17 + (int_64)4611686018427387903) >= (uint_64)(int_64)9223372036854775807) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$24
	$19 = (int_64)0
	if ( (uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$22 }
	
.LABEL $label$23
	CALL eosio_assert([0], [9952])
	
.LABEL $label$22
	$5 = (uint_64)$19 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$37:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$36 }
	$2 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$38 }
	$5 = $2
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$38
	$5 = $2
	
.LOOP $label$39:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$36 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$9 = ($6 + [1])
	$6 = $9
	if ( $8 ){ goto $label$39 }
	$6 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	CALL eosio_assert([0], [10001])
	
.LABEL $label$35
	$5 = $10
	goto $label$19 
	
.LABEL $label$21
	CALL eosio_assert([0], [9952])
	
.LABEL $label$20
	$5 = (uint_64)$19 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$41:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$40 }
	$2 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$43 }
	$5 = $2
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$41 }
	goto $label$42 
	
.LABEL $label$43
	$5 = $2
	
.LOOP $label$44:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$40 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$9 = ($6 + [1])
	$6 = $9
	if ( $8 ){ goto $label$44 }
	$6 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$41 }
	
.LABEL $label$42
	$5 = $17
	goto $label$19 
	
.LABEL $label$40
	CALL eosio_assert([0], [10001])
	$5 = $17
	
.LABEL $label$19
	*($7) = ((int_64)$19 | (int_64)4)
	*($4 + [48]) = $5
	CALL prints([10948])
	CALL $173(($4 + [8]), ($4 + [48]))
	$8 = *($4 + [8])
	$9 = ($8 & [1])
	$6 = (($4 + [8]) + [8])
	CALL prints_l(( *($6) ? $11 : $9 ), ( *($4 + [12]) ? uint_32($8 >> [1]) : $9 ))
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$45 }
	CALL $11(*($6))
	
.LABEL $label$45
	CALL prints([8797])
	$5 = *($0)
	$2 = *($4 + [240])
	if ( ((int_64)$2 != (int_64)$5) ){ goto $label$49 }
	$6 = *($4 + [68])
	*($4 + [8]) = ($4 + [48])
	CALL $201(($4 + [160]), $6, $2, ($4 + [8]))
	if ( ((uint_64)$1 >= (uint_64)(int_64)2) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	*(($20 = (($4 + [8]) + [24]))) = (int_64)0
	$8 = [0]
	*($13) = [0]
	*($6) = $5
	*($14) = (int_64)-1
	*($15) = [0]
	*($4 + [8]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)-4157495357179166720, *(*($4 + [68])))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$50 }
	$8 = CALL $44(($4 + [8]), $6)
	if ( ((int_32)*($8 + [48]) == (int_32)($4 + [8])) ){ goto $label$50 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$50
	$5 = *($0)
	*($4) = ($4 + [48])
	CALL $202(($4 + [8]), $8, $5, $4)
	$9 = *($20)
	if ( ($9 == 0) ){ goto $label$51 }
	$6 = *($16)
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$53 }
	
.LOOP $label$54:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$55 }
	CALL $11($8)
	
.LABEL $label$55
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$54 }
	$6 = *($20)
	goto $label$52 
	
.LABEL $label$53
	$6 = $9
	
.LABEL $label$52
	*($16) = $9
	CALL $11($6)
	
.LABEL $label$51
	if ( (uint_64)($1 <= (int_64)2) ){ goto $label$47 }
	
.LABEL $label$48
	CALL $203(($4 + [64]))
	CALL prints([10955])
	CALL prints([8797])
	$1 = ((int_64)$1 + (int_64)-1)
	goto $label$46 
	
.LABEL $label$47
	$6 = ((int_64)$1 == (int_64)1)
	$1 = (int_64)-1
	if ( $6 ){ goto $label$15 }
	
.LABEL $label$46
	$17 = (int_64))($17 - $10)
	$2 = *($3)
	goto $label$16 
	
.LABEL $label$15
	$9 = *($4 + [104])
	if ( ($9 == 0) ){ goto $label$56 }
	$7 = ($4 + [108])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$58 }
	
.LOOP $label$59:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$60 }
	CALL $11($8)
	
.LABEL $label$60
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$59 }
	$6 = *(($4 + [104]))
	goto $label$57 
	
.LABEL $label$58
	$6 = $9
	
.LABEL $label$57
	*($7) = $9
	CALL $11($6)
	
.LABEL $label$56
	$9 = *($4 + [144])
	if ( ($9 == 0) ){ goto $label$61 }
	$7 = ($4 + [148])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$63 }
	
.LOOP $label$64:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$65 }
	CALL $11($8)
	
.LABEL $label$65
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$64 }
	$6 = *(($4 + [144]))
	goto $label$62 
	
.LABEL $label$63
	$6 = $9
	
.LABEL $label$62
	*($7) = $9
	CALL $11($6)
	
.LABEL $label$61
	$9 = *($4 + [184])
	if ( ($9 == 0) ){ goto $label$66 }
	$7 = ($4 + [188])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$68 }
	
.LOOP $label$69:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$70 }
	CALL $11($8)
	
.LABEL $label$70
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$69 }
	$6 = *(($4 + [184]))
	goto $label$67 
	
.LABEL $label$68
	$6 = $9
	
.LABEL $label$67
	*($7) = $9
	CALL $11($6)
	
.LABEL $label$66
	$9 = *($4 + [224])
	if ( ($9 == 0) ){ goto $label$71 }
	$7 = ($4 + [228])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$73 }
	
.LOOP $label$74:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$75 }
	CALL $11($8)
	
.LABEL $label$75
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$74 }
	$6 = *(($4 + [224]))
	goto $label$72 
	
.LABEL $label$73
	$6 = $9
	
.LABEL $label$72
	*($7) = $9
	CALL $11($6)
	
.LABEL $label$71
	$global$0 = ($4 + [256])
}

int_32 .FUNC $6 ()
{
	return [8208]
}

int_32 .FUNC $176 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $9([104])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = [0]
	*($5 + [56]) = [1]
	*($5 + [60 align=4]) = (int_64)0
	*($5 + [68 align=4]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = [0]
	*($5 + [92]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [56])
	*($3 + [48]) = ($5 + [60])
	*($3 + [52]) = ($5 + [72])
	*($3 + [56]) = ($5 + [80])
	*($3 + [60]) = ($5 + [88])
	CALL $177(($3 + [32]), ($3 + [24]))
	*($5 + [100]) = [-1]
	*($5 + [96]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $178(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [60]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [68])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$3 = *($1)
	$4 = *($3 + [4])
	$7 = (int_64)0
	$8 = [0]
	
.LOOP $label$3:
	if ( ($4 <= *(($3 + [8]))) ){ goto $label$4 }
	CALL eosio_assert([0], [10100])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	$5 = *($4)
	$9 = ($4 + [1])
	*(($3 + [4])) = $9
	$4 = ($8 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($5 & [127]) << $4)))
	$8 = ($4 + [7])
	$4 = $9
	if ( ($5 & [128]) ){ goto $label$3 }
	*($6) = $7
	$4 = ($6 + [4])
	if ( ((uint_32)(*(($3 + [8])) - $9) > (uint_32)[32]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$9 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $9, [33])
	*(($4 = ($3 + [4]))) = (*($4) + [33])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy(($2 + [15]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [15]) != (int_32)[0])
	CALL $147(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$9 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$global$0 = ($2 + [16])
}

void .FUNC $170 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [40])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [40])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10095])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $5, [8])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $171($3, *($3 + [40]), *($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $171 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	$3 = ($global$0 - [208])
	$global$0 = $3
	CALL prints([10829])
	CALL prints([8797])
	CALL $172(($3 + [160]))
	$4 = *($3 + [168])
	$5 = *($3 + [160])
	CALL prints([10847])
	CALL printn($5)
	CALL prints([8795])
	CALL printn($4)
	CALL prints([8795])
	$6 = ($3 + [176])
	CALL $173(($3 + [120]), $6)
	$7 = *($3 + [120])
	$8 = ($7 & [1])
	CALL prints_l(( *($3 + [128]) ? (($3 + [120]) | [1]) : $8 ), ( *($3 + [124]) ? uint_32($7 >> [1]) : $8 ))
	if ( ((*($3 + [120]) & [1]) == 0) ){ goto $label$1 }
	CALL $11(*(($3 + [128])))
	
.LABEL $label$1
	CALL prints([8797])
	$4 = *($0)
	if ( ((int_64)*($3 + [160]) == (int_64)$4) ){ goto $label$2 }
	if ( ((int_64)*(($3 + [168])) != (int_64)$4) ){ goto $label$2 }
	$9 = [0]
	*((($3 + [120]) + [32])) = [0]
	*($3 + [128]) = $4
	*($3 + [120]) = $4
	*($3 + [136]) = (int_64)-1
	*($3 + [144]) = (int_64)0
	$8 = (($3 + [160]) + [32])
	$7 = ($7 & [1])
	$7 = *([0] + [8508])
	$12 = ($7 & [1])
	$7 = *($3 + [192])
	$11 = uint_32($7 >> [1])
	$10 = *(($3 + [196]))
	$13 = ( $10 ? $11 : $12 )
	if ( ((int_32)$13 != (int_32)( *([0] + [8512]) ? uint_32($7 >> [1]) : $7 )) ){ goto $label$8 }
	$7 = ( *([0] + [8516]) ? [8509] : $7 )
	$14 = ($8 + [1])
	if ( $12 ){ goto $label$7 }
	if ( ($13 == 0) ){ goto $label$2 }
	$12 = [0]
	$9 = ([0] - $11)
	$8 = $14
	
.LOOP $label$9:
	if ( ((int_32)*($8) != (int_32)*($7)) ){ goto $label$6 }
	$7 = ($7 + [1])
	$8 = ($8 + [1])
	$9 = ($9 + [1])
	if ( $9 ){ goto $label$9 }
	goto $label$2 
	
.LABEL $label$8
	$14 = ($8 + [1])
	goto $label$4 
	
.LABEL $label$7
	if ( ($13 == 0) ){ goto $label$2 }
	if ( (CALL $20(( *(($3 + [200])) ? $14 : $12 ), $7, $13) == 0) ){ goto $label$5 }
	$7 = *(($3 + [192]))
	$11 = uint_32($7 >> [1])
	$12 = ($7 & [1])
	$9 = *(($3 + [144]))
	$8 = *(($3 + [148]))
	$10 = *(($3 + [196]))
	goto $label$3 
	
.LABEL $label$6
	$9 = [0]
	goto $label$4 
	
.LABEL $label$5
	$12 = *($3 + [144])
	if ( ($12 == 0) ){ goto $label$2 }
	$0 = ($3 + [148])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$12) ){ goto $label$11 }
	
.LOOP $label$12:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$13 }
	$9 = *($7 + [52])
	if ( ($9 == 0) ){ goto $label$14 }
	*(($7 + [56])) = $9
	CALL $11($9)
	
.LABEL $label$14
	$9 = *($7 + [40])
	if ( ($9 == 0) ){ goto $label$15 }
	*(($7 + [44])) = $9
	CALL $11($9)
	
.LABEL $label$15
	CALL $11($7)
	
.LABEL $label$13
	if ( ((int_32)$12 != (int_32)$8) ){ goto $label$12 }
	$7 = *(($3 + [144]))
	goto $label$10 
	
.LABEL $label$11
	$7 = $12
	
.LABEL $label$10
	*($0) = $12
	CALL $11($7)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	
.LABEL $label$3
	*($3 + [108]) = ( $10 ? $11 : $12 )
	*($3 + [104]) = ( *(($3 + [200])) ? $14 : $12 )
	*($3 + [48]) = *($3 + [104])
	$4 = *(CALL $51(($3 + [112]), ($3 + [48])))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$21 }
	
.LOOP $label$23:
	$7 = ($8 + [-24])
	$12 = *($7)
	if ( ((int_64)*($12 + [16]) == (int_64)$4) ){ goto $label$22 }
	$8 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$21 }
	if ( ((int_32)*($12 + [120]) == (int_32)($3 + [120])) ){ goto $label$20 }
	CALL eosio_assert([0], [10021])
	$4 = *($12 + [16])
	$5 = *($3 + [160])
	if ( *($12 + [1]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$21
	$7 = CALL db_find_i64(*($3 + [120]), *((($3 + [120]) + [8])), (int_64)-6224682770514313216, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$18 }
	$12 = CALL $45(($3 + [120]), $7)
	if ( ((int_32)*($12 + [120]) == (int_32)($3 + [120])) ){ goto $label$20 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$20
	$4 = *($12 + [16])
	$5 = *($3 + [160])
	if ( (*($12 + [1]) == 0) ){ goto $label$17 }
	
.LABEL $label$19
	$15 = *(($6 + [8]))
	*((($3 + [88]) + [8])) = $15
	$16 = *($6)
	*((($3 + [32]) + [8])) = $15
	*($3 + [88]) = $16
	*($3 + [32]) = $16
	CALL $174($0, $5, $4, ($3 + [32]))
	$12 = *($3 + [144])
	if ( $12 ){ goto $label$16 }
	goto $label$2 
	
.LABEL $label$18
	$5 = *($0)
	$4 = *($6)
	$16 = *(($6 + [8]))
	*(($3 + [8])) = $16
	*((($3 + [56]) + [8])) = $16
	*($3 + [56]) = $4
	*($3) = $4
	CALL $174($0, *($3 + [160]), $5, $3)
	$12 = *($3 + [144])
	if ( ($12 == 0) ){ goto $label$2 }
	goto $label$16 
	
.LABEL $label$17
	$15 = *(($6 + [8]))
	*((($3 + [72]) + [8])) = $15
	$16 = *($6)
	*((($3 + [16]) + [8])) = $15
	*($3 + [72]) = $16
	*($3 + [16]) = $16
	CALL $175($0, $5, $4, ($3 + [16]))
	$12 = *($3 + [144])
	if ( ($12 == 0) ){ goto $label$2 }
	
.LABEL $label$16
	$0 = ($3 + [148])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$12) ){ goto $label$25 }
	
.LOOP $label$26:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$27 }
	$9 = *($7 + [52])
	if ( ($9 == 0) ){ goto $label$28 }
	*(($7 + [56])) = $9
	CALL $11($9)
	
.LABEL $label$28
	$9 = *($7 + [40])
	if ( ($9 == 0) ){ goto $label$29 }
	*(($7 + [44])) = $9
	CALL $11($9)
	
.LABEL $label$29
	CALL $11($7)
	
.LABEL $label$27
	if ( ((int_32)$12 != (int_32)$8) ){ goto $label$26 }
	$7 = *(($3 + [144]))
	goto $label$24 
	
.LABEL $label$25
	$7 = $12
	
.LABEL $label$24
	*($0) = $12
	CALL $11($7)
	
.LABEL $label$2
	if ( ((*(($3 + [192])) & [1]) == 0) ){ goto $label$30 }
	CALL $11(*(($3 + [200])))
	
.LABEL $label$30
	$global$0 = ($3 + [208])
}

void .FUNC $172 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [48])
	$2 = $1
	$global$0 = $1
	$3 = CALL action_data_size()
	if ( ($3 <= [513]) ){ goto $label$2 }
	$1 = CALL $2($3)
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 - (($3 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$1
	CALL read_action_data($1, $3)
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*(($0 + [40])) = [0]
	*($2 + [12]) = $1
	*($2 + [8]) = $1
	*($2 + [16]) = ($1 + $3)
	*($2 + [24]) = ($2 + [8])
	*($2 + [36]) = ($0 + [8])
	*($2 + [32]) = $0
	*($2 + [40]) = ($0 + [16])
	*($2 + [44]) = ($0 + [32])
	CALL $198(($2 + [32]), ($2 + [24]))
	$global$0 = ($2 + [48])
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $2($1)
	
.LABEL $label$2
	*(CALL $6()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $2(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $4($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $178 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $18($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [60]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [68])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $11($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $4 (int_32 $0)
{
}

void .FUNC $221 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $18($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $5 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $127 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$6 = ($1 + [24])
	*($5 + [16]) = *($6)
	*($6) = *(*($3))
	$7 = *($1)
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	*($5 + [24]) = $5
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = $6
	*($5 + [44]) = ($1 + [32])
	CALL $128(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [32]) = *($6)
	if ( (CALL $20(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$4 }
	$6 = ($1 + [48])
	$1 = *($6)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371635640205312, ($5 + [24]), $7)
	*($6) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

int_32 .FUNC $3 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = ((int_32)$1 * (int_32)$0)
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = uint_32($1 >> [16])
	$3 = (*([0] + [8204]) + $2)
	*([0] + [8204]) = $3
	$0 = *([0] + [8196])
	$4 = ((($0 + $1) + [7]) & [-8])
	*([0] + [8196]) = $4
	if ( ((uint_32)($3 << [16]) <= (uint_32)$4) ){ goto $label$5 }
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	*([0] + [8204]) = ($3 + [1])
	if ( ((int_32)($2 + [1]) != (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8544])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memset($0, [0], $1)
	return $0
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $189 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$3 = [1]
	$4 = int_32(($1 - $0) >> [3])
	if ( ((uint_32)$4 > (uint_32)[5]) ){ goto $label$30 }
	goto $label$12 
	
.LABEL $label$31
	$6 = *($0)
	$4 = ($1 + [-8])
	$5 = *($4)
	if ( ((uint_64)$5 >= (uint_64)$6) ){ goto $label$10 }
	*($0) = $5
	*($4) = $6
	return [1]
	
.LABEL $label$30
	$6 = *($0 + [16])
	$7 = *($0)
	$5 = *($0 + [8])
	if ( ((uint_64)$5 >= (uint_64)$7) ){ goto $label$26 }
	if ( ((uint_64)$6 >= (uint_64)$5) ){ goto $label$23 }
	*($0) = $6
	*(($0 + [16])) = $7
	goto $label$22 
	
.LABEL $label$29
	$4 = ($1 + [-8])
	$5 = *($4)
	$7 = *($0)
	$6 = *($0 + [8])
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$25 }
	if ( ((uint_64)$5 >= (uint_64)$6) ){ goto $label$18 }
	*($0) = $5
	*($4) = $7
	return [1]
	
.LABEL $label$28
	CALL $188($0, ($0 + [8]), ($0 + [16]), ($0 + [24]), ($1 + [-8]), $2)
	return [1]
	
.LABEL $label$27
	$6 = *($0 + [16])
	$7 = *($0)
	$5 = *($0 + [8])
	if ( ((uint_64)$5 >= (uint_64)$7) ){ goto $label$24 }
	if ( ((uint_64)$6 >= (uint_64)$5) ){ goto $label$17 }
	*($0) = $6
	*(($0 + [16])) = $7
	goto $label$16 
	
.LABEL $label$26
	if ( ((uint_64)$6 >= (uint_64)$5) ){ goto $label$20 }
	*(($0 + [16])) = $5
	*(($4 = ($0 + [8]))) = $6
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$21 }
	*($0) = $6
	*($4) = $7
	$2 = ($0 + [24])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$19 }
	goto $label$3 
	
.LABEL $label$25
	if ( ((uint_64)$5 >= (uint_64)$6) ){ goto $label$9 }
	*(($2 = ($0 + [8]))) = $5
	*($4) = $6
	$6 = *($0)
	$5 = *($2)
	if ( ((uint_64)$5 >= (uint_64)$6) ){ goto $label$8 }
	*($0) = $5
	*($2) = $6
	return [1]
	
.LABEL $label$24
	if ( ((uint_64)$6 >= (uint_64)$5) ){ goto $label$15 }
	*(($0 + [16])) = $5
	*(($4 = ($0 + [8]))) = $6
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$14 }
	*($0) = $6
	*($4) = $7
	goto $label$14 
	
.LABEL $label$23
	*($0) = $5
	*(($4 = ($0 + [8]))) = $7
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$20 }
	*(($0 + [16])) = $7
	*($4) = $6
	
.LABEL $label$22
	$5 = $7
	
.LABEL $label$21
	$2 = ($0 + [24])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$19 }
	goto $label$11 
	
.LABEL $label$20
	$5 = $6
	$2 = ($0 + [24])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$19
	$3 = [0]
	$6 = *($2)
	if ( ((uint_64)$6 >= (uint_64)$5) ){ goto $label$13 }
	$8 = [2]
	goto $label$1 
	
.LABEL $label$18
	*($0) = $6
	*(($0 = ($0 + [8]))) = $7
	$5 = *($4)
	if ( ((uint_64)$5 >= (uint_64)$7) ){ goto $label$7 }
	*($0) = $5
	*($4) = $7
	return [1]
	
.LABEL $label$17
	*($0) = $5
	*(($4 = ($0 + [8]))) = $7
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$15 }
	*(($0 + [16])) = $7
	*($4) = $6
	
.LABEL $label$16
	$5 = $7
	goto $label$14 
	
.LABEL $label$15
	$5 = $6
	
.LABEL $label$14
	$4 = ($1 + [-8])
	$6 = *($4)
	if ( ((uint_64)$6 >= (uint_64)$5) ){ goto $label$6 }
	*(($2 = ($0 + [16]))) = $6
	*($4) = $5
	$4 = ($0 + [8])
	$6 = *($4)
	$5 = *($2)
	if ( ((uint_64)$5 >= (uint_64)$6) ){ goto $label$5 }
	*($2) = $6
	*($4) = $5
	$6 = *($0)
	if ( ((uint_64)$5 >= (uint_64)$6) ){ goto $label$4 }
	*($0) = $5
	*(($0 + [8])) = $6
	return [1]
	
.LABEL $label$13
	$8 = [0]
	goto $label$1 
	
.LABEL $label$12
	$8 = [7]
	goto $label$1 
	
.LABEL $label$11
	$8 = [7]
	goto $label$1 
	
.LABEL $label$10
	$8 = [7]
	goto $label$1 
	
.LABEL $label$9
	$8 = [7]
	goto $label$1 
	
.LABEL $label$8
	$8 = [7]
	goto $label$1 
	
.LABEL $label$7
	$8 = [7]
	goto $label$1 
	
.LABEL $label$6
	$8 = [7]
	goto $label$1 
	
.LABEL $label$5
	$8 = [7]
	goto $label$1 
	
.LABEL $label$4
	$8 = [7]
	goto $label$1 
	
.LABEL $label$3
	$8 = [7]
	goto $label$1 
	
.LABEL $label$2
	$8 = [7]
	
.LABEL $label$1
	
.LOOP $label$32:
	goto $label$43 
	
.LABEL $label$49
	$4 = $2
	$8 = [3]
	goto $label$32 
	
.LABEL $label$48
	*($4) = $5
	$4 = ($4 + [-8])
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$33 }
	$8 = [4]
	goto $label$32 
	
.LABEL $label$47
	$5 = *(($4 + [-8]))
	if ( (uint_64)($6 <= $5) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$46
	$4 = $0
	$8 = [5]
	goto $label$32 
	
.LABEL $label$45
	*($4) = $6
	$3 = ($3 + [1])
	if ( ((int_32)$3 != (int_32)[8]) ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$44
	$5 = *($2)
	$2 = $4
	$6 = *($2)
	if ( (uint_64)($6 <= $5) ){ goto $label$36 }
	$8 = [0]
	goto $label$32 
	
.LABEL $label$43
	$4 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$39 }
	$8 = [9]
	goto $label$32 
	
.LABEL $label$42
	return [1]
	
.LABEL $label$41
	$3 = ((int_32)($2 + [8]) == (int_32)$1)
	$8 = [7]
	goto $label$32 
	
.LABEL $label$40
	return $3
	
.LABEL $label$39
	$8 = [1]
	goto $label$32 
	
.LABEL $label$38
	$8 = [6]
	goto $label$32 
	
.LABEL $label$37
	$8 = [0]
	goto $label$32 
	
.LABEL $label$36
	$8 = [2]
	goto $label$32 
	
.LABEL $label$35
	$8 = [3]
	goto $label$32 
	
.LABEL $label$34
	$8 = [5]
	goto $label$32 
	
.LABEL $label$33
	$8 = [8]
	goto $label$32 
	$4
	return $8
}

int_32 .FUNC $188 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$6 = *($2)
	$8 = *($0)
	$7 = *($1)
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$9 }
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$8 }
	*($0) = $6
	*($2) = $8
	$9 = [1]
	goto $label$7 
	
.LABEL $label$9
	$9 = [0]
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$5 }
	*($1) = $6
	*($2) = $7
	$9 = [1]
	$8 = *($0)
	$6 = *($1)
	if ( ((uint_64)$6 >= (uint_64)$8) ){ goto $label$6 }
	*($0) = $6
	*($1) = $8
	$9 = [2]
	$7 = *($2)
	$8 = *($3)
	if ( (uint_64)($8 <= $7) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$8
	*($0) = $7
	*($1) = $8
	$9 = [1]
	$7 = *($2)
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$6 }
	*($1) = $7
	*($2) = $8
	$9 = [2]
	
.LABEL $label$7
	$7 = $8
	
.LABEL $label$6
	$8 = *($3)
	if ( ((uint_64)$8 >= (uint_64)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = $6
	$8 = *($3)
	if ( (uint_64)($8 <= $7) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = *($3)
	$7 = *($4)
	if ( ((uint_64)$7 >= (uint_64)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($2) = $8
	*($3) = $7
	$6 = *($1)
	$7 = *($2)
	if ( ((uint_64)$7 >= (uint_64)$6) ){ goto $label$11 }
	*($1) = $7
	*($2) = $6
	$6 = *($0)
	$7 = *($1)
	if ( ((uint_64)$7 >= (uint_64)$6) ){ goto $label$10 }
	*($0) = $7
	*($1) = $6
	$9 = ($9 + [3])
	$6 = *($3)
	$7 = *($4)
	if ( (uint_64)($7 <= $6) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$11
	$9 = ($9 + [1])
	$6 = *($3)
	$7 = *($4)
	if ( (uint_64)($7 <= $6) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$10
	$9 = ($9 + [2])
	$6 = *($3)
	$7 = *($4)
	if ( (uint_64)($7 <= $6) ){ goto $label$1 }
	
.LABEL $label$2
	return $9
	
.LABEL $label$1
	*($3) = $7
	*($4) = $6
	$6 = *($2)
	$7 = *($3)
	if ( ((uint_64)$7 >= (uint_64)$6) ){ goto $label$14 }
	*($2) = $7
	*($3) = $6
	$6 = *($1)
	$7 = *($2)
	if ( ((uint_64)$7 >= (uint_64)$6) ){ goto $label$13 }
	*($1) = $7
	*($2) = $6
	$6 = *($0)
	$7 = *($1)
	if ( ((uint_64)$7 >= (uint_64)$6) ){ goto $label$12 }
	*($0) = $7
	*($1) = $6
	return ($9 + [4])
	
.LABEL $label$14
	return ($9 + [1])
	
.LABEL $label$13
	return ($9 + [2])
	
.LABEL $label$12
	return ($9 + [3])
}

void .FUNC $49 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	*($1 + [1]) = [1]
	$5 = ($1 + [40])
	$7 = *($1 + [40])
	$6 = *($1 + [44])
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	$10 = *($1 + [16])
	$11 = [35]
	
.LOOP $label$3:
	$11 = ($11 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	$12 = ($1 + [52])
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$4 }
	$11 = (($8 & [-8]) + $11)
	
.LABEL $label$4
	$7 = *($12)
	$6 = *($1 + [56])
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	
.LOOP $label$5:
	$11 = ($11 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$6 }
	$11 = (($8 & [-8]) + $11)
	
.LABEL $label$6
	$6 = ($11 + [44])
	if ( ($6 <= [513]) ){ goto $label$8 }
	$11 = CALL $2($6)
	goto $label$7 
	
.LABEL $label$8
	$11 = ($3 - (($6 + [15]) & [-16]))
	$global$0 = $11
	
.LABEL $label$7
	*($4 + [12]) = $11
	*($4 + [8]) = $11
	*($4 + [16]) = ($11 + $6)
	*($4 + [24]) = ($4 + [8])
	*($4 + [56]) = $5
	*($4 + [60]) = $12
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [1])
	*($4 + [40]) = ($1 + [2])
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [24])
	*($4 + [64]) = ($1 + [64])
	*($4 + [68]) = ($1 + [72])
	*($4 + [72]) = ($1 + [80])
	*($4 + [76]) = ($1 + [88])
	*($4 + [80]) = ($1 + [96])
	*($4 + [84]) = ($1 + [104])
	*($4 + [88]) = ($1 + [112])
	CALL $60(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [124]), $2, $11, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$10 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $4($11)
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [96])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [96])
}

void .FUNC $48 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$5 = *($1 + [16])
	if ( ((int_64)*([0] + [8528]) == (int_64)*(($1 + [32]))) ){ goto $label$3 }
	CALL eosio_assert([0], [11201])
	
.LABEL $label$3
	$6 = (int_64)
	*($1 + [24]) = $6(*($1 + [24]) - *([0] + [8520])))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [11249])
	$6 = *(($1 + [24]))
	
.LABEL $label$4
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [11271])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)*(($1 + [16]))) ){ goto $label$6 }
	CALL eosio_assert([0], [10285])
	
.LABEL $label$6
	$7 = ($1 + [40])
	$9 = *($1 + [40])
	$8 = *($1 + [44])
	$10 = ($8 - $9)
	$6 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	$11 = [35]
	
.LOOP $label$7:
	$11 = ($11 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$7 }
	$12 = ($1 + [52])
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$8 }
	$11 = (($10 & [-8]) + $11)
	
.LABEL $label$8
	$9 = *($12)
	$8 = *($1 + [56])
	$10 = ($8 - $9)
	$6 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	
.LOOP $label$9:
	$11 = ($11 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$10 }
	$11 = (($10 & [-8]) + $11)
	
.LABEL $label$10
	$8 = ($11 + [44])
	if ( ($8 <= [513]) ){ goto $label$12 }
	$11 = CALL $2($8)
	goto $label$11 
	
.LABEL $label$12
	$11 = ($3 - (($8 + [15]) & [-16]))
	$global$0 = $11
	
.LABEL $label$11
	*($4 + [12]) = $11
	*($4 + [8]) = $11
	*($4 + [16]) = ($11 + $8)
	*($4 + [24]) = ($4 + [8])
	*($4 + [56]) = $7
	*($4 + [60]) = $12
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [1])
	*($4 + [40]) = ($1 + [2])
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [24])
	*($4 + [64]) = ($1 + [64])
	*($4 + [68]) = ($1 + [72])
	*($4 + [72]) = ($1 + [80])
	*($4 + [76]) = ($1 + [88])
	*($4 + [80]) = ($1 + [96])
	*($4 + [84]) = ($1 + [104])
	*($4 + [88]) = ($1 + [112])
	CALL $60(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [124]), $2, $11, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $4($11)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [96])
	return 
	
.LABEL $label$13
	$global$0 = ($4 + [96])
}

void .FUNC $0 ()
{
	CALL $5()
	CALL $223()
}

int_32 .FUNC $43 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [128])
	$global$0 = $2
	$3 = [0]
	*((($2 + [80]) + [32])) = [0]
	*($2 + [96]) = (int_64)-1
	$4 = (int_64)0
	*($2 + [104]) = (int_64)0
	$5 = *($0)
	*($2 + [80]) = $5
	*($2 + [88]) = $5
	*($2 + [32]) = [9640]
	*($2 + [36]) = CALL $17([9640])
	*($2 + [8]) = *($2 + [32])
	CALL $51(($2 + [120]), ($2 + [8]))
	*((($2 + [40]) + [32])) = [0]
	*($2 + [48]) = (int_64)6138663577826885632
	*($2 + [40]) = (int_64)6138663577826885632
	*($2 + [56]) = (int_64)-1
	*($2 + [64]) = (int_64)0
	*($2 + [76]) = [0]
	$0 = CALL db_lowerbound_i64($5, $5, (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $52(($2 + [80]), $0)
	
.LABEL $label$1
	*($2 + [24]) = ($2 + [40])
	*($2 + [120]) = (int_64)-4503599627370496
	CALL $53(($2 + [16]), ($2 + [24]), ($2 + [120]))
	$0 = ($3 + [88])
	
.LOOP $label$8:
	$6 = [0]
	$3 = *($2 + [20])
	if ( ($3 == 0) ){ goto $label$7 }
	if ( ((int_64)*($3) == (int_64)$1) ){ goto $label$6 }
	CALL $54(($2 + [16]))
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((uint_64)$4 <= (uint_64)*($0)) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = *($2 + [64])
	if ( $7 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = [1]
	$7 = *($2 + [64])
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$8 = ($2 + [68])
	$3 = *($8)
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	if ( ((*($0 + [60]) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($0 + [68])))
	
.LABEL $label$12
	CALL $11($0)
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($2 + [64]))
	*($8) = $7
	CALL $11($3)
	$7 = *($2 + [104])
	if ( $7 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$9
	*($8) = $7
	CALL $11($7)
	$7 = *($2 + [104])
	if ( ($7 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($2 + [104])
	if ( $7 ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($2 + [128])
	return $6
	
.LABEL $label$2
	$8 = ($2 + [108])
	$3 = *($8)
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$16 }
	CALL $11($0)
	
.LABEL $label$16
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$15 }
	$3 = *(($2 + [104]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $7
	
.LABEL $label$13
	*($8) = $7
	CALL $11($3)
	$global$0 = ($2 + [128])
	return $6
}

void .FUNC $42 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	$3 = ($global$0 - [96])
	$global$0 = $3
	CALL require_auth($1)
	$4 = *($2)
	$5 = *($2 + [4])
	CALL prints([8708])
	$4 = ($5 - $4)
	$6 = (CASTING int_64)(int_32 int_32($4 >> [4]))
	CALL printi($6)
	if ( ((int_32)$4 <= (int_32)[0]) ){ goto $label$3 }
	if ( CALL $43($0, $1) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8716])
	if ( CALL $43($0, $1) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8754])
	
.LABEL $label$1
	$7 = [0]
	*((($3 + [56]) + [32])) = [0]
	*($3 + [72]) = (int_64)-1
	*($3 + [80]) = (int_64)0
	*($3 + [92]) = [0]
	$8 = *($0)
	*($3 + [56]) = $8
	*($3 + [64]) = $8
	*((($3 + [16]) + [32])) = [0]
	*($3 + [24]) = $8
	*($3 + [16]) = $8
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	$5 = CALL db_find_i64($8, $8, (int_64)-4157495357179166720, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $44(($3 + [56]), $5)
	if ( ((int_32)*($7 + [48]) == (int_32)($3 + [56])) ){ goto $label$4 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$4
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$5 }
	$9 = (int_64)0
	$10 = ($3 + [44])
	$11 = (($3 + [16]) + [24])
	$12 = ($3 + [24])
	
.LOOP $label$6:
	$4 = *($2)
	CALL prints([8788])
	CALL printi($9)
	CALL prints([8795])
	$13 = ((CASTING uint_32)(uint_64 $9) << [4])
	$4 = ($4 + $13)
	CALL printui(*($4))
	CALL prints([8795])
	CALL printn(*($4 + [8]))
	CALL prints([8797])
	$8 = *((*($2) + $13) + [8])
	$5 = *($10)
	$14 = *($11)
	if ( ((int_32)$14 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$13:
	$4 = ($5 + [-24])
	$15 = *($4)
	if ( ((int_64)*($15 + [16]) == (int_64)$8) ){ goto $label$12 }
	$5 = $4
	if ( ((int_32)$14 != (int_32)$4) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)$14 == (int_32)$5) ){ goto $label$11 }
	if ( ((int_32)*($15 + [120]) != (int_32)($3 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$15 = [0]
	$4 = CALL db_find_i64(*($3 + [16]), *($12), (int_64)-6224682770514313216, $8)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$8 }
	$15 = CALL $45(($3 + [16]), $4)
	if ( ((int_32)*($15 + [120]) == (int_32)($3 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [10021])
	
.LABEL $label$9
	if ( *($15) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [8799])
	
.LABEL $label$7
	CALL $46($0, $1, *((*($2) + $13) + [8]))
	$4 = ($15 + [32])
	if ( ((int_64)*($4) == (int_64)*([0] + [8528])) ){ goto $label$14 }
	CALL eosio_assert([0], [10401])
	
.LABEL $label$14
	$8 = *([0] + [8520])
	$16 = *($15 + [24])
	if ( ($7 == 0) ){ goto $label$16 }
	if ( ((int_64)$16 < (int_64)$8) ){ goto $label$16 }
	CALL $47(($3 + [56]), $7, *($0))
	CALL $48(($3 + [16]), $15, *($0))
	goto $label$15 
	
.LABEL $label$16
	if ( *($15 + [1]) ){ goto $label$15 }
	if ( ((int_64)*($4) == (int_64)*([0] + [8528])) ){ goto $label$17 }
	CALL eosio_assert([0], [10401])
	$16 = *(($15 + [24]))
	$8 = *([0] + [8520])
	
.LABEL $label$17
	if ( ((int_64)$16 >= (int_64)$8) ){ goto $label$15 }
	CALL $49(($3 + [16]), $15, *($0))
	
.LABEL $label$15
	$8 = *((*($2) + $13))
	*($3 + [12]) = $15
	*($3 + [8]) = ($3 + [16])
	*($3) = *($3 + [8])
	CALL $50($0, $1, $8, $3)
	$9 = ((int_64)$9 + (int_64)1)
	if ( ((int_64)$9 < (int_64)$6) ){ goto $label$6 }
	
.LABEL $label$5
	CALL prints([8816])
	$14 = *($3 + [40])
	if ( ($14 == 0) ){ goto $label$18 }
	$2 = ($3 + [44])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$14) ){ goto $label$20 }
	
.LOOP $label$21:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$22 }
	$15 = *($4 + [52])
	if ( ($15 == 0) ){ goto $label$23 }
	*(($4 + [56])) = $15
	CALL $11($15)
	
.LABEL $label$23
	$15 = *($4 + [40])
	if ( ($15 == 0) ){ goto $label$24 }
	*(($4 + [44])) = $15
	CALL $11($15)
	
.LABEL $label$24
	CALL $11($4)
	
.LABEL $label$22
	if ( ((int_32)$14 != (int_32)$5) ){ goto $label$21 }
	$4 = *(($3 + [40]))
	goto $label$19 
	
.LABEL $label$20
	$4 = $14
	
.LABEL $label$19
	*($2) = $14
	CALL $11($4)
	
.LABEL $label$18
	$15 = *($3 + [80])
	if ( ($15 == 0) ){ goto $label$25 }
	$14 = ($3 + [84])
	$4 = *($14)
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$27 }
	
.LOOP $label$28:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$29 }
	CALL $11($5)
	
.LABEL $label$29
	if ( ((int_32)$15 != (int_32)$4) ){ goto $label$28 }
	$4 = *(($3 + [80]))
	goto $label$26 
	
.LABEL $label$27
	$4 = $15
	
.LABEL $label$26
	*($14) = $15
	CALL $11($4)
	
.LABEL $label$25
	$global$0 = ($3 + [96])
}

void .FUNC $41 (int_32 $0)
{
	if ( ((*([0] + [8508]) & [1]) == 0) ){ goto $label$1 }
	CALL $11(*([0] + [8516]))
	
.LABEL $label$1
}

int_32 .FUNC $40 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	CALL $21([8232])
	$3 = *([0] + [8240])
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *([0] + [8244])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$3 = [8248]
	*([0] + [8240]) = [8248]
	$4 = *([0] + [8244])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = CALL $3([260], [1])
	if ( ($3 == 0) ){ goto $label$1 }
	$4 = [0]
	*($3) = *([0] + [8240])
	*([0] + [8240]) = $3
	*([0] + [8244]) = [0]
	
.LABEL $label$2
	*([0] + [8244]) = ($4 + [1])
	*((($3 = ($3 + ($4 << [2]))) + [132])) = $1
	*(($3 + [4])) = $0
	CALL $22([8232])
	return [0]
	
.LABEL $label$1
	CALL $22([8232])
	return [-1]
}

void .FUNC $47 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$5 = ($1 + [16])
	*($4 + [24]) = (int_64))((int_64)0 - *($5))
	$6 = *($1)
	if ( ((int_64)*([0] + [8528]) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [11019])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [32]) + (int_64)*([0] + [8520]))
	*($1 + [32]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [11062])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [11081])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10285])
	
.LABEL $label$4
	$8 = $3
	$3 = ($8 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = $8
	*($4 + [32]) = ($4 + [8])
	*($4 + [48]) = $5
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [32])
	CALL $59(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [52]), $2, $3, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($4 + [40]) = (int_64))((int_64)0 - *($5))
	if ( (CALL $20(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$10 }
	$3 = ($1 + [56])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$11 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$11
	CALL db_idx64_update($1, $2, ($4 + [40]))
	
.LABEL $label$10
	$global$0 = ($4 + [64])
}

void .FUNC $46 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [136]) = $1
	*((($3 + [96]) + [32])) = [0]
	*($3 + [112]) = (int_64)-1
	*($3 + [120]) = (int_64)0
	$4 = *($0)
	*($3 + [96]) = $4
	*($3 + [104]) = $4
	*((($3 + [56]) + [32])) = [0]
	*($3 + [64]) = $4
	*($3 + [56]) = $4
	*($3 + [72]) = (int_64)-1
	*($3 + [80]) = (int_64)0
	*($3 + [92]) = [0]
	*((($3 + [16]) + [32])) = [0]
	*($3 + [24]) = $2
	*($3 + [16]) = $4
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	*($3 + [52]) = [0]
	$5 = [0]
	$6 = CALL db_lowerbound_i64($4, $4, (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$13 }
	$5 = CALL $52(($3 + [96]), $6)
	$1 = *($3 + [136])
	$8 = *(($3 + [44]))
	$7 = *(($3 + [40]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$13 }
	
.LOOP $label$15:
	$6 = ($8 + [-24])
	$9 = *($6)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$14 }
	$8 = $6
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$13 }
	if ( ((int_32)*($9 + [48]) == (int_32)($3 + [16])) ){ goto $label$12 }
	CALL eosio_assert([0], [10021])
	goto $label$12 
	
.LABEL $label$13
	$6 = CALL db_find_i64(*($3 + [16]), *(($3 + [24])), (int_64)-4157495357179166720, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$11 }
	$9 = CALL $44(($3 + [16]), $6)
	if ( ((int_32)*($9 + [48]) == (int_32)($3 + [16])) ){ goto $label$12 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$12
	*($3 + [8]) = CALL $19()
	$1 = *($3 + [136])
	$8 = *(($3 + [44]))
	$10 = *(($3 + [40]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$9 }
	
.LOOP $label$16:
	$6 = ($8 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$10 }
	$8 = $6
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$16 }
	goto $label$9 
	
.LABEL $label$11
	$1 = *($0)
	*($3) = ($3 + [136])
	CALL $55(($3 + [8]), ($3 + [16]), $1, $3)
	goto $label$7 
	
.LABEL $label$10
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$9 }
	if ( ((int_32)*($7 + [48]) == (int_32)($3 + [16])) ){ goto $label$8 }
	CALL eosio_assert([0], [10021])
	goto $label$8 
	
.LABEL $label$9
	$6 = CALL db_find_i64(*($3 + [16]), *(($3 + [24])), (int_64)-4157495357179166720, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$7 = CALL $44(($3 + [16]), $6)
	if ( ((int_32)*($7 + [48]) == (int_32)($3 + [16])) ){ goto $label$8 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$8
	if ( ((int_64)*($3 + [8]) >= (int_64)((int_64)*($5 + [56]) + (int_64)*($7 + [8]))) ){ goto $label$17 }
	CALL eosio_assert([0], [8906])
	
.LABEL $label$17
	$1 = *($0)
	*($3) = ($3 + [8])
	CALL $56(($3 + [16]), $9, $1, $3)
	
.LABEL $label$7
	$1 = *($3 + [136])
	$8 = *(($3 + [84]))
	$9 = *(($3 + [80]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$21 }
	
.LOOP $label$23:
	$6 = ($8 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$22 }
	$8 = $6
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$21 }
	if ( ((int_32)*($7 + [48]) == (int_32)($3 + [56])) ){ goto $label$20 }
	CALL eosio_assert([0], [10021])
	goto $label$20 
	
.LABEL $label$21
	$6 = CALL db_find_i64(*($3 + [56]), *(($3 + [64])), (int_64)-4157495357179166720, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$19 }
	$7 = CALL $44(($3 + [56]), $6)
	if ( ((int_32)*($7 + [48]) == (int_32)($3 + [56])) ){ goto $label$20 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$20
	*($3 + [8]) = CALL $19()
	$1 = *($0)
	*($3) = ($3 + [8])
	CALL $57(($3 + [56]), $7, $1, $3)
	$7 = *($3 + [40])
	if ( $7 ){ goto $label$18 }
	goto $label$5 
	
.LABEL $label$19
	$1 = *($0)
	*($3) = ($3 + [136])
	CALL $58(($3 + [8]), ($3 + [56]), $1, $3)
	$7 = *($3 + [40])
	if ( ($7 == 0) ){ goto $label$5 }
	
.LABEL $label$18
	$9 = ($3 + [44])
	$6 = *($9)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$24 }
	
.LOOP $label$25:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$26 }
	CALL $11($8)
	
.LABEL $label$26
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$25 }
	$6 = *(($3 + [40]))
	*($9) = $7
	CALL $11($6)
	$7 = *($3 + [80])
	if ( $7 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$24
	*($9) = $7
	CALL $11($7)
	$7 = *($3 + [80])
	if ( ($7 == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	CALL eosio_assert([0], [10134])
	
.LABEL $label$5
	$7 = *($3 + [80])
	if ( $7 ){ goto $label$3 }
	
.LABEL $label$4
	$7 = *($3 + [120])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$9 = ($3 + [84])
	$6 = *($9)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$27 }
	
.LOOP $label$28:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$29 }
	CALL $11($8)
	
.LABEL $label$29
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$28 }
	$6 = *(($3 + [80]))
	*($9) = $7
	CALL $11($6)
	$7 = *($3 + [120])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$27
	*($9) = $7
	CALL $11($7)
	$7 = *($3 + [120])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$9 = ($3 + [124])
	$6 = *($9)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$31 }
	
.LOOP $label$32:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$33 }
	CALL $11($8)
	
.LABEL $label$33
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$32 }
	$6 = *(($3 + [120]))
	goto $label$30 
	
.LABEL $label$31
	$6 = $7
	
.LABEL $label$30
	*($9) = $7
	CALL $11($6)
	$global$0 = ($3 + [144])
	return 
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	(unreachable)
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [96])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	$5 = CALL $9([136])
	CALL $96($5)
	*($5 + [120]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [1])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [2])
	*($3 + [44]) = ($5 + [8])
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [52])
	*($3 + [64]) = ($5 + [64])
	*($3 + [68]) = ($5 + [72])
	*($3 + [72]) = ($5 + [80])
	*($3 + [76]) = ($5 + [88])
	*($3 + [80]) = ($5 + [96])
	*($3 + [84]) = ($5 + [104])
	*($3 + [88]) = ($5 + [112])
	CALL $160(($3 + [32]), ($3 + [24]))
	*($5 + [124]) = $1
	*($3 + [24]) = $5
	$7 = *($5 + [16])
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $98(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$4 = *($1 + [52])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [56])) = $4
	CALL $11($4)
	
.LABEL $label$11
	$4 = *($1 + [40])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [44])) = $4
	CALL $11($4)
	
.LABEL $label$12
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return $5
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	CALL $211(($3 + [40]), ($3 + [32]))
	*($5 + [56]) = [-1]
	*($5 + [52]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $73(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $222 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $18($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [52])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [56])) = $2
	CALL $11($2)
	
.LABEL $label$11
	$2 = *($1 + [40])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($1 + [44])) = $2
	CALL $11($2)
	
.LABEL $label$12
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $11($4)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $167 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*(($3 + [20])) = $2
	*(($3 + [24])) = ($2 + $4)
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	CALL $125($3)
	$global$0 = ($3 + [32])
}

void .FUNC $166 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	CALL $129(($3 + [8]), *($3 + [40]))
	$global$0 = ($3 + [48])
}

void .FUNC $165 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	$0 = *($3 + [40])
	CALL require_auth($0)
	if ( CALL $121(($3 + [8]), $0) ){ goto $label$6 }
	CALL $122(($3 + [8]), $0)
	
.LABEL $label$6
	$global$0 = ($3 + [48])
}

void .FUNC $164 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	CALL $119(($3 + [8]), *($3 + [40]))
	$global$0 = ($3 + [48])
}

void .FUNC $163 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	CALL $117(($3 + [8]), *($3 + [40]))
	$global$0 = ($3 + [48])
}

void .FUNC $162 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	*($3 + [8]) = (int_64)0
	$2 = [0]
	$5 = ($3 + [8])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	*($3 + [8]) = (int_64)0
	$5 = ($3 + [8])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10095])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	CALL require_auth($0)
	$global$0 = ($3 + [16])
}

int_32 .FUNC $161 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	*($0) = *($1)
	$2 = *(($1 + [8]))
	$3 = *(($1 + [16]))
	$4 = *(($1 + [24]))
	$5 = *(($1 + [32]))
	*(($0 + [44])) = (int_64)0
	*(($0 + [32])) = $5
	*(($0 + [24])) = $4
	*(($0 + [16])) = $3
	*(($0 + [8])) = $2
	*($0 + [40]) = [0]
	$6 = (*(($1 + [44])) - *($1 + [40]))
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = int_32($6 >> [3])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$2 }
	$6 = CALL $9($6)
	*(($0 + [40])) = $6
	*(($0 + [48])) = ($6 + ($7 << [3]))
	*(($7 = ($0 + [44]))) = $6
	$8 = *(($1 + [40]))
	$9 = (*(($1 + [44])) - $8)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $8, $9)
	*($7) = (*($7) + $9)
	
.LABEL $label$3
	*($0 + [52 align=4]) = (int_64)0
	*(($0 + [60])) = [0]
	$6 = (*(($1 + [56])) - *($1 + [52]))
	if ( ($6 == 0) ){ goto $label$4 }
	$7 = int_32($6 >> [3])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$1 }
	$6 = CALL $9($6)
	*(($0 + [52])) = $6
	*(($0 + [60])) = ($6 + ($7 << [3]))
	*(($7 = ($0 + [56]))) = $6
	$8 = *(($1 + [52]))
	$9 = (*(($1 + [56])) - $8)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($6, $8, $9)
	*($7) = (*($7) + $9)
	
.LABEL $label$4
	*($0 + [64]) = *($1 + [64])
	*(($0 + [112])) = *(($1 + [112]))
	*(($0 + [104])) = *(($1 + [104]))
	*(($0 + [96])) = *(($1 + [96]))
	*(($0 + [88])) = *(($1 + [88]))
	*(($0 + [80])) = *(($1 + [80]))
	*(($0 + [72])) = *(($1 + [72]))
	return $0
	
.LABEL $label$2
	CALL $18(($0 + [40]))
	
.LABEL $label$1
	CALL $18(($0 + [52]))
	(unreachable)
	return (unreachable)
}

void .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy(($2 + [8]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [8]) != (int_32)[0])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [8]) != (int_32)[0])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [8]) != (int_32)[0])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $219(*($1), *($0 + [24]))
	CALL $219(*($1), *($0 + [28]))
	$3 = *($0 + [32])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $5, [8])
	*($3) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$9 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $5, [8])
	*($3) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$12 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$3 = *($0 + [52])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [56])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [10095])
	$0 = *(($1 + [4]))
	
.LABEL $label$14
	CALL memcpy($4, $0, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $169 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*(($3 + [20])) = $2
	*(($3 + [24])) = ($2 + $4)
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	CALL $139($3)
	$global$0 = ($3 + [32])
}

void .FUNC $168 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [32]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $6, [8])
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $136($3, *($3 + [40]), *($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $175 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	$5 = [0]
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$6 = *($0)
	*($4 + [8]) = $6
	*($4 + [16]) = $6
	$7 = CALL db_find_i64($6, $6, (int_64)-6224682770514313216, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $45(($4 + [8]), $7)
	if ( ((int_32)*($5 + [120]) == (int_32)($4 + [8])) ){ goto $label$1 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$1
	$6 = *($0)
	*($4) = $3
	CALL $204(($4 + [8]), $5, $6, $4)
	$7 = *($4 + [32])
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = ($4 + [36])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	$3 = *($0 + [52])
	if ( ($3 == 0) ){ goto $label$7 }
	*(($0 + [56])) = $3
	CALL $11($3)
	
.LABEL $label$7
	$3 = *($0 + [40])
	if ( ($3 == 0) ){ goto $label$8 }
	*(($0 + [44])) = $3
	CALL $11($3)
	
.LABEL $label$8
	CALL $11($0)
	
.LABEL $label$6
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$5 }
	$0 = *(($4 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $7
	
.LABEL $label$3
	*($8) = $7
	CALL $11($0)
	
.LABEL $label$2
	$global$0 = ($4 + [48])
}

void .FUNC $58 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [96])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$1
	*(($5 = CALL $9([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = $1
	CALL $180($3, $5)
	*($4 + [56]) = ($4 + [48])
	*($4 + [52]) = $4
	*($4 + [48]) = $4
	*($4 + [64]) = ($4 + [48])
	*($4 + [76]) = ($5 + [8])
	*($4 + [72]) = $5
	$3 = ($5 + [16])
	*($4 + [80]) = $3
	*($4 + [84]) = ($5 + [24])
	*($4 + [88]) = ($5 + [32])
	CALL $59(($4 + [72]), ($4 + [64]))
	$6 = *($5)
	*($5 + [52]) = CALL db_store_i64(*($1 + [8]), (int_64)-4157495357179166720, $2, $6, $4, [48])
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$6 = *(($1 + [8]))
	$7 = *($5)
	*($4 + [72]) = (int_64))((int_64)0 - *($3))
	*($5 + [56]) = CALL db_idx64_store($6, (int_64)-4157495357179166720, $2, $7, ($4 + [72]))
	*($4 + [72]) = $5
	$2 = *($5)
	*($4) = $2
	$8 = *(($5 + [52]))
	*($4 + [48]) = $8
	$9 = ($1 + [28])
	$3 = *($9)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $2
	*($3 + [16]) = $8
	*($4 + [72]) = [0]
	*($3) = $5
	*($9) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $73(($1 + [24]), ($4 + [72]), $4, ($4 + [48]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $11($5)
	
.LABEL $label$5
	$global$0 = ($4 + [96])
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10344])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $5, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10344])
	$4 = *($1)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [8]), [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $50 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [144])
	$global$0 = $4
	*($4 + [120]) = $2
	*($4 + [128]) = $1
	*((($4 + [80]) + [32])) = [0]
	*($4 + [96]) = (int_64)-1
	*($4 + [104]) = (int_64)0
	$1 = *($0)
	*($4 + [80]) = $1
	*($4 + [88]) = $1
	*((($4 + [40]) + [32])) = [0]
	*($4 + [40]) = $1
	*($4 + [56]) = (int_64)-1
	*($4 + [64]) = (int_64)0
	*($4 + [48]) = *(*($3 + [4]) + [16])
	*($4 + [76]) = [0]
	*($4 + [32]) = (int_64)0
	*($4 + [24]) = ($4 + [40])
	*($4 + [136]) = (int_64)0
	CALL $61(($4 + [16]), ($4 + [24]), ($4 + [136]))
	$1 = *($0)
	$3 = *($4 + [20])
	*($4 + [140]) = ($4 + [120])
	*($4 + [136]) = ($4 + [128])
	if ( $3 ){ goto $label$1 }
	CALL eosio_assert([0], [10153])
	
.LABEL $label$1
	CALL $62(*($4 + [24]), $3, $1, ($4 + [136]))
	*($4 + [8]) = ($4 + [40])
	*($4 + [136]) = (int_64)0
	CALL $63($4, ($4 + [8]), ($4 + [136]))
	CALL $64($4)
	CALL $64($4)
	CALL $64($4)
	CALL $64($4)
	CALL $64($4)
	CALL $64($4)
	CALL $64($4)
	CALL $64($4)
	CALL $64($4)
	*($4 + [32]) = *(*($4 + [4]) + [16])
	$1 = *($0)
	$3 = *($4 + [20])
	*($4 + [136]) = ($4 + [32])
	if ( $3 ){ goto $label$2 }
	CALL eosio_assert([0], [10153])
	
.LABEL $label$2
	CALL $65(*($4 + [24]), $3, $1, ($4 + [136]))
	$3 = [0]
	$5 = CALL db_lowerbound_i64(*($4 + [80]), *(($4 + [88])), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$3 = CALL $52(($4 + [80]), $5)
	$1 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$1 = *($0)
	CALL eosio_assert([0], [10153])
	
.LABEL $label$3
	CALL $66(($4 + [80]), $3, $1, ($4 + [136]))
	$3 = [0]
	$5 = ($4 + [88])
	$6 = CALL db_lowerbound_i64(*($4 + [80]), *($5), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$3 = CALL $52(($4 + [80]), $6)
	
.LABEL $label$5
	CALL prints([10460])
	CALL printui(*($3 + [8]))
	CALL prints([8797])
	if ( ((int_64)((uint_64)*(CALL $52(($4 + [80]), CALL $fimport$9(*($4 + [80]), *($5), (int_64)7235159537265672192, (int_64)0)) + [8]) % (uint_64)*($3 + [48])) == (int_64)0) ){ goto $label$10 }
	$5 = *($4 + [64])
	if ( $5 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $67($0)
	$5 = *($4 + [64])
	if ( ($5 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$6 = ($4 + [68])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$13 }
	CALL $11($3)
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($4 + [64]))
	*($6) = $5
	CALL $11($0)
	$5 = *($4 + [104])
	if ( $5 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$11
	*($6) = $5
	CALL $11($5)
	$5 = *($4 + [104])
	if ( ($5 == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$5 = *($4 + [104])
	if ( $5 ){ goto $label$6 }
	
.LABEL $label$7
	$global$0 = ($4 + [144])
	return 
	
.LABEL $label$6
	$6 = ($4 + [108])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$15 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$17 }
	CALL $11($3)
	
.LABEL $label$17
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($4 + [104]))
	goto $label$14 
	
.LABEL $label$15
	$0 = $5
	
.LABEL $label$14
	*($6) = $5
	CALL $11($0)
	$global$0 = ($4 + [144])
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [10672])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [10777])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [10710])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [10777])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [96])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	$5 = CALL $9([136])
	CALL $92($5)
	*($5 + [120]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [48])
	*($3 + [64]) = ($5 + [56])
	*($3 + [68]) = ($5 + [64])
	*($3 + [72]) = ($5 + [72])
	*($3 + [76]) = ($5 + [80])
	*($3 + [80]) = ($5 + [88])
	*($3 + [84]) = ($5 + [96])
	*($3 + [88]) = ($5 + [104])
	*($3 + [92]) = ($5 + [112])
	CALL $212(($3 + [40]), ($3 + [32]))
	*($5 + [124]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $94(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return $5
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx_double_lowerbound(*($2), *($2 + [8]), (int_64)-5915305344019464192, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*(($4 + [92])) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10021])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $176($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)-5915305344019464192, $6))
	if ( ((int_32)*($4 + [92]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$2
	*($4 + [100]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $54 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [100])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10104])
	$2 = *(($0 + [4]))
	$3 = *($2 + [100])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *(*($0))
	$3 = CALL db_idx_double_find_primary(*($3), *($3 + [8]), (int_64)-5915305344019464192, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [100]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx_double_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$7 }
	$2 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)*(($4 + [92])) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10021])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $176($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)-5915305344019464192, $6))
	if ( ((int_32)*($4 + [92]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$5
	*($4 + [100]) = $5
	
.LABEL $label$4
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $55 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [96])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$1
	*(($5 = CALL $9([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = $1
	CALL $179($3, $5)
	*($4 + [56]) = ($4 + [48])
	*($4 + [52]) = $4
	*($4 + [48]) = $4
	*($4 + [64]) = ($4 + [48])
	*($4 + [76]) = ($5 + [8])
	*($4 + [72]) = $5
	$3 = ($5 + [16])
	*($4 + [80]) = $3
	*($4 + [84]) = ($5 + [24])
	*($4 + [88]) = ($5 + [32])
	CALL $59(($4 + [72]), ($4 + [64]))
	$6 = *($5)
	*($5 + [52]) = CALL db_store_i64(*($1 + [8]), (int_64)-4157495357179166720, $2, $6, $4, [48])
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$6 = *(($1 + [8]))
	$7 = *($5)
	*($4 + [72]) = (int_64))((int_64)0 - *($3))
	*($5 + [56]) = CALL db_idx64_store($6, (int_64)-4157495357179166720, $2, $7, ($4 + [72]))
	*($4 + [72]) = $5
	$2 = *($5)
	*($4) = $2
	$8 = *(($5 + [52]))
	*($4 + [48]) = $8
	$9 = ($1 + [28])
	$3 = *($9)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $2
	*($3 + [16]) = $8
	*($4 + [72]) = [0]
	*($3) = $5
	*($9) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $73(($1 + [24]), ($4 + [72]), $4, ($4 + [48]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $11($5)
	
.LABEL $label$5
	$global$0 = ($4 + [96])
}

void .FUNC $56 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$6 = *($1 + [16])
	*($5 + [24]) = (int_64))((int_64)0 - $6)
	$7 = *(*($3))
	*($1 + [16]) = ((int_64)$6 + (int_64)1)
	*($1 + [8]) = $7
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $3
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = ($1 + [8])
	*($5 + [40]) = $1
	$3 = ($1 + [16])
	*($5 + [48]) = $3
	*($5 + [52]) = ($1 + [24])
	*($5 + [56]) = ($1 + [32])
	CALL $59(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [52]), $2, $4, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [40]) = (int_64))((int_64)0 - *($3))
	if ( (CALL $20(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [56])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($5 + [32]), $6)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, $2, ($5 + [40]))
	
.LABEL $label$4
	$global$0 = ($5 + [64])
}

void .FUNC $57 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$6 = *($1 + [16])
	*($5 + [24]) = (int_64))((int_64)0 - $6)
	$7 = *(*($3))
	*($1 + [16]) = ((int_64)$6 + (int_64)1)
	*($1 + [8]) = $7
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $3
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = ($1 + [8])
	*($5 + [40]) = $1
	$3 = ($1 + [16])
	*($5 + [48]) = $3
	*($5 + [52]) = ($1 + [24])
	*($5 + [56]) = ($1 + [32])
	CALL $59(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [52]), $2, $4, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [40]) = (int_64))((int_64)0 - *($3))
	if ( (CALL $20(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [56])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($5 + [32]), $6)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, $2, ($5 + [40]))
	
.LABEL $label$4
	$global$0 = ($5 + [64])
}

void .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [8])
	$5 = (CASTING uint_32)(uint_64 $4)
	$6 = ((int_64)$4 & (int_64)255)
	$7 = (int_64)($6 == 0)
	if ( $7 ){ goto $label$2 }
	$8 = ((int_64)$6 + (int_64)1)
	$9 = (int_64)1
	
.LOOP $label$3:
	$9 = ((int_64)$9 * (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)1
	
.LABEL $label$1
	$5 = ($5 & [255])
	$10 = ($2 - (($5 + [16]) & [496]))
	$2 = $10
	$global$0 = $2
	*(($11 = ($10 + $5))) = [0]
	$12 = *($1)
	if ( $7 ){ goto $label$4 }
	$8 = ((int_64)( (int_64)-1 ? (int_64)1 : ((int_64)$12 < (int_64)0) ) * (int_64)((int_64)$12 % (int_64)$9))
	$6 = ((int_64)$6 + (int_64)1)
	$1 = ($11 + [-1])
	
.LOOP $label$5:
	$13 = ((int_64)$8 / (int_64)10)
	*($1) = ((CASTING uint_32)(uint_64 (int_64))($8 - ((int_64)$13 * (int_64)10))) + [48])
	$1 = ($1 + [-1])
	$8 = $13
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)$6 > (int_64)1) ){ goto $label$5 }
	
.LABEL $label$4
	$11 = ($2 - (($5 + [47]) & [496]))
	$global$0 = $11
	$14 = ( [10869] ? [8951] : *($10) )
	$9 = ((int_64)$12 / (int_64)$9)
	$15 = ($5 + [32])
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( (int_64)($8) == 0) ){ goto $label$9 }
	$5 = [0]
	
.LOOP $label$11:
	*((($3 + [41]) + ($1 = $5))) = $8
	$5 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$11 }
	
.LABEL $label$10
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [24]) = ($5 << [1])
	$2 = (($3 + [24]) | [1])
	goto $label$7 
	
.LABEL $label$9
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	*($3 + [24]) = [0]
	$1 = (($3 + [24]) | [1])
	$5 = $1
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$2 = CALL $9($7)
	*($3 + [24]) = ($7 | [1])
	*($3 + [32]) = $2
	*($3 + [28]) = $5
	
.LABEL $label$7
	$7 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$12:
	*(($2 + $1)) = *((($3 + [41]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$12 }
	$5 = ($2 + $5)
	$1 = (($3 + [24]) | [1])
	
.LABEL $label$6
	*($5) = [0]
	*(($3 + [16])) = ( *($3 + [32]) ? $1 : (*($3 + [24]) & [1]) )
	*($3 + [12]) = $10
	*($3 + [8]) = $14
	*($3) = $9
	CALL $27($11, $15, [10857], $3)
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($3 + [32])))
	
.LABEL $label$13
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL $17($11)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$17 }
	*($0) = ($1 << [1])
	$5 = ($0 + [1])
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$2 = (($1 + [16]) & [-16])
	$5 = CALL $9($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $1
	
.LABEL $label$16
	CALL memcpy($5, $11, $1)
	
.LABEL $label$15
	*(($5 + $1)) = [0]
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$14
	CALL $28($0)
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [36])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$10
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [40])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10095])
	$1 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $153 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [228]) = $2
	*($3 + [224]) = $2
	*($3 + [232]) = ($2 + $4)
	*($3 + [216]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$2 = *($3 + [228])
	
.LABEL $label$5
	CALL memcpy(($3 + [216]), $2, [8])
	*($3 + [228]) = ($2 + [8])
	*($3 + [160]) = (int_64)0
	*($3 + [152]) = (int_64)0
	*($3 + [176]) = (int_64)0
	*($3 + [184]) = (int_64)0
	*($3 + [200]) = (int_64)0
	*($3 + [256]) = ($3 + [224])
	*($3 + [276]) = (($3 + [152]) + [8])
	*($3 + [280]) = (($3 + [152]) + [16])
	*($3 + [284]) = (($3 + [152]) + [24])
	*($3 + [288]) = (($3 + [152]) + [32])
	*($3 + [292]) = (($3 + [152]) + [40])
	*($3 + [296]) = (($3 + [152]) + [48])
	*($3 + [300]) = (($3 + [152]) + [56])
	*($3 + [272]) = ($3 + [152])
	CALL $154(($3 + [272]), ($3 + [256]))
	*(($2 = (($3 + [136]) + [8]))) = *((($3 + [224]) + [8]))
	*($3 + [136]) = *($3 + [224])
	*(($4 = (($3 + [240]) + [8]))) = *($2)
	*($3 + [240]) = *($3 + [136])
	$2 = *($4)
	*((($3 + [256]) + [8])) = $2
	*((($3 + [272]) + [24])) = $2
	*($3 + [272]) = $0
	*($3 + [280]) = $1
	$0 = *($3 + [240])
	*($3 + [288]) = $0
	*($3 + [256]) = $0
	$0 = *($3 + [160])
	*((($3 + [72]) + [8])) = $0
	$1 = *($3 + [168])
	*((($3 + [72]) + [16])) = $1
	$5 = *($3 + [176])
	*((($3 + [72]) + [24])) = $5
	$6 = *($3 + [184])
	*((($3 + [72]) + [32])) = $6
	$7 = *($3 + [192])
	*((($3 + [72]) + [40])) = $7
	$8 = *($3 + [200])
	*((($3 + [72]) + [48])) = $8
	$9 = *($3 + [208])
	*((($3 + [72]) + [56])) = $9
	*((($3 + [8]) + [8])) = $0
	*((($3 + [8]) + [16])) = $1
	*((($3 + [8]) + [24])) = $5
	*((($3 + [8]) + [32])) = $6
	*((($3 + [8]) + [40])) = $7
	*((($3 + [8]) + [48])) = $8
	*((($3 + [8]) + [56])) = $9
	$0 = *($3 + [152])
	*($3 + [72]) = $0
	*($3 + [8]) = $0
	CALL $95(($3 + [272]), *($3 + [216]), ($3 + [8]))
	$global$0 = ($3 + [304])
}

void .FUNC $150 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	CALL $82(($3 + [8]), *($3 + [40]))
	$global$0 = ($3 + [48])
}

void .FUNC $151 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [384])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [292]) = $2
	*($3 + [288]) = $2
	*($3 + [296]) = ($2 + $4)
	*($3 + [368]) = ($3 + [288])
	*($3 + [308]) = (($3 + [200]) + [8])
	*($3 + [312]) = ($3 + [216])
	*($3 + [316]) = (($3 + [200]) + [24])
	*($3 + [320]) = ($3 + [232])
	*($3 + [324]) = ($3 + [240])
	*($3 + [328]) = ($3 + [248])
	*($3 + [332]) = ($3 + [256])
	*($3 + [336]) = ($3 + [264])
	*($3 + [340]) = ($3 + [272])
	*($3 + [344]) = ($3 + [280])
	*($3 + [304]) = ($3 + [200])
	CALL $152(($3 + [304]), ($3 + [368]))
	*(($2 = (($3 + [184]) + [8]))) = *($3 + [296])
	*($3 + [184]) = *($3 + [288])
	*(($4 = (($3 + [352]) + [8]))) = *($2)
	*($3 + [352]) = *($3 + [184])
	$2 = *($4)
	*((($3 + [368]) + [8])) = $2
	*((($3 + [304]) + [24])) = $2
	*($3 + [304]) = $0
	*($3 + [312]) = $1
	$0 = *($3 + [352])
	*($3 + [320]) = $0
	*($3 + [368]) = $0
	CALL memcpy(($3 + [96]), ($3 + [200]), [88])
	CALL memcpy(($3 + [8]), ($3 + [96]), [88])
	CALL $90(($3 + [304]), ($3 + [8]))
	$global$0 = ($3 + [384])
}

void .FUNC $156 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [32]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $6, [8])
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $106($3, *($3 + [40]), *($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $157 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [32]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $6, [8])
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $114($3, *($3 + [40]), *($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $154 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $5, [8])
	*($3) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10095])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $155 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	*($3 + [104]) = ($2 + $4)
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [100]) = ($2 + [8])
	*($3 + [80]) = [0]
	*($3 + [72]) = (int_64)0
	CALL $147(($3 + [96]), ($3 + [72]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [96]) + [8]))
	*($3 + [24]) = *($3 + [96])
	*(($4 = (($3 + [112]) + [8]))) = *($2)
	*($3 + [112]) = *($3 + [24])
	$2 = *($4)
	*((($3 + [128]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$0 = *($3 + [112])
	*($3 + [56]) = $0
	*($3 + [128]) = $0
	$0 = *($3 + [88])
	$2 = CALL $29(($3 + [8]), ($3 + [72]))
	CALL $101(($3 + [40]), $0, $3)
	if ( (*($2) & [1]) ){ goto $label$8 }
	if ( (*($3 + [72]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $11(*($2 + [8]))
	if ( ((*($3 + [72]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $11(*(($3 + [80])))
	$global$0 = ($3 + [144])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [144])
}

void .FUNC $158 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [76]) = $2
	*($3 + [72]) = $2
	*($3 + [80]) = ($2 + $4)
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$2 = *($3 + [76])
	
.LABEL $label$5
	CALL memcpy(($3 + [64]), $2, [8])
	*($3 + [76]) = ($2 + [8])
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3 + [88]) = ($3 + [72])
	*($3 + [100]) = ($3 + [8])
	*($3 + [104]) = ($3 + [16])
	*($3 + [108]) = ($3 + [24])
	*($3 + [112]) = ($3 + [32])
	*($3 + [116]) = ($3 + [40])
	*($3 + [120]) = ($3 + [48])
	*($3 + [124]) = ($3 + [56])
	*($3 + [96]) = $3
	CALL $154(($3 + [96]), ($3 + [88]))
	if ( CALL has_auth($0) ){ goto $label$6 }
	if ( CALL has_auth((int_64)0) ){ goto $label$6 }
	CALL eosio_assert([0], [9148])
	
.LABEL $label$6
	$global$0 = ($3 + [128])
}

void .FUNC $159 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [252]) = $4
	*($3 + [248]) = $4
	*($3 + [256]) = ($4 + $5)
	*($3 + [130]) = [0]
	*($3 + [128]) = [0]
	*($3 + [136]) = (int_64)0
	*($3 + [144]) = (int_64)0
	$4 = CALL $17([8704])
	if ( ($4 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9854])
	goto $label$6 
	
.LABEL $label$7
	if ( ($4 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$6 = (int_64)0
	
.LOOP $label$8:
	$5 = *(($4 + [8703]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9899])
	
.LABEL $label$9
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$8 }
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$6 = (int_64)4
	
.LABEL $label$4
	*(($3 + [160])) = $6
	*($3 + [152]) = (int_64)0
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$6 = $7
	$5 = $4
	$4 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$6 = $7
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$5 = ((int_32)$4 < (int_32)[6])
	$2 = ($4 + [1])
	$4 = $2
	if ( $5 ){ goto $label$14 }
	$4 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [10001])
	
.LABEL $label$10
	*(($3 + [176])) = (int_64)0
	*((($3 + [128]) + [56])) = (int_64)0
	*($3 + [168]) = (int_64)0
	*($3 + [192]) = (int_64)0
	*($3 + [208]) = (int_64)0
	*($3 + [216]) = (int_64)0
	*($3 + [232]) = (int_64)0
	*($3 + [264]) = ($3 + [248])
	*($3 + [276]) = (($3 + [128]) | [1])
	*($3 + [280]) = (($3 + [128]) | [2])
	*($3 + [284]) = ($3 + [136])
	*($3 + [288]) = ($3 + [144])
	*($3 + [292]) = ($3 + [152])
	*($3 + [296]) = ($3 + [168])
	*($3 + [300]) = ($3 + [180])
	*($3 + [304]) = ($3 + [192])
	*($3 + [308]) = ($3 + [200])
	*($3 + [312]) = ($3 + [208])
	*($3 + [316]) = ($3 + [216])
	*($3 + [320]) = ($3 + [224])
	*($3 + [324]) = ($3 + [232])
	*($3 + [328]) = ($3 + [240])
	*($3 + [272]) = ($3 + [128])
	CALL $160(($3 + [272]), ($3 + [264]))
	$4 = CALL $161(($3 + [8]), ($3 + [128]))
	CALL require_auth($0)
	$5 = *($4 + [52])
	if ( ($5 == 0) ){ goto $label$15 }
	*(($4 + [56])) = $5
	CALL $11($5)
	
.LABEL $label$15
	$5 = *($4 + [40])
	if ( ($5 == 0) ){ goto $label$16 }
	*(($4 + [44])) = $5
	CALL $11($5)
	
.LABEL $label$16
	$4 = *(($3 + [180]))
	if ( ($4 == 0) ){ goto $label$17 }
	*(($3 + [184])) = $4
	CALL $11($4)
	
.LABEL $label$17
	$4 = *(($3 + [168]))
	if ( ($4 == 0) ){ goto $label$18 }
	*(($3 + [172])) = $4
	CALL $11($4)
	
.LABEL $label$18
	$global$0 = ($3 + [336])
}

void .FUNC $179 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	*($1) = *(*($0))
	$2 = CALL $19()
	*($1 + [16]) = (int_64)1
	*($1 + [8]) = $2
	$0 = CALL $17([8704])
	if ( ($0 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9854])
	goto $label$3 
	
.LABEL $label$4
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$3 = *(($0 + [8703]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9899])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$5 }
	$4 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$4 = (int_64)4
	
.LABEL $label$1
	$2 = (uint_64)$4 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$5 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$2 = $5
	$3 = $0
	$0 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$2 = $5
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$0 < (int_32)[6])
	$6 = ($0 + [1])
	$0 = $6
	if ( $3 ){ goto $label$11 }
	$0 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [10001])
	
.LABEL $label$7
	*($1 + [32]) = (int_64)0
	*(($1 + [40])) = $4
	*($1 + [24]) = *([0] + [8536])
}

void .FUNC $183 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	
.LOOP $label$1:
	$5 = ($1 + [-16])
	$6 = ($1 + [-8])
	
.LOOP $label$6:
	$4 = $0
	$0 = ($1 - $4)
	$7 = int_32($0 >> [3])
	if ( ((uint_32)$7 <= (uint_32)[5]) ){ goto $label$38 }
	if ( ((int_32)$0 <= (int_32)[247]) ){ goto $label$37 }
	$8 = ($4 + (((int_32)$7 / (int_32)[2]) << [3]))
	if ( ((int_32)$0 < (int_32)[7993]) ){ goto $label$39 }
	$0 = (((int_32)$7 / (int_32)[4]) << [3])
	$9 = CALL $188($4, ($4 + $0), $8, ($8 + $0), $6, $2)
	$11 = *($8)
	$10 = *($4)
	if ( ((uint_64)$10 >= (uint_64)$11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$39
	$12 = *($6)
	$10 = *($4)
	$11 = *($8)
	if ( ((uint_64)$11 >= (uint_64)$10) ){ goto $label$44 }
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$43 }
	*($4) = $12
	*($6) = $10
	goto $label$41 
	
.LABEL $label$44
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$40 }
	*($8) = $12
	*($6) = $11
	$11 = *($4)
	$12 = *($8)
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$41 }
	*($4) = $12
	*($8) = $11
	goto $label$42 
	
.LABEL $label$43
	*($4) = $11
	*($8) = $10
	$12 = *($6)
	if ( ((uint_64)$12 >= (uint_64)$10) ){ goto $label$41 }
	*($8) = $12
	*($6) = $10
	
.LABEL $label$42
	$9 = [2]
	$11 = *($8)
	$10 = *($4)
	if ( (uint_64)($10 <= $11) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$41
	$9 = [1]
	$11 = *($8)
	$10 = *($4)
	if ( (uint_64)($10 <= $11) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$40
	$9 = [0]
	$11 = *($8)
	$10 = *($4)
	if ( (uint_64)($10 <= $11) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$38
	goto $label$25 
	
.LABEL $label$45
	$11 = *($4)
	$0 = ($1 + [-8])
	$12 = *($0)
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$18 }
	*($4) = $12
	*($0) = $11
	return 
	
.LABEL $label$37
	$11 = *($4 + [16])
	$10 = *($4)
	$12 = *($4 + [8])
	if ( ((uint_64)$12 >= (uint_64)$10) ){ goto $label$51 }
	if ( ((uint_64)$11 >= (uint_64)$12) ){ goto $label$50 }
	*($4) = $11
	*(($4 + [16])) = $10
	goto $label$49 
	
.LABEL $label$51
	if ( ((uint_64)$11 >= (uint_64)$12) ){ goto $label$47 }
	*(($4 + [16])) = $12
	*(($0 = ($4 + [8]))) = $11
	if ( ((uint_64)$11 >= (uint_64)$10) ){ goto $label$48 }
	*($4) = $11
	*($0) = $10
	$7 = ($4 + [24])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$46 }
	goto $label$16 
	
.LABEL $label$50
	*($4) = $12
	*(($0 = ($4 + [8]))) = $10
	if ( ((uint_64)$11 >= (uint_64)$10) ){ goto $label$47 }
	*(($4 + [16])) = $10
	*($0) = $11
	
.LABEL $label$49
	$12 = $10
	
.LABEL $label$48
	$7 = ($4 + [24])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$46 }
	goto $label$17 
	
.LABEL $label$47
	$12 = $11
	$7 = ($4 + [24])
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$15 }
	
.LABEL $label$46
	$11 = *($7)
	if ( ((uint_64)$11 >= (uint_64)$12) ){ goto $label$26 }
	$13 = [2]
	goto $label$3 
	
.LABEL $label$36
	$0 = ($1 + [-8])
	$12 = *($0)
	$10 = *($4)
	$11 = *($4 + [8])
	if ( ((uint_64)$11 >= (uint_64)$10) ){ goto $label$33 }
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$31 }
	*($4) = $12
	*($0) = $10
	return 
	
.LABEL $label$35
	CALL $188($4, ($4 + [8]), ($4 + [16]), ($4 + [24]), ($1 + [-8]), $2)
	return 
	
.LABEL $label$34
	$11 = *($4 + [16])
	$10 = *($4)
	$12 = *($4 + [8])
	if ( ((uint_64)$12 >= (uint_64)$10) ){ goto $label$32 }
	if ( ((uint_64)$11 >= (uint_64)$12) ){ goto $label$30 }
	*($4) = $11
	*(($4 + [16])) = $10
	goto $label$29 
	
.LABEL $label$33
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$21 }
	*(($7 = ($4 + [8]))) = $12
	*($0) = $11
	$11 = *($4)
	$12 = *($7)
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$20 }
	*($4) = $12
	*($7) = $11
	return 
	
.LABEL $label$32
	if ( ((uint_64)$11 >= (uint_64)$12) ){ goto $label$28 }
	*(($4 + [16])) = $12
	*(($0 = ($4 + [8]))) = $11
	if ( ((uint_64)$11 >= (uint_64)$10) ){ goto $label$27 }
	*($4) = $11
	*($0) = $10
	goto $label$27 
	
.LABEL $label$31
	*($4) = $11
	*(($7 = ($4 + [8]))) = $10
	$12 = *($0)
	if ( ((uint_64)$12 >= (uint_64)$10) ){ goto $label$19 }
	*($7) = $12
	*($0) = $10
	return 
	
.LABEL $label$30
	*($4) = $12
	*(($0 = ($4 + [8]))) = $10
	if ( ((uint_64)$11 >= (uint_64)$10) ){ goto $label$28 }
	*(($4 + [16])) = $10
	*($0) = $11
	
.LABEL $label$29
	$12 = $10
	goto $label$27 
	
.LABEL $label$28
	$12 = $11
	
.LABEL $label$27
	$0 = ($1 + [-8])
	$11 = *($0)
	if ( ((uint_64)$11 >= (uint_64)$12) ){ goto $label$24 }
	*(($7 = ($4 + [16]))) = $11
	*($0) = $12
	$0 = ($4 + [8])
	$11 = *($0)
	$12 = *($7)
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$23 }
	*($7) = $11
	*($0) = $12
	$11 = *($4)
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$22 }
	*($4) = $12
	*(($4 + [8])) = $11
	return $13
	
.LABEL $label$26
	$13 = [0]
	goto $label$3 
	
.LABEL $label$25
	$13 = [6]
	goto $label$3 
	
.LABEL $label$24
	$13 = [6]
	goto $label$3 
	
.LABEL $label$23
	$13 = [6]
	goto $label$3 
	
.LABEL $label$22
	$13 = [6]
	goto $label$3 
	
.LABEL $label$21
	$13 = [6]
	goto $label$3 
	
.LABEL $label$20
	$13 = [6]
	goto $label$3 
	
.LABEL $label$19
	$13 = [6]
	goto $label$3 
	
.LABEL $label$18
	$13 = [6]
	goto $label$3 
	
.LABEL $label$17
	$13 = [6]
	goto $label$3 
	
.LABEL $label$16
	$13 = [6]
	goto $label$3 
	
.LABEL $label$15
	$13 = [6]
	goto $label$3 
	
.LABEL $label$14
	$0 = $5
	
.LOOP $label$53:
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$52 }
	$12 = *($0)
	$7 = ($0 + [-8])
	$0 = $7
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$53 }
	*($4) = $12
	*(($7 = ($7 + [8]))) = $10
	$9 = ($9 + [1])
	$3 = ($4 + [8])
	if ( ($3 <= $7) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$52
	$7 = ($4 + [8])
	$11 = *($6)
	if ( (uint_64)($10 <= $11) ){ goto $label$58 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$57 }
	$7 = ($4 + [16])
	
.LOOP $label$60:
	$0 = ($7 + [-8])
	$12 = *($0)
	if ( (uint_64)($10 <= $12) ){ goto $label$59 }
	$7 = ($7 + [8])
	if ( ((int_32)$1 != (int_32)$7) ){ goto $label$60 }
	goto $label$56 
	
.LABEL $label$59
	*($0) = $11
	*($6) = $12
	
.LABEL $label$58
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$55 }
	
.LOOP $label$61:
	$0 = ($7 + [-8])
	$12 = *($4)
	
.LOOP $label$62:
	$0 = ($0 + [8])
	$11 = *($0)
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$62 }
	$7 = ($0 + [8])
	
.LOOP $label$63:
	$6 = ($6 + [-8])
	$10 = *($6)
	if ( (uint_64)($12 <= $10) ){ goto $label$63 }
	if ( ((uint_32)$0 >= (uint_32)$6) ){ goto $label$64 }
	*($0) = $10
	*($6) = $11
	goto $label$61 
	
.LABEL $label$64
	$7 = ([4] & [7])
	if ( ((uint_32)$7 > (uint_32)[4]) ){ goto $label$54 }
	goto $label$4 
	
.LABEL $label$57
	$13 = [6]
	goto $label$3 
	
.LABEL $label$56
	$13 = [6]
	goto $label$3 
	
.LABEL $label$55
	$13 = [6]
	goto $label$3 
	
.LABEL $label$54
	$13 = [6]
	goto $label$3 
	
.LABEL $label$13
	$7 = $6
	$3 = ($4 + [8])
	if ( ($3 <= $7) ){ goto $label$11 }
	
.LABEL $label$12
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$11
	
.LOOP $label$65:
	$0 = ($3 + [-8])
	$12 = *($8)
	
.LOOP $label$66:
	$0 = ($0 + [8])
	$11 = *($0)
	if ( (uint_64)($11 <= $12) ){ goto $label$66 }
	$3 = ($0 + [8])
	
.LOOP $label$67:
	$7 = ($7 + [-8])
	$10 = *($7)
	if ( ((uint_64)$10 >= (uint_64)$12) ){ goto $label$67 }
	if ( ((uint_32)$0 > (uint_32)$7) ){ goto $label$68 }
	*($0) = $10
	*($7) = $11
	$8 = ( $7 ? $8 : ((int_32)$8 == (int_32)$0) )
	$9 = ($9 + [1])
	goto $label$65 
	
.LABEL $label$68
	$3 = $0
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$10
	$11 = *($3)
	$12 = *($8)
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$9 }
	*($3) = $12
	*($8) = $11
	if ( ($9 + [1]) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	if ( $9 ){ goto $label$7 }
	
.LABEL $label$8
	$7 = CALL $189($4, $3, $2)
	$0 = ($3 + [8])
	if ( CALL $189($0, $1, $2) ){ goto $label$5 }
	if ( $7 ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((int_32)($3 - $4) >= (int_32)($1 - $3)) ){ goto $label$2 }
	CALL $183($4, $3, $2)
	$0 = ($3 + [8])
	goto $label$6 
	
.LABEL $label$5
	$1 = ( $1 ? $3 : $7 )
	$0 = $4
	$7 = (( [1] ? [2] : $7 ) & [7])
	if ( ((uint_32)$7 <= (uint_32)[4]) ){ goto $label$4 }
	$13 = [6]
	goto $label$3 
	
.LABEL $label$4
	if ( (([1] << $7) & [21]) ){ goto $label$1 }
	$13 = [6]
	
.LABEL $label$3
	
.LOOP $label$69:
	goto $label$77 
	
.LABEL $label$83
	$0 = $7
	$13 = [3]
	goto $label$69 
	
.LABEL $label$82
	*($0) = $12
	$0 = ($0 + [-8])
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$70 }
	$13 = [4]
	goto $label$69 
	
.LABEL $label$81
	$12 = *(($0 + [-8]))
	if ( (uint_64)($11 <= $12) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$80
	$0 = $4
	$13 = [5]
	goto $label$69 
	
.LABEL $label$79
	*($0) = $11
	$0 = ($7 + [8])
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$73 }
	$13 = [1]
	goto $label$69 
	
.LABEL $label$78
	$12 = *($7)
	$7 = $0
	$11 = *($7)
	if ( (uint_64)($11 <= $12) ){ goto $label$75 }
	$13 = [0]
	goto $label$69 
	
.LABEL $label$77
	$0 = ($7 + [8])
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$74 }
	$13 = [6]
	goto $label$69 
	
.LABEL $label$76
	return 
	
.LABEL $label$75
	$13 = [2]
	goto $label$69 
	
.LABEL $label$74
	$13 = [1]
	goto $label$69 
	
.LABEL $label$73
	$13 = [6]
	goto $label$69 
	
.LABEL $label$72
	$13 = [3]
	goto $label$69 
	
.LABEL $label$71
	$13 = [5]
	goto $label$69 
	
.LABEL $label$70
	$13 = [7]
	goto $label$69 
	
.LABEL $label$2
	CALL $183(($3 + [8]), $1, $2)
	$1 = $3
	$0 = $4
	goto $label$1 
	$7
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)7615821578177085441, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [104]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10021])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $79($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)7615821578177085440, $6))
	if ( ((int_32)*($4 + [104]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$2
	*(($4 + [116])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $68 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [288])
	$global$0 = $4
	*($4 + [256]) = $1
	CALL require_auth($1)
	if ( CALL $43($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [8823])
	
.LABEL $label$1
	$5 = [0]
	*((($4 + [216]) + [32])) = [0]
	*($4 + [232]) = (int_64)-1
	*($4 + [240]) = (int_64)0
	$1 = *($0)
	*($4 + [216]) = $1
	*($4 + [224]) = $1
	*((($4 + [176]) + [32])) = [0]
	*($4 + [184]) = $1
	*($4 + [176]) = $1
	*($4 + [192]) = (int_64)-1
	*($4 + [200]) = (int_64)0
	*($4 + [212]) = [0]
	*((($4 + [136]) + [32])) = [0]
	*(($4 + [174])) = [0]
	*($4 + [144]) = $1
	*($4 + [136]) = $1
	*($4 + [152]) = (int_64)-1
	*($4 + [160]) = (int_64)0
	*($4 + [172]) = [0]
	$6 = CALL db_lowerbound_i64($1, $1, (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $52(($4 + [216]), $6)
	
.LABEL $label$2
	*($4 + [128]) = ($4 + [136])
	*(($4 + [120])) = (int_64)0
	*(($4 + [112])) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [96]) = (int_64)0
	CALL $69(($4 + [64]), ($4 + [128]), ($4 + [256]))
	$6 = *($4 + [68])
	if ( ($6 == 0) ){ goto $label$6 }
	if ( ((int_64)*($4 + [256]) != (int_64)*($6 + [8])) ){ goto $label$6 }
	$7 = *($4 + [64])
	$1 = CALL $19()
	$8 = *($6 + [96])
	CALL prints([8854])
	CALL printi(((int_64)$8 / (int_64)1000000))
	CALL prints([8797])
	CALL prints([8879])
	CALL printui(*($5 + [56]))
	CALL prints([8797])
	CALL prints([8900])
	CALL printi(((int_64)$1 / (int_64)1000000))
	CALL prints([8797])
	if ( ((int_64)$1 >= (int_64)((int_64)*($6 + [96]) + (int_64)*($5 + [56]))) ){ goto $label$7 }
	CALL eosio_assert([0], [8906])
	
.LABEL $label$7
	$5 = *($3)
	if ( ($5 & [1]) ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	$9 = ($3 + [1])
	goto $label$4 
	
.LABEL $label$6
	$0 = *($3)
	$5 = CALL $17([8951])
	if ( ((int_32)$5 != (int_32)( *($3 + [4]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$8 }
	if ( (CALL $37($3, [0], [-1], [8951], $5) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	CALL eosio_assert([0], [8952])
	goto $label$3 
	
.LABEL $label$5
	$5 = *($3 + [4])
	$9 = *($3 + [8])
	
.LABEL $label$4
	CALL $38(($4 + [64]), $9, $5)
	if ( ((int_64)((int_64)((int_64)*($4 + [64]) ^ (int_64)*($6 + [48])) | (int_64)((int_64)*($4 + [72]) ^ (int_64)*(($6 + [56])))) != (int_64)0) ){ goto $label$10 }
	if ( (int_64)(((int_64)((int_64)*($4 + [80]) ^ (int_64)*(($6 + [64]))) | (int_64)((int_64)*(($4 + [88])) ^ (int_64)*(($6 + [72])))) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [8937])
	
.LABEL $label$9
	$5 = CALL $29(($4 + [16]), $3)
	CALL $70(($4 + [32]), $0, *($4 + [256]), $5)
	*((($4 + [96]) + [24])) = *((($4 + [32]) + [24]))
	*((($4 + [96]) + [16])) = *((($4 + [32]) + [16]))
	*($4 + [104]) = *($4 + [40])
	*($4 + [96]) = *($4 + [32])
	if ( ((*($5) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*($5 + [8]))
	
.LABEL $label$11
	$1 = *($4 + [256])
	$5 = *(($4 + [204]))
	$10 = *((($4 + [176]) + [24]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$15 }
	
.LOOP $label$17:
	$0 = ($5 + [-24])
	$9 = *($0)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$16 }
	$5 = $0
	if ( ((int_32)$10 != (int_32)$0) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$15 }
	if ( ((int_32)*($9 + [48]) == (int_32)($4 + [176])) ){ goto $label$14 }
	CALL eosio_assert([0], [10021])
	goto $label$14 
	
.LABEL $label$15
	$0 = CALL db_find_i64(*($4 + [176]), *(($4 + [184])), (int_64)-4157495357179166720, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$13 }
	$9 = CALL $44(($4 + [176]), $0)
	if ( ((int_32)*($9 + [48]) == (int_32)($4 + [176])) ){ goto $label$14 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$14
	CALL $71(($4 + [176]), $9, *($4 + [256]))
	goto $label$12 
	
.LABEL $label$13
	$1 = *($4 + [256])
	*($4 + [8]) = ($4 + [256])
	*($4 + [280]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [176])) ){ goto $label$18 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$18
	*($4 + [36]) = ($4 + [8])
	*($4 + [32]) = ($4 + [176])
	*($4 + [40]) = ($4 + [280])
	*(($0 = CALL $9([64])) + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [24]) = (int_64)0
	*($0 + [32]) = (int_64)0
	*($0 + [40]) = (int_64)0
	*($0 + [48]) = ($4 + [176])
	CALL $72(($4 + [32]), $0)
	*($4 + [272]) = $0
	$1 = *($0)
	*($4 + [32]) = $1
	$9 = *($0 + [52])
	*($4 + [268]) = $9
	$10 = ($4 + [204])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($4 + [208]))) ){ goto $label$20 }
	*($5 + [8]) = $1
	*($5 + [16]) = $9
	*($4 + [272]) = [0]
	*($5) = $0
	*($10) = ($5 + [24])
	$0 = *($4 + [272])
	*($4 + [272]) = [0]
	if ( $0 ){ goto $label$19 }
	goto $label$12 
	
.LABEL $label$20
	CALL $73(($4 + [200]), ($4 + [272]), ($4 + [32]), ($4 + [268]))
	$0 = *($4 + [272])
	*($4 + [272]) = [0]
	if ( ($0 == 0) ){ goto $label$12 }
	
.LABEL $label$19
	CALL $11($0)
	
.LABEL $label$12
	*($4 + [32]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)32) | (int_64)$7)
	CALL $74(($4 + [32]))
	CALL $75(*($4 + [128]), $6)
	
.LABEL $label$3
	$1 = *($4 + [256])
	*($4 + [76]) = $2
	*($4 + [80]) = $3
	*($4 + [68]) = ($4 + [256])
	*($4 + [64]) = ($4 + [136])
	*($4 + [72]) = ($4 + [96])
	*($4 + [280]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [136])) ){ goto $label$21 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$21
	*($4 + [36]) = ($4 + [64])
	*($4 + [32]) = ($4 + [136])
	*($4 + [40]) = ($4 + [280])
	*(($0 = CALL $9([128])) + [16]) = (int_64)0
	*($0 + [8]) = (int_64)0
	*($0 + [48]) = (int_64)0
	*($0 + [80 align=4]) = (int_64)0
	*($0 + [88]) = [0]
	*($0 + [96]) = (int_64)0
	*(($0 + [40])) = (int_64)0
	*(($0 + [32])) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*(($0 + [72])) = (int_64)0
	*(($0 + [64])) = (int_64)0
	*(($0 + [56])) = (int_64)0
	*($0 + [104]) = ($4 + [136])
	CALL $76(($4 + [32]), $0)
	*($4 + [272]) = $0
	$1 = *($0)
	*($4 + [32]) = $1
	$3 = *($0 + [108])
	*($4 + [268]) = $3
	$6 = ($4 + [164])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*((($4 + [136]) + [32]))) ){ goto $label$26 }
	*($5 + [8]) = $1
	*($5 + [16]) = $3
	*($4 + [272]) = [0]
	*($5) = $0
	*($6) = ($5 + [24])
	$0 = *($4 + [272])
	*($4 + [272]) = [0]
	if ( ($0 == 0) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	CALL $77((($4 + [136]) + [24]), ($4 + [272]), ($4 + [32]), ($4 + [268]))
	$0 = *($4 + [272])
	*($4 + [272]) = [0]
	if ( $0 ){ goto $label$24 }
	
.LABEL $label$25
	$3 = *($4 + [160])
	if ( ($3 == 0) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((*($0 + [80]) & [1]) == 0) ){ goto $label$27 }
	CALL $11(*(($0 + [88])))
	
.LABEL $label$27
	CALL $11($0)
	$3 = *($4 + [160])
	if ( ($3 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	$6 = ($4 + [164])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$29 }
	
.LOOP $label$30:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$31 }
	if ( ((*($5 + [80]) & [1]) == 0) ){ goto $label$32 }
	CALL $11(*(($5 + [88])))
	
.LABEL $label$32
	CALL $11($5)
	
.LABEL $label$31
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$30 }
	$0 = *(($4 + [160]))
	goto $label$28 
	
.LABEL $label$29
	$0 = $3
	
.LABEL $label$28
	*($6) = $3
	CALL $11($0)
	
.LABEL $label$22
	$3 = *($4 + [200])
	if ( ($3 == 0) ){ goto $label$33 }
	$6 = ($4 + [204])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$35 }
	
.LOOP $label$36:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$37 }
	CALL $11($5)
	
.LABEL $label$37
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$36 }
	$0 = *(($4 + [200]))
	goto $label$34 
	
.LABEL $label$35
	$0 = $3
	
.LABEL $label$34
	*($6) = $3
	CALL $11($0)
	
.LABEL $label$33
	$3 = *($4 + [240])
	if ( ($3 == 0) ){ goto $label$38 }
	$6 = ($4 + [244])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$40 }
	
.LOOP $label$41:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$42 }
	CALL $11($5)
	
.LABEL $label$42
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$41 }
	$0 = *(($4 + [240]))
	goto $label$39 
	
.LABEL $label$40
	$0 = $3
	
.LABEL $label$39
	*($6) = $3
	CALL $11($0)
	
.LABEL $label$38
	$global$0 = ($4 + [288])
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($5 = $4) + [64]) = $2
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	*($5 + [48]) = *($1 + [16])
	*($5 + [56]) = ((int_64)*($1 + [32]) / (int_64)1000000)
	$6 = *($1)
	*($5 + [40]) = $6
	*($1 + [24]) = *(*($3))
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [28]) = $4
	*($5 + [24]) = $4
	*($5 + [32]) = ($3 + [-8])
	*($5 + [72]) = ($5 + [24])
	*($5 + [4]) = ($1 + [8])
	*($5) = $1
	*($5 + [8]) = ($1 + [16])
	*($5 + [12]) = ($1 + [24])
	*($5 + [16]) = ($1 + [32])
	CALL $99($5, ($5 + [72]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	$4 = ($0 + [36])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [4]) = $1
	*($5) = $0
	*($5 + [12]) = $1
	*($5 + [8]) = ($5 + [48])
	*($5 + [16]) = ($5 + [40])
	*($5 + [20]) = ($5 + [64])
	*($5 + [72]) = $5
	CALL $187(($5 + [72]), $4, ($4 + [1]))
	$global$0 = ($5 + [80])
}

int_32 .FUNC $64 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [48])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10104])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [48])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)5310424360057438208, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [48]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [40]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [10021])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $103($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)5310424360057438208, $6))
	if ( ((int_32)*($3 + [40]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [48])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $67 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = ($global$0 - [176])
	$global$0 = $1
	CALL prints([10500])
	CALL prints([8797])
	*($1 + [136]) = [0]
	*($1 + [128]) = (int_64)0
	*(($1 + [120])) = [0]
	*($1 + [104]) = (int_64)-1
	*($1 + [112]) = (int_64)0
	*($1 + [124]) = [0]
	$2 = *($0)
	*($1 + [88]) = $2
	*($1 + [96]) = $2
	*($1 + [80]) = ($1 + [88])
	*($1 + [32]) = (int_64)0
	CALL $181(($1 + [72]), ($1 + [80]), ($1 + [32]))
	$3 = [0]
	$4 = [0]
	$5 = *($1 + [76])
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = (($1 + [128]) + [8])
	$2 = (int_64)1
	
.LOOP $label$2:
	CALL printn(*($5))
	CALL prints([8797])
	$3 = *($1 + [76])
	$5 = *($1 + [132])
	if ( ((int_32)$5 == (int_32)*($4)) ){ goto $label$4 }
	*($5) = *($3)
	*($1 + [132]) = ($5 + [8])
	goto $label$3 
	
.LABEL $label$4
	CALL $108(($1 + [128]), $3)
	
.LABEL $label$3
	CALL $182(($1 + [72]))
	if ( ((uint_64)$2 > (uint_64)(int_64)29) ){ goto $label$5 }
	$2 = ((int_64)$2 + (int_64)1)
	$5 = *($1 + [76])
	if ( $5 ){ goto $label$2 }
	
.LABEL $label$5
	$3 = *($1 + [132])
	$4 = *($1 + [128])
	
.LABEL $label$1
	CALL $183($4, $3, ($1 + [32]))
	$2 = *($0)
	*(($1 + [24])) = [0]
	*($1 + [8]) = (int_64)0
	*($1) = $2
	*($1 + [16]) = (int_64)0
	$5 = (*($1 + [132]) - *($1 + [128]))
	if ( ($5 == 0) ){ goto $label$7 }
	$4 = int_32($5 >> [3])
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$6 }
	$5 = CALL $9($5)
	*(($1 + [16])) = $5
	*(($3 = ($1 + [20]))) = $5
	*(($1 + [24])) = ($5 + ($4 << [3]))
	$0 = *($1 + [128])
	$4 = (*($1 + [132]) - $0)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($5, $0, $4)
	*($3) = (*($3) + $4)
	
.LABEL $label$7
	*($1 + [40]) = (int_64)-2507754169720236688
	*($1 + [32]) = (int_64)6138663577826885632
	*(($5 = CALL $9([16]))) = $2
	*($5 + [8]) = (int_64)3617214756542218240
	*(($1 + [68])) = [0]
	$3 = ($5 + [16])
	*((($1 + [32]) + [24])) = $3
	*((($1 + [32]) + [20])) = $3
	*($1 + [48]) = $5
	*($1 + [60 align=4]) = (int_64)0
	$0 = *($1 + [16])
	$3 = *(($1 + [20]))
	$6 = ($3 - $0)
	$2 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	$7 = ($1 + [60])
	$5 = [-16]
	
.LOOP $label$8:
	$5 = ($5 + [-1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$8 }
	$4 = [0]
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$11 }
	$3 = [0]
	$0 = ($6 & [-8])
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$9 }
	$5 = ($0 - $5)
	goto $label$10 
	
.LABEL $label$11
	$5 = ([0] - $5)
	
.LABEL $label$10
	CALL $85($7, $5)
	$4 = *(($1 + [64]))
	$3 = *(($1 + [60]))
	
.LABEL $label$9
	*($1 + [148]) = $3
	*($1 + [144]) = $3
	*($1 + [152]) = $4
	*($1 + [160]) = ($1 + [144])
	*($1 + [168]) = $1
	CALL $184(($1 + [168]), ($1 + [160]))
	$5 = *($1 + [16])
	if ( ($5 == 0) ){ goto $label$12 }
	*(($1 + [20])) = $5
	CALL $11($5)
	
.LABEL $label$12
	CALL $87(($1 + [32]))
	$5 = *($1 + [60])
	if ( ($5 == 0) ){ goto $label$13 }
	*(($1 + [64])) = $5
	CALL $11($5)
	
.LABEL $label$13
	$5 = *($1 + [48])
	if ( ($5 == 0) ){ goto $label$14 }
	*(($1 + [52])) = $5
	CALL $11($5)
	
.LABEL $label$14
	$4 = *($1 + [112])
	if ( ($4 == 0) ){ goto $label$15 }
	$0 = ($1 + [116])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$17 }
	
.LOOP $label$18:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$19 }
	CALL $11($3)
	
.LABEL $label$19
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$18 }
	$5 = *(($1 + [112]))
	goto $label$16 
	
.LABEL $label$17
	$5 = $4
	
.LABEL $label$16
	*($0) = $4
	CALL $11($5)
	
.LABEL $label$15
	$5 = *($1 + [128])
	if ( ($5 == 0) ){ goto $label$20 }
	*($1 + [132]) = $5
	CALL $11($5)
	
.LABEL $label$20
	$global$0 = ($1 + [176])
	return (unreachable)
	
.LABEL $label$6
	CALL $18(($1 + [16]))
}

void .FUNC $66 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$6 = *($1)
	$7 = $4
	$4 = ($7 + [-128])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($7 + [-8])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [32])
	*($5 + [40]) = ($1 + [40])
	*($5 + [44]) = ($1 + [48])
	*($5 + [48]) = ($1 + [56])
	*($5 + [52]) = ($1 + [64])
	*($5 + [56]) = ($1 + [72])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [96])
	*($5 + [72]) = ($1 + [104])
	*($5 + [76]) = ($1 + [112])
	CALL $88(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [124]), $2, $4, [120])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [80])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)5310424360057438209, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [40]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10021])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $103($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)5310424360057438208, $6))
	if ( ((int_32)*($4 + [40]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$2
	*(($4 + [52])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [8]) = *(*($0))
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [8]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($1)
	*($2 + [8]) = *(*($0 + [4]))
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($1)
	*($2 + [8]) = *(*($0 + [8]))
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [8]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$5 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $5, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $5, [8])
	$4 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($3 + [8])) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $190(*($1), *($0 + [24]))
	CALL $190(*($1), *($0 + [28]))
	$3 = *($1)
	*($2 + [8]) = *(*($0 + [32]))
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = *($0 + [36])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$9 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $5, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$5 = *($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$10
	CALL memcpy($4, $5, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($1)
	*($2 + [8]) = *(*($0 + [44]))
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = *($0 + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$12 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$12
	CALL memcpy($4, $5, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$5 = *($0 + [52])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$13
	CALL memcpy($4, $5, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [56])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [10344])
	$1 = *(($0 + [4]))
	
.LABEL $label$14
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)5310424360057438208, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [40]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10021])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $103($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)5310424360057438208, $6))
	if ( ((int_32)*($4 + [40]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$2
	*(($4 + [48])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $62 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($5 = $4) + [64]) = $2
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	*($5 + [48]) = *($1 + [16])
	*($5 + [56]) = ((int_64)*($1 + [32]) / (int_64)1000000)
	$6 = *($1)
	*($5 + [40]) = $6
	*($1 + [8]) = *(*($3))
	*($1 + [16]) = *(*($3 + [4]))
	*($1 + [32]) = CALL $19()
	$7 = ($1 + [16])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10285])
	
.LABEL $label$3
	$8 = ($0 + [36])
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [28]) = $3
	*($5 + [24]) = $3
	*($5 + [32]) = ($4 + [-8])
	*($5 + [72]) = ($5 + [24])
	*($5 + [8]) = $7
	*($5) = $1
	*($5 + [4]) = ($1 + [8])
	*($5 + [12]) = ($1 + [24])
	*($5 + [16]) = ($1 + [32])
	CALL $99($5, ($5 + [72]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [4]) = $1
	*($5) = $0
	*($5 + [12]) = $1
	*($5 + [8]) = ($5 + [48])
	*($5 + [16]) = ($5 + [40])
	*($5 + [20]) = ($5 + [64])
	*($5 + [72]) = $5
	CALL $186(($5 + [72]), $8, ($8 + [1]))
	$global$0 = ($5 + [80])
}

void .FUNC apply (int_64 $0, int_64 apply, int_64 $2)
{
	CALL $0()
	CALL $143($0, $1)
	CALL $146($0, $1)
	CALL $149($0, $1)
	CALL $150($0, $1)
	CALL $151($0, $1)
	CALL $153($0, $1)
	CALL $155($0, $1)
	CALL $156($0, $1)
	CALL $157($0, $1)
	CALL $158($0, $1)
	CALL $159($0, $1)
	CALL $162($0, $1)
	CALL $163($0, $1)
	CALL $164($0, $1)
	CALL $165($0, $1)
	CALL $166($0, $1)
	CALL $167($0, $1)
	CALL $168($0, $1)
	CALL $169($0, $1)
	CALL eosio_assert_code([0], (int_64)8000000000000000000)
	CALL eosio_assert_code([0], (int_64)8000000000000000001)
	CALL $170($0, $1)
	CALL $39([0])
	((int_64)$0 == (int_64)$1)
	((int_64)-1883185241938460672 == (int_64)$2)
	((int_64)-1883185014969466880 == (int_64)$2)
	((int_64)6714503360222206464 == (int_64)$2)
	((int_64)4921564679018381312 == (int_64)$2)
	((int_64)4982871468868108288 == (int_64)$2)
	((int_64)-7297948598422994944 == (int_64)$2)
	((int_64)4730614989811151840 == (int_64)$2)
	((int_64)-2507761914452410368 == (int_64)$2)
	((int_64)-3100925529875483680 == (int_64)$2)
	((int_64)5935062419797671936 == (int_64)$2)
	((int_64)5935069869471956992 == (int_64)$2)
	((int_64)5378050753970946048 == (int_64)$2)
	((int_64)3626116107205315888 == (int_64)$2)
	((int_64)5378016362252438832 == (int_64)$2)
	((int_64)-5000776611071524864 == (int_64)$2)
	((int_64)4923678490122780672 == (int_64)$2)
	((int_64)-3075276112363393024 == (int_64)$2)
	((int_64)-2507762687470616576 == (int_64)$2)
	((int_64)-7811085199840228352 == (int_64)$2)
	((int_64)$0 != (int_64)6138663577826885632)
	((int_64)6138663577826885632 == (int_64)$1)
	((int_64)-6569208335818555392 == (int_64)$2)
	((int_64)6138663591592764928 == (int_64)$1)
	((int_64)-3617168760277827584 == (int_64)$2)
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $195(CALL $194($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10344])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10344])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [52])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [10344])
	$1 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $87 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $85($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $89(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $11($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10344])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10344])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $216(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $9($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $18($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $11($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $84 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [11019])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [16]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [11062])
	if ( ((int_64)*(($1 + [16])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [11081])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10285])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-128])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [32])
	*($5 + [40]) = ($1 + [40])
	*($5 + [44]) = ($1 + [48])
	*($5 + [48]) = ($1 + [56])
	*($5 + [52]) = ($1 + [64])
	*($5 + [56]) = ($1 + [72])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [96])
	*($5 + [72]) = ($1 + [104])
	*($5 + [76]) = ($1 + [112])
	CALL $88(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [124]), $2, $4, [120])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [80])
}

void .FUNC $83 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$5 = ($1 + [16])
	*($4 + [24]) = (int_64))((int_64)0 - *($5))
	$6 = *($1)
	$7 = CALL $17([8704])
	if ( ($7 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9854])
	goto $label$5 
	
.LABEL $label$6
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$8 = (int_64)0
	
.LOOP $label$7:
	$9 = *(($7 + [8703]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [9899])
	
.LABEL $label$8
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	$10 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)4)
	goto $label$3 
	
.LABEL $label$4
	$10 = (int_64)4
	
.LABEL $label$3
	$8 = (uint_64)$10 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$11 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$8 = $11
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$8 = $11
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$12 = ($7 + [1])
	$7 = $12
	if ( $9 ){ goto $label$13 }
	$7 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [10001])
	
.LABEL $label$9
	*($1 + [32]) = (int_64)0
	*(($1 + [40])) = $10
	*($1 + [24]) = CALL $19()
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$14 }
	CALL eosio_assert([0], [10285])
	
.LABEL $label$14
	$9 = $3
	$7 = ($9 + [-48])
	$global$0 = $7
	*($4 + [12]) = $7
	*($4 + [8]) = $7
	*($4 + [16]) = $9
	*($4 + [32]) = ($4 + [8])
	*($4 + [48]) = $5
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [32])
	CALL $59(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [52]), $2, $7, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*($4 + [40]) = (int_64))((int_64)0 - *($5))
	if ( (CALL $20(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$16 }
	$9 = ($1 + [56])
	$7 = *($9)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$17 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $6)
	*($9) = $7
	
.LABEL $label$17
	CALL db_idx64_update($7, $2, ($4 + [40]))
	
.LABEL $label$16
	$global$0 = ($4 + [64])
}

void .FUNC $82 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [240])
	$global$0 = $2
	CALL require_auth($1)
	$3 = [0]
	*((($2 + [168]) + [32])) = [0]
	*($2 + [184]) = (int_64)-1
	*($2 + [192]) = (int_64)0
	$4 = *($0)
	*($2 + [168]) = $4
	*($2 + [176]) = $4
	*((($2 + [128]) + [32])) = [0]
	*($2 + [136]) = $4
	*($2 + [128]) = $4
	*($2 + [144]) = (int_64)-1
	*($2 + [152]) = (int_64)0
	*($2 + [164]) = [0]
	$5 = [0]
	$6 = CALL db_find_i64($4, $4, (int_64)-4157495357179166720, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $44(($2 + [128]), $6)
	if ( ((int_32)*($5 + [48]) == (int_32)($2 + [128])) ){ goto $label$1 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$1
	$6 = CALL db_lowerbound_i64(*($2 + [168]), *(($2 + [176])), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $52(($2 + [168]), $6)
	
.LABEL $label$2
	if ( ($5 == 0) ){ goto $label$5 }
	$4 = (int_64)0
	if ( ((int_64)*($5 + [32]) <= (int_64)0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [9004])
	$4 = (int_64)0
	if ( ((int_64)*($5 + [32]) > (int_64)0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9021])
	
.LABEL $label$3
	*((($2 + [112]) + [8])) = *(($5 + [40]))
	*($2 + [112]) = *($5 + [32])
	CALL $83(($2 + [128]), $5, *($0))
	$7 = *($0)
	*($2 + [24]) = ($2 + [112])
	CALL $84(($2 + [168]), $3, $7, ($2 + [24]))
	$7 = *($0)
	*((($2 + [8]) + [8])) = [0]
	*($2 + [8]) = $4
	$5 = CALL $17([8951])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$9 }
	*($2 + [8]) = ($5 << [1])
	$3 = (($2 + [8]) | [1])
	if ( $5 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$6 = (($5 + [16]) & [-16])
	$3 = CALL $9($6)
	*($2 + [8]) = ($6 | [1])
	*($2 + [16]) = $3
	*($2 + [12]) = $5
	
.LABEL $label$8
	CALL memcpy($3, [8951], $5)
	
.LABEL $label$7
	*(($3 + $5)) = [0]
	*((($2 + [24]) + [24])) = *((($2 + [112]) + [8]))
	$5 = (($2 + [8]) + [8])
	*(($2 + [64])) = *($5)
	*($5) = [0]
	*($2 + [32]) = $1
	*($2 + [72]) = (int_64)6138663591592764928
	*($2 + [80]) = (int_64)-3617168760277827584
	*($2 + [24]) = *($0)
	*($2 + [40]) = *($2 + [112])
	*($2 + [56]) = *($2 + [8])
	*($2 + [8]) = (int_64)0
	*(($5 = CALL $9([16]))) = $7
	*($5 + [8]) = (int_64)3617214756542218240
	*((($2 + [72]) + [36])) = [0]
	$0 = ($5 + [16])
	*((($2 + [72]) + [24])) = $0
	*(($2 + [92])) = $0
	*($2 + [88]) = $5
	*($2 + [100 align=4]) = (int_64)0
	$5 = *($2 + [56])
	$0 = ( *((($2 + [24]) + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($0 + [32])
	$4 = (CASTING uint_64)(uint_32 $0)
	$0 = ($2 + [100])
	
.LOOP $label$10:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$10 }
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $85($0, $5)
	$0 = *(($2 + [104]))
	$5 = *(($2 + [100]))
	goto $label$11 
	
.LABEL $label$12
	$0 = [0]
	$5 = [0]
	
.LABEL $label$11
	*($2 + [212]) = $5
	*($2 + [208]) = $5
	*($2 + [216]) = $0
	*($2 + [224]) = ($2 + [208])
	*($2 + [232]) = ($2 + [24])
	CALL $86(($2 + [232]), ($2 + [224]))
	if ( ((*(($2 + [56])) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($2 + [64])))
	
.LABEL $label$13
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$14 }
	CALL $11(*(($2 + [16])))
	
.LABEL $label$14
	CALL $87(($2 + [72]))
	$5 = *($2 + [100])
	if ( ($5 == 0) ){ goto $label$15 }
	*(($2 + [104])) = $5
	CALL $11($5)
	
.LABEL $label$15
	$5 = *($2 + [88])
	if ( ($5 == 0) ){ goto $label$16 }
	*(($2 + [92])) = $5
	CALL $11($5)
	
.LABEL $label$16
	$3 = *($2 + [152])
	if ( ($3 == 0) ){ goto $label$17 }
	$6 = ($2 + [156])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$19 }
	
.LOOP $label$20:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$21 }
	CALL $11($0)
	
.LABEL $label$21
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$20 }
	$5 = *(($2 + [152]))
	goto $label$18 
	
.LABEL $label$19
	$5 = $3
	
.LABEL $label$18
	*($6) = $3
	CALL $11($5)
	
.LABEL $label$17
	$3 = *($2 + [192])
	if ( ($3 == 0) ){ goto $label$22 }
	$6 = ($2 + [196])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$24 }
	
.LOOP $label$25:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$26 }
	CALL $11($0)
	
.LABEL $label$26
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$25 }
	$5 = *(($2 + [192]))
	goto $label$23 
	
.LABEL $label$24
	$5 = $3
	
.LABEL $label$23
	*($6) = $3
	CALL $11($5)
	
.LABEL $label$22
	$global$0 = ($2 + [240])
	return (unreachable)
	
.LABEL $label$6
	CALL $28(($2 + [8]))
}

void .FUNC $81 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [64])
	$global$0 = $2
	*($2 + [48]) = $1
	CALL require_auth($1)
	*(($2 + [40])) = [0]
	*(($2 + [46])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	*($2 + [44]) = [0]
	$1 = *($0)
	*($2 + [8]) = $1
	*($2 + [16]) = $1
	*($2) = ($2 + [8])
	CALL $69(($2 + [56]), $2, ($2 + [48]))
	$0 = *($2 + [60])
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((int_64)*($2 + [48]) != (int_64)*($0 + [8])) ){ goto $label$1 }
	*($2 + [56]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)32) | (int_64)*($2 + [56]))
	CALL $74(($2 + [56]))
	CALL $75(*($2), $0)
	
.LABEL $label$1
	$3 = *($2 + [32])
	if ( ($3 == 0) ){ goto $label$2 }
	$4 = ($2 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$6 }
	if ( ((*($5 + [80]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($5 + [88])))
	
.LABEL $label$7
	CALL $11($5)
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($2 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $3
	
.LABEL $label$3
	*($4) = $3
	CALL $11($0)
	
.LABEL $label$2
	$global$0 = ($2 + [64])
}

void .FUNC $80 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	$1 = ($global$0 - [32])
	$global$0 = $1
	$2 = *($0)
	*($1 + [11]) = (uint_64)$2 >> (uint_64)(int_64)32)
	*($1 + [10]) = (uint_64)$2 >> (uint_64)(int_64)40)
	*($1 + [9]) = (uint_64)$2 >> (uint_64)(int_64)48)
	*($1 + [8]) = (uint_64)$2 >> (uint_64)(int_64)56)
	$3 = *(($0 + [8]))
	*($1 + [3]) = (uint_64)$3 >> (uint_64)(int_64)32)
	*($1 + [2]) = (uint_64)$3 >> (uint_64)(int_64)40)
	*($1 + [1]) = (uint_64)$3 >> (uint_64)(int_64)48)
	*($1) = (uint_64)$3 >> (uint_64)(int_64)56)
	$4 = (CASTING uint_32)(uint_64 $2)
	*($1 + [15]) = $4
	*($1 + [14]) = uint_32($4 >> [8])
	*($1 + [13]) = uint_32($4 >> [16])
	*($1 + [12]) = uint_32($4 >> [24])
	$4 = (CASTING uint_32)(uint_64 $3)
	*($1 + [7]) = $4
	*($1 + [6]) = uint_32($4 >> [8])
	*($1 + [5]) = uint_32($4 >> [16])
	*($1 + [4]) = uint_32($4 >> [24])
	$2 = *(($0 + [24]))
	*($1 + [23]) = $2
	$3 = *($0 + [16])
	*($1 + [27]) = (uint_64)$3 >> (uint_64)(int_64)32)
	*($1 + [26]) = (uint_64)$3 >> (uint_64)(int_64)40)
	*($1 + [25]) = (uint_64)$3 >> (uint_64)(int_64)48)
	*($1 + [24]) = (uint_64)$3 >> (uint_64)(int_64)56)
	*($1 + [19]) = (uint_64)$2 >> (uint_64)(int_64)32)
	*($1 + [18]) = (uint_64)$2 >> (uint_64)(int_64)40)
	*($1 + [17]) = (uint_64)$2 >> (uint_64)(int_64)48)
	*($1 + [16]) = (uint_64)$2 >> (uint_64)(int_64)56)
	$0 = (CASTING uint_32)(uint_64 $2)
	*($1 + [22]) = uint_32($0 >> [8])
	*($1 + [21]) = uint_32($0 >> [16])
	*($1 + [20]) = uint_32($0 >> [24])
	$0 = (CASTING uint_32)(uint_64 $3)
	*($1 + [31]) = $0
	*($1 + [30]) = uint_32($0 >> [8])
	*($1 + [29]) = uint_32($0 >> [16])
	*($1 + [28]) = uint_32($0 >> [24])
	CALL printhex($1, [32])
	$global$0 = ($1 + [32])
}

int_32 .FUNC $182 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [56])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10104])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [56])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)-4157495357179166720, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [56]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [48]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [10021])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $44($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)-4157495357179166720, $6))
	if ( ((int_32)*($3 + [48]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [56])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $149 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	CALL $81(($3 + [8]), *($3 + [40]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10100])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $85($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [4])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$4 }
	$3 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$3 = int_32($2 >> [3])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $9(($3 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = (int_64)0
	*($3 + [8]) = (int_64)0
	$3 = (*($0) + [16])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $18($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($3 << [4]))
	$5 = ($2 + ($5 << [4]))
	$3 = $5
	
.LOOP $label$9:
	*($3) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = ($3 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$6 = ($2 + ($6 << [4]))
	$1 = *($0)
	$7 = ($0 + [4])
	$3 = (*($7) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $11($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10100])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$4 = *($1 + [4])
	$6 = int_32(($4 - $7) >> [4])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $145($1, ($2 - $6))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$4 = ($7 + ($2 << [4]))
	*(($1 + [4])) = $4
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = ($0 + [4])
	$6 = *($2)
	$5 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($5) - $6) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10095])
	$6 = *($2)
	
.LABEL $label$8
	CALL memcpy($7, $6, [8])
	$6 = (*($2) + [8])
	*($2) = $6
	if ( ((uint_32)(*($5) - $6) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10095])
	$6 = *($2)
	
.LABEL $label$9
	CALL memcpy(($7 + [8]), $6, [8])
	$6 = (*($2) + [8])
	*($2) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $148($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $9($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $32($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $32($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $28($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $11($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $146 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [272])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [180]) = $2
	*($3 + [176]) = $2
	$5 = ($2 + $4)
	*($3 + [184]) = $5
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$5 = *(($3 + [184]))
	$2 = *($3 + [180])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	$4 = ($2 + [8])
	*($3 + [180]) = $4
	*(($3 + [152])) = (int_64)0
	$2 = [16]
	*((($3 + [128]) + [16])) = (int_64)0
	*($3 + [136]) = (int_64)0
	*($3 + [128]) = (int_64)0
	if ( ((uint_32)($5 - $4) > (uint_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [10095])
	$4 = *($3 + [180])
	
.LABEL $label$6
	CALL memcpy(($3 + [224]), $4, [32])
	*($3 + [180]) = ($4 + [32])
	$6 = (int_64)0
	$5 = ($3 + [192])
	$4 = [0]
	$7 = (int_64)0
	
.LOOP $label$8:
	$8 = (($3 + [224]) + $4)
	if ( ($2 <= [2]) ){ goto $label$9 }
	$6 = ((int_64)$6 | (int_64)*($8))
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)(uint_64)$6 >> (uint_64)(int_64)56))
	$2 = ($2 + [-1])
	$6 = ((int_64)$6 << (int_64)8)
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$10 }
	CALL eosio_assert([0], [11474])
	
.LABEL $label$10
	*($5 + [8]) = $7
	*($5) = ((int_64)$6 | (int_64)*($8))
	$2 = [16]
	$5 = ($5 + [16])
	$6 = (int_64)0
	$7 = (int_64)0
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$2 == (int_32)[16]) ){ goto $label$11 }
	if ( ($2 <= [2]) ){ goto $label$12 }
	CALL __ashlti3(($3 + [32]), $6, $7, (($2 << [3]) + [-8]))
	$7 = *(($3 + [40]))
	$6 = *($3 + [32])
	
.LABEL $label$12
	*($5) = $6
	*($5 + [8]) = $7
	
.LABEL $label$11
	*(($2 = (($3 + [128]) + [24]))) = *((($3 + [192]) + [24]))
	*(($4 = (($3 + [128]) + [16]))) = *((($3 + [192]) + [16]))
	*($3 + [136]) = *($3 + [200])
	*($3 + [128]) = *($3 + [192])
	*($3 + [120]) = [0]
	*($3 + [112]) = (int_64)0
	CALL $147(($3 + [176]), ($3 + [112]))
	*(($5 = (($3 + [96]) + [8]))) = *((($3 + [176]) + [8]))
	*($3 + [96]) = *($3 + [176])
	*(($8 = (($3 + [256]) + [8]))) = *($5)
	*($3 + [256]) = *($3 + [96])
	$5 = *($8)
	*((($3 + [192]) + [8])) = $5
	*((($3 + [224]) + [24])) = $5
	*($3 + [224]) = $0
	*($3 + [232]) = $1
	$6 = *($3 + [256])
	*($3 + [240]) = $6
	*($3 + [192]) = $6
	*(($5 = (($3 + [64]) + [16]))) = *($4)
	*(($4 = (($3 + [64]) + [24]))) = *($2)
	*($3 + [64]) = *($3 + [128])
	*($3 + [72]) = *($3 + [136])
	$6 = *($3 + [168])
	$2 = CALL $29(($3 + [48]), ($3 + [112]))
	*(($3 + [24])) = *($4)
	*(($3 + [16])) = *($5)
	*($3 + [8]) = *($3 + [72])
	*($3) = *($3 + [64])
	CALL $68(($3 + [224]), $6, $3, $2)
	if ( (*($2) & [1]) ){ goto $label$15 }
	if ( (*($3 + [112]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $11(*($2 + [8]))
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $11(*(($3 + [120])))
	$global$0 = ($3 + [272])
	return 
	
.LABEL $label$13
	$global$0 = ($3 + [272])
}

int_32 .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [96])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	$5 = CALL $9([136])
	CALL $96($5)
	*($5 + [120]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [1])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [2])
	*($3 + [44]) = ($5 + [8])
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [52])
	*($3 + [64]) = ($5 + [64])
	*($3 + [68]) = ($5 + [72])
	*($3 + [72]) = ($5 + [80])
	*($3 + [76]) = ($5 + [88])
	*($3 + [80]) = ($5 + [96])
	*($3 + [84]) = ($5 + [104])
	*($3 + [88]) = ($5 + [112])
	CALL $160(($3 + [32]), ($3 + [24]))
	*($5 + [124]) = $1
	*($3 + [24]) = $5
	$7 = *($5 + [16])
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $222(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$4 = *($1 + [52])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [56])) = $4
	CALL $11($4)
	
.LABEL $label$11
	$4 = *($1 + [40])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [44])) = $4
	CALL $11($4)
	
.LABEL $label$12
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return $5
}

int_32 .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([32])) + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $221(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $4($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $11($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $143 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [84]) = $2
	*($3 + [80]) = $2
	*($3 + [88]) = ($2 + $4)
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$2 = *($3 + [84])
	
.LABEL $label$5
	CALL memcpy(($3 + [72]), $2, [8])
	*($3 + [84]) = ($2 + [8])
	*($3 + [64]) = [0]
	*($3 + [56]) = (int_64)0
	CALL $144(($3 + [80]), ($3 + [56]))
	*(($2 = (($3 + [8]) + [8]))) = *((($3 + [80]) + [8]))
	*($3 + [8]) = *($3 + [80])
	*(($4 = (($3 + [96]) + [8]))) = *($2)
	*($3 + [96]) = *($3 + [8])
	$2 = *($4)
	*((($3 + [112]) + [8])) = $2
	*(($3 + [48])) = $2
	*($3 + [24]) = $0
	*($3 + [32]) = $1
	$0 = *($3 + [96])
	*($3 + [40]) = $0
	*($3 + [112]) = $0
	CALL $42(($3 + [24]), *($3 + [72]), ($3 + [56]))
	$2 = *($3 + [56])
	if ( ($2 == 0) ){ goto $label$6 }
	*($3 + [60]) = $2
	CALL $11($2)
	
.LABEL $label$6
	$global$0 = ($3 + [128])
}

void .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *(*($4) + [4])
	*($1 + [8]) = *($5 + [8])
	*($1) = *($5)
	*($1 + [2]) = *($5 + [2])
	*($1 + [16]) = *($5 + [16])
	$6 = *($0)
	*(($1 + [32])) = *(($5 + [32]))
	*($1 + [24]) = *($5 + [24])
	$5 = *(*($4) + [4])
	*($1 + [64]) = *($5 + [64])
	*($1 + [80]) = *($5 + [80])
	*($1 + [88]) = *($5 + [88])
	*($1 + [72]) = *($5 + [72])
	*($1 + [104]) = *($5 + [104])
	*($1 + [96]) = *($5 + [96])
	*($1 + [112]) = *($5 + [112])
	$7 = ($1 + [40])
	$8 = *($1 + [40])
	$4 = *($1 + [44])
	$9 = ($4 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	$5 = [35]
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$1 }
	$11 = ($1 + [52])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$2 }
	$5 = (($9 & [-8]) + $5)
	
.LABEL $label$2
	$8 = *($11)
	$4 = *($1 + [56])
	$9 = ($4 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	
.LOOP $label$3:
	$5 = ($5 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$5 = (($9 & [-8]) + $5)
	
.LABEL $label$4
	$4 = ($5 + [44])
	if ( ($4 <= [513]) ){ goto $label$6 }
	$5 = CALL $2($4)
	goto $label$5 
	
.LABEL $label$6
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($5 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [1])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [2])
	*($3 + [44]) = ($1 + [8])
	*($3 + [48]) = ($1 + [16])
	*($3 + [52]) = ($1 + [24])
	*($3 + [56]) = $7
	*($3 + [60]) = $11
	*($3 + [64]) = ($1 + [64])
	*($3 + [68]) = ($1 + [72])
	*($3 + [72]) = ($1 + [80])
	*($3 + [76]) = ($1 + [88])
	*($3 + [80]) = ($1 + [96])
	*($3 + [84]) = ($1 + [104])
	*($3 + [88]) = ($1 + [112])
	CALL $60(($3 + [32]), ($3 + [24]))
	$10 = *($1 + [16])
	*($1 + [124]) = CALL db_store_i64(*($6 + [8]), (int_64)-6224682770514313216, *(*($0 + [8])), $10, $5, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$10 >= (uint_64)*($6 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $4($5)
	if ( (uint_64)($10 <= *($6 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [96])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [96])
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	*($1) = *(*(*($0 + [4])))
	$4 = *($0)
	$5 = CALL $19()
	*($1 + [16]) = (int_64)1
	*($1 + [8]) = $5
	$6 = CALL $17([8704])
	if ( ($6 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9854])
	goto $label$3 
	
.LABEL $label$4
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = (int_64)0
	
.LOOP $label$5:
	$7 = *(($6 + [8703]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9899])
	
.LABEL $label$6
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$5 }
	$8 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$8 = (int_64)4
	
.LABEL $label$1
	$9 = ($1 + [16])
	$5 = (uint_64)$8 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$10 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$5 = $10
	$7 = $6
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$5 = $10
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $7 ){ goto $label$11 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [10001])
	
.LABEL $label$7
	*($1 + [32]) = (int_64)0
	*(($1 + [40])) = $8
	*($1 + [24]) = *([0] + [8536])
	$7 = $2
	$6 = ($7 + [-48])
	$global$0 = $6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = $7
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = $9
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	CALL $59(($3 + [24]), ($3 + [16]))
	$5 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-4157495357179166720, *(*($0 + [8])), $5, $6, [48])
	if ( (uint_64)($5 <= *($4 + [16])) ){ goto $label$12 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$5 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$8 = *($1)
	*($3 + [24]) = (int_64))((int_64)0 - *(($1 + [16])))
	*($1 + [56]) = CALL db_idx64_store($5, (int_64)-4157495357179166720, $10, $8, ($3 + [24]))
	$global$0 = ($3 + [48])
}

void .FUNC $73 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $18($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $70 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$4 = ($global$0 - [112])
	$global$0 = $4
	*(($4 + [104])) = [0]
	*(($4 + [110])) = [0]
	*($4 + [88]) = (int_64)-1
	*($4 + [96]) = (int_64)0
	*($4 + [108]) = [0]
	$5 = *($1)
	*($4 + [72]) = $5
	*($4 + [80]) = $5
	*((($4 + [48]) + [8])) = [0]
	*(($6 = ($4 + [64]))) = [0]
	*($4 + [52]) = ($4 + [72])
	*($4 + [60]) = ($4 + [72])
	$7 = ($4 + [60])
	$1 = [0]
	$8 = CALL db_lowerbound_i64($5, $5, (int_64)7615821578177085440, (int_64)0)
	if ( ((int_32)$8 >= (int_32)[0]) ){ goto $label$2 }
	$9 = [1]
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$45 
	
.LABEL $label$46
	CALL $78($7)
	$1 = [0]
	$8 = CALL db_lowerbound_i64(*($4 + [72]), *((($4 + [72]) + [8])), (int_64)7615821578177085440, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$21 }
	$9 = [0]
	goto $label$3 
	
.LABEL $label$45
	$1 = CALL $79(($4 + [72]), $8)
	$9 = [1]
	goto $label$3 
	
.LABEL $label$44
	if ( ((int_32)*($6) == (int_32)$1) ){ goto $label$20 }
	$9 = [2]
	goto $label$3 
	
.LABEL $label$43
	*($4) = *($7)
	if ( ((int_64)*(*(CALL $78($4) + [4]) + [8]) == (int_64)$2) ){ goto $label$19 }
	$9 = [3]
	goto $label$3 
	
.LABEL $label$42
	*($4) = *($7)
	$1 = *(CALL $78($4) + [4])
	$8 = *($1 + [80])
	$10 = CALL $17([8951])
	if ( ((int_32)$10 != (int_32)( *(($1 + [84])) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$18 }
	$9 = [22]
	goto $label$3 
	
.LABEL $label$41
	if ( (CALL $37(($1 + [80]), [0], [-1], [8951], $10) == 0) ){ goto $label$17 }
	$9 = [4]
	goto $label$3 
	
.LABEL $label$40
	*($4) = *(($4 + [60]))
	$1 = *(CALL $78($4) + [4])
	$5 = *($1 + [16])
	*($4 + [11]) = (uint_64)$5 >> (uint_64)(int_64)32)
	*($4 + [10]) = (uint_64)$5 >> (uint_64)(int_64)40)
	*($4 + [9]) = (uint_64)$5 >> (uint_64)(int_64)48)
	*($4 + [8]) = (uint_64)$5 >> (uint_64)(int_64)56)
	$2 = *(($1 + [24]))
	*($4 + [3]) = (uint_64)$2 >> (uint_64)(int_64)32)
	*($4 + [2]) = (uint_64)$2 >> (uint_64)(int_64)40)
	*($4 + [1]) = (uint_64)$2 >> (uint_64)(int_64)48)
	$7 = (CASTING uint_32)(uint_64 $5)
	*($4 + [15]) = $7
	*($4 + [14]) = uint_32($7 >> [8])
	*($4 + [13]) = uint_32($7 >> [16])
	*($4 + [12]) = uint_32($7 >> [24])
	$7 = (CASTING uint_32)(uint_64 $2)
	*($4 + [7]) = $7
	*($4 + [6]) = uint_32($7 >> [8])
	*($4 + [5]) = uint_32($7 >> [16])
	*($4 + [4]) = uint_32($7 >> [24])
	$7 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	*($4) = $7)
	$5 = *(($1 + [32]))
	*($4 + [27]) = (uint_64)$5 >> (uint_64)(int_64)32)
	*($4 + [26]) = (uint_64)$5 >> (uint_64)(int_64)40)
	*($4 + [25]) = (uint_64)$5 >> (uint_64)(int_64)48)
	*($4 + [24]) = (uint_64)$5 >> (uint_64)(int_64)56)
	$11 = *(($1 + [40]))
	*($4 + [19]) = (uint_64)$11 >> (uint_64)(int_64)32)
	*($4 + [18]) = (uint_64)$11 >> (uint_64)(int_64)40)
	*($4 + [17]) = (uint_64)$11 >> (uint_64)(int_64)48)
	*($4 + [16]) = (uint_64)$11 >> (uint_64)(int_64)56)
	$1 = (CASTING uint_32)(uint_64 $5)
	*($4 + [31]) = $1
	*($4 + [30]) = uint_32($1 >> [8])
	*($4 + [29]) = uint_32($1 >> [16])
	*($4 + [28]) = uint_32($1 >> [24])
	$1 = (CASTING uint_32)(uint_64 $11)
	*($4 + [23]) = $1
	*($4 + [22]) = uint_32($1 >> [8])
	*($4 + [21]) = uint_32($1 >> [16])
	*($4 + [20]) = uint_32($1 >> [24])
	*($4 + [40]) = [0]
	*($4 + [32]) = (int_64)0
	CALL $35(($4 + [32]), *(((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)60)) + [10655])))
	CALL $35(($4 + [32]), *((($7 & [15]) + [10655])))
	$1 = [1]
	$9 = [5]
	goto $label$3 
	
.LABEL $label$39
	$7 = *(($4 + $1))
	CALL $35(($4 + [32]), *((uint_32($7 >> [4]) + [10655])))
	CALL $35(($4 + [32]), *((($7 & [15]) + [10655])))
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[32]) ){ goto $label$16 }
	$9 = [6]
	goto $label$3 
	
.LABEL $label$38
	CALL prints([10516])
	$1 = *($3)
	$8 = ($1 & [1])
	$7 = ($3 + [1])
	CALL prints_l(( *($3 + [8]) ? $7 : $8 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $8 ))
	CALL prints([8797])
	CALL prints([10524])
	$1 = *($4 + [32])
	$8 = ($1 & [1])
	CALL prints_l(( *((($4 + [32]) + [8])) ? (($4 + [32]) | [1]) : $8 ), ( *($4 + [36]) ? uint_32($1 >> [1]) : $8 ))
	CALL prints([8797])
	$8 = *($3)
	$6 = ($8 & [1])
	$1 = CALL $29($4, ($4 + [32]))
	CALL $36($1, ( *($3 + [8]) ? $7 : $6 ), ( *($3 + [4]) ? uint_32($8 >> [1]) : $6 ))
	CALL prints([10541])
	$8 = *($4)
	$6 = ($8 & [1])
	$7 = ($1 + [1])
	CALL prints_l(( *($1 + [8]) ? $7 : $6 ), ( *($1 + [4]) ? uint_32($8 >> [1]) : $6 ))
	CALL prints([8797])
	$8 = *($4)
	$6 = ($8 & [1])
	CALL $38($0, ( *($1 + [8]) ? $7 : $6 ), ( *($1 + [4]) ? uint_32($8 >> [1]) : $6 ))
	CALL prints([10550])
	CALL $80($0)
	CALL prints([8797])
	if ( (*($4) & [1]) ){ goto $label$15 }
	$9 = [21]
	goto $label$3 
	
.LABEL $label$37
	if ( (*($4 + [32]) & [1]) ){ goto $label$14 }
	$9 = [20]
	goto $label$3 
	
.LABEL $label$36
	$8 = *($4 + [96])
	if ( $8 ){ goto $label$12 }
	$9 = [19]
	goto $label$3 
	
.LABEL $label$35
	$global$0 = ($4 + [112])
	return 
	
.LABEL $label$34
	*($0) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*(($0 + [16])) = (int_64)0
	*(($0 + [8])) = (int_64)0
	$8 = *($4 + [96])
	if ( $8 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$33
	CALL $11(*(($1 + [8])))
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$13 }
	$9 = [8]
	goto $label$3 
	
.LABEL $label$32
	CALL $11(*(($4 + [40])))
	$8 = *($4 + [96])
	if ( ($8 == 0) ){ goto $label$9 }
	$9 = [9]
	goto $label$3 
	
.LABEL $label$31
	$6 = ($4 + [100])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$8 }
	$9 = [10]
	goto $label$3 
	
.LABEL $label$30
	$9 = [11]
	goto $label$3 
	
.LABEL $label$29
	$1 = ($1 + [-24])
	$7 = *($1)
	*($1) = [0]
	if ( ($7 == 0) ){ goto $label$6 }
	$9 = [12]
	goto $label$3 
	
.LABEL $label$28
	if ( ((*($7 + [80]) & [1]) == 0) ){ goto $label$5 }
	$9 = [13]
	goto $label$3 
	
.LABEL $label$27
	CALL $11(*(($7 + [88])))
	$9 = [14]
	goto $label$3 
	
.LABEL $label$26
	CALL $11($7)
	$9 = [15]
	goto $label$3 
	
.LABEL $label$25
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$7 }
	$9 = [16]
	goto $label$3 
	
.LABEL $label$24
	$1 = *(($4 + [96]))
	goto $label$4 
	
.LABEL $label$23
	$1 = $8
	$9 = [17]
	goto $label$3 
	
.LABEL $label$22
	*($6) = $8
	CALL $11($1)
	$global$0 = ($4 + [112])
	return 
	
.LABEL $label$21
	$9 = [1]
	goto $label$3 
	
.LABEL $label$20
	$9 = [24]
	goto $label$3 
	
.LABEL $label$19
	$9 = [23]
	goto $label$3 
	
.LABEL $label$18
	$9 = [4]
	goto $label$3 
	
.LABEL $label$17
	$9 = [23]
	goto $label$3 
	
.LABEL $label$16
	$9 = [5]
	goto $label$3 
	
.LABEL $label$15
	$9 = [7]
	goto $label$3 
	
.LABEL $label$14
	$9 = [8]
	goto $label$3 
	
.LABEL $label$13
	$9 = [20]
	goto $label$3 
	
.LABEL $label$12
	$9 = [9]
	goto $label$3 
	
.LABEL $label$11
	$9 = [19]
	goto $label$3 
	
.LABEL $label$10
	$9 = [9]
	goto $label$3 
	
.LABEL $label$9
	$9 = [19]
	goto $label$3 
	
.LABEL $label$8
	$9 = [18]
	goto $label$3 
	
.LABEL $label$7
	$9 = [11]
	goto $label$3 
	
.LABEL $label$6
	$9 = [15]
	goto $label$3 
	
.LABEL $label$5
	$9 = [14]
	goto $label$3 
	
.LABEL $label$4
	$9 = [17]
	goto $label$3 
	$9
}

void .FUNC $71 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$5 = ($1 + [16])
	*($4 + [24]) = (int_64))((int_64)0 - *($5))
	$6 = *($1)
	*($1 + [8]) = CALL $19()
	*($5) = ((int_64)*($5) + (int_64)1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10285])
	
.LABEL $label$3
	$7 = $3
	$3 = ($7 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = $7
	*($4 + [32]) = ($4 + [8])
	*($4 + [48]) = $5
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [32])
	CALL $59(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [52]), $2, $3, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($4 + [40]) = (int_64))((int_64)0 - *($5))
	if ( (CALL $20(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$5 }
	$5 = ($1 + [56])
	$1 = *($5)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$6 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $6)
	*($5) = $1
	
.LABEL $label$6
	CALL db_idx64_update($1, $2, ($4 + [40]))
	
.LABEL $label$5
	$global$0 = ($4 + [64])
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)7615821578177085440, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $79($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $78(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10967])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [40])) = *(($6 + [24]))
	*(($1 + [32])) = *(($6 + [16]))
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	$6 = *($5 + [12])
	*($1 + [48]) = *($6)
	*(($1 + [72])) = *(($6 + [24]))
	*(($1 + [64])) = *(($6 + [16]))
	*(($1 + [56])) = *(($6 + [8]))
	$8 = ($1 + [80])
	CALL $30($8, *($5 + [16]))
	*($1 + [96]) = CALL $19()
	$5 = *($1 + [80])
	$6 = ( *(($1 + [84])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [88])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [48])
	$9 = ($1 + [16])
	
.LOOP $label$5:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$5 }
	if ( ($5 <= [513]) ){ goto $label$7 }
	$2 = CALL $2($5)
	goto $label$6 
	
.LABEL $label$7
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$6
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $5)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = $9
	*($3 + [44]) = $6
	*($3 + [48]) = $8
	*($3 + [52]) = ($1 + [96])
	CALL $214(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [108]) = CALL db_store_i64(*($4 + [8]), (int_64)7615821578177085440, *(*($0 + [8])), $7, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$8 }
	CALL $4($2)
	
.LABEL $label$8
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$9 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$5 = ($4 + [8])
	$7 = *($5)
	$2 = *(($0 + [8]))
	$10 = *($2)
	$11 = *($1)
	*($3 + [32]) = ((int_64)*(($1 + [96])) / (int_64)1000000)
	*($1 + [112]) = CALL db_idx64_store($7, (int_64)7615821578177085440, $10, $11, ($3 + [32]))
	$7 = *($2)
	$10 = *($5)
	$11 = *($1)
	*($3 + [32]) = *(($1 + [8]))
	*(($1 + [116])) = CALL db_idx64_store($10, (int_64)7615821578177085441, $7, $11, ($3 + [32]))
	$7 = *($2)
	$10 = *($5)
	$11 = *($1)
	*((($3 + [32]) + [24])) = *(($6 + [24]))
	*((($3 + [32]) + [16])) = *(($6 + [16]))
	*($3 + [40]) = *(($6 + [8]))
	*($3 + [32]) = *($6)
	*(($1 + [120])) = CALL db_idx256_store($10, (int_64)7615821578177085442, $7, $11, ($3 + [32]), [2])
	$global$0 = ($3 + [64])
}

void .FUNC $77 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $18($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [80]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [88])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $11($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $74 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [10104])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *(($2 + [116]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)7615821578177085441, ($1 + [8]), *($2))
	*((*(($0 + [4])) + [116])) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = *($1 + [8])
	$3 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$7:
	$2 = ($3 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$6 }
	$3 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	if ( ((int_32)*($4 + [104]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [10021])
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	$2 = CALL db_find_i64(*($7), *($7 + [8]), (int_64)7615821578177085440, $6)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $79($7, $2)
	if ( ((int_32)*($4 + [104]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$4
	*(($4 + [116])) = $5
	
.LABEL $label$3
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11326])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [11371])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [11421])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [80]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($6 + [88])))
	
.LABEL $label$13
	CALL $11($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [80]) & [1]) == 0) ){ goto $label$16 }
	CALL $11(*(($9 + [88])))
	
.LABEL $label$16
	CALL $11($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [108])))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $213(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $78 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [108]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10607])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)7615821578177085440)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $79(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([128])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [80 align=4]) = (int_64)0
	*($5 + [88]) = [0]
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = $0
	*(($5 + [40])) = (int_64)0
	*(($5 + [32])) = (int_64)0
	*(($5 + [24])) = (int_64)0
	*(($5 + [72])) = (int_64)0
	*(($5 + [64])) = (int_64)0
	*(($5 + [56])) = (int_64)0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [80])
	*($3 + [60]) = ($5 + [96])
	CALL $191(($3 + [40]), ($3 + [32]))
	*($5 + [108]) = $1
	*($5 + [112 align=4]) = (int_64)-1
	*($5 + [120]) = [-1]
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $77(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [80]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [88])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $223 ()
{
	int_32 $0
	int_32 $1
	int_32 $2
	int_64 $3
	int_64 $4
	*([0] + [8508 align=4]) = (int_64)0
	*([0] + [8516]) = [0]
	$0 = CALL $17([8613])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$5 }
	*([0] + [8508]) = ($0 << [1])
	$1 = [8509]
	if ( $0 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$2 = (($0 + [16]) & [-16])
	$1 = CALL $9($2)
	*([0] + [8508]) = ($2 | [1])
	*([0] + [8516]) = $1
	*([0] + [8512]) = $0
	
.LABEL $label$4
	CALL memcpy($1, [8613], $0)
	
.LABEL $label$3
	*(($1 + $0)) = [0]
	CALL $40([3], [0], [8192])
	$0 = CALL $17([8704])
	if ( ($0 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9854])
	goto $label$7 
	
.LABEL $label$8
	if ( ($0 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$3 = (int_64)0
	
.LOOP $label$9:
	$1 = *(($0 + [8703]))
	if ( ((($1 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [9899])
	
.LABEL $label$10
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$9 }
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$6
	$3 = (int_64)4
	goto $label$1 
	
.LABEL $label$2
	CALL $28([8508])
	
.LABEL $label$1
	$0 = [0]
	*([0] + [8528]) = $3
	*([0] + [8520]) = (int_64)1
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$4 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$3 = $4
	$1 = $0
	$0 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	$3 = $4
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$1 = ((int_32)$0 < (int_32)[6])
	$2 = ($0 + [1])
	$0 = $2
	if ( $1 ){ goto $label$15 }
	$0 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$12 }
	
.LABEL $label$13
	*([0] + [8536]) = (int_64)0
	return 
	
.LABEL $label$11
	CALL eosio_assert([0], [10001])
	*([0] + [8536]) = (int_64)0
	(unreachable)
}

void .FUNC $98 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $18($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [52])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [56])) = $2
	CALL $11($2)
	
.LABEL $label$11
	$2 = *($1 + [40])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($1 + [44])) = $2
	CALL $11($2)
	
.LABEL $label$12
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $11($4)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10344])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $94 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $18($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $95 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	$3 = ($global$0 - [192])
	$global$0 = $3
	*($3 + [88]) = $1
	CALL require_auth($1)
	$4 = [0]
	*((($3 + [48]) + [32])) = [0]
	*($3 + [64]) = (int_64)-1
	*($3 + [72]) = (int_64)0
	$1 = *($0)
	*($3 + [48]) = $1
	*($3 + [56]) = $1
	*((($3 + [8]) + [32])) = [0]
	*($3 + [8]) = $1
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	*($3 + [44]) = [0]
	$5 = *($2)
	*($3 + [16]) = $5
	$0 = CALL db_find_i64($1, $1, (int_64)-6224682770514313216, $5)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $45(($3 + [48]), $0)
	if ( ((int_32)*($4 + [120]) == (int_32)($3 + [48])) ){ goto $label$1 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$1
	if ( ((int_64)*($2) != (int_64)-4057297652813922304) ){ goto $label$2 }
	CALL eosio_assert([0], [9041])
	
.LABEL $label$2
	if ( ($4 == 0) ){ goto $label$3 }
	CALL eosio_assert([0], [9075])
	
.LABEL $label$3
	$1 = *($3 + [88])
	*($3 + [148]) = $2
	*($3 + [144]) = ($3 + [88])
	*($3 + [160]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [48])) ){ goto $label$4 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$4
	*($3 + [100]) = ($3 + [144])
	*($3 + [96]) = ($3 + [48])
	*($3 + [104]) = ($3 + [160])
	$2 = CALL $9([136])
	CALL $96($2)
	*($2 + [120]) = ($3 + [48])
	CALL $97(($3 + [96]), $2)
	*($3 + [184]) = $2
	$1 = *($2 + [16])
	*($3 + [96]) = $1
	$0 = *($2 + [124])
	*($3 + [180]) = $0
	$6 = ($3 + [76])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*(($3 + [80]))) ){ goto $label$7 }
	*($4 + [8]) = $1
	*($4 + [16]) = $0
	*($3 + [184]) = [0]
	*($4) = $2
	*($6) = ($4 + [24])
	$2 = *($3 + [184])
	$4 = [0]
	*($3 + [184]) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	CALL $98(($3 + [72]), ($3 + [184]), ($3 + [96]), ($3 + [180]))
	$2 = *($3 + [184])
	$4 = [0]
	*($3 + [184]) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$0 = *($2 + [52])
	if ( ($0 == 0) ){ goto $label$8 }
	*(($2 + [56])) = $0
	CALL $11($0)
	
.LABEL $label$8
	$0 = *($2 + [40])
	if ( ($0 == 0) ){ goto $label$9 }
	*(($2 + [44])) = $0
	CALL $11($0)
	
.LABEL $label$9
	CALL $11($2)
	
.LABEL $label$5
	$7 = (($3 + [8]) + [24])
	$8 = (($3 + [96]) + [40])
	$9 = ($3 + [172])
	$10 = ($3 + [36])
	$5 = (int_64)0
	
.LOOP $label$10:
	$1 = *($3 + [88])
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [8])) ){ goto $label$11 }
	CALL eosio_assert($4, [10350])
	
.LABEL $label$11
	*(($2 = CALL $9([56])) + [8]) = (int_64)0
	*($2 + [40]) = ($3 + [8])
	*($2 + [16]) = (int_64)0
	*($2) = $5
	*($2 + [32]) = *($4 + [8536])
	*((($3 + [144]) + [8])) = $8
	*($3 + [148]) = ($3 + [96])
	*($3 + [144]) = ($3 + [96])
	*($3 + [184]) = ($3 + [144])
	$6 = ($2 + [16])
	*((($3 + [160]) + [8])) = $6
	*($9) = ($2 + [24])
	$11 = ($2 + [32])
	*((($3 + [160]) + [16])) = $11
	*($3 + [164]) = ($2 + [8])
	*($3 + [160]) = $2
	CALL $99(($3 + [160]), ($3 + [184]))
	$12 = *($2)
	$0 = (($3 + [8]) + [8])
	*($2 + [44]) = CALL db_store_i64(*($0), (int_64)5310424360057438208, $1, $12, ($3 + [96]), [40])
	$13 = (($3 + [8]) + [16])
	if ( (uint_64)($12 <= *($13)) ){ goto $label$12 }
	*($13) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$12 = *($2)
	$14 = *($0)
	*($3 + [160]) = *($6)
	*($2 + [48]) = CALL db_idx64_store($14, (int_64)5310424360057438208, $1, $12, ($3 + [160]))
	$12 = *($2)
	$14 = *($0)
	*($3 + [160]) = ((int_64)*($11) / (int_64)1000000)
	*($2 + [52]) = CALL db_idx64_store($14, (int_64)5310424360057438209, $1, $12, ($3 + [160]))
	*($3 + [160]) = $2
	$1 = *($2)
	*($3 + [96]) = $1
	$6 = *(($2 + [44]))
	*($3 + [144]) = $6
	$0 = *($10)
	if ( ((uint_32)$0 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$15 }
	*($0 + [8]) = $1
	*($0 + [16]) = $6
	*($3 + [160]) = $4
	*($0) = $2
	*($10) = ($0 + [24])
	$2 = *($3 + [160])
	*($3 + [160]) = $4
	if ( $2 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $100($7, ($3 + [160]), ($3 + [96]), ($3 + [144]))
	$2 = *($3 + [160])
	*($3 + [160]) = $4
	if ( ($2 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $11($2)
	
.LABEL $label$13
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)$5 != (int_64)21) ){ goto $label$10 }
	$0 = *($3 + [32])
	if ( ($0 == 0) ){ goto $label$16 }
	$6 = ($3 + [36])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$18 }
	
.LOOP $label$19:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	CALL $11($4)
	
.LABEL $label$20
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$19 }
	$2 = *(($3 + [32]))
	goto $label$17 
	
.LABEL $label$18
	$2 = $0
	
.LABEL $label$17
	*($6) = $0
	CALL $11($2)
	
.LABEL $label$16
	$6 = *($3 + [72])
	if ( ($6 == 0) ){ goto $label$21 }
	$11 = ($3 + [76])
	$4 = *($11)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$23 }
	
.LOOP $label$24:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$25 }
	$0 = *($2 + [52])
	if ( ($0 == 0) ){ goto $label$26 }
	*(($2 + [56])) = $0
	CALL $11($0)
	
.LABEL $label$26
	$0 = *($2 + [40])
	if ( ($0 == 0) ){ goto $label$27 }
	*(($2 + [44])) = $0
	CALL $11($0)
	
.LABEL $label$27
	CALL $11($2)
	
.LABEL $label$25
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$24 }
	$2 = *(($3 + [72]))
	goto $label$22 
	
.LABEL $label$23
	$2 = $6
	
.LABEL $label$22
	*($11) = $6
	CALL $11($2)
	
.LABEL $label$21
	$global$0 = ($3 + [192])
}

int_32 .FUNC $96 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	*($0 + [2]) = [0]
	*($0) = [0]
	*($0 + [8]) = (int_64)0
	*($0 + [16]) = (int_64)0
	$1 = CALL $17([8704])
	if ( ($1 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9854])
	goto $label$3 
	
.LABEL $label$4
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$3 = *(($1 + [8703]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9899])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$5 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)4
	
.LABEL $label$1
	*($0 + [24]) = (int_64)0
	*(($0 + [32])) = $2
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$2 = $4
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $3 ){ goto $label$11 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [10001])
	
.LABEL $label$7
	*($0 + [40 align=4]) = (int_64)0
	*($0 + [64]) = (int_64)0
	*($0 + [80]) = (int_64)0
	*($0 + [88]) = (int_64)0
	*($0 + [104]) = (int_64)0
	*(($0 + [48])) = (int_64)0
	*(($0 + [56])) = (int_64)0
	return $0
}

void .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1 + [8]) = *(*($4))
	$4 = *($4 + [4])
	*($1 + [16]) = *($4)
	*($1 + [64]) = *($4 + [8])
	*($1 + [80]) = *($4 + [24])
	*($1 + [88]) = *($4 + [32])
	*($1 + [104]) = *($4 + [48])
	*($1 + [72]) = *($4 + [16])
	*($1 + [96]) = *($4 + [40])
	*($1 + [112]) = *($4 + [56])
	$5 = ($1 + [40])
	$6 = *($0)
	$8 = *($1 + [40])
	$7 = *($1 + [44])
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	$4 = [35]
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$1 }
	$11 = ($1 + [52])
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$2 }
	$4 = (($9 & [-8]) + $4)
	
.LABEL $label$2
	$8 = *($11)
	$7 = *($1 + [56])
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$4 }
	$4 = (($9 & [-8]) + $4)
	
.LABEL $label$4
	$7 = ($4 + [44])
	if ( ($7 <= [513]) ){ goto $label$6 }
	$4 = CALL $2($7)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $7)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [1])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [2])
	*($3 + [44]) = ($1 + [8])
	*($3 + [48]) = ($1 + [16])
	*($3 + [52]) = ($1 + [24])
	*($3 + [56]) = $5
	*($3 + [60]) = $11
	*($3 + [64]) = ($1 + [64])
	*($3 + [68]) = ($1 + [72])
	*($3 + [72]) = ($1 + [80])
	*($3 + [76]) = ($1 + [88])
	*($3 + [80]) = ($1 + [96])
	*($3 + [84]) = ($1 + [104])
	*($3 + [88]) = ($1 + [112])
	CALL $60(($3 + [32]), ($3 + [24]))
	$10 = *($1 + [16])
	*($1 + [124]) = CALL db_store_i64(*($6 + [8]), (int_64)-6224682770514313216, *(*($0 + [8])), $10, $4, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$10 >= (uint_64)*($6 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $4($4)
	if ( (uint_64)($10 <= *($6 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [96])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [96])
}

void .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [128])
	$global$0 = $2
	CALL require_auth(*($0))
	*((($2 + [48]) + [32])) = [0]
	*($2 + [64]) = (int_64)-1
	*($2 + [72]) = (int_64)0
	$3 = *($0)
	*($2 + [48]) = $3
	*($2 + [56]) = $3
	*((($2 + [8]) + [32])) = [0]
	*($2 + [16]) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$4 = $3
	$5 = [0]
	$6 = CALL db_lowerbound_i64($3, $3, (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $52(($2 + [48]), $6)
	$3 = *(($2 + [16]))
	$4 = *($2 + [8])
	
.LABEL $label$1
	$6 = CALL db_lowerbound_i64($4, $3, (int_64)-6224682770514313216, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $45(($2 + [8]), $6)
	
.LABEL $label$2
	if ( ($5 == 0) ){ goto $label$5 }
	$3 = *($0)
	*($2 + [96]) = $1
	CALL $91(($2 + [48]), $5, $3, ($2 + [96]))
	$6 = *($2 + [32])
	if ( $6 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = *($0)
	*($2) = $1
	*($2 + [120]) = $3
	if ( ((int_64)CALL current_receiver() == (int_64)*($2 + [48])) ){ goto $label$6 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$6
	*($2 + [100]) = $2
	*($2 + [96]) = ($2 + [48])
	*($2 + [104]) = ($2 + [120])
	$0 = CALL $9([136])
	CALL $92($0)
	*($0 + [120]) = ($2 + [48])
	CALL $93(($2 + [96]), $0)
	*($2 + [112]) = $0
	$3 = *($0)
	*($2 + [96]) = $3
	$1 = *($0 + [124])
	*($2 + [92]) = $1
	$6 = ($2 + [76])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($2 + [80]))) ){ goto $label$9 }
	*($5 + [8]) = $3
	*($5 + [16]) = $1
	*($2 + [112]) = [0]
	*($5) = $0
	*($6) = ($5 + [24])
	$0 = *($2 + [112])
	*($2 + [112]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $94(($2 + [72]), ($2 + [112]), ($2 + [96]), ($2 + [92]))
	$0 = *($2 + [112])
	*($2 + [112]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11($0)
	
.LABEL $label$7
	$6 = *($2 + [32])
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($2 + [36])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$12:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	$1 = *($0 + [52])
	if ( ($1 == 0) ){ goto $label$14 }
	*(($0 + [56])) = $1
	CALL $11($1)
	
.LABEL $label$14
	$1 = *($0 + [40])
	if ( ($1 == 0) ){ goto $label$15 }
	*(($0 + [44])) = $1
	CALL $11($1)
	
.LABEL $label$15
	CALL $11($0)
	
.LABEL $label$13
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$12 }
	$0 = *(($2 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $6
	
.LABEL $label$10
	*($7) = $6
	CALL $11($0)
	
.LABEL $label$3
	$1 = *($2 + [72])
	if ( ($1 == 0) ){ goto $label$16 }
	$6 = ($2 + [76])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$20 }
	CALL $11($5)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$19 }
	$0 = *(($2 + [72]))
	goto $label$17 
	
.LABEL $label$18
	$0 = $1
	
.LABEL $label$17
	*($6) = $1
	CALL $11($0)
	
.LABEL $label$16
	$global$0 = ($2 + [128])
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$3 = *($3)
	*($1 + [32]) = *($3)
	*($1 + [40]) = *($3 + [8])
	*($1 + [48]) = *($3 + [16])
	*($1 + [56]) = *($3 + [24])
	*($1 + [64]) = *($3 + [32])
	*($1 + [72]) = *($3 + [40])
	*($1 + [80]) = *($3 + [48])
	*($1 + [88]) = *($3 + [56])
	$6 = *($1)
	*($1 + [96]) = *($3 + [64])
	*($1 + [104]) = *($3 + [72])
	*($1 + [112]) = *($3 + [80])
	$4 = $4
	$3 = ($4 + [-128])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [32])
	*($5 + [40]) = ($1 + [40])
	*($5 + [44]) = ($1 + [48])
	*($5 + [48]) = ($1 + [56])
	*($5 + [52]) = ($1 + [64])
	*($5 + [56]) = ($1 + [72])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [96])
	*($5 + [72]) = ($1 + [104])
	*($5 + [76]) = ($1 + [112])
	CALL $88(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [124]), $2, $3, [120])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [80])
}

int_32 .FUNC $92 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$1 = CALL $17([8704])
	if ( ($1 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9854])
	goto $label$3 
	
.LABEL $label$4
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$3 = *(($1 + [8703]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9899])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$5 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)4
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = $2
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$2 = $4
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $3 ){ goto $label$11 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [10001])
	
.LABEL $label$7
	*($0 + [40]) = (int_64)30
	*($0 + [32]) = (int_64)21
	*($0 + [48]) = (int_64)10000
	*($0 + [56]) = (int_64)55000000
	*($0 + [64]) = (int_64)1
	*($0 + [72]) = (int_64)1
	*($0 + [80]) = (int_64)1
	*($0 + [88]) = (int_64)105
	*($0 + [96]) = (int_64)21
	*($0 + [104]) = (int_64)604800
	*($0 + [112]) = (int_64)259200
	return $0
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	*($1) = (int_64)1
	*($1 + [8]) = (int_64)0
	$4 = *($0 + [4])
	$5 = *($0)
	$6 = CALL $17([8704])
	if ( ($6 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9854])
	goto $label$3 
	
.LABEL $label$4
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = (int_64)0
	
.LOOP $label$5:
	$8 = *(($6 + [8703]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9899])
	
.LABEL $label$6
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$5 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)4
	
.LABEL $label$1
	$10 = ($1 + [8])
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$11 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$7 = $11
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$7 = $11
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$12 = ($6 + [1])
	$6 = $12
	if ( $8 ){ goto $label$11 }
	$6 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [10001])
	
.LABEL $label$7
	*($1 + [16]) = (int_64)0
	*(($1 + [24])) = $9
	$6 = *($4)
	*($1 + [32]) = *($6)
	*($1 + [40]) = *($6 + [8])
	*($1 + [48]) = *($6 + [16])
	*($1 + [56]) = *($6 + [24])
	*($1 + [64]) = *($6 + [32])
	*($1 + [72]) = *($6 + [40])
	*($1 + [80]) = *($6 + [48])
	*($1 + [88]) = *($6 + [56])
	*($1 + [96]) = *($6 + [64])
	*($1 + [104]) = *($6 + [72])
	*($1 + [112]) = *($6 + [80])
	$8 = $2
	$6 = ($8 + [-128])
	$global$0 = $6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($8 + [-8])
	*($3 + [16]) = $3
	*($3 + [28]) = $10
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [32])
	*($3 + [40]) = ($1 + [40])
	*($3 + [44]) = ($1 + [48])
	*($3 + [48]) = ($1 + [56])
	*($3 + [52]) = ($1 + [64])
	*($3 + [56]) = ($1 + [72])
	*($3 + [60]) = ($1 + [80])
	*($3 + [64]) = ($1 + [88])
	*($3 + [68]) = ($1 + [96])
	*($3 + [72]) = ($1 + [104])
	*($3 + [76]) = ($1 + [112])
	CALL $88(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [124]) = CALL db_store_i64(*($5 + [8]), (int_64)7235159537265672192, *(*($0 + [8])), $7, $6, [120])
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$12 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$global$0 = ($3 + [80])
}

int_32 .FUNC $138 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [56])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10104])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [56])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)5559250338634006528, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [56]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [48]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [10021])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $207($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)5559250338634006528, $6))
	if ( ((int_32)*($3 + [48]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [56])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $139 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	$1 = ($global$0 - [768])
	$global$0 = $1
	CALL require_auth(*($0))
	*($1 + [488]) = [9797]
	*($1 + [492]) = CALL $17([9797])
	*($1 + [64]) = *($1 + [488])
	$2 = CALL $51(($1 + [496]), ($1 + [64]))
	*($1 + [480]) = [9797]
	*($1 + [484]) = CALL $17([9797])
	*($1 + [56]) = *($1 + [480])
	CALL $51(($1 + [544]), ($1 + [56]))
	$3 = [0]
	*((($1 + [504]) + [32])) = [0]
	*($1 + [512]) = (int_64)5378237732147705168
	*($1 + [520]) = (int_64)-1
	*($1 + [528]) = (int_64)0
	*($1 + [540]) = [0]
	*($1 + [504]) = *($2)
	*((($1 + [440]) + [32])) = [0]
	*($1 + [456]) = (int_64)-1
	*($1 + [464]) = (int_64)0
	*($1 + [476]) = [0]
	$4 = *($0)
	*($1 + [440]) = $4
	*($1 + [448]) = $4
	$2 = CALL db_lowerbound_i64($4, $4, (int_64)-4157495357179166720, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	CALL $44(($1 + [440]), $2)
	CALL eosio_assert([0], [9810])
	
.LABEL $label$1
	*($1 + [384]) = [9797]
	*($1 + [388]) = CALL $17([9797])
	*($1 + [48]) = *($1 + [384])
	$2 = CALL $51(($1 + [392]), ($1 + [48]))
	*($1 + [376]) = [9797]
	*($1 + [380]) = CALL $17([9797])
	*($1 + [40]) = *($1 + [376])
	CALL $51(($1 + [544]), ($1 + [40]))
	*((($1 + [400]) + [32])) = [0]
	*($1 + [416]) = (int_64)-1
	*($1 + [424]) = (int_64)0
	$4 = *($2)
	*($1 + [400]) = $4
	*($1 + [408]) = (int_64)5378237732147705168
	*((($1 + [336]) + [32])) = [0]
	*($1 + [352]) = (int_64)-1
	*($1 + [360]) = (int_64)0
	$5 = *($0)
	*($1 + [336]) = $5
	*($1 + [344]) = $5
	$2 = CALL db_lowerbound_i64($4, (int_64)5378237732147705168, (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $140(($1 + [400]), $2)
	
.LABEL $label$2
	$5 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($1 + [336])) ){ goto $label$3 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$3
	$2 = CALL $9([136])
	CALL $92($2)
	*($2 + [120]) = ($1 + [336])
	*($2 + [32]) = (int_64)21
	*($2 + [40]) = (int_64)30
	*($2 + [48]) = (int_64)10000
	*($2 + [56]) = (int_64)55000000
	*($2 + [64]) = (int_64)1
	*($2 + [72]) = (int_64)2
	*($2 + [80]) = (int_64)1
	*($2 + [88]) = (int_64)105
	*($2 + [96]) = (int_64)21
	*($2 + [104]) = (int_64)604800
	*($2 + [112]) = (int_64)259200
	*($2) = *($3)
	*($2 + [8]) = *($3 + [8])
	*($1 + [280]) = (($1 + [544]) + [120])
	*($1 + [276]) = ($1 + [544])
	*($1 + [272]) = ($1 + [544])
	*($1 + [224]) = ($1 + [272])
	*($1 + [668]) = ($2 + [8])
	*($1 + [664]) = $2
	*($1 + [672]) = ($2 + [16])
	*($1 + [676]) = ($2 + [32])
	*($1 + [680]) = ($2 + [40])
	*($1 + [684]) = ($2 + [48])
	*($1 + [688]) = ($2 + [56])
	*($1 + [692]) = ($2 + [64])
	*($1 + [696]) = ($2 + [72])
	*($1 + [700]) = ($2 + [80])
	*($1 + [704]) = ($2 + [88])
	*($1 + [708]) = ($2 + [96])
	*($1 + [712]) = ($2 + [104])
	*($1 + [716]) = ($2 + [112])
	CALL $88(($1 + [664]), ($1 + [224]))
	$4 = *($2)
	$6 = CALL db_store_i64(*((($1 + [336]) + [8])), (int_64)7235159537265672192, $5, $4, ($1 + [544]), [120])
	*($2 + [124]) = $6
	$3 = (($1 + [336]) + [16])
	if ( (uint_64)($4 <= *($3)) ){ goto $label$4 }
	*($3) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($1 + [664]) = $2
	$4 = *($2)
	*($1 + [544]) = $4
	*($1 + [272]) = $6
	$7 = ($1 + [364])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*((($1 + [336]) + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $4
	*($3 + [16]) = $6
	*($1 + [664]) = [0]
	*($3) = $2
	*($7) = ($3 + [24])
	$2 = *($1 + [664])
	$3 = [0]
	*($1 + [664]) = [0]
	if ( $2 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $94(($1 + [360]), ($1 + [664]), ($1 + [544]), ($1 + [272]))
	$2 = *($1 + [664])
	$3 = [0]
	*($1 + [664]) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $11($2)
	
.LABEL $label$5
	$2 = CALL db_lowerbound_i64(*($1 + [504]), *((($1 + [504]) + [8])), (int_64)-4157495357179166720, (int_64)0)
	if ( ((int_32)$2 < (int_32)$3) ){ goto $label$8 }
	$8 = (($1 + [440]) + [24])
	$9 = (($1 + [544]) + [48])
	$3 = CALL $44(($1 + [504]), $2)
	$10 = ($1 + [676])
	$11 = ($1 + [468])
	
.LOOP $label$9:
	$4 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($1 + [440])) ){ goto $label$10 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$10
	*(($2 = CALL $9([64])) + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = ($1 + [440])
	*($2) = *($3)
	*($2 + [8]) = *($3 + [8])
	*($2 + [16]) = *($3 + [16])
	*($2 + [24]) = *($3 + [24])
	*($2 + [40]) = *(($3 + [40]))
	*($2 + [32]) = *($3 + [32])
	*((($1 + [272]) + [8])) = $9
	*($1 + [276]) = ($1 + [544])
	*($1 + [272]) = ($1 + [544])
	*($1 + [224]) = ($1 + [272])
	$6 = ($2 + [16])
	*((($1 + [664]) + [8])) = $6
	*($10) = ($2 + [24])
	*((($1 + [664]) + [16])) = ($2 + [32])
	*($1 + [668]) = ($2 + [8])
	*($1 + [664]) = $2
	CALL $59(($1 + [664]), ($1 + [224]))
	$5 = *($2)
	$7 = (($1 + [440]) + [8])
	*($2 + [52]) = CALL db_store_i64(*($7), (int_64)-4157495357179166720, $4, $5, ($1 + [544]), [48])
	$12 = (($1 + [440]) + [16])
	if ( (uint_64)($5 <= *($12)) ){ goto $label$11 }
	*($12) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$5 = *($2)
	$13 = *($7)
	*($1 + [664]) = (int_64))((int_64)0 - *($6))
	*($2 + [56]) = CALL db_idx64_store($13, (int_64)-4157495357179166720, $4, $5, ($1 + [664]))
	*($1 + [664]) = $2
	$4 = *($2)
	*($1 + [544]) = $4
	$7 = *(($2 + [52]))
	*($1 + [272]) = $7
	$6 = *($11)
	if ( ((uint_32)$6 >= (uint_32)*((($1 + [440]) + [32]))) ){ goto $label$14 }
	*($6 + [8]) = $4
	*($6 + [16]) = $7
	*($1 + [664]) = [0]
	*($6) = $2
	*($11) = ($6 + [24])
	$2 = *($1 + [664])
	*($1 + [664]) = [0]
	if ( $2 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $73($8, ($1 + [664]), ($1 + [544]), ($1 + [272]))
	$2 = *($1 + [664])
	*($1 + [664]) = [0]
	if ( ($2 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $11($2)
	
.LABEL $label$12
	$2 = CALL db_next_i64(*($3 + [52]), ($1 + [544]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$8 }
	$3 = CALL $44(($1 + [504]), $2)
	goto $label$9 
	
.LABEL $label$8
	*($1 + [320]) = [9797]
	*($1 + [324]) = CALL $17([9797])
	*($1 + [32]) = *($1 + [320])
	$2 = CALL $51(($1 + [328]), ($1 + [32]))
	*($1 + [312]) = [9797]
	*($1 + [316]) = CALL $17([9797])
	*($1 + [24]) = *($1 + [312])
	CALL $51(($1 + [544]), ($1 + [24]))
	*((($1 + [664]) + [32])) = [0]
	*($1 + [680]) = (int_64)-1
	*($1 + [688]) = (int_64)0
	$4 = *($2)
	*($1 + [664]) = $4
	*($1 + [672]) = (int_64)5378237732147705168
	*(($14 = (($1 + [272]) + [32]))) = [0]
	*($1 + [288]) = (int_64)-1
	*($1 + [296]) = (int_64)0
	$5 = *($0)
	*($1 + [272]) = $5
	*($1 + [280]) = $5
	$2 = CALL db_lowerbound_i64($4, (int_64)5378237732147705168, (int_64)-7112050364219654144, (int_64)0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$27 }
	*($1 + [268]) = CALL $141(($1 + [664]), $2)
	*($1 + [264]) = ($1 + [664])
	$15 = (($1 + [72]) + [24])
	$8 = (($1 + [544]) + [40])
	$16 = (($1 + [168]) + [24])
	$17 = (($1 + [544]) + [48])
	$18 = (($1 + [272]) + [24])
	$19 = (($1 + [544]) + [8])
	$20 = (($1 + [272]) + [28])
	$21 = (($1 + [744]) + [12])
	
.LOOP $label$28:
	$4 = *($0)
	*($1 + [72]) = ($1 + [264])
	*($1 + [224]) = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1 + [272])) ){ goto $label$29 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$29
	*($19) = ($1 + [224])
	*($1 + [548]) = ($1 + [72])
	*($1 + [544]) = ($1 + [272])
	$2 = CALL $9([136])
	CALL $96($2)
	*($2 + [120]) = ($1 + [272])
	CALL $142(($1 + [544]), $2)
	*($1 + [168]) = $2
	$4 = *($2 + [16])
	*($1 + [544]) = $4
	$6 = *($2 + [124])
	*($1 + [128]) = $6
	$3 = *($20)
	if ( ((uint_32)$3 >= (uint_32)*($14)) ){ goto $label$32 }
	*($3 + [8]) = $4
	*($3 + [16]) = $6
	*($1 + [168]) = [0]
	*($3) = $2
	*($20) = ($3 + [24])
	$2 = *($1 + [168])
	*($1 + [168]) = [0]
	if ( ($2 == 0) ){ goto $label$30 }
	goto $label$31 
	
.LABEL $label$32
	CALL $98($18, ($1 + [168]), ($1 + [544]), ($1 + [128]))
	$2 = *($1 + [168])
	*($1 + [168]) = [0]
	if ( ($2 == 0) ){ goto $label$30 }
	
.LABEL $label$31
	$3 = *($2 + [52])
	if ( ($3 == 0) ){ goto $label$33 }
	*(($2 + [56])) = $3
	CALL $11($3)
	
.LABEL $label$33
	$3 = *($2 + [40])
	if ( ($3 == 0) ){ goto $label$34 }
	*(($2 + [44])) = $3
	CALL $11($3)
	
.LABEL $label$34
	CALL $11($2)
	
.LABEL $label$30
	*($1 + [208]) = [9797]
	*($1 + [212]) = CALL $17([9797])
	*($1 + [16]) = *($1 + [208])
	CALL $51(($1 + [216]), ($1 + [16]))
	*((($1 + [224]) + [16])) = (int_64)-1
	*(($22 = (($1 + [224]) + [24]))) = (int_64)0
	*((($1 + [224]) + [32])) = [0]
	$2 = *($1 + [268])
	$4 = *($2 + [16])
	*((($1 + [224]) + [8])) = $4
	*((($1 + [224]) + [36])) = [0]
	$5 = *($1 + [216])
	*($1 + [224]) = $5
	*(($11 = (($1 + [168]) + [16]))) = (int_64)-1
	*($16) = (int_64)0
	*(($10 = (($1 + [168]) + [32]))) = [0]
	*(($7 = (($1 + [168]) + [8]))) = *($2 + [16])
	*((($1 + [168]) + [36])) = [0]
	*($1 + [168]) = *($0)
	$2 = CALL db_lowerbound_i64($5, $4, (int_64)-4157495357179166720, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$35 }
	$3 = CALL $44(($1 + [224]), $2)
	
.LOOP $label$36:
	$4 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($1 + [168])) ){ goto $label$37 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$37
	*(($2 = CALL $9([64])) + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = ($1 + [168])
	*($2) = *($3)
	*($2 + [8]) = *($3 + [8])
	*($2 + [16]) = *($3 + [16])
	*($2 + [24]) = *($3 + [24])
	*($2 + [40]) = *(($3 + [40]))
	*($2 + [32]) = *($3 + [32])
	*((($1 + [72]) + [8])) = $17
	*($1 + [76]) = ($1 + [544])
	*($1 + [72]) = ($1 + [544])
	*($1 + [744]) = ($1 + [72])
	$6 = ($2 + [16])
	*((($1 + [128]) + [8])) = $6
	*((($1 + [128]) + [12])) = ($2 + [24])
	*((($1 + [128]) + [16])) = ($2 + [32])
	*($1 + [132]) = ($2 + [8])
	*($1 + [128]) = $2
	CALL $59(($1 + [128]), ($1 + [744]))
	$5 = *($2)
	*($2 + [52]) = CALL db_store_i64(*($7), (int_64)-4157495357179166720, $4, $5, ($1 + [544]), [48])
	if ( (uint_64)($5 <= *($11)) ){ goto $label$38 }
	*($11) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$38
	$5 = *($2)
	$13 = *($7)
	*($1 + [128]) = (int_64))((int_64)0 - *($6))
	*($2 + [56]) = CALL db_idx64_store($13, (int_64)-4157495357179166720, $4, $5, ($1 + [128]))
	*($1 + [128]) = $2
	$4 = *($2)
	*($1 + [544]) = $4
	$12 = *(($2 + [52]))
	*($1 + [72]) = $12
	$9 = (($1 + [168]) + [28])
	$6 = *($9)
	if ( ((uint_32)$6 >= (uint_32)*($10)) ){ goto $label$41 }
	*($6 + [8]) = $4
	*($6 + [16]) = $12
	*($1 + [128]) = [0]
	*($6) = $2
	*($9) = ($6 + [24])
	$2 = *($1 + [128])
	*($1 + [128]) = [0]
	if ( $2 ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	CALL $73($16, ($1 + [128]), ($1 + [544]), ($1 + [72]))
	$2 = *($1 + [128])
	*($1 + [128]) = [0]
	if ( ($2 == 0) ){ goto $label$39 }
	
.LABEL $label$40
	CALL $11($2)
	
.LABEL $label$39
	$2 = CALL db_next_i64(*($3 + [52]), ($1 + [544]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$35 }
	$3 = CALL $44(($1 + [224]), $2)
	goto $label$36 
	
.LABEL $label$35
	*($1 + [112]) = [9797]
	*($1 + [116]) = CALL $17([9797])
	*($1 + [8]) = *($1 + [112])
	CALL $51(($1 + [120]), ($1 + [8]))
	*((($1 + [128]) + [16])) = (int_64)-1
	*(($23 = (($1 + [128]) + [24]))) = (int_64)0
	*((($1 + [128]) + [32])) = [0]
	$2 = *($1 + [268])
	$4 = *($2 + [16])
	*((($1 + [128]) + [8])) = $4
	*((($1 + [128]) + [36])) = [0]
	$5 = *($1 + [120])
	*($1 + [128]) = $5
	*(($12 = (($1 + [72]) + [16]))) = (int_64)-1
	*($15) = (int_64)0
	*(($10 = (($1 + [72]) + [32]))) = [0]
	*(($6 = (($1 + [72]) + [8]))) = *($2 + [16])
	*((($1 + [72]) + [36])) = [0]
	*($1 + [72]) = *($0)
	$2 = CALL db_lowerbound_i64($5, $4, (int_64)5310424360057438208, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$42 }
	$3 = CALL $103(($1 + [128]), $2)
	
.LOOP $label$43:
	$4 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($1 + [72])) ){ goto $label$44 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$44
	*(($2 = CALL $9([56])) + [32]) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2 + [40]) = ($1 + [72])
	*($2) = *($3)
	*($2 + [8]) = *($3 + [8])
	*($2 + [16]) = *($3 + [16])
	*($2 + [24]) = *($3 + [24])
	*($2 + [32]) = *($3 + [32])
	*((($1 + [720]) + [8])) = $8
	*($1 + [724]) = ($1 + [544])
	*($1 + [720]) = ($1 + [544])
	*($1 + [736]) = ($1 + [720])
	$7 = ($2 + [16])
	*((($1 + [744]) + [8])) = $7
	*($21) = ($2 + [24])
	$11 = ($2 + [32])
	*((($1 + [744]) + [16])) = $11
	*($1 + [748]) = ($2 + [8])
	*($1 + [744]) = $2
	CALL $99(($1 + [744]), ($1 + [736]))
	$5 = *($2)
	*($2 + [44]) = CALL db_store_i64(*($6), (int_64)5310424360057438208, $4, $5, ($1 + [544]), [40])
	if ( (uint_64)($5 <= *($12)) ){ goto $label$45 }
	*($12) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$45
	$5 = *($2)
	$13 = *($6)
	*($1 + [744]) = *($7)
	*($2 + [48]) = CALL db_idx64_store($13, (int_64)5310424360057438208, $4, $5, ($1 + [744]))
	$5 = *($2)
	$13 = *($6)
	*($1 + [744]) = ((int_64)*($11) / (int_64)1000000)
	*($2 + [52]) = CALL db_idx64_store($13, (int_64)5310424360057438209, $4, $5, ($1 + [744]))
	*($1 + [744]) = $2
	$4 = *($2)
	*($1 + [544]) = $4
	$11 = *(($2 + [44]))
	*($1 + [720]) = $11
	$9 = (($1 + [72]) + [28])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)*($10)) ){ goto $label$48 }
	*($7 + [8]) = $4
	*($7 + [16]) = $11
	*($1 + [744]) = [0]
	*($7) = $2
	*($9) = ($7 + [24])
	$2 = *($1 + [744])
	*($1 + [744]) = [0]
	if ( $2 ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$48
	CALL $100($15, ($1 + [744]), ($1 + [544]), ($1 + [720]))
	$2 = *($1 + [744])
	*($1 + [744]) = [0]
	if ( ($2 == 0) ){ goto $label$46 }
	
.LABEL $label$47
	CALL $11($2)
	
.LABEL $label$46
	$2 = CALL db_next_i64(*($3 + [44]), ($1 + [544]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$42 }
	$3 = CALL $103(($1 + [128]), $2)
	goto $label$43 
	
.LABEL $label$42
	$3 = *($1 + [268])
	if ( $3 ){ goto $label$49 }
	CALL eosio_assert([0], [10104])
	$3 = *($1 + [268])
	
.LABEL $label$49
	$2 = [0]
	$3 = CALL db_next_i64(*($3 + [124]), ($1 + [544]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$50 }
	$2 = CALL $141(*($1 + [264]), $3)
	
.LABEL $label$50
	*($1 + [268]) = $2
	$6 = *($15)
	if ( ($6 == 0) ){ goto $label$51 }
	$7 = (($1 + [72]) + [28])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$53 }
	
.LOOP $label$54:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$55 }
	CALL $11($3)
	
.LABEL $label$55
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$54 }
	$2 = *($15)
	goto $label$52 
	
.LABEL $label$53
	$2 = $6
	
.LABEL $label$52
	*($7) = $6
	CALL $11($2)
	
.LABEL $label$51
	$6 = *($23)
	if ( ($6 == 0) ){ goto $label$56 }
	$7 = (($1 + [128]) + [28])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$58 }
	
.LOOP $label$59:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$60 }
	CALL $11($3)
	
.LABEL $label$60
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$59 }
	$2 = *($23)
	goto $label$57 
	
.LABEL $label$58
	$2 = $6
	
.LABEL $label$57
	*($7) = $6
	CALL $11($2)
	
.LABEL $label$56
	$6 = *($16)
	if ( ($6 == 0) ){ goto $label$61 }
	$7 = (($1 + [168]) + [28])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$63 }
	
.LOOP $label$64:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$65 }
	CALL $11($3)
	
.LABEL $label$65
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$64 }
	$2 = *($16)
	goto $label$62 
	
.LABEL $label$63
	$2 = $6
	
.LABEL $label$62
	*($7) = $6
	CALL $11($2)
	
.LABEL $label$61
	$6 = *($22)
	if ( ($6 == 0) ){ goto $label$66 }
	$7 = (($1 + [224]) + [28])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$68 }
	
.LOOP $label$69:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$70 }
	CALL $11($3)
	
.LABEL $label$70
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$69 }
	$2 = *($22)
	goto $label$67 
	
.LABEL $label$68
	$2 = $6
	
.LABEL $label$67
	*($7) = $6
	CALL $11($2)
	
.LABEL $label$66
	if ( *($1 + [268]) ){ goto $label$28 }
	$7 = *($1 + [296])
	if ( $7 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	*($1 + [268]) = [0]
	*($1 + [264]) = ($1 + [664])
	$7 = *($1 + [296])
	if ( ($7 == 0) ){ goto $label$25 }
	
.LABEL $label$26
	$0 = ($1 + [300])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$71 }
	
.LOOP $label$72:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$73 }
	$6 = *($2 + [52])
	if ( ($6 == 0) ){ goto $label$74 }
	*(($2 + [56])) = $6
	CALL $11($6)
	
.LABEL $label$74
	$6 = *($2 + [40])
	if ( ($6 == 0) ){ goto $label$75 }
	*(($2 + [44])) = $6
	CALL $11($6)
	
.LABEL $label$75
	CALL $11($2)
	
.LABEL $label$73
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$72 }
	$2 = *(($1 + [296]))
	*($0) = $7
	CALL $11($2)
	$7 = *($1 + [688])
	if ( $7 ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$71
	*($0) = $7
	CALL $11($7)
	$7 = *($1 + [688])
	if ( ($7 == 0) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$7 = *($1 + [688])
	if ( $7 ){ goto $label$23 }
	
.LABEL $label$24
	$6 = *($1 + [360])
	if ( $6 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$0 = ($1 + [692])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$76 }
	
.LOOP $label$77:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$78 }
	$6 = *($2 + [52])
	if ( ($6 == 0) ){ goto $label$79 }
	*(($2 + [56])) = $6
	CALL $11($6)
	
.LABEL $label$79
	$6 = *($2 + [40])
	if ( ($6 == 0) ){ goto $label$80 }
	*(($2 + [44])) = $6
	CALL $11($6)
	
.LABEL $label$80
	CALL $11($2)
	
.LABEL $label$78
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$77 }
	$2 = *(($1 + [688]))
	*($0) = $7
	CALL $11($2)
	$6 = *($1 + [360])
	if ( $6 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$76
	*($0) = $7
	CALL $11($7)
	$6 = *($1 + [360])
	if ( ($6 == 0) ){ goto $label$21 }
	
.LABEL $label$22
	$7 = ($1 + [364])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$81 }
	
.LOOP $label$82:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$83 }
	CALL $11($3)
	
.LABEL $label$83
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$82 }
	$2 = *(($1 + [360]))
	*($7) = $6
	CALL $11($2)
	$6 = *($1 + [424])
	if ( $6 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$81
	*($7) = $6
	CALL $11($6)
	$6 = *($1 + [424])
	if ( ($6 == 0) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$6 = *($1 + [424])
	if ( $6 ){ goto $label$19 }
	
.LABEL $label$20
	$6 = *($1 + [464])
	if ( $6 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$7 = ($1 + [428])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$84 }
	
.LOOP $label$85:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$86 }
	CALL $11($3)
	
.LABEL $label$86
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$85 }
	$2 = *(($1 + [424]))
	*($7) = $6
	CALL $11($2)
	$6 = *($1 + [464])
	if ( $6 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$84
	*($7) = $6
	CALL $11($6)
	$6 = *($1 + [464])
	if ( ($6 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	$7 = ($1 + [468])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$87 }
	
.LOOP $label$88:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$89 }
	CALL $11($3)
	
.LABEL $label$89
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$88 }
	$2 = *(($1 + [464]))
	*($7) = $6
	CALL $11($2)
	$6 = *($1 + [528])
	if ( $6 ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$87
	*($7) = $6
	CALL $11($6)
	$6 = *($1 + [528])
	if ( ($6 == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$6 = *($1 + [528])
	if ( $6 ){ goto $label$15 }
	
.LABEL $label$16
	$global$0 = ($1 + [768])
	return 
	
.LABEL $label$15
	$7 = ($1 + [532])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$91 }
	
.LOOP $label$92:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$93 }
	CALL $11($3)
	
.LABEL $label$93
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$92 }
	$2 = *(($1 + [528]))
	goto $label$90 
	
.LABEL $label$91
	$2 = $6
	
.LABEL $label$90
	*($7) = $6
	CALL $11($2)
	$global$0 = ($1 + [768])
}

int_32 .FUNC $130 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [12]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10607])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)5094022140569452544)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $107(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $131 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [124]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10607])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)7235159537265672192)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $52(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11326])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [11371])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [11421])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [124]))
}

int_32 .FUNC $133 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [52]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10607])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4157495357179166720)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $44(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11326])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [11371])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [11421])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $11($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $11($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
	$9 = *(($1 + [56]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $135 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [124]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10607])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-6224682770514313216)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $45(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $136 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [128])
	$global$0 = $3
	*($3 + [112]) = $1
	CALL require_auth($1)
	if ( CALL $43($0, $2) ){ goto $label$1 }
	CALL eosio_assert([0], [9646])
	
.LABEL $label$1
	$4 = [0]
	*((($3 + [72]) + [32])) = [0]
	*($3 + [80]) = $1
	*($3 + [88]) = (int_64)-1
	*($3 + [96]) = (int_64)0
	*($3 + [108]) = [0]
	*($3 + [72]) = *($0)
	*($3 + [24]) = [9640]
	*($3 + [28]) = CALL $17([9640])
	*($3) = *($3 + [24])
	CALL $51(($3 + [120]), $3)
	*((($3 + [32]) + [32])) = [0]
	*($3 + [40]) = (int_64)6138663577826885632
	*($3 + [32]) = (int_64)6138663577826885632
	*($3 + [48]) = (int_64)-1
	*($3 + [56]) = (int_64)0
	*($3 + [68]) = [0]
	*($3 + [16]) = ($3 + [72])
	CALL $137(($3 + [120]), ($3 + [16]), ($3 + [112]))
	$5 = *($3 + [124])
	if ( ($5 == 0) ){ goto $label$8 }
	$1 = *($3 + [112])
	if ( ((int_64)$1 != (int_64)*($5 + [8])) ){ goto $label$7 }
	$6 = *($3 + [120])
	*($3 + [8]) = $6
	$7 = (($3 + [8]) | [4])
	$8 = [0]
	$4 = (CASTING uint_32)(uint_64 (uint_64)$6 >> (uint_64)(int_64)32)
	if ( $4) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$8
	*($3 + [12]) = [0]
	*($3 + [8]) = ($3 + [16])
	$7 = (($3 + [8]) | [4])
	$1 = *($3 + [112])
	$8 = [0]
	if ( ([0] == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$4 = [0]
	*($3 + [12]) = [0]
	*($3 + [8]) = ($3 + [16])
	$7 = (($3 + [8]) | [4])
	$8 = [0]
	if ( [0] ){ goto $label$5 }
	
.LABEL $label$6
	$5 = [0]
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	if ( ((int_64)*($4 + [8]) != (int_64)$1) ){ goto $label$4 }
	$5 = [0]
	
.LOOP $label$10:
	$5 = ($5 + *($4 + [32]))
	CALL $138(($3 + [8]))
	$1 = *($3 + [112])
	$4 = *($7)
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((int_64)*($4 + [8]) == (int_64)$1) ){ goto $label$10 }
	
.LABEL $label$9
	$7 = *(($3 + [60]))
	$9 = *(($3 + [56]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$12:
	$4 = ($7 + [-24])
	$10 = *($4)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$11 }
	$7 = $4
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$12 }
	goto $label$4 
	
.LABEL $label$11
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$4 }
	if ( ((int_32)*($10 + [88]) == (int_32)($3 + [32])) ){ goto $label$3 }
	CALL eosio_assert([0], [10021])
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($3 + [32]), *(($3 + [40])), (int_64)-2507753063930920960, $1)
	if ( ((int_32)$4 < (int_32)$8) ){ goto $label$2 }
	$10 = CALL $126(($3 + [32]), $4)
	if ( ((int_32)*($10 + [88]) == (int_32)($3 + [32])) ){ goto $label$3 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$3
	$8 = [0]
	if ( ((int_64)*($10 + [8]) != (int_64)*($0)) ){ goto $label$2 }
	$8 = *($10 + [32])
	
.LABEL $label$2
	if ( ((int_32)$5 > (int_32)[0]) ){ goto $label$13 }
	if ( ((int_32)$8 > (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$13
	CALL prints([9746])
	CALL printn(*($3 + [112]))
	CALL prints([9753])
	CALL printn($2)
	CALL prints([9777])
	CALL printi((CASTING int_64)(int_32 ($8 + $5)))
	$10 = *($3 + [56])
	if ( ($10 == 0) ){ goto $label$14 }
	$9 = ($3 + [60])
	$4 = *($9)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$18 }
	$7 = *($5 + [16])
	if ( ($7 == 0) ){ goto $label$19 }
	*(($5 + [20])) = $7
	CALL $11($7)
	
.LABEL $label$19
	CALL $11($5)
	
.LABEL $label$18
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$17 }
	$4 = *(($3 + [56]))
	goto $label$15 
	
.LABEL $label$16
	$4 = $10
	
.LABEL $label$15
	*($9) = $10
	CALL $11($4)
	
.LABEL $label$14
	$7 = *($3 + [96])
	if ( ($7 == 0) ){ goto $label$20 }
	$10 = ($3 + [100])
	$4 = *($10)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$22 }
	
.LOOP $label$23:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$24 }
	CALL $11($5)
	
.LABEL $label$24
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$23 }
	$4 = *(($3 + [96]))
	goto $label$21 
	
.LABEL $label$22
	$4 = $7
	
.LABEL $label$21
	*($10) = $7
	CALL $11($4)
	
.LABEL $label$20
	$global$0 = ($3 + [128])
}

void .FUNC $137 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)5559250338634006528, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10021])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $207($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)5559250338634006528, $6))
	if ( ((int_32)*($4 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$2
	*(($4 + [56])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $213 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = *($5 + [4])
	$7 = *($6 + [112])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	$7 = *($5)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)7615821578177085440, $4, *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($7)
	
.LABEL $label$1
	$5 = *($0)
	$6 = *($5 + [4])
	$7 = *(($6 + [116]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$4 }
	$7 = *($5)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)7615821578177085441, $4, *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($7)
	
.LABEL $label$3
	$7 = *($0)
	$5 = *($7 + [4])
	$0 = *(($5 + [120]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$6 }
	$0 = *($7)
	*(($4 + [24])) = (int_64)0
	*(($4 + [16])) = (int_64)0
	*($4 + [8]) = (int_64)0
	*($4) = (int_64)0
	$0 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)7615821578177085442, $4, [2], *($5))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx256_remove($0)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

int_32 .FUNC $208 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [52]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10607])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)5559250338634006528)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $207(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $209 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10344])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $5, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10344])
	$4 = *($1)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [8]), [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $202 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	*($5 + [24]) = (int_64))((int_64)0 - *($1 + [16]))
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [11019])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [32]) + (int_64)*($3))
	*($1 + [32]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	$3 = [16]
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [11062])
	$3 = [16]
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [11081])
	$3 = ($1 + $3)
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = ($1 + $3)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10285])
	
.LABEL $label$4
	$8 = $4
	$4 = ($8 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $8
	*($5 + [32]) = ($5 + [8])
	*($5 + [48]) = $3
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [52]) = ($1 + [24])
	*($5 + [56]) = ($1 + [32])
	CALL $59(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [52]), $2, $4, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [40]) = (int_64))((int_64)0 - *($3))
	if ( (CALL $20(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$10 }
	$4 = ($1 + [56])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$11 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($5 + [32]), $6)
	*($4) = $1
	
.LABEL $label$11
	CALL db_idx64_update($1, $2, ($5 + [40]))
	
.LABEL $label$10
	$global$0 = ($5 + [64])
}

int_32 .FUNC $203 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	*($1 + [8]) = (int_64)0
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$3 = *($2 + [56])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$3 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-4157495357179166720, $1, *($2))
	*(*(($0 + [4])) + [56]) = $3
	
.LABEL $label$3
	$4 = CALL db_idx64_previous($3, ($1 + [8]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11153])
	goto $label$1 
	
.LABEL $label$2
	$2 = *(*($0))
	$2 = CALL db_idx64_end(*($2), *($2 + [8]), (int_64)-4157495357179166720)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$4 }
	CALL eosio_assert([0], [11099])
	
.LABEL $label$4
	$4 = CALL db_idx64_previous($2, ($1 + [8]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11099])
	
.LABEL $label$1
	$5 = *($1 + [8])
	$3 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$8:
	$2 = ($3 + [-24])
	$8 = *($2)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$7 }
	$3 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	if ( ((int_32)*($8 + [48]) == (int_32)$6) ){ goto $label$5 }
	CALL eosio_assert([0], [10021])
	goto $label$5 
	
.LABEL $label$6
	$8 = CALL $44($6, CALL $fimport$6(*($6), *($6 + [8]), (int_64)-4157495357179166720, $5))
	if ( ((int_32)*($8 + [48]) == (int_32)$6) ){ goto $label$5 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$5
	*(($0 + [4])) = $8
	*(($8 + [56])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $200 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([64])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = $1
	CALL $205(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [52])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $206(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $201 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	*($5 + [24]) = (int_64))((int_64)0 - *($1 + [16]))
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [11019])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [32]) + (int_64)*($3))
	*($1 + [32]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	$3 = [16]
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [11062])
	$3 = [16]
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [11081])
	$3 = ($1 + $3)
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = ($1 + $3)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10285])
	
.LABEL $label$4
	$8 = $4
	$4 = ($8 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $8
	*($5 + [32]) = ($5 + [8])
	*($5 + [48]) = $3
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [52]) = ($1 + [24])
	*($5 + [56]) = ($1 + [32])
	CALL $59(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [52]), $2, $4, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [40]) = (int_64))((int_64)0 - *($3))
	if ( (CALL $20(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$10 }
	$4 = ($1 + [56])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$11 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($5 + [32]), $6)
	*($4) = $1
	
.LABEL $label$11
	CALL db_idx64_update($1, $2, ($5 + [40]))
	
.LABEL $label$10
	$global$0 = ($5 + [64])
}

void .FUNC $206 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $18($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $207 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([64])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	CALL $210(($3 + [40]), ($3 + [32]))
	*($5 + [56]) = [-1]
	*($5 + [52]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $206(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $204 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$6 = *($1 + [16])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$3 }
	CALL eosio_assert([0], [11019])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [11062])
	$7 = *(($1 + [24]))
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [11081])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)*(($1 + [16]))) ){ goto $label$6 }
	CALL eosio_assert([0], [10285])
	
.LABEL $label$6
	$8 = ($1 + [40])
	$10 = *($1 + [40])
	$9 = *($1 + [44])
	$11 = ($9 - $10)
	$7 = (CASTING uint_64)(uint_32 int_32($11 >> [3]))
	$3 = [35]
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$7 }
	$12 = ($1 + [52])
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$8 }
	$3 = (($11 & [-8]) + $3)
	
.LABEL $label$8
	$10 = *($12)
	$9 = *($1 + [56])
	$11 = ($9 - $10)
	$7 = (CASTING uint_64)(uint_32 int_32($11 >> [3]))
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$10 }
	$3 = (($11 & [-8]) + $3)
	
.LABEL $label$10
	$9 = ($3 + [44])
	if ( ($9 <= [513]) ){ goto $label$12 }
	$3 = CALL $2($9)
	goto $label$11 
	
.LABEL $label$12
	$3 = ($4 - (($9 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$11
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $9)
	*($5 + [24]) = ($5 + [8])
	*($5 + [56]) = $8
	*($5 + [60]) = $12
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [1])
	*($5 + [40]) = ($1 + [2])
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	*($5 + [52]) = ($1 + [24])
	*($5 + [64]) = ($1 + [64])
	*($5 + [68]) = ($1 + [72])
	*($5 + [72]) = ($1 + [80])
	*($5 + [76]) = ($1 + [88])
	*($5 + [80]) = ($1 + [96])
	*($5 + [84]) = ($1 + [104])
	*($5 + [88]) = ($1 + [112])
	CALL $60(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [124]), $2, $3, $9)
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $4($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [96])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [96])
}

void .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)5559250338634006528, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $207($6, $8)
	*($3 + [28]) = [0]
	*($3 + [24]) = $6
	$7 = *(*(CALL $208(($3 + [24])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10967])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	*($1 + [16]) = *(*($5 + [8]))
	*($1 + [24]) = CALL $19()
	$5 = *($5 + [12])
	*($1 + [32]) = *($5)
	*(($1 + [40])) = *(($5 + [8]))
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = $6
	*($3 + [16]) = $3
	$6 = ($1 + [8])
	*($3 + [28]) = $6
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	CALL $209(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)5559250338634006528, *(*($0 + [8])), $7, $5, [48])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = *(($4 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *($1)
	*($3 + [24]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)5559250338634006528, $9, $10, ($3 + [24]))
	$global$0 = ($3 + [48])
}

void .FUNC $181 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-4157495357179166720, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10021])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $44($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)-4157495357179166720, $6))
	if ( ((int_32)*($4 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$2
	*(($4 + [56])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $129 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [304])
	$global$0 = $2
	CALL require_auth(*($0))
	*((($2 + [256]) + [32])) = [0]
	*($2 + [272]) = (int_64)-1
	*($2 + [280]) = (int_64)0
	$3 = *($0)
	*($2 + [256]) = $3
	*($2 + [264]) = $3
	*((($2 + [216]) + [32])) = [0]
	*($2 + [224]) = $3
	*($2 + [216]) = $3
	*($2 + [232]) = (int_64)-1
	*($2 + [240]) = (int_64)0
	*($2 + [252]) = [0]
	*((($2 + [176]) + [32])) = [0]
	*($2 + [184]) = $1
	*($2 + [176]) = $3
	*($2 + [192]) = (int_64)-1
	*($2 + [200]) = (int_64)0
	*($2 + [212]) = [0]
	*((($2 + [136]) + [32])) = [0]
	*($2 + [144]) = $1
	*($2 + [136]) = $3
	*($2 + [152]) = (int_64)-1
	*($2 + [160]) = (int_64)0
	*($2 + [172]) = [0]
	*((($2 + [96]) + [32])) = [0]
	*($2 + [104]) = $3
	*($2 + [96]) = $3
	*($2 + [112]) = (int_64)-1
	*($2 + [120]) = (int_64)0
	*((($2 + [56]) + [32])) = [0]
	*($2 + [64]) = $3
	*($2 + [56]) = $3
	*($2 + [72]) = (int_64)-1
	*($2 + [80]) = (int_64)0
	*((($2 + [16]) + [32])) = [0]
	*(($2 + [54])) = [0]
	*($2 + [24]) = $3
	*($2 + [16]) = $3
	*($2 + [32]) = (int_64)-1
	*($2 + [40]) = (int_64)0
	*($2 + [52]) = [0]
	$0 = CALL db_lowerbound_i64($3, $3, (int_64)5094022140569452544, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$4 = ($2 + [64])
	
.LOOP $label$2:
	CALL $107(($2 + [56]), $0)
	*($2 + [12]) = [0]
	*($2 + [8]) = ($2 + [56])
	CALL $130(($2 + [8]))
	$3 = *($2 + [8])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$3 }
	CALL eosio_assert([0], [11292])
	CALL eosio_assert([0], [10104])
	
.LABEL $label$3
	$5 = CALL db_next_i64(*($0 + [12]), ($2 + [296]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	CALL $107((CASTING uint_32)(uint_64 $3), $5)
	
.LABEL $label$4
	CALL $120(($2 + [56]), $0)
	$0 = CALL db_lowerbound_i64(*($2 + [56]), *($4), (int_64)5094022140569452544, (int_64)0)
	if ( ((int_32)$0 >= (int_32)[0]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = (($2 + [256]) + [8])
	$0 = CALL db_lowerbound_i64(*($2 + [256]), *($4), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	
.LOOP $label$6:
	CALL $52(($2 + [256]), $0)
	*($2 + [12]) = [0]
	*($2 + [8]) = ($2 + [256])
	CALL $131(($2 + [8]))
	$3 = *($2 + [8])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$7 }
	CALL eosio_assert([0], [11292])
	CALL eosio_assert([0], [10104])
	
.LABEL $label$7
	$5 = CALL db_next_i64(*($0 + [124]), ($2 + [296]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	CALL $52((CASTING uint_32)(uint_64 $3), $5)
	
.LABEL $label$8
	CALL $132(($2 + [256]), $0)
	$0 = CALL db_lowerbound_i64(*($2 + [256]), *($4), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$0 >= (int_32)[0]) ){ goto $label$6 }
	
.LABEL $label$5
	$0 = CALL db_lowerbound_i64(*($2 + [216]), *((($2 + [216]) + [8])), (int_64)-4157495357179166720, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$9 }
	$4 = ($2 + [224])
	
.LOOP $label$10:
	CALL $44(($2 + [216]), $0)
	*($2 + [12]) = [0]
	*($2 + [8]) = ($2 + [216])
	CALL $133(($2 + [8]))
	$3 = *($2 + [8])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$11 }
	CALL eosio_assert([0], [11292])
	CALL eosio_assert([0], [10104])
	
.LABEL $label$11
	$5 = CALL db_next_i64(*($0 + [52]), ($2 + [296]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$12 }
	CALL $44((CASTING uint_32)(uint_64 $3), $5)
	
.LABEL $label$12
	CALL $134(($2 + [216]), $0)
	$0 = CALL db_lowerbound_i64(*($2 + [216]), *($4), (int_64)-4157495357179166720, (int_64)0)
	if ( ((int_32)$0 >= (int_32)[0]) ){ goto $label$10 }
	
.LABEL $label$9
	$4 = (($2 + [176]) + [8])
	$0 = CALL db_lowerbound_i64(*($2 + [176]), *($4), (int_64)-4157495357179166720, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$13 }
	
.LOOP $label$14:
	CALL $44(($2 + [176]), $0)
	*($2 + [12]) = [0]
	*($2 + [8]) = ($2 + [176])
	CALL $133(($2 + [8]))
	$3 = *($2 + [8])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$15 }
	CALL eosio_assert([0], [11292])
	CALL eosio_assert([0], [10104])
	
.LABEL $label$15
	$5 = CALL db_next_i64(*($0 + [52]), ($2 + [296]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$16 }
	CALL $44((CASTING uint_32)(uint_64 $3), $5)
	
.LABEL $label$16
	CALL $134(($2 + [176]), $0)
	$0 = CALL db_lowerbound_i64(*($2 + [176]), *($4), (int_64)-4157495357179166720, (int_64)0)
	if ( ((int_32)$0 >= (int_32)[0]) ){ goto $label$14 }
	
.LABEL $label$13
	$0 = CALL db_lowerbound_i64(*($2 + [136]), *((($2 + [136]) + [8])), (int_64)5310424360057438208, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$17 }
	$4 = ($2 + [144])
	
.LOOP $label$18:
	CALL $103(($2 + [136]), $0)
	*($2 + [12]) = [0]
	*($2 + [8]) = ($2 + [136])
	CALL $104(($2 + [8]))
	$3 = *($2 + [8])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$19 }
	CALL eosio_assert([0], [11292])
	CALL eosio_assert([0], [10104])
	
.LABEL $label$19
	$5 = CALL db_next_i64(*($0 + [44]), ($2 + [296]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$20 }
	CALL $103((CASTING uint_32)(uint_64 $3), $5)
	
.LABEL $label$20
	CALL $105(($2 + [136]), $0)
	$0 = CALL db_lowerbound_i64(*($2 + [136]), *($4), (int_64)5310424360057438208, (int_64)0)
	if ( ((int_32)$0 >= (int_32)[0]) ){ goto $label$18 }
	
.LABEL $label$17
	$4 = (($2 + [96]) + [8])
	$0 = CALL db_lowerbound_i64(*($2 + [96]), *($4), (int_64)-6224682770514313216, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$21 }
	
.LOOP $label$22:
	CALL $45(($2 + [96]), $0)
	*($2 + [12]) = [0]
	*($2 + [8]) = ($2 + [96])
	CALL $135(($2 + [8]))
	$3 = *($2 + [8])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$23 }
	CALL eosio_assert([0], [11292])
	CALL eosio_assert([0], [10104])
	
.LABEL $label$23
	$5 = CALL db_next_i64(*($0 + [124]), ($2 + [296]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$24 }
	CALL $45((CASTING uint_32)(uint_64 $3), $5)
	
.LABEL $label$24
	CALL $102(($2 + [96]), $0)
	$0 = CALL db_lowerbound_i64(*($2 + [96]), *($4), (int_64)-6224682770514313216, (int_64)0)
	if ( ((int_32)$0 >= (int_32)[0]) ){ goto $label$22 }
	
.LABEL $label$21
	$0 = CALL db_lowerbound_i64(*($2 + [16]), *((($2 + [16]) + [8])), (int_64)7615821578177085440, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$25 }
	$4 = ($2 + [24])
	
.LOOP $label$26:
	CALL $79(($2 + [16]), $0)
	*($2 + [12]) = [0]
	*($2 + [8]) = ($2 + [16])
	CALL $78(($2 + [8]))
	$3 = *($2 + [8])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$27 }
	CALL eosio_assert([0], [11292])
	CALL eosio_assert([0], [10104])
	
.LABEL $label$27
	$5 = CALL db_next_i64(*($0 + [108]), ($2 + [296]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$28 }
	CALL $79((CASTING uint_32)(uint_64 $3), $5)
	
.LABEL $label$28
	CALL $75(($2 + [16]), $0)
	$0 = CALL db_lowerbound_i64(*($2 + [16]), *($4), (int_64)7615821578177085440, (int_64)0)
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$26 }
	
.LABEL $label$25
	$4 = *($2 + [40])
	if ( ($4 == 0) ){ goto $label$29 }
	$6 = ($2 + [44])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$31 }
	
.LOOP $label$32:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$33 }
	if ( ((*($5 + [80]) & [1]) == 0) ){ goto $label$34 }
	CALL $11(*(($5 + [88])))
	
.LABEL $label$34
	CALL $11($5)
	
.LABEL $label$33
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$32 }
	$0 = *(($2 + [40]))
	goto $label$30 
	
.LABEL $label$31
	$0 = $4
	
.LABEL $label$30
	*($6) = $4
	CALL $11($0)
	
.LABEL $label$29
	$4 = *($2 + [80])
	if ( ($4 == 0) ){ goto $label$35 }
	$6 = ($2 + [84])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$37 }
	
.LOOP $label$38:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$39 }
	CALL $11($5)
	
.LABEL $label$39
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$38 }
	$0 = *(($2 + [80]))
	goto $label$36 
	
.LABEL $label$37
	$0 = $4
	
.LABEL $label$36
	*($6) = $4
	CALL $11($0)
	
.LABEL $label$35
	$6 = *($2 + [120])
	if ( ($6 == 0) ){ goto $label$40 }
	$7 = ($2 + [124])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$42 }
	
.LOOP $label$43:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$44 }
	$4 = *($0 + [52])
	if ( ($4 == 0) ){ goto $label$45 }
	*(($0 + [56])) = $4
	CALL $11($4)
	
.LABEL $label$45
	$4 = *($0 + [40])
	if ( ($4 == 0) ){ goto $label$46 }
	*(($0 + [44])) = $4
	CALL $11($4)
	
.LABEL $label$46
	CALL $11($0)
	
.LABEL $label$44
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$43 }
	$0 = *(($2 + [120]))
	goto $label$41 
	
.LABEL $label$42
	$0 = $6
	
.LABEL $label$41
	*($7) = $6
	CALL $11($0)
	
.LABEL $label$40
	$4 = *($2 + [160])
	if ( ($4 == 0) ){ goto $label$47 }
	$6 = ($2 + [164])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$49 }
	
.LOOP $label$50:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$51 }
	CALL $11($5)
	
.LABEL $label$51
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$50 }
	$0 = *(($2 + [160]))
	goto $label$48 
	
.LABEL $label$49
	$0 = $4
	
.LABEL $label$48
	*($6) = $4
	CALL $11($0)
	
.LABEL $label$47
	$4 = *($2 + [200])
	if ( ($4 == 0) ){ goto $label$52 }
	$6 = ($2 + [204])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$54 }
	
.LOOP $label$55:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$56 }
	CALL $11($5)
	
.LABEL $label$56
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$55 }
	$0 = *(($2 + [200]))
	goto $label$53 
	
.LABEL $label$54
	$0 = $4
	
.LABEL $label$53
	*($6) = $4
	CALL $11($0)
	
.LABEL $label$52
	$4 = *($2 + [240])
	if ( ($4 == 0) ){ goto $label$57 }
	$6 = ($2 + [244])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$59 }
	
.LOOP $label$60:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$61 }
	CALL $11($5)
	
.LABEL $label$61
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$60 }
	$0 = *(($2 + [240]))
	goto $label$58 
	
.LABEL $label$59
	$0 = $4
	
.LABEL $label$58
	*($6) = $4
	CALL $11($0)
	
.LABEL $label$57
	$4 = *($2 + [280])
	if ( ($4 == 0) ){ goto $label$62 }
	$6 = ($2 + [284])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$64 }
	
.LOOP $label$65:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$66 }
	CALL $11($5)
	
.LABEL $label$66
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$65 }
	$0 = *(($2 + [280]))
	goto $label$63 
	
.LABEL $label$64
	$0 = $4
	
.LABEL $label$63
	*($6) = $4
	CALL $11($0)
	
.LABEL $label$62
	$global$0 = ($2 + [304])
}

void .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10344])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [12])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10344])
	$0 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $8 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $6())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $7($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $9 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $2($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $2($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $9([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	*($3 + [44]) = ($5 + [32])
	CALL $196(($3 + [32]), ($3 + [24]))
	*($5 + [48]) = [-1]
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $197(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $122 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$global$0 = $2
	*($2 + [56]) = $1
	*(($2 + [48])) = [0]
	*($2 + [32]) = (int_64)-1
	*($2 + [40]) = (int_64)0
	*($2 + [52]) = [0]
	$3 = *($0)
	*($2 + [16]) = $3
	*($2 + [24]) = $3
	$4 = CALL db_find_i64($3, $3, (int_64)-3020371635640205312, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	if ( ((int_32)*(CALL $123(($2 + [16]), $4) + [40]) == (int_32)($2 + [16])) ){ goto $label$4 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$4
	$5 = *($2 + [40])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$3 = *($0)
	*($2 + [8]) = ($2 + [56])
	CALL $124($2, ($2 + [16]), $3, ($2 + [8]))
	$5 = *($2 + [40])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($2 + [44])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $11($4)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($2 + [40]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $11($0)
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$1
	$global$0 = ($2 + [64])
}

int_32 .FUNC $121 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	*($2 + [44]) = [0]
	$4 = *($0)
	*($2 + [8]) = $4
	*($2 + [16]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)-3020371635640205312, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = [1]
	if ( ((int_32)*(CALL $123(($2 + [8]), $0) + [40]) == (int_32)($2 + [8])) ){ goto $label$1 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$1
	$5 = *($2 + [32])
	if ( ($5 == 0) ){ goto $label$2 }
	$6 = ($2 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $11($7)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($2 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $5
	
.LABEL $label$3
	*($6) = $5
	CALL $11($0)
	
.LABEL $label$2
	$global$0 = ($2 + [48])
	return $3
}

void .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11326])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [11371])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [11421])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [12]))
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8544])
	return $3
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([104])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = [0]
	*($5 + [60 align=4]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = $0
	CALL $217(($3 + [32]), $5)
	*($5 + [96]) = [-1]
	*($5 + [92]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $218(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$4 = *($1 + [16])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [20])) = $4
	CALL $11($4)
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $125 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = ($global$0 - [112])
	$global$0 = $1
	CALL require_auth(*($0))
	*((($1 + [64]) + [32])) = [0]
	*($1 + [80]) = (int_64)-1
	*($1 + [88]) = (int_64)0
	*($1 + [100]) = [0]
	$2 = *($0)
	*($1 + [64]) = $2
	*($1 + [72]) = $2
	*($1 + [16]) = [9640]
	*($1 + [20]) = CALL $17([9640])
	*($1) = *($1 + [16])
	CALL $51(($1 + [104]), $1)
	*((($1 + [24]) + [32])) = [0]
	*($1 + [32]) = (int_64)6138663577826885632
	*($1 + [24]) = (int_64)6138663577826885632
	*($1 + [40]) = (int_64)-1
	*($1 + [48]) = (int_64)0
	*($1 + [60]) = [0]
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $123(($1 + [64]), $3)
	$5 = ($1 + [52])
	$6 = ($1 + [48])
	$7 = ($1 + [32])
	
.LOOP $label$2:
	$2 = *($4)
	$9 = *($5)
	$8 = *($6)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$7 }
	
.LOOP $label$9:
	$3 = ($9 + [-24])
	$10 = *($3)
	if ( ((int_64)*($10) == (int_64)$2) ){ goto $label$8 }
	$9 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$7 }
	if ( ((int_32)*($10 + [88]) != (int_32)($1 + [24])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$3 = CALL db_find_i64(*($1 + [24]), *($7), (int_64)-2507753063930920960, $2)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$4 }
	$10 = CALL $126(($1 + [24]), $3)
	if ( ((int_32)*($10 + [88]) == (int_32)($1 + [24])) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [10021])
	
.LABEL $label$5
	$2 = *($4 + [24])
	*($1 + [104]) = $2
	if ( ((int_64)*($10 + [8]) != (int_64)*($0)) ){ goto $label$3 }
	*($1 + [104]) = ((int_64)*($10 + [32]) + (int_64)$2)
	goto $label$3 
	
.LABEL $label$4
	*($1 + [104]) = *($4 + [24])
	
.LABEL $label$3
	$2 = *($0)
	*($1 + [8]) = ($1 + [104])
	CALL $127(($1 + [64]), $4, $2, ($1 + [8]))
	$3 = CALL db_next_i64(*($4 + [44]), ($1 + [104]))
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$4 = CALL $123(($1 + [64]), $3)
	goto $label$2 
	
.LABEL $label$1
	$8 = *($1 + [48])
	if ( ($8 == 0) ){ goto $label$10 }
	$4 = ($1 + [52])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$12 }
	
.LOOP $label$13:
	$3 = ($3 + [-24])
	$9 = *($3)
	*($3) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	$10 = *($9 + [16])
	if ( ($10 == 0) ){ goto $label$15 }
	*(($9 + [20])) = $10
	CALL $11($10)
	
.LABEL $label$15
	CALL $11($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$13 }
	$3 = *(($1 + [48]))
	goto $label$11 
	
.LABEL $label$12
	$3 = $8
	
.LABEL $label$11
	*($4) = $8
	CALL $11($3)
	
.LABEL $label$10
	$10 = *($1 + [88])
	if ( ($10 == 0) ){ goto $label$16 }
	$8 = ($1 + [92])
	$3 = *($8)
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$18 }
	
.LOOP $label$19:
	$3 = ($3 + [-24])
	$9 = *($3)
	*($3) = [0]
	if ( ($9 == 0) ){ goto $label$20 }
	CALL $11($9)
	
.LABEL $label$20
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$19 }
	$3 = *(($1 + [88]))
	goto $label$17 
	
.LABEL $label$18
	$3 = $10
	
.LABEL $label$17
	*($8) = $10
	CALL $11($3)
	
.LABEL $label$16
	$global$0 = ($1 + [112])
}

void .FUNC $124 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [80])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$1
	*(($5 = CALL $9([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $1
	*($5) = *(*($3))
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = CALL $19()
	*($4 + [48]) = ($4 + [40])
	*($4 + [44]) = $4
	*($4 + [40]) = $4
	*($4 + [56]) = ($4 + [40])
	*($4 + [68]) = ($5 + [8])
	*($4 + [64]) = $5
	$3 = ($5 + [24])
	*($4 + [72]) = $3
	*($4 + [76]) = ($5 + [32])
	CALL $128(($4 + [64]), ($4 + [56]))
	$6 = *($5)
	*($5 + [44]) = CALL db_store_i64(*($1 + [8]), (int_64)-3020371635640205312, $2, $6, $4, [40])
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$6 = *(($1 + [8]))
	$7 = *($5)
	*($4 + [64]) = *($3)
	*($5 + [48]) = CALL db_idx64_store($6, (int_64)-3020371635640205312, $2, $7, ($4 + [64]))
	*($4 + [64]) = $5
	$2 = *($5)
	*($4) = $2
	$8 = *(($5 + [44]))
	*($4 + [40]) = $8
	$9 = ($1 + [28])
	$3 = *($9)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $2
	*($3 + [16]) = $8
	*($4 + [64]) = [0]
	*($3) = $5
	*($9) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $197(($1 + [24]), ($4 + [64]), $4, ($4 + [40]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [64])
	*($4 + [64]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $11($5)
	
.LABEL $label$5
	$global$0 = ($4 + [80])
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	return CALL $13($0, $1)
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $4($0)
	
.LABEL $label$1
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	CALL $15($0, $1)
}

int_32 .FUNC $17 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $10 (int_32 $0)
{
	return CALL $9($0)
}

void .FUNC $11 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $4($0)
	
.LABEL $label$1
}

void .FUNC $12 (int_32 $0)
{
	CALL $11($0)
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $8(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $8(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $18 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_64 .FUNC $19 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8224]) = $0
	return $0
}

void .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $190(*($1), ($4 + [16]))
}

void .FUNC $187 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4)
	*($3 + [8]) = *(*($4 + [4]) + [16])
	if ( (CALL $20(*($4 + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$1 }
	$6 = *(*($4 + [12]) + [48])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)5310424360057438208, $3, *(*($4 + [16])))
	*(*(($4 + [12])) + [48]) = $6
	
.LABEL $label$2
	CALL db_idx64_update($6, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$1
	$4 = *($0)
	$6 = *($4)
	*($3 + [8]) = ((int_64)*(*($4 + [4]) + [32]) / (int_64)1000000)
	if ( (CALL $20((*($4 + [8]) + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($4 + [12]) + [52]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)5310424360057438209, $3, *(*($4 + [16])))
	*((*(($4 + [12])) + [52])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $218 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $18($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [16])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [20])) = $2
	CALL $11($2)
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $11($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $186 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4)
	*($3 + [8]) = *(*($4 + [4]) + [16])
	if ( (CALL $20(*($4 + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$1 }
	$6 = *(*($4 + [12]) + [48])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)5310424360057438208, $3, *(*($4 + [16])))
	*(*(($4 + [12])) + [48]) = $6
	
.LABEL $label$2
	CALL db_idx64_update($6, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$1
	$4 = *($0)
	$6 = *($4)
	*($3 + [8]) = ((int_64)*(*($4 + [4]) + [32]) / (int_64)1000000)
	if ( (CALL $20((*($4 + [8]) + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($4 + [12]) + [52]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)5310424360057438209, $3, *(*($4 + [16])))
	*((*(($4 + [12])) + [52])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $180 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	*($1) = *(*($0))
	$2 = CALL $19()
	*($1 + [16]) = (int_64)1
	*($1 + [8]) = $2
	$0 = CALL $17([8704])
	if ( ($0 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9854])
	goto $label$3 
	
.LABEL $label$4
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$3 = *(($0 + [8703]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9899])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$5 }
	$4 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$4 = (int_64)4
	
.LABEL $label$1
	$2 = (uint_64)$4 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$5 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$2 = $5
	$3 = $0
	$0 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$2 = $5
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$0 < (int_32)[6])
	$6 = ($0 + [1])
	$0 = $6
	if ( $3 ){ goto $label$11 }
	$0 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [10001])
	
.LABEL $label$7
	*($1 + [32]) = (int_64)0
	*(($1 + [40])) = $4
	*($1 + [24]) = *([0] + [8536])
}

void .FUNC $116 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$6 = *($1 + [16])
	$3 = *($3)
	$7 = ($1 + [52])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	CALL $113($7, *($3), *($3 + [4]))
	if ( ((int_64)$6 == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10285])
	
.LABEL $label$3
	$8 = ($1 + [40])
	$9 = *($1 + [40])
	$7 = *($1 + [44])
	$10 = ($7 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	$3 = [35]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	$12 = ($1 + [52])
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$5 }
	$3 = (($10 & [-8]) + $3)
	
.LABEL $label$5
	$9 = *($12)
	$7 = *($1 + [56])
	$10 = ($7 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$7 }
	$3 = (($10 & [-8]) + $3)
	
.LABEL $label$7
	$7 = ($3 + [44])
	if ( ($7 <= [513]) ){ goto $label$9 }
	$3 = CALL $2($7)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$8
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $7)
	*($5 + [24]) = ($5 + [8])
	*($5 + [56]) = $8
	*($5 + [60]) = $12
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [1])
	*($5 + [40]) = ($1 + [2])
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	*($5 + [52]) = ($1 + [24])
	*($5 + [64]) = ($1 + [64])
	*($5 + [68]) = ($1 + [72])
	*($5 + [72]) = ($1 + [80])
	*($5 + [76]) = ($1 + [88])
	*($5 + [80]) = ($1 + [96])
	*($5 + [84]) = ($1 + [104])
	*($5 + [88]) = ($1 + [112])
	CALL $60(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [124]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $4($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [96])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [96])
}

void .FUNC $117 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [80])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$3 = *($0)
	*($2 + [8]) = $3
	*($2 + [16]) = $3
	if ( ((int_64)$3 == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [10350])
	
.LABEL $label$1
	*(($0 = CALL $9([24])) + [8]) = ($2 + [8])
	*($0) = $1
	CALL memcpy(($2 + [64]), $0, [8])
	$1 = *($0)
	$4 = CALL db_store_i64(*((($2 + [8]) + [8])), (int_64)5094022140569452544, $3, $1, ($2 + [64]), [8])
	*($0 + [12]) = $4
	$5 = ($2 + [24])
	if ( (uint_64)($1 <= *($5)) ){ goto $label$2 }
	*($5) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($2 + [56]) = $0
	$3 = *($0)
	*($2 + [64]) = $3
	*($2 + [52]) = $4
	$6 = ($2 + [36])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($2 + [40]))) ){ goto $label$5 }
	*($5 + [8]) = $3
	*($5 + [16]) = $4
	*($2 + [56]) = [0]
	*($5) = $0
	*($6) = ($5 + [24])
	$0 = *($2 + [56])
	*($2 + [56]) = [0]
	if ( $0 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $118(($2 + [32]), ($2 + [56]), ($2 + [64]), ($2 + [52]))
	$0 = *($2 + [56])
	*($2 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $11($0)
	
.LABEL $label$3
	$4 = *($2 + [32])
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = ($2 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	CALL $11($5)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($2 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $4
	
.LABEL $label$7
	*($6) = $4
	CALL $11($0)
	
.LABEL $label$6
	$global$0 = ($2 + [80])
}

void .FUNC $114 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [112])
	$global$0 = $3
	CALL require_auth($1)
	$4 = [0]
	*(($3 + [104])) = [0]
	*($3 + [88]) = (int_64)-1
	*($3 + [96]) = (int_64)0
	$5 = *($0)
	*($3 + [72]) = $5
	*($3 + [80]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)-6224682770514313216, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $45(($3 + [72]), $6)
	if ( ((int_32)*($4 + [120]) == (int_32)($3 + [72])) ){ goto $label$1 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$1
	if ( (*($4) == 0) ){ goto $label$2 }
	CALL eosio_assert([0], [9223])
	
.LABEL $label$2
	if ( $4 ){ goto $label$3 }
	CALL eosio_assert([0], [9247])
	
.LABEL $label$3
	$6 = [0]
	*(($3 + [64])) = [0]
	*($3 + [48]) = (int_64)-1
	*($3 + [56]) = (int_64)0
	$5 = *($0)
	*($3 + [32]) = $5
	*($3 + [40]) = $5
	$7 = CALL db_find_i64($5, $5, (int_64)5094022140569452544, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $107(($3 + [32]), $7)
	if ( ((int_32)*($6 + [8]) == (int_32)($3 + [32])) ){ goto $label$4 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$4
	CALL prints([9475])
	CALL printn(*($6))
	CALL prints([8797])
	if ( ($6 == 0) ){ goto $label$18 }
	CALL prints([9265])
	*($3 + [24]) = [0]
	*($3 + [16]) = (int_64)0
	$6 = [0]
	$7 = (*(($4 + [44])) - *($4 + [40]))
	if ( ($7 == 0) ){ goto $label$15 }
	$8 = int_32($7 >> [3])
	if ( ((uint_32)$8 >= (uint_32)[536870912]) ){ goto $label$6 }
	$6 = CALL $9($7)
	*(($3 + [24])) = ($6 + ($8 << [3]))
	*($3 + [16]) = $6
	*($3 + [20]) = $6
	$8 = *(($4 + [40]))
	$7 = (*(($4 + [44])) - $8)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$15 }
	CALL memcpy($6, $8, $7)
	$7 = (*($3 + [20]) + $7)
	*($3 + [20]) = $7
	$6 = *($3 + [16])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$19:
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$17 }
	$6 = ($6 + [8])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$19 }
	goto $label$16 
	
.LABEL $label$18
	CALL prints([9342])
	*($3 + [24]) = [0]
	*($3 + [16]) = (int_64)0
	$6 = [0]
	$7 = (*(($4 + [56])) - *($4 + [52]))
	if ( ($7 == 0) ){ goto $label$11 }
	$8 = int_32($7 >> [3])
	if ( ((uint_32)$8 >= (uint_32)[536870912]) ){ goto $label$5 }
	$6 = CALL $9($7)
	*(($3 + [24])) = ($6 + ($8 << [3]))
	*($3 + [16]) = $6
	*($3 + [20]) = $6
	$8 = *(($4 + [52]))
	$7 = (*(($4 + [56])) - $8)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$11 }
	CALL memcpy($6, $8, $7)
	$7 = (*($3 + [20]) + $7)
	*($3 + [20]) = $7
	$6 = *($3 + [16])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$12 }
	
.LOOP $label$20:
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$13 }
	$6 = ($6 + [8])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$20 }
	goto $label$12 
	
.LABEL $label$17
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$16
	$6 = $7
	
.LABEL $label$15
	CALL eosio_assert([0], [9485])
	$7 = *($3 + [20])
	
.LABEL $label$14
	$9 = ($6 + [8])
	$7 = ($7 - $9)
	$8 = int_32($7 >> [3])
	if ( ($7 == 0) ){ goto $label$21 }
	CALL memmove($6, $9, $7)
	
.LABEL $label$21
	*($3 + [20]) = ($6 + ($8 << [3]))
	$1 = *($0)
	*($3 + [8]) = ($3 + [16])
	CALL $115(($3 + [72]), $4, $1, ($3 + [8]))
	CALL prints([9520])
	$6 = *($3 + [16])
	if ( ($6 == 0) ){ goto $label$9 }
	*($3 + [20]) = $6
	CALL $11($6)
	$7 = *($3 + [56])
	if ( $7 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$10 }
	
.LABEL $label$12
	$6 = $7
	
.LABEL $label$11
	CALL eosio_assert([0], [9545])
	$7 = *($3 + [20])
	
.LABEL $label$10
	$9 = ($6 + [8])
	$7 = ($7 - $9)
	$8 = int_32($7 >> [3])
	if ( ($7 == 0) ){ goto $label$22 }
	CALL memmove($6, $9, $7)
	
.LABEL $label$22
	*($3 + [20]) = ($6 + ($8 << [3]))
	$1 = *($0)
	*($3 + [8]) = ($3 + [16])
	CALL $116(($3 + [72]), $4, $1, ($3 + [8]))
	CALL prints([9594])
	$6 = *($3 + [16])
	if ( ($6 == 0) ){ goto $label$9 }
	*($3 + [20]) = $6
	CALL $11($6)
	
.LABEL $label$9
	$7 = *($3 + [56])
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$0 = ($3 + [60])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$24 }
	
.LOOP $label$25:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$26 }
	CALL $11($4)
	
.LABEL $label$26
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$25 }
	$6 = *(($3 + [56]))
	goto $label$23 
	
.LABEL $label$24
	$6 = $7
	
.LABEL $label$23
	*($0) = $7
	CALL $11($6)
	
.LABEL $label$7
	$0 = *($3 + [96])
	if ( ($0 == 0) ){ goto $label$27 }
	$8 = ($3 + [100])
	$4 = *($8)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$29 }
	
.LOOP $label$30:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$31 }
	$7 = *($6 + [52])
	if ( ($7 == 0) ){ goto $label$32 }
	*(($6 + [56])) = $7
	CALL $11($7)
	
.LABEL $label$32
	$7 = *($6 + [40])
	if ( ($7 == 0) ){ goto $label$33 }
	*(($6 + [44])) = $7
	CALL $11($7)
	
.LABEL $label$33
	CALL $11($6)
	
.LABEL $label$31
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$30 }
	$6 = *(($3 + [96]))
	goto $label$28 
	
.LABEL $label$29
	$6 = $0
	
.LABEL $label$28
	*($8) = $0
	CALL $11($6)
	
.LABEL $label$27
	$global$0 = ($3 + [112])
	return (unreachable)
	
.LABEL $label$6
	CALL $18(($3 + [16]))
	
.LABEL $label$5
	CALL $18(($3 + [16]))
	(unreachable)
}

void .FUNC $115 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$6 = *($1 + [16])
	$3 = *($3)
	$7 = ($1 + [52])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	CALL $113($7, *($3), *($3 + [4]))
	if ( ((int_64)$6 == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10285])
	
.LABEL $label$3
	$8 = ($1 + [40])
	$9 = *($1 + [40])
	$7 = *($1 + [44])
	$10 = ($7 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	$3 = [35]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	$12 = ($1 + [52])
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$5 }
	$3 = (($10 & [-8]) + $3)
	
.LABEL $label$5
	$9 = *($12)
	$7 = *($1 + [56])
	$10 = ($7 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$7 }
	$3 = (($10 & [-8]) + $3)
	
.LABEL $label$7
	$7 = ($3 + [44])
	if ( ($7 <= [513]) ){ goto $label$9 }
	$3 = CALL $2($7)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$8
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $7)
	*($5 + [24]) = ($5 + [8])
	*($5 + [56]) = $8
	*($5 + [60]) = $12
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [1])
	*($5 + [40]) = ($1 + [2])
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	*($5 + [52]) = ($1 + [24])
	*($5 + [64]) = ($1 + [64])
	*($5 + [68]) = ($1 + [72])
	*($5 + [72]) = ($1 + [80])
	*($5 + [76]) = ($1 + [88])
	*($5 + [80]) = ($1 + [96])
	*($5 + [84]) = ($1 + [104])
	*($5 + [88]) = ($1 + [112])
	CALL $60(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [124]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $4($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [96])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [96])
}

void .FUNC $112 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	*($1) = [1]
	$5 = ($1 + [40])
	$7 = *($1 + [40])
	$6 = *($1 + [44])
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	$10 = *($1 + [16])
	$11 = [35]
	
.LOOP $label$3:
	$11 = ($11 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	$12 = ($1 + [52])
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$4 }
	$11 = (($8 & [-8]) + $11)
	
.LABEL $label$4
	$7 = *($12)
	$6 = *($1 + [56])
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	
.LOOP $label$5:
	$11 = ($11 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$6 }
	$11 = (($8 & [-8]) + $11)
	
.LABEL $label$6
	$6 = ($11 + [44])
	if ( ($6 <= [513]) ){ goto $label$8 }
	$11 = CALL $2($6)
	goto $label$7 
	
.LABEL $label$8
	$11 = ($3 - (($6 + [15]) & [-16]))
	$global$0 = $11
	
.LABEL $label$7
	*($4 + [12]) = $11
	*($4 + [8]) = $11
	*($4 + [16]) = ($11 + $6)
	*($4 + [24]) = ($4 + [8])
	*($4 + [56]) = $5
	*($4 + [60]) = $12
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [1])
	*($4 + [40]) = ($1 + [2])
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [24])
	*($4 + [64]) = ($1 + [64])
	*($4 + [68]) = ($1 + [72])
	*($4 + [72]) = ($1 + [80])
	*($4 + [76]) = ($1 + [88])
	*($4 + [80]) = ($1 + [96])
	*($4 + [84]) = ($1 + [104])
	*($4 + [88]) = ($1 + [112])
	CALL $60(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [124]), $2, $11, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$10 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $4($11)
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [96])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [96])
}

void .FUNC $113 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [3])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [3])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL $11($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$6 = [536870911]
	if ( ((uint_32)int_32($5 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = $4
	$2 = int_32($5 >> [2])
	if ( ($2 <= $4) ){ goto $label$6 }
	$6 = $2
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($6 << [3])
	$6 = CALL $9($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$5 = int_32($3 >> [3])
	$3 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$5) )
	$3 = ($7 - $1)
	if ( ($3 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $3)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($3 >> [3]) << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $18($0)
}

int_32 .FUNC $110 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	*((($2 + [40]) + [32])) = [0]
	*($2 + [56]) = (int_64)-1
	*($2 + [64]) = (int_64)0
	$3 = *($0)
	*($2 + [40]) = $3
	*($2 + [48]) = $3
	*(($2 + [32])) = [0]
	*($2 + [8]) = $3
	*($2) = $3
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	*($2 + [36]) = [0]
	$4 = [0]
	$0 = CALL db_lowerbound_i64($3, $3, (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $52(($2 + [40]), $0)
	$6 = *(($2 + [28]))
	$5 = *(($2 + [24]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	
.LOOP $label$6:
	$0 = ($6 + [-24])
	$7 = *($0)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$5 }
	$6 = $0
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	if ( ((int_32)*($7 + [48]) == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert([0], [10021])
	goto $label$3 
	
.LABEL $label$4
	$0 = CALL db_find_i64(*($2), *(($2 + [8])), (int_64)-4157495357179166720, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $44($2, $0)
	if ( ((int_32)*($7 + [48]) == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$3
	$5 = [1]
	if ( ((uint_64)*($7 + [16]) >= (uint_64)*($4 + [64])) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	$7 = *($2 + [24])
	if ( ($7 == 0) ){ goto $label$7 }
	$4 = ($2 + [28])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $11($6)
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($2 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $7
	
.LABEL $label$8
	*($4) = $7
	CALL $11($0)
	
.LABEL $label$7
	$7 = *($2 + [64])
	if ( ($7 == 0) ){ goto $label$12 }
	$4 = ($2 + [68])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$14 }
	
.LOOP $label$15:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$16 }
	CALL $11($6)
	
.LABEL $label$16
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$15 }
	$0 = *(($2 + [64]))
	goto $label$13 
	
.LABEL $label$14
	$0 = $7
	
.LABEL $label$13
	*($4) = $7
	CALL $11($0)
	
.LABEL $label$12
	$global$0 = ($2 + [80])
	return $5
}

void .FUNC $111 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$6 = *($1 + [16])
	$3 = *($3)
	$7 = ($1 + [52])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	CALL $113($7, *($3), *($3 + [4]))
	if ( ((int_64)$6 == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10285])
	
.LABEL $label$3
	$8 = ($1 + [40])
	$9 = *($1 + [40])
	$7 = *($1 + [44])
	$10 = ($7 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	$3 = [35]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	$12 = ($1 + [52])
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$5 }
	$3 = (($10 & [-8]) + $3)
	
.LABEL $label$5
	$9 = *($12)
	$7 = *($1 + [56])
	$10 = ($7 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$7 }
	$3 = (($10 & [-8]) + $3)
	
.LABEL $label$7
	$7 = ($3 + [44])
	if ( ($7 <= [513]) ){ goto $label$9 }
	$3 = CALL $2($7)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$8
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $7)
	*($5 + [24]) = ($5 + [8])
	*($5 + [56]) = $8
	*($5 + [60]) = $12
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [1])
	*($5 + [40]) = ($1 + [2])
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	*($5 + [52]) = ($1 + [24])
	*($5 + [64]) = ($1 + [64])
	*($5 + [68]) = ($1 + [72])
	*($5 + [72]) = ($1 + [80])
	*($5 + [76]) = ($1 + [88])
	*($5 + [80]) = ($1 + [96])
	*($5 + [84]) = ($1 + [104])
	*($5 + [88]) = ($1 + [112])
	CALL $60(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [124]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $4($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [96])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [96])
}

void .FUNC $118 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $18($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $119 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = [0]
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$4 = *($0)
	*($2) = $4
	*($2 + [8]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)5094022140569452544, $1)
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $107($2, $0)
	if ( ((int_32)*($3 + [8]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [10021])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9616])
	CALL eosio_assert([0], [11292])
	CALL eosio_assert([0], [10104])
	
.LABEL $label$1
	$0 = CALL db_next_i64(*($3 + [12]), ($2 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	CALL $107($2, $0)
	
.LABEL $label$3
	CALL $120($2, $3)
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($2 + [28])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $11($0)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$7 }
	$3 = *(($2 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$3 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($2 + [48])
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $9($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $28 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $21 (int_32 $0)
{
	*($0) = [1]
}

int_32 .FUNC $20 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $23 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [1] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $25($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $25($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $25($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $25($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [8624]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $25($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $25($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $25($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

void .FUNC $22 (int_32 $0)
{
	*($0) = [0]
}

int_32 .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $24 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

int_32 .FUNC $27 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $23([2], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

void .FUNC $101 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [96])
	$global$0 = $3
	$4 = [0]
	*((($3 + [48]) + [32])) = [0]
	*($3 + [64]) = (int_64)-1
	*($3 + [72]) = (int_64)0
	$5 = *($0)
	*($3 + [48]) = $5
	*($3 + [56]) = $5
	*((($3 + [8]) + [32])) = [0]
	*($3 + [8]) = $5
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	*($3 + [44]) = [0]
	*($3 + [16]) = $1
	$6 = CALL db_find_i64($5, $5, (int_64)-6224682770514313216, $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$4 = CALL $45(($3 + [48]), $6)
	if ( ((int_32)*($4 + [120]) == (int_32)($3 + [48])) ){ goto $label$1 }
	CALL eosio_assert([0], [10021])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9113])
	
.LABEL $label$1
	CALL prints([9134])
	CALL printn(*($4 + [8]))
	CALL prints([8797])
	if ( CALL has_auth(*($0)) ){ goto $label$3 }
	if ( CALL has_auth(*(($4 + [8]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9148])
	
.LABEL $label$3
	if ( (*($4) == 0) ){ goto $label$4 }
	CALL eosio_assert([0], [9199])
	
.LABEL $label$4
	if ( $4 ){ goto $label$5 }
	CALL eosio_assert([0], [11292])
	CALL eosio_assert([0], [10104])
	
.LABEL $label$5
	$0 = CALL db_next_i64(*($4 + [124]), ($3 + [88]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	CALL $45(($3 + [48]), $0)
	
.LABEL $label$6
	CALL $102(($3 + [48]), $4)
	$6 = ($3 + [16])
	$4 = CALL db_lowerbound_i64(*($3 + [8]), *($6), (int_64)5310424360057438208, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $103(($3 + [8]), $4)
	*($3 + [4]) = [0]
	*($3) = ($3 + [8])
	CALL $104($3)
	$5 = *($3)
	$4 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	if ( $4) ){ goto $label$9 }
	CALL eosio_assert([0], [11292])
	CALL eosio_assert([0], [10104])
	
.LABEL $label$9
	$0 = CALL db_next_i64(*($4 + [44]), ($3 + [88]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$10 }
	CALL $103((CASTING uint_32)(uint_64 $5), $0)
	
.LABEL $label$10
	CALL $105(($3 + [8]), $4)
	$4 = CALL db_lowerbound_i64(*($3 + [8]), *($6), (int_64)5310424360057438208, (int_64)0)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$8 }
	
.LABEL $label$7
	$6 = *($3 + [32])
	if ( ($6 == 0) ){ goto $label$11 }
	$7 = ($3 + [36])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $11($0)
	
.LABEL $label$15
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($3 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $6
	
.LABEL $label$12
	*($7) = $6
	CALL $11($4)
	
.LABEL $label$11
	$7 = *($3 + [72])
	if ( ($7 == 0) ){ goto $label$16 }
	$8 = ($3 + [76])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$18 }
	
.LOOP $label$19:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	$6 = *($4 + [52])
	if ( ($6 == 0) ){ goto $label$21 }
	*(($4 + [56])) = $6
	CALL $11($6)
	
.LABEL $label$21
	$6 = *($4 + [40])
	if ( ($6 == 0) ){ goto $label$22 }
	*(($4 + [44])) = $6
	CALL $11($6)
	
.LABEL $label$22
	CALL $11($4)
	
.LABEL $label$20
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$19 }
	$4 = *(($3 + [72]))
	goto $label$17 
	
.LABEL $label$18
	$4 = $7
	
.LABEL $label$17
	*($8) = $7
	CALL $11($4)
	
.LABEL $label$16
	$global$0 = ($3 + [96])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $18($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([56])) + [32]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	CALL $185(($3 + [40]), ($3 + [32]))
	*($5 + [44]) = $1
	*($5 + [48 align=4]) = (int_64)-1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $100(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11326])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [11371])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [16])
	if ( ((int_64)*(*(($4 + [-24])) + [16]) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9) + [16]) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [11421])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	$7 = *($5 + [52])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($5 + [56])) = $7
	CALL $11($7)
	
.LABEL $label$13
	$7 = *($5 + [40])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($5 + [44])) = $7
	CALL $11($7)
	
.LABEL $label$14
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$2 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$15:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$16 }
	$7 = *($8 + [52])
	if ( ($7 == 0) ){ goto $label$17 }
	*(($8 + [56])) = $7
	CALL $11($7)
	
.LABEL $label$17
	$7 = *($8 + [40])
	if ( ($7 == 0) ){ goto $label$18 }
	*(($8 + [44])) = $7
	CALL $11($7)
	
.LABEL $label$18
	CALL $11($8)
	
.LABEL $label$16
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$15 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*($1 + [124]))
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11326])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [11371])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [11421])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $11($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $11($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
	$9 = *(($1 + [48]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5310424360057438208, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$9 = *(($1 + [52]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5310424360057438209, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

int_32 .FUNC $104 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [44]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10607])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)5310424360057438208)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10553])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $103(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([24])) + [8]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10095])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = $7
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $118(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $4($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $11($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $106 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [160])
	$global$0 = $3
	*($3 + [152]) = $1
	CALL require_auth($1)
	$4 = [0]
	*(($3 + [144])) = [0]
	*($3 + [128]) = (int_64)-1
	*($3 + [136]) = (int_64)0
	$1 = *($0)
	*($3 + [112]) = $1
	*($3 + [120]) = $1
	$5 = CALL db_find_i64($1, $1, (int_64)-6224682770514313216, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $45(($3 + [112]), $5)
	if ( ((int_32)*($4 + [120]) == (int_32)($3 + [112])) ){ goto $label$1 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$1
	if ( (*($4) == 0) ){ goto $label$2 }
	CALL eosio_assert([0], [9223])
	
.LABEL $label$2
	if ( $4 ){ goto $label$3 }
	CALL eosio_assert([0], [9247])
	
.LABEL $label$3
	*(($3 + [104])) = [0]
	*($3 + [88]) = (int_64)-1
	*($3 + [96]) = (int_64)0
	$1 = *($0)
	*($3 + [72]) = $1
	*($3 + [80]) = $1
	$6 = [0]
	$5 = CALL db_find_i64($1, $1, (int_64)5094022140569452544, *($3 + [152]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $107(($3 + [72]), $5)
	if ( ((int_32)*($6 + [8]) == (int_32)($3 + [72])) ){ goto $label$4 }
	CALL eosio_assert([0], [10021])
	
.LABEL $label$4
	*(($3 + [64])) = [0]
	*($3 + [56]) = (int_64)0
	$5 = CALL $17([8951])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$13 }
	*($3 + [56]) = ($5 << [1])
	$7 = (($3 + [56]) | [1])
	if ( $5 ){ goto $label$12 }
	$8 = [0]
	*(($7 + $5)) = [0]
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$8 = (($5 + [16]) & [-16])
	$7 = CALL $9($8)
	*($3 + [56]) = ($8 | [1])
	*($3 + [64]) = $7
	*($3 + [60]) = $5
	
.LABEL $label$12
	CALL memcpy($7, [8951], $5)
	$8 = [0]
	*(($7 + $5)) = [0]
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL prints([9265])
	$7 = [0]
	*($3 + [16]) = [0]
	*($3 + [8]) = (int_64)0
	$5 = (*(($4 + [44])) - *($4 + [40]))
	if ( ($5 == 0) ){ goto $label$15 }
	$8 = int_32($5 >> [3])
	if ( ((uint_32)$8 >= (uint_32)[536870912]) ){ goto $label$8 }
	$7 = CALL $9($5)
	*(($3 + [16])) = ($7 + ($8 << [3]))
	*($3 + [8]) = $7
	*($3 + [12]) = $7
	$8 = *(($4 + [40]))
	$5 = (*(($4 + [44])) - $8)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$15 }
	CALL memcpy($7, $8, $5)
	$7 = (*($3 + [12]) + $5)
	*($3 + [12]) = $7
	$5 = *($3 + [8])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$15 }
	$1 = *($3 + [152])
	
.LOOP $label$17:
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$16 }
	$5 = ($5 + [8])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$15 }
	CALL $33(($3 + [56]), [9306])
	$8 = [0]
	$5 = *($3 + [8])
	if ( $5 ){ goto $label$14 }
	goto $label$10 
	
.LABEL $label$15
	if ( ((int_32)$7 == (int_32)*((($3 + [8]) + [8]))) ){ goto $label$19 }
	*($7) = *($3 + [152])
	*($3 + [12]) = ($7 + [8])
	goto $label$18 
	
.LABEL $label$19
	CALL $108(($3 + [8]), ($3 + [152]))
	
.LABEL $label$18
	$1 = *($0)
	*($3 + [48]) = ($3 + [8])
	CALL $109(($3 + [112]), $4, $1, ($3 + [48]))
	CALL prints([9283])
	$8 = [1]
	$5 = *($3 + [8])
	if ( ($5 == 0) ){ goto $label$10 }
	
.LABEL $label$14
	*($3 + [12]) = $5
	CALL $11($5)
	
.LABEL $label$10
	CALL prints([9342])
	if ( (CALL $110($0, *($3 + [152])) == 0) ){ goto $label$24 }
	$7 = [0]
	*($3 + [16]) = [0]
	*($3 + [8]) = (int_64)0
	$5 = (*(($4 + [56])) - *($4 + [52]))
	if ( ($5 == 0) ){ goto $label$22 }
	$6 = int_32($5 >> [3])
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$7 }
	$7 = CALL $9($5)
	*(($3 + [16])) = ($7 + ($6 << [3]))
	*($3 + [8]) = $7
	*($3 + [12]) = $7
	$6 = *(($4 + [52]))
	$5 = (*(($4 + [56])) - $6)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$22 }
	CALL memcpy($7, $6, $5)
	$7 = (*($3 + [12]) + $5)
	*($3 + [12]) = $7
	$5 = *($3 + [8])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$22 }
	$1 = *($3 + [152])
	
.LOOP $label$25:
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$23 }
	$5 = ($5 + [8])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$25 }
	goto $label$22 
	
.LABEL $label$24
	CALL $33(($3 + [56]), [9430])
	if ( $8 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$23
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$22 }
	CALL $33(($3 + [56]), [9397])
	$5 = *($3 + [8])
	if ( $5 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	if ( ((int_32)$7 == (int_32)*((($3 + [8]) + [8]))) ){ goto $label$27 }
	*($7) = *($3 + [152])
	*($3 + [12]) = ($7 + [8])
	goto $label$26 
	
.LABEL $label$27
	CALL $108(($3 + [8]), ($3 + [152]))
	
.LABEL $label$26
	$1 = *($0)
	*($3 + [48]) = ($3 + [8])
	CALL $111(($3 + [112]), $4, $1, ($3 + [48]))
	CALL prints([9377])
	$8 = [1]
	$5 = *($3 + [8])
	if ( ($5 == 0) ){ goto $label$20 }
	
.LABEL $label$21
	*($3 + [12]) = $5
	CALL $11($5)
	
.LABEL $label$20
	if ( ($8 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$9
	CALL $28(($3 + [56]))
	
.LABEL $label$8
	CALL $18(($3 + [8]))
	
.LABEL $label$7
	CALL $18(($3 + [8]))
	
.LABEL $label$6
	CALL eosio_assert([0], ( *($3 + [64]) ? (($3 + [56]) | [1]) : (*($3 + [56]) & [1]) ))
	
.LABEL $label$5
	$5 = [0]
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	$1 = *($0)
	*($3 + [8]) = $1
	*($3 + [16]) = $1
	*($3 + [32]) = (int_64)0
	$7 = CALL db_lowerbound_i64($1, $1, (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$28 }
	$5 = CALL $52(($3 + [8]), $7)
	
.LABEL $label$28
	if ( ((uint_64)*($5 + [80]) > (uint_64)(CASTING int_64)(int_32 int_32((*(($4 + [44])) - *($4 + [40])) >> [3]))) ){ goto $label$29 }
	if ( ((uint_64)*($5 + [72]) > (uint_64)(CASTING int_64)(int_32 int_32((*(($4 + [56])) - *($4 + [52])) >> [3]))) ){ goto $label$29 }
	CALL prints([9459])
	CALL prints([8797])
	CALL $112(($3 + [112]), $4, *($0))
	
.LABEL $label$29
	$7 = *($3 + [32])
	if ( ($7 == 0) ){ goto $label$30 }
	$0 = ($3 + [36])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$32 }
	
.LOOP $label$33:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$34 }
	CALL $11($5)
	
.LABEL $label$34
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$33 }
	$4 = *(($3 + [32]))
	goto $label$31 
	
.LABEL $label$32
	$4 = $7
	
.LABEL $label$31
	*($0) = $7
	CALL $11($4)
	
.LABEL $label$30
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$35 }
	CALL $11(*($3 + [64]))
	
.LABEL $label$35
	$7 = *($3 + [96])
	if ( ($7 == 0) ){ goto $label$36 }
	$0 = ($3 + [100])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$38 }
	
.LOOP $label$39:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$40 }
	CALL $11($5)
	
.LABEL $label$40
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$39 }
	$4 = *(($3 + [96]))
	goto $label$37 
	
.LABEL $label$38
	$4 = $7
	
.LABEL $label$37
	*($0) = $7
	CALL $11($4)
	
.LABEL $label$36
	$0 = *($3 + [136])
	if ( ($0 == 0) ){ goto $label$41 }
	$8 = ($3 + [140])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$43 }
	
.LOOP $label$44:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$45 }
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$46 }
	*(($4 + [56])) = $7
	CALL $11($7)
	
.LABEL $label$46
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$47 }
	*(($4 + [44])) = $7
	CALL $11($7)
	
.LABEL $label$47
	CALL $11($4)
	
.LABEL $label$45
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$44 }
	$4 = *(($3 + [136]))
	goto $label$42 
	
.LABEL $label$43
	$4 = $0
	
.LABEL $label$42
	*($8) = $0
	CALL $11($4)
	
.LABEL $label$41
	$global$0 = ($3 + [160])
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $109 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$6 = *($1 + [16])
	$3 = *($3)
	$7 = ($1 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	CALL $113($7, *($3), *($3 + [4]))
	if ( ((int_64)$6 == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10285])
	
.LABEL $label$3
	$9 = *($1 + [40])
	$8 = *($1 + [44])
	$10 = ($8 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	$3 = [35]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	$12 = ($1 + [52])
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$5 }
	$3 = (($10 & [-8]) + $3)
	
.LABEL $label$5
	$9 = *($12)
	$8 = *($1 + [56])
	$10 = ($8 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$7 }
	$3 = (($10 & [-8]) + $3)
	
.LABEL $label$7
	$8 = ($3 + [44])
	if ( ($8 <= [513]) ){ goto $label$9 }
	$3 = CALL $2($8)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$8
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $8)
	*($5 + [24]) = ($5 + [8])
	*($5 + [56]) = $7
	*($5 + [60]) = $12
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [1])
	*($5 + [40]) = ($1 + [2])
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	*($5 + [52]) = ($1 + [24])
	*($5 + [64]) = ($1 + [64])
	*($5 + [68]) = ($1 + [72])
	*($5 + [72]) = ($1 + [80])
	*($5 + [76]) = ($1 + [88])
	*($5 + [80]) = ($1 + [96])
	*($5 + [84]) = ($1 + [104])
	*($5 + [88]) = ($1 + [112])
	CALL $60(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [124]), $2, $3, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $4($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [96])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [96])
}

void .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [3])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$6 = int_32($7 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $9(($6 << [3]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $18($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [3])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [3]))
	$5 = ($4 + [8])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $11($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $212 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10095])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [52])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [10095])
	$1 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $219 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10100])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [3])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $220($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [3]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10095])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [8])
	$2 = (*($6) + [8])
	*($6) = $2
	$7 = ($7 + [8])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $38 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL sha256($1, $2, ($3 + [16]))
	$4 = (int_64)0
	$1 = [16]
	$2 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	$6 = (($3 + [16]) + $2)
	if ( ($1 <= [2]) ){ goto $label$3 }
	$4 = ((int_64)$4 | (int_64)*($6))
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)(uint_64)$4 >> (uint_64)(int_64)56))
	$1 = ($1 + [-1])
	$4 = ((int_64)$4 << (int_64)8)
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [8569])
	
.LABEL $label$4
	*($0 + [8]) = $5
	*($0) = ((int_64)$4 | (int_64)*($6))
	$1 = [16]
	$0 = ($0 + [16])
	$4 = (int_64)0
	$5 = (int_64)0
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$1 == (int_32)[16]) ){ goto $label$5 }
	if ( ($1 <= [2]) ){ goto $label$6 }
	CALL __ashlti3($3, $4, $5, (($1 << [3]) + [-8]))
	$5 = *(($3 + [8]))
	$4 = *($3)
	
.LABEL $label$6
	*($0) = $4
	*($0 + [8]) = $5
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $39 (int_32 $0)
{
}

int_32 .FUNC $36 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $31($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $37 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $20(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $9($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $11($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$3 = ($2 & [1])
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = ((*($0) & [-2]) + [-1])
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = [10]
	$2 = uint_32($2 >> [1])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $34($0, $4, [1], $4, $4, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($2 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($2 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $2)) + [1]) = [0]
	*($0) = $1
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $9(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $11($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $17($1)
	$3 = [10]
	$4 = *($0)
	$5 = ($4 & [1])
	if ( ($5 == 0) ){ goto $label$1 }
	$3 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$1
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$6 }
	if ( $5 ){ goto $label$5 }
	$5 = uint_32($4 >> [1])
	CALL $31($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$6
	if ( $5 ){ goto $label$4 }
	$3 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = *($0 + [4])
	CALL $31($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$4
	$3 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($3, $1, $2)
	
.LABEL $label$2
	*(($3 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $31($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $31 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $9($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $11($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	*($2 + [11]) = (uint_64)$3 >> (uint_64)(int_64)32)
	*($2 + [10]) = (uint_64)$3 >> (uint_64)(int_64)40)
	*($2 + [9]) = (uint_64)$3 >> (uint_64)(int_64)48)
	*($2 + [8]) = (uint_64)$3 >> (uint_64)(int_64)56)
	$4 = *(($1 + [8]))
	*($2 + [3]) = (uint_64)$4 >> (uint_64)(int_64)32)
	*($2 + [2]) = (uint_64)$4 >> (uint_64)(int_64)40)
	*($2 + [1]) = (uint_64)$4 >> (uint_64)(int_64)48)
	*($2) = (uint_64)$4 >> (uint_64)(int_64)56)
	$5 = (CASTING uint_32)(uint_64 $3)
	*($2 + [15]) = $5
	*($2 + [14]) = uint_32($5 >> [8])
	*($2 + [13]) = uint_32($5 >> [16])
	*($2 + [12]) = uint_32($5 >> [24])
	$5 = (CASTING uint_32)(uint_64 $4)
	*($2 + [7]) = $5
	*($2 + [6]) = uint_32($5 >> [8])
	*($2 + [5]) = uint_32($5 >> [16])
	*($2 + [4]) = uint_32($5 >> [24])
	$3 = *(($1 + [24]))
	*($2 + [23]) = $3
	$4 = *($1 + [16])
	*($2 + [27]) = (uint_64)$4 >> (uint_64)(int_64)32)
	*($2 + [26]) = (uint_64)$4 >> (uint_64)(int_64)40)
	*($2 + [25]) = (uint_64)$4 >> (uint_64)(int_64)48)
	*($2 + [24]) = (uint_64)$4 >> (uint_64)(int_64)56)
	*($2 + [19]) = (uint_64)$3 >> (uint_64)(int_64)32)
	*($2 + [18]) = (uint_64)$3 >> (uint_64)(int_64)40)
	*($2 + [17]) = (uint_64)$3 >> (uint_64)(int_64)48)
	*($2 + [16]) = (uint_64)$3 >> (uint_64)(int_64)56)
	$1 = (CASTING uint_32)(uint_64 $3)
	*($2 + [22]) = uint_32($1 >> [8])
	*($2 + [21]) = uint_32($1 >> [16])
	*($2 + [20]) = uint_32($1 >> [24])
	$1 = (CASTING uint_32)(uint_64 $4)
	*($2 + [31]) = $1
	*($2 + [30]) = uint_32($1 >> [8])
	*($2 + [29]) = uint_32($1 >> [16])
	*($2 + [28]) = uint_32($1 >> [24])
	$1 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [10344])
	$1 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [32])
	*(($1 = ($0 + [4]))) = (*($1) + [32])
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $214 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $215(*($1), *($0 + [8]))
	CALL $215(*($1), *($0 + [12]))
	CALL $216(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10344])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $217 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10095])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	*($3) = (*($3) + [8])
	$4 = ($1 + [32])
	$3 = *($0 + [4])
	$0 = CALL $219($0, ($1 + [16]))
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10095])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10095])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($0 + [8])
	if ( ((int_32)*($5) != (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [10095])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy(($2 + [7]), $4, [1])
	$4 = (*($3) + [1])
	*($3) = $4
	*(($1 + [56])) = ((int_32)*($2 + [7]) != (int_32)[0])
	$3 = ($1 + [60])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [10095])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [64])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [10095])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, $4, [4])
	$4 = (*($3) + [4])
	*($3) = $4
	$3 = ($1 + [72])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10095])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10095])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [80])) = *($2 + [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $216 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [10344])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10095])
	$4 = *($1)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $210 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10095])
	$4 = *($1)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10095])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $147(*($1), *($0 + [12]))
	$global$0 = ($2 + [16])
}

void .FUNC $199 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$2
	$6 = *($1 + [24])
	*($5 + [16]) = $6
	*($1 + [24]) = ((int_64)$6 + (int_64)*(*($3)))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	*($5 + [24]) = $5
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	$3 = ($1 + [24])
	*($5 + [40]) = $3
	*($5 + [44]) = ($1 + [32])
	CALL $128(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [32]) = *($3)
	if ( (CALL $20(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [48])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371635640205312, ($5 + [24]), $6)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

void .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10095])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [12])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10095])
	$0 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $197 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $18($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $194 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10344])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10344])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $195 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [10344])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $192 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [80])
	$global$0 = $3
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$4 = *(($1 + [4]))
	
.LABEL $label$1
	CALL memcpy(($3 + [48]), $4, [32])
	*(($1 = ($1 + [4]))) = (*($1) + [32])
	$5 = (int_64)0
	$1 = [16]
	$6 = ($3 + [16])
	$4 = [0]
	$7 = (int_64)0
	
.LOOP $label$3:
	$8 = (($3 + [48]) + $4)
	if ( ($1 <= [2]) ){ goto $label$4 }
	$5 = ((int_64)$5 | (int_64)*($8))
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)(uint_64)$5 >> (uint_64)(int_64)56))
	$1 = ($1 + [-1])
	$5 = ((int_64)$5 << (int_64)8)
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [11474])
	
.LABEL $label$5
	*($6 + [8]) = $7
	*($6) = ((int_64)$5 | (int_64)*($8))
	$1 = [16]
	$6 = ($6 + [16])
	$5 = (int_64)0
	$7 = (int_64)0
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$1 == (int_32)[16]) ){ goto $label$6 }
	if ( ($1 <= [2]) ){ goto $label$7 }
	CALL __ashlti3($3, $5, $7, (($1 << [3]) + [-8]))
	$7 = *(($3 + [8]))
	$5 = *($3)
	
.LABEL $label$7
	*($6) = $5
	*($6 + [8]) = $7
	
.LABEL $label$6
	*($0) = *($3 + [16])
	*(($0 + [8])) = *($3 + [24])
	*(($0 + [24])) = *((($3 + [16]) + [24]))
	*(($0 + [16])) = *((($3 + [16]) + [16]))
	$global$0 = ($3 + [80])
}

void .FUNC $193 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [80])
	$global$0 = $3
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$4 = *(($1 + [4]))
	
.LABEL $label$1
	CALL memcpy(($3 + [48]), $4, [32])
	*(($1 = ($1 + [4]))) = (*($1) + [32])
	$5 = (int_64)0
	$1 = [16]
	$6 = ($3 + [16])
	$4 = [0]
	$7 = (int_64)0
	
.LOOP $label$3:
	$8 = (($3 + [48]) + $4)
	if ( ($1 <= [2]) ){ goto $label$4 }
	$5 = ((int_64)$5 | (int_64)*($8))
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)(uint_64)$5 >> (uint_64)(int_64)56))
	$1 = ($1 + [-1])
	$5 = ((int_64)$5 << (int_64)8)
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [11474])
	
.LABEL $label$5
	*($6 + [8]) = $7
	*($6) = ((int_64)$5 | (int_64)*($8))
	$1 = [16]
	$6 = ($6 + [16])
	$5 = (int_64)0
	$7 = (int_64)0
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$1 == (int_32)[16]) ){ goto $label$6 }
	if ( ($1 <= [2]) ){ goto $label$7 }
	CALL __ashlti3($3, $5, $7, (($1 << [3]) + [-8]))
	$7 = *(($3 + [8]))
	$5 = *($3)
	
.LABEL $label$7
	*($6) = $5
	*($6 + [8]) = $7
	
.LABEL $label$6
	*($0) = *($3 + [16])
	*(($0 + [8])) = *($3 + [24])
	*(($0 + [24])) = *((($3 + [16]) + [24]))
	*(($0 + [16])) = *((($3 + [16]) + [16]))
	$global$0 = ($3 + [80])
}

int_32 .FUNC $190 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10344])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10344])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [8])
	$4 = (*($7) + [8])
	*($7) = $4
	$6 = ($6 + [8])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10095])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $192(*($0 + [8]), $1, [1])
	CALL $193(*($0 + [12]), $1, [1])
	CALL $147(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10095])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}