(data (i32.const 4) "\d0z\00\00")
(data (i32.const 16) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 80) "invalid symbol name\00")
(data (i32.const 112) "multiplication overflow\00")
(data (i32.const 144) "multiplication underflow\00")
(data (i32.const 176) "attempt to add asset with different symbol\00")
(data (i32.const 224) "addition underflow\00")
(data (i32.const 256) "addition overflow\00")
(data (i32.const 288) "|\00")
(data (i32.const 304) "divide by zero\00")
(data (i32.const 320) "signed division overflow\00")
(data (i32.const 352) "0\00")
(data (i32.const 368) "1\00")
(data (i32.const 384) "Interest is out of range\00")
(data (i32.const 412) "\12\00\00\00\13\00\00\00")
(data (i32.const 432) "T = \00")
(data (i32.const 448) "static const char *boost::detail::ctti<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::n() [T = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]\00")
(data (i32.const 672) "automatedres\00")
(data (i32.const 688) "fstakes\00")
(data (i32.const 704) "fleases\00")
(data (i32.const 720) "ustakes\00")
(data (i32.const 736) "uleases\00")
(data (i32.const 752) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 816) "You can not create an order with the same random string in the memo as a previous order.\00")
(data (i32.const 912) "cannot create objects in table of another contract\00")
(data (i32.const 976) "cannot pass end iterator to modify\00")
(data (i32.const 1024) "object passed to modify is not in multi_index\00")
(data (i32.const 1072) "cannot modify objects in table of another contract\00")
(data (i32.const 1136) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1200) "write\00")
(data (i32.const 1216) "error reading iterator\00")
(data (i32.const 1248) "read\00")
(data (i32.const 1264) "get\00")
(data (i32.const 1280) "cannot pass end iterator to erase\00")
(data (i32.const 1328) "cannot increment end iterator\00")
(data (i32.const 1360) "object passed to erase is not in multi_index\00")
(data (i32.const 1408) "cannot erase objects in table of another contract\00")
(data (i32.const 1472) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1536) "eosio.token\00")
(data (i32.const 1552) "unable to find key\00")
(data (i32.const 1584) "no chintai signature provided\00")
(data (i32.const 1616) "active\00")
(data (i32.const 1632) "chinundel\00")
(data (i32.const 1648) "liveundel\00")
(data (i32.const 1664) "singleton does not exist\00")
(data (i32.const 1696) "eosio\00")
(data (i32.const 1712) "undelegatebw\00")
(data (i32.const 1728) "extensions\00")
(data (i32.const 1744) "undelegatebw|\00")
(data (i32.const 1760) "chinrefund\00")
(data (i32.const 1776) "chinrefund|\00")
(data (i32.const 1792) "Require dev permission to execute this\00")
(data (i32.const 1840) "processpool\00")
(data (i32.const 1872) "Order does not exist or has already been fulfilled\00")
(data (i32.const 1936) "transfer\00")
(data (i32.const 1952) "Chintai returning airdrop tokens received during stake\00")
(data (i32.const 2016) "Cancelled unfulfilled order\00")
(data (i32.const 2048) "cancelorder|\00")
(data (i32.const 2064) "Chintai has not been initialized, we are probably doing maintenance so please be patient\00")
(data (i32.const 2160) "Chintai has been temporarily frozen. We will reactivate it as soon as possible\00")
(data (i32.const 2240) "refund\00")
(data (i32.const 2256) "Returning lend order from Chintai|LendID:\00")
(data (i32.const 2304) "|BorrowID:\00")
(data (i32.const 2320) "nonce\00")
(data (i32.const 2336) "delegatebw\00")
(data (i32.const 2352) "Lend order (\00")
(data (i32.const 2368) ") fulfilled by borrow order (\00")
(data (i32.const 2400) "Borrow order (\00")
(data (i32.const 2416) ") fulfilled by lend order (\00")
(data (i32.const 2448) "), paying interest from Chintai.\00")
(data (i32.const 2496) "chinundel|\00")
(data (i32.const 2512) "Order did not validate\00")
(data (i32.const 2544) "You can\'t send orders for other people\00")
(data (i32.const 2592) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 2656) "Quantity for transfer is incorrect\00")
(data (i32.const 2704) "Could not find matching order, did you do prepare first?\00")
(data (i32.const 2768) "Order must be a stake or a lease\00")
(data (i32.const 2816) "Starting the lease order matching\n\00")
(data (i32.const 2864) "delaycancel\00")
(data (i32.const 2880) "Chintai is returning interest that does not need to be paid for borrow order for user \00")
(data (i32.const 2976) "attempt to subtract asset with different symbol\00")
(data (i32.const 3024) "subtraction underflow\00")
(data (i32.const 3056) "subtraction overflow\00")
(data (i32.const 3088) "Can not find order\n\00")
(data (i32.const 3120) "cannot decrement end iterator when the index is empty\00")
(data (i32.const 3184) "cannot decrement iterator at beginning of index\00")
(data (i32.const 3232) "The order you are trying to activate doesn\'t exist. The memo must exactly match the prepare and transfer function\00")
(data (i32.const 3360) "The order you are trying to activate isn\'t set active. You have to transfer the funds with the correct memo\00")
(data (i32.const 3472) "Not sure how you got here... Go home you\'re drunk\00")
(data (i32.const 3536) "Order did not validate, error code: \00")
(data (i32.const 3584) "read_transaction failed\00")
(data (i32.const 3616) "The prepare, transfer, and activate actions all have to be sent as part of the same transaction\00")
(data (i32.const 3712) "prepare\00")
(data (i32.const 3728) "activate\00")
(data (i32.const 3744) "unstake\00")
(data (i32.const 3760) "Chintai | use eosio.token\00")
(data (i32.const 3792) "onerror\00")
(data (i32.const 3808) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 3872) "market\00")
(data (i32.const 3888) "freeze\00")
(data (i32.const 3904) "pools\00")
(data (i32.const 12320) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 12416) "%d\00")
(data (i32.const 12432) "%lld\00")
(data (i32.const 12448) "%llu\00")
(data (i32.const 12464) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 12480) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 12496) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(data (i32.const 12512) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 12976) "0123456789ABCDEF")
(data (i32.const 12992) "-+   0X0x\00")
(data (i32.const 13008) "(null)\00")
(data (i32.const 13024) "-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 13056) "inf\00")
(data (i32.const 13072) "INF\00")
(data (i32.const 13088) "nan\00")
(data (i32.const 13104) "NAN\00")
(data (i32.const 13120) ".\00")
(data (i32.const 13136) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 13232) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(import "env" "__addtf3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__eqtf2" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "__extenddftf2" (func $fimport$2 (param i32 f64)))
(import "env" "__fixtfsi" (func $fimport$3 (param i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$4 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$5 (param i32 i32)))
(import "env" "__floatunsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__multi3" (func $fimport$8 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__unordtf2" (func $fimport$11 (param i64 i64 i64 i64) (result i32)))
(import "env" "abort" (func $fimport$12))
(import "env" "action_data_size" (func $fimport$13 (result i32)))
(import "env" "cancel_deferred" (func $fimport$14 (param i32) (result i32)))
(import "env" "current_receiver" (func $fimport$15 (result i64)))
(import "env" "current_time" (func $fimport$16 (result i64)))
(import "env" "db_find_i64" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$18 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$19 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$20 (param i32)))
(import "env" "db_idx64_store" (func $fimport$21 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$22 (param i32 i64 i32)))
(import "env" "db_idx_double_end" (func $fimport$23 (param i64 i64 i64) (result i32)))
(import "env" "db_idx_double_find_primary" (func $fimport$24 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx_double_lowerbound" (func $fimport$25 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx_double_next" (func $fimport$26 (param i32 i32) (result i32)))
(import "env" "db_idx_double_previous" (func $fimport$27 (param i32 i32) (result i32)))
(import "env" "db_idx_double_remove" (func $fimport$28 (param i32)))
(import "env" "db_idx_double_store" (func $fimport$29 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx_double_update" (func $fimport$30 (param i32 i64 i32)))
(import "env" "db_next_i64" (func $fimport$31 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$32 (param i32)))
(import "env" "db_store_i64" (func $fimport$33 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$34 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$35 (param i32 i32)))
(import "env" "has_auth" (func $fimport$36 (param i64) (result i32)))
(import "env" "is_account" (func $fimport$37 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$38 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$39 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$40 (param i32 i32 i32) (result i32)))
(import "env" "prints" (func $fimport$41 (param i32)))
(import "env" "read_action_data" (func $fimport$42 (param i32 i32) (result i32)))
(import "env" "read_transaction" (func $fimport$43 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$44 (param i64)))
(import "env" "require_auth2" (func $fimport$45 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$46 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$47 (param i32 i32)))
(import "env" "sha256" (func $fimport$48 (param i32 i32 i32)))
(import "env" "transaction_size" (func $fimport$49 (result i32)))
(export "memory" (memory $0))
(export "now" (func $0))
(export "_ZeqRK11checksum256S1_" (func $1))
(export "_ZeqRK11checksum160S1_" (func $2))
(export "_ZneRK11checksum160S1_" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN5eosio15string_to_assetENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $5))
(export "_ZN5eosio5orderC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $6))
(export "_ZNK5eosio5order23get_order_creation_timeEv" (func $20))
(export "_ZNK5eosio5order8get_hashEv" (func $21))
(export "_ZNK5eosio5order16get_cpu_bw_ratioEv" (func $22))
(export "_ZNK5eosio5order12get_durationEv" (func $23))
(export "_ZNK5eosio5order8get_userEv" (func $24))
(export "_ZNK5eosio5order12get_interestEv" (func $25))
(export "_ZNK5eosio5order6get_idEv" (func $26))
(export "_ZNK5eosio5order8get_sideEv" (func $27))
(export "_ZNK5eosio5order17get_quantity_leftEv" (func $28))
(export "_ZNK5eosio5order12get_quantityEv" (func $29))
(export "_ZN5eosio5order6set_idEy" (func $30))
(export "_ZN5eosio5order8set_sideEh" (func $31))
(export "_ZN5eosio5order8set_userEy" (func $32))
(export "_ZN5eosio5order17set_quantity_leftENS_5assetE" (func $33))
(export "_ZN5eosio5order12set_quantityENS_5assetE" (func $34))
(export "_ZN5eosio5order16set_cpu_bw_ratioENS_5assetE" (func $35))
(export "_ZN5eosio5order12set_durationENS_5assetE" (func $36))
(export "_ZN5eosio5order12set_interestENS_5assetE" (func $37))
(export "_ZN5eosio5order23set_order_creation_timeEy" (func $38))
(export "_ZNK5eosio5order8validateEv" (func $39))
(export "_ZNK5eosio9stakebook11primary_keyEv" (func $40))
(export "_ZNK5eosio9stakebook8get_userEv" (func $41))
(export "_ZNK5eosio9stakebook12get_quantityEv" (func $42))
(export "_ZNK5eosio9stakebook12get_durationEv" (func $43))
(export "_ZNK5eosio9stakebook23get_order_creation_timeEv" (func $44))
(export "_ZNK5eosio9stakebook13get_autorenewEv" (func $45))
(export "_ZN5eosio9stakebook6set_idEy" (func $46))
(export "_ZN5eosio9stakebook8set_userEy" (func $47))
(export "_ZN5eosio9stakebook12set_quantityERKNS_5assetE" (func $48))
(export "_ZN5eosio9stakebook12set_durationEy" (func $49))
(export "_ZN5eosio9stakebook23set_order_creation_timeEy" (func $50))
(export "_ZNK5eosio9stakebook18get_airdrop_tokensEv" (func $51))
(export "_ZN5eosio9stakebook18set_airdrop_tokensERKNSt3__16vectorINS_5assetENS1_9allocatorIS3_EEEE" (func $52))
(export "_ZN5eosio9stakebook10push_tokenERKNS_5assetE" (func $54))
(export "_ZN5eosio9stakebook13set_autorenewEb" (func $56))
(export "_ZNK5eosio9leasebook11primary_keyEv" (func $57))
(export "_ZNK5eosio9leasebook8get_userEv" (func $58))
(export "_ZNK5eosio9leasebook12get_quantityEv" (func $59))
(export "_ZNK5eosio9leasebook12get_durationEv" (func $60))
(export "_ZNK5eosio9leasebook23get_order_creation_timeEv" (func $61))
(export "_ZNK5eosio9leasebook13get_autorenewEv" (func $62))
(export "_ZN5eosio9leasebook6set_idEy" (func $63))
(export "_ZN5eosio9leasebook8set_userEy" (func $64))
(export "_ZN5eosio9leasebook12set_quantityERKNS_5assetE" (func $65))
(export "_ZN5eosio9leasebook12set_durationEy" (func $66))
(export "_ZN5eosio9leasebook23set_order_creation_timeEy" (func $67))
(export "_ZN5eosio9leasebook13set_autorenewEb" (func $68))
(export "_ZNK5eosio6usbook11primary_keyEv" (func $69))
(export "_ZNK5eosio6usbook8get_userEv" (func $70))
(export "_ZNK5eosio6usbook12get_quantityEv" (func $71))
(export "_ZNK5eosio6usbook12get_durationEv" (func $72))
(export "_ZNK5eosio6usbook23get_order_creation_timeEv" (func $73))
(export "_ZNK5eosio6usbook18get_airdrop_tokensEv" (func $74))
(export "_ZNK5eosio6usbook10get_activeEv" (func $75))
(export "_ZNK5eosio6usbook13get_autorenewEv" (func $76))
(export "_ZN5eosio6usbook6set_idEy" (func $77))
(export "_ZN5eosio6usbook8set_userEy" (func $78))
(export "_ZN5eosio6usbook12set_quantityERKNS_5assetE" (func $79))
(export "_ZN5eosio6usbook12set_durationEy" (func $80))
(export "_ZN5eosio6usbook23set_order_creation_timeEy" (func $81))
(export "_ZN5eosio6usbook13set_autorenewEb" (func $82))
(export "_ZNK5eosio6usbook17get_quantity_leftEv" (func $83))
(export "_ZNK5eosio6usbook12get_interestEv" (func $84))
(export "_ZN5eosio6usbook17set_quantity_leftERKNS_5assetE" (func $85))
(export "_ZN5eosio6usbook12set_interestEd" (func $86))
(export "_ZN5eosio6usbook10push_tokenERKNS_5assetE" (func $87))
(export "_ZN5eosio6usbook10set_activeEb" (func $88))
(export "_ZNK5eosio6ulbook11primary_keyEv" (func $89))
(export "_ZNK5eosio6ulbook8get_userEv" (func $90))
(export "_ZNK5eosio6ulbook12get_quantityEv" (func $91))
(export "_ZNK5eosio6ulbook12get_durationEv" (func $92))
(export "_ZNK5eosio6ulbook23get_order_creation_timeEv" (func $93))
(export "_ZNK5eosio6ulbook13get_autorenewEv" (func $94))
(export "_ZN5eosio6ulbook6set_idEy" (func $95))
(export "_ZN5eosio6ulbook8set_userEy" (func $96))
(export "_ZN5eosio6ulbook12set_quantityERKNS_5assetE" (func $97))
(export "_ZN5eosio6ulbook12set_durationEy" (func $98))
(export "_ZN5eosio6ulbook23set_order_creation_timeEy" (func $99))
(export "_ZNK5eosio6ulbook17get_quantity_leftEv" (func $100))
(export "_ZNK5eosio6ulbook12get_interestEv" (func $101))
(export "_ZNK5eosio6ulbook9get_ratioEv" (func $102))
(export "_ZNK5eosio6ulbook10get_activeEv" (func $103))
(export "_ZN5eosio6ulbook17set_quantity_leftERKNS_5assetE" (func $104))
(export "_ZN5eosio6ulbook12set_interestEd" (func $105))
(export "_ZN5eosio6ulbook9set_ratioEd" (func $106))
(export "_ZN5eosio6ulbook10set_activeEb" (func $107))
(export "_ZN5eosio6ulbook13set_autorenewEb" (func $108))
(export "_ZN5eosio17orderbook_managerC2Ey" (func $109))
(export "_ZN5eosio17orderbook_manager26get_fulfilled_stake_ordersEv" (func $110))
(export "_ZN5eosio17orderbook_manager26get_fulfilled_lease_ordersEv" (func $111))
(export "_ZN5eosio17orderbook_manager28get_unfulfilled_stake_ordersEv" (func $112))
(export "_ZN5eosio17orderbook_manager28get_unfulfilled_lease_ordersEv" (func $113))
(export "_ZN5eosio17orderbook_manager9add_orderEyyRKNS_5orderERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE" (func $114))
(export "_ZN5eosio17orderbook_manager23cancel_lease_order_userERKNS_6ulbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE" (func $136))
(export "_ZN5eosio17orderbook_manager18cancel_lease_orderERKNS_6ulbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE" (func $137))
(export "_ZN5eosio17orderbook_manager26cancel_lease_order_chintaiERKNS_9leasebookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE" (func $142))
(export "_ZN5eosio17orderbook_manager18cancel_lease_orderERKNS_9leasebookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE" (func $143))
(export "_ZN5eosio17orderbook_manager26cancel_lease_order_chintaiERKNS_6ulbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE" (func $145))
(export "_ZN5eosio17orderbook_manager23cancel_stake_order_userERKNS_6usbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE" (func $146))
(export "_ZN5eosio17orderbook_manager18cancel_stake_orderERKNS_6usbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE" (func $147))
(export "_ZN5eosio17orderbook_manager26cancel_stake_order_chintaiERKNS_9stakebookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE" (func $152))
(export "_ZN5eosio17orderbook_manager18cancel_stake_orderERKNS_9stakebookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE" (func $153))
(export "_ZN5eosio17orderbook_manager26cancel_stake_order_chintaiERKNS_6usbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE" (func $155))
(export "_ZNK5eosio6market11primary_keyEv" (func $156))
(export "_ZN5eosio7chintai11get_balanceEv" (func $157))
(export "_ZN5eosio7chintai9cdeferredEy" (func $161))
(export "_ZN5eosio7chintai4initEv" (func $162))
(export "_ZN5eosio7chintai9chinundelEyNS_5assetES1_yyyyb" (func $165))
(export "_ZN5eosio7chintai9liveundelEyNS_5assetES1_byyyy" (func $183))
(export "_ZN5eosio7chintai11processpoolEv" (func $191))
(export "_ZN5eosio7chintai6uninitEv" (func $197))
(export "_ZN5eosio7chintai6freezeEb" (func $200))
(export "_ZN5eosio7chintai11delaycancelEy" (func $201))
(export "_ZN5eosio7chintai13get_orderbookEv" (func $202))
(export "_ZN5eosio7chintai10chincancelEy" (func $203))
(export "_ZN5eosio7chintai12cancelordercEy" (func $207))
(export "_ZN5eosio7chintai11cancelorderEy" (func $208))
(export "_ZN5eosio7chintai10chinrefundEyNS_5assetEyy" (func $209))
(export "_ZN5eosio7chintai13fulfill_orderENS_5assetEyyyydydb" (func $214))
(export "_ZN5eosio7chintai13take_snapshotERKNS_5token13transfer_argsE" (func $217))
(export "_ZN5eosio7chintai16receive_transferERKNS_5token13transfer_argsE" (func $218))
(export "_ZN5eosio7chintai20transfer_lease_orderERNS_5orderE" (func $220))
(export "_ZN5eosio7chintai24fulfill_lease_from_leaseERNS_5orderERNS_6usbookE" (func $222))
(export "_ZN5eosio7chintai16make_lease_orderERNS_5orderE" (func $223))
(export "_ZN5eosio7chintai11changescopeEyb" (func $231))
(export "_ZN5eosio7chintai16make_stake_orderERNS_5orderE" (func $233))
(export "_ZN5eosio7chintai10make_orderENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $241))
(export "_ZN5eosio7chintai7prepareENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $242))
(export "_ZN5eosio7chintai8activateENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $251))
(export "_ZN5eosio7chintai11reminactiveEy" (func $252))
(export "_ZN5eosio7chintai2onERKNS_5token13transfer_argsEy" (func $253))
(export "_ZNK5eosio7chintai13get_orderbookEv" (func $254))
(export "_ZN5eosio7chintai14get_extensionsERKNS_11transactionE" (func $255))
(export "_ZN5eosio7chintai10extensionsEylyybNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $258))
(export "_ZN5eosio7chintai17update_extensionsERNS_11transactionENS0_22transaction_extensionsEb" (func $259))
(export "_ZN5eosio7chintai13apply_onerrorERKNS_7onerrorE" (func $261))
(export "apply" (func $262))
(export "malloc" (func $288))
(export "free" (func $291))
(export "_ZNSt3__19to_stringEi" (func $311))
(export "_ZNSt3__19to_stringEx" (func $314))
(export "_ZNSt3__19to_stringEy" (func $315))
(export "pow" (func $319))
(export "sqrt" (func $320))
(export "fabs" (func $321))
(export "scalbn" (func $322))
(export "snprintf" (func $323))
(export "vsnprintf" (func $324))
(export "__errno_location" (func $326))
(export "vfprintf" (func $327))
(export "__lockfile" (func $329))
(export "__unlockfile" (func $330))
(export "__fwritex" (func $331))
(export "strerror" (func $333))
(export "strnlen" (func $334))
(export "wctomb" (func $335))
(export "__signbitl" (func $336))
(export "__fpclassifyl" (func $337))
(export "frexpl" (func $338))
(export "wcrtomb" (func $339))
(export "memchr" (func $340))
(export "__lctrans" (func $341))
(export "__lctrans_impl" (func $342))
(export "__mo_lookup" (func $343))
(export "strcmp" (func $344))
(export "__towrite" (func $345))
(export "memcmp" (func $346))
(export "strlen" (func $347))
(table $0 20 20 anyfunc)
(elem (i32.const 0) $348 $162 $242 $161 $201 $209 $208 $258 $200 $183 $207 $252 $165 $191 $231 $251 $197 $325 $16 $17)



void .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [32])
	*([0] + [4]) = $12
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]) + [8])
	$2 = *($0)
	$9 = *($3 + [4])
	*(($4 = (($11 = $12) + [20]))) = *(($9 + [36]))
	*(($5 = ($11 + [16]))) = *(($9 + [32]))
	*($11 + [8]) = *($9 + [24])
	*($11 + [12]) = *(($9 + [28]))
	*(($1 + [24])) = *($5)
	*($1 + [16]) = *($11 + [8])
	*($1 + [32]) = *(*($3 + [4]) + [80])
	*($1 + [40]) = *(*($3 + [4]) + [72])
	$6 = *($3 + [4])
	*($4) = *(($6 + [52]))
	$9 = [48]
	*($5) = *(($6 + [48]))
	*($11 + [8]) = *($6 + [40])
	*($11 + [12]) = *(($6 + [44]))
	*(($1 + [72])) = *($5)
	*($1 + [64]) = *($11 + [8])
	$3 = *($3 + [4])
	$10 = *($3 + [56])
	$7 = *($3 + [24])
	*($1 + [88]) = [0]
	*($1 + [80]) = ((float_64)(CASTING float_64)(int_64 $10) / (float_64)(CASTING float_64)(int_64 $7))
	$5 = *($1 + [48])
	$3 = *(($1 + [52]))
	$6 = ($3 - $5)
	$10 = (CASTING uint_64)(uint_32 int_32($6 >> [4]))
	
.LOOP $label$1:
	$9 = ($9 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$9 = (($6 & [-16]) + $9)
	
.LABEL $label$2
	$3 = ($9 + [26])
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($12 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($11 + [12]) = $9
	*($11 + [8]) = $9
	*($11 + [16]) = ($9 + $3)
	CALL $128(($11 + [8]), $1)
	$10 = *($1)
	*($1 + [96]) = CALL db_store_i64(*($2 + [8]), (int_64)-3012230666864558080, *(*($0 + [8])), $10, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($10 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$9 = ($2 + [8])
	$10 = *($9)
	$3 = *(($0 + [8]))
	$7 = *($3)
	$8 = *($1)
	*($11 + [24]) = *(($1 + [80]))
	*($1 + [100]) = CALL db_idx_double_store($10, (int_64)-3012230666864558080, $7, $8, ($11 + [24]))
	$10 = *($3)
	$7 = *($9)
	$8 = *($1)
	*($11 + [24]) = *(($1 + [32]))
	*(($1 + [104])) = CALL db_idx64_store($7, (int_64)-3012230666864558079, $10, $8, ($11 + [24]))
	$10 = *($3)
	$7 = *($9)
	$8 = *($1)
	*($11 + [24]) = *(($1 + [40]))
	*(($1 + [108])) = CALL db_idx64_store($7, (int_64)-3012230666864558078, $10, $8, ($11 + [24]))
	*([0] + [4]) = ($11 + [32])
}

int_32 .FUNC $120 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1397703940
	CALL eosio_assert([1], [16])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [80])
	*(($0 + [56])) = [0]
	*($0 + [48 align=4]) = (int_64)0
	*($0 + [64]) = (int_64)0
	*(($2 = ($0 + [72]))) = (int_64)1397703940
	CALL eosio_assert([1], [16])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [80])
	return $0
}

int_32 .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $189 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	$9 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $9) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[40])
	if ( ((uint_32)$9 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($9 << [1])
	$7 = ( $6 ? $9 : ($9 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $295(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	*(($9 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($9 + [8]) = *($3)
	*($9 + [16 align=4]) = (int_64)0
	*(($3 = ($9 + [24]))) = [0]
	$2 = CALL $295([16])
	*($9 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($9 + [20])) = $5
	*($9 + [28]) = [0]
	*(($5 = ($9 + [32]))) = [0]
	*(($9 + [36])) = [0]
	$2 = *($4 + [36])
	$1 = ( *(($4 + [40])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($1 + [29])
	$8 = (CASTING uint_64)(uint_32 $1)
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$1 = ($9 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $167($1, $2)
	$7 = *($5)
	$2 = *($1)
	goto $label$6 
	
.LABEL $label$7
	$7 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($10 + [4]) = $2
	*($10) = $2
	*($10 + [8]) = $7
	CALL $186($10, $4)
	$5 = ($9 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$9 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$10:
	*(($9 + [-32])) = *(($2 + [-12]))
	*(($9 + [-40])) = *(($2 + [-20]))
	*(($1 = ($9 + [-24]))) = (int_64)0
	*(($4 = ($9 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($9 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($4) = *($1)
	*($1) = [0]
	*(($1 = ($9 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($4 = ($9 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($9 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($4) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$9 = ($9 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($0) = $9
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$11 }
	$1 = ([0] - $4)
	$9 = ($2 + [-24])
	
.LOOP $label$12:
	$2 = *(($9 + [12]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($9 + [16])) = $2
	CALL $297($2)
	
.LABEL $label$13
	$2 = *($9)
	if ( ($2 == 0) ){ goto $label$14 }
	*(($9 + [4])) = $2
	CALL $297($2)
	
.LABEL $label$14
	$9 = ($9 + [-40])
	if ( ((int_32)($9 + $1) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $297($4)
	
.LABEL $label$15
	*([0] + [4]) = ($10 + [16])
	(unreachable)
}

void .FUNC $188 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $295(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $295([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $167(($8 + [28]), [41])
	$2 = *($2)
	$1 = *($8 + [28])
	*($9 + [4]) = $1
	*($9) = $1
	*($9 + [8]) = $2
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	CALL $187(($9 + [24]), ($9 + [16]))
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $297($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $297($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $297($6)
	
.LABEL $label$12
	*([0] + [4]) = ($9 + [32])
	(unreachable)
}

void .FUNC _ZN5eosio9stakebook12set_durationEy (int_32 $0, int_64 $1)
{
	*($0 + [32]) = $1
}

void .FUNC _ZN5eosio9stakebook12set_quantityERKNS_5assetE (int_32 $0, int_32 $1)
{
	*($0 + [16]) = *($1)
	*(($0 + [24])) = *(($1 + [8]))
}

void .FUNC $264 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = [0]
	*($0 + [16 align=4]) = (int_64)0
	*($3 + [8]) = ($2 + $1)
	*($3) = $2
	CALL eosio_assert(((uint_32)$1 > (uint_32)[15]), [1248])
	CALL memcpy($0, $2, [16])
	*($3 + [4]) = ($2 + [16])
	CALL $247($3, ($0 + [16]))
	if ( ($1 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $265 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *([0] + [4])
	$3 = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	CALL $286($0, $2, $1)
	if ( ($1 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = $3
}

int_32 .FUNC $266 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

int_32 .FUNC $267 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [1248])
	CALL memcpy(($5 + [15]), $3, [1])
	$6 = *($5 + [15])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 ((int_32)($6 & [255]) != (int_32)[0])), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

int_64 .FUNC _ZNK5eosio9stakebook12get_durationEv (int_32 $0)
{
	return *($0 + [32])
}

void .FUNC _ZNK5eosio9stakebook12get_quantityEv (int_32 $0, int_32 $1)
{
	*($0) = *($1 + [16])
	*(($0 + [8])) = *(($1 + [24]))
}

int_64 .FUNC _ZNK5eosio9stakebook8get_userEv (int_32 $0)
{
	return *($0 + [8])
}

int_64 .FUNC _ZNK5eosio9stakebook11primary_keyEv (int_32 $0)
{
	return *($0)
}

void .FUNC _ZN5eosio9stakebook8set_userEy (int_32 $0, int_64 $1)
{
	*($0 + [8]) = $1
}

void .FUNC _ZN5eosio9stakebook6set_idEy (int_32 $0, int_64 $1)
{
	*($0) = $1
}

int_32 .FUNC _ZNK5eosio9stakebook13get_autorenewEv (int_32 $0)
{
	return *($0 + [60])
}

int_64 .FUNC _ZNK5eosio9stakebook23get_order_creation_timeEv (int_32 $0)
{
	return *($0 + [40])
}

void .FUNC $167 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $295($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $316($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $297($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_64 .FUNC $166 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = *(($0 + [28]))
	if ( ((int_32)$2 == (int_32)*($0 + [24])) ){ goto $label$2 }
	$2 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)$0), [752])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	$1 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5969209044777304064, (int_64)-5969209044777304064)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $181($0, $1)
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)$0), [752])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [1664])
	return *($2)
}

void .FUNC _ZN5eosio7chintai9chinundelEyNS_5assetES1_yyyyb (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_64 $5, int_64 $6, int_64 $7, int_32 $8)
{
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	$19 = (*([0] + [4]) - [144])
	*([0] + [4]) = $19
	CALL require_auth(*($0))
	$16 = (int_64)0
	$11 = ($0 + [352])
	$10 = ($0 + [316])
	$9 = (int_64)
	if ( ((int_64)$9(CALL $166(($0 + [440])) - ((int_64)((uint_64)CALL $fimport$16() / (uint_64)(int_64)1000000) & (int_64)4294967295))) <= (int_64)0) ){ goto $label$6 }
	$12 = *($0)
	$15 = (int_64)59
	$14 = [1616]
	$18 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$12 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$13 = ($13 + [165])
	goto $label$10 
	
.LABEL $label$12
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$8
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$7 }
	*($19 + [104]) = $18
	*($19 + [96]) = $12
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1648]
	$18 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$16 > (uint_64)(int_64)8) ){ goto $label$18 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$13 = ($13 + [165])
	goto $label$16 
	
.LABEL $label$18
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$14
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$13 }
	*($19 + [88]) = $18
	*(($19 + [20])) = *(($2 + [12]))
	*(($19 + [16])) = *(($2 + [8]))
	*(($19 + [12])) = *(($2 + [4]))
	*($19) = $1
	*($19 + [8]) = *($2)
	*(($19 + [32])) = *(($3 + [8]))
	*($19 + [24]) = *($3)
	*($19 + [40]) = $8
	*($19 + [48]) = $7
	*($19 + [56]) = $5
	*($19 + [64]) = $4
	*($19 + [72]) = $6
	$13 = ($0 + [356])
	$14 = *($13)
	if ( ((uint_32)$14 >= (uint_32)*(($0 + [360]))) ){ goto $label$5 }
	*($14 + [8]) = $18
	*($14) = $12
	*($14 + [16 align=4]) = (int_64)0
	*(($3 = ($14 + [24]))) = [0]
	$2 = CALL $295([16])
	*($14 + [16]) = $2
	$8 = ($2 + [16])
	*($3) = $8
	*(($2 + [8])) = *((($19 + [96]) + [8]))
	*($2) = *($19 + [96])
	*(($14 + [20])) = $8
	*($14 + [28]) = [0]
	*(($2 = ($14 + [32]))) = [0]
	*(($14 + [36])) = [0]
	CALL $167(($14 + [28]), [73])
	$2 = *($2)
	$14 = *($14 + [28])
	*($19 + [116]) = $14
	*($19 + [112]) = $14
	*($19 + [120]) = $2
	*($19 + [128]) = ($19 + [112])
	*($19 + [136]) = $19
	CALL $171(($19 + [136]), ($19 + [128]))
	*($13) = (*($13) + [40])
	goto $label$4 
	
.LABEL $label$6
	$9 = *($0)
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1616]
	$18 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$24 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$13 = ($13 + [165])
	goto $label$22 
	
.LABEL $label$24
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$20
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$19 }
	*($19 + [104]) = $18
	*($19 + [96]) = $9
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1632]
	$18 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$16 > (uint_64)(int_64)8) ){ goto $label$30 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$13 = ($13 + [165])
	goto $label$28 
	
.LABEL $label$30
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$26
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$25 }
	*($19 + [88]) = $18
	*(($19 + [20])) = *(($2 + [12]))
	*(($19 + [16])) = *(($2 + [8]))
	*(($19 + [12])) = *(($2 + [4]))
	*($19) = $1
	*($19 + [8]) = *($2)
	*(($19 + [32])) = *(($3 + [8]))
	*($19 + [24]) = *($3)
	*($19 + [40]) = $4
	*($19 + [48]) = $5
	*($19 + [56]) = $6
	*($19 + [64]) = $7
	*($19 + [72]) = $8
	$2 = ($0 + [356])
	$14 = *($2)
	if ( ((uint_32)$14 >= (uint_32)*(($0 + [360]))) ){ goto $label$3 }
	*($14 + [8]) = $18
	*($14) = $9
	*($14 + [16 align=4]) = (int_64)0
	*(($3 = ($14 + [24]))) = [0]
	$13 = CALL $295([16])
	*($14 + [16]) = $13
	$8 = ($13 + [16])
	*($3) = $8
	*(($13 + [8])) = *((($19 + [96]) + [8]))
	*($13) = *($19 + [96])
	*(($14 + [20])) = $8
	*($14 + [28]) = [0]
	*(($13 = ($14 + [32]))) = [0]
	*(($14 + [36])) = [0]
	CALL $167(($14 + [28]), [73])
	$13 = *($13)
	$14 = *($14 + [28])
	*($19 + [116]) = $14
	*($19 + [112]) = $14
	*($19 + [120]) = $13
	*($19 + [128]) = ($19 + [112])
	*($19 + [136]) = $19
	CALL $168(($19 + [136]), ($19 + [128]))
	*($2) = (*($2) + [40])
	goto $label$2 
	
.LABEL $label$5
	CALL $172($11, ($19 + [96]), $0, ($19 + [88]), $19)
	
.LABEL $label$4
	*(($0 + [336])) = $9
	*($19 + [8]) = (int_64)0
	*($19) = ((int_64)((int_64)$4 + (int_64)$5) + (int_64)5)
	$16 = *($0)
	CALL $170(($19 + [96]), $10)
	$14 = *($19 + [96])
	CALL send_deferred($19, $16, $14, (*($19 + [100]) - $14), [0])
	$14 = *($19 + [96])
	if ( ($14 == 0) ){ goto $label$1 }
	*($19 + [100]) = $14
	CALL $297($14)
	goto $label$1 
	
.LABEL $label$3
	CALL $169($11, ($19 + [96]), $0, ($19 + [88]), $19)
	
.LABEL $label$2
	*(($0 + [336])) = [3600]
	*($19 + [8]) = (int_64)0
	*($19) = ((int_64)((int_64)$4 + (int_64)$5) + (int_64)10)
	$16 = *($0)
	CALL $170(($19 + [96]), $10)
	$14 = *($19 + [96])
	CALL send_deferred($19, $16, $14, (*($19 + [100]) - $14), [0])
	$14 = *($19 + [96])
	if ( ($14 == 0) ){ goto $label$1 }
	*($19 + [100]) = $14
	CALL $297($14)
	
.LABEL $label$1
	*([0] + [4]) = ($19 + [144])
}

void .FUNC $164 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $295(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $297($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $297($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $163 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1216])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $295([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1248])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [1248])
	CALL memcpy(($8 + [16]), ($7 + [8]), [1])
	*($6 + [8]) = ((int_32)*($8 + [16]) != (int_32)[0])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $164(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $297($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN5eosio7chintai4initEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	*([0] + [4]) = $9
	CALL eosio_assert(CALL $fimport$36(*($0)), [1584])
	$2 = *(($0 + [200]))
	$8 = *(($0 + [204]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)604800) ){ goto $label$1 }
	$8 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [176])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)$1), [752])
	if ( $7 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$7 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, (int_64)604800)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*(CALL $123($1, $7) + [48]) == (int_32)$1), [752])
	goto $label$3 
	
.LABEL $label$4
	$6 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [176])) == (int_64)CALL $fimport$15()), [912])
	$7 = CALL $295([64])
	$4 = CALL $125($7)
	*($7 + [48]) = $1
	*($7 + [16]) = (int_64)0
	*($7) = (int_64)604800
	*($7 + [32]) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($9 + [56]) = ($9 + [48])
	*($9 + [52]) = $9
	*($9 + [48]) = $9
	CALL $124(($9 + [48]), $4)
	$5 = *($7)
	$8 = CALL db_store_i64(*(($0 + [184])), (int_64)-7949128890230767616, $6, $5, $9, [48])
	*($7 + [52]) = $8
	$4 = ($0 + [192])
	if ( (uint_64)($5 <= *($4)) ){ goto $label$6 }
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($9 + [48]) = $7
	$5 = *($7)
	*($9) = $5
	*($9 + [60]) = $8
	$3 = ($0 + [204])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [208]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $8
	*($9 + [48]) = [0]
	*($4) = $7
	*($3) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $127(($0 + [200]), ($9 + [48]), $9, ($9 + [60]))
	
.LABEL $label$7
	$7 = *($9 + [48])
	*($9 + [48]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $297($7)
	
.LABEL $label$3
	$2 = *(($0 + [200]))
	$8 = *(($0 + [204]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$9 }
	$7 = ($8 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$10:
	if ( ((int_64)*(*($7)) == (int_64)1209600) ){ goto $label$9 }
	$8 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$13 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)$1), [752])
	if ( $7 ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	$7 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, (int_64)1209600)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert(((int_32)*(CALL $123($1, $7) + [48]) == (int_32)$1), [752])
	goto $label$11 
	
.LABEL $label$12
	$6 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [176])) == (int_64)CALL $fimport$15()), [912])
	$7 = CALL $295([64])
	$4 = CALL $125($7)
	*($7 + [48]) = $1
	*($7 + [16]) = (int_64)0
	*($7) = (int_64)1209600
	*($7 + [32]) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($9 + [56]) = ($9 + [48])
	*($9 + [52]) = $9
	*($9 + [48]) = $9
	CALL $124(($9 + [48]), $4)
	$5 = *($7)
	$8 = CALL db_store_i64(*(($0 + [184])), (int_64)-7949128890230767616, $6, $5, $9, [48])
	*($7 + [52]) = $8
	$4 = ($0 + [192])
	if ( (uint_64)($5 <= *($4)) ){ goto $label$14 }
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	*($9 + [48]) = $7
	$5 = *($7)
	*($9) = $5
	*($9 + [60]) = $8
	$3 = ($0 + [204])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [208]))) ){ goto $label$16 }
	*($4 + [8]) = $5
	*($4 + [16]) = $8
	*($9 + [48]) = [0]
	*($4) = $7
	*($3) = ($4 + [24])
	goto $label$15 
	
.LABEL $label$16
	CALL $127(($0 + [200]), ($9 + [48]), $9, ($9 + [60]))
	
.LABEL $label$15
	$7 = *($9 + [48])
	*($9 + [48]) = [0]
	if ( ($7 == 0) ){ goto $label$11 }
	CALL $297($7)
	
.LABEL $label$11
	$2 = *(($0 + [200]))
	$8 = *(($0 + [204]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$17 }
	$7 = ($8 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$18:
	if ( ((int_64)*(*($7)) == (int_64)1814400) ){ goto $label$17 }
	$8 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$21 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)$1), [752])
	if ( $7 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$21
	$7 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, (int_64)1814400)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$20 }
	CALL eosio_assert(((int_32)*(CALL $123($1, $7) + [48]) == (int_32)$1), [752])
	goto $label$19 
	
.LABEL $label$20
	$6 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [176])) == (int_64)CALL $fimport$15()), [912])
	$7 = CALL $295([64])
	$4 = CALL $125($7)
	*($7 + [48]) = $1
	*($7 + [16]) = (int_64)0
	*($7) = (int_64)1814400
	*($7 + [32]) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($9 + [56]) = ($9 + [48])
	*($9 + [52]) = $9
	*($9 + [48]) = $9
	CALL $124(($9 + [48]), $4)
	$5 = *($7)
	$8 = CALL db_store_i64(*(($0 + [184])), (int_64)-7949128890230767616, $6, $5, $9, [48])
	*($7 + [52]) = $8
	$4 = ($0 + [192])
	if ( (uint_64)($5 <= *($4)) ){ goto $label$22 }
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	*($9 + [48]) = $7
	$5 = *($7)
	*($9) = $5
	*($9 + [60]) = $8
	$3 = ($0 + [204])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [208]))) ){ goto $label$24 }
	*($4 + [8]) = $5
	*($4 + [16]) = $8
	*($9 + [48]) = [0]
	*($4) = $7
	*($3) = ($4 + [24])
	goto $label$23 
	
.LABEL $label$24
	CALL $127(($0 + [200]), ($9 + [48]), $9, ($9 + [60]))
	
.LABEL $label$23
	$7 = *($9 + [48])
	*($9 + [48]) = [0]
	if ( ($7 == 0) ){ goto $label$19 }
	CALL $297($7)
	
.LABEL $label$19
	$2 = *(($0 + [200]))
	$8 = *(($0 + [204]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$25 }
	$7 = ($8 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$26:
	if ( ((int_64)*(*($7)) == (int_64)2419200) ){ goto $label$25 }
	$8 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$26 }
	
.LABEL $label$25
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$29 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)$1), [752])
	if ( $7 ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$29
	$7 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, (int_64)2419200)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$28 }
	CALL eosio_assert(((int_32)*(CALL $123($1, $7) + [48]) == (int_32)$1), [752])
	goto $label$27 
	
.LABEL $label$28
	$6 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [176])) == (int_64)CALL $fimport$15()), [912])
	$7 = CALL $295([64])
	$4 = CALL $125($7)
	*($7 + [48]) = $1
	*($7 + [16]) = (int_64)0
	*($7) = (int_64)2419200
	*($7 + [32]) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($9 + [56]) = ($9 + [48])
	*($9 + [52]) = $9
	*($9 + [48]) = $9
	CALL $124(($9 + [48]), $4)
	$5 = *($7)
	$8 = CALL db_store_i64(*(($0 + [184])), (int_64)-7949128890230767616, $6, $5, $9, [48])
	*($7 + [52]) = $8
	$4 = ($0 + [192])
	if ( (uint_64)($5 <= *($4)) ){ goto $label$30 }
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$30
	*($9 + [48]) = $7
	$5 = *($7)
	*($9) = $5
	*($9 + [60]) = $8
	$3 = ($0 + [204])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [208]))) ){ goto $label$32 }
	*($4 + [8]) = $5
	*($4 + [16]) = $8
	*($9 + [48]) = [0]
	*($4) = $7
	*($3) = ($4 + [24])
	goto $label$31 
	
.LABEL $label$32
	CALL $127(($0 + [200]), ($9 + [48]), $9, ($9 + [60]))
	
.LABEL $label$31
	$7 = *($9 + [48])
	*($9 + [48]) = [0]
	if ( ($7 == 0) ){ goto $label$27 }
	CALL $297($7)
	
.LABEL $label$27
	$1 = *(($0 + [240]))
	$8 = *(($0 + [244]))
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$33 }
	$7 = ($8 + [-24])
	$3 = ([0] - $1)
	
.LOOP $label$34:
	if ( (int_64)(*(*($7)) == 0) ){ goto $label$33 }
	$8 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$34 }
	
.LABEL $label$33
	$4 = ($0 + [216])
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$37 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$4), [752])
	if ( $7 ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$37
	$7 = CALL db_find_i64(*(($0 + [216])), *(($0 + [224])), (int_64)6761222076679323648, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$36 }
	CALL eosio_assert(((int_32)*(CALL $163($4, $7) + [16]) == (int_32)$4), [752])
	goto $label$35 
	
.LABEL $label$36
	$6 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [216])) == (int_64)CALL $fimport$15()), [912])
	*(($7 = CALL $295([32])) + [16]) = $4
	*($7 + [8]) = [0]
	*($7) = (int_64)0
	CALL eosio_assert([1], [1200])
	CALL memcpy($9, $7, [8])
	*($9 + [48]) = *($7 + [8])
	CALL eosio_assert([1], [1200])
	CALL memcpy(($9 | [8]), ($9 + [48]), [1])
	$5 = *($7)
	$8 = CALL db_store_i64(*(($0 + [224])), (int_64)6761222076679323648, $6, $5, $9, [9])
	*($7 + [20]) = $8
	$4 = ($0 + [232])
	if ( (uint_64)($5 <= *($4)) ){ goto $label$38 }
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$38
	*($9 + [48]) = $7
	$5 = *($7)
	*($9) = $5
	*($9 + [60]) = $8
	$3 = ($0 + [244])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [248]))) ){ goto $label$40 }
	*($4 + [8]) = $5
	*($4 + [16]) = $8
	*($9 + [48]) = [0]
	*($4) = $7
	*($3) = ($4 + [24])
	goto $label$39 
	
.LABEL $label$40
	CALL $164(($0 + [240]), ($9 + [48]), $9, ($9 + [60]))
	
.LABEL $label$39
	$7 = *($9 + [48])
	*($9 + [48]) = [0]
	if ( ($7 == 0) ){ goto $label$35 }
	CALL $297($7)
	
.LABEL $label$35
	*([0] + [4]) = ($9 + [64])
}

void .FUNC _ZN5eosio7chintai9cdeferredEy (int_32 $0, int_64 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	CALL eosio_assert(CALL $fimport$36(*($0)), [1584])
	*($2 + [8]) = (int_64)0
	*($2) = $1
	CALL cancel_deferred($2)
	*([0] + [4]) = ($2 + [16])
}

void .FUNC $160 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $295(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $297($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $297($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN5eosio9leasebook23set_order_creation_timeEy (int_32 $0, int_64 $1)
{
	*($0 + [40]) = $1
}

void .FUNC $169 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $295(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $295([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $167(($8 + [28]), [73])
	$2 = *($2)
	$1 = *($8 + [28])
	*($9 + [4]) = $1
	*($9) = $1
	*($9 + [8]) = $2
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	CALL $168(($9 + [24]), ($9 + [16]))
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $297($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $297($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $297($6)
	
.LABEL $label$12
	*([0] + [4]) = ($9 + [32])
	(unreachable)
}

void .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [40]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	*($4 + [8]) = $0
	CALL $180(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC _ZN5eosio9leasebook12set_durationEy (int_32 $0, int_64 $1)
{
	*($0 + [32]) = $1
}

int_64 .FUNC _ZNK5eosio9leasebook23get_order_creation_timeEv (int_32 $0)
{
	return *($0 + [40])
}

int_64 .FUNC _ZNK5eosio9leasebook12get_durationEv (int_32 $0)
{
	return *($0 + [32])
}

void .FUNC _ZN5eosio9leasebook6set_idEy (int_32 $0, int_64 $1)
{
	*($0) = $1
}

void .FUNC _ZN5eosio7chintai10make_orderENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [208])
	*([0] + [4]) = $9
	CALL $318(($9 + [48]), $1)
	$2 = CALL _ZN5eosio5orderC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(($9 + [64]), ($9 + [48]))
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$1 }
	CALL $297(*($9 + [56]))
	
.LABEL $label$1
	CALL eosio_assert((CALL $39($2) == 0), [2512])
	CALL require_auth(*($2 + [8]))
	$1 = *($2 + [16])
	if ( ($1 == 0) ){ goto $label$12 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$11 }
	*($9 + [24]) = (int_64)-1
	$1 = [0]
	*($9 + [32]) = [0]
	$3 = *($0)
	*($9 + [8]) = $3
	$8 = *($2 + [80])
	*($9 + [16]) = $8
	*(($6 = ($9 + [36]))) = [0]
	*(($9 + [40])) = [0]
	*(($9 + [46])) = [0]
	*($9 + [44]) = [0]
	$7 = CALL db_find_i64($3, $8, (int_64)-3012230666864558080, *($2))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert(((int_32)*(CALL $148(($9 + [8]), $7) + [92]) == (int_32)($9 + [8])), [752])
	$1 = [1]
	
.LABEL $label$13
	CALL eosio_assert($1, [3232])
	$3 = *($2)
	$4 = *(($9 + [32]))
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$14 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$15:
	if ( ((int_64)*(*($1)) == (int_64)$3) ){ goto $label$14 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$15 }
	
.LABEL $label$14
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$10 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*(($1 + [92])) == (int_32)($9 + [8])), [752])
	goto $label$9 
	
.LABEL $label$12
	*($9 + [24]) = (int_64)-1
	$1 = [0]
	*($9 + [32]) = [0]
	$3 = *($0)
	*($9 + [8]) = $3
	$8 = *($2 + [80])
	*($9 + [16]) = $8
	*(($6 = ($9 + [36]))) = [0]
	*(($9 + [40])) = [0]
	*(($9 + [46])) = [0]
	*($9 + [44]) = [0]
	$7 = CALL db_find_i64($3, $8, (int_64)-3146771307685740544, *($2))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$16 }
	CALL eosio_assert(((int_32)*(CALL $138(($9 + [8]), $7) + [96]) == (int_32)($9 + [8])), [752])
	$1 = [1]
	
.LABEL $label$16
	CALL eosio_assert($1, [3232])
	$3 = *($2)
	$4 = *(($9 + [32]))
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$17 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$18:
	if ( ((int_64)*(*($1)) == (int_64)$3) ){ goto $label$17 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)($9 + [8])), [752])
	goto $label$7 
	
.LABEL $label$11
	CALL eosio_assert([0], [2768])
	goto $label$2 
	
.LABEL $label$10
	$1 = CALL $148(($9 + [8]), CALL $fimport$17(*($9 + [8]), *(($9 + [16])), (int_64)-3012230666864558080, $3))
	CALL eosio_assert(((int_32)*($1 + [92]) == (int_32)($9 + [8])), [752])
	
.LABEL $label$9
	CALL eosio_assert(*($1 + [88]), [3360])
	$5 = *($9 + [32])
	if ( ($5 == 0) ){ goto $label$2 }
	$4 = ($9 + [36])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$19:
	$1 = ($1 + [-24])
	$6 = *($1)
	*($1) = [0]
	if ( ($6 == 0) ){ goto $label$20 }
	$7 = *($6 + [48])
	if ( ($7 == 0) ){ goto $label$21 }
	*(($6 + [52])) = $7
	CALL $297($7)
	
.LABEL $label$21
	CALL $297($6)
	
.LABEL $label$20
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$19 }
	$1 = *(($9 + [32]))
	goto $label$5 
	
.LABEL $label$8
	$1 = CALL $138(($9 + [8]), CALL $fimport$17(*($9 + [8]), *(($9 + [16])), (int_64)-3146771307685740544, $3))
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)($9 + [8])), [752])
	
.LABEL $label$7
	CALL eosio_assert(*($1 + [80]), [3360])
	$7 = *($9 + [32])
	if ( ($7 == 0) ){ goto $label$2 }
	$5 = ($9 + [36])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$22:
	$1 = ($1 + [-24])
	$6 = *($1)
	*($1) = [0]
	if ( ($6 == 0) ){ goto $label$23 }
	CALL $297($6)
	
.LABEL $label$23
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$22 }
	$1 = *(($9 + [32]))
	goto $label$3 
	
.LABEL $label$6
	$1 = $5
	
.LABEL $label$5
	*($4) = $5
	CALL $297($1)
	goto $label$2 
	
.LABEL $label$4
	$1 = $7
	
.LABEL $label$3
	*($5) = $7
	CALL $297($1)
	
.LABEL $label$2
	$1 = *(($2 + [16]))
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$26 }
	if ( $1 ){ goto $label$25 }
	CALL _ZN5eosio7chintai16make_lease_orderERNS_5orderE($0, $2)
	goto $label$24 
	
.LABEL $label$26
	CALL _ZN5eosio7chintai16make_stake_orderERNS_5orderE($0, $2)
	goto $label$24 
	
.LABEL $label$25
	CALL eosio_assert([0], [3472])
	
.LABEL $label$24
	*([0] + [4]) = ($9 + [208])
}

void .FUNC _ZN5eosio6usbook10push_tokenERKNS_5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = ($0 + [52])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)*(($0 + [56]))) ){ goto $label$1 }
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*($3) = (*($3) + [16])
	return 
	
.LABEL $label$1
	CALL $55(($0 + [48]), $1)
}

int_64 .FUNC _ZNK5eosio6usbook11primary_keyEv (int_32 $0)
{
	return *($0)
}

void .FUNC _ZN5eosio9leasebook13set_autorenewEb (int_32 $0, int_32 $1)
{
	*($0 + [48]) = $1
}

void .FUNC $248 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)((int_32)($8 - $7) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($7 - $4) / (int_32)[40])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$3 }
	$7 = [107374182]
	$8 = ((int_32)($8 - $4) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$6 }
	$7 = ($8 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$8 = CALL $295(((int_32)$7 * (int_32)[40]))
	goto $label$2 
	
.LABEL $label$5
	$8 = ($0 + [4])
	
.LOOP $label$7:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = (*($8) + [40])
	*($8) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $316($0)
	
.LABEL $label$2
	$2 = ($8 + ((int_32)$7 * (int_32)[40]))
	$8 = ($8 + ((int_32)$5 * (int_32)[40]))
	$7 = $8
	
.LOOP $label$8:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = ($7 + [40])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$10 }
	$3 = ([0] - $4)
	$1 = ($1 + [-20])
	
.LOOP $label$11:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($4 = ($8 + [-24]))) = (int_64)0
	*(($5 = ($8 + [-16]))) = [0]
	$6 = ($1 + [-4])
	*($4) = *($6)
	*(($8 + [-20])) = *($1)
	$4 = ($1 + [4])
	*($5) = *($4)
	*($4) = [0]
	*(($4 = ($8 + [-12]))) = (int_64)0
	*($6) = (int_64)0
	*(($5 = ($8 + [-4]))) = [0]
	$6 = ($1 + [8])
	*($4) = *($6)
	*(($8 + [-8])) = *(($1 + [12]))
	$4 = ($1 + [16])
	*($5) = *($4)
	*($4) = [0]
	*($6) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$11 }
	$4 = *(($0 + [4]))
	$5 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$5 = $4
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $7
	*(($0 + [8])) = $2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$12 }
	$1 = ([0] - $5)
	$7 = ($4 + [-24])
	
.LOOP $label$13:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$14 }
	*(($7 + [16])) = $8
	CALL $297($8)
	
.LABEL $label$14
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$15 }
	*(($7 + [4])) = $8
	CALL $297($8)
	
.LABEL $label$15
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $1) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$1 }
	CALL $297($5)
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $249 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [1264])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $250($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [1248])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [1248])
	CALL memcpy(($7 + [8]), *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $246 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)int_32(($8 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$4 = int_32(($7 - $5) >> [4])
	$7 = ($4 + $1)
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$8 = ($8 - $5)
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($8 >> [3])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$8 = CALL $295(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $7
	$8 = $1
	
.LOOP $label$7:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$7 }
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $316($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$2 = ($8 + ($6 << [4]))
	$8 = ($8 + ($4 << [4]))
	$6 = $8
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$3 = ($8 + ($1 << [4]))
	$6 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$10 }
	$4 = ([0] - $6)
	$6 = ($7 + [-16])
	
.LOOP $label$11:
	*(($8 + [-16])) = *($6)
	*(($7 = ($8 + [-12]))) = (int_64)0
	*(($1 = ($8 + [-4]))) = [0]
	$5 = ($6 + [4])
	*($7) = *($5)
	*(($8 + [-8])) = *(($6 + [8]))
	$7 = ($6 + [12])
	*($1) = *($7)
	*($7) = [0]
	*($5) = (int_64)0
	$8 = ($8 + [-16])
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $4) != (int_32)[-16]) ){ goto $label$11 }
	$6 = *(($0 + [4]))
	$1 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$1 = $6
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$12 }
	$7 = ([0] - $1)
	$6 = ($6 + [-12])
	
.LOOP $label$13:
	$8 = *($6)
	if ( ($8 == 0) ){ goto $label$14 }
	*(($6 + [4])) = $8
	CALL $297($8)
	
.LABEL $label$14
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $7) != (int_32)[-12]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $297($1)
	
.LABEL $label$15
	(unreachable)
}

int_32 .FUNC $247 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1264])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $167($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [1248])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $244 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [1264])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$6 = *($1)
	$2 = *($1 + [4])
	$7 = ((int_32)($2 - $6) / (int_32)[40])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$7) ){ goto $label$3 }
	CALL $248($1, ($4 - $7))
	$2 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$7) ){ goto $label$2 }
	$4 = ((int_32)$4 * (int_32)[40])
	$3 = ($6 + $4)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$4 }
	$6 = (([0] - $6) - $4)
	$4 = ($2 + [-24])
	
.LOOP $label$5:
	$7 = *(($4 + [12]))
	if ( ($7 == 0) ){ goto $label$6 }
	*(($4 + [16])) = $7
	CALL $297($7)
	
.LABEL $label$6
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [4])) = $7
	CALL $297($7)
	
.LABEL $label$7
	$4 = ($4 + [-40])
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $3
	$2 = $3
	
.LABEL $label$2
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	$4 = ($0 + [4])
	
.LOOP $label$9:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - *($4)) > (uint_32)[7]), [1248])
	CALL memcpy($7, *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [1248])
	CALL memcpy(($7 + [8]), *($4), [8])
	*($4) = (*($4) + [8])
	CALL $247(CALL $249($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$9 }
	
.LABEL $label$8
	return $0
}

int_32 .FUNC $245 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1264])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$3 = *($1)
	$7 = *($1 + [4])
	$5 = int_32(($7 - $3) >> [4])
	$4 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$3 }
	CALL $246($1, ($4 - $5))
	$7 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$5) ){ goto $label$2 }
	$4 = ($4 << [4])
	$2 = ($3 + $4)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$3 = (([0] - $3) - $4)
	$4 = ($7 + [-12])
	
.LOOP $label$5:
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [4])) = $5
	CALL $297($5)
	
.LABEL $label$6
	$4 = ($4 + [-16])
	if ( ((int_32)($4 + $3) != (int_32)[-12]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $2
	$7 = $2
	
.LABEL $label$2
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$7 }
	$3 = ($0 + [8])
	
.LOOP $label$8:
	$5 = ($0 + [4])
	CALL eosio_assert(((uint_32)(*($3) - *($5)) > (uint_32)[1]), [1248])
	CALL memcpy($4, *($5), [2])
	*($5) = (*($5) + [2])
	CALL $247($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$7
	return $0
}

void .FUNC _ZN5eosio7chintai7prepareENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$3 = (*([0] + [4]) - [240])
	$14 = $3
	*([0] + [4]) = $3
	$8 = *(($0 + [240]))
	$7 = *(($0 + [244]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$1 }
	$9 = ($7 + [-24])
	$6 = ([0] - $8)
	
.LOOP $label$2:
	if ( (int_64)(*(*($9)) == 0) ){ goto $label$1 }
	$7 = $9
	$5 = ($9 + [-24])
	$9 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [216])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$4 }
	$9 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)$5), [752])
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	$7 = CALL db_find_i64(*(($0 + [216])), *(($0 + [224])), (int_64)6761222076679323648, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $163($5, $7)
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)$5), [752])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [2064])
	CALL eosio_assert(((int_32)*($9 + [8]) ^ (int_32)[1]), [2160])
	CALL $318(($14 + [64]), $1)
	$9 = CALL _ZN5eosio5orderC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(($14 + [80]), ($14 + [64]))
	if ( ((*($14 + [64]) & [1]) == 0) ){ goto $label$5 }
	CALL $297(*($14 + [72]))
	
.LABEL $label$5
	$6 = CALL _ZNK5eosio5order8validateEv($9)
	CALL _ZNSt3__19to_stringEi(($14 + [224]), CALL $39($9))
	$5 = CALL $306(($14 + [224]), [0], [3536])
	$8 = ($5 + [8])
	*(($7 = ($14 + [8]))) = *($8)
	*($14) = *($5)
	*($5) = [0]
	*(($5 + [4])) = [0]
	*($8) = [0]
	CALL eosio_assert(($6 == 0), ( *($7) ? ($14 | [1]) : (*($14) & [1]) ))
	if ( ((*($14) & [1]) == 0) ){ goto $label$6 }
	CALL $297(*($7))
	
.LABEL $label$6
	if ( ((*($14 + [224]) & [1]) == 0) ){ goto $label$7 }
	CALL $297(*($14 + [232]))
	
.LABEL $label$7
	CALL require_auth(*($9 + [8]))
	CALL _ZN5eosio17orderbook_manager9add_orderEyyRKNS_5orderERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE(($0 + [8]), *($9), *($9 + [8]), $9, ($0 + [176]))
	$9 = CALL transaction_size()
	if ( ($9 <= [513]) ){ goto $label$9 }
	$5 = CALL malloc($9)
	goto $label$8 
	
.LABEL $label$9
	$5 = ($3 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$9 == (int_32)CALL $fimport$43($5, $9)), [3584])
	$11 = CALL current_time()
	$6 = [0]
	*(($14 + [28])) = [0]
	*(($14 + [32])) = [0]
	*($14 + [12]) = [0]
	*($14 + [16]) = [0]
	*($14 + [20]) = [0]
	*($14 + [24]) = [0]
	*($14) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($14 + [36]) = [0]
	*(($7 = ($14 + [40]))) = [0]
	*(($14 + [44])) = [0]
	*($14 + [48]) = [0]
	*(($14 + [52])) = [0]
	*(($14 + [56])) = [0]
	*($14 + [228]) = $5
	*($14 + [224]) = $5
	*($14 + [232]) = ($5 + $9)
	CALL $243(($14 + [224]), $14)
	$2 = ($14 + [36])
	CALL $245(CALL $244(CALL $244(($14 + [224]), ($14 + [24])), $2), ($14 + [48]))
	$0 = [0]
	$8 = [0]
	$1 = *($14 + [36])
	$9 = *($7)
	if ( ((int_32)$9 == (int_32)$1) ){ goto $label$11 }
	$3 = ((int_32)($9 - $1) / (int_32)[40])
	$7 = [0]
	$8 = [0]
	$0 = [0]
	$6 = [0]
	
.LOOP $label$12:
	$4 = *(($1 + ((int_32)$7 * (int_32)[40])) + [8])
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [3712]
	$12 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$11 > (uint_64)(int_64)6) ){ goto $label$18 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$5 = ($5 + [165])
	goto $label$16 
	
.LABEL $label$18
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$14
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$13 }
	if ( ((uint_32)$3 <= (uint_32)$7) ){ goto $label$10 }
	$6 = ($6 | ((int_64)$4 == (int_64)$12))
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1936]
	$12 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$11 > (uint_64)(int_64)7) ){ goto $label$24 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$5 = ($5 + [165])
	goto $label$22 
	
.LABEL $label$24
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$20
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$19 }
	$0 = ($0 | ((int_64)$4 == (int_64)$12))
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [3728]
	$12 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$11 > (uint_64)(int_64)7) ){ goto $label$30 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$5 = ($5 + [165])
	goto $label$28 
	
.LABEL $label$30
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$26
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$25 }
	$8 = ($8 | ((int_64)$4 == (int_64)$12))
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$12 }
	
.LABEL $label$11
	CALL eosio_assert((($6 & ($0 & $8)) & [1]), [3616])
	CALL $194($14)
	*([0] + [4]) = ($14 + [240])
	return (unreachable)
	
.LABEL $label$10
	CALL $317($2)
}

int_32 .FUNC $243 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [1248])
	CALL memcpy($1, *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [1248])
	CALL memcpy(($1 + [4]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1248])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	$6 = [0]
	$5 = (int_64)0
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *(($0 + [8]))), [1264])
	$7 = ($0 + [4])
	$4 = *($7)
	$2 = *($4)
	$4 = ($4 + [1])
	*($7) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$1 }
	*($1 + [12]) = $5
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)*($3) != (int_32)$4), [1248])
	$4 = ($0 + [4])
	CALL memcpy(($1 + [16]), *($4), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	$7 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	CALL eosio_assert(($6 <= *($3)), [1264])
	$6 = *($4)
	$2 = *($6)
	$6 = ($6 + [1])
	*($4) = $6
	$7 = ($7 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $7)) | (int_64)$5)
	$7 = ($7 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$2 }
	*($1 + [20]) = $5
	return $0
}

void .FUNC $240 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	$8 = *($0 + [4])
	*($1) = *(*($8))
	$2 = *($0)
	*($1 + [8]) = *(*($8) + [8])
	$3 = *($8)
	*((($10 = $11) + [20])) = *(($3 + [36]))
	*(($4 = ($10 + [16]))) = *(($3 + [32]))
	*($10 + [8]) = *($3 + [24])
	*($10 + [12]) = *(($3 + [28]))
	*($1 + [16]) = *($10 + [8])
	*(($1 + [24])) = *($4)
	*($1 + [32]) = *(*($8) + [80])
	*($1 + [40]) = *(*($8) + [72])
	$4 = *($1 + [48])
	$3 = *(($1 + [52]))
	$5 = ($3 - $4)
	$9 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	$8 = [48]
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	$8 = (($5 & [-16]) + $8)
	
.LABEL $label$2
	$3 = ($8 + [1])
	if ( ($3 <= [513]) ){ goto $label$4 }
	$8 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$8 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$3
	*($10 + [12]) = $8
	*($10 + [8]) = $8
	*($10 + [16]) = ($8 + $3)
	CALL $230(($10 + [8]), $1)
	$9 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)6787602122293641216, *(*($0 + [8])), $9, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$8 = ($2 + [8])
	$9 = *($8)
	$0 = *(($0 + [8]))
	$6 = *($0)
	$7 = *($1)
	*($10 + [24]) = *(($1 + [32]))
	*($1 + [72]) = CALL db_idx64_store($9, (int_64)6787602122293641216, $6, $7, ($10 + [24]))
	$9 = *($0)
	$6 = *($8)
	$7 = *($1)
	*($10 + [24]) = *(($1 + [40]))
	*(($1 + [76])) = CALL db_idx64_store($6, (int_64)6787602122293641217, $9, $7, ($10 + [24]))
	*([0] + [4]) = ($10 + [32])
}

int_32 .FUNC _ZNK5eosio9leasebook13get_autorenewEv (int_32 $0)
{
	return *($0 + [48])
}

int_64 .FUNC _ZNK5eosio6usbook12get_interestEv (int_32 $0)
{
	return *($0 + [80])
}

void .FUNC $199 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1408])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1472])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $297($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $297($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC _ZNK5eosio6usbook17get_quantity_leftEv (int_32 $0, int_32 $1)
{
	*($0) = *($1 + [64])
	*(($0 + [8])) = *(($1 + [72]))
}

void .FUNC _ZN5eosio6usbook13set_autorenewEb (int_32 $0, int_32 $1)
{
	*($0 + [89]) = $1
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*(($1 + [92])) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1408])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1472])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *($4 + [48])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [52])) = $6
	CALL $297($6)
	
.LABEL $label$7
	CALL $297($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *($4 + [48])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [52])) = $6
	CALL $297($6)
	
.LABEL $label$10
	CALL $297($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [96]))
	*($9 + [4]) = $1
	*($9) = $0
	*($9 + [8]) = $9
	CALL $150(($9 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]))
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN5eosio6usbook23set_order_creation_timeEy (int_32 $0, int_64 $1)
{
	*($0 + [40]) = $1
}

void .FUNC _ZN5eosio17orderbook_manager26cancel_lease_order_chintaiERKNS_6ulbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE (int_32 $0, int_32 $1, int_32 $2)
{
	CALL require_auth(*($0))
	CALL _ZN5eosio17orderbook_manager18cancel_lease_orderERKNS_6ulbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($0, $1, $0)
}

void .FUNC _ZN5eosio9leasebook8set_userEy (int_32 $0, int_64 $1)
{
	*($0 + [8]) = $1
}

void .FUNC _ZN5eosio17orderbook_manager18cancel_stake_orderERKNS_6usbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	*($8 + [16]) = (int_64)-1
	*($8 + [24]) = [0]
	$3 = *($0)
	*($8) = $3
	$7 = *($1 + [32])
	*($8 + [8]) = $7
	*(($0 = ($8 + [28]))) = [0]
	*(($8 + [32])) = [0]
	*(($8 + [38])) = [0]
	*($8 + [36]) = [0]
	$6 = CALL db_find_i64($3, $7, (int_64)-3012230666864558080, *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $148($8, $6) + [92]) == (int_32)$8), [752])
	$3 = *($1)
	$4 = *(($8 + [24]))
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$2 }
	$1 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$3:
	if ( ((int_64)*(*($1)) == (int_64)$3) ){ goto $label$2 }
	$6 = $1
	$0 = ($1 + [-24])
	$1 = $0
	if ( ((int_32)($0 + $5) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*(($1 + [92])) == (int_32)$8), [752])
	goto $label$4 
	
.LABEL $label$5
	$1 = [0]
	$0 = CALL db_find_i64(*($8), *(($8 + [8])), (int_64)-3012230666864558080, $3)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $148($8, $0)
	CALL eosio_assert(((int_32)*($1 + [92]) == (int_32)$8), [752])
	
.LABEL $label$4
	$0 = ((int_32)$1 != (int_32)[0])
	CALL eosio_assert($0, [1280])
	CALL eosio_assert($0, [1328])
	$0 = CALL db_next_i64(*($1 + [96]), ($8 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	CALL $148($8, $0)
	
.LABEL $label$6
	CALL $149($8, $1)
	$5 = *($8 + [24])
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = ($8 + [28])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	$6 = *($0 + [48])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($0 + [52])) = $6
	CALL $297($6)
	
.LABEL $label$11
	CALL $297($0)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$9 }
	$1 = *(($8 + [24]))
	goto $label$7 
	
.LABEL $label$8
	$1 = $5
	
.LABEL $label$7
	*($4) = $5
	CALL $297($1)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [48])
}

void .FUNC _ZN5eosio17orderbook_manager23cancel_stake_order_userERKNS_6usbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE (int_32 $0, int_32 $1, int_32 $2)
{
	CALL require_auth(*($1 + [8]))
	CALL _ZN5eosio17orderbook_manager18cancel_stake_orderERKNS_6usbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($0, $1, $1)
}

int_32 .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [1248])
	CALL memcpy(($3 + [14]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [80]) = ((int_32)*($3 + [14]) != (int_32)[0])
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [1248])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [81]) = ((int_32)*($3 + [15]) != (int_32)[0])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $140 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = *($0)
	$4 = *($5 + [4])
	$6 = *($4 + [104])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = *($5)
	$6 = CALL db_idx_double_find_primary(*($6), *($6 + [8]), (int_64)-3146771307685740544, ($7 + [8]), *($4))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx_double_remove($6)
	
.LABEL $label$1
	$5 = *($0)
	$4 = *($5 + [4])
	$6 = *(($4 + [108]))
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$4 }
	$6 = *($5)
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-3146771307685740543, ($7 + [8]), *($4))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($6)
	
.LABEL $label$3
	$6 = *($0)
	$5 = *($6 + [4])
	$0 = *(($5 + [112]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$6 }
	$0 = *($6)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3146771307685740542, ($7 + [8]), *($5))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($0)
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [16])
}

void .FUNC _ZN5eosio17orderbook_manager18cancel_lease_orderERKNS_9leasebookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	$4 = *($1)
	$5 = *(($0 + [72]))
	$9 = *(($0 + [76]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$1 }
	$8 = ($9 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$4) ){ goto $label$1 }
	$9 = $8
	$7 = ($8 + [-24])
	$8 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [48])
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$5 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [64]) == (int_32)$3), [752])
	if ( $8 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)6653061481472458752, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $115($3, $8) + [64]) == (int_32)$3), [752])
	
.LABEL $label$4
	$4 = *($1)
	$1 = *(($0 + [72]))
	$9 = *(($0 + [76]))
	if ( ((int_32)$9 == (int_32)$1) ){ goto $label$6 }
	$8 = ($9 + [-24])
	$6 = ([0] - $1)
	
.LOOP $label$7:
	if ( ((int_64)*(*($8)) == (int_64)$4) ){ goto $label$6 }
	$9 = $8
	$7 = ($8 + [-24])
	$8 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$9 == (int_32)$1) ){ goto $label$9 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [64]) == (int_32)$3), [752])
	goto $label$8 
	
.LABEL $label$9
	$8 = [0]
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)6653061481472458752, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$8 = CALL $115($3, $7)
	CALL eosio_assert(((int_32)*($8 + [64]) == (int_32)$3), [752])
	
.LABEL $label$8
	$7 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($7, [1280])
	CALL eosio_assert($7, [1328])
	$7 = CALL db_next_i64(*($8 + [68]), ($10 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$10 }
	CALL $115($3, $7)
	
.LABEL $label$10
	CALL $144($3, $8)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN5eosio17orderbook_manager26cancel_lease_order_chintaiERKNS_9leasebookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE (int_32 $0, int_32 $1, int_32 $2)
{
	CALL require_auth(*($0))
	CALL _ZN5eosio17orderbook_manager18cancel_lease_orderERKNS_9leasebookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($0, $1, $0)
}

void .FUNC $278 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [1248])
	CALL memcpy(($4 + [15]), *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	*($0 + [40]) = ((int_32)*($4 + [15]) != (int_32)[0])
	*($4 + [8]) = $0
	CALL $279(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1216])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $295([112])
	$4 = CALL $120($6)
	*($6 + [92]) = $0
	CALL $151(($8 + [32]), $4)
	*($6 + [100]) = [-1]
	*($6 + [96]) = $1
	*($6 + [104]) = [-1]
	*($6 + [108]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [96])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $122(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [48])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [52])) = $7
	CALL $297($7)
	
.LABEL $label$10
	CALL $297($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN5eosio6ulbook12set_durationEy (int_32 $0, int_64 $1)
{
	*($0 + [32]) = $1
}

void .FUNC _ZN5eosio6ulbook23set_order_creation_timeEy (int_32 $0, int_64 $1)
{
	*($0 + [40]) = $1
}

void .FUNC $239 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [64])
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*(($1 + [92])) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1072])
	*(($12 = $13) + [8]) = *(($1 + [80]))
	*($12 + [16]) = *(($1 + [32]))
	*($12 + [24]) = *(($1 + [40]))
	$10 = [48]
	$6 = *($1)
	$3 = *($3)
	$11 = *(($3 + [48]))
	*((($12 + [48]) + [8])) = $11
	$8 = *($3 + [40])
	*($1 + [64]) = $8
	*(($1 + [72])) = $11
	*($12 + [48]) = $8
	CALL eosio_assert([1], [1136])
	$7 = *($1 + [48])
	$3 = *(($1 + [52]))
	$9 = ($3 - $7)
	$11 = (CASTING uint_64)(uint_32 int_32($9 >> [4]))
	$5 = ($12 + [24])
	$4 = (($12 + [8]) + [8])
	
.LOOP $label$1:
	$10 = ($10 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$10 = (($9 & [-16]) + $10)
	
.LABEL $label$2
	$3 = ($10 + [26])
	if ( ($3 <= [513]) ){ goto $label$4 }
	$10 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$10 = ($13 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$3
	*($12 + [52]) = $10
	*($12 + [48]) = $10
	*($12 + [56]) = ($10 + $3)
	CALL $128(($12 + [48]), $1)
	CALL db_update_i64(*($1 + [96]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($12 + [40]) = *(($1 + [80]))
	if ( (CALL memcmp(($12 + [8]), ($12 + [40]), [8]) == 0) ){ goto $label$7 }
	$10 = *($1 + [100])
	if ( ((int_32)$10 > (int_32)[-1]) ){ goto $label$8 }
	$10 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3012230666864558080, ($12 + [32]), $6)
	*(($1 + [100])) = $10
	
.LABEL $label$8
	CALL db_idx_double_update($10, $2, ($12 + [40]))
	
.LABEL $label$7
	*($12 + [40]) = *(($1 + [32]))
	if ( (CALL memcmp($4, ($12 + [40]), [8]) == 0) ){ goto $label$9 }
	$3 = ($1 + [104])
	$10 = *($3)
	if ( ((int_32)$10 > (int_32)[-1]) ){ goto $label$10 }
	$10 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3012230666864558079, ($12 + [32]), $6)
	*($3) = $10
	
.LABEL $label$10
	CALL db_idx64_update($10, $2, ($12 + [40]))
	
.LABEL $label$9
	*($12 + [40]) = *(($1 + [40]))
	if ( (CALL memcmp($5, ($12 + [40]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [108])
	$10 = *($1)
	if ( ((int_32)$10 > (int_32)[-1]) ){ goto $label$12 }
	$10 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3012230666864558078, ($12 + [32]), $6)
	*($1) = $10
	
.LABEL $label$12
	CALL db_idx64_update($10, $2, ($12 + [40]))
	
.LABEL $label$11
	*([0] + [4]) = ($12 + [64])
}

void .FUNC $238 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	$8 = *($0 + [4])
	*($1) = *(*($8))
	$2 = *($0)
	*($1 + [8]) = *(*($8) + [8])
	$3 = *($8)
	*((($10 = $11) + [20])) = *(($3 + [36]))
	*(($4 = ($10 + [16]))) = *(($3 + [32]))
	*($10 + [8]) = *($3 + [24])
	*($10 + [12]) = *(($3 + [28]))
	*($1 + [16]) = *($10 + [8])
	*(($1 + [24])) = *($4)
	*($1 + [32]) = *(*($8) + [80])
	*($1 + [40]) = *(*($8) + [72])
	$4 = *($1 + [48])
	$3 = *(($1 + [52]))
	$5 = ($3 - $4)
	$9 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	$8 = [48]
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	$8 = (($5 & [-16]) + $8)
	
.LABEL $label$2
	$3 = ($8 + [1])
	if ( ($3 <= [513]) ){ goto $label$4 }
	$8 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$8 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$3
	*($10 + [12]) = $8
	*($10 + [8]) = $8
	*($10 + [16]) = ($8 + $3)
	CALL $230(($10 + [8]), $1)
	$9 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)6787602122293641216, *(*($0 + [8])), $9, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$8 = ($2 + [8])
	$9 = *($8)
	$0 = *(($0 + [8]))
	$6 = *($0)
	$7 = *($1)
	*($10 + [24]) = *(($1 + [32]))
	*($1 + [72]) = CALL db_idx64_store($9, (int_64)6787602122293641216, $6, $7, ($10 + [24]))
	$9 = *($0)
	$6 = *($8)
	$7 = *($1)
	*($10 + [24]) = *(($1 + [40]))
	*(($1 + [76])) = CALL db_idx64_store($6, (int_64)6787602122293641217, $9, $7, ($10 + [24]))
	*([0] + [4]) = ($10 + [32])
}

int_32 .FUNC _ZNK5eosio6ulbook13get_autorenewEv (int_32 $0)
{
	return *($0 + [81])
}

void .FUNC $236 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	$8 = *($0 + [4])
	*($1) = *(*($8))
	$2 = *($0)
	*($1 + [8]) = *(*($8) + [8])
	$3 = *($8)
	*((($10 = $11) + [20])) = *(($3 + [36]))
	*(($4 = ($10 + [16]))) = *(($3 + [32]))
	*($10 + [8]) = *($3 + [24])
	*($10 + [12]) = *(($3 + [28]))
	*($1 + [16]) = *($10 + [8])
	*(($1 + [24])) = *($4)
	*($1 + [32]) = *(*($8) + [80])
	*($1 + [40]) = *(*($8) + [72])
	$4 = *($1 + [48])
	$3 = *(($1 + [52]))
	$5 = ($3 - $4)
	$9 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	$8 = [48]
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	$8 = (($5 & [-16]) + $8)
	
.LABEL $label$2
	$3 = ($8 + [1])
	if ( ($3 <= [513]) ){ goto $label$4 }
	$8 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$8 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$3
	*($10 + [12]) = $8
	*($10 + [8]) = $8
	*($10 + [16]) = ($8 + $3)
	CALL $230(($10 + [8]), $1)
	$9 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)6787602122293641216, *(*($0 + [8])), $9, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$8 = ($2 + [8])
	$9 = *($8)
	$0 = *(($0 + [8]))
	$6 = *($0)
	$7 = *($1)
	*($10 + [24]) = *(($1 + [32]))
	*($1 + [72]) = CALL db_idx64_store($9, (int_64)6787602122293641216, $6, $7, ($10 + [24]))
	$9 = *($0)
	$6 = *($8)
	$7 = *($1)
	*($10 + [24]) = *(($1 + [40]))
	*(($1 + [76])) = CALL db_idx64_store($6, (int_64)6787602122293641217, $9, $7, ($10 + [24]))
	*([0] + [4]) = ($10 + [32])
}

void .FUNC _ZN5eosio6ulbook8set_userEy (int_32 $0, int_64 $1)
{
	*($0 + [8]) = $1
}

void .FUNC $234 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx_double_lowerbound(*($8), *($8 + [8]), (int_64)-3146771307685740544, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)$4), [752])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $138($4, CALL $fimport$17(*($4), *($4 + [8]), (int_64)-3146771307685740544, $5))
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)$4), [752])
	
.LABEL $label$4
	*(($2 + [104])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN5eosio7chintai16make_stake_orderERNS_5orderE (int_32 $0, int_32 $1)
{
	float_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	float_64 $13
	float_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_64 $29
	int_32 $30
	int_32 $31
	$31 = (*([0] + [4]) - [336])
	*([0] + [4]) = $31
	*($31 + [152]) = (int_64)-1
	*($31 + [160]) = [0]
	$26 = *($0)
	*($31 + [136]) = $26
	$28 = *($1 + [80])
	*($31 + [144]) = $28
	*(($31 + [164])) = [0]
	*((($31 + [136]) + [32])) = [0]
	*((($31 + [136]) + [38])) = [0]
	*($31 + [172]) = [0]
	*((($31 + [96]) + [32])) = [0]
	*((($31 + [96]) + [38])) = [0]
	*($31 + [104]) = $28
	*($31 + [96]) = $26
	*($31 + [112]) = (int_64)-1
	*($31 + [120]) = (int_64)0
	*($31 + [132]) = [0]
	*($31 + [88]) = ($31 + [136])
	$26 = *($1 + [56])
	$28 = *($1 + [24])
	*($31 + [84]) = [0]
	*($31 + [80]) = ($31 + [88])
	*($31 + [176]) = (int_64)-4503599627370497
	CALL $234(($31 + [296]), ($31 + [88]), ($31 + [176]))
	if ( (*($31 + [300]) == 0) ){ goto $label$1 }
	CALL $235(($31 + [80]))
	$30 = *($31 + [84])
	if ( ($30 == 0) ){ goto $label$1 }
	$2 = ((float_64)(CASTING float_64)(int_64 $26) / (float_64)(CASTING float_64)(int_64 $28))
	$13 = *($30 + [64])
	if ( (((float_64)$13 < (float_64)$2) | (((float_64)$13 != (float_64)$13) | ((float_64)$2 != (float_64)$2))) ){ goto $label$1 }
	$8 = ($0 + [40])
	$7 = ($0 + [16])
	$6 = ($0 + [412])
	$5 = ($0 + [80])
	$3 = ($0 + [56])
	$4 = (($31 + [176]) + [57])
	$20 = ($0 + [84])
	$21 = ($0 + [64])
	$22 = ($1 + [8])
	$23 = ($0 + [72])
	$24 = ($0 + [88])
	$16 = ($0 + [420])
	$17 = ($0 + [416])
	$18 = ($1 + [48])
	$19 = ($0 + [44])
	
.LOOP $label$2:
	$12 = ($1 + [40])
	$26 = *($12)
	$28 = *($30 + [48])
	if ( (int_64)($28 == 0) ){ goto $label$10 }
	if ( ((int_64)$26 == (int_64)0) ){ goto $label$10 }
	if ( ((int_64)*($30 + [32]) != (int_64)*(($1 + [80]))) ){ goto $label$11 }
	if ( (*($30 + [80]) & [255]) ){ goto $label$9 }
	
.LABEL $label$11
	*($31 + [176]) = (int_64)-4503599627370497
	CALL $234(($31 + [296]), ($31 + [88]), ($31 + [176]))
	if ( ((int_32)*($31 + [84]) == (int_32)*($31 + [300])) ){ goto $label$1 }
	CALL $235(($31 + [80]))
	$30 = *($31 + [84])
	if ( $30 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$10
	if ( ((int_64)$26 == (int_64)0) ){ goto $label$8 }
	if ( ((int_64)$28 != (int_64)0) ){ goto $label$4 }
	$26 = *($30)
	$9 = *($5)
	$25 = *($20)
	if ( ((int_32)$25 == (int_32)$9) ){ goto $label$12 }
	$30 = ($25 + [-24])
	$10 = ([0] - $9)
	
.LOOP $label$13:
	if ( ((int_64)*(*($30)) == (int_64)$26) ){ goto $label$12 }
	$25 = $30
	$12 = ($30 + [-24])
	$30 = $12
	if ( ((int_32)($12 + $10) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ((int_32)$25 == (int_32)$9) ){ goto $label$17 }
	$30 = *(($25 + [-24]))
	CALL eosio_assert(((int_32)*($30 + [64]) == (int_32)$3), [752])
	if ( $30 ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$17
	$30 = CALL db_find_i64(*($3), *($21), (int_64)6653061481472458752, $26)
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$16 }
	CALL eosio_assert(((int_32)*(CALL $115($3, $30) + [64]) == (int_32)$3), [752])
	if ( *($31 + [84]) ){ goto $label$14 }
	goto $label$4 
	
.LABEL $label$16
	$28 = *($22)
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$15()), [912])
	*(($12 = CALL $295([80])) + [24]) = (int_64)1397703940
	*($12 + [16]) = (int_64)0
	CALL eosio_assert([1], [16])
	$10 = ($12 + [16])
	$26 = (int_64)5459781
	$30 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$25 = [1]
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$25 = [0]
	
.LABEL $label$18
	CALL eosio_assert($25, [80])
	*($12 + [64]) = $3
	$30 = *($31 + [84])
	*($12) = *($30)
	*($12 + [8]) = *($30 + [8])
	$26 = *(($30 + [24]))
	*(($25 = (($31 + [296]) + [8]))) = $26
	$27 = *($30 + [16])
	*($10) = $27
	*(($10 + [8])) = $26
	*($31 + [296]) = $27
	*($12 + [32]) = *($30 + [32])
	*($12 + [40]) = *($30 + [40])
	*($12 + [56]) = *($30 + [88])
	*($25) = $4
	*($31 + [300]) = ($31 + [176])
	*($31 + [296]) = ($31 + [176])
	CALL $221(($31 + [296]), $12)
	$26 = *($12)
	*($12 + [68]) = CALL db_store_i64(*($21), (int_64)6653061481472458752, $28, $26, ($31 + [176]), [57])
	if ( (uint_64)($26 <= *($23)) ){ goto $label$23 }
	*($23) = ( (int_64)-2 ? ((int_64)$26 + (int_64)1) : ((uint_64)$26 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	$26 = *($21)
	$27 = *($12)
	*($31 + [64]) = *(($12 + [32]))
	*($12 + [72]) = CALL db_idx64_store($26, (int_64)6653061481472458752, $28, $27, ($31 + [64]))
	$26 = *($21)
	$27 = *($12)
	*($31 + [64]) = *(($12 + [40]))
	*($12 + [76]) = CALL db_idx64_store($26, (int_64)6653061481472458753, $28, $27, ($31 + [64]))
	*($31 + [296]) = $12
	$26 = *($12)
	*($31 + [176]) = $26
	$25 = *(($12 + [68]))
	*($31 + [64]) = $25
	$30 = *($20)
	if ( ((uint_32)$30 >= (uint_32)*($24)) ){ goto $label$25 }
	*($30 + [8]) = $26
	*($30 + [16]) = $25
	*($31 + [296]) = [0]
	*($30) = $12
	*($20) = ($30 + [24])
	goto $label$24 
	
.LABEL $label$25
	CALL $135($5, ($31 + [296]), ($31 + [176]), ($31 + [64]))
	
.LABEL $label$24
	$30 = *($31 + [296])
	*($31 + [296]) = [0]
	if ( ($30 == 0) ){ goto $label$15 }
	CALL $297($30)
	
.LABEL $label$15
	if ( (*($31 + [84]) == 0) ){ goto $label$4 }
	
.LABEL $label$14
	$26 = *($31 + [80])
	*($31 + [176]) = $26
	$30 = (CASTING uint_32)(uint_64 (uint_64)$26 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$30) != (int_32)[0]), [1280])
	CALL $237(($31 + [176]))
	CALL $139(*($31 + [88]), $30)
	*($31 + [80]) = *($31 + [176])
	*($31 + [176]) = (int_64)-4503599627370497
	CALL $234(($31 + [296]), ($31 + [88]), ($31 + [176]))
	if ( ((int_32)*($31 + [84]) == (int_32)*($31 + [300])) ){ goto $label$4 }
	CALL $235(($31 + [80]))
	$30 = *($31 + [84])
	if ( $30 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$9
	if ( (uint_64)($26 <= $28) ){ goto $label$7 }
	CALL eosio_assert((uint_64)(((int_64)$28 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [16])
	$26 = (int_64)5459781
	$30 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$25 = [1]
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$25 = [0]
	
.LABEL $label$26
	CALL eosio_assert($25, [80])
	*(($25 = (($31 + [32]) + [8]))) = (int_64)1397703940
	*($31 + [32]) = $28
	$26 = *($22)
	$28 = *($1)
	$30 = *($31 + [84])
	$13 = *($30 + [64])
	$27 = *($30 + [32])
	$14 = *($30 + [72])
	$29 = *($30 + [88])
	$11 = *($30)
	*((($31 + [16]) + [8])) = *($25)
	*($31 + [16]) = *($31 + [32])
	CALL _ZN5eosio7chintai13fulfill_orderENS_5assetEyyyydydb($0, ($31 + [16]), $28, $11, $26, $29, $14, $27, $13, [0])
	$11 = *($0)
	$26 = (int_64)0
	$27 = (int_64)59
	$30 = [1616]
	$29 = (int_64)0
	
.LOOP $label$31:
	if ( ((uint_64)$26 > (uint_64)(int_64)5) ){ goto $label$36 }
	$25 = *($30)
	if ( ((uint_32)(($25 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$25 = ($25 + [165])
	goto $label$34 
	
.LABEL $label$36
	$28 = (int_64)0
	if ( ((uint_64)$26 <= (uint_64)(int_64)11) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$35
	$25 = ( ($25 + [208]) ? [0] : ((($25 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$34
	$28 = (int_64)((int_64)(CASTING uint_64)(uint_32 $25) << (int_64)56) >> (int_64)56)
	
.LABEL $label$33
	$28 = ((int_64)((int_64)$28 & (int_64)31) << (int_64)((int_64)$27 & (int_64)4294967295))
	
.LABEL $label$32
	$30 = ($30 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$29 = ((int_64)$28 | (int_64)$29)
	$27 = ((int_64)$27 + (int_64)-5)
	if ( ((int_64)$27 != (int_64)-6) ){ goto $label$31 }
	*(($15 = (($31 + [176]) + [8]))) = $29
	*($31 + [176]) = $11
	$26 = (int_64)0
	$27 = (int_64)59
	$30 = [2864]
	$29 = (int_64)0
	
.LOOP $label$37:
	if ( ((uint_64)$26 > (uint_64)(int_64)10) ){ goto $label$42 }
	$25 = *($30)
	if ( ((uint_32)(($25 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$25 = ($25 + [165])
	goto $label$40 
	
.LABEL $label$42
	$28 = (int_64)0
	if ( ((int_64)$26 == (int_64)11) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$41
	$25 = ( ($25 + [208]) ? [0] : ((($25 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$28 = (int_64)((int_64)(CASTING uint_64)(uint_32 $25) << (int_64)56) >> (int_64)56)
	
.LABEL $label$39
	$28 = ((int_64)((int_64)$28 & (int_64)31) << (int_64)((int_64)$27 & (int_64)4294967295))
	
.LABEL $label$38
	$30 = ($30 + [1])
	$27 = ((int_64)$27 + (int_64)-5)
	$29 = ((int_64)$28 | (int_64)$29)
	$26 = ((int_64)$26 + (int_64)1)
	if ( ((int_64)$26 != (int_64)13) ){ goto $label$37 }
	*($31 + [296]) = $29
	*($31 + [64]) = *(*($31 + [84]))
	$30 = *($17)
	if ( ((uint_32)$30 >= (uint_32)*($16)) ){ goto $label$44 }
	*($30 + [8]) = $29
	*($30) = $11
	*($30 + [16 align=4]) = (int_64)0
	*(($10 = ($30 + [24]))) = [0]
	$25 = CALL $295([16])
	*($30 + [16]) = $25
	$9 = ($25 + [16])
	*($10) = $9
	*(($25 + [8])) = *($15)
	*($25) = *($31 + [176])
	*(($30 + [20])) = $9
	*($30 + [28]) = [0]
	*(($25 = ($30 + [32]))) = [0]
	*(($30 + [36])) = [0]
	CALL $167(($30 + [28]), [8])
	$30 = *($30 + [28])
	CALL eosio_assert(((int_32)(*($25) - $30) > (int_32)[7]), [1200])
	CALL memcpy($30, ($31 + [64]), [8])
	*($17) = (*($17) + [40])
	goto $label$43 
	
.LABEL $label$44
	CALL $227($6, ($31 + [176]), $0, ($31 + [296]), ($31 + [64]))
	
.LABEL $label$43
	$28 = (int_64)
	CALL eosio_assert((uint_64)(((int_64)$28(*($12) - *(*($31 + [84]) + [48]))) + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [16])
	$26 = (int_64)5459781
	$30 = [0]
	
.LOOP $label$47:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$46 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$48 }
	
.LOOP $label$49:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$46 }
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$49 }
	
.LABEL $label$48
	$25 = [1]
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$47 }
	goto $label$45 
	
.LABEL $label$46
	$25 = [0]
	
.LABEL $label$45
	CALL eosio_assert($25, [80])
	*($18) = (int_64)1397703940
	*($12) = $28
	$28 = *($22)
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$15()), [912])
	*(($25 = CALL $295([80])) + [24]) = (int_64)1397703940
	*($25 + [16]) = (int_64)0
	CALL eosio_assert([1], [16])
	$9 = ($25 + [16])
	$26 = (int_64)5459781
	$30 = [0]
	
.LOOP $label$52:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$51 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$53 }
	
.LOOP $label$54:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$51 }
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$54 }
	
.LABEL $label$53
	$10 = [1]
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$52 }
	goto $label$50 
	
.LABEL $label$51
	$10 = [0]
	
.LABEL $label$50
	CALL eosio_assert($10, [80])
	*($25 + [64]) = $3
	$30 = *($31 + [84])
	*($25) = *($30)
	*($25 + [8]) = *($30 + [8])
	$26 = *(($30 + [24]))
	*(($10 = (($31 + [296]) + [8]))) = $26
	$27 = *($30 + [16])
	*($9) = $27
	*(($9 + [8])) = $26
	*($31 + [296]) = $27
	*($25 + [32]) = *($30 + [32])
	*($25 + [40]) = *($30 + [40])
	*($25 + [56]) = *($30 + [88])
	*($10) = $4
	*($31 + [300]) = ($31 + [176])
	*($31 + [296]) = ($31 + [176])
	CALL $221(($31 + [296]), $25)
	$26 = *($25)
	*($25 + [68]) = CALL db_store_i64(*($21), (int_64)6653061481472458752, $28, $26, ($31 + [176]), [57])
	if ( (uint_64)($26 <= *($23)) ){ goto $label$55 }
	*($23) = ( (int_64)-2 ? ((int_64)$26 + (int_64)1) : ((uint_64)$26 > (uint_64)(int_64)-3) )
	
.LABEL $label$55
	$26 = *($21)
	$27 = *($25)
	*($31 + [64]) = *(($25 + [32]))
	*($25 + [72]) = CALL db_idx64_store($26, (int_64)6653061481472458752, $28, $27, ($31 + [64]))
	$26 = *($21)
	$27 = *($25)
	*($31 + [64]) = *(($25 + [40]))
	*($25 + [76]) = CALL db_idx64_store($26, (int_64)6653061481472458753, $28, $27, ($31 + [64]))
	*($31 + [296]) = $25
	$26 = *($25)
	*($31 + [176]) = $26
	$10 = *(($25 + [68]))
	*($31 + [64]) = $10
	$30 = *($20)
	if ( ((uint_32)$30 >= (uint_32)*($24)) ){ goto $label$57 }
	*($30 + [8]) = $26
	*($30 + [16]) = $10
	*($31 + [296]) = [0]
	*($30) = $25
	*($20) = ($30 + [24])
	goto $label$56 
	
.LABEL $label$57
	CALL $135($5, ($31 + [296]), ($31 + [176]), ($31 + [64]))
	
.LABEL $label$56
	$30 = *($31 + [296])
	*($31 + [296]) = [0]
	if ( ($30 == 0) ){ goto $label$58 }
	CALL $297($30)
	
.LABEL $label$58
	if ( (*($31 + [84]) == 0) ){ goto $label$59 }
	$26 = *($31 + [80])
	*($31 + [176]) = $26
	$30 = (CASTING uint_32)(uint_64 (uint_64)$26 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$30) != (int_32)[0]), [1280])
	CALL $237(($31 + [176]))
	CALL $139(*($31 + [88]), $30)
	*($31 + [80]) = *($31 + [176])
	*($31 + [176]) = (int_64)-4503599627370497
	CALL $234(($31 + [296]), ($31 + [88]), ($31 + [176]))
	if ( ((int_32)*($31 + [84]) == (int_32)*($31 + [300])) ){ goto $label$59 }
	CALL $235(($31 + [80]))
	
.LABEL $label$59
	if ( (int_64)(*($12) == 0) ){ goto $label$65 }
	$26 = *($1)
	$9 = *((($31 + [96]) + [24]))
	$25 = *((($31 + [96]) + [28]))
	if ( ((int_32)$25 == (int_32)$9) ){ goto $label$66 }
	$30 = ($25 + [-24])
	$10 = ([0] - $9)
	
.LOOP $label$67:
	if ( ((int_64)*(*($30)) == (int_64)$26) ){ goto $label$66 }
	$25 = $30
	$12 = ($30 + [-24])
	$30 = $12
	if ( ((int_32)($12 + $10) != (int_32)[-24]) ){ goto $label$67 }
	
.LABEL $label$66
	if ( ((int_32)$25 == (int_32)$9) ){ goto $label$64 }
	$30 = *(($25 + [-24]))
	CALL eosio_assert(((int_32)*(($30 + [92])) == (int_32)($31 + [96])), [752])
	goto $label$63 
	
.LABEL $label$65
	$26 = *($22)
	*($31 + [328]) = $1
	*($31 + [296]) = $26
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$15()), [912])
	*($31 + [176]) = $7
	*($15) = ($31 + [296])
	*($31 + [180]) = ($31 + [328])
	*(($12 = CALL $295([80])) + [24]) = (int_64)1397703940
	*($12 + [16]) = (int_64)0
	CALL eosio_assert([1], [16])
	$26 = (int_64)5459781
	$30 = [0]
	
.LOOP $label$70:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$69 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$71 }
	
.LOOP $label$72:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$69 }
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$72 }
	
.LABEL $label$71
	$25 = [1]
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$70 }
	goto $label$68 
	
.LABEL $label$69
	$25 = [0]
	
.LABEL $label$68
	CALL eosio_assert($25, [80])
	*($12 + [56]) = [0]
	*($12 + [48 align=4]) = (int_64)0
	*($12 + [64]) = $7
	CALL $240(($31 + [176]), $12)
	*($31 + [64]) = $12
	$26 = *($12)
	*($31 + [176]) = $26
	$25 = *($12 + [68])
	*($31 + [280]) = $25
	$30 = *($19)
	if ( ((uint_32)$30 >= (uint_32)*(($0 + [48]))) ){ goto $label$62 }
	*($30 + [8]) = $26
	*($30 + [16]) = $25
	*($31 + [64]) = [0]
	*($30) = $12
	*($19) = ($30 + [24])
	goto $label$61 
	
.LABEL $label$64
	$30 = [0]
	$12 = CALL db_find_i64(*($31 + [96]), *((($31 + [96]) + [8])), (int_64)-3012230666864558080, $26)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$63 }
	$30 = CALL $148(($31 + [96]), $12)
	CALL eosio_assert(((int_32)*($30 + [92]) == (int_32)($31 + [96])), [752])
	
.LABEL $label$63
	$26 = *($22)
	*($31 + [176]) = $1
	CALL eosio_assert(((int_32)$30 != (int_32)[0]), [976])
	CALL $239(($31 + [96]), $30, $26, ($31 + [176]))
	$30 = *($31 + [84])
	if ( $30 ){ goto $label$60 }
	goto $label$1 
	
.LABEL $label$62
	CALL $131($8, ($31 + [64]), ($31 + [176]), ($31 + [280]))
	
.LABEL $label$61
	$30 = *($31 + [64])
	*($31 + [64]) = [0]
	if ( ($30 == 0) ){ goto $label$73 }
	$12 = *($30 + [48])
	if ( ($12 == 0) ){ goto $label$74 }
	*(($30 + [52])) = $12
	CALL $297($12)
	
.LABEL $label$74
	CALL $297($30)
	
.LABEL $label$73
	$26 = *($1)
	$9 = *((($31 + [96]) + [24]))
	$25 = *((($31 + [96]) + [28]))
	if ( ((int_32)$25 == (int_32)$9) ){ goto $label$75 }
	$30 = ($25 + [-24])
	$10 = ([0] - $9)
	
.LOOP $label$76:
	if ( ((int_64)*(*($30)) == (int_64)$26) ){ goto $label$75 }
	$25 = $30
	$12 = ($30 + [-24])
	$30 = $12
	if ( ((int_32)($12 + $10) != (int_32)[-24]) ){ goto $label$76 }
	
.LABEL $label$75
	if ( ((int_32)$25 == (int_32)$9) ){ goto $label$78 }
	$30 = *(($25 + [-24]))
	CALL eosio_assert(((int_32)*(($30 + [92])) == (int_32)($31 + [96])), [752])
	if ( ($30 == 0) ){ goto $label$77 }
	goto $label$5 
	
.LABEL $label$78
	$30 = CALL db_find_i64(*($31 + [96]), *((($31 + [96]) + [8])), (int_64)-3012230666864558080, $26)
	if ( ((int_32)$30 >= (int_32)[0]) ){ goto $label$6 }
	
.LABEL $label$77
	$30 = *($31 + [84])
	if ( ($30 == 0) ){ goto $label$1 }
	
.LABEL $label$60
	if ( ((float_64)*($30 + [64]) >= (float_64)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$8
	$26 = *($1)
	$3 = *(($0 + [40]))
	$25 = *(($0 + [44]))
	if ( ((int_32)$25 == (int_32)$3) ){ goto $label$79 }
	$30 = ($25 + [-24])
	$10 = ([0] - $3)
	
.LOOP $label$80:
	if ( ((int_64)*(*($30)) == (int_64)$26) ){ goto $label$79 }
	$25 = $30
	$12 = ($30 + [-24])
	$30 = $12
	if ( ((int_32)($12 + $10) != (int_32)[-24]) ){ goto $label$80 }
	
.LABEL $label$79
	if ( ((int_32)$25 == (int_32)$3) ){ goto $label$83 }
	$30 = *(($25 + [-24]))
	CALL eosio_assert(((int_32)*($30 + [64]) == (int_32)$7), [752])
	if ( $30 ){ goto $label$81 }
	goto $label$82 
	
.LABEL $label$83
	$30 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)6787602122293641216, $26)
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$82 }
	CALL eosio_assert(((int_32)*(CALL $119($7, $30) + [64]) == (int_32)$7), [752])
	goto $label$81 
	
.LABEL $label$82
	$26 = *(($1 + [8]))
	*($31 + [328]) = $1
	*($31 + [296]) = $26
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$15()), [912])
	*($31 + [176]) = $7
	*($31 + [180]) = ($31 + [328])
	*($31 + [184]) = ($31 + [296])
	*(($12 = CALL $295([80])) + [24]) = (int_64)1397703940
	*($12 + [16]) = (int_64)0
	CALL eosio_assert([1], [16])
	$26 = (int_64)5459781
	$30 = [0]
	
.LOOP $label$86:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$85 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$87 }
	
.LOOP $label$88:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$85 }
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$88 }
	
.LABEL $label$87
	$25 = [1]
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$86 }
	goto $label$84 
	
.LABEL $label$85
	$25 = [0]
	
.LABEL $label$84
	CALL eosio_assert($25, [80])
	*($12 + [56]) = [0]
	*($12 + [48 align=4]) = (int_64)0
	*($12 + [64]) = $7
	CALL $236(($31 + [176]), $12)
	*($31 + [64]) = $12
	$26 = *($12)
	*($31 + [176]) = $26
	$25 = *($12 + [68])
	*($31 + [280]) = $25
	$10 = ($0 + [44])
	$30 = *($10)
	if ( ((uint_32)$30 >= (uint_32)*(($0 + [48]))) ){ goto $label$90 }
	*($30 + [8]) = $26
	*($30 + [16]) = $25
	*($31 + [64]) = [0]
	*($30) = $12
	*($10) = ($30 + [24])
	goto $label$89 
	
.LABEL $label$90
	CALL $131($8, ($31 + [64]), ($31 + [176]), ($31 + [280]))
	
.LABEL $label$89
	$30 = *($31 + [64])
	*($31 + [64]) = [0]
	if ( ($30 == 0) ){ goto $label$81 }
	$12 = *($30 + [48])
	if ( ($12 == 0) ){ goto $label$91 }
	*(($30 + [52])) = $12
	CALL $297($12)
	
.LABEL $label$91
	CALL $297($30)
	
.LABEL $label$81
	$26 = *($1)
	$3 = *(($31 + [120]))
	$25 = *(($31 + [124]))
	if ( ((int_32)$25 == (int_32)$3) ){ goto $label$92 }
	$30 = ($25 + [-24])
	$10 = ([0] - $3)
	
.LOOP $label$93:
	if ( ((int_64)*(*($30)) == (int_64)$26) ){ goto $label$92 }
	$25 = $30
	$12 = ($30 + [-24])
	$30 = $12
	if ( ((int_32)($12 + $10) != (int_32)[-24]) ){ goto $label$93 }
	
.LABEL $label$92
	if ( ((int_32)$25 == (int_32)$3) ){ goto $label$95 }
	$30 = *(($25 + [-24]))
	CALL eosio_assert(((int_32)*(($30 + [92])) == (int_32)($31 + [96])), [752])
	if ( $30 ){ goto $label$94 }
	goto $label$1 
	
.LABEL $label$95
	$30 = CALL db_find_i64(*($31 + [96]), *(($31 + [104])), (int_64)-3012230666864558080, $26)
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$1 }
	$30 = CALL $148(($31 + [96]), $30)
	CALL eosio_assert(((int_32)*($30 + [92]) == (int_32)($31 + [96])), [752])
	
.LABEL $label$94
	CALL eosio_assert([1], [1280])
	CALL eosio_assert([1], [1328])
	$12 = CALL db_next_i64(*($30 + [96]), ($31 + [176]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$96 }
	CALL $148(($31 + [96]), $12)
	
.LABEL $label$96
	CALL $149(($31 + [96]), $30)
	goto $label$1 
	
.LABEL $label$7
	$25 = ($1 + [48])
	*((($31 + [64]) + [8])) = *($25)
	$10 = ($1 + [40])
	*($31 + [64]) = *($10)
	$28 = *(($1 + [8]))
	CALL eosio_assert([1], [976])
	$12 = *($31 + [88])
	CALL eosio_assert(((int_32)*($30 + [96]) == (int_32)$12), [1024])
	CALL eosio_assert(((int_64)*($12) == (int_64)CALL $fimport$15()), [1072])
	$3 = ($30 + [64])
	*($31 + [296]) = *($3)
	*($31 + [304]) = *(($30 + [32]))
	*($31 + [312]) = *(($30 + [40]))
	$27 = *($10)
	$26 = *($30)
	$10 = *($31 + [84])
	$29 = *($10 + [48])
	$11 = *(($10 + [56]))
	CALL eosio_assert(((int_64)*($25) == (int_64)$11), [2976])
	$27 = (int_64)
	CALL eosio_assert(((int_64)$27($29 - $27)) > (int_64)-4611686018427387904), [3024])
	CALL eosio_assert(((int_64)$27 < (int_64)4611686018427387904), [3056])
	*(($30 + [56])) = $11
	*($30 + [48]) = $27
	CALL eosio_assert(((int_64)$26 == (int_64)*($30)), [1136])
	*($31 + [288]) = (($31 + [176]) + [90])
	*($31 + [284]) = ($31 + [176])
	*($31 + [280]) = ($31 + [176])
	CALL $117(($31 + [280]), $30)
	CALL db_update_i64(*($30 + [100]), $28, ($31 + [176]), [90])
	if ( (uint_64)($26 <= *($12 + [16])) ){ goto $label$97 }
	*(($12 + [16])) = ( (int_64)-2 ? ((int_64)$26 + (int_64)1) : ((uint_64)$26 > (uint_64)(int_64)-3) )
	
.LABEL $label$97
	$25 = (($31 + [296]) + [8])
	*($31 + [328]) = *($3)
	if ( (CALL memcmp(($31 + [296]), ($31 + [328]), [8]) == 0) ){ goto $label$98 }
	$3 = ($30 + [104])
	$10 = *($3)
	if ( ((int_32)$10 > (int_32)[-1]) ){ goto $label$99 }
	$10 = CALL db_idx_double_find_primary(*($12), *($12 + [8]), (int_64)-3146771307685740544, ($31 + [320]), $26)
	*($3) = $10
	
.LABEL $label$99
	CALL db_idx_double_update($10, $28, ($31 + [328]))
	
.LABEL $label$98
	$10 = (($31 + [296]) + [16])
	*($31 + [328]) = *(($30 + [32]))
	if ( (CALL memcmp($25, ($31 + [328]), [8]) == 0) ){ goto $label$100 }
	$3 = ($30 + [108])
	$25 = *($3)
	if ( ((int_32)$25 > (int_32)[-1]) ){ goto $label$101 }
	$25 = CALL db_idx64_find_primary(*($12), *($12 + [8]), (int_64)-3146771307685740543, ($31 + [320]), $26)
	*($3) = $25
	
.LABEL $label$101
	CALL db_idx64_update($25, $28, ($31 + [328]))
	
.LABEL $label$100
	*($31 + [328]) = *(($30 + [40]))
	if ( (CALL memcmp($10, ($31 + [328]), [8]) == 0) ){ goto $label$102 }
	$25 = ($30 + [112])
	$30 = *($25)
	if ( ((int_32)$30 > (int_32)[-1]) ){ goto $label$103 }
	$30 = CALL db_idx64_find_primary(*($12), *($12 + [8]), (int_64)-3146771307685740542, ($31 + [320]), $26)
	*($25) = $30
	
.LABEL $label$103
	CALL db_idx64_update($30, $28, ($31 + [328]))
	
.LABEL $label$102
	CALL eosio_assert([1], [16])
	$26 = (int_64)5459781
	$30 = [0]
	
.LOOP $label$106:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$105 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$107 }
	
.LOOP $label$108:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$105 }
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$108 }
	
.LABEL $label$107
	$12 = [1]
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$106 }
	goto $label$104 
	
.LABEL $label$105
	$12 = [0]
	
.LABEL $label$104
	CALL eosio_assert($12, [80])
	*(($1 + [48])) = (int_64)1397703940
	*(($1 + [40])) = (int_64)0
	$26 = *(($1 + [8]))
	*($31 + [320]) = $1
	*($31 + [296]) = $26
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$15()), [912])
	*($31 + [176]) = $7
	*($31 + [180]) = ($31 + [320])
	*($31 + [184]) = ($31 + [296])
	*(($12 = CALL $295([80])) + [24]) = (int_64)1397703940
	*($12 + [16]) = (int_64)0
	CALL eosio_assert([1], [16])
	$26 = (int_64)5459781
	$30 = [0]
	
.LOOP $label$111:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$110 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$112 }
	
.LOOP $label$113:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$110 }
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$113 }
	
.LABEL $label$112
	$25 = [1]
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$111 }
	goto $label$109 
	
.LABEL $label$110
	$25 = [0]
	
.LABEL $label$109
	CALL eosio_assert($25, [80])
	*($12 + [56]) = [0]
	*($12 + [48 align=4]) = (int_64)0
	*($12 + [64]) = $7
	CALL $238(($31 + [176]), $12)
	*($31 + [280]) = $12
	$26 = *($12)
	*($31 + [176]) = $26
	$25 = *($12 + [68])
	*($31 + [328]) = $25
	$10 = ($0 + [44])
	$30 = *($10)
	if ( ((uint_32)$30 >= (uint_32)*(($0 + [48]))) ){ goto $label$115 }
	*($30 + [8]) = $26
	*($30 + [16]) = $25
	*($31 + [280]) = [0]
	*($30) = $12
	*($10) = ($30 + [24])
	goto $label$114 
	
.LABEL $label$115
	CALL $131($8, ($31 + [280]), ($31 + [176]), ($31 + [328]))
	
.LABEL $label$114
	$30 = *($31 + [280])
	*($31 + [280]) = [0]
	if ( ($30 == 0) ){ goto $label$116 }
	$12 = *($30 + [48])
	if ( ($12 == 0) ){ goto $label$117 }
	*(($30 + [52])) = $12
	CALL $297($12)
	
.LABEL $label$117
	CALL $297($30)
	
.LABEL $label$116
	$26 = *($1)
	$3 = *(($31 + [120]))
	$25 = *(($31 + [124]))
	if ( ((int_32)$25 == (int_32)$3) ){ goto $label$118 }
	$30 = ($25 + [-24])
	$10 = ([0] - $3)
	
.LOOP $label$119:
	if ( ((int_64)*(*($30)) == (int_64)$26) ){ goto $label$118 }
	$25 = $30
	$12 = ($30 + [-24])
	$30 = $12
	if ( ((int_32)($12 + $10) != (int_32)[-24]) ){ goto $label$119 }
	
.LABEL $label$118
	if ( ((int_32)$25 == (int_32)$3) ){ goto $label$122 }
	$30 = *(($25 + [-24]))
	CALL eosio_assert(((int_32)*(($30 + [92])) == (int_32)($31 + [96])), [752])
	if ( $30 ){ goto $label$121 }
	goto $label$120 
	
.LABEL $label$122
	$30 = CALL db_find_i64(*($31 + [96]), *(($31 + [104])), (int_64)-3012230666864558080, $26)
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$120 }
	CALL eosio_assert(((int_32)*(CALL $148(($31 + [96]), $30) + [92]) == (int_32)($31 + [96])), [752])
	
.LABEL $label$121
	$26 = *($1)
	$3 = *(($31 + [120]))
	$25 = *(($31 + [124]))
	if ( ((int_32)$25 == (int_32)$3) ){ goto $label$123 }
	$30 = ($25 + [-24])
	$10 = ([0] - $3)
	
.LOOP $label$124:
	if ( ((int_64)*(*($30)) == (int_64)$26) ){ goto $label$123 }
	$25 = $30
	$12 = ($30 + [-24])
	$30 = $12
	if ( ((int_32)($12 + $10) != (int_32)[-24]) ){ goto $label$124 }
	
.LABEL $label$123
	if ( ((int_32)$25 == (int_32)$3) ){ goto $label$126 }
	$30 = *(($25 + [-24]))
	CALL eosio_assert(((int_32)*(($30 + [92])) == (int_32)($31 + [96])), [752])
	goto $label$125 
	
.LABEL $label$126
	$30 = [0]
	$12 = CALL db_find_i64(*($31 + [96]), *(($31 + [104])), (int_64)-3012230666864558080, $26)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$125 }
	$30 = CALL $148(($31 + [96]), $12)
	CALL eosio_assert(((int_32)*($30 + [92]) == (int_32)($31 + [96])), [752])
	
.LABEL $label$125
	$12 = ((int_32)$30 != (int_32)[0])
	CALL eosio_assert($12, [1280])
	CALL eosio_assert($12, [1328])
	$12 = CALL db_next_i64(*($30 + [96]), ($31 + [176]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$127 }
	CALL $148(($31 + [96]), $12)
	
.LABEL $label$127
	CALL $149(($31 + [96]), $30)
	
.LABEL $label$120
	*(($12 = (($31 + [48]) + [8]))) = *((($31 + [64]) + [8]))
	*($31 + [48]) = *($31 + [64])
	$26 = *(($1 + [8]))
	$30 = *($31 + [84])
	$2 = *($30 + [64])
	$28 = *($30 + [32])
	$13 = *($30 + [72])
	$27 = *($30 + [88])
	$29 = *($30)
	$11 = *($1)
	*(($31 + [8])) = *($12)
	*($31) = *($31 + [48])
	CALL _ZN5eosio7chintai13fulfill_orderENS_5assetEyyyydydb($0, $31, $11, $29, $26, $27, $13, $28, $2, [0])
	$11 = *($0)
	$26 = (int_64)0
	$27 = (int_64)59
	$30 = [1616]
	$29 = (int_64)0
	
.LOOP $label$128:
	if ( ((uint_64)$26 > (uint_64)(int_64)5) ){ goto $label$133 }
	$12 = *($30)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$132 }
	$12 = ($12 + [165])
	goto $label$131 
	
.LABEL $label$133
	$28 = (int_64)0
	if ( ((uint_64)$26 <= (uint_64)(int_64)11) ){ goto $label$130 }
	goto $label$129 
	
.LABEL $label$132
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$131
	$28 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$130
	$28 = ((int_64)((int_64)$28 & (int_64)31) << (int_64)((int_64)$27 & (int_64)4294967295))
	
.LABEL $label$129
	$30 = ($30 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$29 = ((int_64)$28 | (int_64)$29)
	$27 = ((int_64)$27 + (int_64)-5)
	if ( ((int_64)$27 != (int_64)-6) ){ goto $label$128 }
	*($31 + [184]) = $29
	*($31 + [176]) = $11
	$26 = (int_64)0
	$27 = (int_64)59
	$30 = [2864]
	$29 = (int_64)0
	
.LOOP $label$134:
	if ( ((uint_64)$26 > (uint_64)(int_64)10) ){ goto $label$139 }
	$12 = *($30)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$138 }
	$12 = ($12 + [165])
	goto $label$137 
	
.LABEL $label$139
	$28 = (int_64)0
	if ( ((int_64)$26 == (int_64)11) ){ goto $label$136 }
	goto $label$135 
	
.LABEL $label$138
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$137
	$28 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$136
	$28 = ((int_64)((int_64)$28 & (int_64)31) << (int_64)((int_64)$27 & (int_64)4294967295))
	
.LABEL $label$135
	$30 = ($30 + [1])
	$27 = ((int_64)$27 + (int_64)-5)
	$29 = ((int_64)$28 | (int_64)$29)
	$26 = ((int_64)$26 + (int_64)1)
	if ( ((int_64)$26 != (int_64)13) ){ goto $label$134 }
	*($31 + [296]) = $29
	*($31 + [280]) = *($1)
	$12 = ($0 + [416])
	$30 = *($12)
	if ( ((uint_32)$30 >= (uint_32)*(($0 + [420]))) ){ goto $label$140 }
	*($30 + [8]) = $29
	*($30) = $11
	*($30 + [16 align=4]) = (int_64)0
	*(($10 = ($30 + [24]))) = [0]
	$25 = CALL $295([16])
	*($30 + [16]) = $25
	$3 = ($25 + [16])
	*($10) = $3
	*(($25 + [8])) = *((($31 + [176]) + [8]))
	*($25) = *($31 + [176])
	*(($30 + [20])) = $3
	*($30 + [28]) = [0]
	*(($25 = ($30 + [32]))) = [0]
	*(($30 + [36])) = [0]
	CALL $167(($30 + [28]), [8])
	$30 = *($30 + [28])
	CALL eosio_assert(((int_32)(*($25) - $30) > (int_32)[7]), [1200])
	CALL memcpy($30, ($31 + [280]), [8])
	*($12) = (*($12) + [40])
	goto $label$1 
	
.LABEL $label$140
	CALL $227($6, ($31 + [176]), $0, ($31 + [296]), ($31 + [280]))
	goto $label$1 
	
.LABEL $label$6
	CALL eosio_assert(((int_32)*(CALL $148(($31 + [96]), $30) + [92]) == (int_32)($31 + [96])), [752])
	
.LABEL $label$5
	$26 = *($1)
	$3 = *(($31 + [120]))
	$25 = *(($31 + [124]))
	if ( ((int_32)$25 == (int_32)$3) ){ goto $label$141 }
	$30 = ($25 + [-24])
	$10 = ([0] - $3)
	
.LOOP $label$142:
	if ( ((int_64)*(*($30)) == (int_64)$26) ){ goto $label$141 }
	$25 = $30
	$12 = ($30 + [-24])
	$30 = $12
	if ( ((int_32)($12 + $10) != (int_32)[-24]) ){ goto $label$142 }
	
.LABEL $label$141
	if ( ((int_32)$25 == (int_32)$3) ){ goto $label$144 }
	$30 = *(($25 + [-24]))
	CALL eosio_assert(((int_32)*(($30 + [92])) == (int_32)($31 + [96])), [752])
	goto $label$143 
	
.LABEL $label$144
	$30 = [0]
	$12 = CALL db_find_i64(*($31 + [96]), *(($31 + [104])), (int_64)-3012230666864558080, $26)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$143 }
	$30 = CALL $148(($31 + [96]), $12)
	CALL eosio_assert(((int_32)*($30 + [92]) == (int_32)($31 + [96])), [752])
	
.LABEL $label$143
	$12 = ((int_32)$30 != (int_32)[0])
	CALL eosio_assert($12, [1280])
	CALL eosio_assert($12, [1328])
	$12 = CALL db_next_i64(*($30 + [96]), ($31 + [176]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$145 }
	CALL $148(($31 + [96]), $12)
	
.LABEL $label$145
	CALL $149(($31 + [96]), $30)
	goto $label$1 
	
.LABEL $label$4
	$30 = *($31 + [84])
	if ( ($30 == 0) ){ goto $label$1 }
	
.LABEL $label$3
	if ( ((float_64)*($30 + [64]) >= (float_64)$2) ){ goto $label$2 }
	
.LABEL $label$1
	*(($0 + [396])) = ((int_64)*(($1 + [80])) + (int_64)518401)
	if ( ((int_32)*(($0 + [292])) == (int_32)*(($0 + [296]))) ){ goto $label$146 }
	*($31 + [184]) = (int_64)0
	*($31 + [176]) = *($1)
	$26 = *($0)
	CALL $170(($31 + [296]), ($0 + [256]))
	$30 = *($31 + [296])
	CALL send_deferred(($31 + [176]), $26, $30, (*($31 + [300]) - $30), [0])
	$30 = *($31 + [296])
	if ( ($30 == 0) ){ goto $label$146 }
	*($31 + [300]) = $30
	CALL $297($30)
	
.LABEL $label$146
	if ( ((int_32)*(($0 + [352])) == (int_32)*(($0 + [356]))) ){ goto $label$147 }
	*($31 + [184]) = (int_64)0
	*($31 + [176]) = ((int_64)*($1) + (int_64)1)
	$26 = *($0)
	CALL $170(($31 + [296]), ($0 + [316]))
	$30 = *($31 + [296])
	CALL send_deferred(($31 + [176]), $26, $30, (*($31 + [300]) - $30), [0])
	$30 = *($31 + [296])
	if ( ($30 == 0) ){ goto $label$147 }
	*($31 + [300]) = $30
	CALL $297($30)
	
.LABEL $label$147
	if ( ((int_32)*(($0 + [412])) == (int_32)*(($0 + [416]))) ){ goto $label$148 }
	*($31 + [184]) = (int_64)0
	*($31 + [176]) = ((int_64)*($1) + (int_64)2)
	$26 = *($0)
	CALL $170(($31 + [296]), ($0 + [376]))
	$30 = *($31 + [296])
	CALL send_deferred(($31 + [176]), $26, $30, (*($31 + [300]) - $30), [0])
	$30 = *($31 + [296])
	if ( ($30 == 0) ){ goto $label$148 }
	*($31 + [300]) = $30
	CALL $297($30)
	
.LABEL $label$148
	$1 = *($31 + [120])
	if ( ($1 == 0) ){ goto $label$149 }
	$25 = ($31 + [124])
	$30 = *($25)
	if ( ((int_32)$30 == (int_32)$1) ){ goto $label$151 }
	
.LOOP $label$152:
	$30 = ($30 + [-24])
	$12 = *($30)
	*($30) = [0]
	if ( ($12 == 0) ){ goto $label$153 }
	$0 = *($12 + [48])
	if ( ($0 == 0) ){ goto $label$154 }
	*(($12 + [52])) = $0
	CALL $297($0)
	
.LABEL $label$154
	CALL $297($12)
	
.LABEL $label$153
	if ( ((int_32)$1 != (int_32)$30) ){ goto $label$152 }
	$30 = *(($31 + [120]))
	goto $label$150 
	
.LABEL $label$151
	$30 = $1
	
.LABEL $label$150
	*($25) = $1
	CALL $297($30)
	
.LABEL $label$149
	$0 = *($31 + [160])
	if ( ($0 == 0) ){ goto $label$155 }
	$1 = ($31 + [164])
	$30 = *($1)
	if ( ((int_32)$30 == (int_32)$0) ){ goto $label$157 }
	
.LOOP $label$158:
	$30 = ($30 + [-24])
	$12 = *($30)
	*($30) = [0]
	if ( ($12 == 0) ){ goto $label$159 }
	CALL $297($12)
	
.LABEL $label$159
	if ( ((int_32)$0 != (int_32)$30) ){ goto $label$158 }
	$30 = *(($31 + [160]))
	goto $label$156 
	
.LABEL $label$157
	$30 = $0
	
.LABEL $label$156
	*($1) = $0
	CALL $297($30)
	
.LABEL $label$155
	*([0] + [4]) = ($31 + [336])
}

void .FUNC _ZNK5eosio6ulbook12get_quantityEv (int_32 $0, int_32 $1)
{
	*($0) = *($1 + [16])
	*(($0 + [8])) = *(($1 + [24]))
}

int_64 .FUNC _ZNK5eosio6ulbook12get_durationEv (int_32 $0)
{
	return *($0 + [32])
}

int_32 .FUNC $230 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $129($0, ($1 + [48]))
	*($3 + [15]) = *($1 + [60])
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[0]), [1200])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $144 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1408])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1472])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $297($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $297($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
	$7 = *(($1 + [72]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6653061481472458752, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	$7 = *(($1 + [76]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6653061481472458753, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $192 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [752])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5969209044777304064, (int_64)-5969209044777304064)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $181($0, $3)
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [752])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [976])
	CALL $195($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $196($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $260 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	$9 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $9) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[40])
	if ( ((uint_32)$9 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($9 << [1])
	$7 = ( $6 ? $9 : ($9 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $295(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	*(($9 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($9 + [8]) = *($3)
	*($9 + [16 align=4]) = (int_64)0
	*(($3 = ($9 + [24]))) = [0]
	$2 = CALL $295([16])
	*($9 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($9 + [20])) = $5
	*($9 + [28]) = [0]
	*(($5 = ($9 + [32]))) = [0]
	*(($9 + [36])) = [0]
	$2 = *($4 + [36])
	$1 = ( *(($4 + [40])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($1 + [29])
	$8 = (CASTING uint_64)(uint_32 $1)
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$1 = ($9 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $167($1, $2)
	$7 = *($5)
	$2 = *($1)
	goto $label$6 
	
.LABEL $label$7
	$7 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($10 + [4]) = $2
	*($10) = $2
	*($10 + [8]) = $7
	CALL $186($10, $4)
	$5 = ($9 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$9 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$10:
	*(($9 + [-32])) = *(($2 + [-12]))
	*(($9 + [-40])) = *(($2 + [-20]))
	*(($1 = ($9 + [-24]))) = (int_64)0
	*(($4 = ($9 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($9 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($4) = *($1)
	*($1) = [0]
	*(($1 = ($9 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($4 = ($9 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($9 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($4) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$9 = ($9 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($0) = $9
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$11 }
	$1 = ([0] - $4)
	$9 = ($2 + [-24])
	
.LOOP $label$12:
	$2 = *(($9 + [12]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($9 + [16])) = $2
	CALL $297($2)
	
.LABEL $label$13
	$2 = *($9)
	if ( ($2 == 0) ){ goto $label$14 }
	*(($9 + [4])) = $2
	CALL $297($2)
	
.LABEL $label$14
	$9 = ($9 + [-40])
	if ( ((int_32)($9 + $1) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $297($4)
	
.LABEL $label$15
	*([0] + [4]) = ($10 + [16])
	(unreachable)
}

void .FUNC _ZN5eosio7chintai13apply_onerrorERKNS_7onerrorE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [192])
	*([0] + [4]) = $4
	$2 = *(($1 + [20]))
	$1 = *($1 + [16])
	$3 = CALL current_time()
	*(($4 + [140])) = [0]
	*(($4 + [144])) = [0]
	*($4 + [124]) = [0]
	*($4 + [128]) = [0]
	*($4 + [132]) = [0]
	*($4 + [136]) = [0]
	*($4 + [112]) = ((CASTING uint_32)(uint_64 ((uint_64)$3 / (uint_64)(int_64)1000000)) + [60])
	*($4 + [148]) = [0]
	*(($4 + [152])) = [0]
	*(($4 + [156])) = [0]
	*($4 + [160]) = [0]
	*(($4 + [164])) = [0]
	*(($4 + [168])) = [0]
	*($4 + [68]) = $1
	*($4 + [64]) = $1
	*($4 + [72]) = $2
	CALL $243(($4 + [64]), ($4 + [112]))
	CALL $245(CALL $244(CALL $244(($4 + [64]), ($4 + [136])), ($4 + [148])), ($4 + [160]))
	CALL _ZN5eosio7chintai14get_extensionsERKNS_11transactionE(($4 + [64]), $0, ($4 + [112]))
	$1 = *($4 + [72])
	*($4 + [72]) = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[1000000]) ){ goto $label$3 }
	$1 = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [31104000])
	if ( $1 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_64)*($4 + [64]) < (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$2 }
	$1 = (CASTING uint_32)(uint_64 (int_64))(*($4 + [64]) - ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
	if ( $1) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = [180]
	
.LABEL $label$1
	*(($4 + [132])) = $1
	CALL memcpy(($4 + [16]), ($4 + [64]), [33])
	CALL $318((($4 + [16]) + [36]), (($4 + [64]) + [36]))
	CALL _ZN5eosio7chintai17update_extensionsERNS_11transactionENS0_22transaction_extensionsEb($0, ($4 + [112]), ($4 + [16]), [1])
	if ( ((*($4 + [52]) & [1]) == 0) ){ goto $label$4 }
	CALL $297(*(($4 + [60])))
	
.LABEL $label$4
	*($4 + [8]) = (int_64)0
	$3 = *($0)
	*($4) = $3
	CALL $170(($4 + [176]), ($4 + [112]))
	$0 = *($4 + [176])
	CALL send_deferred($4, $3, $0, (*($4 + [180]) - $0), [0])
	$0 = *($4 + [176])
	if ( ($0 == 0) ){ goto $label$5 }
	*($4 + [180]) = $0
	CALL $297($0)
	
.LABEL $label$5
	if ( ((*(($4 + [100])) & [1]) == 0) ){ goto $label$6 }
	CALL $297(*(($4 + [108])))
	
.LABEL $label$6
	CALL $194(($4 + [112]))
	*([0] + [4]) = ($4 + [192])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [784])
	*([0] + [4]) = $9
	$3 = CALL $263(($9 + [304]), $0)
	$0 = (int_64)0
	$6 = (int_64)59
	$5 = [3792]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$0 > (uint_64)(int_64)6) ){ goto $label$6 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$0 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$0 = ((int_64)$0 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$0 = (int_64)0
	$6 = (int_64)59
	$5 = [1696]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$0 > (uint_64)(int_64)4) ){ goto $label$13 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$4 = ($4 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$0 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$9
	$5 = ($5 + [1])
	$0 = ((int_64)$0 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [3808])
	CALL $264(($9 + [256]))
	CALL _ZN5eosio7chintai13apply_onerrorERKNS_7onerrorE($3, ($9 + [256]))
	$5 = *($9 + [272])
	if ( ($5 == 0) ){ goto $label$7 }
	*(($9 + [276])) = $5
	CALL $297($5)
	
.LABEL $label$7
	if ( ((int_64)$2 <= (int_64)4730614996831743615) ){ goto $label$31 }
	if ( ((int_64)$2 <= (int_64)4854103375010594815) ){ goto $label$30 }
	if ( ((int_64)$2 <= (int_64)6301285616044605439) ){ goto $label$28 }
	if ( ((int_64)$2 == (int_64)6301285616044605440) ){ goto $label$24 }
	if ( ((int_64)$2 == (int_64)6761222076679323648) ){ goto $label$23 }
	if ( ((int_64)$2 != (int_64)8421045207927095296) ){ goto $label$15 }
	*($9 + [244]) = [0]
	*($9 + [240]) = [1]
	*($9 + [16 align=4]) = *($9 + [240])
	CALL $266($3, ($9 + [16]))
	goto $label$14 
	
.LABEL $label$31
	if ( ((int_64)$2 > (int_64)-4997612842707921921) ){ goto $label$29 }
	if ( ((int_64)$2 > (int_64)-5915331449939746305) ){ goto $label$27 }
	if ( ((int_64)$2 == (int_64)-8379319509738586112) ){ goto $label$22 }
	if ( ((int_64)$2 != (int_64)-5920734475137843200) ){ goto $label$15 }
	*($9 + [196]) = [0]
	*($9 + [192]) = [2]
	*($9 + [64 align=4]) = *($9 + [192])
	CALL $270($3, ($9 + [64]))
	goto $label$14 
	
.LABEL $label$30
	if ( ((int_64)$2 > (int_64)4849591932204438527) ){ goto $label$26 }
	if ( ((int_64)$2 == (int_64)4730614996831743616) ){ goto $label$21 }
	if ( ((int_64)$2 != (int_64)4779644523809079296) ){ goto $label$15 }
	*($9 + [148]) = [0]
	*($9 + [144]) = [3]
	*($9 + [112 align=4]) = *($9 + [144])
	CALL $268($3, ($9 + [112]))
	goto $label$14 
	
.LABEL $label$29
	if ( ((int_64)$2 > (int_64)3617214701412286463) ){ goto $label$25 }
	if ( ((int_64)$2 == (int_64)-4997612842707921920) ){ goto $label$20 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$15 }
	CALL $265(($9 + [256]))
	CALL _ZN5eosio7chintai2onERKNS_5token13transfer_argsEy($3, ($9 + [256]), $1)
	if ( ((*($9 + [288]) & [1]) == 0) ){ goto $label$14 }
	CALL $297(*(($9 + [296])))
	goto $label$14 
	
.LABEL $label$28
	if ( ((int_64)$2 == (int_64)4854103375010594816) ){ goto $label$19 }
	if ( ((int_64)$2 != (int_64)5377983091807789568) ){ goto $label$15 }
	*($9 + [204]) = [0]
	*($9 + [200]) = [4]
	*($9 + [56 align=4]) = *($9 + [200])
	CALL $268($3, ($9 + [56]))
	goto $label$14 
	
.LABEL $label$27
	if ( ((int_64)$2 == (int_64)-5915331449939746304) ){ goto $label$18 }
	if ( ((int_64)$2 == (int_64)-5001342339331915776) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$26
	if ( ((int_64)$2 == (int_64)4849591932204438528) ){ goto $label$17 }
	if ( ((int_64)$2 != (int_64)4854101572467703808) ){ goto $label$15 }
	*($9 + [212]) = [0]
	*($9 + [208]) = [5]
	*($9 + [48 align=4]) = *($9 + [208])
	CALL $269($3, ($9 + [48]))
	goto $label$14 
	
.LABEL $label$25
	if ( ((int_64)$2 == (int_64)3617214701412286464) ){ goto $label$16 }
	if ( ((int_64)$2 != (int_64)4730614996831743488) ){ goto $label$15 }
	*($9 + [220]) = [0]
	*($9 + [216]) = [6]
	*($9 + [40 align=4]) = *($9 + [216])
	CALL $268($3, ($9 + [40]))
	goto $label$14 
	
.LABEL $label$24
	*($9 + [172]) = [0]
	*($9 + [168]) = [7]
	*($9 + [88 align=4]) = *($9 + [168])
	CALL $271($3, ($9 + [88]))
	goto $label$14 
	
.LABEL $label$23
	*($9 + [236]) = [0]
	*($9 + [232]) = [8]
	*($9 + [24 align=4]) = *($9 + [232])
	CALL $267($3, ($9 + [24]))
	goto $label$14 
	
.LABEL $label$22
	*($9 + [140]) = [0]
	*($9 + [136]) = [9]
	*($9 + [120 align=4]) = *($9 + [136])
	CALL $273($3, ($9 + [120]))
	goto $label$14 
	
.LABEL $label$21
	*($9 + [228]) = [0]
	*($9 + [224]) = [10]
	*($9 + [32 align=4]) = *($9 + [224])
	CALL $268($3, ($9 + [32]))
	goto $label$14 
	
.LABEL $label$20
	*($9 + [188]) = [0]
	*($9 + [184]) = [11]
	*($9 + [72 align=4]) = *($9 + [184])
	CALL $268($3, ($9 + [72]))
	goto $label$14 
	
.LABEL $label$19
	*($9 + [164]) = [0]
	*($9 + [160]) = [12]
	*($9 + [96 align=4]) = *($9 + [160])
	CALL $272($3, ($9 + [96]))
	goto $label$14 
	
.LABEL $label$18
	*($9 + [156]) = [0]
	*($9 + [152]) = [13]
	*($9 + [104 align=4]) = *($9 + [152])
	CALL $266($3, ($9 + [104]))
	goto $label$14 
	
.LABEL $label$17
	*($9 + [132]) = [0]
	*($9 + [128]) = [14]
	*($9 + [8 align=4]) = *($9 + [128])
	CALL $274($3, ($9 + [8]))
	goto $label$14 
	
.LABEL $label$16
	*($9 + [180]) = [0]
	*($9 + [176]) = [15]
	*($9 + [80 align=4]) = *($9 + [176])
	CALL $270($3, ($9 + [80]))
	goto $label$14 
	
.LABEL $label$15
	*($9 + [252]) = [0]
	*($9 + [248]) = [16]
	*($9) = *($9 + [248])
	CALL $266($3, $9)
	
.LABEL $label$14
	CALL $275($3)
	*([0] + [4]) = ($9 + [784])
}

int_32 .FUNC $303 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = ($2 & [1])
	if ( $3 ){ goto $label$3 }
	if ( ((uint_32)uint_32($2 >> [1]) > (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((uint_32)*($0 + [4]) <= (uint_32)$1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $3 ){ goto $label$4 }
	return (($0 + [1]) + $1)
	
.LABEL $label$4
	return (*($0 + [8]) + $1)
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $302 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $295(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $297($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $301 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $295($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $297($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $263 (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	*($0) = $1
	CALL _ZN5eosio17orderbook_managerC2Ey(($0 + [8]), $1)
	$2 = *($0)
	$1 = (int_64)0
	$5 = (int_64)59
	$4 = [3872]
	$6 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$7 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	*($0 + [176]) = $2
	*(($0 + [184])) = $6
	*(($0 + [192])) = (int_64)-1
	$1 = (int_64)0
	*(($0 + [200])) = (int_64)0
	*(($0 + [208])) = [0]
	$5 = (int_64)59
	$4 = [3888]
	$6 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$12 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$3 = ($3 + [165])
	goto $label$10 
	
.LABEL $label$12
	$7 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$8
	$4 = ($4 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$7 }
	*($0 + [216]) = $2
	*(($0 + [224])) = $6
	*(($0 + [232])) = (int_64)-1
	$1 = (int_64)0
	*(($0 + [240])) = (int_64)0
	*(($0 + [248])) = [0]
	$7 = CALL current_time()
	*(($0 + [268])) = [0]
	*(($0 + [272])) = [0]
	*(($0 + [276])) = [0]
	*(($0 + [280])) = [0]
	*(($0 + [284])) = [0]
	*(($0 + [288])) = [0]
	*($0 + [256]) = ((CASTING uint_32)(uint_64 ((uint_64)$7 / (uint_64)(int_64)1000000)) + [60])
	*(($0 + [292])) = [0]
	*(($0 + [296])) = [0]
	*(($0 + [300])) = [0]
	*(($0 + [304])) = [0]
	*(($0 + [308])) = [0]
	*(($0 + [312])) = [0]
	$7 = CALL current_time()
	*(($0 + [328])) = [0]
	*(($0 + [332])) = [0]
	*(($0 + [336])) = [0]
	*(($0 + [340])) = [0]
	*(($0 + [344])) = [0]
	*(($0 + [348])) = [0]
	*($0 + [316]) = ((CASTING uint_32)(uint_64 ((uint_64)$7 / (uint_64)(int_64)1000000)) + [60])
	*(($0 + [352])) = [0]
	*(($0 + [356])) = [0]
	*(($0 + [360])) = [0]
	*(($0 + [364])) = [0]
	*(($0 + [368])) = [0]
	*(($0 + [372])) = [0]
	$7 = CALL current_time()
	*(($0 + [388])) = [0]
	*(($0 + [392])) = [0]
	*(($0 + [396])) = [0]
	*(($0 + [400])) = [0]
	*(($0 + [404])) = [0]
	*(($0 + [408])) = [0]
	*($0 + [376]) = ((CASTING uint_32)(uint_64 ((uint_64)$7 / (uint_64)(int_64)1000000)) + [60])
	*(($0 + [412])) = [0]
	*(($0 + [416])) = [0]
	*(($0 + [420])) = [0]
	*(($0 + [424])) = [0]
	*(($0 + [428])) = [0]
	*(($0 + [432])) = [0]
	$2 = *($0)
	$5 = (int_64)59
	$4 = [3904]
	$6 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$1 > (uint_64)(int_64)4) ){ goto $label$18 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$3 = ($3 + [165])
	goto $label$16 
	
.LABEL $label$18
	$7 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$14
	$4 = ($4 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$13 }
	*($0 + [440]) = $2
	*(($0 + [448])) = $6
	*(($0 + [456])) = (int_64)-1
	*(($0 + [464])) = (int_64)0
	*(($0 + [472])) = [0]
	return $0
}

int_32 .FUNC $307 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$3 }
	$4 = uint_32($5 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $6 ){ goto $label$5 }
	$6 = [10]
	goto $label$4 
	
.LABEL $label$5
	$5 = *($0)
	$6 = (($5 & [-2]) + [-1])
	
.LABEL $label$4
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$6 }
	CALL $301($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	return $0
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ($5 & [1]) ){ goto $label$8 }
	$5 = ($0 + [1])
	goto $label$7 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	
.LABEL $label$7
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$10 }
	CALL memmove(($6 + $3), $6, $1)
	$2 = ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) )
	
.LABEL $label$10
	CALL memmove($6, $2, $3)
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$12 }
	*($0) = ($3 << [1])
	goto $label$11 
	
.LABEL $label$12
	*($0 + [4]) = $3
	
.LABEL $label$11
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $306 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $307($0, $1, $2, CALL $347($2))
}

int_32 .FUNC $305 (int_32 $0, int_32 $1)
{
	return CALL $304($0, $1, CALL $347($1))
}

int_32 .FUNC $304 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $301($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

int_32 .FUNC $309 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = *($0)
	if ( ($4 & [1]) ){ goto $label$2 }
	$4 = uint_32($4 >> [1])
	$3 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0 + [4])
	$3 = *($0 + [8])
	
.LABEL $label$1
	$0 = [-1]
	if ( ((uint_32)$4 <= (uint_32)$2) ){ goto $label$3 }
	$0 = ($4 - $2)
	if ( ($0 == 0) ){ goto $label$5 }
	$0 = CALL memchr(($3 + $2), ($1 & [255]), $0)
	goto $label$4 
	
.LABEL $label$5
	$0 = [0]
	
.LABEL $label$4
	$0 = ( ($0 - $3) ? [-1] : $0 )
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $308 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$3 = ($6 & [1])
	if ( $3 ){ goto $label$3 }
	$4 = uint_32($6 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $3 ){ goto $label$6 }
	$5 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $3 ? $2 : ($3 <= $2) )
	$3 = ($4 - $1)
	$3 = ($3 - $2)
	if ( ($3 == 0) ){ goto $label$7 }
	$1 = ($5 + $1)
	CALL memmove($1, ($1 + $2), $3)
	$6 = *($0)
	
.LABEL $label$7
	$2 = ($4 - $2)
	if ( ($6 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($5 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $282 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($3 + [48]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [56]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [64]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((int_32)*($1 + [8]) != (int_32)*($1 + [4])), [1248])
	CALL memcpy(($4 + [15]), *($1 + [4]), [1])
	*($1 + [4]) = (*($1 + [4]) + [1])
	*($0 + [72]) = ((int_32)*($4 + [15]) != (int_32)[0])
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $268 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1248])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [1200])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1200])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1200])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $129($0, ($1 + [48]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [14]) = *($1 + [88])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1200])
	CALL memcpy(*($0 + [4]), ($3 + [14]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [89])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1200])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $286 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)1397703940
	CALL eosio_assert([1], [16])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [80])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [12]) = $1
	*($6 + [8]) = $1
	*($6 + [16]) = ($1 + $2)
	*($6 + [24]) = ($6 + [8])
	*($6 + [36]) = ($0 + [8])
	*($6 + [32]) = $0
	*($6 + [40]) = ($0 + [16])
	*($6 + [44]) = ($0 + [32])
	CALL $287(($6 + [32]), ($6 + [24]))
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $287 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1248])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $257(*($1), *($0 + [12]))
}

void .FUNC $284 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$6 = *($1 + [32])
	$5 = *($1 + [24])
	$4 = *($1 + [16])
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $318($8, ($1 + [36]))
	$1 = *($0 + [4])
	$7 = *($1 + [4])
	$0 = (*(*($0)) + int_32($7 >> [1]))
	$1 = *($1)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $318(($8 + [16]), $8)
	CALL void $0((int_32 $2), (int_64 $3), (int_32 $4), (int_64 $5), (int_64 ((int_32)($6 & [255]) != (int_32)[0])), (int_32 ($8 + [16])), (int_32 $1))
	if ( ((*($8 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $297(*($8 + [24]))
	
.LABEL $label$2
	if ( ((*($8) & [1]) == 0) ){ goto $label$3 }
	CALL $297(*($8 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $285 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

int_32 .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1216])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $295([64])
	$4 = CALL $125($6)
	*($6 + [48]) = $0
	CALL $126(($8 + [32]), $4)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $127(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $297($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $122 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $295(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [48])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [52])) = $6
	CALL $297($6)
	
.LABEL $label$11
	CALL $297($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $297($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $289([3912], $0)
}

int_32 .FUNC $289 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $290($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [12320])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC $127 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $295(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $297($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $297($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN5eosio7chintai9liveundelEyNS_5assetES1_byyyy (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5, int_64 $6, int_64 $7, int_64 $8)
{
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_32 $21
	$21 = (*([0] + [4]) - [224])
	*([0] + [4]) = $21
	$9 = *($0)
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1616]
	$20 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$6 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$10 = ($10 + [165])
	goto $label$4 
	
.LABEL $label$6
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$2
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$20 = ((int_64)$17 | (int_64)$20)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$1 }
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1696]
	$18 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$16 > (uint_64)(int_64)4) ){ goto $label$12 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$10 = ($10 + [165])
	goto $label$10 
	
.LABEL $label$12
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$8
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$7 }
	$16 = (int_64)0
	$17 = (int_64)59
	$14 = [1712]
	$19 = (int_64)0
	
.LOOP $label$13:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$14 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$10 = ($10 + [165])
	goto $label$15 
	
.LABEL $label$16
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$14
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$15 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$13 }
	*((($21 + [112]) + [28])) = *(($2 + [12]))
	*((($21 + [112]) + [24])) = *(($2 + [8]))
	*((($21 + [112]) + [20])) = *(($2 + [4]))
	*($21 + [120]) = $1
	*($21 + [112]) = $9
	*($21 + [128]) = *($2)
	*(($21 + [152])) = *(($3 + [8]))
	*($21 + [144]) = *($3)
	*($21 + [160]) = $18
	*($21 + [168]) = $19
	*(($14 = CALL $295([16]))) = $9
	*($14 + [8]) = $20
	*(($10 = ($21 + [192]))) = [0]
	$12 = ($14 + [16])
	*((($21 + [160]) + [24])) = $12
	*((($21 + [160]) + [20])) = $12
	*($21 + [176]) = $14
	*($21 + [188]) = [0]
	*(($21 + [196])) = [0]
	CALL $167((($21 + [160]) + [28]), [48])
	$14 = *($10)
	$10 = *($21 + [188])
	*($21 + [76]) = $10
	*($21 + [72]) = $10
	*($21 + [80]) = $14
	*($21 + [208]) = ($21 + [72])
	*($21 + [40]) = ($21 + [112])
	CALL $184(($21 + [40]), ($21 + [208]))
	CALL $185(($21 + [112]), ($21 + [160]))
	$14 = *($21 + [112])
	CALL send_inline($14, (*($21 + [116]) - $14))
	$14 = *($21 + [112])
	if ( ($14 == 0) ){ goto $label$17 }
	*($21 + [116]) = $14
	CALL $297($14)
	
.LABEL $label$17
	$19 = *($0)
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1616]
	$20 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$23 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$10 = ($10 + [165])
	goto $label$21 
	
.LABEL $label$23
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$19
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$20 = ((int_64)$17 | (int_64)$20)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$18 }
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1728]
	$18 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$16 > (uint_64)(int_64)9) ){ goto $label$29 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$10 = ($10 + [165])
	goto $label$27 
	
.LABEL $label$29
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$25
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$24 }
	$16 = CALL current_time()
	CALL _ZNSt3__19to_stringEy(($21 + [208]), $5)
	$14 = CALL $306(($21 + [208]), [0], [1744])
	$10 = ($14 + [8])
	*((($21 + [56]) + [8])) = *($10)
	*($21 + [56]) = *($14)
	*($14) = [0]
	*(($14 + [4])) = [0]
	*($10) = [0]
	*(($21 + [156])) = [0]
	*($21 + [148 align=4]) = (int_64)0
	*($21 + [112]) = ((int_64)((uint_64)$16 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($21 + [120]) = [0]
	*($21 + [128]) = $6
	*($21 + [136]) = $7
	*($21 + [144]) = $4
	CALL $300((($21 + [112]) + [36]), ($21 + [56]))
	*(($10 = ($21 + [96]))) = [0]
	*($21 + [80]) = $18
	*($21 + [72]) = $19
	*($21 + [88]) = (int_64)0
	*(($14 = CALL $295([16]))) = $19
	*($14 + [8]) = $20
	*(($21 + [104])) = [0]
	$12 = ($14 + [16])
	*($10) = $12
	*(($21 + [92])) = $12
	*($21 + [88]) = $14
	*($21 + [100]) = [0]
	*((($21 + [72]) + [36])) = [0]
	$14 = *($21 + [148])
	$10 = ( *(($21 + [152])) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$14 = ($10 + [29])
	$16 = (CASTING uint_64)(uint_32 $10)
	$10 = ($21 + [100])
	
.LOOP $label$30:
	$14 = ($14 + [1])
	$16 = (uint_64)$16 >> (uint_64)(int_64)7
	if ( ((int_64)$16) != (int_64)0) ){ goto $label$30 }
	if ( ($14 == 0) ){ goto $label$32 }
	CALL $167($10, $14)
	$10 = *(($21 + [104]))
	$14 = *(($21 + [100]))
	goto $label$31 
	
.LABEL $label$32
	$10 = [0]
	$14 = [0]
	
.LABEL $label$31
	*($21 + [44]) = $14
	*($21 + [40]) = $14
	*($21 + [48]) = $10
	CALL $186(($21 + [40]), ($21 + [112]))
	if ( ((*(($21 + [148])) & [1]) == 0) ){ goto $label$33 }
	CALL $297(*(($21 + [156])))
	
.LABEL $label$33
	if ( ((*($21 + [56]) & [1]) == 0) ){ goto $label$34 }
	CALL $297(*($21 + [64]))
	
.LABEL $label$34
	if ( ((*($21 + [208]) & [1]) == 0) ){ goto $label$35 }
	CALL $297(*($21 + [216]))
	
.LABEL $label$35
	CALL $185(($21 + [112]), ($21 + [72]))
	$14 = *($21 + [112])
	CALL send_inline($14, (*($21 + [116]) - $14))
	$14 = *($21 + [112])
	if ( ($14 == 0) ){ goto $label$36 }
	*($21 + [116]) = $14
	CALL $297($14)
	
.LABEL $label$36
	$12 = ($0 + [412])
	$11 = ($0 + [376])
	$18 = *($0)
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1616]
	$20 = (int_64)0
	
.LOOP $label$37:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$42 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$10 = ($10 + [165])
	goto $label$40 
	
.LABEL $label$42
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$41
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$39
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$38
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$20 = ((int_64)$17 | (int_64)$20)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$37 }
	*($21 + [48]) = $20
	*($21 + [40]) = $18
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1760]
	$20 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$16 > (uint_64)(int_64)9) ){ goto $label$48 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$10 = ($10 + [165])
	goto $label$46 
	
.LABEL $label$48
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$44
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$20 = ((int_64)$17 | (int_64)$20)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$43 }
	*($21) = $20
	$16 = *($2)
	$17 = *($2 + [8])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$17), [176])
	$16 = ((int_64)$16 + (int_64)*($3))
	CALL eosio_assert(((int_64)$16 > (int_64)-4611686018427387904), [224])
	CALL eosio_assert(((int_64)$16 < (int_64)4611686018427387904), [256])
	*((($21 + [112]) + [16])) = $17
	*($21 + [120]) = $16
	*($21 + [112]) = $8
	*($21 + [136]) = $6
	*($21 + [144]) = $7
	*($21 + [152]) = $4
	$10 = ($0 + [416])
	$14 = *($10)
	if ( ((uint_32)$14 >= (uint_32)*(($0 + [420]))) ){ goto $label$50 }
	*($14 + [16 align=4]) = (int_64)0
	$16 = *($0)
	*($14 + [8]) = *($21)
	*($14) = $16
	*(($3 = ($14 + [24]))) = [0]
	$2 = CALL $295([16])
	*($14 + [16]) = $2
	$13 = ($2 + [16])
	*($3) = $13
	*(($2 + [8])) = *((($21 + [40]) + [8]))
	*($2) = *($21 + [40])
	*(($14 + [20])) = $13
	*($14 + [28]) = [0]
	*(($2 = ($14 + [32]))) = [0]
	*(($14 + [36])) = [0]
	CALL $167(($14 + [28]), [41])
	$2 = *($2)
	$14 = *($14 + [28])
	*($21 + [212]) = $14
	*($21 + [208]) = $14
	*($21 + [216]) = $2
	*($21 + [200]) = ($21 + [208])
	*($21 + [32]) = ($21 + [112])
	CALL $187(($21 + [32]), ($21 + [200]))
	*($10) = (*($10) + [40])
	goto $label$49 
	
.LABEL $label$50
	CALL $188($12, ($21 + [40]), $0, $21, ($21 + [112]))
	
.LABEL $label$49
	$18 = *($0)
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1616]
	$20 = (int_64)0
	
.LOOP $label$51:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$56 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$55 }
	$10 = ($10 + [165])
	goto $label$54 
	
.LABEL $label$56
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$55
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$54
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$53
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$52
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$20 = ((int_64)$17 | (int_64)$20)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$51 }
	*($21 + [48]) = $20
	*($21 + [40]) = $18
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1728]
	$20 = (int_64)0
	
.LOOP $label$57:
	if ( ((uint_64)$16 > (uint_64)(int_64)9) ){ goto $label$62 }
	$10 = *($14)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$10 = ($10 + [165])
	goto $label$60 
	
.LABEL $label$62
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$59
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$58
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$20 = ((int_64)$17 | (int_64)$20)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$57 }
	*($21 + [32]) = $20
	$16 = CALL current_time()
	CALL _ZNSt3__19to_stringEy($21, $5)
	$14 = CALL $306($21, [0], [1776])
	$10 = ($14 + [8])
	*((($21 + [16]) + [8])) = *($10)
	*($21 + [16]) = *($14)
	*($14) = [0]
	*(($14 + [4])) = [0]
	*($10) = [0]
	*(($21 + [156])) = [0]
	*($21 + [148 align=4]) = (int_64)0
	*($21 + [112]) = ((int_64)((int_64)((uint_64)$16 / (uint_64)(int_64)1000000) + (int_64)259260) & (int_64)4294967295)
	*($21 + [120]) = [0]
	*($21 + [128]) = $6
	*($21 + [136]) = $7
	*($21 + [144]) = $4
	$2 = (($21 + [112]) + [36])
	CALL $300($2, ($21 + [16]))
	$10 = *(($0 + [416]))
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [420]))) ){ goto $label$66 }
	*($10 + [16 align=4]) = (int_64)0
	$16 = *($0)
	*($10 + [8]) = $20
	*($10) = $16
	*(($3 = ($10 + [24]))) = [0]
	$14 = CALL $295([16])
	*($10 + [16]) = $14
	$4 = ($14 + [16])
	*($3) = $4
	*(($14 + [8])) = *((($21 + [40]) + [8]))
	*($14) = *($21 + [40])
	*(($10 + [20])) = $4
	*($10 + [28]) = [0]
	*(($10 + [32])) = [0]
	*(($10 + [36])) = [0]
	$14 = *($2)
	$2 = ( *(($21 + [152])) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$14 = ($2 + [29])
	$16 = (CASTING uint_64)(uint_32 $2)
	$2 = ($10 + [28])
	
.LOOP $label$67:
	$14 = ($14 + [1])
	$16 = (uint_64)$16 >> (uint_64)(int_64)7
	if ( ((int_64)$16) != (int_64)0) ){ goto $label$67 }
	if ( ($14 == 0) ){ goto $label$65 }
	CALL $167($2, $14)
	$2 = *(($10 + [32]))
	$14 = *(($10 + [28]))
	goto $label$64 
	
.LABEL $label$66
	CALL $189($12, ($21 + [40]), $0, ($21 + [32]), ($21 + [112]))
	goto $label$63 
	
.LABEL $label$65
	$2 = [0]
	$14 = [0]
	
.LABEL $label$64
	*($21 + [212]) = $14
	*($21 + [208]) = $14
	*($21 + [216]) = $2
	CALL $186(($21 + [208]), ($21 + [112]))
	*(($14 = ($0 + [416]))) = (*($14) + [40])
	
.LABEL $label$63
	if ( ((*(($21 + [148])) & [1]) == 0) ){ goto $label$68 }
	CALL $297(*(($21 + [156])))
	
.LABEL $label$68
	if ( ((*($21 + [16]) & [1]) == 0) ){ goto $label$69 }
	CALL $297(*($21 + [24]))
	
.LABEL $label$69
	if ( ((*($21) & [1]) == 0) ){ goto $label$70 }
	CALL $297(*($21 + [8]))
	
.LABEL $label$70
	*(($0 + [396])) = [259260]
	*($21 + [120]) = (int_64)0
	*($21 + [112]) = ((int_64)((int_64)$6 + (int_64)$7) + (int_64)6)
	$16 = *($0)
	CALL $170(($21 + [40]), $11)
	$14 = *($21 + [40])
	CALL send_deferred(($21 + [112]), $16, $14, (*($21 + [44]) - $14), [0])
	$14 = *($21 + [40])
	if ( ($14 == 0) ){ goto $label$71 }
	*($21 + [44]) = $14
	CALL $297($14)
	
.LABEL $label$71
	$14 = *($21 + [100])
	if ( ($14 == 0) ){ goto $label$72 }
	*(($21 + [104])) = $14
	CALL $297($14)
	
.LABEL $label$72
	$14 = *($21 + [88])
	if ( ($14 == 0) ){ goto $label$73 }
	*(($21 + [92])) = $14
	CALL $297($14)
	
.LABEL $label$73
	$14 = *($21 + [188])
	if ( ($14 == 0) ){ goto $label$74 }
	*(($21 + [192])) = $14
	CALL $297($14)
	
.LABEL $label$74
	$14 = *($21 + [176])
	if ( ($14 == 0) ){ goto $label$75 }
	*(($21 + [180])) = $14
	CALL $297($14)
	
.LABEL $label$75
	*([0] + [4]) = ($21 + [224])
}

int_32 .FUNC $125 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1397703940
	CALL eosio_assert([1], [16])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [40]))) = (int_64)1397703940
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [16])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [80])
	return $0
}

int_32 .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $182 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $295(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $297($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $297($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $167($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [1200])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [1200])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $178(CALL $179($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((int_32)(*($3 + [8]) - $1) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [40]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	*($4 + [15]) = *($0 + [40])
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [1200])
	CALL memcpy(*($3 + [4]), ($4 + [15]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $186 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [32])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1200])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = CALL $190($0, ($1 + [36]))
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC _ZNK5eosio5order12get_quantityEv (int_32 $0, int_32 $1)
{
	*($0) = *($1 + [24])
	*(($0 + [8])) = *(($1 + [32]))
}

int_32 .FUNC $310 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

void .FUNC _ZNSt3__19to_stringEi (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [12416], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $312(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $312(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC _ZNK5eosio5order8get_hashEv (int_32 $0, int_32 $1)
{
	*(($0 + [8])) = *(($1 + [120]))
	*($0) = *($1 + [112])
}

int_64 .FUNC _ZNK5eosio5order23get_order_creation_timeEv (int_32 $0)
{
	return *($0 + [72])
}

void .FUNC _ZNK5eosio5order12get_durationEv (int_32 $0, int_32 $1)
{
	*($0) = *($1 + [80])
	*(($0 + [8])) = *(($1 + [88]))
}

void .FUNC _ZNK5eosio5order16get_cpu_bw_ratioEv (int_32 $0, int_32 $1)
{
	*($0) = *($1 + [96])
	*(($0 + [8])) = *(($1 + [104]))
}

void .FUNC _ZNK5eosio5order12get_interestEv (int_32 $0, int_32 $1)
{
	*($0) = *($1 + [56])
	*(($0 + [8])) = *(($1 + [64]))
}

int_64 .FUNC _ZNK5eosio5order8get_userEv (int_32 $0)
{
	return *($0 + [8])
}

int_32 .FUNC _ZNK5eosio5order8get_sideEv (int_32 $0)
{
	return *($0 + [16])
}

int_64 .FUNC _ZNK5eosio5order6get_idEv (int_32 $0)
{
	return *($0)
}

int_32 .FUNC __lockfile (int_32 $0)
{
	int_32 $1
	return $1
}

int_32 .FUNC $328 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	$39 = (*([0] + [4]) - [8128])
	*([0] + [4]) = $39
	$12 = (($39 + [692]) + [11])
	$11 = (($39 + [704]) | [8])
	$10 = (($39 + [704]) | [9])
	$9 = ($39 + [7664])
	$8 = ([-2] - ($39 + [704]))
	$7 = (($39 + [692]) + [12])
	$6 = (($39 + [352]) + [54])
	$5 = (($39 + [352]) + [55])
	$30 = [0]
	$38 = [0]
	$32 = [0]
	
.LOOP $label$17:
	$38 = ($30 + $38)
	$37 = $1
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$16 }
	$1 = $37
	$30 = ($30 & [255])
	if ( ($30 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	if ( ((int_32)$30 == (int_32)[37]) ){ goto $label$19 }
	$1 = ($1 + [1])
	$30 = (*($1) & [255])
	if ( $30 ){ goto $label$21 }
	
.LABEL $label$20
	$30 = $1
	goto $label$18 
	
.LABEL $label$19
	$30 = $1
	
.LOOP $label$22:
	if ( ((int_32)*(($1 + [1])) != (int_32)[37]) ){ goto $label$18 }
	$30 = ($30 + [1])
	$1 = ($1 + [2])
	if ( ((int_32)*($1) == (int_32)[37]) ){ goto $label$22 }
	
.LABEL $label$18
	$13 = ([2147483647] - $38)
	$30 = ($30 - $37)
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	if ( ($0 == 0) ){ goto $label$23 }
	if ( (*($0) & [32]) ){ goto $label$23 }
	CALL __fwritex($37, $30, $0)
	
.LABEL $label$23
	if ( $30 ){ goto $label$24 }
	$36 = ($1 + [1])
	$27 = [-1]
	$30 = *($1 + [1])
	$17 = ($30 + [-48])
	if ( ((uint_32)$17 > (uint_32)[9]) ){ goto $label$25 }
	$1 = ((int_32)*($1 + [2]) == (int_32)[36])
	$36 = ( ($1 + [3]) ? $36 : $1 )
	$30 = *($36)
	$27 = ( $17 ? [-1] : $1 )
	$32 = ( [1] ? $32 : $1 )
	
.LABEL $label$25
	$14 = [0]
	$1 = (int_32(($30 << [24]) >> [24]) + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$26 }
	$14 = [0]
	
.LOOP $label$27:
	if ( ((([1] << $1) & [75913]) == 0) ){ goto $label$26 }
	$14 = (([1] << (int_32(($30 << [24]) >> [24]) + [-32])) | $14)
	$36 = ($36 + [1])
	$30 = *($36)
	$1 = ($30 + [-32])
	if ( ($1 <= [32]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)($30 & [255]) != (int_32)[42]) ){ goto $label$33 }
	$1 = (*($36 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$32 }
	if ( ((int_32)*($36 + [2]) != (int_32)[36]) ){ goto $label$32 }
	*(($4 + ($1 << [2]))) = [10]
	$17 = ($36 + [3])
	$32 = [1]
	$15 = *((($3 + (*(($36 + [1])) << [4])) + [-768]))
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	goto $label$31 
	
.LABEL $label$33
	$15 = [0]
	$30 = (int_32(($30 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$30 > (uint_32)[9]) ){ goto $label$30 }
	$1 = [0]
	$17 = $36
	
.LOOP $label$34:
	$15 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$35 }
	$1 = ((int_32)$1 * (int_32)[10])
	$15 = ( [-1] ? ($1 + $30) : ((int_32)$30 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$35
	$1 = $15
	$17 = ($17 + [1])
	$30 = (*($17) + [-48])
	if ( ($30 <= [10]) ){ goto $label$34 }
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$28 }
	goto $label$15 
	
.LABEL $label$32
	if ( $32 ){ goto $label$3 }
	$17 = ($36 + [1])
	if ( ($0 == 0) ){ goto $label$29 }
	$1 = *($2)
	*($2) = ($1 + [4])
	$32 = [0]
	$15 = *($1)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$31
	$15 = ([0] - $15)
	$14 = ($14 | [8192])
	goto $label$28 
	
.LABEL $label$30
	$17 = $36
	goto $label$28 
	
.LABEL $label$29
	$32 = [0]
	$15 = [0]
	
.LABEL $label$28
	$30 = [0]
	$36 = [-1]
	if ( ((int_32)*($17) != (int_32)[46]) ){ goto $label$42 }
	$36 = *($17 + [1])
	if ( ((int_32)$36 != (int_32)[42]) ){ goto $label$41 }
	$1 = (*($17 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$40 }
	if ( ((int_32)*($17 + [3]) != (int_32)[36]) ){ goto $label$40 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($17 + [4])
	$36 = *((($3 + (*(($17 + [2])) << [4])) + [-768]))
	goto $label$37 
	
.LABEL $label$42
	$1 = $17
	$16 = [0]
	goto $label$36 
	
.LABEL $label$41
	$1 = ($17 + [1])
	$31 = ($36 + [-48])
	if ( ((uint_32)$31 > (uint_32)[9]) ){ goto $label$39 }
	$17 = [0]
	
.LOOP $label$43:
	$36 = [-1]
	if ( ((uint_32)$17 > (uint_32)[214748364]) ){ goto $label$44 }
	$17 = ((int_32)$17 * (int_32)[10])
	$36 = ( [-1] ? ($17 + $31) : ((int_32)$31 > (int_32)([2147483647] - $17)) )
	
.LABEL $label$44
	$16 = [1]
	$17 = $36
	$1 = ($1 + [1])
	$31 = (*($1) + [-48])
	if ( ($31 <= [10]) ){ goto $label$43 }
	goto $label$36 
	
.LABEL $label$40
	if ( $32 ){ goto $label$3 }
	$1 = ($17 + [2])
	if ( ($0 == 0) ){ goto $label$38 }
	$17 = *($2)
	*($2) = ($17 + [4])
	$36 = *($17)
	goto $label$37 
	
.LABEL $label$39
	$16 = [1]
	$36 = [0]
	goto $label$36 
	
.LABEL $label$38
	$36 = [0]
	
.LABEL $label$37
	$16 = ((int_32)uint_32($36 >> [31]) ^ (int_32)[1])
	
.LABEL $label$36
	
.LOOP $label$45:
	$17 = $30
	$30 = (*($1) + [-65])
	if ( ((uint_32)$30 > (uint_32)[57]) ){ goto $label$3 }
	$1 = ($1 + [1])
	$30 = *(((((int_32)$17 * (int_32)[58]) + $30) + [12512]))
	if ( (($30 + [-1]) <= [8]) ){ goto $label$45 }
	if ( ($30 == 0) ){ goto $label$3 }
	if ( ((int_32)$30 != (int_32)[27]) ){ goto $label$49 }
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$48 }
	goto $label$3 
	
.LABEL $label$49
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$47 }
	*(($4 + ($27 << [2]))) = $30
	$30 = ($3 + ($27 << [4]))
	*($39 + [428]) = *(($30 + [12]))
	*($39 + [424]) = *(($30 + [8]))
	*($39 + [420]) = *(($30 + [4]))
	*($39 + [416]) = *($30)
	
.LABEL $label$48
	if ( $0 ){ goto $label$46 }
	$30 = [0]
	goto $label$24 
	
.LABEL $label$47
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $332(($39 + [416]), $30, $2)
	
.LABEL $label$46
	$31 = ($14 & [-65537])
	$18 = ( $31 ? $14 : ($14 & [8192]) )
	$26 = [0]
	$24 = [12992]
	$30 = *(($1 + [-1]))
	$29 = ( ( ($30 & [-33]) ? $30 : ((int_32)($30 & [15]) == (int_32)[3]) ) ? $30 : $17 )
	$30 = ($29 + [-65])
	if ( ((uint_32)$30 > (uint_32)[55]) ){ goto $label$80 }
	$14 = $5
	goto $label$111 
	
.LABEL $label$111
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$112 }
	if ( $16 ){ goto $label$15 }
	
.LABEL $label$112
	$35 = *($39 + [424])
	$23 = *($39 + [416])
	*($39 + [748]) = [0]
	if ( (CALL __signbitl($23, $35) == 0) ){ goto $label$113 }
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	$20 = [1]
	$19 = [13024]
	goto $label$108 
	
.LABEL $label$113
	if ( ($18 & [2048]) ){ goto $label$109 }
	$20 = ($18 & [1])
	$19 = ( [13030] ? [13025] : $20 )
	goto $label$108 
	
.LABEL $label$110
	$35 = *($39 + [416])
	if ( ((int_64)$35 <= (int_64)-1) ){ goto $label$92 }
	if ( ($18 & [2048]) ){ goto $label$88 }
	$26 = ($18 & [1])
	$24 = ( [12994] ? [12992] : $26 )
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$109
	$20 = [1]
	$19 = [13027]
	
.LABEL $label$108
	if ( ((int_32)CALL __fpclassifyl($23, $35) <= (int_32)[1]) ){ goto $label$115 }
	CALL frexpl(($39 + [320]), $23, $35, ($39 + [748]))
	$23 = *($39 + [328])
	$35 = *($39 + [320])
	CALL __addtf3(($39 + [304]), $35, $23, $35, $23)
	$23 = *((($39 + [304]) + [8]))
	$35 = *($39 + [304])
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$116 }
	*($39 + [748]) = (*($39 + [748]) + [-1])
	
.LABEL $label$116
	$21 = ($29 | [32])
	if ( ((int_32)$21 != (int_32)[97]) ){ goto $label$114 }
	$37 = ($29 & [32])
	$24 = ( ($19 + [9]) ? $19 : $37 )
	if ( ((uint_32)$36 > (uint_32)[26]) ){ goto $label$77 }
	if ( (([27] - $36) == 0) ){ goto $label$77 }
	$30 = ($36 + [-27])
	$34 = (int_64)4612248968380809216
	$33 = (int_64)0
	
.LOOP $label$117:
	CALL __multf3(($39 + [208]), $33, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($39 + [208]) + [8]))
	$33 = *($39 + [208])
	$30 = ($30 + [1])
	if ( $30 ){ goto $label$117 }
	if ( ((int_32)*($24) != (int_32)[45]) ){ goto $label$78 }
	CALL __subtf3(($39 + [160]), $35, ((int_64)$23 ^ (int_64)-9223372036854775808), $33, $34)
	CALL __addtf3(($39 + [144]), $33, $34, *($39 + [160]), *((($39 + [160]) + [8])))
	$23 = ((int_64)*((($39 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$35 = *($39 + [144])
	goto $label$77 
	
.LABEL $label$115
	$16 = CALL __unordtf2($23, $35, $23, $35)
	$37 = ($20 + [3])
	if ( ($18 & [8192]) ){ goto $label$93 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$93 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$95 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$118:
	if ( (($30 & [1]) == 0) ){ goto $label$119 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$119
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$118 }
	if ( $14 ){ goto $label$93 }
	$31 = ($31 & [255])
	goto $label$94 
	
.LABEL $label$114
	$30 = ((int_32)$36 < (int_32)[0])
	if ( (CALL __netf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$90 }
	CALL __multf3(($39 + [288]), $35, $23, (int_64)0, (int_64)4619285842798575616)
	$31 = (*($39 + [748]) + [-28])
	*($39 + [748]) = $31
	$23 = *((($39 + [288]) + [8]))
	$35 = *($39 + [288])
	goto $label$89 
	
.LABEL $label$107
	$35 = *($39 + [416])
	*((($39 + [344]) + [4])) = [0]
	*($39 + [344]) = $35
	*($39 + [416]) = ($39 + [344])
	$36 = [-1]
	$37 = ($39 + [344])
	goto $label$105 
	
.LABEL $label$106
	$37 = *($39 + [416])
	if ( ($36 == 0) ){ goto $label$74 }
	
.LABEL $label$105
	$30 = [0]
	$14 = $37
	$17 = [0]
	
.LOOP $label$121:
	$31 = *($14)
	if ( ($31 == 0) ){ goto $label$120 }
	$17 = CALL wctomb(($39 + [340]), $31)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$120 }
	if ( ((uint_32)$17 > (uint_32)($36 - $30)) ){ goto $label$120 }
	$14 = ($14 + [4])
	$30 = ($17 + $30)
	if ( ((uint_32)$36 > (uint_32)$30) ){ goto $label$121 }
	
.LABEL $label$120
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$104
	*((($39 + [352]) + [54])) = *($39 + [416])
	$36 = [1]
	$37 = $6
	$14 = $5
	$18 = $31
	goto $label$79 
	
.LABEL $label$103
	$37 = CALL strerror(*(CALL $326()))
	goto $label$97 
	
.LABEL $label$102
	$30 = ($17 & [255])
	if ( ((uint_32)$30 > (uint_32)[7]) ){ goto $label$56 }
	goto $label$122 
	
.LABEL $label$122
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$101
	$37 = $5
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$123 }
	$37 = $5
	
.LOOP $label$124:
	*(($37 = ($37 + [-1]))) = ((int_64)((int_64)$35 & (int_64)7) | (int_64)48)
	$35 = (uint_64)$35 >> (uint_64)(int_64)3
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	if ( ($18 & [8]) ){ goto $label$84 }
	$26 = [0]
	$24 = [12992]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$100
	$36 = ( $36 ? [8] : ((uint_32)$36 > (uint_32)[8]) )
	$18 = ($18 | [8])
	$29 = [120]
	
.LABEL $label$99
	$26 = [0]
	$24 = [12992]
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$125 }
	$30 = ($29 & [32])
	$37 = $5
	
.LOOP $label$126:
	*(($37 = ($37 + [-1]))) = (*((((CASTING uint_32)(uint_64 $35) & [15]) + [12976])) | $30)
	$35 = (uint_64)$35 >> (uint_64)(int_64)4
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$126 }
	if ( (($18 & [8]) == 0) ){ goto $label$83 }
	if ( (int_64)(*($39 + [416]) == 0) ){ goto $label$83 }
	$24 = (int_32($29 >> [4]) + [12992])
	$26 = [2]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$125
	$37 = $5
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$98
	$30 = *($39 + [416])
	$37 = ( $30 ? [13008] : $30 )
	
.LABEL $label$97
	$26 = [0]
	$30 = CALL strnlen($37, ( [2147483647] ? $36 : ((int_32)$36 < (int_32)[0]) ))
	$14 = ($37 + $30)
	if ( ((int_32)$36 <= (int_32)[-1]) ){ goto $label$91 }
	$18 = $31
	$36 = $30
	goto $label$79 
	
.LABEL $label$96
	$26 = [0]
	$24 = [12992]
	$35 = *($39 + [416])
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$95
	if ( $17 ){ goto $label$93 }
	
.LABEL $label$94
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$93
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$127 }
	CALL __fwritex($19, $20, $0)
	$30 = *($0)
	
.LABEL $label$127
	if ( ($30 & [32]) ){ goto $label$128 }
	$30 = uint_32(($29 & [32]) >> [5])
	CALL __fwritex(( ( [13088] ? [13104] : $30 ) ? ( [13056] ? [13072] : $30 ) : $16 ), [3], $0)
	
.LABEL $label$128
	if ( ((int_32)($18 & [73728]) != (int_32)[8192]) ){ goto $label$129 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$129 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$131 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$132:
	if ( (($30 & [1]) == 0) ){ goto $label$133 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$133
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$132 }
	if ( $14 ){ goto $label$129 }
	$31 = ($31 & [255])
	goto $label$130 
	
.LABEL $label$131
	if ( $17 ){ goto $label$129 }
	
.LABEL $label$130
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$129
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$92
	$35 = (int_64)
	*($39 + [416]) = $35((int_64)0 - $35))
	$26 = [1]
	$24 = [12992]
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$91
	$18 = $31
	$36 = $30
	if ( (*($14) == 0) ){ goto $label$79 }
	goto $label$15 
	
.LABEL $label$90
	$31 = *($39 + [748])
	
.LABEL $label$89
	$28 = ( [6] ? $36 : $30 )
	$22 = ( ($39 + [752]) ? $9 : ((int_32)$31 < (int_32)[0]) )
	$36 = $22
	
.LOOP $label$134:
	$30 = CALL __fixunstfsi($35, $23)
	CALL __floatunsitf(($39 + [272]), $30)
	CALL __subtf3(($39 + [256]), $35, $23, *($39 + [272]), *((($39 + [272]) + [8])))
	CALL __multf3(($39 + [240]), *($39 + [256]), *((($39 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($36) = $30
	$36 = ($36 + [4])
	$23 = *((($39 + [240]) + [8]))
	$35 = *($39 + [240])
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$134 }
	if ( ((int_32)$31 < (int_32)[1]) ){ goto $label$137 }
	$17 = $22
	
.LOOP $label$138:
	$14 = ( $31 ? [29] : ((int_32)$31 < (int_32)[29]) )
	$30 = ($36 + [-4])
	if ( ($30 <= $17) ){ goto $label$139 }
	$23 = (CASTING uint_64)(uint_32 $14)
	$35 = (int_64)0
	
.LOOP $label$140:
	$35 = ((int_64)((int_64)*($30) << (int_64)$23) + (int_64)((int_64)$35 & (int_64)4294967295))
	*($30) = ((uint_64)$35 % (uint_64)(int_64)1000000000)
	$35 = ((uint_64)$35 / (uint_64)(int_64)1000000000)
	$30 = ($30 + [-4])
	if ( ((uint_32)$30 >= (uint_32)$17) ){ goto $label$140 }
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( ($30 == 0) ){ goto $label$139 }
	*(($17 = ($17 + [-4]))) = $30
	
.LABEL $label$139
	
.LOOP $label$142:
	$30 = $36
	if ( ((uint_32)$30 <= (uint_32)$17) ){ goto $label$141 }
	$36 = ($30 + [-4])
	if ( (*($36) == 0) ){ goto $label$142 }
	
.LABEL $label$141
	$36 = $30
	$31 = ($31 - $14)
	if ( ((int_32)$31 > (int_32)[0]) ){ goto $label$138 }
	*($39 + [748]) = $31
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$137
	$30 = $36
	$17 = $22
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	
.LABEL $label$136
	$24 = (((uint_32)($28 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$21 != (int_32)[102]) ){ goto $label$144 }
	$25 = ($22 + ($24 << [2]))
	
.LOOP $label$145:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$147 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$148:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$148 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$146 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$146 
	
.LABEL $label$147
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$146
	$30 = ( $25 ? $30 : ((int_32)int_32(($30 - $22) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$145 }
	goto $label$143 
	
.LABEL $label$144
	
.LOOP $label$149:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$151 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$152:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$152 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$150 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$150 
	
.LABEL $label$151
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$150
	$30 = ( ($17 + ($24 << [2])) ? $30 : ((int_32)int_32(($30 - $17) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$149 }
	
.LABEL $label$143
	*($39 + [748]) = $31
	
.LABEL $label$135
	$36 = [0]
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$153 }
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$153 }
	$14 = [10]
	
.LOOP $label$154:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$154 }
	
.LABEL $label$153
	$16 = ((int_32)$21 == (int_32)[103])
	$14 = (($28 - ( $36 ? [0] : ((int_32)$21 != (int_32)[102]) )) - (((int_32)$28 != (int_32)[0]) & $16))
	if ( ((int_32)$14 >= (int_32)(((int_32)int_32(($30 - $22) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$155 }
	$37 = ($14 + [147456])
	$24 = ($22 + (((int_32)$37 / (int_32)[9]) << [2]))
	$31 = ($24 + [-65532])
	$14 = [10]
	$37 = ((int_32)$37 % (int_32)[9])
	if ( ((int_32)($37 + [1]) > (int_32)[8]) ){ goto $label$156 }
	$37 = ([8] - $37)
	$14 = [10]
	
.LOOP $label$157:
	$14 = ((int_32)$14 * (int_32)[10])
	$37 = ($37 + [-1])
	if ( $37 ){ goto $label$157 }
	
.LABEL $label$156
	$27 = *($31)
	$37 = ((uint_32)$27 % (uint_32)$14)
	$26 = ($31 + [4])
	if ( ((int_32)$26 != (int_32)$30) ){ goto $label$159 }
	if ( ($37 == 0) ){ goto $label$158 }
	
.LABEL $label$159
	if ( (((uint_32)$27 / (uint_32)$14) & [1]) ){ goto $label$161 }
	$35 = (int_64)4643211215818981376
	$23 = (int_64)0
	if ( ((uint_32)$31 <= (uint_32)$17) ){ goto $label$160 }
	if ( ((int_32)$14 != (int_32)[1000000000]) ){ goto $label$160 }
	if ( ((*(($31 + [-4])) & [1]) == 0) ){ goto $label$160 }
	
.LABEL $label$161
	$35 = (int_64)4643211215818981376
	$23 = (int_64)1
	
.LABEL $label$160
	$34 = (int_64)4611123068473966592
	$25 = ((int_32)$14 / (int_32)[2])
	if ( ($37 <= $25) ){ goto $label$162 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$37 == (int_32)$25) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$30) )
	
.LABEL $label$162
	if ( ($20 == 0) ){ goto $label$163 }
	if ( ((int_32)*($19) != (int_32)[45]) ){ goto $label$163 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	
.LABEL $label$163
	CALL __addtf3(($39 + [224]), $23, $35, (int_64)0, $34)
	$37 = ($27 - $37)
	*($31) = $37
	if ( (CALL __eqtf2(*($39 + [224]), *((($39 + [224]) + [8])), $23, $35) == 0) ){ goto $label$158 }
	$36 = ($37 + $14)
	*($31) = $36
	if ( ($36 <= [1000000000]) ){ goto $label$164 }
	$36 = ($24 + [-65536])
	
.LOOP $label$165:
	*(($36 + [4])) = [0]
	if ( ((uint_32)$36 >= (uint_32)$17) ){ goto $label$166 }
	*(($17 = ($17 + [-4]))) = [0]
	
.LABEL $label$166
	$14 = (*($36) + [1])
	*($36) = $14
	$36 = ($36 + [-4])
	if ( ((uint_32)$14 > (uint_32)[999999999]) ){ goto $label$165 }
	$31 = ($36 + [4])
	
.LABEL $label$164
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$158 }
	$14 = [10]
	
.LOOP $label$167:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$167 }
	
.LABEL $label$158
	$14 = ($31 + [4])
	$30 = ( $14 ? $30 : ((uint_32)$30 > (uint_32)$14) )
	
.LABEL $label$155
	$31 = ([0] - $36)
	
.LOOP $label$171:
	$14 = $30
	if ( ((uint_32)$14 <= (uint_32)$17) ){ goto $label$170 }
	$30 = ($14 + [-4])
	if ( (*($30) == 0) ){ goto $label$171 }
	$27 = [1]
	if ( $16 ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$170
	$27 = [0]
	if ( ($16 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$30 = (($28 == 0) + $28)
	if ( ((int_32)$30 <= (int_32)$36) ){ goto $label$76 }
	if ( ((int_32)$36 < (int_32)[-4]) ){ goto $label$76 }
	$29 = ($29 + [-1])
	$28 = (($30 + [-1]) - $36)
	$16 = ($18 & [8])
	if ( ($16 == 0) ){ goto $label$75 }
	goto $label$68 
	
.LABEL $label$168
	$16 = ($18 & [8])
	goto $label$68 
	
.LABEL $label$88
	$26 = [1]
	$24 = [12993]
	if ( (uint_64)($35 <= (int_64)4294967296) ){ goto $label$86 }
	
.LABEL $label$87
	$37 = $5
	
.LOOP $label$172:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$172 }
	goto $label$85 
	
.LABEL $label$86
	$23 = $35
	$37 = $5
	
.LABEL $label$85
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$83 }
	
.LOOP $label$173:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $17 ){ goto $label$173 }
	goto $label$83 
	
.LABEL $label$84
	$30 = ($5 - $37)
	$24 = ( [12992] ? [12997] : ((int_32)$36 > (int_32)$30) )
	$26 = ((int_32)$36 <= (int_32)$30)
	
.LABEL $label$83
	if ( ($16 == 0) ){ goto $label$81 }
	
.LABEL $label$82
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$81
	$18 = ( ($18 & [-65537]) ? $18 : ((int_32)$36 > (int_32)[-1]) )
	$35 = *($39 + [416])
	if ( $36 ){ goto $label$174 }
	if ( ((int_64)($35 == 0) == 0) ){ goto $label$174 }
	$37 = $5
	$14 = $5
	$36 = [0]
	goto $label$79 
	
.LABEL $label$174
	$30 = ((int_64)($35 == 0) + ($5 - $37))
	$36 = ( $36 ? $30 : ((int_32)$36 > (int_32)$30) )
	
.LABEL $label$80
	$14 = $5
	
.LABEL $label$79
	$29 = ($14 - $37)
	$28 = ( $29 ? $36 : ((int_32)$36 < (int_32)$29) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$15 }
	$27 = ($26 + $28)
	$30 = ( $27 ? $15 : ((int_32)$15 < (int_32)$27) )
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$175 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$175 }
	$17 = ($22 <= [256])
	$22 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $22 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$177 }
	$17 = ($14 == 0)
	$14 = $22
	
.LOOP $label$178:
	if ( (($17 & [1]) == 0) ){ goto $label$179 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$179
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$178 }
	if ( $16 ){ goto $label$175 }
	$22 = ($22 & [255])
	goto $label$176 
	
.LABEL $label$177
	if ( $14 ){ goto $label$175 }
	
.LABEL $label$176
	CALL __fwritex(($39 + [432]), $22, $0)
	
.LABEL $label$175
	if ( (*($0) & [32]) ){ goto $label$180 }
	CALL __fwritex($24, $26, $0)
	
.LABEL $label$180
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$181 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$181 }
	$17 = ($26 <= [256])
	$26 = ($30 - $27)
	CALL memset(($39 + [432]), [48], ( $26 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$183 }
	$17 = ($14 == 0)
	$14 = $26
	
.LOOP $label$184:
	if ( (($17 & [1]) == 0) ){ goto $label$185 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$185
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$184 }
	if ( $16 ){ goto $label$181 }
	$26 = ($26 & [255])
	goto $label$182 
	
.LABEL $label$183
	if ( $14 ){ goto $label$181 }
	
.LABEL $label$182
	CALL __fwritex(($39 + [432]), $26, $0)
	
.LABEL $label$181
	if ( ((int_32)$29 >= (int_32)$36) ){ goto $label$186 }
	$17 = ($16 <= [256])
	$16 = ($28 - $29)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$188 }
	$17 = ($36 == 0)
	$36 = $16
	
.LOOP $label$189:
	if ( (($17 & [1]) == 0) ){ goto $label$190 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$190
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$189 }
	if ( $31 ){ goto $label$186 }
	$16 = ($16 & [255])
	goto $label$187 
	
.LABEL $label$188
	if ( $36 ){ goto $label$186 }
	
.LABEL $label$187
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$186
	if ( (*($0) & [32]) ){ goto $label$191 }
	CALL __fwritex($37, $29, $0)
	
.LABEL $label$191
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$24 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$24 }
	$17 = ($37 <= [256])
	$37 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $17 ))
	$36 = *($0)
	$15 = ($36 & [32])
	if ( $17 ){ goto $label$193 }
	$17 = ($15 == 0)
	$15 = $37
	
.LOOP $label$194:
	if ( (($17 & [1]) == 0) ){ goto $label$195 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$195
	$14 = ($36 & [32])
	$17 = ($14 == 0)
	$15 = ($15 + [-256])
	if ( ((uint_32)$15 > (uint_32)[255]) ){ goto $label$194 }
	if ( $14 ){ goto $label$24 }
	$37 = ($37 & [255])
	goto $label$192 
	
.LABEL $label$193
	if ( $15 ){ goto $label$24 }
	
.LABEL $label$192
	CALL __fwritex(($39 + [432]), $37, $0)
	goto $label$24 
	
.LABEL $label$78
	CALL __addtf3(($39 + [192]), $35, $23, $33, $34)
	CALL __subtf3(($39 + [176]), *($39 + [192]), *((($39 + [192]) + [8])), $33, $34)
	$23 = *((($39 + [176]) + [8]))
	$35 = *($39 + [176])
	
.LABEL $label$77
	$30 = int_32($31 >> [31])
	$31 = *($39 + [748])
	$17 = ((int_32)($31 + $30) ^ (int_32)$30)
	$34 = (CASTING int_64)(int_32 $17)
	$30 = [0]
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$198 }
	$17 = (CASTING uint_32)(uint_64 $34)
	if ( $17 ){ goto $label$197 }
	goto $label$196 
	
.LABEL $label$198
	$30 = [0]
	
.LOOP $label$199:
	*(($12 + $30)) = ((int_64)((uint_64)$34 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ($30 + [-1])
	$17 = ((uint_64)$34 > (uint_64)(int_64)42949672959)
	$33 = ((uint_64)$34 / (uint_64)(int_64)10)
	$34 = $33
	if ( $17 ){ goto $label$199 }
	$17 = (CASTING uint_32)(uint_64 $33)
	if ( ($17 == 0) ){ goto $label$196 }
	
.LABEL $label$197
	
.LOOP $label$200:
	*(((($39 + [692]) + $30) + [11])) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$30 = ($30 + [-1])
	$14 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $14 ){ goto $label$200 }
	
.LABEL $label$196
	$17 = ($7 + $30)
	if ( $30 ){ goto $label$201 }
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$201
	$16 = ($20 | [2])
	*(($27 = ($17 + [-2]))) = ($29 + [15])
	*(($17 + [-1])) = ((uint_32($31 >> [30]) & [2]) + [43])
	if ( ($18 & [8]) ){ goto $label$202 }
	if ( ((int_32)$36 < (int_32)[1]) ){ goto $label$71 }
	$30 = ($39 + [704])
	
.LOOP $label$203:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [80]), $17)
	CALL __subtf3(($39 + [64]), $35, $23, *($39 + [80]), *((($39 + [80]) + [8])))
	CALL __multf3(($39 + [48]), *($39 + [64]), *((($39 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [12976])) | $37)
	$23 = *((($39 + [48]) + [8]))
	$35 = *($39 + [48])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$204 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$204
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$203 }
	goto $label$70 
	
.LABEL $label$202
	$30 = ($39 + [704])
	
.LOOP $label$205:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [128]), $17)
	CALL __subtf3(($39 + [112]), $35, $23, *($39 + [128]), *((($39 + [128]) + [8])))
	CALL __multf3(($39 + [96]), *($39 + [112]), *((($39 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [12976])) | $37)
	$23 = *((($39 + [96]) + [8]))
	$35 = *($39 + [96])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$206 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$206
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$205 }
	goto $label$70 
	
.LABEL $label$76
	$28 = ($30 + [-1])
	$29 = ($29 + [-2])
	$16 = ($18 & [8])
	if ( $16 ){ goto $label$68 }
	
.LABEL $label$75
	$30 = [9]
	if ( ($27 == 0) ){ goto $label$207 }
	$16 = *(($14 + [-4]))
	if ( ($16 == 0) ){ goto $label$207 }
	$30 = [0]
	if ( ((uint_32)$16 % (uint_32)[10]) ){ goto $label$207 }
	$37 = [10]
	$30 = [0]
	
.LOOP $label$208:
	$30 = ($30 + [1])
	$37 = ((int_32)$37 * (int_32)[10])
	if ( (((uint_32)$16 % (uint_32)$37) == 0) ){ goto $label$208 }
	
.LABEL $label$207
	$37 = (((int_32)int_32(($14 - $22) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($29 | [32]) != (int_32)[102]) ){ goto $label$69 }
	$16 = [0]
	$30 = ($37 - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	goto $label$68 
	
.LABEL $label$74
	$30 = [0]
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	
.LABEL $label$73
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$72 }
	$17 = ($27 <= [256])
	$27 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $27 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$210 }
	$17 = ($36 == 0)
	$36 = $27
	
.LOOP $label$211:
	if ( (($17 & [1]) == 0) ){ goto $label$212 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$212
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$211 }
	if ( $31 ){ goto $label$72 }
	$27 = ($27 & [255])
	goto $label$209 
	
.LABEL $label$210
	if ( $36 ){ goto $label$72 }
	
.LABEL $label$209
	CALL __fwritex(($39 + [432]), $27, $0)
	
.LABEL $label$72
	if ( ($30 == 0) ){ goto $label$213 }
	$17 = [0]
	
.LOOP $label$214:
	$36 = *($37)
	if ( ($36 == 0) ){ goto $label$213 }
	$36 = CALL wctomb(($39 + [340]), $36)
	$17 = ($36 + $17)
	if ( ((uint_32)$17 > (uint_32)$30) ){ goto $label$213 }
	if ( (*($0) & [32]) ){ goto $label$215 }
	CALL __fwritex(($39 + [340]), $36, $0)
	
.LABEL $label$215
	$37 = ($37 + [4])
	if ( ($17 <= $30) ){ goto $label$214 }
	
.LABEL $label$213
	if ( ((int_32)$16 != (int_32)[8192]) ){ goto $label$216 }
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$216 }
	$17 = ($31 <= [256])
	$31 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$218 }
	$17 = ($36 == 0)
	$36 = $31
	
.LOOP $label$219:
	if ( (($17 & [1]) == 0) ){ goto $label$220 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$220
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$219 }
	if ( $37 ){ goto $label$216 }
	$31 = ($31 & [255])
	goto $label$217 
	
.LABEL $label$218
	if ( $36 ){ goto $label$216 }
	
.LABEL $label$217
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$216
	$30 = ( $15 ? $30 : ((int_32)$15 > (int_32)$30) )
	goto $label$24 
	
.LABEL $label$71
	$17 = ($39 + [704])
	
.LOOP $label$221:
	$14 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [32]), $14)
	CALL __subtf3(($39 + [16]), $35, $23, *($39 + [32]), *((($39 + [32]) + [8])))
	CALL __multf3($39, *($39 + [16]), *((($39 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($30 = $17)) = (*(($14 + [12976])) | $37)
	$23 = *(($39 + [8]))
	$35 = *($39)
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$222 }
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$222 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$222
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$221 }
	
.LABEL $label$70
	$30 = [-1]
	$31 = ($7 - $27)
	if ( ((int_32)(([2147483645] - $16) - $31) < (int_32)$36) ){ goto $label$50 }
	$26 = ($17 - ($39 + [704]))
	$29 = ( ( ($36 + [2]) ? $26 : ((int_32)($8 + $17) < (int_32)$36) ) ? $26 : $36 )
	$37 = (($31 + $16) + $29)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$65 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$65 }
	$30 = ($28 <= [256])
	$28 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$67 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$223:
	if ( (($30 & [1]) == 0) ){ goto $label$224 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$224
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$223 }
	if ( $14 ){ goto $label$65 }
	$28 = ($28 & [255])
	goto $label$66 
	
.LABEL $label$69
	$16 = [0]
	$30 = (($37 + $36) - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	
.LABEL $label$68
	$30 = [-1]
	$24 = ($28 | $16)
	$37 = ((int_32)$24 != (int_32)[0])
	if ( ((int_32)$28 > (int_32)([2147483646] - $37)) ){ goto $label$50 }
	$26 = (($28 + $37) + [1])
	$21 = ((int_32)($29 | [32]) != (int_32)[102])
	if ( $21 ){ goto $label$225 }
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	$36 = ( $36 ? [0] : ((int_32)$36 > (int_32)[0]) )
	goto $label$61 
	
.LABEL $label$225
	$30 = ( $31 ? $36 : ((int_32)$36 < (int_32)[0]) )
	$35 = (CASTING int_64)(int_32 $30)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$64 }
	$37 = $7
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( $30 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$67
	if ( $17 ){ goto $label$65 }
	
.LABEL $label$66
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$65
	if ( (*($0) & [32]) ){ goto $label$226 }
	CALL __fwritex($24, $16, $0)
	
.LABEL $label$226
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$227 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$227 }
	$30 = ($16 <= [256])
	$16 = ($15 - $37)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$229 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$230:
	if ( (($30 & [1]) == 0) ){ goto $label$231 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$231
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$230 }
	if ( $14 ){ goto $label$227 }
	$16 = ($16 & [255])
	goto $label$228 
	
.LABEL $label$229
	if ( $17 ){ goto $label$227 }
	
.LABEL $label$228
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$227
	if ( (*($0) & [32]) ){ goto $label$232 }
	CALL __fwritex(($39 + [704]), $26, $0)
	
.LABEL $label$232
	$16 = ($29 - $26)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$233 }
	$30 = ($16 <= [256])
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$235 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$236:
	if ( (($30 & [1]) == 0) ){ goto $label$237 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$237
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$236 }
	if ( $14 ){ goto $label$233 }
	$16 = ($16 & [255])
	goto $label$234 
	
.LABEL $label$235
	if ( $17 ){ goto $label$233 }
	
.LABEL $label$234
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$233
	if ( (*($0) & [32]) ){ goto $label$238 }
	CALL __fwritex($27, $31, $0)
	
.LABEL $label$238
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$239 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$239 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$241 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$242:
	if ( (($30 & [1]) == 0) ){ goto $label$243 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$243
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$242 }
	if ( $14 ){ goto $label$239 }
	$31 = ($31 & [255])
	goto $label$240 
	
.LABEL $label$241
	if ( $17 ){ goto $label$239 }
	
.LABEL $label$240
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$239
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$64
	$37 = $7
	
.LOOP $label$244:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$244 }
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	
.LOOP $label$245:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$31 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $31 ){ goto $label$245 }
	
.LABEL $label$62
	if ( ((int_32)($7 - $37) > (int_32)[1]) ){ goto $label$246 }
	$30 = ($37 + [-1])
	
.LOOP $label$247:
	*($30) = [48]
	$37 = ($7 - $30)
	$31 = ($30 + [-1])
	$30 = $31
	if ( ((int_32)$37 < (int_32)[2]) ){ goto $label$247 }
	$37 = ($31 + [1])
	
.LABEL $label$246
	*(($25 = ($37 + [-2]))) = $29
	$30 = [-1]
	*(($37 + [-1])) = ((uint_32($36 >> [30]) & [2]) + [43])
	$36 = ($7 - $25)
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	
.LABEL $label$61
	$30 = [-1]
	$36 = ($36 + $26)
	if ( ((int_32)$36 > (int_32)((int_32)$20 ^ (int_32)[2147483647])) ){ goto $label$50 }
	$26 = ($36 + $20)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$51 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$51 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$53 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$248:
	if ( (($30 & [1]) == 0) ){ goto $label$249 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$249
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$248 }
	if ( $31 ){ goto $label$51 }
	$29 = ($29 & [255])
	goto $label$52 
	
.LABEL $label$60
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$59
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$58
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$57
	*(*($39 + [416])) = $38
	
.LABEL $label$56
	$30 = [0]
	goto $label$24 
	
.LABEL $label$55
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$54
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$53
	if ( $36 ){ goto $label$51 }
	
.LABEL $label$52
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$51
	if ( (*($0) & [32]) ){ goto $label$250 }
	CALL __fwritex($19, $20, $0)
	
.LABEL $label$250
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$251 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$251 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [48], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$253 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$254:
	if ( (($30 & [1]) == 0) ){ goto $label$255 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$255
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$254 }
	if ( $31 ){ goto $label$251 }
	$29 = ($29 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $36 ){ goto $label$251 }
	
.LABEL $label$252
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$251
	if ( $21 ){ goto $label$266 }
	$31 = ( $22 ? $17 : ((uint_32)$17 > (uint_32)$22) )
	$37 = $31
	
.LOOP $label$267:
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$269 }
	$17 = [0]
	
.LOOP $label$270:
	*(($11 + $17)) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ($17 + [-1])
	$36 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $36 ){ goto $label$270 }
	goto $label$268 
	
.LABEL $label$269
	$17 = [0]
	
.LABEL $label$268
	$30 = ($10 + $17)
	if ( ((int_32)$37 == (int_32)$31) ){ goto $label$272 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$271 }
	
.LOOP $label$273:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$273 }
	$30 = ($39 + [704])
	goto $label$271 
	
.LABEL $label$272
	if ( $17 ){ goto $label$271 }
	*(($30 = ($30 + [-1]))) = [48]
	
.LABEL $label$271
	if ( (*($0) & [32]) ){ goto $label$274 }
	CALL __fwritex($30, ($10 - $30), $0)
	
.LABEL $label$274
	$37 = ($37 + [4])
	if ( ((uint_32)$37 <= (uint_32)$22) ){ goto $label$267 }
	if ( ($24 == 0) ){ goto $label$275 }
	if ( (*($0) & [32]) ){ goto $label$275 }
	CALL __fwritex([13120], [1], $0)
	
.LABEL $label$275
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$265 }
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$264 }
	
.LOOP $label$276:
	$30 = $10
	$17 = *($37)
	if ( ($17 == 0) ){ goto $label$278 }
	$30 = $10
	
.LOOP $label$279:
	*(($30 = ($30 + [-1]))) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$36 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $36 ){ goto $label$279 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$277 }
	
.LABEL $label$278
	
.LOOP $label$280:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$280 }
	
.LABEL $label$277
	if ( (*($0) & [32]) ){ goto $label$281 }
	CALL __fwritex($30, ( $28 ? [9] : ((int_32)$28 < (int_32)[9]) ), $0)
	
.LABEL $label$281
	$30 = ($28 + [-9])
	if ( ((int_32)$28 < (int_32)[10]) ){ goto $label$263 }
	$28 = $30
	$37 = ($37 + [4])
	if ( ($37 <= $14) ){ goto $label$276 }
	goto $label$263 
	
.LABEL $label$266
	if ( ((int_32)$28 <= (int_32)[-1]) ){ goto $label$259 }
	$31 = ( $14 ? ($17 + [4]) : $27 )
	if ( ($16 == 0) ){ goto $label$261 }
	$37 = $17
	
.LOOP $label$282:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$284 }
	$36 = [0]
	
.LOOP $label$285:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$285 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$283 }
	
.LABEL $label$284
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$283
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$287 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$286 }
	
.LOOP $label$288:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$288 }
	goto $label$286 
	
.LABEL $label$287
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$289 }
	CALL __fwritex($14, [1], $0)
	$30 = *($0)
	
.LABEL $label$289
	$14 = ($14 + [1])
	if ( ($30 & [32]) ){ goto $label$286 }
	CALL __fwritex([13120], [1], $0)
	
.LABEL $label$286
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$290 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$290
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$282 }
	goto $label$260 
	
.LABEL $label$265
	$30 = $28
	if ( ((int_32)$30 >= (int_32)[1]) ){ goto $label$262 }
	goto $label$258 
	
.LABEL $label$264
	$30 = $28
	
.LABEL $label$263
	if ( ((int_32)$30 < (int_32)[1]) ){ goto $label$258 }
	
.LABEL $label$262
	$17 = ($30 <= [256])
	CALL memset(($39 + [432]), [48], ( $30 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$292 }
	$17 = ($36 == 0)
	$36 = $30
	
.LOOP $label$293:
	if ( (($17 & [1]) == 0) ){ goto $label$294 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$294
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$293 }
	if ( $37 ){ goto $label$258 }
	$30 = ($30 & [255])
	goto $label$291 
	
.LABEL $label$292
	if ( $36 ){ goto $label$258 }
	
.LABEL $label$291
	CALL __fwritex(($39 + [432]), $30, $0)
	if ( ((int_32)$18 == (int_32)[8192]) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$261
	$37 = $17
	
.LOOP $label$295:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$297 }
	$36 = [0]
	
.LOOP $label$298:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$298 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$296 }
	
.LABEL $label$297
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$296
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$300 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$299 }
	
.LOOP $label$301:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$301 }
	goto $label$299 
	
.LABEL $label$300
	if ( (*($0) & [32]) ){ goto $label$302 }
	CALL __fwritex($14, [1], $0)
	
.LABEL $label$302
	$14 = ($14 + [1])
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$299 }
	if ( (*($0) & [32]) ){ goto $label$299 }
	CALL __fwritex([13120], [1], $0)
	
.LABEL $label$299
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$303 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$303
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$295 }
	
.LABEL $label$260
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$259 }
	$30 = ($28 <= [256])
	CALL memset(($39 + [432]), [48], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$305 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$306:
	if ( (($30 & [1]) == 0) ){ goto $label$307 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$307
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$306 }
	if ( $14 ){ goto $label$259 }
	$28 = ($28 & [255])
	goto $label$304 
	
.LABEL $label$305
	if ( $17 ){ goto $label$259 }
	
.LABEL $label$304
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$259
	if ( (*($0) & [32]) ){ goto $label$258 }
	CALL __fwritex($25, ($7 - $25), $0)
	
.LABEL $label$258
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$256 }
	
.LABEL $label$257
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$256 }
	$30 = ($37 <= [256])
	$37 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$309 }
	$30 = ($17 == 0)
	$17 = $37
	
.LOOP $label$310:
	if ( (($30 & [1]) == 0) ){ goto $label$311 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$311
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$310 }
	if ( $14 ){ goto $label$256 }
	$37 = ($37 & [255])
	goto $label$308 
	
.LABEL $label$309
	if ( $17 ){ goto $label$256 }
	
.LABEL $label$308
	CALL __fwritex(($39 + [432]), $37, $0)
	
.LABEL $label$256
	$30 = ( $15 ? $26 : ((int_32)$15 > (int_32)$26) )
	
.LABEL $label$50
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$24
	if ( ((int_32)$30 <= (int_32)$13) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( $0 ){ goto $label$1 }
	if ( ($32 == 0) ){ goto $label$14 }
	$30 = [1]
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $332(($3 + [16]), $1, $2)
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $332(($3 + [32]), $1, $2)
	$1 = *($4 + [12])
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $332(($3 + [48]), $1, $2)
	$1 = *($4 + [16])
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $332(($3 + [64]), $1, $2)
	$1 = *($4 + [20])
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $332(($3 + [80]), $1, $2)
	$1 = *($4 + [24])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $332(($3 + [96]), $1, $2)
	$1 = *($4 + [28])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $332(($3 + [112]), $1, $2)
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $332(($3 + [128]), $1, $2)
	$1 = *($4 + [36])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $332(($3 + [144]), $1, $2)
	$38 = [1]
	goto $label$1 
	
.LABEL $label$15
	*(CALL __errno_location()) = [75]
	goto $label$2 
	
.LABEL $label$14
	$38 = [0]
	goto $label$1 
	
.LABEL $label$13
	$30 = [2]
	goto $label$4 
	
.LABEL $label$12
	$30 = [3]
	goto $label$4 
	
.LABEL $label$11
	$38 = [0]
	goto $label$1 
	
.LABEL $label$10
	$30 = [4]
	goto $label$4 
	
.LABEL $label$9
	$30 = [5]
	goto $label$4 
	
.LABEL $label$8
	$30 = [6]
	goto $label$4 
	
.LABEL $label$7
	$30 = [7]
	goto $label$4 
	
.LABEL $label$6
	$30 = [8]
	goto $label$4 
	
.LABEL $label$5
	$30 = [9]
	
.LABEL $label$4
	$1 = ($4 + ($30 << [2]))
	
.LOOP $label$312:
	if ( *($1) ){ goto $label$3 }
	$1 = ($1 + [4])
	$38 = [1]
	$30 = ($30 + [1])
	if ( ((uint_32)$30 <= (uint_32)[9]) ){ goto $label$312 }
	goto $label$1 
	
.LABEL $label$3
	*(CALL __errno_location()) = [22]
	
.LABEL $label$2
	$38 = [-1]
	
.LABEL $label$1
	*([0] + [4]) = ($39 + [8128])
	$30
	$30
	return $38
}

void .FUNC $193 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	$9 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $9) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[40])
	if ( ((uint_32)$9 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($9 << [1])
	$7 = ( $6 ? $9 : ($9 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $295(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	*(($9 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($9 + [8]) = *($3)
	*($9 + [16 align=4]) = (int_64)0
	*(($3 = ($9 + [24]))) = [0]
	$2 = CALL $295([16])
	*($9 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($9 + [20])) = $5
	*($9 + [28]) = [0]
	*(($5 = ($9 + [32]))) = [0]
	*(($9 + [36])) = [0]
	$2 = *($4)
	$2 = ( *($4 + [4]) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$8 = (CASTING uint_64)(uint_32 $2)
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$1 = ($9 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $167($1, $2)
	$7 = *($5)
	$2 = *($1)
	goto $label$6 
	
.LABEL $label$7
	$7 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($10 + [4]) = $2
	*($10) = $2
	*($10 + [8]) = $7
	CALL $190($10, $4)
	$5 = ($9 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$9 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$10:
	*(($9 + [-32])) = *(($2 + [-12]))
	*(($9 + [-40])) = *(($2 + [-20]))
	*(($1 = ($9 + [-24]))) = (int_64)0
	*(($4 = ($9 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($9 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($4) = *($1)
	*($1) = [0]
	*(($1 = ($9 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($4 = ($9 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($9 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($4) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$9 = ($9 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($0) = $9
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$11 }
	$1 = ([0] - $4)
	$9 = ($2 + [-24])
	
.LOOP $label$12:
	$2 = *(($9 + [12]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($9 + [16])) = $2
	CALL $297($2)
	
.LABEL $label$13
	$2 = *($9)
	if ( ($2 == 0) ){ goto $label$14 }
	*(($9 + [4])) = $2
	CALL $297($2)
	
.LABEL $label$14
	$9 = ($9 + [-40])
	if ( ((int_32)($9 + $1) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $297($4)
	
.LABEL $label$15
	*([0] + [4]) = ($10 + [16])
	(unreachable)
}

int_64 .FUNC fabs (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_64 .FUNC sqrt (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($7) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$2 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$6 }
	$8 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $8) ){ goto $label$4 }
	$8 = [1]
	$9 = $2
	goto $label$5 
	
.LABEL $label$6
	if ( ((($7 & [2147483647]) | $2) == 0) ){ goto $label$3 }
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = [1]
	
.LOOP $label$7:
	$8 = ($8 + [-21])
	$7 = uint_32($2 >> [11])
	$9 = ($2 << [21])
	$2 = $9
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$5
	$5 = [0]
	if ( ($7 & [1048576]) ){ goto $label$8 }
	$5 = [0]
	
.LOOP $label$9:
	$5 = ($5 + [1])
	$7 = ($7 << [1])
	if ( (($7 & [1048576]) == 0) ){ goto $label$9 }
	
.LABEL $label$8
	$2 = ($9 << $5)
	$8 = ($8 - $5)
	$7 = (uint_32($9 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$7 = (($7 & [1048575]) | [1048576])
	$10 = ($8 + [-1023])
	if ( (($10 & [1]) == 0) ){ goto $label$10 }
	$7 = (($7 << [1]) | uint_32($2 >> [31]))
	$2 = ($2 << [1])
	
.LABEL $label$10
	$7 = (uint_32($2 >> [31]) | ($7 << [1]))
	$5 = ($2 << [1])
	$4 = [0]
	$9 = [2097152]
	$8 = [0]
	
.LOOP $label$11:
	$6 = $5
	$5 = ($9 + $8)
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$12 }
	$4 = ($9 + $4)
	$7 = ($7 - $5)
	$8 = ($5 + $9)
	
.LABEL $label$12
	$7 = (($7 << [1]) | (uint_32($2 >> [30]) & [1]))
	$5 = ($6 << [1])
	$2 = $6
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$11 }
	$3 = uint_32($10 >> [1])
	$9 = [-2147483648]
	$10 = [0]
	$2 = [0]
	
.LOOP $label$13:
	$6 = ($2 + $9)
	if ( ((int_32)$7 > (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$14 }
	if ( ($5 <= $6) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (($7 - $8) + ( [-1] ? [0] : ($5 <= $6) ))
	$2 = ($6 + $9)
	$8 = ((((int_32)$6 < (int_32)[0]) & ((int_32)$2 > (int_32)[-1])) + $8)
	$10 = ($10 + $9)
	$5 = ($5 - $6)
	
.LABEL $label$14
	$7 = (uint_32($5 >> [31]) | ($7 << [1]))
	$5 = ($5 << [1])
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$13 }
	if ( (($5 | $7) == 0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$17 }
	$10 = (($10 & [1]) + $10)
	goto $label$16 
	
.LABEL $label$17
	$4 = ($4 + [1])
	$10 = [0]
	
.LABEL $label$16
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($3 << [20]) + int_32($4 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($4 << [31])))))
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
}

int_32 .FUNC snprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [12]) = $3
	$3 = CALL vsnprintf($0, $1, $2, $3)
	*([0] + [4]) = ($4 + [16])
	return $3
}

int_64 .FUNC scalbn (float_64 $0, int_32 $1)
{
	int_32 $2
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	$2 = ($1 + [-1023])
	if ( ((int_32)$2 < (int_32)[1024]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	$2 = ($1 + [969])
	if ( ((int_32)$2 > (int_32)[-1023]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = $2
	goto $label$1 
	
.LABEL $label$2
	$1 = $2
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_32 .FUNC $325 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0 + [28])
	$6 = (*($0 + [20]) - $4)
	$3 = *($0 + [84])
	$5 = *($3 + [4])
	$6 = ( $5 ? $6 : ($5 <= $6) )
	if ( ($6 == 0) ){ goto $label$1 }
	CALL memcpy(*($3), $4, $6)
	*($3) = (*($3) + $6)
	$5 = (*($5) - $6)
	*(($5 = ($3 + [4]))) = $5
	
.LABEL $label$1
	$6 = *($3)
	$5 = ( $5 ? $2 : ($5 <= $2) )
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memcpy($6, $1, $5)
	$6 = (*($3) + $5)
	*($3) = $6
	*(($3 = ($3 + [4]))) = (*($3) - $5)
	
.LABEL $label$2
	*($6) = [0]
	$3 = *($0 + [44])
	*(($0 + [28])) = $3
	*(($0 + [20])) = $3
	return $2
}

int_32 .FUNC vsnprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [160])
	*([0] + [4]) = $4
	$5 = [-1]
	*($4 + [148]) = ( ($1 + [-1]) ? [0] : $1 )
	$0 = ( $0 ? ($4 + [158]) : $1 )
	*($4 + [144]) = $0
	*(($4 = CALL memset($4, [0], [144])) + [36]) = [17]
	*($4 + [75]) = [255]
	*($4 + [76]) = [-1]
	*($4 + [44]) = ($4 + [159])
	*($4 + [84]) = ($4 + [144])
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	*($0) = [0]
	$5 = CALL vfprintf($4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*(CALL __errno_location()) = [75]
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [160])
	return $5
}

int_32 .FUNC vfprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [288])
	*([0] + [4]) = $7
	*($7 + [284]) = $2
	$6 = [0]
	CALL memset(($7 + [240]), [0], [40])
	*($7 + [280]) = *($7 + [284])
	$2 = [-1]
	if ( ((int_32)CALL $328([0], $1, ($7 + [280]), ($7 + [80]), ($7 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL __lockfile($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) > (int_32)[0]) ){ goto $label$3 }
	*($0) = ($2 & [-33])
	
.LABEL $label$3
	$3 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	$2 = CALL $328($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	goto $label$4 
	
.LABEL $label$5
	*(($5 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($7 + [80])
	*($0 + [28]) = $7
	*($0 + [20]) = $7
	$4 = *($0 + [44])
	*($0 + [44]) = $7
	$2 = CALL $328($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	if ( ($4 == 0) ){ goto $label$4 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $4
	*($5) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$4 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $4 )
	
.LABEL $label$4
	$1 = *($0)
	*($0) = ($1 | $3)
	$1 = ($1 & [32])
	if ( ($6 == 0) ){ goto $label$6 }
	CALL __unlockfile($0)
	
.LABEL $label$6
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [288])
	return $2
}

int_32 .FUNC __errno_location ()
{
	return [15036]
}

int_64 .FUNC _ZNK5eosio6ulbook12get_interestEv (int_32 $0)
{
	return *($0 + [64])
}

void .FUNC _ZNK5eosio6ulbook17get_quantity_leftEv (int_32 $0, int_32 $1)
{
	*($0) = *($1 + [48])
	*(($0 + [8])) = *(($1 + [56]))
}

int_32 .FUNC _ZNK5eosio6ulbook10get_activeEv (int_32 $0)
{
	return *($0 + [80])
}

int_64 .FUNC _ZNK5eosio6ulbook9get_ratioEv (int_32 $0)
{
	return *($0 + [72])
}

void .FUNC _ZN5eosio6ulbook12set_interestEd (int_32 $0, float_64 $1)
{
	*($0 + [64]) = $1
}

void .FUNC _ZN5eosio6ulbook17set_quantity_leftERKNS_5assetE (int_32 $0, int_32 $1)
{
	*($0 + [48]) = *($1)
	*(($0 + [56])) = *(($1 + [8]))
}

void .FUNC _ZN5eosio6ulbook10set_activeEb (int_32 $0, int_32 $1)
{
	*($0 + [80]) = $1
}

void .FUNC _ZNK5eosio5order17get_quantity_leftEv (int_32 $0, int_32 $1)
{
	*($0) = *($1 + [40])
	*(($0 + [8])) = *(($1 + [48]))
}

int_32 .FUNC _ZN5eosio17orderbook_managerC2Ey (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	*($0) = $1
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [688]
	$6 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$5 > (uint_64)(int_64)6) ){ goto $label$6 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	*($0 + [8]) = $1
	*(($0 + [16])) = $6
	*(($0 + [24])) = (int_64)-1
	$5 = (int_64)0
	*(($0 + [32])) = (int_64)0
	*(($0 + [40])) = [0]
	*(($0 + [44])) = [0]
	$4 = (int_64)59
	$3 = [704]
	$6 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$5 > (uint_64)(int_64)6) ){ goto $label$12 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$2 = ($2 + [165])
	goto $label$10 
	
.LABEL $label$12
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$8
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$7 }
	*($0 + [48]) = $1
	*(($0 + [56])) = $6
	*(($0 + [64])) = (int_64)-1
	$5 = (int_64)0
	*(($0 + [72])) = (int_64)0
	*(($0 + [80])) = [0]
	*(($0 + [84])) = [0]
	$4 = (int_64)59
	$3 = [720]
	$6 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$5 > (uint_64)(int_64)6) ){ goto $label$18 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$2 = ($2 + [165])
	goto $label$16 
	
.LABEL $label$18
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$14
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$13 }
	*($0 + [88]) = $1
	*(($0 + [96])) = $6
	*(($0 + [104])) = (int_64)-1
	$5 = (int_64)0
	*(($0 + [112])) = (int_64)0
	*(($0 + [120])) = [0]
	*(($0 + [126])) = [0]
	*(($0 + [124])) = [0]
	$4 = (int_64)59
	$3 = [736]
	$6 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$5 > (uint_64)(int_64)6) ){ goto $label$24 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$2 = ($2 + [165])
	goto $label$22 
	
.LABEL $label$24
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$20
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$19 }
	*($0 + [128]) = $1
	*(($0 + [136])) = $6
	*(($0 + [144])) = (int_64)-1
	*(($0 + [152])) = (int_64)0
	*(($0 + [160])) = [0]
	*(($0 + [166])) = [0]
	*(($0 + [164])) = [0]
	return $0
}

void .FUNC _ZN5eosio6ulbook13set_autorenewEb (int_32 $0, int_32 $1)
{
	*($0 + [81]) = $1
}

int_32 .FUNC $318 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $295($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_64 .FUNC pow (float_64 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_64 $11
	float_64 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	int_32 $19
	float_64 $20
	float_64 $21
	$21 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $4)
	$4 = (CASTING int_64)(float_64 $1)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$8 = ($5) & [2147483647]
	if ( (($8) | $6) == 0) ){ goto $label$1 }
	$11 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)32))
	$3 = (CASTING uint_32)(uint_64 $11)
	if ( $3 ){ goto $label$2 }
	if ( ((int_32)$2 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 & [2147483647])
	if ( ((uint_32)$7 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$3 != (int_32)[0]) & ((int_32)$7 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$8 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$19 = [0]
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$19 = [2]
	if ( ((uint_32)$8 > (uint_32)[1128267775]) ){ goto $label$8 }
	$19 = [0]
	if ( ($8 <= [1072693248]) ){ goto $label$8 }
	$9 = uint_32($8 >> [20])
	if ( ((int_32)($9 + [-1023]) < (int_32)[21]) ){ goto $label$7 }
	$19 = ([1075] - $9)
	$9 = uint_32($6 >> $19)
	$19 = ( ([2] - ($9 & [1])) ? [0] : ((int_32)($9 << $19) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$19 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $9)
	$19 = uint_32($8 >> $6)
	$19 = ( ([2] - ($19 & [1])) ? [0] : ((int_32)($19 << $6) == (int_32)$8) )
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($7 + [-1072693248]) | $3) == 0) ){ goto $label$1 }
	if ( ($7 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL sqrt($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$21 = CALL fabs($0)
	if ( $3 ){ goto $label$18 }
	if ( ($7 == 0) ){ goto $label$17 }
	if ( ((int_32)($7 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$17 }
	
.LABEL $label$18
	$10 = (float_64)1
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$19 == (int_32)[1]) ){ goto $label$16 }
	if ( $19 ){ goto $label$14 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$17
	$21 = ( ((float_64)(float_64)1 / (float_64)$21) ? $21 : ((int_32)$5 < (int_32)[0]) )
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($19 | ($7 + [-1072693248])) == 0) ){ goto $label$15 }
	return ( !(float_64)$21 ? $21 : ((int_32)$19 == (int_32)[1]) )
	
.LABEL $label$16
	$10 = (float_64)-1
	goto $label$14 
	
.LABEL $label$15
	$1 = (float_64)
	return ((float_64)$1($21 - $21)) / (float_64)$1)
	
.LABEL $label$14
	if ( ($8 <= [1105199105]) ){ goto $label$28 }
	if ( ($8 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$7 > (uint_32)[1072693247]) ){ goto $label$24 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 < (int_32)[0]) )
	
.LABEL $label$28
	$8 = [0]
	if ( ((uint_32)$7 > (uint_32)[1048575]) ){ goto $label$26 }
	$21 = ((float_64)$21 * (float_64)(float_64)9007199254740992)
	$7 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $21) >> (uint_64)(int_64)32))
	$5 = [-53]
	goto $label$25 
	
.LABEL $label$27
	if ( ((uint_32)$7 > (uint_32)[1072693246]) ){ goto $label$23 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 < (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$26
	$5 = [0]
	
.LABEL $label$25
	$6 = ($7 & [1048575])
	$2 = ($6 | [1072693248])
	$5 = ((int_32($7 >> [20]) + $5) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$21 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$22 }
	$8 = [1]
	goto $label$21 
	
.LABEL $label$24
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 > (int_32)[0]) )
	
.LABEL $label$23
	if ( ($7 <= [1072693249]) ){ goto $label$20 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 > (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$22
	$2 = ($2 + [-1048576])
	$5 = ($5 + [1])
	
.LABEL $label$21
	$13 = ((float_64)*(($6 + [12480])) + (float_64)((float_64)((float_64)(float_64))($21 - (float_64))($0 - $14)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$21 = ((float_64)((float_64)$12 * (float_64)$0) + (float_64)((float_64)$21 * (float_64)(float_64))($13 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $17))
	$0 = ((float_64)$21 * (float_64)$21)
	$16 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($2 >> [1]) | [536870912]) + ($8 << [18])) + [524288])) << (int_64)32))
	$12 = ((float_64)$15 * (float_64)(float_64))((float_64))($14 - ((float_64)$0 * (float_64)$16)) - ((float_64)$0 * (float_64)(float_64))($12 - (float_64))($16 - $13)
	$13 = ((float_64)((float_64)((float_64)$21 + (float_64)$0) * (float_64)$12))
	$17 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$17 + (float_64)(float_64)3) + (float_64)$13)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$15 = ((float_64)(float_64)1 / (float_64)((float_64)$13 + (float_64)$12))
	$13 = *(($6 + [12464]))
	$12 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $21) & (int_64)4294967295)))
	$14 = (float_64)
	$21 = ((float_64)$14($12 - $13)) * (float_64)$15
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $21)) & (int_64)-4294967296)
	$14 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$14 & (int_64)-4294967296))))
	$12 = ((float_64)$0 + (float_64)$21)
	$6 = ($8 << [3])
	$18 = *(($6 + [12496]))
	$20 = (CASTING float_64)(int_32 $5)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$20 + (float_64)((float_64)$18 + (float_64)((float_64)$12)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$20 = (float_64))((float_64))((float_64))($0 + (float_64)$13)))))) & (int_64)-4294967296))) - $20) - $18) - $12)
	goto $label$19 
	
.LABEL $label$20
	$13 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$21 + (float_64)(float_64)-1)
	$21 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$21 + (float_64)$13))) & (int_64)-4294967296)
	$20 = (float_64))($0) - $21)
	
.LABEL $label$19
	$1 = ((float_64)((float_64)(float_64))($1 - $12) * (float_64)$0) + (float_64)((float_64)(float_64))($13 - $20) * (float_64)$1
	$12 = (CASTING float_64)(int_64 ((int_64)$4 & (int_64)-4294967296))
	$21 = ((float_64)$12 * (float_64)$0)
	$0 = ((float_64)$21 + (float_64)$1)
	$4 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 $4)))
	$2 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ((int_32)$2) < (int_32)[1083179008]) ){ goto $label$33 }
	if ( ((($2 + [-1083179008]) | $8) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$33
	if ( (($2 & [2147482624]) <= [1083231232]) ){ goto $label$30 }
	if ( ((($2 + [1064252416]) | $8) == 0) ){ goto $label$31 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$32
	$0 = (float_64)
	$12 = ((float_64)$1 + (float_64)(float_64)8.008566259537294e-17)
	if ( (((float_64)$12 <= (float_64)$0($0 - $21))) | (((float_64)$12 != (float_64)$12) | ((float_64)$0 != (float_64)$0))) ){ goto $label$30 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$31
	$0 = (float_64)
	if ( ((((float_64)$1 > (float_64)$0($0 - $21))) | (((float_64)$1 != (float_64)$1) | ((float_64)$0 != (float_64)$0))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$8 = ($2 & [2147483647])
	if ( ($8 <= [1071644673]) ){ goto $label$35 }
	$6 = (uint_32($8 >> [20]) & [2047])
	$8 = (uint_32([1048576] >> (uint_32($8 >> [20]) + [-1022])) + $2)
	$5 = uint_32((($8 & [1048575]) | [1048576]) >> ([1043] - $6))
	$2 = ( ([0] - $5) ? $5 : ((int_32)$2 < (int_32)[0]) )
	$21 = (float_64))($21 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($8 & ((int_32)uint_32([1048575] >> ($6 + [-1023])) ^ (int_32)[-1]))) << (int_64)32)))
	goto $label$34 
	
.LABEL $label$35
	$2 = [0]
	
.LABEL $label$34
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$21 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $21)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$1 + (float_64)$21)) & (int_64)-4294967296))
	$12 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$12 + (float_64)$21 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = (float_64)
	$4 = (CASTING int_64)(float_64 $1((float_64)1 - (float_64))((float_64))(((float_64)((float_64)$1)) * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$4 - ((float_64)$0($21 - (float_64))($1 - $12))) + (float_64)((float_64)$1 * (float_64)$0))
	if ( ((int_32)int_32($8 - $1))))) >> (uint_64)(int_64)32)) + ($2 << [20]))) >> [20]) <= (int_32)[0]) ){ goto $label$36 }
	return ((float_64)$10 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))))
	
.LABEL $label$36
	return ((float_64)$10 * (float_64)CALL scalbn($1, $2))
	
.LABEL $label$29
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $21
}

void .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [40]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	*($4 + [15]) = *($0 + [48])
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [1200])
	CALL memcpy(*($3 + [4]), ($4 + [15]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	*([0] + [4]) = ($4 + [16])
}

void .FUNC _ZN5eosio7chintai13fulfill_orderENS_5assetEyyyydydb (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, float_64 $6, int_64 $7, float_64 $8, int_32 $9)
{
	float_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_64 $22
	int_64 $23
	int_64 $24
	int_64 $25
	int_64 $26
	int_64 $27
	int_32 $28
	$28 = (*([0] + [4]) - [320])
	*([0] + [4]) = $28
	$10 = (CASTING float_64)(int_64 *($1))
	$11 = (Rounds 0)(((float_64)$10 * (float_64)$6))
	CALL eosio_assert((uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [16])
	$23 = (int_64)5459781
	$1 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $23) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$23 = (uint_64)$23 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$23) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$23 = (uint_64)$23 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$23) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$16 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$16 = [0]
	
.LABEL $label$1
	CALL eosio_assert($16, [80])
	$12 = (Rounds 0)(((float_64)(float_64))((float_64)1 - $6) * (float_64)$10)
	CALL eosio_assert((uint_64)(((int_64)$12) + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [16])
	$23 = (int_64)5459781
	$1 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $23) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$23 = (uint_64)$23 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$23) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$23 = (uint_64)$23 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$23) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$16 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$16 = [0]
	
.LABEL $label$6
	CALL eosio_assert($16, [80])
	CALL eosio_assert([1], [176])
	$23 = ((int_64)$12 + (int_64)$11)
	CALL eosio_assert(((int_64)$23 > (int_64)-4611686018427387904), [224])
	CALL eosio_assert(((int_64)$23 < (int_64)4611686018427387904), [256])
	$13 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $23) * (float_64)$8))
	CALL eosio_assert((uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [16])
	$23 = (int_64)5459781
	$1 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $23) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$23 = (uint_64)$23 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$23) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$23 = (uint_64)$23 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$23) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$16 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$16 = [0]
	
.LABEL $label$11
	CALL eosio_assert($16, [80])
	$14 = CALL $166(($0 + [440]))
	$15 = *($0)
	$23 = (int_64)0
	$22 = (int_64)59
	$1 = [1616]
	$27 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$23 > (uint_64)(int_64)5) ){ goto $label$21 }
	$16 = *($1)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$16 = ($16 + [165])
	goto $label$19 
	
.LABEL $label$21
	$24 = (int_64)0
	if ( ((uint_64)$23 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$17
	$1 = ($1 + [1])
	$23 = ((int_64)$23 + (int_64)1)
	$27 = ((int_64)$24 | (int_64)$27)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$16 }
	$23 = (int_64)0
	$22 = (int_64)59
	$1 = [1696]
	$25 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$23 > (uint_64)(int_64)4) ){ goto $label$27 }
	$16 = *($1)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$16 = ($16 + [165])
	goto $label$25 
	
.LABEL $label$27
	$24 = (int_64)0
	if ( ((uint_64)$23 <= (uint_64)(int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$23
	$1 = ($1 + [1])
	$23 = ((int_64)$23 + (int_64)1)
	$25 = ((int_64)$24 | (int_64)$25)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$22 }
	$23 = (int_64)0
	$22 = (int_64)59
	$1 = [2336]
	$26 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$23 > (uint_64)(int_64)9) ){ goto $label$33 }
	$16 = *($1)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$16 = ($16 + [165])
	goto $label$31 
	
.LABEL $label$33
	$24 = (int_64)0
	if ( ((uint_64)$23 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$29
	$1 = ($1 + [1])
	$23 = ((int_64)$23 + (int_64)1)
	$26 = ((int_64)$24 | (int_64)$26)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$28 }
	*((($28 + [32]) + [24])) = (int_64)1397703940
	*(($28 + [72])) = (int_64)1397703940
	*($28 + [40]) = $5
	*($28 + [32]) = $15
	*($28 + [48]) = $12
	*($28 + [64]) = $11
	*($28 + [80]) = [0]
	*($28 + [264]) = $26
	*($28 + [256]) = $25
	*(($1 = CALL $295([16]))) = $15
	*($1 + [8]) = $27
	*(($16 = ($28 + [288]))) = [0]
	$20 = ($1 + [16])
	*((($28 + [256]) + [24])) = $20
	*(($28 + [276])) = $20
	*($28 + [272]) = $1
	*($28 + [284]) = [0]
	*(($28 + [292])) = [0]
	CALL $167(($28 + [284]), [49])
	$1 = *($16)
	$16 = *($28 + [284])
	*($28 + [220]) = $16
	*($28 + [216]) = $16
	*($28 + [224]) = $1
	*($28 + [112]) = ($28 + [216])
	*($28 + [128]) = ($28 + [32])
	CALL $215(($28 + [128]), ($28 + [112]))
	CALL $185(($28 + [32]), ($28 + [256]))
	$1 = *($28 + [32])
	CALL send_inline($1, (*($28 + [36]) - $1))
	$1 = *($28 + [32])
	if ( ($1 == 0) ){ goto $label$34 }
	*($28 + [36]) = $1
	CALL $297($1)
	
.LABEL $label$34
	$26 = *($0)
	$23 = (int_64)0
	$22 = (int_64)59
	$1 = [1616]
	$27 = (int_64)0
	
.LOOP $label$35:
	if ( ((uint_64)$23 > (uint_64)(int_64)5) ){ goto $label$40 }
	$16 = *($1)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$16 = ($16 + [165])
	goto $label$38 
	
.LABEL $label$40
	$24 = (int_64)0
	if ( ((uint_64)$23 <= (uint_64)(int_64)11) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$39
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$37
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$36
	$1 = ($1 + [1])
	$23 = ((int_64)$23 + (int_64)1)
	$27 = ((int_64)$24 | (int_64)$27)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$35 }
	$23 = (int_64)0
	$22 = (int_64)59
	$1 = [1728]
	$25 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$23 > (uint_64)(int_64)9) ){ goto $label$46 }
	$16 = *($1)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$16 = ($16 + [165])
	goto $label$44 
	
.LABEL $label$46
	$24 = (int_64)0
	if ( ((uint_64)$23 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$42
	$1 = ($1 + [1])
	$23 = ((int_64)$23 + (int_64)1)
	$25 = ((int_64)$24 | (int_64)$25)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$41 }
	$23 = CALL current_time()
	*(($28 + [208])) = [0]
	*($28 + [200]) = (int_64)0
	$23 = ((uint_64)$23 / (uint_64)(int_64)1000000)
	$1 = CALL strlen([2336])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$48 }
	$23 = ((int_64)((int_64)$23 & (int_64)4294967295) + (int_64)$7)
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$51 }
	*($28 + [200]) = ($1 << [1])
	$16 = (($28 + [200]) | [1])
	if ( $1 ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	$20 = (($1 + [16]) & [-16])
	$16 = CALL $295($20)
	*($28 + [200]) = ($20 | [1])
	*($28 + [208]) = $16
	*($28 + [204]) = $1
	
.LABEL $label$50
	CALL memcpy($16, [2336], $1)
	
.LABEL $label$49
	*(($16 + $1)) = [0]
	*(($16 = ($28 + [72]))) = [0]
	*(($28 + [76])) = [0]
	*($28 + [68]) = [0]
	*($28 + [32]) = $23
	*($28 + [40]) = [0]
	*($28 + [48]) = $2
	*($28 + [56]) = $3
	*($28 + [64]) = $9
	CALL $300((($28 + [32]) + [36]), ($28 + [200]))
	*(($20 = ($28 + [240]))) = [0]
	*($28 + [224]) = $25
	*($28 + [216]) = $26
	*($28 + [232]) = (int_64)0
	*(($1 = CALL $295([16]))) = $26
	*($1 + [8]) = $27
	*(($28 + [248])) = [0]
	$17 = ($1 + [16])
	*($20) = $17
	*(($28 + [236])) = $17
	*($28 + [232]) = $1
	*($28 + [244]) = [0]
	*((($28 + [216]) + [36])) = [0]
	$1 = *($28 + [68])
	$16 = ( *($16) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($16 + [29])
	$23 = (CASTING uint_64)(uint_32 $16)
	$16 = ($28 + [244])
	
.LOOP $label$52:
	$1 = ($1 + [1])
	$23 = (uint_64)$23 >> (uint_64)(int_64)7
	if ( ((int_64)$23) != (int_64)0) ){ goto $label$52 }
	if ( ($1 == 0) ){ goto $label$54 }
	CALL $167($16, $1)
	$16 = *(($28 + [248]))
	$1 = *(($28 + [244]))
	goto $label$53 
	
.LABEL $label$54
	$16 = [0]
	$1 = [0]
	
.LABEL $label$53
	*($28 + [132]) = $1
	*($28 + [128]) = $1
	*($28 + [136]) = $16
	CALL $186(($28 + [128]), ($28 + [32]))
	if ( ((*(($28 + [68])) & [1]) == 0) ){ goto $label$55 }
	CALL $297(*(($28 + [76])))
	
.LABEL $label$55
	if ( ((*($28 + [200]) & [1]) == 0) ){ goto $label$56 }
	CALL $297(*($28 + [208]))
	
.LABEL $label$56
	CALL $185(($28 + [32]), ($28 + [216]))
	$1 = *($28 + [32])
	CALL send_inline($1, (*($28 + [36]) - $1))
	$1 = *($28 + [32])
	if ( ($1 == 0) ){ goto $label$57 }
	*($28 + [36]) = $1
	CALL $297($1)
	
.LABEL $label$57
	*(($28 + [192])) = [0]
	*($28 + [184]) = (int_64)0
	$1 = CALL strlen([1856])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$47 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$60 }
	*($28 + [184]) = ($1 << [1])
	$16 = (($28 + [184]) | [1])
	if ( $1 ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$60
	$20 = (($1 + [16]) & [-16])
	$16 = CALL $295($20)
	*($28 + [184]) = ($20 | [1])
	*($28 + [192]) = $16
	*($28 + [188]) = $1
	
.LABEL $label$59
	CALL memcpy($16, [1856], $1)
	
.LABEL $label$58
	*(($16 + $1)) = [0]
	if ( ($9 == 0) ){ goto $label$62 }
	CALL _ZNSt3__19to_stringEy(($28 + [304]), $2)
	$1 = CALL $306(($28 + [304]), [0], [2352])
	$16 = ($1 + [8])
	*((($28 + [112]) + [8])) = *($16)
	*($28 + [112]) = *($1)
	*($1) = [0]
	*(($1 + [4])) = [0]
	*($16) = [0]
	$1 = CALL $305(($28 + [112]), [2368])
	$16 = ($1 + [8])
	*((($28 + [128]) + [8])) = *($16)
	*($28 + [128]) = *($1)
	*($1) = [0]
	*(($1 + [4])) = [0]
	*($16) = [0]
	CALL _ZNSt3__19to_stringEy(($28 + [168]), $3)
	$1 = *($28 + [168])
	$20 = ($1 & [1])
	$1 = CALL $304(($28 + [128]), ( *($28 + [176]) ? (($28 + [168]) | [1]) : $20 ), ( *($28 + [172]) ? uint_32($1 >> [1]) : $20 ))
	$20 = ($1 + [8])
	*(($16 = (($28 + [32]) + [8]))) = *($20)
	*($28 + [32]) = *($1)
	*($1) = [0]
	*(($1 + [4])) = [0]
	*($20) = [0]
	$1 = *($28 + [32])
	$20 = ($1 & [1])
	CALL $304(($28 + [184]), ( *($16) ? (($28 + [32]) | [1]) : $20 ), ( *($28 + [36]) ? uint_32($1 >> [1]) : $20 ))
	if ( ((*($28 + [32]) & [1]) == 0) ){ goto $label$63 }
	CALL $297(*($16))
	
.LABEL $label$63
	if ( ((*($28 + [168]) & [1]) == 0) ){ goto $label$64 }
	CALL $297(*(($28 + [176])))
	
.LABEL $label$64
	if ( ((*($28 + [128]) & [1]) == 0) ){ goto $label$65 }
	CALL $297(*($28 + [136]))
	
.LABEL $label$65
	if ( ((*($28 + [112]) & [1]) == 0) ){ goto $label$66 }
	CALL $297(*($28 + [120]))
	
.LABEL $label$66
	if ( ((*($28 + [304]) & [1]) == 0) ){ goto $label$61 }
	CALL $297(*($28 + [312]))
	goto $label$61 
	
.LABEL $label$62
	CALL _ZNSt3__19to_stringEy(($28 + [304]), $3)
	$1 = CALL $306(($28 + [304]), [0], [2400])
	$16 = ($1 + [8])
	*((($28 + [112]) + [8])) = *($16)
	*($28 + [112]) = *($1)
	*($1) = [0]
	*(($1 + [4])) = [0]
	*($16) = [0]
	$1 = CALL $305(($28 + [112]), [2416])
	$16 = ($1 + [8])
	*((($28 + [128]) + [8])) = *($16)
	*($28 + [128]) = *($1)
	*($1) = [0]
	*(($1 + [4])) = [0]
	*($16) = [0]
	CALL _ZNSt3__19to_stringEy(($28 + [168]), $2)
	$1 = *($28 + [168])
	$20 = ($1 & [1])
	$1 = CALL $304(($28 + [128]), ( *($28 + [176]) ? (($28 + [168]) | [1]) : $20 ), ( *($28 + [172]) ? uint_32($1 >> [1]) : $20 ))
	$20 = ($1 + [8])
	*(($16 = (($28 + [32]) + [8]))) = *($20)
	*($28 + [32]) = *($1)
	*($1) = [0]
	*(($1 + [4])) = [0]
	*($20) = [0]
	$1 = *($28 + [32])
	$20 = ($1 & [1])
	CALL $304(($28 + [184]), ( *($16) ? (($28 + [32]) | [1]) : $20 ), ( *($28 + [36]) ? uint_32($1 >> [1]) : $20 ))
	if ( ((*($28 + [32]) & [1]) == 0) ){ goto $label$67 }
	CALL $297(*($16))
	
.LABEL $label$67
	if ( ((*($28 + [168]) & [1]) == 0) ){ goto $label$68 }
	CALL $297(*(($28 + [176])))
	
.LABEL $label$68
	if ( ((*($28 + [128]) & [1]) == 0) ){ goto $label$69 }
	CALL $297(*($28 + [136]))
	
.LABEL $label$69
	if ( ((*($28 + [112]) & [1]) == 0) ){ goto $label$70 }
	CALL $297(*($28 + [120]))
	
.LABEL $label$70
	if ( ((*($28 + [304]) & [1]) == 0) ){ goto $label$61 }
	CALL $297(*($28 + [312]))
	
.LABEL $label$61
	$25 = *($0)
	$23 = (int_64)0
	$22 = (int_64)59
	$1 = [1616]
	$27 = (int_64)0
	
.LOOP $label$71:
	if ( ((uint_64)$23 > (uint_64)(int_64)5) ){ goto $label$76 }
	$16 = *($1)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$75 }
	$16 = ($16 + [165])
	goto $label$74 
	
.LABEL $label$76
	$24 = (int_64)0
	if ( ((uint_64)$23 <= (uint_64)(int_64)11) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$75
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$74
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$73
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$72
	$1 = ($1 + [1])
	$23 = ((int_64)$23 + (int_64)1)
	$27 = ((int_64)$24 | (int_64)$27)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$71 }
	*($28 + [120]) = $27
	*($28 + [112]) = $25
	$23 = (int_64)0
	$22 = (int_64)59
	$1 = [1536]
	$27 = (int_64)0
	
.LOOP $label$77:
	if ( ((uint_64)$23 > (uint_64)(int_64)10) ){ goto $label$82 }
	$16 = *($1)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$81 }
	$16 = ($16 + [165])
	goto $label$80 
	
.LABEL $label$82
	$24 = (int_64)0
	if ( ((int_64)$23 == (int_64)11) ){ goto $label$79 }
	goto $label$78 
	
.LABEL $label$81
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$80
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$79
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$78
	$1 = ($1 + [1])
	$22 = ((int_64)$22 + (int_64)-5)
	$27 = ((int_64)$24 | (int_64)$27)
	$23 = ((int_64)$23 + (int_64)1)
	if ( ((int_64)$23 != (int_64)13) ){ goto $label$77 }
	$23 = (int_64)0
	$22 = (int_64)59
	$1 = [1936]
	$25 = (int_64)0
	
.LOOP $label$83:
	if ( ((uint_64)$23 > (uint_64)(int_64)7) ){ goto $label$88 }
	$16 = *($1)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$87 }
	$16 = ($16 + [165])
	goto $label$86 
	
.LABEL $label$88
	$24 = (int_64)0
	if ( ((uint_64)$23 <= (uint_64)(int_64)11) ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$87
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$86
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$85
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$84
	$1 = ($1 + [1])
	$23 = ((int_64)$23 + (int_64)1)
	$25 = ((int_64)$24 | (int_64)$25)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$83 }
	CALL $216(($28 + [304]), ($28 + [184]), [2448])
	*(($28 + [56])) = (int_64)1397703940
	*(($28 + [68])) = *($28 + [308])
	*($28 + [40]) = $4
	$1 = ($28 + [312])
	*(($16 = ($28 + [72]))) = *($1)
	*($28 + [32]) = *($0)
	*($28 + [48]) = $13
	*($28 + [64]) = *($28 + [304])
	*($28 + [304]) = [0]
	*($28 + [308]) = [0]
	*($1) = [0]
	$17 = CALL $204(($28 + [128]), ($28 + [112]), $27, $25, ($28 + [32]))
	if ( ((*($28 + [64]) & [1]) == 0) ){ goto $label$89 }
	CALL $297(*($16))
	
.LABEL $label$89
	if ( ((*($28 + [304]) & [1]) == 0) ){ goto $label$90 }
	CALL $297(*(($28 + [312])))
	
.LABEL $label$90
	CALL $185(($28 + [32]), $17)
	$1 = *($28 + [32])
	CALL send_inline($1, (*($28 + [36]) - $1))
	$1 = *($28 + [32])
	if ( ($1 == 0) ){ goto $label$91 }
	*($28 + [36]) = $1
	CALL $297($1)
	
.LABEL $label$91
	$20 = ($0 + [352])
	$25 = *($0)
	$23 = (int_64)0
	$22 = (int_64)59
	$1 = [1616]
	$27 = (int_64)0
	
.LOOP $label$92:
	if ( ((uint_64)$23 > (uint_64)(int_64)5) ){ goto $label$97 }
	$16 = *($1)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$96 }
	$16 = ($16 + [165])
	goto $label$95 
	
.LABEL $label$97
	$24 = (int_64)0
	if ( ((uint_64)$23 <= (uint_64)(int_64)11) ){ goto $label$94 }
	goto $label$93 
	
.LABEL $label$96
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$95
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$94
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$93
	$1 = ($1 + [1])
	$23 = ((int_64)$23 + (int_64)1)
	$27 = ((int_64)$24 | (int_64)$27)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$92 }
	*($28 + [120]) = $27
	*($28 + [112]) = $25
	$23 = (int_64)0
	$22 = (int_64)59
	$1 = [1632]
	$27 = (int_64)0
	
.LOOP $label$98:
	if ( ((uint_64)$23 > (uint_64)(int_64)8) ){ goto $label$103 }
	$16 = *($1)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$102 }
	$16 = ($16 + [165])
	goto $label$101 
	
.LABEL $label$103
	$24 = (int_64)0
	if ( ((uint_64)$23 <= (uint_64)(int_64)11) ){ goto $label$100 }
	goto $label$99 
	
.LABEL $label$102
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$101
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$100
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$99
	$1 = ($1 + [1])
	$23 = ((int_64)$23 + (int_64)1)
	$27 = ((int_64)$24 | (int_64)$27)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$98 }
	*($28 + [168]) = $27
	*((($28 + [32]) + [16])) = (int_64)1397703940
	*((($28 + [32]) + [32])) = (int_64)1397703940
	*($28 + [40]) = $12
	*($28 + [32]) = $5
	*($28 + [56]) = $11
	*($28 + [72]) = $3
	*($28 + [80]) = $2
	*($28 + [88]) = $4
	*($28 + [96]) = $7
	*($28 + [104]) = $9
	$16 = ($0 + [356])
	$1 = *($16)
	if ( ((uint_32)$1 >= (uint_32)*(($0 + [360]))) ){ goto $label$105 }
	*($1 + [8]) = $27
	*($1) = $25
	*($1 + [16 align=4]) = (int_64)0
	*(($19 = ($1 + [24]))) = [0]
	$18 = CALL $295([16])
	*($1 + [16]) = $18
	$21 = ($18 + [16])
	*($19) = $21
	*(($18 + [8])) = *((($28 + [112]) + [8]))
	*($18) = *($28 + [112])
	*(($1 + [20])) = $21
	*($1 + [28]) = [0]
	*(($18 = ($1 + [32]))) = [0]
	*(($1 + [36])) = [0]
	CALL $167(($1 + [28]), [73])
	$18 = *($18)
	$1 = *($1 + [28])
	*($28 + [308]) = $1
	*($28 + [304]) = $1
	*($28 + [312]) = $18
	*($28 + [296]) = ($28 + [304])
	*($28 + [24]) = ($28 + [32])
	CALL $168(($28 + [24]), ($28 + [296]))
	*($16) = (*($16) + [40])
	goto $label$104 
	
.LABEL $label$105
	CALL $169($20, ($28 + [112]), $0, ($28 + [168]), ($28 + [32]))
	
.LABEL $label$104
	$25 = *($0)
	$23 = (int_64)0
	$22 = (int_64)59
	$1 = [1616]
	$27 = (int_64)0
	
.LOOP $label$106:
	if ( ((uint_64)$23 > (uint_64)(int_64)5) ){ goto $label$111 }
	$16 = *($1)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$110 }
	$16 = ($16 + [165])
	goto $label$109 
	
.LABEL $label$111
	$24 = (int_64)0
	if ( ((uint_64)$23 <= (uint_64)(int_64)11) ){ goto $label$108 }
	goto $label$107 
	
.LABEL $label$110
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$109
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$108
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$107
	$1 = ($1 + [1])
	$23 = ((int_64)$23 + (int_64)1)
	$27 = ((int_64)$24 | (int_64)$27)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$106 }
	*($28 + [120]) = $27
	*($28 + [112]) = $25
	$23 = (int_64)0
	$22 = (int_64)59
	$1 = [1728]
	$27 = (int_64)0
	
.LOOP $label$112:
	if ( ((uint_64)$23 > (uint_64)(int_64)9) ){ goto $label$117 }
	$16 = *($1)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$116 }
	$16 = ($16 + [165])
	goto $label$115 
	
.LABEL $label$117
	$24 = (int_64)0
	if ( ((uint_64)$23 <= (uint_64)(int_64)11) ){ goto $label$114 }
	goto $label$113 
	
.LABEL $label$116
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$115
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$114
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$113
	$1 = ($1 + [1])
	$23 = ((int_64)$23 + (int_64)1)
	$27 = ((int_64)$24 | (int_64)$27)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$112 }
	*($28 + [24]) = $27
	CALL _ZNSt3__19to_stringEy(($28 + [168]), $7)
	$1 = CALL $306(($28 + [168]), [0], [2496])
	$16 = ($1 + [8])
	*((($28 + [8]) + [8])) = *($16)
	*($28 + [8]) = *($1)
	*($1) = [0]
	*(($1 + [4])) = [0]
	*($16) = [0]
	*(($28 + [76])) = [0]
	*($28 + [68 align=4]) = (int_64)0
	*($28 + [32]) = $14
	*($28 + [40]) = [0]
	*($28 + [48]) = $2
	*($28 + [56]) = $3
	*($28 + [64]) = $9
	$9 = (($28 + [32]) + [36])
	CALL $300($9, ($28 + [8]))
	$16 = *(($0 + [356]))
	if ( ((uint_32)$16 >= (uint_32)*(($0 + [360]))) ){ goto $label$121 }
	*($16 + [16 align=4]) = (int_64)0
	$23 = *($0)
	*($16 + [8]) = *($28 + [24])
	*($16) = $23
	*(($20 = ($16 + [24]))) = [0]
	$1 = CALL $295([16])
	*($16 + [16]) = $1
	$18 = ($1 + [16])
	*($20) = $18
	*(($1 + [8])) = *((($28 + [112]) + [8]))
	*($1) = *($28 + [112])
	*(($16 + [20])) = $18
	*($16 + [28]) = [0]
	*(($16 + [32])) = [0]
	*(($16 + [36])) = [0]
	$1 = *($9)
	$9 = ( *(($28 + [72])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($9 + [29])
	$23 = (CASTING uint_64)(uint_32 $9)
	$9 = ($16 + [28])
	
.LOOP $label$122:
	$1 = ($1 + [1])
	$23 = (uint_64)$23 >> (uint_64)(int_64)7
	if ( ((int_64)$23) != (int_64)0) ){ goto $label$122 }
	if ( ($1 == 0) ){ goto $label$120 }
	CALL $167($9, $1)
	$9 = *(($16 + [32]))
	$1 = *(($16 + [28]))
	goto $label$119 
	
.LABEL $label$121
	CALL $189($20, ($28 + [112]), $0, ($28 + [24]), ($28 + [32]))
	goto $label$118 
	
.LABEL $label$120
	$9 = [0]
	$1 = [0]
	
.LABEL $label$119
	*($28 + [308]) = $1
	*($28 + [304]) = $1
	*($28 + [312]) = $9
	CALL $186(($28 + [304]), ($28 + [32]))
	*(($1 = ($0 + [356]))) = (*($1) + [40])
	
.LABEL $label$118
	if ( ((*(($28 + [68])) & [1]) == 0) ){ goto $label$123 }
	CALL $297(*(($28 + [76])))
	
.LABEL $label$123
	if ( ((*($28 + [8]) & [1]) == 0) ){ goto $label$124 }
	CALL $297(*($28 + [16]))
	
.LABEL $label$124
	if ( ((*($28 + [168]) & [1]) == 0) ){ goto $label$125 }
	CALL $297(*($28 + [176]))
	
.LABEL $label$125
	*(($0 + [336])) = ((int_64)$7 + (int_64)1)
	$19 = *(($0 + [200]))
	$9 = *(($0 + [204]))
	if ( ((int_32)$9 == (int_32)$19) ){ goto $label$126 }
	$1 = ($9 + [-24])
	$20 = ([0] - $19)
	
.LOOP $label$127:
	if ( ((int_64)*(*($1)) == (int_64)$7) ){ goto $label$126 }
	$9 = $1
	$16 = ($1 + [-24])
	$1 = $16
	if ( ((int_32)($16 + $20) != (int_32)[-24]) ){ goto $label$127 }
	
.LABEL $label$126
	$18 = ($0 + [176])
	if ( ((int_32)$9 == (int_32)$19) ){ goto $label$130 }
	$1 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$18), [752])
	if ( $1 ){ goto $label$129 }
	goto $label$128 
	
.LABEL $label$130
	$1 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, $7)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$128 }
	CALL eosio_assert(((int_32)*(CALL $123($18, $1) + [48]) == (int_32)$18), [752])
	
.LABEL $label$129
	$19 = *(($0 + [200]))
	$9 = *(($0 + [204]))
	if ( ((int_32)$9 == (int_32)$19) ){ goto $label$131 }
	$1 = ($9 + [-24])
	$20 = ([0] - $19)
	
.LOOP $label$132:
	if ( ((int_64)*(*($1)) == (int_64)$7) ){ goto $label$131 }
	$9 = $1
	$16 = ($1 + [-24])
	$1 = $16
	if ( ((int_32)($16 + $20) != (int_32)[-24]) ){ goto $label$132 }
	
.LABEL $label$131
	if ( ((int_32)$9 == (int_32)$19) ){ goto $label$134 }
	$1 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$18), [752])
	goto $label$133 
	
.LABEL $label$134
	$1 = [0]
	$16 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, $7)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$133 }
	$1 = CALL $123($18, $16)
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$18), [752])
	
.LABEL $label$133
	$24 = *($0)
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [976])
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$18), [1024])
	CALL eosio_assert(((int_64)*(($0 + [176])) == (int_64)CALL $fimport$15()), [1072])
	*($1 + [8]) = $8
	$23 = *($1)
	CALL eosio_assert([1], [1136])
	*($28 + [120]) = (($28 + [32]) + [48])
	*($28 + [116]) = ($28 + [32])
	*($28 + [112]) = ($28 + [32])
	CALL $124(($28 + [112]), $1)
	CALL db_update_i64(*($1 + [52]), $24, ($28 + [32]), [48])
	$1 = ($0 + [192])
	if ( (uint_64)($23 <= *($1)) ){ goto $label$128 }
	*($1) = ( (int_64)-2 ? ((int_64)$23 + (int_64)1) : ((uint_64)$23 > (uint_64)(int_64)-3) )
	
.LABEL $label$128
	$1 = *($17 + [28])
	if ( ($1 == 0) ){ goto $label$135 }
	*(($17 + [32])) = $1
	CALL $297($1)
	
.LABEL $label$135
	$1 = *($17 + [16])
	if ( ($1 == 0) ){ goto $label$136 }
	*(($17 + [20])) = $1
	CALL $297($1)
	
.LABEL $label$136
	if ( ((*($28 + [184]) & [1]) == 0) ){ goto $label$137 }
	CALL $297(*($28 + [192]))
	
.LABEL $label$137
	$1 = *($28 + [244])
	if ( ($1 == 0) ){ goto $label$138 }
	*(($28 + [248])) = $1
	CALL $297($1)
	
.LABEL $label$138
	$1 = *($28 + [232])
	if ( ($1 == 0) ){ goto $label$139 }
	*(($28 + [236])) = $1
	CALL $297($1)
	
.LABEL $label$139
	$1 = *($28 + [284])
	if ( ($1 == 0) ){ goto $label$140 }
	*(($28 + [288])) = $1
	CALL $297($1)
	
.LABEL $label$140
	$1 = *($28 + [272])
	if ( ($1 == 0) ){ goto $label$141 }
	*(($28 + [276])) = $1
	CALL $297($1)
	
.LABEL $label$141
	*([0] + [4]) = ($28 + [320])
	return (unreachable)
	
.LABEL $label$48
	CALL $299(($28 + [200]))
	
.LABEL $label$47
	CALL $299(($28 + [184]))
	(unreachable)
}

void .FUNC _ZN5eosio7chintai13take_snapshotERKNS_5token13transfer_argsE (int_32 $0, int_32 $1)
{
}

void .FUNC $216 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL strlen($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($3 + $4)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$5 = *($1)
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $295($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : ($5 & [1]) ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $304($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $299($0)
}

int_32 .FUNC $211 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1397703940
	CALL eosio_assert([1], [16])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [40]))) = (int_64)1397703940
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [16])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [80])
	return $0
}

int_32 .FUNC $210 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1216])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $295([64])
	$4 = CALL $211($6)
	*($6 + [48]) = $0
	CALL $212(($8 + [32]), $4)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $213(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $297($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $213 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $295(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $297($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $297($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN5eosio7chintai16make_lease_orderERNS_5orderE (int_32 $0, int_32 $1)
{
	float_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	float_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	float_64 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_64 $27
	int_64 $28
	int_64 $29
	int_64 $30
	int_64 $31
	int_32 $32
	int_32 $33
	$33 = (*([0] + [4]) - [352])
	*([0] + [4]) = $33
	*($33 + [200]) = (int_64)-1
	*($33 + [208]) = [0]
	$27 = *($0)
	*($33 + [184]) = $27
	$29 = *($1 + [80])
	*($33 + [192]) = $29
	*(($33 + [212])) = [0]
	*((($33 + [184]) + [32])) = [0]
	*((($33 + [184]) + [38])) = [0]
	*($33 + [220]) = [0]
	*((($33 + [144]) + [32])) = [0]
	*((($33 + [144]) + [38])) = [0]
	*($33 + [152]) = $29
	*($33 + [144]) = $27
	*($33 + [160]) = (int_64)-1
	*($33 + [168]) = (int_64)0
	*($33 + [180]) = [0]
	*($33 + [136]) = ($33 + [184])
	$27 = *($1 + [56])
	$29 = *($1 + [24])
	*($33 + [224]) = (int_64)-4503599627370497
	CALL $224(($33 + [128]), ($33 + [136]), ($33 + [224]))
	CALL prints([2816])
	$32 = *($33 + [132])
	if ( ($32 == 0) ){ goto $label$1 }
	$2 = ((float_64)(CASTING float_64)(int_64 $27) / (float_64)(CASTING float_64)(int_64 $29))
	$13 = *($32 + [80])
	if ( (((float_64)$13 > (float_64)$2) | (((float_64)$13 != (float_64)$13) | ((float_64)$2 != (float_64)$2))) ){ goto $label$2 }
	$8 = ($1 + [40])
	$5 = ($0 + [412])
	$4 = ($0 + [40])
	$3 = ($0 + [16])
	$9 = (($33 + [224]) + [90])
	$7 = (($33 + [72]) + [16])
	$6 = (($33 + [72]) + [8])
	$32 = *($33 + [132])
	$23 = ($0 + [44])
	$24 = ($0 + [24])
	$25 = ($0 + [48])
	$14 = ($1 + [128])
	$15 = ($1 + [96])
	$16 = ($1 + [104])
	$19 = ($0 + [420])
	$20 = ($0 + [416])
	$21 = ($1 + [56])
	
.LOOP $label$8:
	$27 = *($8)
	$29 = *($32 + [64])
	if ( (int_64)($29 == 0) ){ goto $label$12 }
	if ( ((int_64)$27 == (int_64)0) ){ goto $label$12 }
	$12 = ($1 + [80])
	if ( ((int_64)*($12) != (int_64)*($32 + [32])) ){ goto $label$13 }
	if ( (*($32 + [88]) & [255]) ){ goto $label$9 }
	
.LABEL $label$13
	if ( ($32 == 0) ){ goto $label$11 }
	CALL $226(($33 + [128]))
	$32 = *($33 + [132])
	if ( $32 ){ goto $label$10 }
	goto $label$2 
	
.LABEL $label$12
	if ( ((int_64)$27 == (int_64)0) ){ goto $label$7 }
	if ( ((int_64)$29 != (int_64)0) ){ goto $label$11 }
	$27 = *($32)
	$10 = *($4)
	$26 = *($23)
	if ( ((int_32)$26 == (int_32)$10) ){ goto $label$14 }
	$32 = ($26 + [-24])
	$11 = ([0] - $10)
	
.LOOP $label$15:
	if ( ((int_64)*(*($32)) == (int_64)$27) ){ goto $label$14 }
	$26 = $32
	$12 = ($32 + [-24])
	$32 = $12
	if ( ((int_32)($12 + $11) != (int_32)[-24]) ){ goto $label$15 }
	
.LABEL $label$14
	if ( ((int_32)$26 == (int_32)$10) ){ goto $label$19 }
	$32 = *(($26 + [-24]))
	CALL eosio_assert(((int_32)*($32 + [64]) == (int_32)$3), [752])
	if ( $32 ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$19
	$32 = CALL db_find_i64(*($3), *($24), (int_64)6787602122293641216, $27)
	if ( ((int_32)$32 < (int_32)[0]) ){ goto $label$18 }
	CALL eosio_assert(((int_32)*(CALL $119($3, $32) + [64]) == (int_32)$3), [752])
	$32 = *($33 + [132])
	if ( $32 ){ goto $label$16 }
	goto $label$11 
	
.LABEL $label$18
	$27 = *(($1 + [8]))
	*($33 + [328]) = ($33 + [128])
	*($33 + [72]) = $27
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$15()), [912])
	*($33 + [224]) = $3
	*((($33 + [224]) + [8])) = ($33 + [72])
	*($33 + [228]) = ($33 + [328])
	*(($12 = CALL $295([80])) + [24]) = (int_64)1397703940
	*($12 + [16]) = (int_64)0
	CALL eosio_assert([1], [16])
	$27 = (int_64)5459781
	$32 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$26 = [1]
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$26 = [0]
	
.LABEL $label$20
	CALL eosio_assert($26, [80])
	*($12 + [56]) = [0]
	*($12 + [48 align=4]) = (int_64)0
	*($12 + [64]) = $3
	CALL $225(($33 + [224]), $12)
	*($33 + [336]) = $12
	$27 = *($12)
	*($33 + [224]) = $27
	$26 = *($12 + [68])
	*($33 + [56]) = $26
	$32 = *($23)
	if ( ((uint_32)$32 >= (uint_32)*($25)) ){ goto $label$26 }
	*($32 + [8]) = $27
	*($32 + [16]) = $26
	*($33 + [336]) = [0]
	*($32) = $12
	*($23) = ($32 + [24])
	goto $label$25 
	
.LABEL $label$26
	CALL $131($4, ($33 + [336]), ($33 + [224]), ($33 + [56]))
	
.LABEL $label$25
	$32 = *($33 + [336])
	*($33 + [336]) = [0]
	if ( ($32 == 0) ){ goto $label$17 }
	$12 = *($32 + [48])
	if ( ($12 == 0) ){ goto $label$27 }
	*(($32 + [52])) = $12
	CALL $297($12)
	
.LABEL $label$27
	CALL $297($32)
	
.LABEL $label$17
	$32 = *($33 + [132])
	if ( ($32 == 0) ){ goto $label$11 }
	
.LABEL $label$16
	$27 = *($33 + [128])
	*($33 + [224]) = $27
	$32 = (CASTING uint_32)(uint_64 (uint_64)$27 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$32) != (int_32)[0]), [1280])
	CALL $226(($33 + [224]))
	CALL $149(*($33 + [136]), $32)
	$27 = *($33 + [224])
	*($33 + [128]) = $27
	$32 = (CASTING uint_32)(uint_64 (uint_64)$27 >> (uint_64)(int_64)32))
	
.LABEL $label$11
	if ( ($32 == 0) ){ goto $label$2 }
	
.LABEL $label$10
	if ( ((float_64)*($32 + [80]) <= (float_64)$2) ){ goto $label$8 }
	goto $label$2 
	
.LABEL $label$9
	if ( ((int_64)$27 < (int_64)$29) ){ goto $label$6 }
	*(($26 = (($33 + [40]) + [8]))) = *(($32 + [72]))
	*($33 + [40]) = *($32 + [64])
	$27 = *($14)
	$29 = *($15)
	$28 = *($1)
	$30 = *($32 + [8])
	$31 = *($32)
	$13 = CALL pow((float_64)10, (CASTING float_64)(uint_64 *($16)))
	$17 = *($12)
	$18 = *(*($33 + [132]) + [80])
	*((($33 + [24]) + [8])) = *($26)
	*($33 + [24]) = *($33 + [40])
	CALL _ZN5eosio7chintai13fulfill_orderENS_5assetEyyyydydb($0, ($33 + [24]), $31, $28, $30, $27, ((float_64)(CASTING float_64)(int_64 $29) / (float_64)$13), $17, $18, [1])
	$31 = *($0)
	$27 = (int_64)0
	$28 = (int_64)59
	$32 = [1616]
	$30 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$27 > (uint_64)(int_64)5) ){ goto $label$33 }
	$12 = *($32)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$12 = ($12 + [165])
	goto $label$31 
	
.LABEL $label$33
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$29
	$32 = ($32 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$30 = ((int_64)$29 | (int_64)$30)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$28 }
	*(($26 = (($33 + [224]) + [8]))) = $30
	*($33 + [224]) = $31
	$27 = (int_64)0
	$28 = (int_64)59
	$32 = [2864]
	$30 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$27 > (uint_64)(int_64)10) ){ goto $label$39 }
	$12 = *($32)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$12 = ($12 + [165])
	goto $label$37 
	
.LABEL $label$39
	$29 = (int_64)0
	if ( ((int_64)$27 == (int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$35
	$32 = ($32 + [1])
	$28 = ((int_64)$28 + (int_64)-5)
	$30 = ((int_64)$29 | (int_64)$30)
	$27 = ((int_64)$27 + (int_64)1)
	if ( ((int_64)$27 != (int_64)13) ){ goto $label$34 }
	*($33 + [72]) = $30
	*($33 + [336]) = *(*($33 + [132]))
	$32 = *($20)
	if ( ((uint_32)$32 >= (uint_32)*($19)) ){ goto $label$41 }
	*($32 + [8]) = $30
	*($32) = $31
	*($32 + [16 align=4]) = (int_64)0
	*(($11 = ($32 + [24]))) = [0]
	$12 = CALL $295([16])
	*($32 + [16]) = $12
	$10 = ($12 + [16])
	*($11) = $10
	*(($12 + [8])) = *($26)
	*($12) = *($33 + [224])
	*(($32 + [20])) = $10
	*($32 + [28]) = [0]
	*(($12 = ($32 + [32]))) = [0]
	*(($32 + [36])) = [0]
	CALL $167(($32 + [28]), [8])
	$32 = *($32 + [28])
	CALL eosio_assert(((int_32)(*($12) - $32) > (int_32)[7]), [1200])
	CALL memcpy($32, ($33 + [336]), [8])
	*($20) = (*($20) + [40])
	goto $label$40 
	
.LABEL $label$41
	CALL $227($5, ($33 + [224]), $0, ($33 + [72]), ($33 + [336]))
	
.LABEL $label$40
	$32 = *($33 + [132])
	$13 = (float_64)
	if ( (((float_64)$13(((float_64)(CASTING float_64)(int_64 *($21)) / (float_64)(CASTING float_64)(int_64 *(($1 + [24])))) - *($32 + [80]))) <= (float_64)(float_64)0) | ((float_64)$13 != (float_64)$13)) ){ goto $label$42 }
	$17 = (Rounds 0)(((float_64)$13 * (float_64)(CASTING float_64)(int_64 *($32 + [64]))))
	CALL eosio_assert((uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [16])
	$27 = (int_64)5459781
	$32 = [0]
	
.LOOP $label$45:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$44 }
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$46 }
	
.LOOP $label$47:
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$44 }
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$47 }
	
.LABEL $label$46
	$12 = [1]
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	$12 = [0]
	
.LABEL $label$43
	CALL eosio_assert($12, [80])
	$31 = *($0)
	$27 = (int_64)0
	$28 = (int_64)59
	$32 = [1616]
	$30 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$27 > (uint_64)(int_64)5) ){ goto $label$53 }
	$12 = *($32)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$12 = ($12 + [165])
	goto $label$51 
	
.LABEL $label$53
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$49
	$32 = ($32 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$30 = ((int_64)$29 | (int_64)$30)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$48 }
	*((($33 + [336]) + [8])) = $30
	*($33 + [336]) = $31
	$27 = (int_64)0
	$28 = (int_64)59
	$32 = [1536]
	$30 = (int_64)0
	
.LOOP $label$54:
	if ( ((uint_64)$27 > (uint_64)(int_64)10) ){ goto $label$59 }
	$12 = *($32)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$58 }
	$12 = ($12 + [165])
	goto $label$57 
	
.LABEL $label$59
	$29 = (int_64)0
	if ( ((int_64)$27 == (int_64)11) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$58
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$57
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$56
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$55
	$32 = ($32 + [1])
	$28 = ((int_64)$28 + (int_64)-5)
	$30 = ((int_64)$29 | (int_64)$30)
	$27 = ((int_64)$27 + (int_64)1)
	if ( ((int_64)$27 != (int_64)13) ){ goto $label$54 }
	$27 = (int_64)0
	$28 = (int_64)59
	$32 = [1936]
	$31 = (int_64)0
	
.LOOP $label$60:
	if ( ((uint_64)$27 > (uint_64)(int_64)7) ){ goto $label$65 }
	$12 = *($32)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$64 }
	$12 = ($12 + [165])
	goto $label$63 
	
.LABEL $label$65
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$64
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$63
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$62
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$61
	$32 = ($32 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$31 = ((int_64)$29 | (int_64)$31)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$60 }
	$27 = *(($1 + [8]))
	CALL _ZNSt3__19to_stringEy(($33 + [56]), *($14))
	$32 = CALL $306(($33 + [56]), [0], [2880])
	$29 = *($32)
	*($32) = (int_64)0
	$12 = *($32 + [8])
	*($32 + [8]) = [0]
	*($26) = $27
	*((($33 + [224]) + [16])) = $17
	*((($33 + [224]) + [24])) = (int_64)1397703940
	*(($32 = (($33 + [224]) + [32]))) = $29
	*($33 + [224]) = *($0)
	*(($11 = (($33 + [224]) + [40]))) = $12
	$12 = CALL $204(($33 + [72]), ($33 + [336]), $30, $31, ($33 + [224]))
	if ( ((*($32) & [1]) == 0) ){ goto $label$66 }
	CALL $297(*($11))
	
.LABEL $label$66
	if ( ((*($33 + [56]) & [1]) == 0) ){ goto $label$67 }
	CALL $297(*((($33 + [56]) + [8])))
	
.LABEL $label$67
	CALL $185(($33 + [224]), $12)
	$32 = *($33 + [224])
	CALL send_inline($32, (*($33 + [228]) - $32))
	$32 = *($33 + [224])
	if ( ($32 == 0) ){ goto $label$68 }
	*($33 + [228]) = $32
	CALL $297($32)
	
.LABEL $label$68
	$32 = *((($33 + [72]) + [28]))
	if ( ($32 == 0) ){ goto $label$69 }
	*((($33 + [72]) + [32])) = $32
	CALL $297($32)
	
.LABEL $label$69
	$32 = *($7)
	if ( ($32 == 0) ){ goto $label$70 }
	*((($33 + [72]) + [20])) = $32
	CALL $297($32)
	
.LABEL $label$70
	$32 = *($33 + [132])
	
.LABEL $label$42
	$29 = (int_64)
	CALL eosio_assert((uint_64)(((int_64)$29(*($8) - *($32 + [64]))) + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [16])
	$27 = (int_64)5459781
	$32 = [0]
	
.LOOP $label$73:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$72 }
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$74 }
	
.LOOP $label$75:
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$72 }
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$75 }
	
.LABEL $label$74
	$12 = [1]
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$73 }
	goto $label$71 
	
.LABEL $label$72
	$12 = [0]
	
.LABEL $label$71
	CALL eosio_assert($12, [80])
	*(($1 + [48])) = (int_64)1397703940
	*($8) = $29
	$22 = ($1 + [8])
	$27 = *($22)
	*($33 + [328]) = ($33 + [128])
	*($33 + [72]) = $27
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$15()), [912])
	*($33 + [224]) = $3
	*($26) = ($33 + [72])
	*($33 + [228]) = ($33 + [328])
	*(($12 = CALL $295([80])) + [24]) = (int_64)1397703940
	*($12 + [16]) = (int_64)0
	CALL eosio_assert([1], [16])
	$27 = (int_64)5459781
	$32 = [0]
	
.LOOP $label$78:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$77 }
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$79 }
	
.LOOP $label$80:
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$77 }
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$80 }
	
.LABEL $label$79
	$26 = [1]
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$78 }
	goto $label$76 
	
.LABEL $label$77
	$26 = [0]
	
.LABEL $label$76
	CALL eosio_assert($26, [80])
	*($12 + [56]) = [0]
	*($12 + [48 align=4]) = (int_64)0
	*($12 + [64]) = $3
	CALL $229(($33 + [224]), $12)
	*($33 + [336]) = $12
	$27 = *($12)
	*($33 + [224]) = $27
	$26 = *($12 + [68])
	*($33 + [56]) = $26
	$32 = *($23)
	if ( ((uint_32)$32 >= (uint_32)*($25)) ){ goto $label$82 }
	*($32 + [8]) = $27
	*($32 + [16]) = $26
	*($33 + [336]) = [0]
	*($32) = $12
	*($23) = ($32 + [24])
	goto $label$81 
	
.LABEL $label$82
	CALL $131($4, ($33 + [336]), ($33 + [224]), ($33 + [56]))
	
.LABEL $label$81
	$32 = *($33 + [336])
	*($33 + [336]) = [0]
	if ( ($32 == 0) ){ goto $label$83 }
	$12 = *($32 + [48])
	if ( ($12 == 0) ){ goto $label$84 }
	*(($32 + [52])) = $12
	CALL $297($12)
	
.LABEL $label$84
	CALL $297($32)
	
.LABEL $label$83
	if ( (*($33 + [132]) == 0) ){ goto $label$85 }
	$27 = *($33 + [128])
	*($33 + [224]) = $27
	$32 = (CASTING uint_32)(uint_64 (uint_64)$27 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$32) != (int_32)[0]), [1280])
	CALL $226(($33 + [224]))
	CALL $149(*($33 + [136]), $32)
	*($33 + [128]) = *($33 + [224])
	
.LABEL $label$85
	if ( (int_64)(*($8) == 0) ){ goto $label$5 }
	$27 = *($1)
	$10 = *((($33 + [144]) + [24]))
	$26 = *((($33 + [144]) + [28]))
	if ( ((int_32)$26 == (int_32)$10) ){ goto $label$86 }
	$32 = ($26 + [-24])
	$11 = ([0] - $10)
	
.LOOP $label$87:
	if ( ((int_64)*(*($32)) == (int_64)$27) ){ goto $label$86 }
	$26 = $32
	$12 = ($32 + [-24])
	$32 = $12
	if ( ((int_32)($12 + $11) != (int_32)[-24]) ){ goto $label$87 }
	
.LABEL $label$86
	if ( ((int_32)$26 == (int_32)$10) ){ goto $label$89 }
	$32 = *(($26 + [-24]))
	CALL eosio_assert(((int_32)*($32 + [96]) == (int_32)($33 + [144])), [752])
	goto $label$88 
	
.LABEL $label$89
	$32 = [0]
	$12 = CALL db_find_i64(*($33 + [144]), *((($33 + [144]) + [8])), (int_64)-3146771307685740544, $27)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$88 }
	$32 = CALL $138(($33 + [144]), $12)
	CALL eosio_assert(((int_32)*($32 + [96]) == (int_32)($33 + [144])), [752])
	
.LABEL $label$88
	$27 = *($22)
	CALL eosio_assert(((int_32)$32 != (int_32)[0]), [976])
	CALL eosio_assert(((int_32)*($32 + [96]) == (int_32)($33 + [144])), [1024])
	CALL eosio_assert(((int_64)*($33 + [144]) == (int_64)CALL $fimport$15()), [1072])
	$12 = ($32 + [32])
	*($6) = *($12)
	$26 = ($32 + [40])
	*($7) = *($26)
	$11 = ($32 + [64])
	*($33 + [72]) = *($11)
	$29 = *($32)
	$28 = *(($8 + [8]))
	*(($10 = (($33 + [336]) + [8]))) = $28
	$30 = *($8)
	*($32 + [48]) = $30
	*(($32 + [56])) = $28
	*($33 + [336]) = $30
	CALL eosio_assert([1], [1136])
	*($10) = $9
	*($33 + [340]) = ($33 + [224])
	*($33 + [336]) = ($33 + [224])
	CALL $117(($33 + [336]), $32)
	CALL db_update_i64(*($32 + [100]), $27, ($33 + [224]), [90])
	$10 = (($33 + [144]) + [16])
	if ( (uint_64)($29 <= *($10)) ){ goto $label$90 }
	*($10) = ( (int_64)-2 ? ((int_64)$29 + (int_64)1) : ((uint_64)$29 > (uint_64)(int_64)-3) )
	
.LABEL $label$90
	*($33 + [56]) = *($11)
	if ( (CALL memcmp(($33 + [72]), ($33 + [56]), [8]) == 0) ){ goto $label$91 }
	$10 = ($32 + [104])
	$11 = *($10)
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$92 }
	$11 = CALL db_idx_double_find_primary(*($33 + [144]), *((($33 + [144]) + [8])), (int_64)-3146771307685740544, ($33 + [328]), $29)
	*($10) = $11
	
.LABEL $label$92
	CALL db_idx_double_update($11, $27, ($33 + [56]))
	
.LABEL $label$91
	*($33 + [56]) = *($12)
	if ( (CALL memcmp($6, ($33 + [56]), [8]) == 0) ){ goto $label$93 }
	$11 = ($32 + [108])
	$12 = *($11)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$94 }
	$12 = CALL db_idx64_find_primary(*($33 + [144]), *((($33 + [144]) + [8])), (int_64)-3146771307685740543, ($33 + [328]), $29)
	*($11) = $12
	
.LABEL $label$94
	CALL db_idx64_update($12, $27, ($33 + [56]))
	
.LABEL $label$93
	*($33 + [56]) = *($26)
	if ( (CALL memcmp($7, ($33 + [56]), [8]) == 0) ){ goto $label$95 }
	$12 = ($32 + [112])
	$32 = *($12)
	if ( ((int_32)$32 > (int_32)[-1]) ){ goto $label$96 }
	$32 = CALL db_idx64_find_primary(*($33 + [144]), *((($33 + [144]) + [8])), (int_64)-3146771307685740542, ($33 + [328]), $29)
	*($12) = $32
	
.LABEL $label$96
	CALL db_idx64_update($32, $27, ($33 + [56]))
	
.LABEL $label$95
	$32 = *($33 + [132])
	if ( ($32 == 0) ){ goto $label$2 }
	if ( ((float_64)*($32 + [80]) <= (float_64)$2) ){ goto $label$8 }
	goto $label$2 
	
.LABEL $label$7
	$27 = *($1)
	$8 = *(($0 + [80]))
	$26 = *(($0 + [84]))
	if ( ((int_32)$26 == (int_32)$8) ){ goto $label$97 }
	$32 = ($26 + [-24])
	$11 = ([0] - $8)
	
.LOOP $label$98:
	if ( ((int_64)*(*($32)) == (int_64)$27) ){ goto $label$97 }
	$26 = $32
	$12 = ($32 + [-24])
	$32 = $12
	if ( ((int_32)($12 + $11) != (int_32)[-24]) ){ goto $label$98 }
	
.LABEL $label$97
	$11 = ($0 + [56])
	if ( ((int_32)$26 == (int_32)$8) ){ goto $label$101 }
	$32 = *(($26 + [-24]))
	CALL eosio_assert(((int_32)*($32 + [64]) == (int_32)$11), [752])
	if ( $32 ){ goto $label$99 }
	goto $label$100 
	
.LABEL $label$101
	$32 = CALL db_find_i64(*(($0 + [56])), *(($0 + [64])), (int_64)6653061481472458752, $27)
	if ( ((int_32)$32 < (int_32)[0]) ){ goto $label$100 }
	CALL eosio_assert(((int_32)*(CALL $115($11, $32) + [64]) == (int_32)$11), [752])
	goto $label$99 
	
.LABEL $label$100
	$29 = *(($1 + [8]))
	CALL eosio_assert(((int_64)*($11) == (int_64)CALL $fimport$15()), [912])
	*(($12 = CALL $295([80])) + [24]) = (int_64)1397703940
	*($12 + [16]) = (int_64)0
	CALL eosio_assert([1], [16])
	$8 = ($12 + [16])
	$27 = (int_64)5459781
	$32 = [0]
	
.LOOP $label$104:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$103 }
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$105 }
	
.LOOP $label$106:
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$103 }
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$106 }
	
.LABEL $label$105
	$26 = [1]
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$103
	$26 = [0]
	
.LABEL $label$102
	CALL eosio_assert($26, [80])
	*($12 + [64]) = $11
	*($12) = *($1)
	*($12 + [8]) = *(($1 + [8]))
	$27 = *(($1 + [32]))
	*(($8 + [8])) = $27
	*((($33 + [224]) + [8])) = $27
	$27 = *($1 + [24])
	*($8) = $27
	*($33 + [224]) = $27
	*($12 + [32]) = *(($1 + [80]))
	*($12 + [40]) = *($1 + [72])
	*($12 + [56]) = *(($1 + [128]))
	*($33 + [80]) = (($33 + [224]) + [57])
	*($33 + [76]) = ($33 + [224])
	*($33 + [72]) = ($33 + [224])
	CALL $221(($33 + [72]), $12)
	$27 = *($12)
	$32 = ($0 + [64])
	*($12 + [68]) = CALL db_store_i64(*($32), (int_64)6653061481472458752, $29, $27, ($33 + [224]), [57])
	$26 = ($0 + [72])
	if ( (uint_64)($27 <= *($26)) ){ goto $label$107 }
	*($26) = ( (int_64)-2 ? ((int_64)$27 + (int_64)1) : ((uint_64)$27 > (uint_64)(int_64)-3) )
	
.LABEL $label$107
	$27 = *($32)
	$28 = *($12)
	*($33 + [336]) = *(($12 + [32]))
	*($12 + [72]) = CALL db_idx64_store($27, (int_64)6653061481472458752, $29, $28, ($33 + [336]))
	$27 = *($32)
	$28 = *($12)
	*($33 + [336]) = *(($12 + [40]))
	*($12 + [76]) = CALL db_idx64_store($27, (int_64)6653061481472458753, $29, $28, ($33 + [336]))
	*($33 + [72]) = $12
	$27 = *($12)
	*($33 + [224]) = $27
	$26 = *(($12 + [68]))
	*($33 + [336]) = $26
	$11 = ($0 + [84])
	$32 = *($11)
	if ( ((uint_32)$32 >= (uint_32)*(($0 + [88]))) ){ goto $label$109 }
	*($32 + [8]) = $27
	*($32 + [16]) = $26
	*($33 + [72]) = [0]
	*($32) = $12
	*($11) = ($32 + [24])
	goto $label$108 
	
.LABEL $label$109
	CALL $135(($0 + [80]), ($33 + [72]), ($33 + [224]), ($33 + [336]))
	
.LABEL $label$108
	$32 = *($33 + [72])
	*($33 + [72]) = [0]
	if ( ($32 == 0) ){ goto $label$99 }
	CALL $297($32)
	
.LABEL $label$99
	$27 = *($1)
	$8 = *(($33 + [168]))
	$26 = *(($33 + [172]))
	if ( ((int_32)$26 == (int_32)$8) ){ goto $label$110 }
	$32 = ($26 + [-24])
	$11 = ([0] - $8)
	
.LOOP $label$111:
	if ( ((int_64)*(*($32)) == (int_64)$27) ){ goto $label$110 }
	$26 = $32
	$12 = ($32 + [-24])
	$32 = $12
	if ( ((int_32)($12 + $11) != (int_32)[-24]) ){ goto $label$111 }
	
.LABEL $label$110
	if ( ((int_32)$26 == (int_32)$8) ){ goto $label$113 }
	$32 = *(($26 + [-24]))
	CALL eosio_assert(((int_32)*($32 + [96]) == (int_32)($33 + [144])), [752])
	if ( $32 ){ goto $label$112 }
	goto $label$2 
	
.LABEL $label$113
	$32 = CALL db_find_i64(*($33 + [144]), *(($33 + [152])), (int_64)-3146771307685740544, $27)
	if ( ((int_32)$32 < (int_32)[0]) ){ goto $label$2 }
	$32 = CALL $138(($33 + [144]), $32)
	CALL eosio_assert(((int_32)*($32 + [96]) == (int_32)($33 + [144])), [752])
	
.LABEL $label$112
	CALL eosio_assert([1], [1280])
	CALL eosio_assert([1], [1328])
	$12 = CALL db_next_i64(*($32 + [100]), ($33 + [224]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$114 }
	CALL $138(($33 + [144]), $12)
	
.LABEL $label$114
	CALL $139(($33 + [144]), $32)
	goto $label$2 
	
.LABEL $label$6
	*(($12 = (($33 + [112]) + [8]))) = *(($8 + [8]))
	*($33 + [112]) = *($8)
	$27 = *(($1 + [128]))
	$29 = *(($1 + [96]))
	$28 = *($1)
	$30 = *($32 + [8])
	$31 = *($32)
	$2 = CALL pow((float_64)10, (CASTING float_64)(uint_64 *(($1 + [104]))))
	$17 = *(($1 + [80]))
	$13 = *(*($33 + [132]) + [80])
	*((($33 + [8]) + [8])) = *($12)
	*($33 + [8]) = *($33 + [112])
	CALL _ZN5eosio7chintai13fulfill_orderENS_5assetEyyyydydb($0, ($33 + [8]), $31, $28, $30, $27, ((float_64)(CASTING float_64)(int_64 $29) / (float_64)$2), $17, $13, [1])
	$31 = *($0)
	$27 = (int_64)0
	$28 = (int_64)59
	$32 = [1616]
	$30 = (int_64)0
	
.LOOP $label$115:
	if ( ((uint_64)$27 > (uint_64)(int_64)5) ){ goto $label$120 }
	$12 = *($32)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$119 }
	$12 = ($12 + [165])
	goto $label$118 
	
.LABEL $label$120
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$117 }
	goto $label$116 
	
.LABEL $label$119
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$118
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$117
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$116
	$32 = ($32 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$30 = ((int_64)$29 | (int_64)$30)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$115 }
	*($33 + [232]) = $30
	*($33 + [224]) = $31
	$27 = (int_64)0
	$28 = (int_64)59
	$32 = [2864]
	$30 = (int_64)0
	
.LOOP $label$121:
	if ( ((uint_64)$27 > (uint_64)(int_64)10) ){ goto $label$126 }
	$12 = *($32)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$125 }
	$12 = ($12 + [165])
	goto $label$124 
	
.LABEL $label$126
	$29 = (int_64)0
	if ( ((int_64)$27 == (int_64)11) ){ goto $label$123 }
	goto $label$122 
	
.LABEL $label$125
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$124
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$123
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$122
	$32 = ($32 + [1])
	$28 = ((int_64)$28 + (int_64)-5)
	$30 = ((int_64)$29 | (int_64)$30)
	$27 = ((int_64)$27 + (int_64)1)
	if ( ((int_64)$27 != (int_64)13) ){ goto $label$121 }
	*($33 + [72]) = $30
	*($33 + [336]) = *($1)
	$26 = ($0 + [416])
	$32 = *($26)
	if ( ((uint_32)$32 >= (uint_32)*(($0 + [420]))) ){ goto $label$4 }
	*($32 + [8]) = $30
	*($32) = $31
	*($32 + [16 align=4]) = (int_64)0
	*(($11 = ($32 + [24]))) = [0]
	$12 = CALL $295([16])
	*($32 + [16]) = $12
	$8 = ($12 + [16])
	*($11) = $8
	*(($12 + [8])) = *((($33 + [224]) + [8]))
	*($12) = *($33 + [224])
	*(($32 + [20])) = $8
	*($32 + [28]) = [0]
	*(($12 = ($32 + [32]))) = [0]
	*(($32 + [36])) = [0]
	CALL $167(($32 + [28]), [8])
	$32 = *($32 + [28])
	CALL eosio_assert(((int_32)(*($12) - $32) > (int_32)[7]), [1200])
	CALL memcpy($32, ($33 + [336]), [8])
	*($26) = (*($26) + [40])
	goto $label$3 
	
.LABEL $label$5
	CALL _ZN5eosio7chintai20transfer_lease_orderERNS_5orderE($0, $1)
	goto $label$2 
	
.LABEL $label$4
	CALL $227($5, ($33 + [224]), $0, ($33 + [72]), ($33 + [336]))
	
.LABEL $label$3
	$32 = *($33 + [132])
	$2 = (float_64)
	if ( (((float_64)$2(((float_64)(CASTING float_64)(int_64 *(($1 + [56]))) / (float_64)(CASTING float_64)(int_64 *(($1 + [24])))) - *($32 + [80]))) > (float_64)(float_64)0) == 0) ){ goto $label$127 }
	$17 = (Rounds 0)(((float_64)$2 * (float_64)(CASTING float_64)(int_64 *(($1 + [40])))))
	CALL eosio_assert((uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [16])
	$27 = (int_64)5459781
	$32 = [0]
	
.LOOP $label$130:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$129 }
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$131 }
	
.LOOP $label$132:
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$129 }
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$132 }
	
.LABEL $label$131
	$12 = [1]
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$130 }
	goto $label$128 
	
.LABEL $label$129
	$12 = [0]
	
.LABEL $label$128
	CALL eosio_assert($12, [80])
	$31 = *($0)
	$27 = (int_64)0
	$28 = (int_64)59
	$32 = [1616]
	$30 = (int_64)0
	
.LOOP $label$133:
	if ( ((uint_64)$27 > (uint_64)(int_64)5) ){ goto $label$138 }
	$12 = *($32)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$137 }
	$12 = ($12 + [165])
	goto $label$136 
	
.LABEL $label$138
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$135 }
	goto $label$134 
	
.LABEL $label$137
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$136
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$135
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$134
	$32 = ($32 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$30 = ((int_64)$29 | (int_64)$30)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$133 }
	*($33 + [344]) = $30
	*($33 + [336]) = $31
	$27 = (int_64)0
	$28 = (int_64)59
	$32 = [1536]
	$30 = (int_64)0
	
.LOOP $label$139:
	if ( ((uint_64)$27 > (uint_64)(int_64)10) ){ goto $label$144 }
	$12 = *($32)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$143 }
	$12 = ($12 + [165])
	goto $label$142 
	
.LABEL $label$144
	$29 = (int_64)0
	if ( ((int_64)$27 == (int_64)11) ){ goto $label$141 }
	goto $label$140 
	
.LABEL $label$143
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$142
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$141
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$140
	$32 = ($32 + [1])
	$28 = ((int_64)$28 + (int_64)-5)
	$30 = ((int_64)$29 | (int_64)$30)
	$27 = ((int_64)$27 + (int_64)1)
	if ( ((int_64)$27 != (int_64)13) ){ goto $label$139 }
	$27 = (int_64)0
	$28 = (int_64)59
	$32 = [1936]
	$31 = (int_64)0
	
.LOOP $label$145:
	if ( ((uint_64)$27 > (uint_64)(int_64)7) ){ goto $label$150 }
	$12 = *($32)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$149 }
	$12 = ($12 + [165])
	goto $label$148 
	
.LABEL $label$150
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$147 }
	goto $label$146 
	
.LABEL $label$149
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$148
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$147
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$146
	$32 = ($32 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$31 = ((int_64)$29 | (int_64)$31)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$145 }
	$27 = *(($1 + [8]))
	CALL _ZNSt3__19to_stringEy(($33 + [56]), *(($1 + [128])))
	$32 = CALL $306(($33 + [56]), [0], [2880])
	$29 = *($32)
	*($32) = (int_64)0
	$12 = *($32 + [8])
	*($32 + [8]) = [0]
	*(($33 + [248])) = (int_64)1397703940
	*($33 + [232]) = $27
	*($33 + [240]) = $17
	*($33 + [256]) = $29
	*($33 + [224]) = *($0)
	*(($26 = ($33 + [264]))) = $12
	$32 = CALL $204(($33 + [72]), ($33 + [336]), $30, $31, ($33 + [224]))
	if ( ((*($33 + [256]) & [1]) == 0) ){ goto $label$151 }
	CALL $297(*($26))
	
.LABEL $label$151
	if ( ((*($33 + [56]) & [1]) == 0) ){ goto $label$152 }
	CALL $297(*($33 + [64]))
	
.LABEL $label$152
	CALL $185(($33 + [224]), $32)
	$12 = *($33 + [224])
	CALL send_inline($12, (*($33 + [228]) - $12))
	$12 = *($33 + [224])
	if ( ($12 == 0) ){ goto $label$153 }
	*($33 + [228]) = $12
	CALL $297($12)
	
.LABEL $label$153
	$12 = *($32 + [28])
	if ( ($12 == 0) ){ goto $label$154 }
	*(($32 + [32])) = $12
	CALL $297($12)
	
.LABEL $label$154
	$12 = *($32 + [16])
	if ( ($12 == 0) ){ goto $label$155 }
	*(($32 + [20])) = $12
	CALL $297($12)
	
.LABEL $label$155
	$32 = *($33 + [132])
	
.LABEL $label$127
	$27 = *(($1 + [8]))
	*($33 + [228]) = $1
	*($33 + [224]) = ($33 + [128])
	CALL eosio_assert(((int_32)$32 != (int_32)[0]), [976])
	CALL $228(*($33 + [136]), $32, $27, ($33 + [224]))
	CALL _ZN5eosio7chintai20transfer_lease_orderERNS_5orderE($0, $1)
	CALL eosio_assert([1], [16])
	$27 = (int_64)5459781
	$32 = [0]
	
.LOOP $label$158:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$157 }
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$159 }
	
.LOOP $label$160:
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$157 }
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$160 }
	
.LABEL $label$159
	$12 = [1]
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$158 }
	goto $label$156 
	
.LABEL $label$157
	$12 = [0]
	
.LABEL $label$156
	CALL eosio_assert($12, [80])
	*(($1 + [48])) = (int_64)1397703940
	*(($1 + [40])) = (int_64)0
	
.LABEL $label$2
	*(($0 + [396])) = ((int_64)*(($1 + [80])) + (int_64)518401)
	
.LABEL $label$1
	if ( ((int_32)*(($0 + [292])) == (int_32)*(($0 + [296]))) ){ goto $label$161 }
	*($33 + [232]) = (int_64)0
	*($33 + [224]) = *($1)
	$27 = *($0)
	CALL $170(($33 + [72]), ($0 + [256]))
	$32 = *($33 + [72])
	CALL send_deferred(($33 + [224]), $27, $32, (*($33 + [76]) - $32), [0])
	$32 = *($33 + [72])
	if ( ($32 == 0) ){ goto $label$161 }
	*($33 + [76]) = $32
	CALL $297($32)
	
.LABEL $label$161
	if ( ((int_32)*(($0 + [352])) == (int_32)*(($0 + [356]))) ){ goto $label$162 }
	*($33 + [232]) = (int_64)0
	*($33 + [224]) = ((int_64)*($1) + (int_64)1)
	$27 = *($0)
	CALL $170(($33 + [72]), ($0 + [316]))
	$32 = *($33 + [72])
	CALL send_deferred(($33 + [224]), $27, $32, (*($33 + [76]) - $32), [0])
	$32 = *($33 + [72])
	if ( ($32 == 0) ){ goto $label$162 }
	*($33 + [76]) = $32
	CALL $297($32)
	
.LABEL $label$162
	if ( ((int_32)*(($0 + [412])) == (int_32)*(($0 + [416]))) ){ goto $label$163 }
	*($33 + [232]) = (int_64)0
	*($33 + [224]) = ((int_64)*($1) + (int_64)2)
	$27 = *($0)
	CALL $170(($33 + [72]), ($0 + [376]))
	$32 = *($33 + [72])
	CALL send_deferred(($33 + [224]), $27, $32, (*($33 + [76]) - $32), [0])
	$32 = *($33 + [72])
	if ( ($32 == 0) ){ goto $label$163 }
	*($33 + [76]) = $32
	CALL $297($32)
	
.LABEL $label$163
	$0 = *($33 + [168])
	if ( ($0 == 0) ){ goto $label$164 }
	$26 = ($33 + [172])
	$32 = *($26)
	if ( ((int_32)$32 == (int_32)$0) ){ goto $label$166 }
	
.LOOP $label$167:
	$32 = ($32 + [-24])
	$12 = *($32)
	*($32) = [0]
	if ( ($12 == 0) ){ goto $label$168 }
	CALL $297($12)
	
.LABEL $label$168
	if ( ((int_32)$0 != (int_32)$32) ){ goto $label$167 }
	$32 = *(($33 + [168]))
	goto $label$165 
	
.LABEL $label$166
	$32 = $0
	
.LABEL $label$165
	*($26) = $0
	CALL $297($32)
	
.LABEL $label$164
	$26 = *($33 + [208])
	if ( ($26 == 0) ){ goto $label$169 }
	$1 = ($33 + [212])
	$32 = *($1)
	if ( ((int_32)$32 == (int_32)$26) ){ goto $label$171 }
	
.LOOP $label$172:
	$32 = ($32 + [-24])
	$12 = *($32)
	*($32) = [0]
	if ( ($12 == 0) ){ goto $label$173 }
	$0 = *($12 + [48])
	if ( ($0 == 0) ){ goto $label$174 }
	*(($12 + [52])) = $0
	CALL $297($0)
	
.LABEL $label$174
	CALL $297($12)
	
.LABEL $label$173
	if ( ((int_32)$26 != (int_32)$32) ){ goto $label$172 }
	$32 = *(($33 + [208]))
	goto $label$170 
	
.LABEL $label$171
	$32 = $26
	
.LABEL $label$170
	*($1) = $26
	CALL $297($32)
	
.LABEL $label$169
	*([0] + [4]) = ($33 + [352])
}

void .FUNC $196 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [912])
	*(($4 = CALL $295([24])) + [8]) = $1
	*($4) = *(*($3))
	CALL eosio_assert([1], [1200])
	CALL memcpy(($7 + [16]), $4, [8])
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)-5969209044777304064, $2, (int_64)-5969209044777304064, ($7 + [16]), [8])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-5969209044777304064) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-5969209044777304063
	
.LABEL $label$1
	*($7 + [8]) = $4
	*($7 + [16]) = (int_64)-5969209044777304064
	$5 = *($4 + [12])
	*($7 + [4]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)-5969209044777304064
	*($3 + [16]) = $5
	*($7 + [8]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $182(($1 + [24]), ($7 + [8]), ($7 + [16]), ($7 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($7 + [8])
	*($7 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $297($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [32])
}

void .FUNC _ZN5eosio7chintai6uninitEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(CALL $fimport$36(*($0)), [1584])
	$4 = *(($0 + [200]))
	$6 = *(($0 + [204]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$1 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)604800) ){ goto $label$1 }
	$6 = $5
	$2 = ($5 + [-24])
	$5 = $2
	if ( ((int_32)($2 + $1) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [176])
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$5 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$1), [752])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, (int_64)604800)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $123($1, $5) + [48]) == (int_32)$1), [752])
	
.LABEL $label$4
	$3 = *(($0 + [200]))
	$6 = *(($0 + [204]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$6 }
	$5 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$7:
	if ( ((int_64)*(*($5)) == (int_64)604800) ){ goto $label$6 }
	$6 = $5
	$2 = ($5 + [-24])
	$5 = $2
	if ( ((int_32)($2 + $4) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$9 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$1), [752])
	goto $label$8 
	
.LABEL $label$9
	$5 = [0]
	$2 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, (int_64)604800)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$8 }
	$5 = CALL $123($1, $2)
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$1), [752])
	
.LABEL $label$8
	$2 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($2, [1280])
	CALL eosio_assert($2, [1328])
	$2 = CALL db_next_i64(*($5 + [52]), ($7 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$10 }
	CALL $123($1, $2)
	
.LABEL $label$10
	CALL $198($1, $5)
	
.LABEL $label$3
	$3 = *(($0 + [200]))
	$6 = *(($0 + [204]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$11 }
	$5 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$12:
	if ( ((int_64)*(*($5)) == (int_64)1209600) ){ goto $label$11 }
	$6 = $5
	$2 = ($5 + [-24])
	$5 = $2
	if ( ((int_32)($2 + $4) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$15 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$1), [752])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$5 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, (int_64)1209600)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert(((int_32)*(CALL $123($1, $5) + [48]) == (int_32)$1), [752])
	
.LABEL $label$14
	$3 = *(($0 + [200]))
	$6 = *(($0 + [204]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$16 }
	$5 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$17:
	if ( ((int_64)*(*($5)) == (int_64)1209600) ){ goto $label$16 }
	$6 = $5
	$2 = ($5 + [-24])
	$5 = $2
	if ( ((int_32)($2 + $4) != (int_32)[-24]) ){ goto $label$17 }
	
.LABEL $label$16
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$19 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$1), [752])
	goto $label$18 
	
.LABEL $label$19
	$5 = [0]
	$2 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, (int_64)1209600)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$18 }
	$5 = CALL $123($1, $2)
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$1), [752])
	
.LABEL $label$18
	$2 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($2, [1280])
	CALL eosio_assert($2, [1328])
	$2 = CALL db_next_i64(*($5 + [52]), ($7 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$20 }
	CALL $123($1, $2)
	
.LABEL $label$20
	CALL $198($1, $5)
	
.LABEL $label$13
	$3 = *(($0 + [200]))
	$6 = *(($0 + [204]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$21 }
	$5 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$22:
	if ( ((int_64)*(*($5)) == (int_64)1814400) ){ goto $label$21 }
	$6 = $5
	$2 = ($5 + [-24])
	$5 = $2
	if ( ((int_32)($2 + $4) != (int_32)[-24]) ){ goto $label$22 }
	
.LABEL $label$21
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$25 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$1), [752])
	if ( $5 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$5 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, (int_64)1814400)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$23 }
	CALL eosio_assert(((int_32)*(CALL $123($1, $5) + [48]) == (int_32)$1), [752])
	
.LABEL $label$24
	$3 = *(($0 + [200]))
	$6 = *(($0 + [204]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$26 }
	$5 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$27:
	if ( ((int_64)*(*($5)) == (int_64)1814400) ){ goto $label$26 }
	$6 = $5
	$2 = ($5 + [-24])
	$5 = $2
	if ( ((int_32)($2 + $4) != (int_32)[-24]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$29 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$1), [752])
	goto $label$28 
	
.LABEL $label$29
	$5 = [0]
	$2 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, (int_64)1814400)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$28 }
	$5 = CALL $123($1, $2)
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$1), [752])
	
.LABEL $label$28
	$2 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($2, [1280])
	CALL eosio_assert($2, [1328])
	$2 = CALL db_next_i64(*($5 + [52]), ($7 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$30 }
	CALL $123($1, $2)
	
.LABEL $label$30
	CALL $198($1, $5)
	
.LABEL $label$23
	$3 = *(($0 + [200]))
	$6 = *(($0 + [204]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$31 }
	$5 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$32:
	if ( ((int_64)*(*($5)) == (int_64)2419200) ){ goto $label$31 }
	$6 = $5
	$2 = ($5 + [-24])
	$5 = $2
	if ( ((int_32)($2 + $4) != (int_32)[-24]) ){ goto $label$32 }
	
.LABEL $label$31
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$35 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$1), [752])
	if ( $5 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	$5 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, (int_64)2419200)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$33 }
	CALL eosio_assert(((int_32)*(CALL $123($1, $5) + [48]) == (int_32)$1), [752])
	
.LABEL $label$34
	$3 = *(($0 + [200]))
	$6 = *(($0 + [204]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$36 }
	$5 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$37:
	if ( ((int_64)*(*($5)) == (int_64)2419200) ){ goto $label$36 }
	$6 = $5
	$2 = ($5 + [-24])
	$5 = $2
	if ( ((int_32)($2 + $4) != (int_32)[-24]) ){ goto $label$37 }
	
.LABEL $label$36
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$39 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$1), [752])
	goto $label$38 
	
.LABEL $label$39
	$5 = [0]
	$2 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)-7949128890230767616, (int_64)2419200)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$38 }
	$5 = CALL $123($1, $2)
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$1), [752])
	
.LABEL $label$38
	$2 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($2, [1280])
	CALL eosio_assert($2, [1328])
	$2 = CALL db_next_i64(*($5 + [52]), ($7 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$40 }
	CALL $123($1, $2)
	
.LABEL $label$40
	CALL $198($1, $5)
	
.LABEL $label$33
	$3 = *(($0 + [240]))
	$6 = *(($0 + [244]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$41 }
	$5 = ($6 + [-24])
	$1 = ([0] - $3)
	
.LOOP $label$42:
	if ( (int_64)(*(*($5)) == 0) ){ goto $label$41 }
	$6 = $5
	$2 = ($5 + [-24])
	$5 = $2
	if ( ((int_32)($2 + $1) != (int_32)[-24]) ){ goto $label$42 }
	
.LABEL $label$41
	$4 = ($0 + [216])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$45 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)$4), [752])
	if ( $5 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	$5 = CALL db_find_i64(*(($0 + [216])), *(($0 + [224])), (int_64)6761222076679323648, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$43 }
	CALL eosio_assert(((int_32)*(CALL $163($4, $5) + [16]) == (int_32)$4), [752])
	
.LABEL $label$44
	$3 = *(($0 + [240]))
	$6 = *(($0 + [244]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$46 }
	$5 = ($6 + [-24])
	$1 = ([0] - $3)
	
.LOOP $label$47:
	if ( (int_64)(*(*($5)) == 0) ){ goto $label$46 }
	$6 = $5
	$2 = ($5 + [-24])
	$5 = $2
	if ( ((int_32)($2 + $1) != (int_32)[-24]) ){ goto $label$47 }
	
.LABEL $label$46
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$49 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)$4), [752])
	goto $label$48 
	
.LABEL $label$49
	$5 = [0]
	$0 = CALL db_find_i64(*(($0 + [216])), *(($0 + [224])), (int_64)6761222076679323648, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$48 }
	$5 = CALL $163($4, $0)
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)$4), [752])
	
.LABEL $label$48
	$0 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($0, [1280])
	CALL eosio_assert($0, [1328])
	$0 = CALL db_next_i64(*($5 + [20]), ($7 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$50 }
	CALL $163($4, $0)
	
.LABEL $label$50
	CALL $199($4, $5)
	
.LABEL $label$43
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $194 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $297($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $297($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $297($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $297($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $297($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $297($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $297($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $297($5)
	
.LABEL $label$12
	return $0
}

void .FUNC $195 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1072])
	*($1) = *(*($3))
	CALL eosio_assert([1], [1136])
	CALL eosio_assert([1], [1200])
	CALL memcpy($4, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $4, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-5969209044777304064) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)-5969209044777304063
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $219 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [64])
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*(($1 + [92])) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1072])
	*(($11 = $12) + [24]) = *(($1 + [80]))
	*($11 + [32]) = *(($1 + [32]))
	*($11 + [40]) = *(($1 + [40]))
	$5 = *($1)
	*($1 + [88]) = [1]
	CALL eosio_assert([1], [1136])
	$6 = *($1 + [48])
	$7 = *(($1 + [52]))
	$8 = ($7 - $6)
	$10 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	$4 = ($11 + [40])
	$3 = ($11 + [32])
	$9 = [48]
	
.LOOP $label$1:
	$9 = ($9 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	$9 = (($8 & [-16]) + $9)
	
.LABEL $label$2
	$7 = ($9 + [26])
	if ( ($7 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($7)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($12 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($11 + [12]) = $9
	*($11 + [8]) = $9
	*($11 + [16]) = ($9 + $7)
	CALL $128(($11 + [8]), $1)
	CALL db_update_i64(*($1 + [96]), $2, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($11 + [56]) = *(($1 + [80]))
	if ( (CALL memcmp(($11 + [24]), ($11 + [56]), [8]) == 0) ){ goto $label$7 }
	$9 = *($1 + [100])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3012230666864558080, ($11 + [48]), $5)
	*(($1 + [100])) = $9
	
.LABEL $label$8
	CALL db_idx_double_update($9, $2, ($11 + [56]))
	
.LABEL $label$7
	*($11 + [56]) = *(($1 + [32]))
	if ( (CALL memcmp($3, ($11 + [56]), [8]) == 0) ){ goto $label$9 }
	$7 = ($1 + [104])
	$9 = *($7)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$10 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3012230666864558079, ($11 + [48]), $5)
	*($7) = $9
	
.LABEL $label$10
	CALL db_idx64_update($9, $2, ($11 + [56]))
	
.LABEL $label$9
	*($11 + [56]) = *(($1 + [40]))
	if ( (CALL memcmp($4, ($11 + [56]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [108])
	$9 = *($1)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$12 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3012230666864558078, ($11 + [48]), $5)
	*($1) = $9
	
.LABEL $label$12
	CALL db_idx64_update($9, $2, ($11 + [56]))
	
.LABEL $label$11
	*([0] + [4]) = ($11 + [64])
}

void .FUNC _ZN5eosio7chintai16receive_transferERKNS_5token13transfer_argsE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [368])
	*([0] + [4]) = $9
	$2 = *(($0 + [240]))
	$8 = *(($0 + [244]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( (int_64)(*(*($7)) == 0) ){ goto $label$1 }
	$8 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [216])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$4), [752])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	$8 = CALL db_find_i64(*(($0 + [216])), *(($0 + [224])), (int_64)6761222076679323648, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $163($4, $8)
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$4), [752])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [2064])
	CALL eosio_assert(((int_32)*($7 + [8]) ^ (int_32)[1]), [2160])
	CALL $318(($9 + [48]), ($1 + [32]))
	$7 = CALL _ZN5eosio5orderC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(($9 + [64]), ($9 + [48]))
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$5 }
	CALL $297(*($9 + [56]))
	
.LABEL $label$5
	CALL eosio_assert((CALL $39($7) == 0), [2512])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)*($1)), [2544])
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$12 }
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$11 }
	$5 = *($7 + [24])
	CALL eosio_assert(((int_64)*(($7 + [32])) == (int_64)*(($1 + [24]))), [2592])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1 + [16])), [2656])
	*($9 + [224]) = (int_64)-1
	*($9 + [232]) = [0]
	$5 = *($0)
	*($9 + [208]) = $5
	$6 = *($7 + [80])
	*($9 + [216]) = $6
	*(($9 + [236])) = [0]
	*((($9 + [208]) + [32])) = [0]
	*(($9 + [246])) = [0]
	*($9 + [244]) = [0]
	$4 = [0]
	$7 = CALL db_find_i64($5, $6, (int_64)-3012230666864558080, *($7))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	$4 = CALL $148(($9 + [208]), $7)
	CALL eosio_assert(((int_32)*($4 + [92]) == (int_32)($9 + [208])), [752])
	
.LABEL $label$13
	$7 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($7, [2704])
	$5 = *($1)
	CALL eosio_assert($7, [976])
	CALL $219(($9 + [208]), $4, $5)
	$3 = *($9 + [232])
	if ( ($3 == 0) ){ goto $label$6 }
	$0 = ($9 + [236])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$10 }
	
.LOOP $label$14:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	$8 = *($4 + [48])
	if ( ($8 == 0) ){ goto $label$16 }
	*(($4 + [52])) = $8
	CALL $297($8)
	
.LABEL $label$16
	CALL $297($4)
	
.LABEL $label$15
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$14 }
	$7 = *(($9 + [232]))
	goto $label$9 
	
.LABEL $label$12
	$5 = *($7 + [56])
	CALL eosio_assert(((int_64)*(($7 + [64])) == (int_64)*(($1 + [24]))), [2592])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1 + [16])), [2656])
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = [0]
	$5 = *($0)
	*($9 + [8]) = $5
	$6 = *($7 + [80])
	*($9 + [16]) = $6
	*(($9 + [36])) = [0]
	*((($9 + [8]) + [32])) = [0]
	*(($9 + [46])) = [0]
	*($9 + [44]) = [0]
	$4 = [0]
	$7 = CALL db_find_i64($5, $6, (int_64)-3146771307685740544, *($7))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$17 }
	$4 = CALL $138(($9 + [8]), $7)
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)($9 + [8])), [752])
	
.LABEL $label$17
	$7 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($7, [2704])
	$5 = *($1)
	CALL eosio_assert($7, [976])
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)($9 + [8])), [1024])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$15()), [1072])
	*($9 + [328]) = *(($4 + [64]))
	*($9 + [336]) = *(($4 + [32]))
	*($9 + [344]) = *(($4 + [40]))
	$6 = *($4)
	*($4 + [80]) = [1]
	CALL eosio_assert([1], [1136])
	*($9 + [320]) = (($9 + [208]) + [90])
	*($9 + [316]) = ($9 + [208])
	*($9 + [312]) = ($9 + [208])
	CALL $117(($9 + [312]), $4)
	CALL db_update_i64(*($4 + [100]), $5, ($9 + [208]), [90])
	$7 = (($9 + [8]) + [16])
	if ( (uint_64)($6 <= *($7)) ){ goto $label$18 }
	*($7) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$18
	$7 = (($9 + [328]) + [8])
	*($9 + [360]) = *(($4 + [64]))
	if ( (CALL memcmp(($9 + [328]), ($9 + [360]), [8]) == 0) ){ goto $label$19 }
	$3 = ($4 + [104])
	$8 = *($3)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$20 }
	$8 = CALL db_idx_double_find_primary(*($9 + [8]), *(($9 + [16])), (int_64)-3146771307685740544, ($9 + [352]), $6)
	*($3) = $8
	
.LABEL $label$20
	CALL db_idx_double_update($8, $5, ($9 + [360]))
	
.LABEL $label$19
	$8 = (($9 + [328]) + [16])
	*($9 + [360]) = *(($4 + [32]))
	if ( (CALL memcmp($7, ($9 + [360]), [8]) == 0) ){ goto $label$21 }
	$3 = ($4 + [108])
	$7 = *($3)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$22 }
	$7 = CALL db_idx64_find_primary(*($9 + [8]), *(($9 + [16])), (int_64)-3146771307685740543, ($9 + [352]), $6)
	*($3) = $7
	
.LABEL $label$22
	CALL db_idx64_update($7, $5, ($9 + [360]))
	
.LABEL $label$21
	*($9 + [360]) = *(($4 + [40]))
	if ( (CALL memcmp($8, ($9 + [360]), [8]) == 0) ){ goto $label$23 }
	$4 = ($4 + [112])
	$7 = *($4)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$24 }
	$7 = CALL db_idx64_find_primary(*($9 + [8]), *(($9 + [16])), (int_64)-3146771307685740542, ($9 + [352]), $6)
	*($4) = $7
	
.LABEL $label$24
	CALL db_idx64_update($7, $5, ($9 + [360]))
	
.LABEL $label$23
	$8 = *($9 + [32])
	if ( ($8 == 0) ){ goto $label$6 }
	$3 = ($9 + [36])
	$7 = *($3)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	
.LOOP $label$25:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$26 }
	CALL $297($4)
	
.LABEL $label$26
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$25 }
	$7 = *(($9 + [32]))
	goto $label$7 
	
.LABEL $label$11
	CALL eosio_assert([0], [2768])
	goto $label$6 
	
.LABEL $label$10
	$7 = $3
	
.LABEL $label$9
	*($0) = $3
	CALL $297($7)
	goto $label$6 
	
.LABEL $label$8
	$7 = $8
	
.LABEL $label$7
	*($3) = $8
	CALL $297($7)
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [368])
}

int_32 .FUNC $190 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1200])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1200])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC _ZN5eosio7chintai11processpoolEv (int_32 $0)
{
	int_64 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [128])
	*([0] + [4]) = $11
	CALL eosio_assert(CALL $fimport$36(*($0)), [1792])
	$1 = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($11 + [48]) = ((int_64)$1 + (int_64)259200)
	CALL $192(($0 + [440]), ($11 + [48]), *($0))
	$8 = CALL current_time()
	*(($11 + [76])) = [0]
	*(($11 + [80])) = [0]
	*($11 + [60]) = [0]
	*($11 + [64]) = [0]
	*($11 + [68]) = [0]
	*($11 + [72]) = [0]
	*($11 + [48]) = ((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) + [60])
	*($11 + [84]) = [0]
	*(($11 + [88])) = [0]
	*(($11 + [92])) = [0]
	*($11 + [96]) = [0]
	*(($11 + [100])) = [0]
	*(($11 + [104])) = [0]
	$3 = ($11 + [84])
	$2 = *($0)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1616]
	$9 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$6 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	*($11 + [40]) = $9
	*($11 + [32]) = $2
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1840]
	$9 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$12 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$4 = ($4 + [165])
	goto $label$10 
	
.LABEL $label$12
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$8
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$7 }
	*($11 + [24]) = $9
	*(($11 + [16])) = [0]
	*($11 + [8]) = (int_64)0
	$6 = CALL strlen([1856])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$16 }
	*($11 + [8]) = ($6 << [1])
	$4 = (($11 + [8]) | [1])
	if ( $6 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$5 = (($6 + [16]) & [-16])
	$4 = CALL $295($5)
	*($11 + [8]) = ($5 | [1])
	*($11 + [16]) = $4
	*($11 + [12]) = $6
	
.LABEL $label$15
	CALL memcpy($4, [1856], $6)
	
.LABEL $label$14
	*(($4 + $6)) = [0]
	$4 = *(($11 + [88]))
	if ( ((uint_32)$4 >= (uint_32)*(($11 + [92]))) ){ goto $label$20 }
	*($4 + [16 align=4]) = (int_64)0
	$8 = *($0)
	*($4 + [8]) = *($11 + [24])
	*($4) = $8
	*(($3 = ($4 + [24]))) = [0]
	$6 = CALL $295([16])
	*($4 + [16]) = $6
	$5 = ($6 + [16])
	*($3) = $5
	*(($6 + [8])) = *((($11 + [32]) + [8]))
	*($6) = *($11 + [32])
	*(($4 + [20])) = $5
	*($4 + [28]) = [0]
	*(($4 + [32])) = [0]
	*(($4 + [36])) = [0]
	$6 = *($11 + [8])
	$6 = ( *($11 + [12]) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$8 = (CASTING uint_64)(uint_32 $6)
	$3 = ($4 + [28])
	
.LOOP $label$21:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$21 }
	if ( ($6 == 0) ){ goto $label$19 }
	CALL $167($3, $6)
	$3 = *(($4 + [32]))
	$6 = *(($4 + [28]))
	goto $label$18 
	
.LABEL $label$20
	CALL $193($3, ($11 + [32]), $0, ($11 + [24]), ($11 + [8]))
	goto $label$17 
	
.LABEL $label$19
	$3 = [0]
	$6 = [0]
	
.LABEL $label$18
	*($11 + [116]) = $6
	*($11 + [112]) = $6
	*($11 + [120]) = $3
	CALL $190(($11 + [112]), ($11 + [8]))
	*(($6 = (($11 + [48]) + [40]))) = (*($6) + [40])
	
.LABEL $label$17
	if ( ((*($11 + [8]) & [1]) == 0) ){ goto $label$22 }
	CALL $297(*($11 + [16]))
	
.LABEL $label$22
	*(($11 + [68])) = [288000]
	*($11 + [40]) = (int_64)0
	*($11 + [32]) = $1
	$8 = *($0)
	CALL $170(($11 + [112]), ($11 + [48]))
	$6 = *($11 + [112])
	CALL send_deferred(($11 + [32]), $8, $6, (*($11 + [116]) - $6), [0])
	$6 = *($11 + [112])
	if ( ($6 == 0) ){ goto $label$23 }
	*($11 + [116]) = $6
	CALL $297($6)
	
.LABEL $label$23
	CALL $194(($11 + [48]))
	*([0] + [4]) = ($11 + [128])
	return (unreachable)
	
.LABEL $label$13
	CALL $299(($11 + [8]))
}

int_32 .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1200])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [1200])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1200])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1200])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $176 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1200])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1200])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1200])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $178(CALL $179($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1200])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [1200])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $178($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $174($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $167($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $175($4, $1)
	CALL $177(CALL $176(CALL $176($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	*($4 + [15]) = *($0 + [40])
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [1200])
	CALL memcpy(*($3 + [4]), ($4 + [15]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	*($4 + [8]) = $0
	CALL $173(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $172 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $295(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $295([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $167(($8 + [28]), [73])
	$2 = *($2)
	$1 = *($8 + [28])
	*($9 + [4]) = $1
	*($9) = $1
	*($9 + [8]) = $2
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	CALL $171(($9 + [24]), ($9 + [16]))
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $297($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $297($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $297($6)
	
.LABEL $label$12
	*([0] + [4]) = ($9 + [32])
	(unreachable)
}

void .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($2 + [4]), ($3 + [48]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($2 + [4]), ($0 + [56]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($2 + [4]), ($0 + [64]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((int_32)(*($1 + [8]) - *($1 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($1 + [4]), ($0 + [72]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

int_32 .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1200])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1200])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [1200])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1200])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1200])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $237 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1328])
	$6 = *($0 + [4])
	$7 = *($6 + [104])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx_double_find_primary(*($7), *($7 + [8]), (int_64)-3146771307685740544, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [104]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx_double_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [96]) == (int_32)$2), [752])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $138($2, CALL $fimport$17(*($2), *($2 + [8]), (int_64)-3146771307685740544, $3))
	CALL eosio_assert(((int_32)*($7 + [96]) == (int_32)$2), [752])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [104])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC _ZN5eosio6ulbook6set_idEy (int_32 $0, int_64 $1)
{
	*($0) = $1
}

int_32 .FUNC $235 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	*($9 + [8]) = (int_64)0
	$7 = *($0 + [4])
	if ( ($7 == 0) ){ goto $label$2 }
	$5 = *($7 + [104])
	if ( ((int_32)$5 != (int_32)[-1]) ){ goto $label$3 }
	$5 = *(*($0))
	$5 = CALL db_idx_double_find_primary(*($5), *($5 + [8]), (int_64)-3146771307685740544, $9, *($7))
	*(*(($0 + [4])) + [104]) = $5
	
.LABEL $label$3
	$6 = CALL db_idx_double_previous($5, ($9 + [8]))
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [3184])
	goto $label$1 
	
.LABEL $label$2
	$7 = *(*($0))
	$7 = CALL db_idx_double_end(*($7), *($7 + [8]), (int_64)-3146771307685740544)
	CALL eosio_assert(((int_32)$7 != (int_32)[-1]), [3120])
	$6 = CALL db_idx_double_previous($7, ($9 + [8]))
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [3120])
	
.LABEL $label$1
	$2 = *($9 + [8])
	$3 = *($1 + [24])
	$1 = *(*($0))
	$8 = *(($1 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$7 = ($8 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$5:
	if ( ((int_64)*(*($7)) == (int_64)$2) ){ goto $label$4 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$7 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [96]) == (int_32)$1), [752])
	goto $label$6 
	
.LABEL $label$7
	$7 = CALL $138($1, CALL $fimport$17(*($1), *($1 + [8]), (int_64)-3146771307685740544, $2))
	CALL eosio_assert(((int_32)*($7 + [96]) == (int_32)$1), [752])
	
.LABEL $label$6
	*(($0 + [4])) = $7
	*(($7 + [104])) = $6
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC _ZN5eosio6ulbook12set_quantityERKNS_5assetE (int_32 $0, int_32 $1)
{
	*($0 + [16]) = *($1)
	*(($0 + [24])) = *(($1 + [8]))
}

int_64 .FUNC _ZNK5eosio6ulbook8get_userEv (int_32 $0)
{
	return *($0 + [8])
}

void .FUNC _ZN5eosio6usbook12set_interestEd (int_32 $0, float_64 $1)
{
	*($0 + [80]) = $1
}

void .FUNC $232 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	$8 = *($0 + [4])
	*($1) = *(*(*($8) + [4]))
	$2 = *($0)
	*($1 + [8]) = *(*(*($8) + [4]) + [8])
	$3 = *(*($8) + [4])
	*(($4 = (($10 = $11) + [20]))) = *(($3 + [28]))
	*(($5 = ($10 + [16]))) = *(($3 + [24]))
	*($10 + [8]) = *($3 + [16])
	*($10 + [12]) = *(($3 + [20]))
	*(($1 + [24])) = *($5)
	*($1 + [16]) = *($10 + [8])
	*($1 + [32]) = *(*(*($8) + [4]) + [32])
	*($1 + [40]) = *(*(*($8) + [4]) + [40])
	$3 = *(*($8) + [4])
	*($4) = *(($3 + [76]))
	*($5) = *(($3 + [72]))
	*($10 + [8]) = *($3 + [64])
	*($10 + [12]) = *(($3 + [68]))
	*(($1 + [72])) = *($5)
	*($1 + [64]) = *($10 + [8])
	*($1 + [80]) = *(*(*($8) + [4]) + [80])
	*($1 + [88]) = *(*(*($8) + [4]) + [88])
	*($1 + [89]) = *(*(*($8) + [4]) + [89])
	$5 = *($1 + [48])
	$3 = *(($1 + [52]))
	$4 = ($3 - $5)
	$9 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$8 = [48]
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$8 = (($4 & [-16]) + $8)
	
.LABEL $label$2
	$3 = ($8 + [26])
	if ( ($3 <= [513]) ){ goto $label$4 }
	$8 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$8 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$3
	*($10 + [12]) = $8
	*($10 + [8]) = $8
	*($10 + [16]) = ($8 + $3)
	CALL $128(($10 + [8]), $1)
	$9 = *($1)
	*($1 + [96]) = CALL db_store_i64(*($2 + [8]), (int_64)-3012230666864558080, *(*($0 + [8])), $9, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$8 = ($2 + [8])
	$9 = *($8)
	$0 = *(($0 + [8]))
	$6 = *($0)
	$7 = *($1)
	*($10 + [24]) = *(($1 + [80]))
	*($1 + [100]) = CALL db_idx_double_store($9, (int_64)-3012230666864558080, $6, $7, ($10 + [24]))
	$9 = *($0)
	$6 = *($8)
	$7 = *($1)
	*($10 + [24]) = *(($1 + [32]))
	*(($1 + [104])) = CALL db_idx64_store($6, (int_64)-3012230666864558079, $9, $7, ($10 + [24]))
	$9 = *($0)
	$6 = *($8)
	$7 = *($1)
	*($10 + [24]) = *(($1 + [40]))
	*(($1 + [108])) = CALL db_idx64_store($6, (int_64)-3012230666864558078, $9, $7, ($10 + [24]))
	*([0] + [4]) = ($10 + [32])
}

void .FUNC _ZN5eosio7chintai11changescopeEyb (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [192])
	*([0] + [4]) = $11
	CALL eosio_assert(CALL $fimport$36(*($0)), [1584])
	if ( ($2 == 0) ){ goto $label$9 }
	$3 = *(($0 + [160]))
	$6 = *(($0 + [164]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$10 }
	$2 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$11:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$10 }
	$6 = $2
	$7 = ($2 + [-24])
	$2 = $7
	if ( ((int_32)($7 + $4) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = ($0 + [136])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$8 }
	$7 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [96]) == (int_32)$4), [752])
	goto $label$7 
	
.LABEL $label$9
	$3 = *(($0 + [120]))
	$6 = *(($0 + [124]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$12 }
	$2 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$13:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$12 }
	$6 = $2
	$7 = ($2 + [-24])
	$2 = $7
	if ( ((int_32)($7 + $4) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	$7 = ($0 + [96])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$6 }
	$2 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*(($2 + [92])) == (int_32)$7), [752])
	goto $label$2 
	
.LABEL $label$8
	$7 = [0]
	$2 = CALL db_find_i64(*(($0 + [136])), *(($0 + [144])), (int_64)-3146771307685740544, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$7 }
	$7 = CALL $138($4, $2)
	CALL eosio_assert(((int_32)*($7 + [96]) == (int_32)$4), [752])
	
.LABEL $label$7
	$6 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($6, [3088])
	*($11 + [24]) = (int_64)-1
	*($11 + [32]) = [0]
	$1 = *($0)
	*($11 + [8]) = $1
	*($11 + [16]) = *($7 + [32])
	*(($3 = ($11 + [36]))) = [0]
	*(($8 = (($11 + [8]) + [32]))) = [0]
	*(($11 + [46])) = [0]
	*($11 + [44]) = [0]
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$15()), [912])
	$2 = CALL $295([120])
	$0 = CALL $116($2)
	*($2 + [96]) = ($11 + [8])
	*($2) = *($7)
	*($2 + [8]) = *($7 + [8])
	$5 = *(($7 + [24]))
	*(($9 = (($11 + [48]) + [8]))) = $5
	$10 = *($7 + [16])
	*($2 + [16]) = $10
	*(($2 + [24])) = $5
	*($11 + [48]) = $10
	*($2 + [32]) = *($7 + [32])
	*($2 + [40]) = *($7 + [40])
	$5 = *(($7 + [56]))
	*($9) = $5
	$10 = *($7 + [48])
	*($2 + [48]) = $10
	*(($2 + [56])) = $5
	*($11 + [48]) = $10
	*($2 + [64]) = *($7 + [64])
	*($2 + [72]) = *($7 + [72])
	*($2 + [80]) = *($7 + [80])
	*($2 + [81]) = *($7 + [81])
	*($2 + [88]) = *($7 + [88])
	*($11 + [160]) = (($11 + [48]) + [90])
	*($11 + [156]) = ($11 + [48])
	*($11 + [152]) = ($11 + [48])
	CALL $117(($11 + [152]), $0)
	$5 = *($2)
	*($2 + [100]) = CALL db_store_i64(*($11 + [16]), (int_64)-3146771307685740544, $1, $5, ($11 + [48]), [90])
	if ( (uint_64)($5 <= *($11 + [24])) ){ goto $label$14 }
	*(($11 + [24])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	$5 = *($2)
	$0 = (($11 + [8]) + [8])
	$10 = *($0)
	*($11 + [168]) = *(($2 + [64]))
	*($2 + [104]) = CALL db_idx_double_store($10, (int_64)-3146771307685740544, $1, $5, ($11 + [168]))
	$5 = *($2)
	$10 = *($0)
	*($11 + [168]) = *(($2 + [32]))
	*($2 + [108]) = CALL db_idx64_store($10, (int_64)-3146771307685740543, $1, $5, ($11 + [168]))
	$5 = *($2)
	$10 = *($0)
	*($11 + [168]) = *(($2 + [40]))
	*($2 + [112]) = CALL db_idx64_store($10, (int_64)-3146771307685740542, $1, $5, ($11 + [168]))
	*($11 + [152]) = $2
	$1 = *($2)
	*($11 + [48]) = $1
	$9 = *(($2 + [100]))
	*($11 + [168]) = $9
	$0 = *($3)
	if ( ((uint_32)$0 >= (uint_32)*($8)) ){ goto $label$16 }
	*($0 + [8]) = $1
	*($0 + [16]) = $9
	*($11 + [152]) = [0]
	*($0) = $2
	*(($11 + [36])) = ($0 + [24])
	goto $label$15 
	
.LABEL $label$16
	CALL $118(($11 + [32]), ($11 + [152]), ($11 + [48]), ($11 + [168]))
	
.LABEL $label$15
	$2 = *($11 + [152])
	*($11 + [152]) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	CALL $297($2)
	
.LABEL $label$17
	CALL eosio_assert($6, [1280])
	CALL eosio_assert($6, [1328])
	$2 = CALL db_next_i64(*($7 + [100]), ($11 + [48]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$18 }
	CALL $138($4, $2)
	
.LABEL $label$18
	CALL $139($4, $7)
	$0 = *($11 + [32])
	if ( ($0 == 0) ){ goto $label$1 }
	$6 = ($11 + [36])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$5 }
	
.LOOP $label$19:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$20 }
	CALL $297($7)
	
.LABEL $label$20
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$19 }
	$2 = *(($11 + [32]))
	goto $label$4 
	
.LABEL $label$6
	$2 = CALL db_find_i64(*(($0 + [96])), *(($0 + [104])), (int_64)-3012230666864558080, $1)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$3 }
	$2 = CALL $148($7, $2)
	CALL eosio_assert(((int_32)*($2 + [92]) == (int_32)$7), [752])
	goto $label$2 
	
.LABEL $label$5
	$2 = $0
	
.LABEL $label$4
	*($6) = $0
	CALL $297($2)
	goto $label$1 
	
.LABEL $label$3
	$2 = [0]
	
.LABEL $label$2
	*($11 + [172]) = $2
	*($11 + [168]) = $7
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [3088])
	*($11 + [64]) = (int_64)-1
	*($11 + [72]) = [0]
	$1 = *($0)
	*($11 + [48]) = $1
	*($11 + [56]) = *($2 + [32])
	*(($6 = ($11 + [76]))) = [0]
	*(($4 = ($11 + [80]))) = [0]
	*(($11 + [86])) = [0]
	*($11 + [84]) = [0]
	*($11) = ($11 + [168])
	*($11 + [152]) = $1
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$15()), [912])
	*($11 + [12]) = $11
	*($11 + [8]) = ($11 + [48])
	*($11 + [16]) = ($11 + [152])
	$2 = CALL $295([112])
	CALL $120($2)
	*($2 + [92]) = ($11 + [48])
	CALL $232(($11 + [8]), $2)
	*($11 + [184]) = $2
	$1 = *($2)
	*($11 + [8]) = $1
	$3 = *($2 + [96])
	*($11 + [180]) = $3
	$0 = *($6)
	if ( ((uint_32)$0 >= (uint_32)*($4)) ){ goto $label$22 }
	*($0 + [8]) = $1
	*($0 + [16]) = $3
	*($11 + [184]) = [0]
	*($0) = $2
	*($6) = ($0 + [24])
	goto $label$21 
	
.LABEL $label$22
	CALL $122(($11 + [72]), ($11 + [184]), ($11 + [8]), ($11 + [180]))
	
.LABEL $label$21
	$2 = *($11 + [184])
	*($11 + [184]) = [0]
	if ( ($2 == 0) ){ goto $label$23 }
	$0 = *($2 + [48])
	if ( ($0 == 0) ){ goto $label$24 }
	*(($2 + [52])) = $0
	CALL $297($0)
	
.LABEL $label$24
	CALL $297($2)
	
.LABEL $label$23
	$1 = *($11 + [168])
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	$0 = ((int_32)$2) != (int_32)[0]
	CALL eosio_assert($0), [1280])
	CALL eosio_assert($0, [1328])
	$0 = CALL db_next_i64(*($2 + [96]), ($11 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$25 }
	CALL $148((CASTING uint_32)(uint_64 $1), $0)
	
.LABEL $label$25
	CALL $149($7, $2)
	$6 = *($11 + [72])
	if ( ($6 == 0) ){ goto $label$1 }
	$4 = ($11 + [76])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$27 }
	
.LOOP $label$28:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$29 }
	$0 = *($7 + [48])
	if ( ($0 == 0) ){ goto $label$30 }
	*(($7 + [52])) = $0
	CALL $297($0)
	
.LABEL $label$30
	CALL $297($7)
	
.LABEL $label$29
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$28 }
	$2 = *(($11 + [72]))
	goto $label$26 
	
.LABEL $label$27
	$2 = $6
	
.LABEL $label$26
	*($4) = $6
	CALL $297($2)
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [192])
}

int_64 .FUNC _ZNK5eosio6ulbook23get_order_creation_timeEv (int_32 $0)
{
	return *($0 + [40])
}

void .FUNC _ZN5eosio9leasebook12set_quantityERKNS_5assetE (int_32 $0, int_32 $1)
{
	*($0 + [16]) = *($1)
	*(($0 + [24])) = *(($1 + [8]))
}

void .FUNC _ZN5eosio6usbook17set_quantity_leftERKNS_5assetE (int_32 $0, int_32 $1)
{
	*($0 + [64]) = *($1)
	*(($0 + [72])) = *(($1 + [8]))
}

int_64 .FUNC _ZNK5eosio9leasebook8get_userEv (int_32 $0)
{
	return *($0 + [8])
}

void .FUNC _ZNK5eosio9leasebook12get_quantityEv (int_32 $0, int_32 $1)
{
	*($0) = *($1 + [16])
	*(($0 + [8])) = *(($1 + [24]))
}

int_32 .FUNC $271 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [96])
	*([0] + [4]) = $3
	*(($2 = $3) + [60]) = $0
	*($2 + [48]) = *($1)
	*($2 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [40])) = [0]
	*($2 + [8]) = [0]
	*($2) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = [0]
	*($2 + [36]) = [0]
	*(($2 + [44])) = [0]
	*($2 + [68]) = $1
	*($2 + [64]) = $1
	*($2 + [72]) = ($1 + $0)
	*($2 + [80]) = ($2 + [64])
	*($2 + [88]) = $2
	CALL $283(($2 + [88]), ($2 + [80]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [68]) = ($2 + [48])
	*($2 + [64]) = ($2 + [60])
	CALL $284(($2 + [64]), $2)
	if ( ((*($2 + [36]) & [1]) == 0) ){ goto $label$5 }
	CALL $297(*(($2 + [44])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [96])
	return [1]
}

int_32 .FUNC $270 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	*($5) = (int_64)0
	*($5 + [36]) = $1
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + $3)
	CALL $257(($5 + [32]), $5)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	CALL $318(($5 + [16]), $5)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL $318(($5 + [32]), ($5 + [16]))
	CALL void $1((int_32 ($5 + [32])), (int_32 $4))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $297(*($5 + [40]))
	
.LABEL $label$6
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$7 }
	CALL $297(*($5 + [24]))
	
.LABEL $label$7
	if ( ((*($5) & [1]) == 0) ){ goto $label$8 }
	CALL $297(*(($5 + [8])))
	
.LABEL $label$8
	*([0] + [4]) = ($5 + [48])
	return [1]
}

void .FUNC $277 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($0 + [16])) = (int_64)1397703940
	CALL eosio_assert([1], [16])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [80])
	*(($0 + [32])) = (int_64)1397703940
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [16])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [80])
	*($0 + [48]) = (int_64)0
	*($0 + [40]) = [0]
	*($0 + [56]) = (int_64)0
	*($0 + [64]) = (int_64)0
	*($0 + [72]) = (int_64)0
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $278(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC $276 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *(($0 + [152]))
	if ( ($3 == 0) ){ goto $label$1 }
	$1 = ($0 + [156])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $297($2)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	$5 = *(($0 + [152]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $3
	
.LABEL $label$2
	*($1) = $3
	CALL $297($5)
	
.LABEL $label$1
	$1 = *(($0 + [112]))
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [116])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	$3 = *($2 + [48])
	if ( ($3 == 0) ){ goto $label$11 }
	*(($2 + [52])) = $3
	CALL $297($3)
	
.LABEL $label$11
	CALL $297($2)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$9 }
	$5 = *(($0 + [112]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $297($5)
	
.LABEL $label$6
	$3 = *(($0 + [72]))
	if ( ($3 == 0) ){ goto $label$12 }
	$1 = ($0 + [76])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$14 }
	
.LOOP $label$15:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$16 }
	CALL $297($2)
	
.LABEL $label$16
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$15 }
	$5 = *(($0 + [72]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $3
	
.LABEL $label$13
	*($1) = $3
	CALL $297($5)
	
.LABEL $label$12
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$17 }
	$4 = ($0 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$19 }
	
.LOOP $label$20:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$21 }
	$3 = *($2 + [48])
	if ( ($3 == 0) ){ goto $label$22 }
	*(($2 + [52])) = $3
	CALL $297($3)
	
.LABEL $label$22
	CALL $297($2)
	
.LABEL $label$21
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$20 }
	$5 = *(($0 + [32]))
	goto $label$18 
	
.LABEL $label$19
	$5 = $1
	
.LABEL $label$18
	*($4) = $1
	CALL $297($5)
	
.LABEL $label$17
	return $0
}

int_32 .FUNC $275 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [464]))
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [468])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $297($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$4 = *(($0 + [464]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($3) = $1
	CALL $297($4)
	
.LABEL $label$1
	CALL $194(($0 + [376]))
	CALL $194(($0 + [316]))
	CALL $194(($0 + [256]))
	$1 = *(($0 + [240]))
	if ( ($1 == 0) ){ goto $label$6 }
	$3 = ($0 + [244])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $297($2)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$4 = *(($0 + [240]))
	goto $label$7 
	
.LABEL $label$8
	$4 = $1
	
.LABEL $label$7
	*($3) = $1
	CALL $297($4)
	
.LABEL $label$6
	$1 = *(($0 + [200]))
	if ( ($1 == 0) ){ goto $label$11 }
	$3 = ($0 + [204])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $297($2)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($0 + [200]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $297($4)
	
.LABEL $label$11
	CALL $276(($0 + [8]))
	return $0
}

int_32 .FUNC $274 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = (*([0] + [4]) - [32])
	$7 = $5
	*([0] + [4]) = $5
	$2 = *($1 + [4])
	$6 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($5 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($7 + [8]) = (int_64)0
	*($7 + [16]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1248])
	CALL memcpy(($7 + [8]), $4, [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [1248])
	CALL memcpy(($7 + [31]), ($4 + [8]), [1])
	$5 = ((int_32)*($7 + [31]) != (int_32)[0])
	*($7 + [16]) = $5
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	$5 = *((($7 + [8]) + [8]))
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *($7 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($1) + $6))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 ((int_32)($5 & [255]) != (int_32)[0])), (int_32 $6))
	*([0] + [4]) = ($7 + [32])
	return [1]
}

void .FUNC _ZN5eosio9stakebook23set_order_creation_timeEy (int_32 $0, int_64 $1)
{
	*($0 + [40]) = $1
}

void .FUNC _ZNK5eosio9stakebook18get_airdrop_tokensEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = (*(($1 + [52])) - *($1 + [48]))
	$2 = int_32($3 >> [4])
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$1 }
	$3 = CALL $295($3)
	*($0) = $3
	*(($4 = ($0 + [4]))) = $3
	*(($0 + [8])) = ($3 + ($2 << [4]))
	$1 = *(($1 + [48]))
	$0 = (*(($1 + [52])) - $1)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($3, $1, $0)
	*($4) = (*($4) + $0)
	
.LABEL $label$2
	return (unreachable)
	
.LABEL $label$1
	CALL $316($0)
}

void .FUNC $279 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($3 + [48]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [56]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [64]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [72]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [4])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $297($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$5 = [268435455]
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [3])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [4])
	$5 = CALL $295($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [4])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [4])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [4]))
	return (unreachable)
	
.LABEL $label$1
	CALL $316($0)
}

void .FUNC _ZN5eosio9stakebook10push_tokenERKNS_5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = ($0 + [52])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)*(($0 + [56]))) ){ goto $label$1 }
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*($3) = (*($3) + [16])
	return 
	
.LABEL $label$1
	CALL $55(($0 + [48]), $1)
}

void .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$2 = int_32(($6 - $5) >> [4])
	$3 = ($2 + [1])
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$3 }
	$4 = [268435455]
	$7 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($7 >> [4]) > (uint_32)[134217726]) ){ goto $label$5 }
	$4 = int_32($7 >> [3])
	$4 = ( $3 ? $4 : ($4 <= $3) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $295(($4 << [4]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $316($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($2 << [4])))) = *($1)
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($6 - $5)
	$6 = ($3 - $1)
	$4 = ($7 + ($4 << [4]))
	$3 = ($3 + [16])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($6, $5, $1)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $297($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC _ZN5eosio9stakebook13set_autorenewEb (int_32 $0, int_32 $1)
{
	*($0 + [60]) = $1
}

int_64 .FUNC _ZNK5eosio9leasebook11primary_keyEv (int_32 $0)
{
	return *($0)
}

void .FUNC _ZN5eosio17orderbook_manager26cancel_stake_order_chintaiERKNS_9stakebookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE (int_32 $0, int_32 $1, int_32 $2)
{
	CALL require_auth(*($0))
	CALL _ZN5eosio17orderbook_manager18cancel_stake_orderERKNS_9stakebookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($0, $1, $0)
}

void .FUNC _ZN5eosio17orderbook_manager18cancel_stake_orderERKNS_9stakebookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	$4 = *($1)
	$5 = *(($0 + [32]))
	$9 = *(($0 + [36]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$1 }
	$8 = ($9 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$4) ){ goto $label$1 }
	$9 = $8
	$7 = ($8 + [-24])
	$8 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [8])
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$5 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [64]) == (int_32)$3), [752])
	if ( $8 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)6787602122293641216, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $119($3, $8) + [64]) == (int_32)$3), [752])
	
.LABEL $label$4
	$4 = *($1)
	$1 = *(($0 + [32]))
	$9 = *(($0 + [36]))
	if ( ((int_32)$9 == (int_32)$1) ){ goto $label$6 }
	$8 = ($9 + [-24])
	$6 = ([0] - $1)
	
.LOOP $label$7:
	if ( ((int_64)*(*($8)) == (int_64)$4) ){ goto $label$6 }
	$9 = $8
	$7 = ($8 + [-24])
	$8 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$9 == (int_32)$1) ){ goto $label$9 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [64]) == (int_32)$3), [752])
	goto $label$8 
	
.LABEL $label$9
	$8 = [0]
	$7 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)6787602122293641216, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$8 = CALL $119($3, $7)
	CALL eosio_assert(((int_32)*($8 + [64]) == (int_32)$3), [752])
	
.LABEL $label$8
	$7 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($7, [1280])
	CALL eosio_assert($7, [1328])
	$7 = CALL db_next_i64(*($8 + [68]), ($10 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$10 }
	CALL $119($3, $7)
	
.LABEL $label$10
	CALL $154($3, $8)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $150 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = *($0)
	$4 = *($5 + [4])
	$6 = *($4 + [100])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = *($5)
	$6 = CALL db_idx_double_find_primary(*($6), *($6 + [8]), (int_64)-3012230666864558080, ($7 + [8]), *($4))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx_double_remove($6)
	
.LABEL $label$1
	$5 = *($0)
	$4 = *($5 + [4])
	$6 = *(($4 + [104]))
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$4 }
	$6 = *($5)
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-3012230666864558079, ($7 + [8]), *($4))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($6)
	
.LABEL $label$3
	$6 = *($0)
	$5 = *($6 + [4])
	$0 = *(($5 + [108]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$6 }
	$0 = *($6)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3012230666864558078, ($7 + [8]), *($5))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($0)
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $132($0, ($1 + [48]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [1248])
	CALL memcpy(($3 + [14]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [88]) = ((int_32)*($3 + [14]) != (int_32)[0])
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [1248])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*($1 + [89]) = ((int_32)*($3 + [15]) != (int_32)[0])
	*([0] + [4]) = ($3 + [16])
	return $0
}

int_64 .FUNC _ZNK5eosio6market11primary_keyEv (int_32 $0)
{
	return *($0)
}

void .FUNC _ZN5eosio7chintai11get_balanceEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [1536]
	$6 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$5 > (uint_64)(int_64)10) ){ goto $label$6 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$7 = (int_64)0
	if ( ((int_64)$5 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$4 = ((int_64)$4 + (int_64)-5)
	$6 = ((int_64)$7 | (int_64)$6)
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)$5 != (int_64)13) ){ goto $label$1 }
	$5 = *($1)
	*(($8 + [40])) = [0]
	*($8 + [16]) = $5
	*($8 + [8]) = $6
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$3 = CALL $158(($8 + [8]), (int_64)5459781, [1552])
	*($0) = *($3)
	*(($0 + [8])) = *(($3 + [8]))
	$0 = *($8 + [32])
	if ( ($0 == 0) ){ goto $label$7 }
	$1 = ($8 + [36])
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $297($2)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($8 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$3 = $0
	
.LABEL $label$8
	*($1) = $0
	CALL $297($3)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $154 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1408])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1472])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *($4 + [48])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [52])) = $6
	CALL $297($6)
	
.LABEL $label$7
	CALL $297($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *($4 + [48])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [52])) = $6
	CALL $297($6)
	
.LABEL $label$10
	CALL $297($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
	$7 = *(($1 + [72]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6787602122293641216, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	$7 = *(($1 + [76]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$14 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6787602122293641217, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	
.LABEL $label$14
	CALL db_idx64_remove($7)
	
.LABEL $label$13
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN5eosio17orderbook_manager26cancel_stake_order_chintaiERKNS_6usbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE (int_32 $0, int_32 $1, int_32 $2)
{
	CALL require_auth(*($0))
	CALL _ZN5eosio17orderbook_manager18cancel_stake_orderERKNS_6usbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($0, $1, $0)
}

int_32 .FUNC $158 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [752])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $159($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [752])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	$9 = $10
	*([0] + [4]) = $10
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [1216])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($7)
	CALL db_get_i64($1, $3, $7)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($10 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $7)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $295([32])) + [8]) = (int_64)1397703940
	*($5) = (int_64)0
	CALL eosio_assert([1], [16])
	$10 = ($5 + [8])
	$8 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [80])
	*($5 + [16]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [1248])
	CALL memcpy($5, $3, [8])
	CALL eosio_assert(((int_32)($7 & [-8]) != (int_32)[8]), [1248])
	CALL memcpy($10, ($3 + [8]), [8])
	*($5 + [20]) = $1
	*($9 + [24]) = $5
	$8 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($9 + [16]) = $8)
	$7 = *($5 + [20])
	*($9 + [12]) = $7
	$1 = ($0 + [28])
	$6 = *($1)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($6 + [8]) = $8
	*($6 + [16]) = $7
	*($9 + [24]) = [0]
	*($6) = $5
	*($1) = ($6 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $160($2, ($9 + [24]), ($9 + [16]), ($9 + [12]))
	
.LABEL $label$12
	$6 = *($9 + [24])
	*($9 + [24]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $297($6)
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [32])
	return $5
}

int_32 .FUNC $273 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$9 = (*([0] + [4]) - [208])
	$11 = $9
	*([0] + [4]) = $9
	$2 = *($1 + [4])
	$10 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$9 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$9 = [0]
	goto $label$1 
	
.LABEL $label$3
	$9 = ($9 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$2
	CALL read_action_data($9, $1)
	
.LABEL $label$1
	CALL $277(($11 + [32]), $9, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	*(($1 = (($11 + [128]) + [8]))) = *(($11 + [48]))
	$8 = *($11 + [40])
	*(($9 = (($11 + [112]) + [8]))) = *(($11 + [64]))
	$3 = *($11 + [32])
	*($11 + [128]) = $8
	*($11 + [112]) = *($11 + [56])
	$8 = *($11 + [104])
	$7 = *($11 + [96])
	$6 = *($11 + [88])
	$5 = *($11 + [80])
	$4 = *($11 + [72])
	*((($11 + [160]) + [8])) = *($9)
	*((($11 + [144]) + [8])) = *($1)
	*($11 + [160]) = *($11 + [112])
	*($11 + [144]) = *($11 + [128])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$10 = *((*($1) + $10))
	
.LABEL $label$6
	*(($9 = (($11 + [192]) + [8]))) = *((($11 + [144]) + [8]))
	*(($2 = (($11 + [176]) + [8]))) = *((($11 + [160]) + [8]))
	*($11 + [192]) = *($11 + [144])
	*($11 + [176]) = *($11 + [160])
	*((($11 + [16]) + [8])) = *($9)
	*($11 + [16]) = *($11 + [192])
	*(($11 + [8])) = *($2)
	*($11) = *($11 + [176])
	CALL void $1((int_32 $3), (int_64 ($11 + [16])), (int_32 $11), (int_32 ((int_32)($4 & [255]) != (int_32)[0])), (int_32 $5), (int_64 $6), (int_64 $7), (int_64 $8), (int_64 $10))
	*([0] + [4]) = ($11 + [208])
	return [1]
}

int_32 .FUNC $272 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$9 = (*([0] + [4]) - [208])
	$11 = $9
	*([0] + [4]) = $9
	$2 = *($1 + [4])
	$10 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$9 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$9 = [0]
	goto $label$1 
	
.LABEL $label$3
	$9 = ($9 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$2
	CALL read_action_data($9, $1)
	
.LABEL $label$1
	CALL $280(($11 + [32]), $9, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	*(($1 = (($11 + [128]) + [8]))) = *(($11 + [48]))
	$8 = *($11 + [40])
	*(($9 = (($11 + [112]) + [8]))) = *(($11 + [64]))
	$3 = *($11 + [32])
	*($11 + [128]) = $8
	*($11 + [112]) = *($11 + [56])
	$7 = *($11 + [104])
	$8 = *($11 + [96])
	$6 = *($11 + [88])
	$5 = *($11 + [80])
	$4 = *($11 + [72])
	*((($11 + [160]) + [8])) = *($9)
	*((($11 + [144]) + [8])) = *($1)
	*($11 + [160]) = *($11 + [112])
	*($11 + [144]) = *($11 + [128])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$10 = *((*($1) + $10))
	
.LABEL $label$6
	*(($9 = (($11 + [192]) + [8]))) = *((($11 + [144]) + [8]))
	*(($2 = (($11 + [176]) + [8]))) = *((($11 + [160]) + [8]))
	*($11 + [192]) = *($11 + [144])
	*($11 + [176]) = *($11 + [160])
	*((($11 + [16]) + [8])) = *($9)
	*($11 + [16]) = *($11 + [192])
	*(($11 + [8])) = *($2)
	*($11) = *($11 + [176])
	CALL void $1((int_32 $3), (int_64 ($11 + [16])), (int_32 $11), (int_32 $4), (int_64 $5), (int_64 $6), (int_64 $8), (int_64 ((int_32)($7 & [255]) != (int_32)[0])), (int_32 $10))
	*([0] + [4]) = ($11 + [208])
	return [1]
}

void .FUNC _ZN5eosio6ulbook9set_ratioEd (int_32 $0, float_64 $1)
{
	*($0 + [72]) = $1
}

int_32 .FUNC strcmp (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ((int_32)$2 != (int_32)($3 & [255])) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	
.LOOP $label$2:
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)($3 & [255])) ){ goto $label$2 }
	
.LABEL $label$1
	return ($2 - ($3 & [255]))
}

void .FUNC $228 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [64])
	*([0] + [4]) = $14
	CALL eosio_assert(((int_32)*(($1 + [92])) == (int_32)$0), [1024])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1072])
	*(($13 = $14) + [24]) = *(($1 + [80]))
	*($13 + [32]) = *(($1 + [32]))
	*($13 + [40]) = *(($1 + [40]))
	$11 = [48]
	$7 = *(($3 + [4]))
	$12 = *($7 + [40])
	$6 = *($1)
	$3 = *(*($3) + [4])
	$9 = *($3 + [64])
	$8 = *(($3 + [72]))
	CALL eosio_assert(((int_64)*(($7 + [48])) == (int_64)$8), [2976])
	$12 = (int_64)
	CALL eosio_assert(((int_64)$12($9 - $12)) > (int_64)-4611686018427387904), [3024])
	CALL eosio_assert(((int_64)$12 < (int_64)4611686018427387904), [3056])
	*(($1 + [72])) = $8
	*($1 + [64]) = $12
	CALL eosio_assert(((int_64)$6 == (int_64)*($1)), [1136])
	$7 = *($1 + [48])
	$3 = *(($1 + [52]))
	$10 = ($3 - $7)
	$12 = (CASTING uint_64)(uint_32 int_32($10 >> [4]))
	$5 = ($13 + [40])
	$4 = ($13 + [32])
	
.LOOP $label$1:
	$11 = ($11 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$11 = (($10 & [-16]) + $11)
	
.LABEL $label$2
	$3 = ($11 + [26])
	if ( ($3 <= [513]) ){ goto $label$4 }
	$11 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$11 = ($14 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $11
	
.LABEL $label$3
	*($13 + [12]) = $11
	*($13 + [8]) = $11
	*($13 + [16]) = ($11 + $3)
	CALL $128(($13 + [8]), $1)
	CALL db_update_i64(*($1 + [96]), $2, $11, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($11)
	
.LABEL $label$5
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($13 + [56]) = *(($1 + [80]))
	if ( (CALL memcmp(($13 + [24]), ($13 + [56]), [8]) == 0) ){ goto $label$7 }
	$11 = *($1 + [100])
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$8 }
	$11 = CALL db_idx_double_find_primary(*($0), *($0 + [8]), (int_64)-3012230666864558080, ($13 + [48]), $6)
	*(($1 + [100])) = $11
	
.LABEL $label$8
	CALL db_idx_double_update($11, $2, ($13 + [56]))
	
.LABEL $label$7
	*($13 + [56]) = *(($1 + [32]))
	if ( (CALL memcmp($4, ($13 + [56]), [8]) == 0) ){ goto $label$9 }
	$3 = ($1 + [104])
	$11 = *($3)
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$10 }
	$11 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3012230666864558079, ($13 + [48]), $6)
	*($3) = $11
	
.LABEL $label$10
	CALL db_idx64_update($11, $2, ($13 + [56]))
	
.LABEL $label$9
	*($13 + [56]) = *(($1 + [40]))
	if ( (CALL memcmp($5, ($13 + [56]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [108])
	$11 = *($1)
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$12 }
	$11 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3012230666864558078, ($13 + [48]), $6)
	*($1) = $11
	
.LABEL $label$12
	CALL db_idx64_update($11, $2, ($13 + [56]))
	
.LABEL $label$11
	*([0] + [4]) = ($13 + [64])
}

void .FUNC $229 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	$8 = *($0 + [4])
	*($1) = *(*(*($8) + [4]))
	$2 = *($0)
	*($1 + [8]) = *(*(*($8) + [4]) + [8])
	$5 = *(*($8) + [4])
	*((($10 = $11) + [20])) = *(($5 + [28]))
	*(($4 = ($10 + [16]))) = *(($5 + [24]))
	*($10 + [8]) = *($5 + [16])
	*($10 + [12]) = *(($5 + [20]))
	*(($1 + [24])) = *($4)
	*($1 + [16]) = *($10 + [8])
	*($1 + [32]) = *(*(*($8) + [4]) + [32])
	*($1 + [40]) = *(*(*($8) + [4]) + [40])
	$5 = *($8)
	*($10 + [8]) = (int_64)0
	$8 = [0]
	*($10 + [16]) = [0]
	$5 = *($5 + [4])
	$3 = (*(($5 + [52])) - *($5 + [48]))
	$4 = int_32($3 >> [4])
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $295($3)
	*(($10 + [16])) = ($8 + ($4 << [4]))
	*($10 + [8]) = $8
	*($10 + [12]) = $8
	$4 = *(($5 + [48]))
	$5 = (*(($5 + [52])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $4, $5)
	$4 = ($8 + $5)
	*($10 + [12]) = $4
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$2 
	
.LABEL $label$3
	$4 = $8
	
.LABEL $label$2
	$5 = ($1 + [48])
	if ( ((int_32)$5 == (int_32)($10 + [8])) ){ goto $label$5 }
	CALL $53($5, $8, $4)
	$8 = *($10 + [8])
	
.LABEL $label$5
	if ( ($8 == 0) ){ goto $label$6 }
	*($10 + [12]) = $8
	CALL $297($8)
	
.LABEL $label$6
	$8 = [48]
	$4 = *(($1 + [48]))
	$5 = *(($1 + [52]))
	$3 = ($5 - $4)
	$9 = (CASTING uint_64)(uint_32 int_32($3 >> [4]))
	
.LOOP $label$7:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$8 }
	$8 = (($3 & [-16]) + $8)
	
.LABEL $label$8
	$5 = ($8 + [1])
	if ( ($5 <= [513]) ){ goto $label$10 }
	$8 = CALL malloc($5)
	goto $label$9 
	
.LABEL $label$10
	$8 = ($11 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$9
	*($10 + [12]) = $8
	*($10 + [8]) = $8
	*($10 + [16]) = ($8 + $5)
	CALL $230(($10 + [8]), $1)
	$9 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)6787602122293641216, *(*($0 + [8])), $9, $8, $5)
	if ( ($5 <= [513]) ){ goto $label$11 }
	CALL free($8)
	
.LABEL $label$11
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$12 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$8 = ($2 + [8])
	$9 = *($8)
	$0 = *(($0 + [8]))
	$6 = *($0)
	$7 = *($1)
	*($10 + [24]) = *(($1 + [32]))
	*($1 + [72]) = CALL db_idx64_store($9, (int_64)6787602122293641216, $6, $7, ($10 + [24]))
	$9 = *($0)
	$6 = *($8)
	$7 = *($1)
	*($10 + [24]) = *(($1 + [40]))
	*(($1 + [76])) = CALL db_idx64_store($6, (int_64)6787602122293641217, $9, $7, ($10 + [24]))
	*([0] + [4]) = ($10 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $316(($10 + [8]))
}

int_64 .FUNC _ZNK5eosio6ulbook11primary_keyEv (int_32 $0)
{
	return *($0)
}

void .FUNC _ZN5eosio6usbook10set_activeEb (int_32 $0, int_32 $1)
{
	*($0 + [88]) = $1
}

void .FUNC $224 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx_double_lowerbound(*($8), *($8 + [8]), (int_64)-3012230666864558080, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*(($2 + [92])) == (int_32)$4), [752])
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$8 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-3012230666864558080, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$2 = CALL $148($4, $8)
	CALL eosio_assert(((int_32)*($2 + [92]) == (int_32)$4), [752])
	
.LABEL $label$4
	*($2 + [100]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $225 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	$8 = *($0 + [4])
	*($1) = *(*(*($8) + [4]))
	$2 = *($0)
	*($1 + [8]) = *(*(*($8) + [4]) + [8])
	$5 = *(*($8) + [4])
	*((($10 = $11) + [20])) = *(($5 + [28]))
	*(($4 = ($10 + [16]))) = *(($5 + [24]))
	*($10 + [8]) = *($5 + [16])
	*($10 + [12]) = *(($5 + [20]))
	*(($1 + [24])) = *($4)
	*($1 + [16]) = *($10 + [8])
	*($1 + [32]) = *(*(*($8) + [4]) + [32])
	*($1 + [40]) = *(*(*($8) + [4]) + [40])
	$5 = *($8)
	*($10 + [8]) = (int_64)0
	$8 = [0]
	*($10 + [16]) = [0]
	$5 = *($5 + [4])
	$3 = (*(($5 + [52])) - *($5 + [48]))
	$4 = int_32($3 >> [4])
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $295($3)
	*(($10 + [16])) = ($8 + ($4 << [4]))
	*($10 + [8]) = $8
	*($10 + [12]) = $8
	$4 = *(($5 + [48]))
	$5 = (*(($5 + [52])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $4, $5)
	$4 = ($8 + $5)
	*($10 + [12]) = $4
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$2 
	
.LABEL $label$3
	$4 = $8
	
.LABEL $label$2
	$5 = ($1 + [48])
	if ( ((int_32)$5 == (int_32)($10 + [8])) ){ goto $label$5 }
	CALL $53($5, $8, $4)
	$8 = *($10 + [8])
	
.LABEL $label$5
	if ( ($8 == 0) ){ goto $label$6 }
	*($10 + [12]) = $8
	CALL $297($8)
	
.LABEL $label$6
	$8 = [48]
	$4 = *(($1 + [48]))
	$5 = *(($1 + [52]))
	$3 = ($5 - $4)
	$9 = (CASTING uint_64)(uint_32 int_32($3 >> [4]))
	
.LOOP $label$7:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$8 }
	$8 = (($3 & [-16]) + $8)
	
.LABEL $label$8
	$5 = ($8 + [1])
	if ( ($5 <= [513]) ){ goto $label$10 }
	$8 = CALL malloc($5)
	goto $label$9 
	
.LABEL $label$10
	$8 = ($11 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$9
	*($10 + [12]) = $8
	*($10 + [8]) = $8
	*($10 + [16]) = ($8 + $5)
	CALL $230(($10 + [8]), $1)
	$9 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)6787602122293641216, *(*($0 + [8])), $9, $8, $5)
	if ( ($5 <= [513]) ){ goto $label$11 }
	CALL free($8)
	
.LABEL $label$11
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$12 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$8 = ($2 + [8])
	$9 = *($8)
	$0 = *(($0 + [8]))
	$6 = *($0)
	$7 = *($1)
	*($10 + [24]) = *(($1 + [32]))
	*($1 + [72]) = CALL db_idx64_store($9, (int_64)6787602122293641216, $6, $7, ($10 + [24]))
	$9 = *($0)
	$6 = *($8)
	$7 = *($1)
	*($10 + [24]) = *(($1 + [40]))
	*(($1 + [76])) = CALL db_idx64_store($6, (int_64)6787602122293641217, $9, $7, ($10 + [24]))
	*([0] + [4]) = ($10 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $316(($10 + [8]))
}

int_32 .FUNC $226 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = [0]
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1328])
	$8 = *($0 + [4])
	$6 = *($8 + [100])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$1 }
	$6 = *(*($0))
	$6 = CALL db_idx_double_find_primary(*($6), *($6 + [8]), (int_64)-3012230666864558080, ($9 + [8]), *($8))
	*(*(($0 + [4])) + [100]) = $6
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx_double_next($6, ($9 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$3 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*(($7 + [92])) == (int_32)$2), [752])
	goto $label$5 
	
.LABEL $label$6
	$7 = CALL $148($2, CALL $fimport$17(*($2), *($2 + [8]), (int_64)-3012230666864558080, $3))
	CALL eosio_assert(((int_32)*($7 + [92]) == (int_32)$2), [752])
	
.LABEL $label$5
	*($7 + [100]) = $1
	
.LABEL $label$2
	*(($0 + [4])) = $7
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $227 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $295(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $295([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $167(($8 + [28]), [8])
	$2 = *($8 + [28])
	CALL eosio_assert(((int_32)(*($2) - $2) > (int_32)[7]), [1200])
	CALL memcpy($2, $4, [8])
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $297($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $297($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $297($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC _ZN5eosio7chintai20transfer_lease_orderERNS_5orderE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [96])
	*([0] + [4]) = $10
	$3 = *($1 + [8])
	$2 = ($0 + [56])
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$15()), [912])
	*(($5 = CALL $295([80])) + [24]) = (int_64)1397703940
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [16])
	$4 = ($5 + [16])
	$7 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$9 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [80])
	*($5 + [64]) = $2
	*($5) = *($1)
	*($5 + [8]) = *(($1 + [8]))
	$7 = *(($1 + [32]))
	*(($4 + [8])) = $7
	*(($10 + [8])) = $7
	$7 = *($1 + [24])
	*($4) = $7
	*($10) = $7
	*($5 + [32]) = *($1 + [80])
	*($5 + [40]) = *($1 + [72])
	*($5 + [56]) = *($1 + [128])
	*($10 + [80]) = ($10 + [57])
	*($10 + [76]) = $10
	*($10 + [72]) = $10
	CALL $221(($10 + [72]), $5)
	$7 = *($5)
	$8 = ($0 + [64])
	*($5 + [68]) = CALL db_store_i64(*($8), (int_64)6653061481472458752, $3, $7, $10, [57])
	$9 = ($0 + [72])
	if ( (uint_64)($7 <= *($9)) ){ goto $label$6 }
	*($9) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$7 = *($8)
	$6 = *($5)
	*($10 + [88]) = *(($5 + [32]))
	*($5 + [72]) = CALL db_idx64_store($7, (int_64)6653061481472458752, $3, $6, ($10 + [88]))
	$7 = *($8)
	$6 = *($5)
	*($10 + [88]) = *(($5 + [40]))
	*($5 + [76]) = CALL db_idx64_store($7, (int_64)6653061481472458753, $3, $6, ($10 + [88]))
	*($10 + [72]) = $5
	$7 = *($5)
	*($10) = $7
	$9 = *(($5 + [68]))
	*($10 + [88]) = $9
	$4 = ($0 + [84])
	$8 = *($4)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [88]))) ){ goto $label$8 }
	*($8 + [8]) = $7
	*($8 + [16]) = $9
	*($10 + [72]) = [0]
	*($8) = $5
	*($4) = ($8 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $135(($0 + [80]), ($10 + [72]), $10, ($10 + [88]))
	
.LABEL $label$7
	$8 = *($10 + [72])
	*($10 + [72]) = [0]
	if ( ($8 == 0) ){ goto $label$9 }
	CALL $297($8)
	
.LABEL $label$9
	*($10 + [16]) = (int_64)-1
	*($10 + [24]) = [0]
	$7 = *($0)
	*($10) = $7
	$3 = *(($1 + [80]))
	*($10 + [8]) = $3
	*(($8 = ($10 + [28]))) = [0]
	*(($10 + [32])) = [0]
	*(($10 + [38])) = [0]
	*($10 + [36]) = [0]
	$5 = CALL db_find_i64($7, $3, (int_64)-3146771307685740544, *($1))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$10 }
	CALL eosio_assert(((int_32)*(CALL $138($10, $5) + [96]) == (int_32)$10), [752])
	$7 = *($1)
	$9 = *(($10 + [24]))
	$1 = *($8)
	if ( ((int_32)$1 == (int_32)$9) ){ goto $label$11 }
	$8 = ($1 + [-24])
	$0 = ([0] - $9)
	
.LOOP $label$12:
	if ( ((int_64)*(*($8)) == (int_64)$7) ){ goto $label$11 }
	$1 = $8
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_32)($5 + $0) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)$1 == (int_32)$9) ){ goto $label$14 }
	$8 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [96]) == (int_32)$10), [752])
	goto $label$13 
	
.LABEL $label$14
	$8 = [0]
	$5 = CALL db_find_i64(*($10), *(($10 + [8])), (int_64)-3146771307685740544, $7)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$13 }
	$8 = CALL $138($10, $5)
	CALL eosio_assert(((int_32)*($8 + [96]) == (int_32)$10), [752])
	
.LABEL $label$13
	$5 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($5, [1280])
	CALL eosio_assert($5, [1328])
	$5 = CALL db_next_i64(*($8 + [100]), ($10 + [72]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$15 }
	CALL $138($10, $5)
	
.LABEL $label$15
	CALL $139($10, $8)
	
.LABEL $label$10
	$1 = *($10 + [24])
	if ( ($1 == 0) ){ goto $label$16 }
	$0 = ($10 + [28])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$20 }
	CALL $297($5)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$19 }
	$8 = *(($10 + [24]))
	goto $label$17 
	
.LABEL $label$18
	$8 = $1
	
.LABEL $label$17
	*($0) = $1
	CALL $297($8)
	
.LABEL $label$16
	*([0] + [4]) = ($10 + [96])
}

int_32 .FUNC $221 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [48])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1200])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC _ZN5eosio7chintai24fulfill_lease_from_leaseERNS_5orderERNS_6usbookE (int_32 $0, int_32 $1, int_32 $2)
{
}

void .FUNC _ZN5eosio6usbook12set_durationEy (int_32 $0, int_64 $1)
{
	*($0 + [32]) = $1
}

void .FUNC _ZN5eosio9stakebook18set_airdrop_tokensERKNSt3__16vectorINS_5assetENS1_9allocatorIS3_EEEE (int_32 $0, int_32 $1)
{
	$0 = ($0 + [48])
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$1 }
	CALL $53($0, *($1), *($1 + [4]))
	
.LABEL $label$1
}

int_64 .FUNC _ZNK5eosio6usbook12get_durationEv (int_32 $0)
{
	return *($0 + [32])
}

int_64 .FUNC _ZNK5eosio6usbook23get_order_creation_timeEv (int_32 $0)
{
	return *($0 + [40])
}

int_64 .FUNC _ZNK5eosio6usbook8get_userEv (int_32 $0)
{
	return *($0 + [8])
}

void .FUNC _ZNK5eosio6usbook12get_quantityEv (int_32 $0, int_32 $1)
{
	*($0) = *($1 + [16])
	*(($0 + [8])) = *(($1 + [24]))
}

int_32 .FUNC _ZNK5eosio6usbook13get_autorenewEv (int_32 $0)
{
	return *($0 + [89])
}

void .FUNC _ZN5eosio6usbook6set_idEy (int_32 $0, int_64 $1)
{
	*($0) = $1
}

void .FUNC _ZNK5eosio6usbook18get_airdrop_tokensEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = (*(($1 + [52])) - *($1 + [48]))
	$2 = int_32($3 >> [4])
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$1 }
	$3 = CALL $295($3)
	*($0) = $3
	*(($4 = ($0 + [4]))) = $3
	*(($0 + [8])) = ($3 + ($2 << [4]))
	$1 = *(($1 + [48]))
	$0 = (*(($1 + [52])) - $1)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($3, $1, $0)
	*($4) = (*($4) + $0)
	
.LABEL $label$2
	return (unreachable)
	
.LABEL $label$1
	CALL $316($0)
}

int_32 .FUNC _ZNK5eosio6usbook10get_activeEv (int_32 $0)
{
	return *($0 + [88])
}

void .FUNC _ZN5eosio6usbook8set_userEy (int_32 $0, int_64 $1)
{
	*($0 + [8]) = $1
}

void .FUNC _ZN5eosio6usbook12set_quantityERKNS_5assetE (int_32 $0, int_32 $1)
{
	*($0 + [16]) = *($1)
	*(($0 + [24])) = *(($1 + [8]))
}

void .FUNC _ZN5eosio7chintai17update_extensionsERNS_11transactionENS0_22transaction_extensionsEb (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [48])
	*([0] + [4]) = $15
	$4 = ($1 + [36])
	$14 = *(($1 + [40]))
	$8 = *($1 + [36])
	
.LOOP $label$11:
	$13 = $8
	if ( ((int_32)$13 == (int_32)$14) ){ goto $label$10 }
	$5 = *($13 + [8])
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1728]
	$11 = (int_64)0
	
.LOOP $label$12:
	if ( ((uint_64)$10 > (uint_64)(int_64)9) ){ goto $label$17 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$6 = ($6 + [165])
	goto $label$15 
	
.LABEL $label$17
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$14
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$13
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$12 }
	$8 = ($13 + [40])
	if ( ((int_64)$5 != (int_64)$11) ){ goto $label$11 }
	if ( ((int_32)$8 == (int_32)$14) ){ goto $label$9 }
	$7 = ([0] - $14)
	
.LOOP $label$18:
	*(($13 + [8])) = *(($13 + [48]))
	$8 = ($13 + [40])
	*($13) = *($8)
	$6 = ($13 + [16])
	$14 = *($6)
	if ( ($14 == 0) ){ goto $label$20 }
	*(($13 + [20])) = $14
	CALL $297($14)
	*(($14 = ($13 + [24]))) = [0]
	*($6) = (int_64)0
	goto $label$19 
	
.LABEL $label$20
	$14 = ($13 + [24])
	
.LABEL $label$19
	$3 = ($13 + [56])
	*($6) = *($3)
	$6 = ($13 + [64])
	*($14) = *($6)
	*($6) = [0]
	*($3) = (int_64)0
	$6 = ($13 + [28])
	$14 = *($6)
	if ( ($14 == 0) ){ goto $label$22 }
	*(($13 + [32])) = $14
	CALL $297($14)
	*(($14 = ($13 + [36]))) = [0]
	*($6) = (int_64)0
	goto $label$21 
	
.LABEL $label$22
	$14 = ($13 + [36])
	
.LABEL $label$21
	$3 = ($13 + [68])
	*($6) = *($3)
	$6 = ($13 + [76])
	*($14) = *($6)
	*($6) = [0]
	*($3) = (int_64)0
	$13 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-40]) ){ goto $label$18 }
	$14 = *(($1 + [40]))
	if ( ((int_32)$14 != (int_32)$8) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	if ( ($3 == 0) ){ goto $label$1 }
	$5 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1616]
	$11 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$28 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$6 = ($6 + [165])
	goto $label$26 
	
.LABEL $label$28
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$24
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$23 }
	*($15 + [24]) = $11
	*($15 + [16]) = $5
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1728]
	$11 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$10 > (uint_64)(int_64)9) ){ goto $label$34 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$6 = ($6 + [165])
	goto $label$32 
	
.LABEL $label$34
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$30
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$29 }
	*($15 + [8]) = $11
	if ( ((uint_32)$14 >= (uint_32)*(($1 + [44]))) ){ goto $label$6 }
	*($14 + [8]) = $11
	*($14) = $5
	*($14 + [16 align=4]) = (int_64)0
	*(($6 = ($14 + [24]))) = [0]
	$8 = CALL $295([16])
	*($14 + [16]) = $8
	$13 = ($8 + [16])
	*($6) = $13
	*(($8 + [8])) = *((($15 + [16]) + [8]))
	*($8) = *($15 + [16])
	*(($14 + [20])) = $13
	*($14 + [28]) = [0]
	*(($14 + [32])) = [0]
	*(($14 + [36])) = [0]
	$8 = *($2 + [36])
	$6 = ( *(($2 + [40])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($6 + [29])
	$10 = (CASTING uint_64)(uint_32 $6)
	$6 = ($14 + [28])
	
.LOOP $label$35:
	$8 = ($8 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$35 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $167($6, $8)
	$6 = *(($14 + [32]))
	$8 = *(($14 + [28]))
	goto $label$2 
	
.LABEL $label$9
	$8 = $13
	
.LABEL $label$8
	
.LOOP $label$36:
	$6 = *(($14 + [-12]))
	if ( ($6 == 0) ){ goto $label$37 }
	*(($14 + [-8])) = $6
	CALL $297($6)
	
.LABEL $label$37
	$6 = ($14 + [-40])
	$13 = *(($14 + [-24]))
	if ( ($13 == 0) ){ goto $label$38 }
	*(($14 + [-20])) = $13
	CALL $297($13)
	
.LABEL $label$38
	$14 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$36 }
	
.LABEL $label$7
	*(($1 + [40])) = $8
	$5 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$6 = [1616]
	$11 = (int_64)0
	
.LOOP $label$39:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$44 }
	$13 = *($6)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$13 = ($13 + [165])
	goto $label$42 
	
.LABEL $label$44
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$43
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$41
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$40
	$6 = ($6 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$39 }
	*($15 + [24]) = $11
	*($15 + [16]) = $5
	$10 = (int_64)0
	$9 = (int_64)59
	$6 = [1728]
	$11 = (int_64)0
	
.LOOP $label$45:
	if ( ((uint_64)$10 > (uint_64)(int_64)9) ){ goto $label$50 }
	$13 = *($6)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$49 }
	$13 = ($13 + [165])
	goto $label$48 
	
.LABEL $label$50
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$49
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$48
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$47
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$46
	$6 = ($6 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$45 }
	*($15 + [8]) = $11
	if ( ((uint_32)$8 >= (uint_32)*(($1 + [44]))) ){ goto $label$51 }
	*($8 + [8]) = $11
	*($8) = $5
	*($8 + [16 align=4]) = (int_64)0
	*(($13 = ($8 + [24]))) = [0]
	$6 = CALL $295([16])
	*($8 + [16]) = $6
	$14 = ($6 + [16])
	*($13) = $14
	*(($6 + [8])) = *((($15 + [16]) + [8]))
	*($6) = *($15 + [16])
	*(($8 + [20])) = $14
	*($8 + [28]) = [0]
	*(($8 + [32])) = [0]
	*(($8 + [36])) = [0]
	$6 = *($2 + [36])
	$13 = ( *(($2 + [40])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($13 + [29])
	$10 = (CASTING uint_64)(uint_32 $13)
	$13 = ($8 + [28])
	
.LOOP $label$52:
	$6 = ($6 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$52 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $167($13, $6)
	$6 = *(($8 + [32]))
	$8 = *(($8 + [28]))
	goto $label$4 
	
.LABEL $label$51
	CALL $260($4, ($15 + [16]), $0, ($15 + [8]), $2)
	goto $label$1 
	
.LABEL $label$6
	CALL $260($4, ($15 + [16]), $0, ($15 + [8]), $2)
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$8 = [0]
	
.LABEL $label$4
	*($15 + [36]) = $8
	*($15 + [32]) = $8
	*($15 + [40]) = $6
	CALL $186(($15 + [32]), $2)
	*(($8 = ($1 + [40]))) = (*($8) + [40])
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($15 + [36]) = $8
	*($15 + [32]) = $8
	*($15 + [40]) = $6
	CALL $186(($15 + [32]), $2)
	*(($8 = ($1 + [40]))) = (*($8) + [40])
	
.LABEL $label$1
	*([0] + [4]) = ($15 + [48])
}

void .FUNC _ZN5eosio7chintai10extensionsEylyybNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6)
{
	CALL require_auth(*($0))
}

int_32 .FUNC $312 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$3 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$4 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$4 = *($0 + [4])
	
.LABEL $label$3
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$5 }
	CALL $313($0, $3, (($1 - $3) + $4), $4, $4, [0], [0])
	$5 = *($0)
	
.LABEL $label$5
	if ( ($5 & [1]) ){ goto $label$7 }
	$5 = ($0 + [1])
	goto $label$6 
	
.LABEL $label$7
	$5 = *($0 + [8])
	
.LABEL $label$6
	CALL memset(($5 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($1 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $1
	
.LABEL $label$8
	*(($5 + $1)) = [0]
	
.LABEL $label$1
	return $0
}

void .FUNC $313 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $295($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $297($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC _ZNSt3__19to_stringEx (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [12432], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $312(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $312(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC _ZNSt3__19to_stringEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [12448], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $312(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $312(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $316 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $317 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC _ZN5eosio7chintai8activateENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$2 = *(($0 + [240]))
	$6 = *(($0 + [244]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( (int_64)(*(*($5)) == 0) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [216])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)$4), [752])
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$6 = CALL db_find_i64(*(($0 + [216])), *(($0 + [224])), (int_64)6761222076679323648, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $163($4, $6)
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)$4), [752])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [2064])
	CALL eosio_assert(((int_32)*($5 + [8]) ^ (int_32)[1]), [2160])
	CALL $318($7, $1)
	CALL _ZN5eosio7chintai10make_orderENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $7)
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $297(*($7 + [8]))
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $250 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$6 = *($0)
	$3 = int_32(($7 - $6) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$3 }
	$5 = [268435455]
	$2 = ($2 - $6)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = int_32($2 >> [3])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $295(($5 << [4]))
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$1 
	
.LABEL $label$5
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $316($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$7 = ($7 - $6)
	$3 = ($2 + ($3 << [4]))
	$4 = ($3 - $7)
	$1 = ($3 + ($1 << [4]))
	$5 = ($2 + ($5 << [4]))
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($4, $6, $7)
	$6 = *($0)
	
.LABEL $label$7
	*($0) = $4
	*(($0 + [4])) = $1
	*(($0 + [8])) = $5
	if ( ($6 == 0) ){ goto $label$8 }
	CALL $297($6)
	
.LABEL $label$8
	(unreachable)
}

void .FUNC _ZN5eosio7chintai2onERKNS_5token13transfer_argsEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$4 = *($0)
	if ( ((int_64)*($1) == (int_64)$4) ){ goto $label$1 }
	if ( ((int_64)*($1 + [8]) != (int_64)$4) ){ goto $label$1 }
	$5 = *($1 + [32])
	$3 = CALL strlen([3744])
	if ( ((int_32)$3 != (int_32)( *(($1 + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$2 }
	if ( (CALL $310(($1 + [32]), [0], [-1], [3744], $3) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([1], [16])
	$4 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$3 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$3 = [0]
	
.LABEL $label$3
	CALL eosio_assert($3, [80])
	if ( ((int_64)*(($1 + [24])) != (int_64)1397703940) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = (int_64)59
	$5 = [1536]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$4 > (uint_64)(int_64)10) ){ goto $label$13 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((int_64)$4 == (int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$9
	$5 = ($5 + [1])
	$6 = ((int_64)$6 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$2), [3760])
	CALL _ZN5eosio7chintai16receive_transferERKNS_5token13transfer_argsE($0, $1)
	
.LABEL $label$1
}

void .FUNC _ZN5eosio7chintai11reminactiveEy (int_32 $0, int_64 $1)
{
	CALL require_auth(*($0))
}

void .FUNC _ZN5eosio7chintai14get_extensionsERKNS_11transactionE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [64])
	*([0] + [4]) = $11
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [36]) = [0]
	*(($0 + [40])) = [0]
	*(($0 + [44])) = [0]
	$3 = *(($2 + [40]))
	$6 = *($2 + [36])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$4 = *($1)
	
.LOOP $label$3:
	if ( ((int_64)*($6) != (int_64)$4) ){ goto $label$4 }
	$5 = *($6 + [8])
	$8 = (int_64)0
	$7 = (int_64)59
	$2 = [1728]
	$9 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$8 > (uint_64)(int_64)9) ){ goto $label$10 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$1 = ($1 + [165])
	goto $label$8 
	
.LABEL $label$10
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$6
	$2 = ($2 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$5 }
	if ( ((int_64)$5 == (int_64)$9) ){ goto $label$2 }
	
.LABEL $label$4
	$6 = ($6 + [40])
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*(($11 + [40])) = [0]
	*($11) = (int_64)0
	*($11 + [8]) = [0]
	*($11 + [36]) = [0]
	$1 = *(($6 + [32]))
	$2 = *($6 + [28])
	*(($6 = ($11 + [44]))) = [0]
	*($11 + [52]) = $2
	*($11 + [48]) = $2
	*($11 + [56]) = $1
	CALL $256(($11 + [48]), $11)
	*(($2 = CALL memcpy($0, $11, [33])) + [36]) = [0]
	CALL $302(($2 + [36]), [0])
	*(($2 + [44])) = *($6)
	*($2 + [36 align=4]) = *($11 + [36 align=4])
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [64])
}

int_32 .FUNC _ZNK5eosio7chintai13get_orderbookEv (int_32 $0)
{
	return ($0 + [8])
}

int_32 .FUNC $257 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $247($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $302($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $295($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $302($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $297($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $299($7)
	return (unreachable)
}

int_32 .FUNC $256 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1248])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [1248])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*($1 + [32]) = ((int_32)*($3 + [15]) != (int_32)[0])
	$0 = CALL $257($0, ($1 + [36]))
	*([0] + [4]) = ($3 + [16])
	return $0
}

int_32 .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1216])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $295([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1248])
	CALL memcpy($5, $6, [8])
	*($5 + [12]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)-5969209044777304064
	$6 = *($5 + [12])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)-5969209044777304064
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $182(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $297($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

void .FUNC $180 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($2 + [4]), ($3 + [48]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($2 + [4]), ($0 + [56]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($2 + [4]), ($0 + [64]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$1 = *($1)
	*($4 + [15]) = *($0 + [72])
	CALL eosio_assert(((int_32)(*($1 + [8]) - *($1 + [4])) > (int_32)[0]), [1200])
	CALL memcpy(*($1 + [4]), ($4 + [15]), [1])
	*($1 + [4]) = (*($1 + [4]) + [1])
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1216])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $295([120])
	$4 = CALL $116($6)
	*($6 + [96]) = $0
	CALL $141(($8 + [32]), $4)
	*($6 + [104]) = [-1]
	*($6 + [100]) = $1
	*($6 + [108]) = [-1]
	*($6 + [112]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [100])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $118(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $297($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $139 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1408])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1472])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $297($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $297($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [100]))
	*($9 + [4]) = $1
	*($9) = $0
	*($9 + [8]) = $9
	CALL $140(($9 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]))
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $269 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$9 = (*([0] + [4]) - [112])
	$11 = $9
	*([0] + [4]) = $9
	$2 = *($1 + [4])
	$10 = *($1)
	$1 = [0]
	$7 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$7 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$2
	CALL read_action_data($7, $3)
	
.LABEL $label$1
	*(($11 + [40])) = (int_64)1397703940
	*($11 + [32]) = (int_64)0
	*($11 + [24]) = (int_64)0
	CALL eosio_assert([1], [16])
	$8 = (int_64)5459781
	
.LOOP $label$5:
	$9 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$9 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($9, [80])
	*($11 + [56]) = (int_64)0
	*($11 + [48]) = (int_64)0
	*($11 + [100]) = $7
	*($11 + [96]) = $7
	*($11 + [104]) = ($7 + $3)
	*($11 + [64]) = ($11 + [96])
	*($11 + [80]) = ($11 + [24])
	CALL $285(($11 + [80]), ($11 + [64]))
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($7)
	
.LABEL $label$8
	*(($1 = (($11 + [64]) + [8]))) = *(($11 + [40]))
	$8 = *($11 + [24])
	*($11 + [64]) = *($11 + [32])
	$5 = *(($11 + [56]))
	$4 = *(($11 + [48]))
	*((($11 + [80]) + [8])) = *($1)
	*($11 + [80]) = *($11 + [64])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$10 = *((*($1) + $10))
	
.LABEL $label$9
	$6 = *((($11 + [80]) + [8]))
	*((($11 + [96]) + [8])) = $6
	*((($11 + [8]) + [8])) = $6
	$6 = *($11 + [80])
	*($11 + [96]) = $6
	*($11 + [8]) = $6
	CALL void $1((int_32 $8), (int_64 ($11 + [8])), (int_32 $4), (int_64 $5), (int_64 $10))
	*([0] + [4]) = ($11 + [112])
	return [1]
}

int_32 .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $132($0, ($1 + [48]))
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [1248])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*($1 + [60]) = ((int_32)*($3 + [15]) != (int_32)[0])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $131 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $295(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [48])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [52])) = $6
	CALL $297($6)
	
.LABEL $label$11
	CALL $297($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $297($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [1264])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $133($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [1248])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [1248])
	CALL memcpy(($7 + [8]), *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $6) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$8 = *($0)
	$2 = int_32(($6 - $8) >> [4])
	$3 = ($2 + $1)
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$4 }
	$6 = [268435455]
	$7 = ($7 - $8)
	if ( ((uint_32)int_32($7 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$6 = int_32($7 >> [3])
	$6 = ( $3 ? $6 : ($6 <= $3) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$7 = CALL $295(($6 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$8 = ($0 + [4])
	
.LOOP $label$8:
	*($6 + [8]) = (int_64)1397703940
	*($6) = (int_64)0
	CALL eosio_assert([1], [16])
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$7 = [0]
	
.LABEL $label$9
	CALL eosio_assert($7, [80])
	$6 = (*($8) + [16])
	*($8) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$7 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $316($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$3 = ($7 + ($6 << [4]))
	$2 = ($7 + ($2 << [4]))
	$8 = $2
	
.LOOP $label$14:
	*($8 + [8]) = (int_64)1397703940
	*($8) = (int_64)0
	CALL eosio_assert([1], [16])
	$5 = (uint_64)*($8 + [8]) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$7 = [0]
	
.LABEL $label$15
	CALL eosio_assert($7, [80])
	$8 = ($8 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$14 }
	$6 = *($0)
	$4 = ($0 + [4])
	$7 = (*($4) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$20 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$20
	*($0) = $1
	*($4) = $8
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$1 }
	CALL $297($6)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [1248])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [48]) = ((int_32)*($3 + [15]) != (int_32)[0])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $135 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $295(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $297($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $297($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN5eosio17orderbook_manager23cancel_lease_order_userERKNS_6ulbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE (int_32 $0, int_32 $1, int_32 $2)
{
	CALL require_auth(*($1 + [8]))
	CALL _ZN5eosio17orderbook_manager18cancel_lease_orderERKNS_6ulbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($0, $1, $1)
}

void .FUNC _ZN5eosio17orderbook_manager18cancel_lease_orderERKNS_6ulbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	*($8 + [16]) = (int_64)-1
	*($8 + [24]) = [0]
	$3 = *($0)
	*($8) = $3
	$7 = *($1 + [32])
	*($8 + [8]) = $7
	*(($0 = ($8 + [28]))) = [0]
	*(($8 + [32])) = [0]
	*(($8 + [38])) = [0]
	*($8 + [36]) = [0]
	$6 = CALL db_find_i64($3, $7, (int_64)-3146771307685740544, *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $138($8, $6) + [96]) == (int_32)$8), [752])
	$3 = *($1)
	$4 = *(($8 + [24]))
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$2 }
	$1 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$3:
	if ( ((int_64)*(*($1)) == (int_64)$3) ){ goto $label$2 }
	$6 = $1
	$0 = ($1 + [-24])
	$1 = $0
	if ( ((int_32)($0 + $5) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$8), [752])
	goto $label$4 
	
.LABEL $label$5
	$1 = [0]
	$0 = CALL db_find_i64(*($8), *(($8 + [8])), (int_64)-3146771307685740544, $3)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $138($8, $0)
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$8), [752])
	
.LABEL $label$4
	$0 = ((int_32)$1 != (int_32)[0])
	CALL eosio_assert($0, [1280])
	CALL eosio_assert($0, [1328])
	$0 = CALL db_next_i64(*($1 + [100]), ($8 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	CALL $138($8, $0)
	
.LABEL $label$6
	CALL $139($8, $1)
	$6 = *($8 + [24])
	if ( ($6 == 0) ){ goto $label$1 }
	$5 = ($8 + [28])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $297($0)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$9 }
	$1 = *(($8 + [24]))
	goto $label$7 
	
.LABEL $label$8
	$1 = $6
	
.LABEL $label$7
	*($5) = $6
	CALL $297($1)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [48])
}

void .FUNC _ZN5eosio5order17set_quantity_leftENS_5assetE (int_32 $0, int_32 $1)
{
	*($0 + [40]) = *($1)
	*(($0 + [48])) = *(($1 + [8]))
}

int_32 .FUNC $300 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $301($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC _ZN5eosio7chintai11cancelorderEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_64 $31
	int_64 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_64 $36
	int_64 $37
	int_32 $38
	$38 = (*([0] + [4]) - [256])
	*([0] + [4]) = $38
	$19 = *(($0 + [240]))
	$29 = *(($0 + [244]))
	if ( ((int_32)$29 == (int_32)$19) ){ goto $label$1 }
	$30 = ($29 + [-24])
	$10 = ([0] - $19)
	
.LOOP $label$2:
	if ( (int_64)(*(*($30)) == 0) ){ goto $label$1 }
	$29 = $30
	$18 = ($30 + [-24])
	$30 = $18
	if ( ((int_32)($18 + $10) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$18 = ($0 + [216])
	if ( ((int_32)$29 == (int_32)$19) ){ goto $label$4 }
	$30 = *(($29 + [-24]))
	CALL eosio_assert(((int_32)*($30 + [16]) == (int_32)$18), [752])
	goto $label$3 
	
.LABEL $label$4
	$30 = [0]
	$29 = CALL db_find_i64(*(($0 + [216])), *(($0 + [224])), (int_64)6761222076679323648, (int_64)0)
	if ( ((int_32)$29 < (int_32)[0]) ){ goto $label$3 }
	$30 = CALL $163($18, $29)
	CALL eosio_assert(((int_32)*($30 + [16]) == (int_32)$18), [752])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$30 != (int_32)[0]), [2064])
	CALL eosio_assert(((int_32)*($30 + [8]) ^ (int_32)[1]), [2160])
	$4 = ($0 + [8])
	$9 = (($38 + [72]) + [16])
	$8 = (($38 + [56]) | [1])
	$7 = (($38 + [16]) + [28])
	$6 = (($38 + [72]) + [36])
	$5 = (($38 + [240]) | [1])
	$3 = (($38 + [160]) + [36])
	$2 = (($38 + [200]) + [36])
	$10 = (($38 + [72]) + [32])
	$24 = ($10 + [4])
	$26 = ($38 + [116])
	$27 = (($38 + [16]) + [20])
	$28 = ($38 + [112])
	$11 = (int_64)7
	$25 = [0]
	
.LOOP $label$8:
	$32 = ((int_64)$11 * (int_64)86400)
	*((($38 + [200]) + [8])) = $32
	*((($38 + [200]) + [16])) = (int_64)-1
	*(($20 = (($38 + [200]) + [24]))) = (int_64)0
	*((($38 + [200]) + [32])) = [0]
	$34 = *($0)
	*($38 + [200]) = $34
	*(($2 + [2])) = [0]
	*($2) = [0]
	*(($23 = (($38 + [160]) + [8]))) = $32
	*((($38 + [160]) + [16])) = (int_64)-1
	*(($21 = (($38 + [160]) + [24]))) = (int_64)0
	*((($38 + [160]) + [32])) = [0]
	*(($3 + [2])) = [0]
	*($3) = [0]
	*($38 + [160]) = $34
	$12 = [0]
	$30 = CALL db_find_i64($34, $32, (int_64)-3012230666864558080, $1)
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$9 }
	$12 = CALL $148(($38 + [200]), $30)
	CALL eosio_assert(((int_32)*($12 + [92]) == (int_32)($38 + [200])), [752])
	
.LABEL $label$9
	$17 = *($21)
	$22 = (($38 + [160]) + [28])
	$29 = *($22)
	if ( ((int_32)$29 == (int_32)$17) ){ goto $label$10 }
	$30 = ($29 + [-24])
	$19 = ([0] - $17)
	
.LOOP $label$11:
	if ( ((int_64)*(*($30)) == (int_64)$1) ){ goto $label$10 }
	$29 = $30
	$18 = ($30 + [-24])
	$30 = $18
	if ( ((int_32)($18 + $19) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$29 == (int_32)$17) ){ goto $label$13 }
	$29 = *(($29 + [-24]))
	CALL eosio_assert(((int_32)*($29 + [96]) == (int_32)($38 + [160])), [752])
	goto $label$12 
	
.LABEL $label$13
	$29 = [0]
	$30 = CALL db_find_i64(*($38 + [160]), *($23), (int_64)-3146771307685740544, $1)
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$12 }
	$29 = CALL $138(($38 + [160]), $30)
	CALL eosio_assert(((int_32)*($29 + [96]) == (int_32)($38 + [160])), [752])
	
.LABEL $label$12
	CALL eosio_assert([1], [16])
	$32 = (int_64)5459781
	$30 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $32) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$32 = (uint_64)$32 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$32) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$32 = (uint_64)$32 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$32) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$18 = [1]
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$18 = [0]
	
.LABEL $label$19
	CALL eosio_assert($18, [80])
	if ( ($12 == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL eosio_assert([0], [80])
	if ( $12 ){ goto $label$16 }
	
.LABEL $label$17
	if ( ($29 == 0) ){ goto $label$14 }
	CALL require_auth(*($29 + [8]))
	$13 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($29 + [48])) * (float_64)*($29 + [64])))
	CALL eosio_assert((uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [16])
	$32 = (int_64)5459781
	$30 = [0]
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $32) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$32 = (uint_64)$32 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$32) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	
.LOOP $label$28:
	$32 = (uint_64)$32 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$32) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	$18 = [1]
	$30 = ($30 + [1])
	if ( ((int_32)$30 < (int_32)[7]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	$18 = [0]
	
.LABEL $label$24
	CALL eosio_assert($18, [80])
	$16 = *($29 + [32])
	$15 = *(($29 + [8]))
	CALL require_auth($15)
	CALL _ZN5eosio17orderbook_manager18cancel_lease_orderERKNS_6ulbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($4, $29, $30)
	$36 = (int_64)0
	$19 = [0]
	$14 = (int_64)1397703940
	$37 = $1
	goto $label$15 
	
.LABEL $label$16
	CALL require_auth(*($12 + [8]))
	$14 = *(($12 + [72]))
	$16 = *($12 + [32])
	$15 = *($12 + [8])
	$13 = *($12 + [64])
	*(($18 = (($38 + [240]) + [8]))) = [0]
	*($38 + [240]) = (int_64)0
	$19 = ($12 + [52])
	$29 = (*($19) - *($12 + [48]))
	$30 = int_32($29 >> [4])
	if ( ($30 == 0) ){ goto $label$29 }
	if ( ((uint_32)$30 >= (uint_32)[268435456]) ){ goto $label$5 }
	$29 = CALL $295($29)
	*($18) = ($29 + ($30 << [4]))
	*($38 + [240]) = $29
	*($38 + [244]) = $29
	$18 = *(($12 + [48]))
	$30 = (*($19) - $18)
	if ( ((int_32)$30 < (int_32)[1]) ){ goto $label$30 }
	CALL memcpy($29, $18, $30)
	$17 = (*($38 + [244]) + $30)
	*($38 + [244]) = $17
	$29 = *($38 + [240])
	if ( ((int_32)$29 == (int_32)$17) ){ goto $label$30 }
	
.LOOP $label$31:
	$35 = *($0)
	$32 = (int_64)0
	$31 = (int_64)59
	$30 = [1616]
	$33 = (int_64)0
	
.LOOP $label$32:
	if ( ((uint_64)$32 > (uint_64)(int_64)5) ){ goto $label$37 }
	$18 = *($30)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$36 }
	$18 = ($18 + [165])
	goto $label$35 
	
.LABEL $label$37
	$34 = (int_64)0
	if ( ((uint_64)$32 <= (uint_64)(int_64)11) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$36
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$35
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$34
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$33
	$30 = ($30 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$34 | (int_64)$33)
	$31 = ((int_64)$31 + (int_64)-5)
	if ( ((int_64)$31 != (int_64)-6) ){ goto $label$32 }
	*((($38 + [16]) + [8])) = $33
	*($38 + [16]) = $35
	$32 = (int_64)0
	$31 = (int_64)59
	$30 = [1536]
	$33 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$43 }
	$18 = *($30)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$18 = ($18 + [165])
	goto $label$41 
	
.LABEL $label$43
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$39
	$30 = ($30 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$38 }
	$32 = (int_64)0
	$31 = (int_64)59
	$30 = [1936]
	$35 = (int_64)0
	
.LOOP $label$44:
	if ( ((uint_64)$32 > (uint_64)(int_64)7) ){ goto $label$49 }
	$18 = *($30)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$18 = ($18 + [165])
	goto $label$47 
	
.LABEL $label$49
	$34 = (int_64)0
	if ( ((uint_64)$32 <= (uint_64)(int_64)11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$45
	$30 = ($30 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$35 = ((int_64)$34 | (int_64)$35)
	$31 = ((int_64)$31 + (int_64)-5)
	if ( ((int_64)$31 != (int_64)-6) ){ goto $label$44 }
	*(($18 = (($38 + [56]) + [8]))) = [0]
	*($38 + [56]) = (int_64)0
	$30 = CALL strlen([1952])
	if ( ((uint_32)$30 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$30 >= (uint_32)[11]) ){ goto $label$52 }
	*($38 + [56]) = ($30 << [1])
	$19 = $8
	if ( $30 ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	$23 = (($30 + [16]) & [-16])
	$19 = CALL $295($23)
	*($18) = $19
	*($38 + [56]) = ($23 | [1])
	*($38 + [60]) = $30
	
.LABEL $label$51
	CALL memcpy($19, [1952], $30)
	
.LABEL $label$50
	*(($19 + $30)) = [0]
	*((($38 + [72]) + [8])) = $15
	*($38 + [72]) = *($0)
	*(($9 + [8])) = *(($29 + [8]))
	*($9) = *($29)
	*(($10 + [8])) = *($18)
	*($10) = *($38 + [56])
	*($38 + [56]) = [0]
	*($38 + [60]) = [0]
	*($18) = [0]
	$30 = CALL $204(($38 + [120]), ($38 + [16]), $33, $35, ($38 + [72]))
	if ( ((*($10) & [1]) == 0) ){ goto $label$53 }
	CALL $297(*($28))
	
.LABEL $label$53
	if ( ((*($38 + [56]) & [1]) == 0) ){ goto $label$54 }
	CALL $297(*($18))
	
.LABEL $label$54
	CALL $185(($38 + [72]), $30)
	$30 = *($38 + [72])
	CALL send_inline($30, (*($38 + [76]) - $30))
	$30 = *($38 + [72])
	if ( ($30 == 0) ){ goto $label$55 }
	*($38 + [76]) = $30
	CALL $297($30)
	
.LABEL $label$55
	$30 = *((($38 + [120]) + [28]))
	if ( ($30 == 0) ){ goto $label$56 }
	*((($38 + [120]) + [32])) = $30
	CALL $297($30)
	
.LABEL $label$56
	$30 = *((($38 + [120]) + [16]))
	if ( ($30 == 0) ){ goto $label$57 }
	*((($38 + [120]) + [20])) = $30
	CALL $297($30)
	
.LABEL $label$57
	$29 = ($29 + [16])
	if ( ((int_32)$29 != (int_32)$17) ){ goto $label$31 }
	$29 = *($38 + [240])
	
.LABEL $label$30
	if ( ($29 == 0) ){ goto $label$29 }
	*($38 + [244]) = $29
	CALL $297($29)
	
.LABEL $label$29
	CALL require_auth(*(($12 + [8])))
	CALL _ZN5eosio17orderbook_manager18cancel_stake_orderERKNS_6usbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($4, $12, $30)
	$37 = (int_64)0
	$19 = [1]
	$36 = $1
	
.LABEL $label$15
	$35 = *($0)
	$32 = (int_64)0
	$31 = (int_64)59
	$30 = [1616]
	$33 = (int_64)0
	
.LOOP $label$58:
	if ( ((uint_64)$32 > (uint_64)(int_64)5) ){ goto $label$63 }
	$18 = *($30)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$18 = ($18 + [165])
	goto $label$61 
	
.LABEL $label$63
	$34 = (int_64)0
	if ( ((uint_64)$32 <= (uint_64)(int_64)11) ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$62
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$61
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$60
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$59
	$30 = ($30 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$34 | (int_64)$33)
	$31 = ((int_64)$31 + (int_64)-5)
	if ( ((int_64)$31 != (int_64)-6) ){ goto $label$58 }
	*(($12 = (($38 + [16]) + [8]))) = $33
	*($38 + [16]) = $35
	$32 = (int_64)0
	$31 = (int_64)59
	$30 = [1536]
	$33 = (int_64)0
	
.LOOP $label$64:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$69 }
	$18 = *($30)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$68 }
	$18 = ($18 + [165])
	goto $label$67 
	
.LABEL $label$69
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$68
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$67
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$66
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$65
	$30 = ($30 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$64 }
	$32 = (int_64)0
	$31 = (int_64)59
	$30 = [1936]
	$35 = (int_64)0
	
.LOOP $label$70:
	if ( ((uint_64)$32 > (uint_64)(int_64)7) ){ goto $label$75 }
	$18 = *($30)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$74 }
	$18 = ($18 + [165])
	goto $label$73 
	
.LABEL $label$75
	$34 = (int_64)0
	if ( ((uint_64)$32 <= (uint_64)(int_64)11) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$74
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$73
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$72
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$71
	$30 = ($30 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$35 = ((int_64)$34 | (int_64)$35)
	$31 = ((int_64)$31 + (int_64)-5)
	if ( ((int_64)$31 != (int_64)-6) ){ goto $label$70 }
	*(($29 = (($38 + [240]) + [8]))) = [0]
	*($38 + [240]) = (int_64)0
	$30 = CALL strlen([2016])
	if ( ((uint_32)$30 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$30 >= (uint_32)[11]) ){ goto $label$78 }
	*($38 + [240]) = ($30 << [1])
	$18 = $5
	if ( $30 ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$78
	$17 = (($30 + [16]) & [-16])
	$18 = CALL $295($17)
	*($29) = $18
	*($38 + [240]) = ($17 | [1])
	*($38 + [244]) = $30
	
.LABEL $label$77
	CALL memcpy($18, [2016], $30)
	
.LABEL $label$76
	*(($18 + $30)) = [0]
	*(($17 = (($38 + [72]) + [8]))) = $15
	*($9) = $13
	*(($23 = (($38 + [72]) + [24]))) = $14
	*($24) = *($38 + [244])
	*(($10 + [8])) = *($29)
	*($38 + [72]) = *($0)
	*($10) = *($38 + [240])
	*($38 + [240]) = [0]
	*($38 + [244]) = [0]
	*($29) = [0]
	$30 = CALL $204(($38 + [120]), ($38 + [16]), $33, $35, ($38 + [72]))
	if ( ((*($10) & [1]) == 0) ){ goto $label$79 }
	CALL $297(*($28))
	
.LABEL $label$79
	if ( ((*($38 + [240]) & [1]) == 0) ){ goto $label$80 }
	CALL $297(*($29))
	
.LABEL $label$80
	CALL $185(($38 + [72]), $30)
	$30 = *($38 + [72])
	CALL send_inline($30, (*($38 + [76]) - $30))
	$30 = *($38 + [72])
	if ( ($30 == 0) ){ goto $label$81 }
	*($38 + [76]) = $30
	CALL $297($30)
	
.LABEL $label$81
	$15 = *($0)
	$32 = (int_64)0
	$31 = (int_64)59
	$30 = [1616]
	$33 = (int_64)0
	
.LOOP $label$82:
	if ( ((uint_64)$32 > (uint_64)(int_64)5) ){ goto $label$87 }
	$18 = *($30)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$86 }
	$18 = ($18 + [165])
	goto $label$85 
	
.LABEL $label$87
	$34 = (int_64)0
	if ( ((uint_64)$32 <= (uint_64)(int_64)11) ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$86
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$85
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$84
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$83
	$30 = ($30 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$34 | (int_64)$33)
	$31 = ((int_64)$31 + (int_64)-5)
	if ( ((int_64)$31 != (int_64)-6) ){ goto $label$82 }
	$32 = (int_64)0
	$31 = (int_64)59
	$30 = [1728]
	$35 = (int_64)0
	
.LOOP $label$88:
	if ( ((uint_64)$32 > (uint_64)(int_64)9) ){ goto $label$93 }
	$18 = *($30)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$92 }
	$18 = ($18 + [165])
	goto $label$91 
	
.LABEL $label$93
	$34 = (int_64)0
	if ( ((uint_64)$32 <= (uint_64)(int_64)11) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$92
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$91
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$90
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$89
	$30 = ($30 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$35 = ((int_64)$34 | (int_64)$35)
	$31 = ((int_64)$31 + (int_64)-5)
	if ( ((int_64)$31 != (int_64)-6) ){ goto $label$88 }
	CALL _ZNSt3__19to_stringEx(($38 + [56]), $16)
	$30 = CALL $306(($38 + [56]), [0], [2048])
	$18 = ($30 + [8])
	*(($25 = ($38 + [8]))) = *($18)
	*($38) = *($30)
	*($30) = [0]
	*(($30 + [4])) = [0]
	*($18) = [0]
	*($26) = [0]
	*($6) = (int_64)0
	*($38 + [72]) = (int_64)0
	*($17) = [0]
	*($9) = $36
	*($23) = $37
	*($10) = $19
	CALL $300($6, $38)
	*($12) = $35
	*(($18 = (($38 + [16]) + [16]))) = (int_64)0
	*(($12 = (($38 + [16]) + [24]))) = [0]
	*($38 + [16]) = $15
	$30 = CALL $295([16])
	*($18) = $30
	*($30) = $15
	*($30 + [8]) = $33
	*($7) = [0]
	*(($19 = (($38 + [16]) + [32]))) = [0]
	$30 = ($30 + [16])
	*($12) = $30
	*($27) = $30
	*((($38 + [16]) + [36])) = [0]
	$30 = *($6)
	$12 = ( *($28) ? uint_32($30 >> [1]) : ($30 & [1]) )
	$30 = ($12 + [29])
	$32 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$94:
	$30 = ($30 + [1])
	$32 = (uint_64)$32 >> (uint_64)(int_64)7
	if ( ((int_64)$32) != (int_64)0) ){ goto $label$94 }
	if ( ($30 == 0) ){ goto $label$96 }
	CALL $167($7, $30)
	$12 = *($19)
	$30 = *($7)
	goto $label$95 
	
.LABEL $label$96
	$12 = [0]
	$30 = [0]
	
.LABEL $label$95
	*($29) = $12
	*($38 + [244]) = $30
	*($38 + [240]) = $30
	CALL $186(($38 + [240]), ($38 + [72]))
	if ( ((*($6) & [1]) == 0) ){ goto $label$97 }
	CALL $297(*($26))
	
.LABEL $label$97
	if ( ((*($38) & [1]) == 0) ){ goto $label$98 }
	CALL $297(*($25))
	
.LABEL $label$98
	if ( ((*($38 + [56]) & [1]) == 0) ){ goto $label$99 }
	CALL $297(*((($38 + [56]) + [8])))
	
.LABEL $label$99
	CALL $185(($38 + [72]), ($38 + [16]))
	$30 = *($38 + [72])
	CALL send_inline($30, (*($38 + [76]) - $30))
	$30 = *($38 + [72])
	if ( ($30 == 0) ){ goto $label$100 }
	*($38 + [76]) = $30
	CALL $297($30)
	
.LABEL $label$100
	$30 = *($7)
	if ( ($30 == 0) ){ goto $label$101 }
	*($19) = $30
	CALL $297($30)
	
.LABEL $label$101
	$30 = *($18)
	if ( ($30 == 0) ){ goto $label$102 }
	*($27) = $30
	CALL $297($30)
	
.LABEL $label$102
	$30 = *((($38 + [120]) + [28]))
	if ( ($30 == 0) ){ goto $label$103 }
	*((($38 + [120]) + [32])) = $30
	CALL $297($30)
	
.LABEL $label$103
	$30 = *((($38 + [120]) + [16]))
	if ( ($30 == 0) ){ goto $label$104 }
	*((($38 + [120]) + [20])) = $30
	CALL $297($30)
	
.LABEL $label$104
	$25 = [1]
	
.LABEL $label$14
	$29 = *($21)
	if ( ($29 == 0) ){ goto $label$105 }
	$30 = *($22)
	if ( ((int_32)$30 == (int_32)$29) ){ goto $label$107 }
	
.LOOP $label$108:
	$30 = ($30 + [-24])
	$18 = *($30)
	*($30) = [0]
	if ( ($18 == 0) ){ goto $label$109 }
	CALL $297($18)
	
.LABEL $label$109
	if ( ((int_32)$29 != (int_32)$30) ){ goto $label$108 }
	$30 = *($21)
	goto $label$106 
	
.LABEL $label$107
	$30 = $29
	
.LABEL $label$106
	*($22) = $29
	CALL $297($30)
	
.LABEL $label$105
	$19 = *($20)
	if ( ($19 == 0) ){ goto $label$110 }
	$12 = (($38 + [200]) + [28])
	$30 = *($12)
	if ( ((int_32)$30 == (int_32)$19) ){ goto $label$112 }
	
.LOOP $label$113:
	$30 = ($30 + [-24])
	$18 = *($30)
	*($30) = [0]
	if ( ($18 == 0) ){ goto $label$114 }
	$29 = *($18 + [48])
	if ( ($29 == 0) ){ goto $label$115 }
	*(($18 + [52])) = $29
	CALL $297($29)
	
.LABEL $label$115
	CALL $297($18)
	
.LABEL $label$114
	if ( ((int_32)$19 != (int_32)$30) ){ goto $label$113 }
	$30 = *($20)
	goto $label$111 
	
.LABEL $label$112
	$30 = $19
	
.LABEL $label$111
	*($12) = $19
	CALL $297($30)
	
.LABEL $label$110
	$11 = ((int_64)$11 + (int_64)7)
	if ( ((int_64)$11 < (int_64)29) ){ goto $label$8 }
	CALL eosio_assert(($25 & [1]), [1872])
	*([0] + [4]) = ($38 + [256])
	return (unreachable)
	
.LABEL $label$7
	CALL $299(($38 + [56]))
	
.LABEL $label$6
	CALL $299(($38 + [240]))
	
.LABEL $label$5
	CALL $316(($38 + [240]))
	(unreachable)
	(unreachable)
}

void .FUNC _ZN5eosio7chintai10chinrefundEyNS_5assetEyy (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4)
{
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	$19 = (*([0] + [4]) - [256])
	*([0] + [4]) = $19
	CALL require_auth(*($0))
	$10 = ($0 + [440])
	$5 = CALL $166($10)
	$13 = (int_64)0
	$12 = (int_64)59
	$11 = [1696]
	$14 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$13 > (uint_64)(int_64)4) ){ goto $label$6 }
	$6 = *($11)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$6 = ($6 + [165])
	goto $label$4 
	
.LABEL $label$6
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$2
	$11 = ($11 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$1 }
	*(($19 + [232])) = [0]
	*($19 + [216]) = (int_64)-1
	$13 = (int_64)0
	*($19 + [224]) = (int_64)0
	$15 = *($0)
	*($19 + [208]) = $15
	*($19 + [200]) = $14
	$11 = CALL db_find_i64($14, $15, (int_64)-5001342326447013888, $15)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$7 }
	$11 = CALL $210(($19 + [200]), $11)
	CALL eosio_assert(((int_32)*($11 + [48]) == (int_32)($19 + [200])), [752])
	if ( ((uint_32)(*($11 + [8]) + [259200]) > (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$7 }
	$7 = *($0)
	$15 = (int_64)0
	$14 = (int_64)59
	$11 = [1616]
	$18 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$15 > (uint_64)(int_64)5) ){ goto $label$13 }
	$6 = *($11)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$6 = ($6 + [165])
	goto $label$11 
	
.LABEL $label$13
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$9
	$11 = ($11 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$18 = ((int_64)$12 | (int_64)$18)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$8 }
	$15 = (int_64)0
	$14 = (int_64)59
	$11 = [1696]
	$16 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$15 > (uint_64)(int_64)4) ){ goto $label$19 }
	$6 = *($11)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$6 = ($6 + [165])
	goto $label$17 
	
.LABEL $label$19
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$15
	$11 = ($11 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$16 = ((int_64)$12 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$14 }
	$15 = (int_64)0
	$14 = (int_64)59
	$11 = [2240]
	$17 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$15 > (uint_64)(int_64)5) ){ goto $label$25 }
	$6 = *($11)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$6 = ($6 + [165])
	goto $label$23 
	
.LABEL $label$25
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$21
	$11 = ($11 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$17 = ((int_64)$12 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$20 }
	*(($6 = ($19 + [136]))) = [0]
	*($19 + [160]) = $7
	*($19 + [120]) = $17
	*($19 + [128]) = (int_64)0
	*($19 + [112]) = $16
	*(($11 = CALL $295([16]))) = $7
	*($11 + [8]) = $18
	*(($8 = ($19 + [144]))) = [0]
	$9 = ($11 + [16])
	*($6) = $9
	*(($19 + [132])) = $9
	*($19 + [128]) = $11
	*($19 + [140]) = [0]
	*(($19 + [148])) = [0]
	CALL $167(($19 + [140]), [8])
	$11 = *($19 + [140])
	CALL eosio_assert(((int_32)(*($8) - $11) > (int_32)[7]), [1200])
	CALL memcpy($11, ($19 + [160]), [8])
	CALL $185(($19 + [160]), ($19 + [112]))
	$11 = *($19 + [160])
	CALL send_inline($11, (*($19 + [164]) - $11))
	$11 = *($19 + [160])
	if ( ($11 == 0) ){ goto $label$26 }
	*($19 + [164]) = $11
	CALL $297($11)
	
.LABEL $label$26
	*($19 + [160]) = $5
	CALL $192($10, ($19 + [160]), *($0))
	$11 = *($19 + [140])
	if ( ($11 == 0) ){ goto $label$27 }
	*(($19 + [144])) = $11
	CALL $297($11)
	
.LABEL $label$27
	$11 = *($19 + [128])
	if ( ($11 == 0) ){ goto $label$7 }
	*(($19 + [132])) = $11
	CALL $297($11)
	
.LABEL $label$7
	$18 = *($0)
	$12 = (int_64)59
	$11 = [1616]
	$14 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$33 }
	$6 = *($11)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$6 = ($6 + [165])
	goto $label$31 
	
.LABEL $label$33
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$29
	$11 = ($11 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$28 }
	*($19 + [32]) = $14
	*($19 + [24]) = $18
	$13 = (int_64)0
	$12 = (int_64)59
	$11 = [1536]
	$14 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$13 > (uint_64)(int_64)10) ){ goto $label$39 }
	$6 = *($11)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$6 = ($6 + [165])
	goto $label$37 
	
.LABEL $label$39
	$15 = (int_64)0
	if ( ((int_64)$13 == (int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$35
	$11 = ($11 + [1])
	$12 = ((int_64)$12 + (int_64)-5)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)1)
	if ( ((int_64)$13 != (int_64)13) ){ goto $label$34 }
	$13 = (int_64)0
	$12 = (int_64)59
	$11 = [1936]
	$18 = (int_64)0
	
.LOOP $label$40:
	if ( ((uint_64)$13 > (uint_64)(int_64)7) ){ goto $label$45 }
	$6 = *($11)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$44 }
	$6 = ($6 + [165])
	goto $label$43 
	
.LABEL $label$45
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$44
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$43
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$42
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$41
	$11 = ($11 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$18 = ((int_64)$15 | (int_64)$18)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$40 }
	CALL _ZNSt3__19to_stringEy(($19 + [80]), $3)
	$11 = CALL $306(($19 + [80]), [0], [2256])
	$6 = ($11 + [8])
	*((($19 + [96]) + [8])) = *($6)
	*($19 + [96]) = *($11)
	*($11) = [0]
	*(($11 + [4])) = [0]
	*($6) = [0]
	$11 = CALL $305(($19 + [96]), [2304])
	$6 = ($11 + [8])
	*((($19 + [240]) + [8])) = *($6)
	*($19 + [240]) = *($11)
	*($11) = [0]
	*(($11 + [4])) = [0]
	*($6) = [0]
	CALL _ZNSt3__19to_stringEy(($19 + [64]), $4)
	$11 = *($19 + [64])
	$6 = ($11 & [1])
	$11 = CALL $304(($19 + [240]), ( *($19 + [72]) ? (($19 + [64]) | [1]) : $6 ), ( *($19 + [68]) ? uint_32($11 >> [1]) : $6 ))
	$6 = *($11)
	*($11) = [0]
	$10 = *($11 + [4])
	*($11 + [4]) = [0]
	$8 = *($11 + [8])
	*($11 + [8]) = [0]
	*($19 + [120]) = $1
	*($19 + [112]) = *($0)
	*(($19 + [132])) = *(($2 + [4]))
	*(($19 + [140])) = *(($2 + [12]))
	*($19 + [128]) = *($2)
	*($19 + [144]) = $6
	*(($19 + [148])) = $10
	*(($11 = ($19 + [152]))) = $8
	$8 = CALL $204(($19 + [160]), ($19 + [24]), $14, $18, ($19 + [112]))
	if ( ((*($19 + [144]) & [1]) == 0) ){ goto $label$46 }
	CALL $297(*($11))
	
.LABEL $label$46
	if ( ((*($19 + [64]) & [1]) == 0) ){ goto $label$47 }
	CALL $297(*(($19 + [72])))
	
.LABEL $label$47
	if ( ((*($19 + [240]) & [1]) == 0) ){ goto $label$48 }
	CALL $297(*($19 + [248]))
	
.LABEL $label$48
	if ( ((*($19 + [96]) & [1]) == 0) ){ goto $label$49 }
	CALL $297(*($19 + [104]))
	
.LABEL $label$49
	if ( ((*($19 + [80]) & [1]) == 0) ){ goto $label$50 }
	CALL $297(*($19 + [88]))
	
.LABEL $label$50
	CALL $185(($19 + [112]), $8)
	$11 = *($19 + [112])
	CALL send_inline($11, (*($19 + [116]) - $11))
	$11 = *($19 + [112])
	if ( ($11 == 0) ){ goto $label$51 }
	*($19 + [116]) = $11
	CALL $297($11)
	
.LABEL $label$51
	$9 = *(($0 + [40]))
	$2 = *(($0 + [44]))
	if ( ((int_32)$2 == (int_32)$9) ){ goto $label$52 }
	$11 = ($2 + [-24])
	$10 = ([0] - $9)
	
.LOOP $label$53:
	if ( ((int_64)*(*($11)) == (int_64)$3) ){ goto $label$52 }
	$2 = $11
	$6 = ($11 + [-24])
	$11 = $6
	if ( ((int_32)($6 + $10) != (int_32)[-24]) ){ goto $label$53 }
	
.LABEL $label$52
	$11 = ($0 + [16])
	if ( ((int_32)$2 == (int_32)$9) ){ goto $label$56 }
	$6 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$11), [752])
	if ( $6 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	$6 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)6787602122293641216, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$54 }
	$6 = CALL $119($11, $6)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$11), [752])
	
.LABEL $label$55
	CALL eosio_assert([1], [1280])
	CALL eosio_assert([1], [1328])
	$2 = CALL db_next_i64(*($6 + [68]), ($19 + [112]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$57 }
	CALL $119($11, $2)
	
.LABEL $label$57
	CALL $154($11, $6)
	
.LABEL $label$54
	$9 = *(($0 + [80]))
	$2 = *(($0 + [84]))
	if ( ((int_32)$2 == (int_32)$9) ){ goto $label$58 }
	$11 = ($2 + [-24])
	$10 = ([0] - $9)
	
.LOOP $label$59:
	if ( ((int_64)*(*($11)) == (int_64)$4) ){ goto $label$58 }
	$2 = $11
	$6 = ($11 + [-24])
	$11 = $6
	if ( ((int_32)($6 + $10) != (int_32)[-24]) ){ goto $label$59 }
	
.LABEL $label$58
	$11 = ($0 + [56])
	if ( ((int_32)$2 == (int_32)$9) ){ goto $label$62 }
	$6 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$11), [752])
	if ( $6 ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$62
	$6 = CALL db_find_i64(*(($0 + [56])), *(($0 + [64])), (int_64)6653061481472458752, $4)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$60 }
	$6 = CALL $115($11, $6)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$11), [752])
	
.LABEL $label$61
	CALL eosio_assert([1], [1280])
	CALL eosio_assert([1], [1328])
	$2 = CALL db_next_i64(*($6 + [68]), ($19 + [112]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$63 }
	CALL $115($11, $2)
	
.LABEL $label$63
	CALL $144($11, $6)
	
.LABEL $label$60
	$16 = *($0)
	$13 = (int_64)0
	$12 = (int_64)59
	$11 = [1616]
	$14 = (int_64)0
	
.LOOP $label$64:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$69 }
	$6 = *($11)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$68 }
	$6 = ($6 + [165])
	goto $label$67 
	
.LABEL $label$69
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$68
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$67
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$66
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$65
	$11 = ($11 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$64 }
	$13 = (int_64)0
	$12 = (int_64)59
	$11 = [1728]
	$18 = (int_64)0
	
.LOOP $label$70:
	if ( ((uint_64)$13 > (uint_64)(int_64)9) ){ goto $label$75 }
	$6 = *($11)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$74 }
	$6 = ($6 + [165])
	goto $label$73 
	
.LABEL $label$75
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$74
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$73
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$72
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$71
	$11 = ($11 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$18 = ((int_64)$15 | (int_64)$18)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$70 }
	$13 = CALL current_time()
	*(($19 + [16])) = [0]
	*($19 + [8]) = (int_64)0
	$13 = ((uint_64)$13 / (uint_64)(int_64)1000000)
	$11 = CALL strlen([2320])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$76 }
	$13 = ((int_64)$13 & (int_64)4294967295)
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$79 }
	*($19 + [8]) = ($11 << [1])
	$6 = (($19 + [8]) | [1])
	if ( $11 ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$79
	$0 = (($11 + [16]) & [-16])
	$6 = CALL $295($0)
	*($19 + [8]) = ($0 | [1])
	*($19 + [16]) = $6
	*($19 + [12]) = $11
	
.LABEL $label$78
	CALL memcpy($6, [2320], $11)
	
.LABEL $label$77
	*(($6 + $11)) = [0]
	*(($6 = ($19 + [152]))) = [0]
	*(($19 + [156])) = [0]
	*($19 + [148]) = [0]
	*($19 + [112]) = $13
	*($19 + [120]) = [0]
	*($19 + [128]) = $3
	*($19 + [136]) = $4
	*($19 + [144]) = [1]
	CALL $300((($19 + [112]) + [36]), ($19 + [8]))
	*($19 + [32]) = $18
	*($19 + [24]) = $16
	*(($11 = CALL $295([16]))) = $16
	*($11 + [8]) = $14
	*(($19 + [56])) = [0]
	$0 = ($11 + [16])
	*(($19 + [48])) = $0
	*(($19 + [44])) = $0
	*($19 + [40]) = $11
	*($19 + [52]) = [0]
	*((($19 + [24]) + [36])) = [0]
	$11 = *($19 + [148])
	$6 = ( *($6) ? uint_32($11 >> [1]) : ($11 & [1]) )
	$11 = ($6 + [29])
	$13 = (CASTING uint_64)(uint_32 $6)
	$6 = ($19 + [52])
	
.LOOP $label$80:
	$11 = ($11 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$80 }
	if ( ($11 == 0) ){ goto $label$82 }
	CALL $167($6, $11)
	$6 = *(($19 + [56]))
	$11 = *(($19 + [52]))
	goto $label$81 
	
.LABEL $label$82
	$6 = [0]
	$11 = [0]
	
.LABEL $label$81
	*($19 + [244]) = $11
	*($19 + [240]) = $11
	*($19 + [248]) = $6
	CALL $186(($19 + [240]), ($19 + [112]))
	if ( ((*(($19 + [148])) & [1]) == 0) ){ goto $label$83 }
	CALL $297(*(($19 + [156])))
	
.LABEL $label$83
	if ( ((*($19 + [8]) & [1]) == 0) ){ goto $label$84 }
	CALL $297(*($19 + [16]))
	
.LABEL $label$84
	CALL $185(($19 + [112]), ($19 + [24]))
	$11 = *($19 + [112])
	CALL send_inline($11, (*($19 + [116]) - $11))
	$11 = *($19 + [112])
	if ( ($11 == 0) ){ goto $label$85 }
	*($19 + [116]) = $11
	CALL $297($11)
	
.LABEL $label$85
	$11 = *($19 + [52])
	if ( ($11 == 0) ){ goto $label$86 }
	*(($19 + [56])) = $11
	CALL $297($11)
	
.LABEL $label$86
	$11 = *($19 + [40])
	if ( ($11 == 0) ){ goto $label$87 }
	*(($19 + [44])) = $11
	CALL $297($11)
	
.LABEL $label$87
	$11 = *($8 + [28])
	if ( ($11 == 0) ){ goto $label$88 }
	*(($8 + [32])) = $11
	CALL $297($11)
	
.LABEL $label$88
	$11 = *($8 + [16])
	if ( ($11 == 0) ){ goto $label$89 }
	*(($8 + [20])) = $11
	CALL $297($11)
	
.LABEL $label$89
	$0 = *($19 + [224])
	if ( ($0 == 0) ){ goto $label$90 }
	$2 = ($19 + [228])
	$11 = *($2)
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$92 }
	
.LOOP $label$93:
	$11 = ($11 + [-24])
	$6 = *($11)
	*($11) = [0]
	if ( ($6 == 0) ){ goto $label$94 }
	CALL $297($6)
	
.LABEL $label$94
	if ( ((int_32)$0 != (int_32)$11) ){ goto $label$93 }
	$11 = *(($19 + [224]))
	goto $label$91 
	
.LABEL $label$92
	$11 = $0
	
.LABEL $label$91
	*($2) = $0
	CALL $297($11)
	
.LABEL $label$90
	*([0] + [4]) = ($19 + [256])
	return (unreachable)
	
.LABEL $label$76
	CALL $299(($19 + [8]))
}

int_32 .FUNC _ZN5eosio7chintai13get_orderbookEv (int_32 $0)
{
	return ($0 + [8])
}

void .FUNC _ZN5eosio7chintai10chincancelEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_64 $28
	int_64 $29
	int_64 $30
	int_64 $31
	int_32 $32
	int_32 $33
	$33 = (*([0] + [4]) - [192])
	*([0] + [4]) = $33
	CALL require_auth(*($0))
	$5 = ($0 + [412])
	$4 = ($0 + [8])
	$8 = (($33 + [16]) + [16])
	$7 = ($33 | [1])
	$6 = (($33 + [96]) | [1])
	$3 = (($33 + [112]) + [36])
	$2 = (($33 + [152]) + [36])
	$21 = (($33 + [112]) + [28])
	$9 = (($33 + [16]) + [32])
	$23 = ($9 + [4])
	$24 = ($0 + [420])
	$25 = ($0 + [416])
	$10 = (int_64)7
	$32 = [0]
	
.LOOP $label$4:
	$29 = ((int_64)$10 * (int_64)86400)
	*((($33 + [152]) + [8])) = $29
	*((($33 + [152]) + [16])) = (int_64)-1
	*(($19 = (($33 + [152]) + [24]))) = (int_64)0
	*((($33 + [152]) + [32])) = [0]
	$31 = *($0)
	*($33 + [152]) = $31
	*(($2 + [2])) = [0]
	*($2) = [0]
	*(($22 = (($33 + [112]) + [8]))) = $29
	*((($33 + [112]) + [16])) = (int_64)-1
	*(($20 = (($33 + [112]) + [24]))) = (int_64)0
	*((($33 + [112]) + [32])) = [0]
	*(($3 + [2])) = [0]
	*($3) = [0]
	*($33 + [112]) = $31
	$11 = [0]
	$27 = CALL db_find_i64($31, $29, (int_64)-3012230666864558080, $1)
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$5 }
	$11 = CALL $148(($33 + [152]), $27)
	CALL eosio_assert(((int_32)*($11 + [92]) == (int_32)($33 + [152])), [752])
	
.LABEL $label$5
	$15 = *($20)
	$26 = *($21)
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$6 }
	$27 = ($26 + [-24])
	$18 = ([0] - $15)
	
.LOOP $label$7:
	if ( ((int_64)*(*($27)) == (int_64)$1) ){ goto $label$6 }
	$26 = $27
	$17 = ($27 + [-24])
	$27 = $17
	if ( ((int_32)($17 + $18) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$9 }
	$26 = *(($26 + [-24]))
	CALL eosio_assert(((int_32)*($26 + [96]) == (int_32)($33 + [112])), [752])
	goto $label$8 
	
.LABEL $label$9
	$26 = [0]
	$27 = CALL db_find_i64(*($33 + [112]), *($22), (int_64)-3146771307685740544, $1)
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$8 }
	$26 = CALL $138(($33 + [112]), $27)
	CALL eosio_assert(((int_32)*($26 + [96]) == (int_32)($33 + [112])), [752])
	
.LABEL $label$8
	CALL eosio_assert([1], [16])
	$29 = (int_64)5459781
	$27 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $29) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$29 = (uint_64)$29 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$29) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$29 = (uint_64)$29 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$29) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$17 = [1]
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$17 = [0]
	
.LABEL $label$15
	CALL eosio_assert($17, [80])
	if ( ($11 == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL eosio_assert([0], [80])
	if ( $11 ){ goto $label$12 }
	
.LABEL $label$13
	if ( ($26 == 0) ){ goto $label$10 }
	$12 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($26 + [48])) * (float_64)*($26 + [64])))
	CALL eosio_assert((uint_64)(((int_64)$12 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [16])
	$29 = (int_64)5459781
	$27 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $29) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$29 = (uint_64)$29 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$29) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$29 = (uint_64)$29 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$29) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$17 = [1]
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$17 = [0]
	
.LABEL $label$20
	CALL eosio_assert($17, [80])
	$14 = *($26 + [8])
	CALL require_auth(*($4))
	CALL _ZN5eosio17orderbook_manager18cancel_lease_orderERKNS_6ulbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($4, $26, $27)
	$13 = (int_64)1397703940
	goto $label$11 
	
.LABEL $label$12
	$13 = *(($11 + [72]))
	$14 = *($11 + [8])
	$12 = *($11 + [64])
	*(($17 = (($33 + [96]) + [8]))) = [0]
	*($33 + [96]) = (int_64)0
	$18 = ($11 + [52])
	$26 = (*($18) - *($11 + [48]))
	$27 = int_32($26 >> [4])
	if ( ($27 == 0) ){ goto $label$25 }
	if ( ((uint_32)$27 >= (uint_32)[268435456]) ){ goto $label$1 }
	$26 = CALL $295($26)
	*($17) = ($26 + ($27 << [4]))
	*($33 + [96]) = $26
	*($33 + [100]) = $26
	$17 = *(($11 + [48]))
	$27 = (*($18) - $17)
	if ( ((int_32)$27 < (int_32)[1]) ){ goto $label$26 }
	CALL memcpy($26, $17, $27)
	$15 = (*($33 + [100]) + $27)
	*($33 + [100]) = $15
	$26 = *($33 + [96])
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$26 }
	
.LOOP $label$27:
	$16 = *($0)
	$29 = (int_64)0
	$28 = (int_64)59
	$27 = [1616]
	$30 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$29 > (uint_64)(int_64)5) ){ goto $label$33 }
	$17 = *($27)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$17 = ($17 + [165])
	goto $label$31 
	
.LABEL $label$33
	$31 = (int_64)0
	if ( ((uint_64)$29 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$31 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$31 = ((int_64)((int_64)$31 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$29
	$27 = ($27 + [1])
	$29 = ((int_64)$29 + (int_64)1)
	$30 = ((int_64)$31 | (int_64)$30)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$28 }
	*((($33 + [80]) + [8])) = $30
	*($33 + [80]) = $16
	$29 = (int_64)0
	$28 = (int_64)59
	$27 = [1536]
	$30 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$29 > (uint_64)(int_64)10) ){ goto $label$39 }
	$17 = *($27)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$17 = ($17 + [165])
	goto $label$37 
	
.LABEL $label$39
	$31 = (int_64)0
	if ( ((int_64)$29 == (int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$31 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$31 = ((int_64)((int_64)$31 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$35
	$27 = ($27 + [1])
	$28 = ((int_64)$28 + (int_64)-5)
	$30 = ((int_64)$31 | (int_64)$30)
	$29 = ((int_64)$29 + (int_64)1)
	if ( ((int_64)$29 != (int_64)13) ){ goto $label$34 }
	*($33 + [72]) = $30
	$29 = (int_64)0
	$28 = (int_64)59
	$27 = [1936]
	$30 = (int_64)0
	
.LOOP $label$40:
	if ( ((uint_64)$29 > (uint_64)(int_64)7) ){ goto $label$45 }
	$17 = *($27)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$44 }
	$17 = ($17 + [165])
	goto $label$43 
	
.LABEL $label$45
	$31 = (int_64)0
	if ( ((uint_64)$29 <= (uint_64)(int_64)11) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$44
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$43
	$31 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$42
	$31 = ((int_64)((int_64)$31 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$41
	$27 = ($27 + [1])
	$29 = ((int_64)$29 + (int_64)1)
	$30 = ((int_64)$31 | (int_64)$30)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$40 }
	*($33 + [64]) = $30
	*(($17 = ($33 + [8]))) = [0]
	*($33) = (int_64)0
	$27 = CALL strlen([1952])
	if ( ((uint_32)$27 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$27 >= (uint_32)[11]) ){ goto $label$48 }
	*($33) = ($27 << [1])
	$18 = $7
	if ( $27 ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$48
	$22 = (($27 + [16]) & [-16])
	$18 = CALL $295($22)
	*($17) = $18
	*($33) = ($22 | [1])
	*($33 + [4]) = $27
	
.LABEL $label$47
	CALL memcpy($18, [1952], $27)
	
.LABEL $label$46
	*(($18 + $27)) = [0]
	*((($33 + [16]) + [8])) = $14
	*($33 + [16]) = *($0)
	*(($8 + [8])) = *(($26 + [8]))
	*($8) = *($26)
	*(($9 + [8])) = *($17)
	*($9) = *($33)
	*($33) = [0]
	*($33 + [4]) = [0]
	*($17) = [0]
	$27 = *($25)
	if ( ((uint_32)$27 >= (uint_32)*($24)) ){ goto $label$50 }
	CALL $204($27, ($33 + [80]), *($33 + [72]), *($33 + [64]), ($33 + [16]))
	*($25) = (*($25) + [40])
	goto $label$49 
	
.LABEL $label$50
	CALL $205($5, ($33 + [80]), ($33 + [72]), ($33 + [64]), ($33 + [16]))
	
.LABEL $label$49
	if ( ((*($9) & [1]) == 0) ){ goto $label$51 }
	CALL $297(*((($33 + [16]) + [40])))
	
.LABEL $label$51
	if ( ((*($33) & [1]) == 0) ){ goto $label$52 }
	CALL $297(*($17))
	
.LABEL $label$52
	$26 = ($26 + [16])
	if ( ((int_32)$26 != (int_32)$15) ){ goto $label$27 }
	$26 = *($33 + [96])
	
.LABEL $label$26
	if ( ($26 == 0) ){ goto $label$25 }
	*($33 + [100]) = $26
	CALL $297($26)
	
.LABEL $label$25
	CALL require_auth(*($4))
	CALL _ZN5eosio17orderbook_manager18cancel_stake_orderERKNS_6usbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($4, $11, $27)
	
.LABEL $label$11
	$16 = *($0)
	$29 = (int_64)0
	$28 = (int_64)59
	$27 = [1616]
	$30 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$29 > (uint_64)(int_64)5) ){ goto $label$58 }
	$17 = *($27)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$17 = ($17 + [165])
	goto $label$56 
	
.LABEL $label$58
	$31 = (int_64)0
	if ( ((uint_64)$29 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$31 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$31 = ((int_64)((int_64)$31 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$54
	$27 = ($27 + [1])
	$29 = ((int_64)$29 + (int_64)1)
	$30 = ((int_64)$31 | (int_64)$30)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$53 }
	*((($33 + [80]) + [8])) = $30
	*($33 + [80]) = $16
	$29 = (int_64)0
	$28 = (int_64)59
	$27 = [1536]
	$30 = (int_64)0
	
.LOOP $label$59:
	if ( ((uint_64)$29 > (uint_64)(int_64)10) ){ goto $label$64 }
	$17 = *($27)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$63 }
	$17 = ($17 + [165])
	goto $label$62 
	
.LABEL $label$64
	$31 = (int_64)0
	if ( ((int_64)$29 == (int_64)11) ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$63
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$62
	$31 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$61
	$31 = ((int_64)((int_64)$31 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$60
	$27 = ($27 + [1])
	$28 = ((int_64)$28 + (int_64)-5)
	$30 = ((int_64)$31 | (int_64)$30)
	$29 = ((int_64)$29 + (int_64)1)
	if ( ((int_64)$29 != (int_64)13) ){ goto $label$59 }
	*($33) = $30
	$29 = (int_64)0
	$28 = (int_64)59
	$27 = [1936]
	$30 = (int_64)0
	
.LOOP $label$65:
	if ( ((uint_64)$29 > (uint_64)(int_64)7) ){ goto $label$70 }
	$17 = *($27)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$69 }
	$17 = ($17 + [165])
	goto $label$68 
	
.LABEL $label$70
	$31 = (int_64)0
	if ( ((uint_64)$29 <= (uint_64)(int_64)11) ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$69
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$68
	$31 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$67
	$31 = ((int_64)((int_64)$31 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$66
	$27 = ($27 + [1])
	$29 = ((int_64)$29 + (int_64)1)
	$30 = ((int_64)$31 | (int_64)$30)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$65 }
	*($33 + [72]) = $30
	*(($17 = (($33 + [96]) + [8]))) = [0]
	*($33 + [96]) = (int_64)0
	$27 = CALL strlen([2016])
	if ( ((uint_32)$27 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$27 >= (uint_32)[11]) ){ goto $label$73 }
	*($33 + [96]) = ($27 << [1])
	$26 = $6
	if ( $27 ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$73
	$18 = (($27 + [16]) & [-16])
	$26 = CALL $295($18)
	*($17) = $26
	*($33 + [96]) = ($18 | [1])
	*($33 + [100]) = $27
	
.LABEL $label$72
	CALL memcpy($26, [2016], $27)
	
.LABEL $label$71
	*(($26 + $27)) = [0]
	*((($33 + [16]) + [8])) = $14
	*($8) = $12
	*((($33 + [16]) + [24])) = $13
	*($23) = *($33 + [100])
	*(($9 + [8])) = *($17)
	*($33 + [16]) = *($0)
	*($9) = *($33 + [96])
	*($33 + [96]) = [0]
	*($33 + [100]) = [0]
	*($17) = [0]
	$27 = *($25)
	if ( ((uint_32)$27 >= (uint_32)*($24)) ){ goto $label$75 }
	CALL $204($27, ($33 + [80]), *($33), *($33 + [72]), ($33 + [16]))
	*($25) = (*($25) + [40])
	goto $label$74 
	
.LABEL $label$75
	CALL $205($5, ($33 + [80]), $33, ($33 + [72]), ($33 + [16]))
	
.LABEL $label$74
	if ( ((*($9) & [1]) == 0) ){ goto $label$76 }
	CALL $297(*((($33 + [16]) + [40])))
	
.LABEL $label$76
	if ( ((*($33 + [96]) & [1]) == 0) ){ goto $label$77 }
	CALL $297(*($17))
	
.LABEL $label$77
	$32 = [1]
	
.LABEL $label$10
	$26 = *($20)
	if ( ($26 == 0) ){ goto $label$78 }
	$27 = *($21)
	if ( ((int_32)$27 == (int_32)$26) ){ goto $label$80 }
	
.LOOP $label$81:
	$27 = ($27 + [-24])
	$17 = *($27)
	*($27) = [0]
	if ( ($17 == 0) ){ goto $label$82 }
	CALL $297($17)
	
.LABEL $label$82
	if ( ((int_32)$26 != (int_32)$27) ){ goto $label$81 }
	$27 = *($20)
	goto $label$79 
	
.LABEL $label$80
	$27 = $26
	
.LABEL $label$79
	*($21) = $26
	CALL $297($27)
	
.LABEL $label$78
	$18 = *($19)
	if ( ($18 == 0) ){ goto $label$83 }
	$11 = (($33 + [152]) + [28])
	$27 = *($11)
	if ( ((int_32)$27 == (int_32)$18) ){ goto $label$85 }
	
.LOOP $label$86:
	$27 = ($27 + [-24])
	$17 = *($27)
	*($27) = [0]
	if ( ($17 == 0) ){ goto $label$87 }
	$26 = *($17 + [48])
	if ( ($26 == 0) ){ goto $label$88 }
	*(($17 + [52])) = $26
	CALL $297($26)
	
.LABEL $label$88
	CALL $297($17)
	
.LABEL $label$87
	if ( ((int_32)$18 != (int_32)$27) ){ goto $label$86 }
	$27 = *($19)
	goto $label$84 
	
.LABEL $label$85
	$27 = $18
	
.LABEL $label$84
	*($11) = $18
	CALL $297($27)
	
.LABEL $label$83
	$10 = ((int_64)$10 + (int_64)7)
	if ( ((int_64)$10 < (int_64)29) ){ goto $label$4 }
	CALL eosio_assert(($32 & [1]), [1872])
	*([0] + [4]) = ($33 + [192])
	return (unreachable)
	
.LABEL $label$3
	CALL $299($33)
	
.LABEL $label$2
	CALL $299(($33 + [96]))
	
.LABEL $label$1
	CALL $316(($33 + [96]))
	(unreachable)
	(unreachable)
}

void .FUNC _ZN5eosio7chintai6freezeEb (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(CALL $fimport$36(*($0)), [1584])
	$2 = *(($0 + [240]))
	$8 = *(($0 + [244]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( (int_64)(*(*($7)) == 0) ){ goto $label$1 }
	$8 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [216])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$4), [752])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	$8 = CALL db_find_i64(*(($0 + [216])), *(($0 + [224])), (int_64)6761222076679323648, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $163($4, $8)
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$4), [752])
	
.LABEL $label$3
	$6 = *($0)
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [976])
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$4), [1024])
	CALL eosio_assert(((int_64)*(($0 + [216])) == (int_64)CALL $fimport$15()), [1072])
	*($7 + [8]) = $1
	$5 = *($7)
	CALL eosio_assert([1], [1136])
	CALL eosio_assert([1], [1200])
	CALL memcpy($9, $7, [8])
	*($9 + [15]) = *($7 + [8])
	CALL eosio_assert([1], [1200])
	CALL memcpy(($9 | [8]), ($9 + [15]), [1])
	CALL db_update_i64(*($7 + [20]), $6, $9, [9])
	$7 = ($0 + [232])
	if ( (uint_64)($5 <= *($7)) ){ goto $label$5 }
	*($7) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN5eosio7chintai11delaycancelEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	CALL require_auth(*($0))
	$6 = *(($0 + [40]))
	$5 = *(($0 + [44]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$1 }
	$7 = ($5 + [-24])
	$2 = ([0] - $6)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$5 = $7
	$3 = ($7 + [-24])
	$7 = $3
	if ( ((int_32)($3 + $2) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$7 = ($0 + [16])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	$6 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$7), [752])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$3 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)6787602122293641216, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $119($7, $3)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$7), [752])
	
.LABEL $label$3
	$4 = *(($0 + [80]))
	$5 = *(($0 + [84]))
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$5 }
	$7 = ($5 + [-24])
	$2 = ([0] - $4)
	
.LOOP $label$6:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$5 }
	$5 = $7
	$3 = ($7 + [-24])
	$7 = $3
	if ( ((int_32)($3 + $2) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$7 = ($0 + [56])
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$8 }
	$2 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [64]) == (int_32)$7), [752])
	goto $label$7 
	
.LABEL $label$8
	$2 = [0]
	$3 = CALL db_find_i64(*(($0 + [56])), *(($0 + [64])), (int_64)6653061481472458752, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$7 }
	$2 = CALL $115($7, $3)
	CALL eosio_assert(((int_32)*($2 + [64]) == (int_32)$7), [752])
	
.LABEL $label$7
	$5 = ($0 + [8])
	CALL eosio_assert([1], [16])
	$1 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$3 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$3 = [0]
	
.LABEL $label$9
	CALL eosio_assert($3, [80])
	if ( ($6 == 0) ){ goto $label$14 }
	CALL require_auth(*($5))
	CALL _ZN5eosio17orderbook_manager18cancel_stake_orderERKNS_9stakebookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($5, $6, $7)
	return 
	
.LABEL $label$14
	if ( ($2 == 0) ){ goto $label$15 }
	CALL require_auth(*($5))
	CALL _ZN5eosio17orderbook_manager18cancel_lease_orderERKNS_9leasebookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($5, $2, $7)
	
.LABEL $label$15
}

void .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $190(*($1), ($0 + [32]))
}

void .FUNC _ZN5eosio7chintai12cancelordercEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_64 $24
	int_32 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_64 $29
	int_64 $30
	int_32 $31
	int_64 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_64 $36
	int_32 $37
	$37 = (*([0] + [4]) - [256])
	*([0] + [4]) = $37
	CALL eosio_assert(CALL $fimport$36(*($0)), [1584])
	$4 = ($0 + [8])
	$8 = (($37 + [32]) + [28])
	$7 = (($37 + [72]) + [36])
	$5 = (($37 + [240]) | [1])
	$3 = (($37 + [160]) + [36])
	$2 = (($37 + [200]) + [36])
	$6 = (($37 + [72]) + [32])
	$19 = ($6 + [4])
	$21 = ($37 + [116])
	$22 = (($37 + [32]) + [20])
	$23 = ($37 + [112])
	$24 = (int_64)7
	$18 = [0]
	
.LOOP $label$2:
	$33 = ((int_64)$24 * (int_64)86400)
	*((($37 + [200]) + [8])) = $33
	*((($37 + [200]) + [16])) = (int_64)-1
	*(($14 = (($37 + [200]) + [24]))) = (int_64)0
	*((($37 + [200]) + [32])) = [0]
	$35 = *($0)
	*($37 + [200]) = $35
	*(($2 + [2])) = [0]
	*($2) = [0]
	*(($17 = (($37 + [160]) + [8]))) = $33
	*((($37 + [160]) + [16])) = (int_64)-1
	*(($15 = (($37 + [160]) + [24]))) = (int_64)0
	*((($37 + [160]) + [32])) = [0]
	*(($3 + [2])) = [0]
	*($3) = [0]
	*($37 + [160]) = $35
	$25 = [0]
	$31 = CALL db_find_i64($35, $33, (int_64)-3012230666864558080, $1)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$3 }
	$25 = CALL $148(($37 + [200]), $31)
	CALL eosio_assert(((int_32)*($25 + [92]) == (int_32)($37 + [200])), [752])
	
.LABEL $label$3
	$9 = *($15)
	$16 = (($37 + [160]) + [28])
	$13 = *($16)
	if ( ((int_32)$13 == (int_32)$9) ){ goto $label$4 }
	$31 = ($13 + [-24])
	$11 = ([0] - $9)
	
.LOOP $label$5:
	if ( ((int_64)*(*($31)) == (int_64)$1) ){ goto $label$4 }
	$13 = $31
	$12 = ($31 + [-24])
	$31 = $12
	if ( ((int_32)($12 + $11) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	if ( ((int_32)$13 == (int_32)$9) ){ goto $label$7 }
	$13 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [96]) == (int_32)($37 + [160])), [752])
	goto $label$6 
	
.LABEL $label$7
	$13 = [0]
	$31 = CALL db_find_i64(*($37 + [160]), *($17), (int_64)-3146771307685740544, $1)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$6 }
	$13 = CALL $138(($37 + [160]), $31)
	CALL eosio_assert(((int_32)*($13 + [96]) == (int_32)($37 + [160])), [752])
	
.LABEL $label$6
	CALL eosio_assert([1], [16])
	$33 = (int_64)5459781
	$31 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $33) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$33 = (uint_64)$33 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$33) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$33 = (uint_64)$33 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$33) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$31 = ($31 + [1])
	if ( ((int_32)$31 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$12 = [1]
	$31 = ($31 + [1])
	if ( ((int_32)$31 < (int_32)[7]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$12 = [0]
	
.LABEL $label$13
	CALL eosio_assert($12, [80])
	if ( ($25 == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], [80])
	if ( $25 ){ goto $label$10 }
	
.LABEL $label$11
	if ( ($13 == 0) ){ goto $label$8 }
	$27 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($13 + [48])) * (float_64)*($13 + [64])))
	CALL eosio_assert((uint_64)(((int_64)$27 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [16])
	$33 = (int_64)5459781
	$31 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $33) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$33 = (uint_64)$33 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$33) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$33 = (uint_64)$33 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$33) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$31 = ($31 + [1])
	if ( ((int_32)$31 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$12 = [1]
	$31 = ($31 + [1])
	if ( ((int_32)$31 < (int_32)[7]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$12 = [0]
	
.LABEL $label$18
	CALL eosio_assert($12, [80])
	$30 = *($13 + [32])
	$26 = *($13 + [8])
	CALL require_auth(*($4))
	CALL _ZN5eosio17orderbook_manager18cancel_lease_orderERKNS_6ulbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($4, $13, $31)
	$28 = (int_64)0
	$11 = [0]
	$10 = (int_64)1397703940
	$29 = $1
	goto $label$9 
	
.LABEL $label$10
	$10 = *(($25 + [72]))
	$30 = *($25 + [32])
	$26 = *($25 + [8])
	$27 = *($25 + [64])
	CALL require_auth(*($4))
	CALL _ZN5eosio17orderbook_manager18cancel_stake_orderERKNS_6usbookERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE($4, $25, $31)
	$29 = (int_64)0
	$11 = [1]
	$28 = $1
	
.LABEL $label$9
	$36 = *($0)
	$33 = (int_64)0
	$32 = (int_64)59
	$31 = [1616]
	$34 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$33 > (uint_64)(int_64)5) ){ goto $label$28 }
	$12 = *($31)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$12 = ($12 + [165])
	goto $label$26 
	
.LABEL $label$28
	$35 = (int_64)0
	if ( ((uint_64)$33 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$35 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$35 = ((int_64)((int_64)$35 & (int_64)31) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$24
	$31 = ($31 + [1])
	$33 = ((int_64)$33 + (int_64)1)
	$34 = ((int_64)$35 | (int_64)$34)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$23 }
	*(($25 = (($37 + [32]) + [8]))) = $34
	*($37 + [32]) = $36
	$33 = (int_64)0
	$32 = (int_64)59
	$31 = [1536]
	$34 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$33 > (uint_64)(int_64)10) ){ goto $label$34 }
	$12 = *($31)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$12 = ($12 + [165])
	goto $label$32 
	
.LABEL $label$34
	$35 = (int_64)0
	if ( ((int_64)$33 == (int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$35 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$35 = ((int_64)((int_64)$35 & (int_64)31) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$30
	$31 = ($31 + [1])
	$32 = ((int_64)$32 + (int_64)-5)
	$34 = ((int_64)$35 | (int_64)$34)
	$33 = ((int_64)$33 + (int_64)1)
	if ( ((int_64)$33 != (int_64)13) ){ goto $label$29 }
	$33 = (int_64)0
	$32 = (int_64)59
	$31 = [1936]
	$36 = (int_64)0
	
.LOOP $label$35:
	if ( ((uint_64)$33 > (uint_64)(int_64)7) ){ goto $label$40 }
	$12 = *($31)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$12 = ($12 + [165])
	goto $label$38 
	
.LABEL $label$40
	$35 = (int_64)0
	if ( ((uint_64)$33 <= (uint_64)(int_64)11) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$39
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$35 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$37
	$35 = ((int_64)((int_64)$35 & (int_64)31) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$36
	$31 = ($31 + [1])
	$33 = ((int_64)$33 + (int_64)1)
	$36 = ((int_64)$35 | (int_64)$36)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$35 }
	*(($13 = (($37 + [240]) + [8]))) = [0]
	*($37 + [240]) = (int_64)0
	$31 = CALL strlen([2016])
	if ( ((uint_32)$31 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$31 >= (uint_32)[11]) ){ goto $label$43 }
	*($37 + [240]) = ($31 << [1])
	$12 = $5
	if ( $31 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	$9 = (($31 + [16]) & [-16])
	$12 = CALL $295($9)
	*($13) = $12
	*($37 + [240]) = ($9 | [1])
	*($37 + [244]) = $31
	
.LABEL $label$42
	CALL memcpy($12, [2016], $31)
	
.LABEL $label$41
	*(($12 + $31)) = [0]
	*(($9 = (($37 + [72]) + [8]))) = $26
	*(($17 = (($37 + [72]) + [16]))) = $27
	*(($18 = (($37 + [72]) + [24]))) = $10
	*($19) = *($37 + [244])
	*(($6 + [8])) = *($13)
	*($37 + [72]) = *($0)
	*($6) = *($37 + [240])
	*($37 + [240]) = [0]
	*($37 + [244]) = [0]
	*($13) = [0]
	$31 = CALL $204(($37 + [120]), ($37 + [32]), $34, $36, ($37 + [72]))
	if ( ((*($6) & [1]) == 0) ){ goto $label$44 }
	CALL $297(*($23))
	
.LABEL $label$44
	if ( ((*($37 + [240]) & [1]) == 0) ){ goto $label$45 }
	CALL $297(*($13))
	
.LABEL $label$45
	CALL $185(($37 + [72]), $31)
	$31 = *($37 + [72])
	CALL send_inline($31, (*($37 + [76]) - $31))
	$31 = *($37 + [72])
	if ( ($31 == 0) ){ goto $label$46 }
	*($37 + [76]) = $31
	CALL $297($31)
	
.LABEL $label$46
	$10 = *($0)
	$33 = (int_64)0
	$32 = (int_64)59
	$31 = [1616]
	$34 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$33 > (uint_64)(int_64)5) ){ goto $label$52 }
	$12 = *($31)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$12 = ($12 + [165])
	goto $label$50 
	
.LABEL $label$52
	$35 = (int_64)0
	if ( ((uint_64)$33 <= (uint_64)(int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$35 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$35 = ((int_64)((int_64)$35 & (int_64)31) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$48
	$31 = ($31 + [1])
	$33 = ((int_64)$33 + (int_64)1)
	$34 = ((int_64)$35 | (int_64)$34)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$47 }
	$33 = (int_64)0
	$32 = (int_64)59
	$31 = [1728]
	$36 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$33 > (uint_64)(int_64)9) ){ goto $label$58 }
	$12 = *($31)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$12 = ($12 + [165])
	goto $label$56 
	
.LABEL $label$58
	$35 = (int_64)0
	if ( ((uint_64)$33 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$35 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$35 = ((int_64)((int_64)$35 & (int_64)31) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$54
	$31 = ($31 + [1])
	$33 = ((int_64)$33 + (int_64)1)
	$36 = ((int_64)$35 | (int_64)$36)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$53 }
	CALL _ZNSt3__19to_stringEx($37, $30)
	$31 = CALL $306($37, [0], [2048])
	$12 = ($31 + [8])
	*(($20 = (($37 + [16]) + [8]))) = *($12)
	*($37 + [16]) = *($31)
	*($31) = [0]
	*(($31 + [4])) = [0]
	*($12) = [0]
	*($21) = [0]
	*($7) = (int_64)0
	*($37 + [72]) = (int_64)0
	*($9) = [0]
	*($17) = $28
	*($18) = $29
	*($6) = $11
	CALL $300($7, ($37 + [16]))
	*($25) = $36
	*(($12 = (($37 + [32]) + [16]))) = (int_64)0
	*(($25 = (($37 + [32]) + [24]))) = [0]
	*($37 + [32]) = $10
	$31 = CALL $295([16])
	*($12) = $31
	*($31) = $10
	*($31 + [8]) = $34
	*($8) = [0]
	*(($11 = (($37 + [32]) + [32]))) = [0]
	$31 = ($31 + [16])
	*($25) = $31
	*($22) = $31
	*((($37 + [32]) + [36])) = [0]
	$31 = *($7)
	$25 = ( *($23) ? uint_32($31 >> [1]) : ($31 & [1]) )
	$31 = ($25 + [29])
	$33 = (CASTING uint_64)(uint_32 $25)
	
.LOOP $label$59:
	$31 = ($31 + [1])
	$33 = (uint_64)$33 >> (uint_64)(int_64)7
	if ( ((int_64)$33) != (int_64)0) ){ goto $label$59 }
	if ( ($31 == 0) ){ goto $label$61 }
	CALL $167($8, $31)
	$25 = *($11)
	$31 = *($8)
	goto $label$60 
	
.LABEL $label$61
	$25 = [0]
	$31 = [0]
	
.LABEL $label$60
	*($13) = $25
	*($37 + [244]) = $31
	*($37 + [240]) = $31
	CALL $186(($37 + [240]), ($37 + [72]))
	if ( ((*($7) & [1]) == 0) ){ goto $label$62 }
	CALL $297(*($21))
	
.LABEL $label$62
	if ( ((*($37 + [16]) & [1]) == 0) ){ goto $label$63 }
	CALL $297(*($20))
	
.LABEL $label$63
	if ( ((*($37) & [1]) == 0) ){ goto $label$64 }
	CALL $297(*(($37 + [8])))
	
.LABEL $label$64
	CALL $185(($37 + [72]), ($37 + [32]))
	$31 = *($37 + [72])
	CALL send_inline($31, (*($37 + [76]) - $31))
	$31 = *($37 + [72])
	if ( ($31 == 0) ){ goto $label$65 }
	*($37 + [76]) = $31
	CALL $297($31)
	
.LABEL $label$65
	$31 = *($8)
	if ( ($31 == 0) ){ goto $label$66 }
	*($11) = $31
	CALL $297($31)
	
.LABEL $label$66
	$31 = *($12)
	if ( ($31 == 0) ){ goto $label$67 }
	*($22) = $31
	CALL $297($31)
	
.LABEL $label$67
	$31 = *((($37 + [120]) + [28]))
	if ( ($31 == 0) ){ goto $label$68 }
	*((($37 + [120]) + [32])) = $31
	CALL $297($31)
	
.LABEL $label$68
	$31 = *((($37 + [120]) + [16]))
	if ( ($31 == 0) ){ goto $label$69 }
	*((($37 + [120]) + [20])) = $31
	CALL $297($31)
	
.LABEL $label$69
	$18 = [1]
	
.LABEL $label$8
	$13 = *($15)
	if ( ($13 == 0) ){ goto $label$70 }
	$31 = *($16)
	if ( ((int_32)$31 == (int_32)$13) ){ goto $label$72 }
	
.LOOP $label$73:
	$31 = ($31 + [-24])
	$12 = *($31)
	*($31) = [0]
	if ( ($12 == 0) ){ goto $label$74 }
	CALL $297($12)
	
.LABEL $label$74
	if ( ((int_32)$13 != (int_32)$31) ){ goto $label$73 }
	$31 = *($15)
	goto $label$71 
	
.LABEL $label$72
	$31 = $13
	
.LABEL $label$71
	*($16) = $13
	CALL $297($31)
	
.LABEL $label$70
	$11 = *($14)
	if ( ($11 == 0) ){ goto $label$75 }
	$25 = (($37 + [200]) + [28])
	$31 = *($25)
	if ( ((int_32)$31 == (int_32)$11) ){ goto $label$77 }
	
.LOOP $label$78:
	$31 = ($31 + [-24])
	$12 = *($31)
	*($31) = [0]
	if ( ($12 == 0) ){ goto $label$79 }
	$13 = *($12 + [48])
	if ( ($13 == 0) ){ goto $label$80 }
	*(($12 + [52])) = $13
	CALL $297($13)
	
.LABEL $label$80
	CALL $297($12)
	
.LABEL $label$79
	if ( ((int_32)$11 != (int_32)$31) ){ goto $label$78 }
	$31 = *($14)
	goto $label$76 
	
.LABEL $label$77
	$31 = $11
	
.LABEL $label$76
	*($25) = $11
	CALL $297($31)
	
.LABEL $label$75
	$24 = ((int_64)$24 + (int_64)7)
	if ( ((int_64)$24 < (int_64)29) ){ goto $label$2 }
	CALL eosio_assert(($18 & [1]), [1872])
	*([0] + [4]) = ($37 + [256])
	return (unreachable)
	
.LABEL $label$1
	CALL $299(($37 + [240]))
}

int_32 .FUNC $204 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $295([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $167($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $206(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $205 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $295(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $204($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $297($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $297($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $297($1)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $8 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [272])
	*([0] + [4]) = $7
	$5 = *($1 + [8])
	$6 = *($1 + [4])
	$4 = *($1)
	*($7 + [176]) = [0]
	$3 = *($2 + [8])
	*($7 + [184]) = $3
	$1 = ($4 & [1])
	$5 = ( $5 ? ($1 + [1]) : $1 )
	$1 = ($5 + ( $6 ? uint_32($4 >> [1]) : $1 ))
	if ( ((uint_32)$3 > (uint_32)[8]) ){ goto $label$2 }
	$4 = ($7 + [176])
	$6 = $2
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL $296($3)
	*($7 + [176]) = $4
	$6 = *($2)
	
.LABEL $label$1
	CALL memcpy($4, $6, $3)
	*($7 + [188]) = *($2 + [12])
	$1 = CALL $9(($7 + [192]), $5, $1, ($7 + [176]))
	$2 = [0]
	*($7 + [232]) = [0]
	$3 = *($1)
	if ( ($3 == 0) ){ goto $label$3 }
	*($7 + [232]) = $3
	if ( ($3 & [1]) ){ goto $label$4 }
	CALL void ($1 + [4])((int_32 (($7 + [232]) | [4])), (int_32 [0]), (int_32 *(($3 & [-2]))))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	*((($7 + [232]) + [12])) = *(($1 + [12]))
	*($7 + [236 align=4]) = *($1 + [4 align=4])
	$2 = $3
	
.LABEL $label$3
	*($7 + [248]) = *($1 + [16 align=4])
	*($7 + [256]) = *($1 + [24])
	*($7 + [260]) = *($1 + [28])
	*($7 + [264]) = *($1 + [32])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ($2 & [1]) ){ goto $label$6 }
	$2 = *(($2 & [-2]))
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ($1 + [4])
	CALL void $3((int_32 $3), (int_32 [2]), (int_32 $2))
	
.LABEL $label$6
	*($1) = [0]
	
.LABEL $label$5
	if ( (*(($7 + [184])) <= [9]) ){ goto $label$7 }
	$1 = *($7 + [176])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $298($1)
	
.LABEL $label$7
	*(($7 + [116])) = [0]
	*($7 + [96]) = [0]
	*($7 + [124]) = [0]
	*($7 + [120]) = [0]
	*($7 + [112]) = [0]
	*($7 + [128]) = [1]
	*($7 + [136]) = [0]
	*($7 + [164]) = [0]
	*($7 + [160]) = [0]
	*($7 + [168]) = [1]
	*($7 + [152]) = *($7 + [112])
	*($7 + [40]) = [0]
	$1 = [0]
	$2 = *($7 + [232])
	if ( ($2 == 0) ){ goto $label$8 }
	*($7 + [40]) = $2
	if ( ($2 & [1]) ){ goto $label$9 }
	CALL void (($7 + [232]) | [4])((int_32 (($7 + [40]) | [4])), (int_32 [0]), (int_32 *(($2 & [-2]))))
	$1 = *($7 + [136])
	goto $label$8 
	
.LABEL $label$9
	*((($7 + [40]) + [12])) = *((($7 + [232]) + [12]))
	*($7 + [44 align=4]) = *($7 + [236 align=4])
	$1 = [0]
	
.LABEL $label$8
	*($7 + [56]) = *((($7 + [232]) + [16]))
	*($7 + [64]) = *((($7 + [232]) + [24]))
	*($7 + [68]) = *((($7 + [232]) + [28]))
	*($7 + [72]) = *((($7 + [232]) + [32]))
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	*($7) = $1
	if ( ($1 & [1]) ){ goto $label$11 }
	CALL void (($7 + [136]) | [4])((int_32 ($7 | [4])), (int_32 [0]), (int_32 *(($1 & [-2]))))
	goto $label$10 
	
.LABEL $label$11
	*(($7 + [12])) = *((($7 + [136]) + [12]))
	*($7 + [4 align=4]) = *($7 + [140 align=4])
	
.LABEL $label$10
	*($7 + [16]) = *((($7 + [136]) + [16]))
	*($7 + [24]) = *((($7 + [136]) + [24]))
	*($7 + [28]) = *((($7 + [136]) + [28]))
	*($7 + [32]) = *((($7 + [136]) + [32]))
	$3 = CALL $10(($7 + [80]), ($7 + [40]), $7)
	$1 = *($7)
	if ( ($1 == 0) ){ goto $label$12 }
	if ( ($1 & [1]) ){ goto $label$13 }
	$1 = *(($1 & [-2]))
	if ( ($1 == 0) ){ goto $label$13 }
	$2 = ($7 | [4])
	CALL void $2((int_32 $2), (int_32 [2]), (int_32 $1))
	
.LABEL $label$13
	*($7) = [0]
	
.LABEL $label$12
	$1 = *($7 + [40])
	if ( ($1 == 0) ){ goto $label$14 }
	if ( ($1 & [1]) ){ goto $label$15 }
	$1 = *(($1 & [-2]))
	if ( ($1 == 0) ){ goto $label$15 }
	$2 = (($7 + [40]) | [4])
	CALL void $2((int_32 $2), (int_32 [2]), (int_32 $1))
	
.LABEL $label$15
	*($7 + [40]) = [0]
	
.LABEL $label$14
	$4 = *($0)
	*($0) = *($3)
	*($3) = $4
	$1 = *($0 + [4])
	*($0 + [4]) = *($3 + [4])
	*($3 + [4]) = $1
	$2 = *($0 + [8])
	*($0 + [8]) = *($3 + [8])
	*($3 + [8]) = $2
	if ( ($4 == 0) ){ goto $label$16 }
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$18 }
	$2 = ([0] - $4)
	$1 = ($1 + [-12])
	
.LOOP $label$19:
	if ( ((*($1) & [1]) == 0) ){ goto $label$20 }
	CALL $297(*(($1 + [8])))
	
.LABEL $label$20
	$1 = ($1 + [-12])
	if ( ((int_32)($1 + $2) != (int_32)[-12]) ){ goto $label$19 }
	$1 = *($3)
	goto $label$17 
	
.LABEL $label$18
	$1 = $4
	
.LABEL $label$17
	*(($3 + [4])) = $4
	CALL $297($1)
	
.LABEL $label$16
	$1 = *($7 + [136])
	if ( ($1 == 0) ){ goto $label$21 }
	if ( ($1 & [1]) ){ goto $label$22 }
	$1 = *(($1 & [-2]))
	if ( ($1 == 0) ){ goto $label$22 }
	$2 = (($7 + [136]) | [4])
	CALL void $2((int_32 $2), (int_32 [2]), (int_32 $1))
	
.LABEL $label$22
	*($7 + [136]) = [0]
	
.LABEL $label$21
	$1 = *($7 + [232])
	if ( ($1 == 0) ){ goto $label$23 }
	if ( ($1 & [1]) ){ goto $label$24 }
	$1 = *(($1 & [-2]))
	if ( ($1 == 0) ){ goto $label$24 }
	$2 = (($7 + [232]) | [4])
	CALL void $2((int_32 $2), (int_32 [2]), (int_32 $1))
	
.LABEL $label$24
	*($7 + [232]) = [0]
	
.LABEL $label$23
	*([0] + [4]) = ($7 + [272])
	return $0
}

int_32 .FUNC $9 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [8]) = [0]
	$4 = *($3 + [8])
	*($7 + [16]) = $4
	if ( ((uint_32)$4 > (uint_32)[8]) ){ goto $label$2 }
	$6 = ($7 + [8])
	$5 = $3
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL $296($4)
	*($7 + [8]) = $6
	$5 = *($3)
	
.LABEL $label$1
	CALL memcpy($6, $5, $4)
	*($7 + [20]) = *($3 + [12])
	CALL $12($0, ($7 + [8]), [0])
	if ( (*(($7 + [16])) <= [9]) ){ goto $label$3 }
	$3 = *($7 + [8])
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $298($3)
	
.LABEL $label$3
	*($0 + [16]) = $1
	*($0 + [24]) = $1
	*($0 + [28]) = $2
	*($0 + [32]) = [0]
	*(($0 + [20])) = $1
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$8 }
	CALL void ($7 + [24])((int_32 ($0 + [4])), (int_32 $1), (int_32 $2), (int_32 *(($3 & [-2]) + [4])))
	$1 = *($7 + [24])
	if ( ((int_32)$1 == (int_32)*($0 + [28])) ){ goto $label$7 }
	$2 = *($7 + [28])
	goto $label$5 
	
.LABEL $label$8
	*($7 + [28]) = $2
	*($7 + [24]) = $2
	$1 = $2
	goto $label$6 
	
.LABEL $label$7
	$2 = *($7 + [28])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((int_32)*(($0 + [20])) != (int_32)$2) ){ goto $label$5 }
	*(($0 + [32])) = [1]
	
.LABEL $label$5
	*(($0 + [20])) = $1
	$1 = ($0 + [24])
	*(($0 + [16])) = *($1)
	*($1) = $2
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [32])
	return $0
}

int_32 .FUNC _ZN5eosio5orderC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	float_64 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [208])
	*([0] + [4]) = $17
	*($0 + [24]) = (int_64)0
	*(($12 = ($0 + [32]))) = (int_64)1397703940
	CALL eosio_assert([1], [16])
	$2 = ($0 + [24])
	$14 = (uint_64)*($12) >> (uint_64)(int_64)8)
	$12 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$11 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$11 = [0]
	
.LABEL $label$1
	CALL eosio_assert($11, [80])
	*(($12 = ($0 + [48]))) = (int_64)1397703940
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [16])
	$3 = ($0 + [40])
	$14 = (uint_64)*($12) >> (uint_64)(int_64)8)
	$12 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$11 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$11 = [0]
	
.LABEL $label$6
	CALL eosio_assert($11, [80])
	*(($12 = ($0 + [64]))) = (int_64)1397703940
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [16])
	$4 = ($0 + [56])
	$14 = (uint_64)*($12) >> (uint_64)(int_64)8)
	$12 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$11 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$11 = [0]
	
.LABEL $label$11
	CALL eosio_assert($11, [80])
	*(($12 = ($0 + [88]))) = (int_64)1397703940
	*($0 + [80]) = (int_64)0
	CALL eosio_assert([1], [16])
	$5 = ($0 + [80])
	$14 = (uint_64)*($12) >> (uint_64)(int_64)8)
	$12 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$11 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$11 = [0]
	
.LABEL $label$16
	CALL eosio_assert($11, [80])
	*(($12 = ($0 + [104]))) = (int_64)1397703940
	*($0 + [96]) = (int_64)0
	CALL eosio_assert([1], [16])
	$6 = ($0 + [96])
	$14 = (uint_64)*($12) >> (uint_64)(int_64)8)
	$12 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$11 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$11 = [0]
	
.LABEL $label$21
	CALL eosio_assert($11, [80])
	$12 = *($1)
	if ( ($12 & [1]) ){ goto $label$27 }
	$12 = uint_32($12 >> [1])
	$11 = ($1 + [1])
	goto $label$26 
	
.LABEL $label$27
	$12 = *($1 + [4])
	$11 = *($1 + [8])
	
.LABEL $label$26
	CALL sha256($11, $12, ($17 + [176]))
	CALL memcpy($0, ($17 + [176]), [4])
	$8 = [0]
	*($17 + [168]) = [0]
	*($17 + [160]) = (int_64)0
	$12 = CALL strlen([288])
	*($17 + [152]) = $12
	*($17 + [144]) = [0]
	if ( ((uint_32)$12 >= (uint_32)[9]) ){ goto $label$30 }
	$11 = ($17 + [144])
	if ( $12 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$11 = CALL $296($12)
	*($17 + [144]) = $11
	
.LABEL $label$29
	CALL memmove($11, [288], $12)
	$8 = *(($17 + [152]))
	
.LABEL $label$28
	CALL $292($11, ($11 + $8), ($17 + [128]))
	CALL $7(($17 + [160]), $1, ($17 + [144]), [1])
	if ( (*(($17 + [152])) <= [9]) ){ goto $label$31 }
	$12 = *($17 + [144])
	if ( ($12 == 0) ){ goto $label$31 }
	CALL $298($12)
	
.LABEL $label$31
	*($0 + [72]) = CALL current_time()
	$7 = *($17 + [160])
	if ( (*($7) & [1]) ){ goto $label$33 }
	$12 = ($7 + [1])
	goto $label$32 
	
.LABEL $label$33
	$12 = *($7 + [8])
	
.LABEL $label$32
	$11 = [-1]
	
.LOOP $label$34:
	$1 = ($12 + $11)
	$8 = ($11 + [1])
	$11 = $8
	if ( *(($1 + [1])) ){ goto $label$34 }
	$9 = (CASTING uint_64)(uint_32 $8)
	$14 = (int_64)0
	$13 = (int_64)59
	$15 = (int_64)0
	
.LOOP $label$35:
	$16 = (int_64)0
	if ( ((uint_64)$14 >= (uint_64)$9) ){ goto $label$36 }
	$11 = *($12)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$11 = ($11 + [165])
	goto $label$37 
	
.LABEL $label$38
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$40 }
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	goto $label$39 
	
.LABEL $label$40
	$16 = ((int_64)$16 & (int_64)15)
	
.LABEL $label$39
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$35 }
	*($0 + [8]) = $15
	if ( (*($7 + [12]) & [1]) ){ goto $label$42 }
	$12 = (($7 + [12]) + [1])
	goto $label$41 
	
.LABEL $label$42
	$12 = *(($7 + [20]))
	
.LABEL $label$41
	$11 = [-1]
	
.LOOP $label$43:
	$1 = ($12 + $11)
	$8 = ($11 + [1])
	$11 = $8
	if ( *(($1 + [1])) ){ goto $label$43 }
	$9 = (CASTING uint_64)(uint_32 $8)
	$14 = (int_64)0
	$13 = (int_64)59
	$15 = (int_64)0
	
.LOOP $label$44:
	$16 = (int_64)0
	if ( ((uint_64)$14 >= (uint_64)$9) ){ goto $label$45 }
	$11 = *($12)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$11 = ($11 + [165])
	goto $label$46 
	
.LABEL $label$47
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$49 }
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	goto $label$48 
	
.LABEL $label$49
	$16 = ((int_64)$16 & (int_64)15)
	
.LABEL $label$48
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$44 }
	*($0 + [128]) = $15
	CALL $318(($17 + [112]), ($7 + [60]))
	CALL _ZN5eosio15string_to_assetENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(($17 + [128]), ($17 + [112]))
	*(($5 + [8])) = *((($17 + [128]) + [8]))
	*($5) = *($17 + [128])
	if ( ((*($17 + [112]) & [1]) == 0) ){ goto $label$50 }
	CALL $297(*($17 + [120]))
	
.LABEL $label$50
	$10 = CALL pow((float_64)10, (CASTING float_64)(uint_64 *(($0 + [88]))))
	$12 = ($0 + [80])
	$14 = *($12)
	$13 = (Rounds 0)($10)
	CALL eosio_assert(((int_64)$13 != (int_64)0), [304])
	CALL eosio_assert((((int_64)$13 != (int_64)-1) | ((int_64)$14 != (int_64)-9223372036854775808)), [320])
	*($12) = ((int_64)((int_64)$14 / (int_64)$13) * (int_64)86400)
	$11 = *($12 + [24])
	$12 = *($17 + [160])
	$1 = CALL strlen([352])
	if ( ((int_32)$1 != (int_32)( *(($12 + [28])) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$55 }
	if ( (CALL $310(($12 + [24]), [0], [-1], [352], $1) == 0) ){ goto $label$54 }
	
.LABEL $label$55
	$11 = *($12 + [24])
	$12 = *($17 + [160])
	$1 = CALL strlen([368])
	if ( ((int_32)$1 != (int_32)( *(($12 + [28])) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$51 }
	if ( CALL $310(($12 + [24]), [0], [-1], [368], $1) ){ goto $label$51 }
	*($0 + [16]) = [0]
	CALL $318(($17 + [64]), (*($17 + [160]) + [72]))
	CALL _ZN5eosio15string_to_assetENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(($17 + [128]), ($17 + [64]))
	$12 = (($17 + [128]) + [8])
	*(($6 + [8])) = *($12)
	*($6) = *($17 + [128])
	if ( ((*($17 + [64]) & [1]) == 0) ){ goto $label$56 }
	CALL $297(*($17 + [72]))
	
.LABEL $label$56
	CALL $318(($17 + [48]), (*($17 + [160]) + [36]))
	CALL _ZN5eosio15string_to_assetENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(($17 + [128]), ($17 + [48]))
	*(($2 + [8])) = *($12)
	*($2) = *($17 + [128])
	if ( ((*($17 + [48]) & [1]) == 0) ){ goto $label$57 }
	CALL $297(*($17 + [56]))
	
.LABEL $label$57
	*($3) = *($2)
	*(($3 + [8])) = *(($2 + [8]))
	CALL $318(($17 + [32]), (*($17 + [160]) + [48]))
	CALL _ZN5eosio15string_to_assetENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(($17 + [128]), ($17 + [32]))
	*(($4 + [8])) = *((($17 + [128]) + [8]))
	*($4) = *($17 + [128])
	if ( ((*($17 + [32]) & [1]) == 0) ){ goto $label$58 }
	CALL $297(*($17 + [40]))
	
.LABEL $label$58
	$14 = *($4)
	if ( ((int_64)$14 < (int_64)0) ){ goto $label$53 }
	$12 = ((float_64)(CASTING float_64)(int_64 $14) <= (float_64)CALL pow((float_64)10, (CASTING float_64)(uint_64 *(($0 + [64])))))
	goto $label$52 
	
.LABEL $label$54
	*($0 + [16]) = [1]
	CALL $318(($17 + [96]), (*($17 + [160]) + [36]))
	CALL _ZN5eosio15string_to_assetENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(($17 + [128]), ($17 + [96]))
	*(($12 = ($2 + [8]))) = *((($17 + [128]) + [8]))
	*($2) = *($17 + [128])
	if ( ((*($17 + [96]) & [1]) == 0) ){ goto $label$59 }
	CALL $297(*($17 + [104]))
	
.LABEL $label$59
	*($3) = *($2)
	*(($3 + [8])) = *($12)
	CALL $318(($17 + [80]), (*($17 + [160]) + [48]))
	CALL _ZN5eosio15string_to_assetENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(($17 + [128]), ($17 + [80]))
	$14 = *($17 + [128])
	$14 = *($0 + [24])
	CALL __multi3($17, $14, (int_64)$14 >> (int_64)63), $14, (int_64)$14 >> (int_64)63))
	$12 = ($0 + [32])
	$16 = *($12)
	$13 = *(($17 + [8]))
	$14 = *($17)
	CALL eosio_assert(( (uint_64)($14 <= (int_64)4611686018427387904) ? ((int_64)$13 < (int_64)0) : (int_64)($13 == 0) ), [112])
	CALL eosio_assert(( ((uint_64)$14 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$13 > (int_64)-1) : ((int_64)$13 == (int_64)-1) ), [144])
	$13 = (Rounds 0)(CALL pow((float_64)10, (CASTING float_64)(uint_64 *($12))))
	CALL eosio_assert(((int_64)$13 != (int_64)0), [304])
	CALL eosio_assert((((int_64)$14 != (int_64)-9223372036854775808) | ((int_64)$13 != (int_64)-1)), [320])
	*(($0 + [64])) = $16
	*($0 + [56]) = ((int_64)$14 / (int_64)$13)
	if ( ((*($17 + [80]) & [1]) == 0) ){ goto $label$51 }
	CALL $297(*($17 + [88]))
	goto $label$51 
	
.LABEL $label$53
	$12 = [0]
	
.LABEL $label$52
	CALL eosio_assert($12, [384])
	$12 = ($0 + [56])
	$14 = *($12)
	$14 = *($0 + [24])
	CALL __multi3(($17 + [16]), $14, (int_64)$14 >> (int_64)63), $14, (int_64)$14 >> (int_64)63))
	$11 = ($0 + [32])
	$16 = *($11)
	$13 = *(($17 + [24]))
	$14 = *($17 + [16])
	CALL eosio_assert(( (uint_64)($14 <= (int_64)4611686018427387904) ? ((int_64)$13 < (int_64)0) : (int_64)($13 == 0) ), [112])
	CALL eosio_assert(( ((uint_64)$14 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$13 > (int_64)-1) : ((int_64)$13 == (int_64)-1) ), [144])
	$13 = (Rounds 0)(CALL pow((float_64)10, (CASTING float_64)(uint_64 *($11))))
	CALL eosio_assert(((int_64)$13 != (int_64)0), [304])
	CALL eosio_assert((((int_64)$14 != (int_64)-9223372036854775808) | ((int_64)$13 != (int_64)-1)), [320])
	*(($0 + [64])) = $16
	*($12) = ((int_64)$14 / (int_64)$13)
	
.LABEL $label$51
	CALL memcpy(($0 + [112]), ($17 + [176]), [16])
	$1 = *($17 + [160])
	if ( ($1 == 0) ){ goto $label$60 }
	$12 = *($17 + [164])
	if ( ((int_32)$12 == (int_32)$1) ){ goto $label$62 }
	$11 = ([0] - $1)
	$12 = ($12 + [-12])
	
.LOOP $label$63:
	if ( ((*($12) & [1]) == 0) ){ goto $label$64 }
	CALL $297(*(($12 + [8])))
	
.LABEL $label$64
	$12 = ($12 + [-12])
	if ( ((int_32)($12 + $11) != (int_32)[-12]) ){ goto $label$63 }
	$12 = *($17 + [160])
	goto $label$61 
	
.LABEL $label$62
	$12 = $1
	
.LABEL $label$61
	*($17 + [164]) = $1
	CALL $297($12)
	
.LABEL $label$60
	*([0] + [4]) = ($17 + [208])
	return $0
}

int_32 .FUNC $7 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($6) = [0]
	$4 = *($2 + [8])
	*($6 + [8]) = $4
	if ( ((uint_32)$4 > (uint_32)[8]) ){ goto $label$2 }
	$5 = $6
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL $296($4)
	*($6) = $5
	$2 = *($2)
	
.LABEL $label$1
	CALL memcpy($5, $2, $4)
	*($6 + [32]) = [0]
	$2 = *(($6 + [8]))
	*($6 + [40]) = $2
	if ( ((uint_32)$2 > (uint_32)[8]) ){ goto $label$4 }
	$4 = $6
	$5 = ($6 + [32])
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL $296($2)
	*($6 + [32]) = $5
	$4 = *($6)
	
.LABEL $label$3
	CALL memcpy($5, $4, $2)
	*($6 + [16]) = [0]
	$2 = *((($6 + [32]) + [8]))
	*($6 + [24]) = $2
	if ( ((uint_32)$2 > (uint_32)[8]) ){ goto $label$6 }
	$4 = ($6 + [16])
	$5 = ($6 + [32])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $296($2)
	*($6 + [16]) = $4
	$2 = *((($6 + [16]) + [8]))
	$5 = *($6 + [32])
	
.LABEL $label$5
	CALL memcpy($4, $5, $2)
	*($6 + [28]) = $3
	if ( (*((($6 + [32]) + [8])) <= [9]) ){ goto $label$7 }
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $298($2)
	
.LABEL $label$7
	$2 = CALL $8($0, $1, ($6 + [16]))
	if ( (*((($6 + [16]) + [8])) <= [9]) ){ goto $label$8 }
	$4 = *($6 + [16])
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $298($4)
	
.LABEL $label$8
	if ( (*(($6 + [8])) <= [9]) ){ goto $label$9 }
	$4 = *($6)
	if ( ($4 == 0) ){ goto $label$9 }
	CALL $298($4)
	
.LABEL $label$9
	*([0] + [4]) = ($6 + [48])
	return $2
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _ZN5eosio15string_to_assetENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [48])
	*([0] + [4]) = $13
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [16])
	$10 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$12 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$12 = [0]
	
.LABEL $label$1
	CALL eosio_assert($12, [80])
	$6 = [0]
	if ( ((int_32)*(CALL $303($1, [0])) != (int_32)[45]) ){ goto $label$6 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	$11 = ($1 + [1])
	goto $label$7 
	
.LABEL $label$8
	$11 = *($1 + [8])
	
.LABEL $label$7
	$6 = [1]
	CALL $308($1, ($11 - $11), [1])
	
.LABEL $label$6
	$5 = CALL $309($1, [46], [0])
	$7 = (Rounds 0)(CALL pow((float_64)10, (float_64)4))
	if ( ((int_32)$5 == (int_32)[-1]) ){ goto $label$14 }
	$9 = ($5 + [-1])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$13 }
	$2 = ($1 + [1])
	$4 = (($13 + [32]) + [8])
	$8 = (int_64)0
	
.LOOP $label$15:
	$11 = $2
	if ( ((*($1) & [1]) == 0) ){ goto $label$16 }
	$11 = *(($1 + [8]))
	
.LABEL $label$16
	$10 = *(($11 + $9))
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387855) <= (int_64)9223372036854775807), [16])
	$3 = ((int_64)$10 + (int_64)-48)
	$10 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	
.LOOP $label$21:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$21 }
	
.LABEL $label$20
	$12 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$12 = [0]
	
.LABEL $label$17
	CALL __multi3(($13 + [32]), $3, (int_64)$3 >> (int_64)63), $7, (int_64)$7 >> (int_64)63))
	CALL eosio_assert($12, [80])
	$10 = *($4)
	$3 = *($13 + [32])
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$10 < (int_64)0) : (int_64)($10 == 0) ), [112])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$10 > (int_64)-1) : ((int_64)$10 == (int_64)-1) ), [144])
	CALL eosio_assert([1], [176])
	$8 = ((int_64)$8 + (int_64)$3)
	*($0) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [224])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [256])
	$7 = ((int_64)$7 * (int_64)10)
	$9 = ($9 + [-1])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$15 }
	goto $label$12 
	
.LABEL $label$14
	$12 = *($1)
	if ( ($12 & [1]) ){ goto $label$11 }
	$5 = ($1 + [8])
	$11 = uint_32($12 >> [1])
	$2 = ($1 + [1])
	$9 = $2
	goto $label$10 
	
.LABEL $label$13
	$8 = (int_64)0
	
.LABEL $label$12
	$7 = (Rounds 0)(CALL pow((float_64)10, (float_64)3))
	$12 = *($1)
	if ( ($12 & [1]) ){ goto $label$23 }
	$2 = uint_32($12 >> [1])
	goto $label$22 
	
.LABEL $label$23
	$2 = *($1 + [4])
	
.LABEL $label$22
	$9 = ($5 + [1])
	if ( ((uint_32)$9 >= (uint_32)$2) ){ goto $label$9 }
	$4 = ($1 + [1])
	$5 = (($13 + [16]) + [8])
	
.LOOP $label$24:
	$11 = $4
	if ( (($12 & [1]) == 0) ){ goto $label$25 }
	$11 = *(($1 + [8]))
	
.LABEL $label$25
	$10 = *(($11 + $9))
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387855) <= (int_64)9223372036854775807), [16])
	$3 = ((int_64)$10 + (int_64)-48)
	$10 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$12 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$12 = [0]
	
.LABEL $label$26
	CALL __multi3(($13 + [16]), $3, (int_64)$3 >> (int_64)63), $7, (int_64)$7 >> (int_64)63))
	CALL eosio_assert($12, [80])
	$10 = *($5)
	$3 = *($13 + [16])
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$10 < (int_64)0) : (int_64)($10 == 0) ), [112])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$10 > (int_64)-1) : ((int_64)$10 == (int_64)-1) ), [144])
	CALL eosio_assert([1], [176])
	$8 = ((int_64)$8 + (int_64)$3)
	*($0) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [224])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [256])
	$9 = ($9 + [1])
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$9 }
	$7 = ((uint_64)$7 / (uint_64)(int_64)10)
	$12 = *($1)
	goto $label$24 
	
.LABEL $label$11
	$2 = ($1 + [1])
	$5 = ($1 + [8])
	$11 = *($1 + [4])
	$9 = *($1 + [8])
	
.LABEL $label$10
	$9 = ($9 + $11)
	$4 = ($13 + [8])
	$8 = (int_64)0
	
.LOOP $label$31:
	$11 = $2
	if ( (($12 & [1]) == 0) ){ goto $label$32 }
	$11 = *($5)
	
.LABEL $label$32
	if ( ((int_32)$9 == (int_32)$11) ){ goto $label$9 }
	$9 = ($9 + [-1])
	$10 = *($9)
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387855) <= (int_64)9223372036854775807), [16])
	$3 = ((int_64)$10 + (int_64)-48)
	$10 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$35:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$34 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$36 }
	
.LOOP $label$37:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$37 }
	
.LABEL $label$36
	$12 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$35 }
	goto $label$33 
	
.LABEL $label$34
	$12 = [0]
	
.LABEL $label$33
	CALL __multi3($13, $3, (int_64)$3 >> (int_64)63), $7, (int_64)$7 >> (int_64)63))
	CALL eosio_assert($12, [80])
	$10 = *($4)
	$3 = *($13)
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$10 < (int_64)0) : (int_64)($10 == 0) ), [112])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$10 > (int_64)-1) : ((int_64)$10 == (int_64)-1) ), [144])
	CALL eosio_assert([1], [176])
	$8 = ((int_64)$8 + (int_64)$3)
	*($0) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [224])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [256])
	$7 = ((int_64)$7 * (int_64)10)
	$12 = *($1)
	goto $label$31 
	
.LABEL $label$9
	if ( ($6 == 0) ){ goto $label$38 }
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [112])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [144])
	*($0) = (int_64))((int_64)0 - $8)
	
.LABEL $label$38
	*([0] + [4]) = ($13 + [48])
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC memory ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC _ZeqRK11checksum256S1_ (int_32 $0, int_32 _ZeqRK11checksum256S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $14 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($6) = $1
	$5 = [0]
	if ( CALL $15($6) ){ goto $label$1 }
	*($6 + [16]) = [0]
	$5 = *($1 + [8])
	*($6 + [24]) = $5
	if ( ((uint_32)$5 > (uint_32)[8]) ){ goto $label$3 }
	$4 = ($6 + [16])
	$3 = $1
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $296($5)
	*($6 + [16]) = $4
	$3 = *($1)
	
.LABEL $label$2
	CALL memcpy($4, $3, $5)
	*($6 + [28]) = *($1 + [12])
	*(($1 = CALL $295([16]))) = [0]
	$5 = *((($6 + [16]) + [8]))
	*($1 + [8]) = $5
	if ( ((uint_32)$5 > (uint_32)[8]) ){ goto $label$5 }
	$4 = ($6 + [16])
	$3 = $1
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $296($5)
	*($1) = $3
	$5 = *(($1 + [8]))
	$4 = *($6 + [16])
	
.LABEL $label$4
	CALL memcpy($3, $4, $5)
	*($2) = $1
	*($1 + [12]) = *(($6 + [28]))
	$5 = [1]
	if ( (*(($6 + [24])) <= [9]) ){ goto $label$1 }
	$1 = *($6 + [16])
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $298($1)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
	return $5
}

int_32 .FUNC $15 (int_32 $0)
{
	return [0]
}

void .FUNC $16 (int_32 $0, int_32 $1, int_32 $2)
{
	if ( ((int_32)$2 != (int_32)[4]) ){ goto $label$4 }
	$0 = [0]
	
.LOOP $label$5:
	$2 = [-3]
	
.LOOP $label$7:
	if ( ((int_32)*((($0 + $2) + [490])) != (int_32)*(($2 + [435]))) ){ goto $label$6 }
	if ( ($2 == 0) ){ goto $label$3 }
	$2 = ($2 + [1])
	if ( ((int_32)($0 + $2) != (int_32)[180]) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$6
	$2 = [183]
	$0 = ($0 + [1])
	if ( ((int_32)$0 != (int_32)[183]) ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$4
	CALL $19($0, $1, $2)
	return 
	
.LABEL $label$3
	$2 = $0
	goto $label$1 
	
.LABEL $label$2
	$2 = [183]
	
.LABEL $label$1
	*($1 + [4]) = [0]
	*($1) = ( [487] ? ($2 + [491]) : ((int_32)$2 == (int_32)[183]) )
}

void .FUNC $17 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	CALL $18($0, *($1), $2, $3)
}

int_32 .FUNC $10 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [16])
	*([0] + [4]) = $16
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = ($1 + [4])
	$3 = ($16 | [1])
	$5 = ($1 + [20])
	$6 = ($1 + [16])
	$7 = ($16 + [8])
	$8 = ($1 + [28])
	$9 = ($1 + [32])
	$10 = ($1 + [24])
	
.LOOP $label$1:
	$13 = [1]
	if ( (*($1) == 0) ){ goto $label$2 }
	$13 = ((int_32)*($9) != (int_32)[0])
	
.LABEL $label$2
	if ( (*($2) == 0) ){ goto $label$10 }
	$15 = ((int_32)*(($2 + [32])) != (int_32)[0])
	if ( ((int_32)($13 | $15) == (int_32)[1]) ){ goto $label$9 }
	$15 = *(($2 + [16]))
	$13 = *($6)
	$12 = *($5)
	if ( ((int_32)($12 - $13) != (int_32)(*(($2 + [20])) - $15)) ){ goto $label$7 }
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$11 }
	$11 = $13
	
.LOOP $label$12:
	if ( ((int_32)*($11) != (int_32)*($15)) ){ goto $label$7 }
	$15 = ($15 + [1])
	$11 = ($11 + [1])
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)*($10) != (int_32)*(($2 + [24]))) ){ goto $label$7 }
	if ( ((int_32)*($8) != (int_32)*(($2 + [28]))) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$10
	$15 = [1]
	
.LABEL $label$9
	if ( ((int_32)$13 == (int_32)$15) ){ goto $label$6 }
	
.LABEL $label$8
	$12 = *($5)
	$13 = *($6)
	
.LABEL $label$7
	*($7) = [0]
	*($16) = (int_64)0
	$11 = ($12 - $13)
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$11 > (uint_32)[10]) ){ goto $label$15 }
	*($16) = ($11 << [1])
	$14 = $3
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$15 = (($11 + [16]) & [-16])
	$14 = CALL $295($15)
	*($7) = $14
	*($16) = ($15 | [1])
	*($16 + [4]) = $11
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$13 }
	
.LABEL $label$14
	$15 = $14
	
.LOOP $label$16:
	*($15) = *($13)
	$15 = ($15 + [1])
	$13 = ($13 + [1])
	if ( ((int_32)$12 != (int_32)$13) ){ goto $label$16 }
	$14 = ($14 + $11)
	
.LABEL $label$13
	*($14) = [0]
	$13 = ($0 + [4])
	$15 = *($13)
	if ( ((uint_32)$15 >= (uint_32)*(($0 + [8]))) ){ goto $label$18 }
	*($15) = *($16)
	*(($15 + [8])) = *($7)
	*($7) = [0]
	*($16) = [0]
	*($16 + [4]) = [0]
	*($13) = (*($13) + [12])
	goto $label$17 
	
.LABEL $label$18
	CALL $11($0, $16)
	if ( ((*($16) & [1]) == 0) ){ goto $label$17 }
	CALL $297(*($7))
	
.LABEL $label$17
	$13 = *($8)
	$15 = *($1)
	if ( ($15 == 0) ){ goto $label$20 }
	CALL void $16((int_32 $4), (int_32 *($10)), (int_32 $13), (int_32 *(($15 & [-2]) + [4])))
	$15 = *($16)
	if ( ((int_32)$15 == (int_32)*($8)) ){ goto $label$19 }
	$13 = *($16 + [4])
	goto $label$3 
	
.LABEL $label$20
	*($16 + [4]) = $13
	*($16) = $13
	$15 = $13
	goto $label$4 
	
.LABEL $label$19
	$13 = *($16 + [4])
	if ( ((int_32)$13 != (int_32)$15) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$6
	*([0] + [4]) = ($16 + [16])
	return $0
	
.LABEL $label$5
	CALL $299($16)
	
.LABEL $label$4
	if ( ((int_32)*($5) != (int_32)$15) ){ goto $label$3 }
	*($9) = [1]
	
.LABEL $label$3
	*($5) = $15
	*($6) = *($10)
	*($10) = $13
	goto $label$1 
	return (unreachable)
}

void .FUNC $11 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$7 = *($0 + [4])
	$8 = ((int_32)($7 - $4) / (int_32)[12])
	$6 = ($8 + [1])
	if ( ((uint_32)$6 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[12])
	if ( ((uint_32)$3 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($3 << [1])
	$5 = ( $6 ? $5 : ($5 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $295(((int_32)$5 * (int_32)[12]))
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	$2 = *($1)
	*($1) = (int_64)0
	*(($8 = ($6 + ((int_32)$8 * (int_32)[12])))) = $2
	$1 = ($1 + [8])
	$3 = *($1)
	*($1) = [0]
	*(($8 + [8])) = $3
	$5 = ($6 + ((int_32)$5 * (int_32)[12]))
	$6 = ($8 + [12])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$1 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$7:
	*(($8 + [-12])) = *($7)
	$4 = ($7 + [8])
	*(($8 + [-4])) = *($4)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($4) = [0]
	$8 = ($8 + [-12])
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	$8 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$9:
	if ( ((*($7) & [1]) == 0) ){ goto $label$10 }
	CALL $297(*(($7 + [8])))
	
.LABEL $label$10
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $8) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $297($4)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $12 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($6) = [0]
	$3 = *($1 + [8])
	*($6 + [8]) = $3
	if ( ((uint_32)$3 > (uint_32)[8]) ){ goto $label$2 }
	$5 = $6
	$4 = $1
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL $296($3)
	*($6) = $5
	$4 = *($1)
	
.LABEL $label$1
	CALL memcpy($5, $4, $3)
	*($6 + [12]) = *($1 + [12])
	*($0) = [0]
	*($6 + [16]) = [0]
	$1 = *(($6 + [8]))
	*($6 + [24]) = $1
	if ( ((uint_32)$1 > (uint_32)[8]) ){ goto $label$4 }
	$3 = $6
	$5 = ($6 + [16])
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL $296($1)
	*($6 + [16]) = $5
	$3 = *($6)
	
.LABEL $label$3
	CALL memcpy($5, $3, $1)
	*($6 + [28]) = *(($6 + [12]))
	CALL $13($0, ($6 + [16]))
	if ( (*((($6 + [16]) + [8])) <= [9]) ){ goto $label$5 }
	$1 = *($6 + [16])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $298($1)
	
.LABEL $label$5
	if ( (*(($6 + [8])) <= [9]) ){ goto $label$6 }
	$1 = *($6)
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $298($1)
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [32])
	return $0
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	*($5) = [0]
	$2 = *($1 + [8])
	*($5 + [8]) = $2
	if ( ((uint_32)$2 > (uint_32)[8]) ){ goto $label$2 }
	$4 = $5
	$3 = $1
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL $296($2)
	*($5) = $4
	$3 = *($1)
	
.LABEL $label$1
	CALL memcpy($4, $3, $2)
	*($5 + [12]) = *($1 + [12])
	*($5 + [16]) = [0]
	$1 = *(($5 + [8]))
	*($5 + [24]) = $1
	$2 = ($0 + [4])
	if ( ((uint_32)$1 > (uint_32)[8]) ){ goto $label$4 }
	$4 = $5
	$3 = ($5 + [16])
	goto $label$3 
	
.LABEL $label$4
	$3 = CALL $296($1)
	*($5 + [16]) = $3
	$4 = *($5)
	
.LABEL $label$3
	CALL memcpy($3, $4, $1)
	*($5 + [28]) = *(($5 + [12]))
	$1 = CALL $14([412], ($5 + [16]), $2)
	if ( (*((($5 + [16]) + [8])) <= [9]) ){ goto $label$5 }
	$2 = *($5 + [16])
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $298($2)
	
.LABEL $label$5
	if ( (*(($5 + [8])) <= [9]) ){ goto $label$6 }
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$6 }
	CALL $298($2)
	
.LABEL $label$6
	*($0) = ( [412] ? [0] : $1 )
	*([0] + [4]) = ($5 + [32])
}

int_32 .FUNC _ZNK5eosio5order8validateEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	float_64 $6
	float_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	$1 = *($0 + [16])
	$5 = ((uint_32)$1 > (uint_32)[1])
	$2 = *($0 + [24])
	if ( ((int_64)$2 > (int_64)99999) ){ goto $label$1 }
	$3 = *($0 + [8])
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [672]
	$11 = (int_64)0
	
.LOOP $label$2:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$3 }
	$4 = *($8)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$3
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$2 }
	$5 = ( $5 ? ($5 | [2]) : ((int_64)$3 == (int_64)$11) )
	
.LABEL $label$1
	$10 = *($0 + [56])
	if ( ((int_64)$10 < (int_64)1) ){ goto $label$7 }
	$6 = ((float_64)(CASTING float_64)(int_64 $10) / (float_64)(CASTING float_64)(int_64 $2))
	if ( (((float_64)$6 <= (float_64)(float_64)1) | ((float_64)$6 != (float_64)$6)) ){ goto $label$6 }
	
.LABEL $label$7
	$5 = ($5 | [4])
	
.LABEL $label$6
	$10 = *($0 + [80])
	if ( ((int_64)$10 > (int_64)1814399) ){ goto $label$10 }
	if ( ((int_64)$10 == (int_64)604800) ){ goto $label$8 }
	if ( ((int_64)$10 == (int_64)1209600) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_64)$10 == (int_64)1814400) ){ goto $label$8 }
	if ( ((int_64)$10 == (int_64)2419200) ){ goto $label$8 }
	
.LABEL $label$9
	$5 = ($5 | [8])
	
.LABEL $label$8
	if ( $1 ){ goto $label$11 }
	$10 = *($0 + [96])
	if ( ((int_64)$10 < (int_64)0) ){ goto $label$12 }
	$7 = CALL pow((float_64)10, (CASTING float_64)(uint_64 *(($0 + [104]))))
	$6 = (CASTING float_64)(int_64 $10)
	if ( (((float_64)$6 <= (float_64)$7) | (((float_64)$6 != (float_64)$6) | ((float_64)$7 != (float_64)$7))) ){ goto $label$11 }
	
.LABEL $label$12
	$5 = ($5 | [15])
	
.LABEL $label$11
	$8 = ( $5 ? ($5 | [64]) : (int_64)(((int_64)*(($0 + [24])) % (int_64)(CASTING uint_64)(uint_32 ((float_64)CALL pow((float_64)10, (CASTING float_64)(uint_64 *(($0 + [32])))) != (float_64)(float_64)0))) == 0) )
	if ( (CALL is_account(*($0 + [128])) == 0) ){ goto $label$18 }
	$10 = *(($0 + [128]))
	if ( ((int_64)$10 > (int_64)6138663590285202591) ){ goto $label$17 }
	if ( ((int_64)$10 <= (int_64)6138663587900751871) ){ goto $label$16 }
	if ( ((int_64)$10 == (int_64)6138663587900751872) ){ goto $label$14 }
	if ( ((int_64)$10 == (int_64)6138663588137709568) ){ goto $label$14 }
	if ( ((int_64)$10 == (int_64)6138663590285017088) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$18
	$8 = ($8 | [-128])
	goto $label$13 
	
.LABEL $label$17
	if ( ((int_64)$10 <= (int_64)6138663591134630911) ){ goto $label$15 }
	if ( ((int_64)$10 == (int_64)6138663591134630912) ){ goto $label$14 }
	if ( ((int_64)$10 == (int_64)6138663592678359040) ){ goto $label$14 }
	if ( ((int_64)$10 == (int_64)6138663591592764928) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	if ( ((int_64)$10 == (int_64)6138663577826885632) ){ goto $label$14 }
	if ( ((int_64)$10 == (int_64)6138663581940940800) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((int_64)$10 == (int_64)6138663590285202592) ){ goto $label$14 }
	if ( ((int_64)$10 != (int_64)6138663590826845888) ){ goto $label$13 }
	
.LABEL $label$14
	$8 = ($8 | [-128])
	
.LABEL $label$13
	return ($8 & [255])
}

void .FUNC $18 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	*([0] + [4]) = $12
	*($12) = [0]
	$8 = *($1 + [8])
	*($12 + [8]) = $8
	if ( ((uint_32)$8 > (uint_32)[8]) ){ goto $label$2 }
	$11 = $12
	$10 = $1
	goto $label$1 
	
.LABEL $label$2
	$11 = CALL $296($8)
	*($12) = $11
	$10 = *($1)
	
.LABEL $label$1
	CALL memcpy($11, $10, $8)
	$4 = *(($12 + [8]))
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[8]) ){ goto $label$5 }
	$5 = ($12 + $4)
	
.LOOP $label$6:
	$7 = *($2)
	$10 = $12
	$8 = $4
	if ( ($8 == 0) ){ goto $label$7 }
	
.LOOP $label$8:
	$11 = ((int_32)$8 / (int_32)[2])
	$9 = ($10 + $11)
	if ( ((int_32)*($9) >= (int_32)$7) ){ goto $label$9 }
	$10 = ($9 + [1])
	$11 = (($8 + [-1]) - $11)
	
.LABEL $label$9
	$8 = $11
	if ( $8 ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$10 }
	if ( ((int_32)*($10) <= (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$10
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$5 = *($12)
	$6 = ($5 + $4)
	
.LOOP $label$11:
	$7 = *($2)
	$10 = $5
	$8 = $4
	if ( ($8 == 0) ){ goto $label$12 }
	
.LOOP $label$13:
	$11 = ((int_32)$8 / (int_32)[2])
	$9 = ($10 + $11)
	if ( ((int_32)*($9) >= (int_32)$7) ){ goto $label$14 }
	$10 = ($9 + [1])
	$11 = (($8 + [-1]) - $11)
	
.LABEL $label$14
	$8 = $11
	if ( $8 ){ goto $label$13 }
	
.LABEL $label$12
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$15 }
	if ( ((int_32)*($10) <= (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$15
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$11 }
	
.LABEL $label$4
	$2 = $3
	
.LABEL $label$3
	if ( ($4 <= [9]) ){ goto $label$16 }
	$8 = *($12)
	if ( ($8 == 0) ){ goto $label$16 }
	CALL $298($8)
	
.LABEL $label$16
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$19 }
	if ( (*($1 + [12]) == 0) ){ goto $label$18 }
	$4 = ($2 + [1])
	goto $label$17 
	
.LABEL $label$19
	$2 = $3
	$4 = $3
	goto $label$17 
	
.LABEL $label$18
	$5 = *(($1 + [8]))
	if ( ((uint_32)$5 >= (uint_32)[9]) ){ goto $label$20 }
	$6 = ($1 + $5)
	$4 = $2
	
.LOOP $label$21:
	$7 = *($4)
	$10 = $1
	$8 = $5
	if ( ($8 == 0) ){ goto $label$22 }
	
.LOOP $label$23:
	$11 = ((int_32)$8 / (int_32)[2])
	$9 = ($10 + $11)
	if ( ((int_32)*($9) >= (int_32)$7) ){ goto $label$24 }
	$10 = ($9 + [1])
	$11 = (($8 + [-1]) - $11)
	
.LABEL $label$24
	$8 = $11
	if ( $8 ){ goto $label$23 }
	
.LABEL $label$22
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$17 }
	if ( ((int_32)*($10) > (int_32)$7) ){ goto $label$17 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$21 }
	goto $label$17 
	
.LABEL $label$20
	$6 = *($1)
	$1 = ($6 + $5)
	$4 = $2
	
.LOOP $label$25:
	$7 = *($4)
	$10 = $6
	$8 = $5
	if ( ($8 == 0) ){ goto $label$26 }
	
.LOOP $label$27:
	$11 = ((int_32)$8 / (int_32)[2])
	$9 = ($10 + $11)
	if ( ((int_32)*($9) >= (int_32)$7) ){ goto $label$28 }
	$10 = ($9 + [1])
	$11 = (($8 + [-1]) - $11)
	
.LABEL $label$28
	$8 = $11
	if ( $8 ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)$10 == (int_32)$1) ){ goto $label$17 }
	if ( ((int_32)*($10) > (int_32)$7) ){ goto $label$17 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$25 }
	
.LABEL $label$17
	*($0 + [4]) = $4
	*($0) = $2
	*([0] + [4]) = ($12 + [16])
}

void .FUNC $19 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ((uint_32)$2 > (uint_32)[3]) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$13
	$3 = *($0)
	*(($2 = CALL $295([16]))) = [0]
	$5 = *($3 + [8])
	*($2 + [8]) = $5
	if ( ((uint_32)$5 > (uint_32)[8]) ){ goto $label$8 }
	$0 = $3
	$4 = $2
	goto $label$7 
	
.LABEL $label$12
	$3 = [0]
	
.LOOP $label$14:
	$2 = [-3]
	
.LOOP $label$16:
	if ( ((int_32)*((($3 + $2) + [490])) != (int_32)*(($2 + [435]))) ){ goto $label$15 }
	if ( ($2 == 0) ){ goto $label$6 }
	$2 = ($2 + [1])
	if ( ((int_32)($3 + $2) != (int_32)[180]) ){ goto $label$16 }
	goto $label$4 
	
.LABEL $label$15
	$2 = [183]
	$3 = ($3 + [1])
	if ( ((int_32)$3 != (int_32)[183]) ){ goto $label$14 }
	goto $label$3 
	
.LABEL $label$11
	*($1) = *($0)
	*($0) = [0]
	return 
	
.LABEL $label$10
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$17 }
	if ( (*($2 + [8]) <= [9]) ){ goto $label$18 }
	$3 = *($2)
	if ( ($3 == 0) ){ goto $label$18 }
	CALL $298($3)
	
.LABEL $label$18
	CALL $297($2)
	
.LABEL $label$17
	*($1) = [0]
	return 
	
.LABEL $label$9
	$5 = *($1)
	$3 = [0]
	
.LOOP $label$19:
	$2 = [-3]
	
.LOOP $label$21:
	if ( ((int_32)*((($3 + $2) + [490])) != (int_32)*(($2 + [435]))) ){ goto $label$20 }
	if ( ($2 == 0) ){ goto $label$5 }
	$2 = ($2 + [1])
	if ( ((int_32)($3 + $2) != (int_32)[180]) ){ goto $label$21 }
	goto $label$2 
	
.LABEL $label$20
	$2 = [183]
	$3 = ($3 + [1])
	if ( ((int_32)$3 != (int_32)[183]) ){ goto $label$19 }
	goto $label$1 
	
.LABEL $label$8
	$4 = CALL $296($5)
	*($2) = $4
	$5 = *(($2 + [8]))
	$0 = *($3)
	
.LABEL $label$7
	CALL memcpy($4, $0, $5)
	*($1) = $2
	*($2 + [12]) = *($3 + [12])
	return 
	
.LABEL $label$6
	$2 = $3
	goto $label$3 
	
.LABEL $label$5
	$2 = $3
	goto $label$1 
	
.LABEL $label$4
	$2 = [183]
	
.LABEL $label$3
	*($1 + [4]) = [0]
	*($1) = ( [487] ? ($2 + [491]) : ((int_32)$2 == (int_32)[183]) )
	return 
	
.LABEL $label$2
	$2 = [183]
	
.LABEL $label$1
	$3 = ( [487] ? ($2 + [491]) : ((int_32)$2 == (int_32)[183]) )
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$23 }
	$5 = ($5 + [1])
	
.LOOP $label$24:
	if ( ((int_32)($2 & [255]) != (int_32)*($3)) ){ goto $label$22 }
	$3 = ($3 + [1])
	$2 = *($5)
	$5 = ($5 + [1])
	if ( $2 ){ goto $label$24 }
	
.LABEL $label$23
	$2 = [0]
	
.LABEL $label$22
	*($1) = ( *($0) ? [0] : ((int_32)($2 & [255]) == (int_32)*($3)) )
	$2
}

void .FUNC frexpl (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$5 = ($4) & [32767]
	if ( ((int_32)$5) == (int_32)[32767]) ){ goto $label$1 }
	if ( $5 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($6, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL frexpl(($6 + [16]), *($6), *(($6 + [8])), $3)
	$4 = (*($3) + [-120])
	$2 = *($6 + [24])
	$1 = *($6 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($4 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($4 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	*($3) = $4
	
.LABEL $label$1
	*($0) = $1
	*(($0 + [8])) = $2
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC wcrtomb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL __errno_location()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL __errno_location()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

int_32 .FUNC __signbitl (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC __fpclassifyl (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [3] ? [2] : ((int_64)((int_64)$2 | (int_64)$0) != (int_64)0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

int_32 .FUNC strnlen (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL memchr($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC wctomb (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL wcrtomb($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

void .FUNC $332 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$1 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$18
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$16
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$15
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$9
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$8
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$7
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$5
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$1 
	
.LABEL $label$2
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$3 = *($1)
	*(($0 + [8])) = *($1 + [8])
	*($0) = $3
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	$1
}

int_32 .FUNC strerror (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL __lctrans($3, *([0] + [20]))
	$2 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*(($2 + [13136])) == (int_32)$0) ){ goto $label$4 }
	$1 = [87]
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[87]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$1 = $2
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = [13232]
	
.LOOP $label$6:
	$0 = *($2)
	$3 = ($2 + [1])
	$2 = $3
	if ( $0 ){ goto $label$6 }
	$2 = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [13232]
	return .LABEL $label$1
}

void .FUNC __unlockfile (int_32 $0)
{
}

int_32 .FUNC __fwritex (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($2 + [16])
	if ( $6 ){ goto $label$2 }
	$6 = [0]
	if ( CALL __towrite($2) ){ goto $label$1 }
	$6 = *(($2 + [16]))
	
.LABEL $label$2
	$7 = *($2 + [20])
	if ( ((uint_32)($6 - $7) >= (uint_32)$1) ){ goto $label$3 }
	return CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	
.LABEL $label$3
	$8 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$4 }
	$3 = ($0 + $1)
	$8 = [0]
	$6 = [0]
	
.LOOP $label$5:
	if ( (($1 + $6) == 0) ){ goto $label$4 }
	$5 = ($3 + $6)
	$4 = ($6 + [-1])
	$6 = $4
	if ( ((int_32)*(($5 + [-1])) != (int_32)[10]) ){ goto $label$5 }
	$8 = (($1 + $4) + [1])
	$6 = CALL int_32 $2((int_32 $0), (int_32 $8), (int_32 *($2 + [36])))
	if ( ($6 <= $8) ){ goto $label$1 }
	$1 = ((int_32)$4 ^ (int_32)[-1])
	$0 = (($3 + $4) + [1])
	$7 = *(($2 + [20]))
	
.LABEL $label$4
	CALL memcpy($7, $0, $1)
	*(($6 = ($2 + [20]))) = (*($6) + $1)
	return ($8 + $1)
	
.LABEL $label$1
	return $6
}

int_32 .FUNC $116 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1397703940
	CALL eosio_assert([1], [16])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [56]))) = (int_64)1397703940
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [16])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [80])
	return $0
}

int_32 .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [14]) = *($1 + [80])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1200])
	CALL memcpy(*($0 + [4]), ($3 + [14]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [81])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1200])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1200])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC _ZN5eosio17orderbook_manager9add_orderEyyRKNS_5orderERNS_11multi_indexILy10497615183478784000ENS_6marketEJEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [192])
	*([0] + [4]) = $11
	*($11 + [40]) = $1
	$10 = *($3 + [16])
	if ( ((int_32)$10 == (int_32)[1]) ){ goto $label$11 }
	if ( $10 ){ goto $label$1 }
	$7 = *(($0 + [72]))
	$8 = *(($0 + [76]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$12 }
	$10 = ($8 + [-24])
	$4 = ([0] - $7)
	
.LOOP $label$13:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$12 }
	$8 = $10
	$5 = ($10 + [-24])
	$10 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	$5 = ($0 + [48])
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	$10 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [64]) == (int_32)$5), [752])
	goto $label$9 
	
.LABEL $label$11
	$6 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$14 }
	$10 = ($8 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$15:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$14 }
	$8 = $10
	$5 = ($10 + [-24])
	$10 = $5
	if ( ((int_32)($5 + $7) != (int_32)[-24]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = ($0 + [8])
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$8 }
	$10 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [64]) == (int_32)$5), [752])
	goto $label$7 
	
.LABEL $label$10
	$10 = [0]
	$8 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)6653061481472458752, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$9 }
	$10 = CALL $115($5, $8)
	CALL eosio_assert(((int_32)*($10 + [64]) == (int_32)$5), [752])
	
.LABEL $label$9
	CALL eosio_assert(($10 == 0), [816])
	*($11 + [16]) = (int_64)-1
	*($11 + [24]) = [0]
	$1 = *($0)
	*($11) = $1
	*($11 + [8]) = *($3 + [80])
	*(($5 = ($11 + [28]))) = [0]
	*(($8 = ($11 + [32]))) = [0]
	*(($11 + [38])) = [0]
	*($11 + [36]) = [0]
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$15()), [912])
	$10 = CALL $295([120])
	$0 = CALL $116($10)
	*($10 + [96]) = $11
	*($10) = *($11 + [40])
	*($10 + [8]) = *($3 + [8])
	$1 = *(($3 + [32]))
	*(($10 + [24])) = $1
	*(($4 = (($11 + [48]) + [8]))) = $1
	$1 = *($3 + [24])
	*($10 + [16]) = $1
	*($11 + [48]) = $1
	*($10 + [32]) = *($3 + [80])
	*($10 + [40]) = *($3 + [72])
	$1 = *(($3 + [48]))
	*(($10 + [56])) = $1
	*($4) = $1
	$1 = *($3 + [40])
	*($10 + [48]) = $1
	*($11 + [48]) = $1
	*($10 + [80]) = [0]
	*($10 + [64]) = ((float_64)(CASTING float_64)(int_64 *($3 + [56])) / (float_64)(CASTING float_64)(int_64 *($3 + [24])))
	*($10 + [72]) = ((float_64)(CASTING float_64)(int_64 *($3 + [96])) / (float_64)(float_64)1e4)
	*($10 + [88]) = *($3 + [128])
	*($11 + [184]) = (($11 + [48]) + [90])
	*($11 + [180]) = ($11 + [48])
	*($11 + [176]) = ($11 + [48])
	CALL $117(($11 + [176]), $0)
	$1 = *($10)
	*($10 + [100]) = CALL db_store_i64(*($11 + [8]), (int_64)-3146771307685740544, $2, $1, ($11 + [48]), [90])
	if ( (uint_64)($1 <= *($11 + [16])) ){ goto $label$16 }
	*(($11 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$1 = *($10)
	$3 = ($11 + [8])
	$9 = *($3)
	*($11 + [152]) = *(($10 + [64]))
	*($10 + [104]) = CALL db_idx_double_store($9, (int_64)-3146771307685740544, $2, $1, ($11 + [152]))
	$1 = *($10)
	$9 = *($3)
	*($11 + [152]) = *(($10 + [32]))
	*($10 + [108]) = CALL db_idx64_store($9, (int_64)-3146771307685740543, $2, $1, ($11 + [152]))
	$1 = *($10)
	$9 = *($3)
	*($11 + [152]) = *(($10 + [40]))
	*($10 + [112]) = CALL db_idx64_store($9, (int_64)-3146771307685740542, $2, $1, ($11 + [152]))
	*($11 + [176]) = $10
	$1 = *($10)
	*($11 + [48]) = $1
	$0 = *(($10 + [100]))
	*($11 + [152]) = $0
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*($8)) ){ goto $label$18 }
	*($3 + [8]) = $1
	*($3 + [16]) = $0
	*($11 + [176]) = [0]
	*($3) = $10
	*(($11 + [28])) = ($3 + [24])
	goto $label$17 
	
.LABEL $label$18
	CALL $118(($11 + [24]), ($11 + [176]), ($11 + [48]), ($11 + [152]))
	
.LABEL $label$17
	$10 = *($11 + [176])
	*($11 + [176]) = [0]
	if ( ($10 == 0) ){ goto $label$19 }
	CALL $297($10)
	
.LABEL $label$19
	$5 = *($11 + [24])
	if ( ($5 == 0) ){ goto $label$1 }
	$8 = ($11 + [28])
	$10 = *($8)
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$20:
	$10 = ($10 + [-24])
	$3 = *($10)
	*($10) = [0]
	if ( ($3 == 0) ){ goto $label$21 }
	CALL $297($3)
	
.LABEL $label$21
	if ( ((int_32)$5 != (int_32)$10) ){ goto $label$20 }
	$10 = *(($11 + [24]))
	goto $label$5 
	
.LABEL $label$8
	$10 = [0]
	$8 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)6787602122293641216, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$7 }
	$10 = CALL $119($5, $8)
	CALL eosio_assert(((int_32)*($10 + [64]) == (int_32)$5), [752])
	
.LABEL $label$7
	CALL eosio_assert(($10 == 0), [816])
	*($11 + [16]) = (int_64)-1
	*($11 + [24]) = [0]
	$1 = *($0)
	*($11) = $1
	*($11 + [8]) = *($3 + [80])
	*(($8 = ($11 + [28]))) = [0]
	*(($0 = ($11 + [32]))) = [0]
	*(($11 + [38])) = [0]
	*($11 + [36]) = [0]
	*($11 + [156]) = $3
	*($11 + [152]) = ($11 + [40])
	*($11 + [176]) = $2
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$15()), [912])
	*($11 + [52]) = ($11 + [152])
	*($11 + [48]) = $11
	*($11 + [56]) = ($11 + [176])
	$10 = CALL $295([112])
	CALL $120($10)
	*($10 + [92]) = $11
	CALL $121(($11 + [48]), $10)
	*($11 + [168]) = $10
	$1 = *($10)
	*($11 + [48]) = $1
	$7 = *($10 + [96])
	*($11 + [164]) = $7
	$5 = *($8)
	if ( ((uint_32)$5 >= (uint_32)*($0)) ){ goto $label$23 }
	*($5 + [8]) = $1
	*($5 + [16]) = $7
	*($11 + [168]) = [0]
	*($5) = $10
	*($8) = ($5 + [24])
	goto $label$22 
	
.LABEL $label$23
	CALL $122(($11 + [24]), ($11 + [168]), ($11 + [48]), ($11 + [164]))
	
.LABEL $label$22
	$10 = *($11 + [168])
	*($11 + [168]) = [0]
	if ( ($10 == 0) ){ goto $label$24 }
	$5 = *($10 + [48])
	if ( ($5 == 0) ){ goto $label$25 }
	*(($10 + [52])) = $5
	CALL $297($5)
	
.LABEL $label$25
	CALL $297($10)
	
.LABEL $label$24
	$1 = *(($3 + [80]))
	$7 = *($4 + [24])
	$8 = *(($4 + [28]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$26 }
	$10 = ($8 + [-24])
	$0 = ([0] - $7)
	
.LOOP $label$27:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$26 }
	$8 = $10
	$5 = ($10 + [-24])
	$10 = $5
	if ( ((int_32)($5 + $0) != (int_32)[-24]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$29 }
	$10 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [48]) == (int_32)$4), [752])
	if ( $10 ){ goto $label$28 }
	goto $label$2 
	
.LABEL $label$29
	$10 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-7949128890230767616, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $123($4, $10) + [48]) == (int_32)$4), [752])
	
.LABEL $label$28
	$1 = *(($3 + [80]))
	$7 = *(($4 + [24]))
	$8 = *(($4 + [28]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$30 }
	$10 = ($8 + [-24])
	$0 = ([0] - $7)
	
.LOOP $label$31:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$30 }
	$8 = $10
	$5 = ($10 + [-24])
	$10 = $5
	if ( ((int_32)($5 + $0) != (int_32)[-24]) ){ goto $label$31 }
	
.LABEL $label$30
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$4 }
	$10 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [48]) == (int_32)$4), [752])
	goto $label$3 
	
.LABEL $label$6
	$10 = $5
	
.LABEL $label$5
	*($8) = $5
	CALL $297($10)
	goto $label$1 
	
.LABEL $label$4
	$10 = [0]
	$5 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-7949128890230767616, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$10 = CALL $123($4, $5)
	CALL eosio_assert(((int_32)*($10 + [48]) == (int_32)$4), [752])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [976])
	CALL eosio_assert(((int_32)*($10 + [48]) == (int_32)$4), [1024])
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$15()), [1072])
	$1 = *($10)
	$9 = *($3 + [24])
	CALL eosio_assert(((int_64)*(($3 + [32])) == (int_64)*(($10 + [24]))), [176])
	$9 = ((int_64)$9 + (int_64)*($10 + [16]))
	*($10 + [16]) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [224])
	CALL eosio_assert(((int_64)*($10 + [16]) < (int_64)4611686018427387904), [256])
	$9 = *($3 + [40])
	CALL eosio_assert(((int_64)*(($3 + [48])) == (int_64)*(($10 + [40]))), [176])
	$9 = ((int_64)$9 + (int_64)*($10 + [32]))
	*($10 + [32]) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [224])
	CALL eosio_assert(((int_64)*($10 + [32]) < (int_64)4611686018427387904), [256])
	CALL eosio_assert(((int_64)$1 == (int_64)*($10)), [1136])
	*($11 + [184]) = (($11 + [48]) + [48])
	*($11 + [180]) = ($11 + [48])
	*($11 + [176]) = ($11 + [48])
	CALL $124(($11 + [176]), $10)
	CALL db_update_i64(*($10 + [52]), $2, ($11 + [48]), [48])
	if ( (uint_64)($1 <= *($4 + [16])) ){ goto $label$2 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$8 = *($11 + [24])
	if ( ($8 == 0) ){ goto $label$1 }
	$0 = ($11 + [28])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$33 }
	
.LOOP $label$34:
	$10 = ($10 + [-24])
	$3 = *($10)
	*($10) = [0]
	if ( ($3 == 0) ){ goto $label$35 }
	$5 = *($3 + [48])
	if ( ($5 == 0) ){ goto $label$36 }
	*(($3 + [52])) = $5
	CALL $297($5)
	
.LABEL $label$36
	CALL $297($3)
	
.LABEL $label$35
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$34 }
	$10 = *(($11 + [24]))
	goto $label$32 
	
.LABEL $label$33
	$10 = $8
	
.LABEL $label$32
	*($0) = $8
	CALL $297($10)
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [192])
}

int_32 .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1216])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $295([80])) + [24]) = (int_64)1397703940
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [16])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [80])
	*($4 + [64]) = $0
	CALL $134(($8 + [32]), $4)
	*($4 + [72]) = [-1]
	*($4 + [68]) = $1
	*($4 + [76]) = [-1]
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [68])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $135($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $297($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC _ZN5eosio17orderbook_manager28get_unfulfilled_stake_ordersEv (int_32 $0)
{
	return ($0 + [88])
}

int_32 .FUNC _ZN5eosio17orderbook_manager28get_unfulfilled_lease_ordersEv (int_32 $0)
{
	return ($0 + [128])
}

int_32 .FUNC _ZN5eosio17orderbook_manager26get_fulfilled_stake_ordersEv (int_32 $0)
{
	return ($0 + [8])
}

int_32 .FUNC _ZN5eosio17orderbook_manager26get_fulfilled_lease_ordersEv (int_32 $0)
{
	return ($0 + [48])
}

void .FUNC $118 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $295(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $316($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $297($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $297($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1216])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $295([80])) + [24]) = (int_64)1397703940
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [16])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [80])
	*($4 + [56]) = [0]
	*($4 + [48 align=4]) = (int_64)0
	*($4 + [64]) = $0
	CALL $130(($8 + [32]), $4)
	*($4 + [72]) = [-1]
	*($4 + [68]) = $1
	*($4 + [76]) = [-1]
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [68])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $131($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	$6 = *($5 + [48])
	if ( ($6 == 0) ){ goto $label$15 }
	*(($5 + [52])) = $6
	CALL $297($6)
	
.LABEL $label$15
	CALL $297($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $299 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $298 (int_32 $0)
{
	CALL $297($0)
}

int_32 .FUNC $295 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [12412])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $294 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($1 - $0)
	if ( ((uint_32)$4 > (uint_32)[5]) ){ goto $label$19 }
	$8 = [1]
	goto $label$1 
	
.LABEL $label$20
	$3 = *($0)
	$4 = ($1 + [-1])
	$2 = *($4)
	if ( ((int_32)$2 >= (int_32)$3) ){ goto $label$1 }
	*($0) = $2
	*($4) = $3
	goto $label$1 
	
.LABEL $label$19
	$8 = *($0 + [2])
	$2 = *($0)
	$4 = *($0 + [1])
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$15 }
	if ( ((int_32)$8 >= (int_32)$4) ){ goto $label$12 }
	*($0) = $8
	*(($0 + [2])) = $2
	goto $label$11 
	
.LABEL $label$18
	$3 = ($1 + [-1])
	$4 = *($3)
	$6 = *($0)
	$2 = *($0 + [1])
	if ( ((int_32)$2 >= (int_32)$6) ){ goto $label$14 }
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$4 }
	*($0) = $4
	*($3) = $6
	goto $label$1 
	
.LABEL $label$17
	$8 = [1]
	CALL $293($0, ($0 + [1]), ($0 + [2]), ($0 + [3]), ($1 + [-1]), $2)
	goto $label$1 
	
.LABEL $label$16
	$6 = ($1 + [-1])
	$2 = *($0 + [2])
	$3 = *($0)
	$4 = *($0 + [1])
	if ( ((int_32)$4 >= (int_32)$3) ){ goto $label$13 }
	if ( ((int_32)$2 >= (int_32)$4) ){ goto $label$8 }
	*($0) = $2
	*(($0 + [2])) = $3
	goto $label$7 
	
.LABEL $label$15
	if ( ((int_32)$8 >= (int_32)$4) ){ goto $label$10 }
	*(($0 + [2])) = $4
	*(($3 = ($0 + [1]))) = $8
	if ( ((int_32)$8 >= (int_32)$2) ){ goto $label$9 }
	*($0) = $8
	*($3) = $2
	goto $label$9 
	
.LABEL $label$14
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$1 }
	$8 = [1]
	*(($6 = ($0 + [1]))) = $4
	*($3) = $2
	$2 = *($0)
	$4 = *($6)
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$1 }
	*($0) = $4
	$8 = [1]
	*(($0 + [1])) = $2
	goto $label$1 
	
.LABEL $label$13
	if ( ((int_32)$2 >= (int_32)$4) ){ goto $label$6 }
	*(($0 + [2])) = $4
	*(($5 = ($0 + [1]))) = $2
	if ( ((int_32)$2 >= (int_32)$3) ){ goto $label$5 }
	*($0) = $2
	*($5) = $3
	goto $label$5 
	
.LABEL $label$12
	*($0) = $4
	*(($4 = ($0 + [1]))) = $2
	if ( ((int_32)$8 >= (int_32)$2) ){ goto $label$10 }
	*(($0 + [2])) = $2
	*($4) = $8
	
.LABEL $label$11
	$4 = $2
	goto $label$9 
	
.LABEL $label$10
	$4 = $8
	
.LABEL $label$9
	$6 = ($0 + [3])
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$3 }
	$5 = [0]
	$7 = [0]
	
.LOOP $label$22:
	$3 = *($6)
	if ( ((int_32)$3 >= (int_32)int_32(($4 << [24]) >> [24])) ){ goto $label$23 }
	$8 = $5
	
.LOOP $label$27:
	*((($2 = ($0 + $8)) + [3])) = $4
	if ( ((int_32)$8 == (int_32)[-2]) ){ goto $label$26 }
	$8 = ($8 + [-1])
	$4 = *(($2 + [1]))
	if ( ((int_32)$3 < (int_32)$4) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	$8 = $0
	goto $label$24 
	
.LABEL $label$25
	$8 = (($0 + $8) + [3])
	
.LABEL $label$24
	*($8) = $3
	$7 = ($7 + [1])
	if ( ((int_32)$7 == (int_32)[8]) ){ goto $label$21 }
	
.LABEL $label$23
	$4 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [1])
	$4 = *($6)
	$6 = $8
	goto $label$22 
	
.LABEL $label$21
	$8 = (((int_32)($6 + [1]) == (int_32)$1) | [0])
	goto $label$1 
	
.LABEL $label$8
	*($0) = $4
	*(($4 = ($0 + [1]))) = $3
	if ( ((int_32)$2 >= (int_32)$3) ){ goto $label$6 }
	*(($0 + [2])) = $3
	*($4) = $2
	
.LABEL $label$7
	$4 = $3
	goto $label$5 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	$2 = *($6)
	if ( ((int_32)$2 >= (int_32)$4) ){ goto $label$1 }
	*(($3 = ($0 + [2]))) = $2
	*($6) = $4
	$8 = [1]
	$2 = *(($0 + [1]))
	$4 = *($3)
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$1 }
	*($3) = $2
	$8 = [1]
	*(($0 + [1])) = $4
	$2 = *($0)
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$1 }
	*($0) = $4
	$8 = [1]
	*(($0 + [1])) = $2
	goto $label$1 
	
.LABEL $label$4
	*($0) = $2
	$8 = [1]
	*(($0 + [1])) = $6
	$4 = *($3)
	if ( ((int_32)$4 >= (int_32)$6) ){ goto $label$1 }
	$8 = [1]
	*(($0 + [1])) = $4
	*($3) = $6
	goto $label$1 
	
.LABEL $label$3
	$4 = [1]
	
.LABEL $label$2
	$8 = ($2 | $4)
	
.LABEL $label$1
	$4
	return ($8 & [1])
}

void .FUNC $297 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $296 (int_32 $0)
{
	return CALL $295($0)
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [12296])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [12104]
	$1 = (((int_32)$2 * (int_32)[12]) + [12104])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $290 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [12406]) == 0) ){ goto $label$2 }
	$7 = *([0] + [12408])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [12406]) = [1]
	$7 = ($7 << [16])
	*([0] + [12408]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [12408])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [12408]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [12406]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [12406]) = [1]
	$3 = ($3 << [16])
	*([0] + [12408]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [12408])
	
.LABEL $label$8
	*([0] + [12408]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $293 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = *($2)
	$6 = *($0)
	$8 = *($1)
	if ( ((int_32)$8 >= (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)$7 >= (int_32)$8) ){ goto $label$4 }
	*($0) = $7
	*($2) = $6
	$9 = [1]
	goto $label$3 
	
.LABEL $label$5
	$9 = [0]
	if ( ((int_32)$7 >= (int_32)$8) ){ goto $label$2 }
	*($1) = $7
	*($2) = $8
	$9 = [1]
	$6 = *($0)
	$7 = *($1)
	if ( ((int_32)$7 >= (int_32)$6) ){ goto $label$1 }
	*($0) = $7
	*($1) = $6
	$8 = *($2)
	$9 = [2]
	goto $label$1 
	
.LABEL $label$4
	*($0) = $8
	*($1) = $6
	$9 = [1]
	$8 = *($2)
	if ( ((int_32)$8 >= (int_32)$6) ){ goto $label$1 }
	*($1) = $8
	*($2) = $6
	$9 = [2]
	
.LABEL $label$3
	$8 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = $7
	
.LABEL $label$1
	$7 = *($3)
	if ( ((int_32)$7 >= (int_32)int_32(($8 << [24]) >> [24])) ){ goto $label$6 }
	*($2) = $7
	*($3) = $8
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 >= (int_32)$7) ){ goto $label$8 }
	*($1) = $8
	*($2) = $7
	$7 = *($0)
	$8 = *($1)
	if ( ((int_32)$8 >= (int_32)$7) ){ goto $label$7 }
	*($0) = $8
	*($1) = $7
	$9 = ($9 + [3])
	goto $label$6 
	
.LABEL $label$8
	$9 = ($9 + [1])
	goto $label$6 
	
.LABEL $label$7
	$9 = ($9 + [2])
	
.LABEL $label$6
	$7 = *($3)
	$8 = *($4)
	if ( ((int_32)$8 >= (int_32)$7) ){ goto $label$12 }
	*($3) = $8
	*($4) = $7
	$7 = *($2)
	$8 = *($3)
	if ( ((int_32)$8 >= (int_32)$7) ){ goto $label$11 }
	*($2) = $8
	*($3) = $7
	$3 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 >= (int_32)$3) ){ goto $label$10 }
	*($1) = $8
	*($2) = $3
	$8 = *($0)
	$2 = *($1)
	if ( ((int_32)$2 >= (int_32)$8) ){ goto $label$9 }
	*($0) = $2
	*($1) = $8
	$9 = ($9 + [4])
	
.LABEL $label$12
	return $9
	
.LABEL $label$11
	return ($9 + [1])
	
.LABEL $label$10
	return ($9 + [2])
	
.LABEL $label$9
	return ($9 + [3])
}

void .FUNC $292 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	
.LOOP $label$1:
	$4 = ($1 + [-2])
	$3 = ($1 + [-1])
	
.LOOP $label$2:
	$5 = $0
	
.LOOP $label$4:
	$0 = ($1 - $5)
	if ( ((uint_32)$0 <= (uint_32)[5]) ){ goto $label$12 }
	if ( ((int_32)$0 <= (int_32)[30]) ){ goto $label$11 }
	$12 = ($5 + uint_32($0 >> [1]))
	if ( ((int_32)$0 < (int_32)[1000]) ){ goto $label$13 }
	$0 = uint_32($0 >> [2])
	$10 = CALL $293($5, ($5 + $0), $12, ($12 + $0), $3, $2)
	goto $label$7 
	
.LABEL $label$13
	$0 = *($3)
	$6 = *($5)
	$11 = *($12)
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$16 }
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$15 }
	*($5) = $0
	*($3) = $6
	$10 = [1]
	goto $label$7 
	
.LABEL $label$16
	$10 = [0]
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$7 }
	*($12) = $0
	*($3) = $11
	$10 = [1]
	$11 = *($5)
	$0 = *($12)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$7 }
	*($5) = $0
	*($12) = $11
	goto $label$14 
	
.LABEL $label$15
	*($5) = $11
	*($12) = $6
	$10 = [1]
	$0 = *($3)
	if ( ((int_32)$0 >= (int_32)$6) ){ goto $label$7 }
	*($12) = $0
	*($3) = $6
	
.LABEL $label$14
	$10 = [2]
	goto $label$7 
	
.LABEL $label$12
	goto $label$6 
	
.LABEL $label$17
	$11 = *($5)
	$0 = *($3)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$6 }
	*($5) = $0
	*($3) = $11
	return 
	
.LABEL $label$11
	$0 = *($5 + [2])
	$6 = *($5)
	$11 = *($5 + [1])
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$22 }
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$21 }
	*($5) = $0
	*(($5 + [2])) = $6
	goto $label$20 
	
.LABEL $label$22
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$19 }
	*(($5 + [2])) = $11
	*(($7 = ($5 + [1]))) = $0
	if ( ((int_32)$0 >= (int_32)$6) ){ goto $label$18 }
	*($5) = $0
	*($7) = $6
	goto $label$18 
	
.LABEL $label$21
	*($5) = $11
	*(($11 = ($5 + [1]))) = $6
	if ( ((int_32)$0 >= (int_32)$6) ){ goto $label$19 }
	*(($5 + [2])) = $6
	*($11) = $0
	
.LABEL $label$20
	$11 = $6
	goto $label$18 
	
.LABEL $label$19
	$11 = $0
	
.LABEL $label$18
	$8 = ($5 + [3])
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$6 }
	$12 = [0]
	
.LOOP $label$23:
	$7 = *($8)
	if ( ((int_32)$7 >= (int_32)int_32(($11 << [24]) >> [24])) ){ goto $label$24 }
	$0 = $12
	
.LOOP $label$28:
	*((($6 = ($5 + $0)) + [3])) = $11
	if ( ((int_32)$0 == (int_32)[-2]) ){ goto $label$27 }
	$0 = ($0 + [-1])
	$11 = *(($6 + [1]))
	if ( ((int_32)$7 < (int_32)$11) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$0 = $5
	goto $label$25 
	
.LABEL $label$26
	$0 = (($5 + $0) + [3])
	
.LABEL $label$25
	*($0) = $7
	
.LABEL $label$24
	$0 = ($8 + [1])
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$6 }
	$12 = ($12 + [1])
	$11 = *($8)
	$8 = $0
	goto $label$23 
	
.LABEL $label$10
	$11 = *($5 + [2])
	$6 = *($5)
	$0 = *($5 + [1])
	if ( ((int_32)$0 >= (int_32)$6) ){ goto $label$33 }
	if ( ((int_32)$11 >= (int_32)$0) ){ goto $label$32 }
	*($5) = $11
	*(($5 + [2])) = $6
	goto $label$31 
	
.LABEL $label$33
	if ( ((int_32)$11 >= (int_32)$0) ){ goto $label$30 }
	*(($5 + [2])) = $0
	*(($7 = ($5 + [1]))) = $11
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$29 }
	*($5) = $11
	*($7) = $6
	goto $label$29 
	
.LABEL $label$32
	*($5) = $0
	*(($0 = ($5 + [1]))) = $6
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$30 }
	*(($5 + [2])) = $6
	*($0) = $11
	
.LABEL $label$31
	$0 = $6
	goto $label$29 
	
.LABEL $label$30
	$0 = $11
	
.LABEL $label$29
	$11 = *($3)
	if ( ((int_32)$11 >= (int_32)$0) ){ goto $label$6 }
	*(($6 = ($5 + [2]))) = $11
	*($3) = $0
	$11 = ($5 + [1])
	$7 = *($11)
	$0 = *($6)
	if ( ((int_32)$0 >= (int_32)$7) ){ goto $label$6 }
	*($6) = $7
	*($11) = $0
	$11 = *($5)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$6 }
	*($5) = $0
	*(($5 + [1])) = $11
	return 
	
.LABEL $label$9
	CALL $293($5, ($5 + [1]), ($5 + [2]), ($5 + [3]), $3, $2)
	return 
	
.LABEL $label$8
	$0 = *($3)
	$6 = *($5)
	$11 = *($5 + [1])
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$35 }
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$34 }
	*($5) = $0
	*($3) = $6
	return 
	
.LABEL $label$35
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$6 }
	*(($6 = ($5 + [1]))) = $0
	*($3) = $11
	$11 = *($5)
	$0 = *($6)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$6 }
	*($5) = $0
	*($6) = $11
	return 
	
.LABEL $label$34
	*($5) = $11
	*(($0 = ($5 + [1]))) = $6
	$11 = *($3)
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$6 }
	*($0) = $11
	*($3) = $6
	return 
	
.LABEL $label$7
	$6 = *($12)
	$8 = *($5)
	if ( ((int_32)$8 < (int_32)$6) ){ goto $label$37 }
	$0 = $4
	
.LOOP $label$40:
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$39 }
	$11 = *($0)
	$7 = ($0 + [-1])
	$0 = $7
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$12 = ($5 + [1])
	$6 = *($3)
	if ( ((int_32)$8 < (int_32)$6) ){ goto $label$41 }
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$6 }
	$12 = ($5 + [2])
	
.LOOP $label$43:
	$0 = ($12 + [-1])
	$11 = *($0)
	if ( ((int_32)$8 < (int_32)$11) ){ goto $label$42 }
	$12 = ($12 + [1])
	if ( ((int_32)$1 != (int_32)$12) ){ goto $label$43 }
	goto $label$6 
	
.LABEL $label$42
	*($0) = $6
	*($3) = $11
	
.LABEL $label$41
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$6 }
	$11 = $3
	
.LOOP $label$44:
	$0 = ($12 + [-1])
	$6 = *($5)
	
.LOOP $label$45:
	$0 = ($0 + [1])
	$7 = *($0)
	if ( ((int_32)$6 >= (int_32)$7) ){ goto $label$45 }
	$12 = ($0 + [1])
	
.LOOP $label$46:
	$11 = ($11 + [-1])
	$8 = *($11)
	if ( ((int_32)$6 < (int_32)$8) ){ goto $label$46 }
	if ( ((uint_32)$0 >= (uint_32)$11) ){ goto $label$5 }
	*($0) = $8
	*($11) = $7
	goto $label$44 
	
.LABEL $label$38
	*($5) = $11
	*(($11 = ($7 + [1]))) = $8
	$10 = ($10 + [1])
	goto $label$36 
	
.LABEL $label$37
	$11 = $3
	
.LABEL $label$36
	$9 = ($5 + [1])
	if ( ((uint_32)$9 >= (uint_32)$11) ){ goto $label$47 }
	
.LOOP $label$48:
	$0 = ($9 + [-1])
	$6 = *($12)
	
.LOOP $label$49:
	$0 = ($0 + [1])
	$7 = *($0)
	if ( ((int_32)$7 < (int_32)$6) ){ goto $label$49 }
	$9 = ($0 + [1])
	
.LOOP $label$50:
	$11 = ($11 + [-1])
	$8 = *($11)
	if ( ((int_32)$8 >= (int_32)$6) ){ goto $label$50 }
	if ( ((uint_32)$0 > (uint_32)$11) ){ goto $label$51 }
	*($0) = $8
	*($11) = $7
	$12 = ( $11 ? $12 : ((int_32)$12 == (int_32)$0) )
	$10 = ($10 + [1])
	goto $label$48 
	
.LABEL $label$51
	$9 = $0
	
.LABEL $label$47
	if ( ((int_32)$9 == (int_32)$12) ){ goto $label$52 }
	$11 = *($9)
	$0 = *($12)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$52 }
	*($9) = $0
	*($12) = $11
	$10 = ($10 + [1])
	
.LABEL $label$52
	if ( $10 ){ goto $label$54 }
	$11 = CALL $294($5, $9, $2)
	$0 = ($9 + [1])
	if ( CALL $294($0, $1, $2) ){ goto $label$53 }
	if ( $11 ){ goto $label$2 }
	
.LABEL $label$54
	if ( ((int_32)($9 - $5) >= (int_32)($1 - $9)) ){ goto $label$3 }
	CALL $292($5, $9, $2)
	$0 = ($9 + [1])
	goto $label$2 
	
.LABEL $label$53
	$1 = $9
	$0 = $5
	if ( ($11 == 0) ){ goto $label$1 }
	
.LABEL $label$6
	return 
	
.LABEL $label$5
	$5 = $0
	goto $label$4 
	
.LABEL $label$3
	CALL $292(($9 + [1]), $1, $2)
	$1 = $9
	$0 = $5
	goto $label$1 
	$0
}

void .FUNC $198 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1408])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1472])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $297($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $297($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
}

void .FUNC $348 ()
{
	(unreachable)
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC __towrite (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $212 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1248])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC __mo_lookup (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0)
	$10 = ((int_32)$3 == (int_32)[-1794895138])
	$9 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	$4 = *($0 + [8])
	$5 = ( $4 ? $9 : $10 )
	if ( ((uint_32)$5 >= (uint_32)uint_32($1 >> [2])) ){ goto $label$4 }
	$12 = ($1 - ($5 << [2]))
	$11 = *($0 + [12])
	$6 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$6 >= (uint_32)$12) ){ goto $label$3 }
	$11 = *($0 + [16])
	$10 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$10 >= (uint_32)$12) ){ goto $label$2 }
	if ( ((($10 | $6) & [3]) == 0) ){ goto $label$1 }
	return [0]
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$12 = uint_32($6 >> [2])
	if ( ((int_32)$3 != (int_32)[-1794895138]) ){ goto $label$16 }
	$5 = uint_32($5 >> [1])
	$6 = ($5 << [1])
	$9 = ($0 + (($6 + $12) << [2]))
	$11 = *(($9 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$15 }
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)($1 - $11)) ){ goto $label$14 }
	$9 = $5
	$7 = [0]
	
.LOOP $label$17:
	if ( *(($0 + ($11 + $8))) ){ goto $label$9 }
	$11 = CALL strcmp($2, ($0 + $11))
	if ( ($11 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$7 }
	$13 = [0]
	$4 = ( $9 ? ($4 - $9) : $11 )
	$9 = uint_32($4 >> [1])
	$11 = ((int_32)$11 < (int_32)[0])
	$7 = ( $7 ? $5 : $11 )
	$5 = ($7 + $9)
	$6 = ($5 << [1])
	$8 = ($0 + (($6 + $12) << [2]))
	$11 = *(($8 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$10 }
	$8 = *($8)
	if ( ($8 <= ($1 - $11)) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	$8 = uint_32($9 >> [1])
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$13 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ((uint_32)$11 >= (uint_32)($1 - $4)) ){ goto $label$12 }
	$5 = $8
	$7 = [0]
	
.LOOP $label$18:
	if ( *(($0 + ($4 + $11))) ){ goto $label$8 }
	$4 = CALL strcmp($2, ($0 + $4))
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$6 }
	$13 = [0]
	$9 = ( $5 ? ($9 - $5) : $4 )
	$5 = uint_32($9 >> [1])
	$4 = ((int_32)$4 < (int_32)[0])
	$7 = ( $7 ? $8 : $4 )
	$8 = ($7 + $5)
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$10 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ($11 <= ($1 - $4)) ){ goto $label$18 }
	goto $label$10 
	
.LABEL $label$15
	return [0]
	
.LABEL $label$14
	return [0]
	
.LABEL $label$13
	return [0]
	
.LABEL $label$12
	return [0]
	
.LABEL $label$11
	$9 = ((int_32)$3 == (int_32)[-1794895138])
	$10 = ($0 + (($6 + uint_32($10 >> [2])) << [2]))
	$4 = *(($10 + [4]))
	$11 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$5 }
	$13 = [0]
	$4 = *($10)
	$4 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$4 >= (uint_32)($1 - $11)) ){ goto $label$10 }
	return ( [0] ? ($0 + $11) : *(($0 + ($11 + $4))) )
	
.LABEL $label$10
	return $13
	
.LABEL $label$9
	return [0]
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	return [0]
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	return [0]
}

int_32 .FUNC __lctrans_impl (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL __mo_lookup(*($1), *($1 + [4]), $0)
	return ( $1 ? $0 : $1 )
	
.LABEL $label$1
	return ( [0] ? $0 : [0] )
}

int_32 .FUNC __lctrans (int_32 $0, int_32 $1)
{
	return CALL __lctrans_impl($0, $1)
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

void .FUNC _ZN5eosio5order23set_order_creation_timeEy (int_32 $0, int_64 $1)
{
	*($0 + [72]) = $1
}

void .FUNC $283 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [1248])
	CALL memcpy(($3 + [8]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($3 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($3 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [1248])
	CALL memcpy(($4 + [15]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*($3 + [32]) = ((int_32)*($4 + [15]) != (int_32)[0])
	CALL $257(*($1), ($3 + [36]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC _ZN5eosio5order12set_durationENS_5assetE (int_32 $0, int_32 $1)
{
	*($0 + [80]) = *($1)
	*(($0 + [88])) = *(($1 + [8]))
}

void .FUNC _ZN5eosio5order12set_interestENS_5assetE (int_32 $0, int_32 $1)
{
	*($0 + [56]) = *($1)
	*(($0 + [64])) = *(($1 + [8]))
}

void .FUNC _ZN5eosio5order12set_quantityENS_5assetE (int_32 $0, int_32 $1)
{
	*($0 + [24]) = *($1)
	*(($0 + [32])) = *(($1 + [8]))
}

void .FUNC _ZN5eosio5order16set_cpu_bw_ratioENS_5assetE (int_32 $0, int_32 $1)
{
	*($0 + [96]) = *($1)
	*(($0 + [104])) = *(($1 + [8]))
}

void .FUNC _ZN5eosio5order8set_userEy (int_32 $0, int_64 $1)
{
	*($0 + [8]) = $1
}

void .FUNC $280 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($0 + [16])) = (int_64)1397703940
	CALL eosio_assert([1], [16])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [80])
	*(($0 + [32])) = (int_64)1397703940
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [16])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [80])
	*($0 + [48]) = (int_64)0
	*($0 + [40]) = (int_64)0
	*($0 + [56]) = (int_64)0
	*($0 + [64]) = (int_64)0
	*($0 + [72]) = [0]
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $281(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

void .FUNC _ZN5eosio5order6set_idEy (int_32 $0, int_64 $1)
{
	*($0) = $1
}

void .FUNC _ZN5eosio5order8set_sideEh (int_32 $0, int_32 $1)
{
	*($0 + [16]) = $1
}

void .FUNC $281 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1248])
	CALL memcpy(($0 + [40]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	*($4 + [8]) = $0
	CALL $282(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}