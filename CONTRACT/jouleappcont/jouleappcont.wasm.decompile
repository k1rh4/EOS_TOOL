(data (i32.const 8232) "failed to allocate pages\00JUL\00")
(data (i32.const 8264) "A \00\00")
(data (i32.const 8268) "Trading is not open now\00")
(data (i32.const 8292) "Qty should be greater than 0\00")
(data (i32.const 8321) "Price should be in the range of 1 to 1000\00")
(data (i32.const 8363) "Invalid position_type, can be only 1 or -1\00")
(data (i32.const 8406) "Trading is not opened for this item\00")
(data (i32.const 8442) "Order failed, as order price is not in the range of daily price change\00")
(data (i32.const 8513) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 8564) "error reading iterator\00")
(data (i32.const 8587) "Item ID does not exists\00")
(data (i32.const 8611) "get\00")
(data (i32.const 8615) "read\00")
(data (i32.const 8620) "Order failed, as funds not available or more open orders in your account\00")
(data (i32.const 8693) "Order failed, as funds not available\00")
(data (i32.const 8730) "Portfolio of this EOS account does not exist\00")
(data (i32.const 8775) "cannot pass end iterator to modify\00")
(data (i32.const 8810) "object passed to modify is not in multi_index\00")
(data (i32.const 8856) "cannot modify objects in table of another contract\00")
(data (i32.const 8907) "updater cannot change primary key when modifying an object\00")
(data (i32.const 8966) "write\00")
(data (i32.const 8972) "Matched Short Id\00")
(data (i32.const 8989) " | \00")
(data (i32.const 8993) "User cannot place opposite orders\00")
(data (i32.const 9027) "The order might have been cancelled\00")
(data (i32.const 9063) "cannot create objects in table of another contract\00")
(data (i32.const 9114) "next primary key in table is at autoincrement limit\00")
(data (i32.const 9166) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 9220) "cannot decrement iterator at beginning of table\00")
(data (i32.const 9268) "Error in calculation of sum_of_open_order_fund in matchorder\00")
(data (i32.const 9329) "Error in calculation of on_order_fund in matchorder\00")
(data (i32.const 9381) "cannot pass end iterator to erase\00")
(data (i32.const 9415) "cannot increment end iterator\00")
(data (i32.const 9445) "object passed to erase is not in multi_index\00")
(data (i32.const 9490) "cannot erase objects in table of another contract\00")
(data (i32.const 9540) "attempt to remove object that was not in multi_index\00")
(data (i32.const 9593) "Order ID does not exists\00")
(data (i32.const 9618) "Error in calculation of on_order_fund in cancelorder\00")
(data (i32.const 9671) "Error in calculation of sum_of_open_order_fund in cancelorder\00")
(data (i32.const 9733) "Invalid token symbol.\00")
(data (i32.const 9755) "string is too long to be a valid symbol_code\00")
(data (i32.const 9800) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9853) "string is too long to be a valid name\00")
(data (i32.const 9891) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 9958) "character is not in allowed character set for names\00")
(data (i32.const 10010) "Withdraw fund from Joule portfolio\00")
(data (i32.const 10045) "Withdrawal unsuccessful. A minimum Available balance of 500J is required. \n \e6\8f\90\e6\ac\be\e4\b8\8d\e6\88\90\e5\8a\9f\e3\80\82\e5\8f\af\e7\94\a8\e8\b3\87\e9\87\91\e6\9c\80\e5\b0\91\e7\b5\90\e9\a4\98\e7\82\ba500J\e3\80\82\00")
(data (i32.const 10174) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 10223) "invalid symbol name\00")
(data (i32.const 10243) "Category ID does not exist\00")
(data (i32.const 10270) "Referrer ID does not exit\00")
(data (i32.const 10296) "EOS account does not exist\00")
(data (i32.const 10323) "Invalid market price set\00")
(data (i32.const 10348) "Mark to Market of this user is not done\00")
(data (i32.const 10388) "Error in calculation of margin_fund in delist_item_usr_pf\00")
(data (i32.const 0) "\d0(\00\00")
(import "env" "set_blockchain_parameters_packed" (func $fimport$0 (param i32 i32)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "memcpy" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$3 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$4 (param i32 i32) (result i64)))
(import "env" "abort" (func $fimport$5))
(import "env" "memset" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "current_time" (func $fimport$7 (result i64)))
(import "env" "get_active_producers" (func $fimport$8 (param i32 i32) (result i32)))
(import "env" "action_data_size" (func $fimport$9 (result i32)))
(import "env" "read_action_data" (func $fimport$10 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$11 (param i64)))
(import "env" "db_find_i64" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "memmove" (func $fimport$13 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$14 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$15 (param i32 i32)))
(import "env" "__multf3" (func $fimport$16 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$17 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$18 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$19 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$20 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$21 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$22 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$23 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$24 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$25 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$26 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$27 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$28 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$29 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$30 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$31 (param i64 i64) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$32 (param i64 i64 i64 i64) (result i32)))
(import "env" "require_recipient" (func $fimport$33 (param i64)))
(import "env" "eosio_assert_code" (func $fimport$34 (param i32 i64)))
(import "env" "prints" (func $fimport$35 (param i32)))
(import "env" "printui" (func $fimport$36 (param i64)))
(import "env" "db_next_i64" (func $fimport$37 (param i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$38 (param i32 i32 i32) (result i32)))
(import "env" "current_receiver" (func $fimport$39 (result i64)))
(import "env" "db_update_i64" (func $fimport$40 (param i32 i64 i32 i32)))
(import "env" "db_store_i64" (func $fimport$41 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_store" (func $fimport$42 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$43 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$44 (param i64 i64 i64) (result i32)))
(import "env" "db_remove_i64" (func $fimport$45 (param i32)))
(import "env" "db_idx64_find_primary" (func $fimport$46 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$47 (param i32)))
(import "env" "db_idx64_update" (func $fimport$48 (param i32 i64 i32)))
(import "env" "send_inline" (func $fimport$49 (param i32 i32)))
(import "env" "is_account" (func $fimport$50 (param i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$51 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$52 (param i32 i32) (result i32)))
(export "apply" (func $1))
(table $0 1 1 anyfunc)

(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 10446))
(global $global$2 i32 (i32.const 10446))


void .FUNC $174 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($1) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = *(*($3 + [12]))
	*($1 + [32]) = *(*($3 + [16]))
	*($1 + [36]) = ((int_64)CALL $17() / (int_64)1000000)
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-11])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [36])
	CALL $149(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [37])
	if ( ((int_64)*($0 + [16]) == (int_64)0) ){ goto $label$3 }
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$3
	*(($0 + [16])) = (int_64)1
	$global$0 = ($5 + [48])
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $2($1)
	
.LABEL $label$2
	*(CALL $5()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $2(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $3($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $176 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [96])
	$global$0 = $3
	*($0 + [40]) = $1
	$1 = *($2 + [4])
	*($0) = *(*($1))
	*($0 + [8]) = *(*($1 + [4]))
	*($0 + [16]) = *(*($1 + [8]))
	*($0 + [24]) = *(*($1 + [12]))
	*($0 + [32]) = *(*($1 + [16]))
	$1 = *($2)
	*($0 + [36]) = ((int_64)CALL $17() / (int_64)1000000)
	*($3 + [56]) = ($3 + [37])
	*($3 + [52]) = $3
	*($3 + [48]) = $3
	*($3 + [64]) = ($3 + [48])
	*($3 + [76]) = ($0 + [8])
	*($3 + [72]) = $0
	*($3 + [80]) = ($0 + [16])
	*($3 + [84]) = ($0 + [24])
	*($3 + [88]) = ($0 + [32])
	*($3 + [92]) = ($0 + [36])
	CALL $149(($3 + [72]), ($3 + [64]))
	*($0 + [44]) = CALL db_store_i64(*($1 + [8]), (int_64)-3899443509350574272, *(*($2 + [8])), (int_64)0, $3, [37])
	if ( ((int_64)*($1 + [16]) == (int_64)0) ){ goto $label$1 }
	$global$0 = ($3 + [96])
	return $0
	
.LABEL $label$1
	*(($1 + [16])) = (int_64)1
	$global$0 = ($3 + [96])
	return $0
}

void .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$1 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$0 = *($0)
	$2 = ($0 + [36])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = ($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$0 = ($0 + [44])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [8966])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $170 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*(($6 = ($1 + [12]))) = *($1 + [8])
	$7 = *($1)
	$4 = $4
	$8 = ($4 + [-16])
	$global$0 = $8
	$9 = ($4 + [-7])
	*($5 + [8]) = $9
	*($5) = $8
	CALL memcpy($8, $1, [8])
	$4 = ($4 + [-8])
	*($5 + [4]) = $4
	$10 = (CASTING uint_64)(uint_32 ((int_32)(*($6) - *($1 + [8])) / (int_32)[20]))
	
.LOOP $label$3:
	$6 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	*($5 + [24]) = ((((int_64)$10) != (int_64)0) << [7]) | ($6 & [127]))
	if ( ((int_32)($9 - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [8966])
	$4 = *($5 + [4])
	
.LABEL $label$4
	CALL memcpy($4, ($5 + [24]), [1])
	$4 = ($4 + [1])
	*($5 + [4]) = $4
	if ( (int_64)($10 == 0) ){ goto $label$5 }
	$9 = *(($5 + [8]))
	goto $label$3 
	
.LABEL $label$5
	$9 = *(($1 + [12]))
	$4 = *(($1 + [8]))
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$6 }
	
.LOOP $label$7:
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	*((($5 + [24]) + [8])) = ($4 + [8])
	*((($5 + [24]) + [12])) = ($4 + [12])
	*((($5 + [24]) + [16])) = ($4 + [16])
	*($5 + [28]) = ($4 + [4])
	CALL $144(($5 + [24]), ($5 + [16]))
	$4 = ($4 + [20])
	if ( ((int_32)$4 != (int_32)$9) ){ goto $label$7 }
	
.LABEL $label$6
	CALL db_update_i64(*($1 + [24]), $2, $8, [9])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$global$0 = ($5 + [48])
}

void .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [116]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9490])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9540])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [104]) & [1]) == 0) ){ goto $label$17 }
	CALL $10(*(($6 + [112])))
	if ( ((*($6 + [92]) & [1]) == 0) ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((*($6 + [92]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $10(*(($6 + [100])))
	if ( (*($6 + [80]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((*($6 + [80]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $10(*(($6 + [88])))
	
.LABEL $label$13
	CALL $10($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$18:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$19 }
	if ( ((*($9 + [104]) & [1]) == 0) ){ goto $label$24 }
	CALL $10(*(($9 + [112])))
	if ( ((*($9 + [92]) & [1]) == 0) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((*($9 + [92]) & [1]) == 0) ){ goto $label$22 }
	
.LABEL $label$23
	CALL $10(*(($9 + [100])))
	if ( (*($9 + [80]) & [1]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	if ( ((*($9 + [80]) & [1]) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	CALL $10(*(($9 + [88])))
	
.LABEL $label$20
	CALL $10($9)
	
.LABEL $label$19
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$18 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [120]))
	$9 = *($1 + [124])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$26 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3899294111387090944, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$25 }
	
.LABEL $label$26
	CALL db_idx64_remove($9)
	
.LABEL $label$25
	$global$0 = ($2 + [16])
}

void .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9490])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9540])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	$7 = *($5 + [8])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($5 + [12])) = $7
	CALL $10($7)
	
.LABEL $label$13
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$2 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	$7 = *($8 + [8])
	if ( ($7 == 0) ){ goto $label$16 }
	*(($8 + [12])) = $7
	CALL $10($7)
	
.LABEL $label$16
	CALL $10($8)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*($1 + [24]))
}

int_32 .FUNC $7 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $5())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $6($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $178 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = *($0)
	$6 = *($5 + [4])
	$7 = *($6 + [56])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	$7 = *($5)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-3899101764628893184, ($4 + [8]), *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($7)
	
.LABEL $label$1
	$5 = *($0)
	$6 = *($5 + [4])
	$7 = *(($6 + [60]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$4 }
	$7 = *($5)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-3899101764628893183, ($4 + [8]), *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($7)
	
.LABEL $label$3
	$7 = *($0)
	$5 = *($7 + [4])
	$0 = *(($5 + [64]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$6 }
	$0 = *($7)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3899101764628893182, ($4 + [8]), *($5))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($0)
	
.LABEL $label$5
	$global$0 = ($4 + [16])
}

void .FUNC $4 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

int_32 .FUNC $5 ()
{
	return [8208]
}

void .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [8966])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $3 (int_32 $0)
{
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8966])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8966])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8966])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $148(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $8($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $16($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $10($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $0 ()
{
	CALL $4()
}

int_32 .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8564])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $8([56])) + [40]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [36])
	CALL $111(($3 + [40]), ($3 + [32]))
	*($5 + [44]) = $1
	*($3 + [32]) = $5
	*($3 + [40]) = (int_64)0
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)0
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $112(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $42 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [92])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	$3 = *($3)
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [56]) = ((int_64)*($1 + [56]) + (int_64)*($3))
	$3 = [76]
	$6 = ($1 + [76])
	$7 = ($1 + [56])
	$8 = ($1 + [16])
	$10 = *($1 + [76])
	$9 = *(($1 + [80]))
	$11 = ($9 - $10)
	$12 = (CASTING uint_64)(uint_32 int_32($11 >> [5]))
	$13 = *($1)
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$4 }
	$3 = ((((int_32)uint_32(($11 + [-32]) >> [5]) * (int_32)[26]) + $3) + [26])
	
.LABEL $label$4
	$9 = ($3 + [1])
	if ( ($9 <= [513]) ){ goto $label$6 }
	$3 = CALL $2($9)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($4 - (($9 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $9)
	*($5 + [24]) = ($5 + [8])
	*($5 + [40]) = $8
	*($5 + [60]) = $7
	*($5 + [72]) = $6
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	*($5 + [64]) = ($1 + [64])
	*($5 + [68]) = ($1 + [72])
	*($5 + [76]) = ($1 + [88])
	CALL $125(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [96]), $2, $3, $9)
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$13 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $3($3)
	if ( (uint_64)($13 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [80])
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8564])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([104])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [76 align=4]) = (int_64)0
	*($5 + [84]) = [0]
	*($5 + [92]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [56])
	*($3 + [64]) = ($5 + [64])
	*($3 + [68]) = ($5 + [72])
	*($3 + [72]) = ($5 + [76])
	*($3 + [76]) = ($5 + [88])
	CALL $120(($3 + [32]), ($3 + [24]))
	*($5 + [96]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $121(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$4 = *($1 + [76])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [80])) = $4
	CALL $10($4)
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [9853])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [9958])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [9891])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [9958])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $47 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = ($0 + [48])
	$5 = *($1)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$7:
	$1 = ($7 + [-24])
	$8 = *($1)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$6 }
	$7 = $1
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	if ( ((int_32)*(($8 + [92])) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$8
	if ( $8 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($4), *(($0 + [56])), (int_64)-3899173487572132544, $5)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $41($4, $1)
	if ( ((int_32)*($8 + [92]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$4
	$5 = *($8 + [16])
	if ( ((uint_64)$5 > (uint_64)(int_64)5000000) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$8 = [0]
	CALL eosio_assert([0], [8730])
	$5 = *([0] + [16])
	if ( ((uint_64)$5 > (uint_64)(int_64)5000000) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10045])
	$5 = *(($8 + [16]))
	
.LABEL $label$1
	if ( ((uint_64)*($2) <= (uint_64)((int_64)$5 + (int_64)-5000000)) ){ goto $label$9 }
	CALL eosio_assert([0], [10045])
	
.LABEL $label$9
	$5 = *($0)
	*($3 + [8]) = $2
	if ( $8 ){ goto $label$10 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$10
	CALL $153($4, $8, $5, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $46 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [160])
	$global$0 = $3
	*($3 + [112]) = $2
	*($3 + [120]) = $1
	CALL require_auth($1)
	CALL $47(($0 + [160]), ($3 + [120]), ($3 + [112]))
	$4 = *($3 + [112])
	$5 = *([0] + [8264])
	$6 = CALL $18($5)
	if ( ($6 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9755])
	goto $label$3 
	
.LABEL $label$4
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$1 = (int_64)0
	
.LOOP $label$5:
	$7 = (($5 + $6) + [-1])
	$8 = *($7)
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9800])
	$8 = *($7)
	
.LABEL $label$6
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$5 }
	$9 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)4
	
.LABEL $label$1
	if ( (uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$7 }
	CALL eosio_assert([0], [10174])
	
.LABEL $label$7
	$1 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$1 = $2
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$1 = $2
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$7 = ($6 + [1])
	$6 = $7
	if ( $8 ){ goto $label$12 }
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [10223])
	
.LABEL $label$8
	$1 = *($0)
	*(($3 + [16])) = [0]
	*($3 + [8]) = (int_64)0
	$6 = CALL $18([10010])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$16 }
	*($3 + [8]) = ($6 << [1])
	$8 = (($3 + [8]) | [1])
	if ( $6 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$7 = (($6 + [16]) & [-16])
	$8 = CALL $8($7)
	*($3 + [8]) = ($7 | [1])
	*($3 + [16]) = $8
	*($3 + [12]) = $6
	
.LABEL $label$15
	CALL memcpy($8, [10010], $6)
	
.LABEL $label$14
	*(($8 + $6)) = [0]
	*((($3 + [24]) + [24])) = $9
	$6 = ($3 + [16])
	*(($3 + [64])) = *($6)
	*($6) = [0]
	*($3 + [40]) = $4
	*($3 + [72]) = (int_64)9022140666672313616
	*($3 + [80]) = (int_64)-3617168760277827584
	*($3 + [24]) = *($0)
	*($3 + [32]) = *($3 + [120])
	*($3 + [56]) = *($3 + [8])
	*($3 + [8]) = (int_64)0
	*(($6 = CALL $8([16]))) = $1
	*($6 + [8]) = (int_64)3617214756542218240
	*((($3 + [72]) + [36])) = [0]
	$8 = ($6 + [16])
	*((($3 + [72]) + [24])) = $8
	*(($3 + [92])) = $8
	*($3 + [88]) = $6
	*($3 + [100 align=4]) = (int_64)0
	$6 = *($3 + [56])
	$8 = ( *((($3 + [24]) + [36])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($8 + [32])
	$1 = (CASTING uint_64)(uint_32 $8)
	$8 = ($3 + [100])
	
.LOOP $label$17:
	$6 = ($6 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$17 }
	if ( ($6 == 0) ){ goto $label$19 }
	CALL $48($8, $6)
	$8 = *(($3 + [104]))
	$6 = *(($3 + [100]))
	goto $label$18 
	
.LABEL $label$19
	$8 = [0]
	$6 = [0]
	
.LABEL $label$18
	*($3 + [132]) = $6
	*($3 + [128]) = $6
	*($3 + [136]) = $8
	*($3 + [144]) = ($3 + [128])
	*($3 + [152]) = ($3 + [24])
	CALL $49(($3 + [152]), ($3 + [144]))
	CALL $50(($3 + [72]))
	$6 = *($3 + [100])
	if ( ($6 == 0) ){ goto $label$20 }
	*(($3 + [104])) = $6
	CALL $10($6)
	
.LABEL $label$20
	$6 = *($3 + [88])
	if ( ($6 == 0) ){ goto $label$21 }
	*(($3 + [92])) = $6
	CALL $10($6)
	
.LABEL $label$21
	if ( ((*(($3 + [56])) & [1]) == 0) ){ goto $label$22 }
	CALL $10(*(($3 + [64])))
	
.LABEL $label$22
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$23 }
	CALL $10(*(($3 + [16])))
	
.LABEL $label$23
	*($3 + [24]) = *($3 + [112])
	$6 = [0]
	$8 = ($0 + [440])
	$7 = CALL db_lowerbound_i64(*($8), *(($0 + [448])), (int_64)-3899443509350574272, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$24 }
	$6 = CALL $43($8, $7)
	
.LABEL $label$24
	$1 = *($0 + [432])
	*($3 + [72]) = ($3 + [24])
	if ( $6 ){ goto $label$25 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$25
	CALL $51($8, $6, $1, ($3 + [72]))
	$global$0 = ($3 + [160])
	return (unreachable)
	
.LABEL $label$13
	CALL $20(($3 + [8]))
}

void .FUNC $45 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [496])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [488]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [488]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$6
	CALL memcpy(($3 + [480]), $6, [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [76])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*(($3 + [128])) = $0
	*(($3 + [120])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*($3 + [160]) = $0
	*($3 + [248]) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [264])) = $0
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [334])) = [0]
	*(($3 + [332])) = [0]
	*(($3 + [336])) = ($3 + [160])
	*(($3 + [340])) = ($3 + [32])
	*(($3 + [344])) = ($3 + [432])
	*(($3 + [352])) = (int_64)0
	*(($3 + [440])) = $0
	*($3 + [432]) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [448])) = $0
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	CALL $46($3, *($3 + [488]), *($3 + [480]))
	CALL $29($3)
	$global$0 = ($3 + [496])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($1) = ((int_64)*($1) + (int_64)*(*($3)))
	*($1 + [36]) = ((int_64)CALL $17() / (int_64)1000000)
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-11])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [36])
	CALL $149(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [37])
	if ( ((int_64)*($0 + [16]) == (int_64)0) ){ goto $label$3 }
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$3
	*(($0 + [16])) = (int_64)1
	$global$0 = ($5 + [48])
}

void .FUNC $167 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9063])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $8([104])) + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [76 align=4]) = (int_64)0
	*($3 + [84]) = [0]
	*($3 + [92]) = $1
	CALL $168(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [96])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $121(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [76])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [80])) = $1
	CALL $10($1)
	
.LABEL $label$5
	CALL $10($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $148(*($1), *($0 + [4]))
	CALL $148(*($1), *($0 + [8]))
	CALL $148(*($1), *($0 + [12]))
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [8966])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $3, [2])
	*(($0 = ($0 + [4]))) = (*($0) + [2])
}

void .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$1 = (*($2) + [8])
	*(($2 = *($1))) = $1
	$4 = *($3)
	$3 = *($0 + [4])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$2
	$4 = *($3)
	$3 = *($0 + [8])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$4
	$3 = *($0)
	$0 = *($0 + [12])
	$5 = (CASTING uint_64)(uint_32 ( *($0 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	*($2) = $1
	$0 = *($0)
	$0 = ( *(($0 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$6 }
	$1 = ($0 + $1)
	*($2) = $1
	
.LABEL $label$6
	*($2) = ($1 + [4])
}

void .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$4 = *($0)
	$5 = ($1 + [8])
	CALL $22($5, *($3 + [4]))
	$6 = ($1 + [20])
	CALL $22($6, *($3 + [8]))
	$7 = ($1 + [32])
	CALL $22($7, *($3 + [12]))
	*($1 + [44]) = *(*($3 + [16]))
	*($1 + [46]) = *(*($3 + [20]))
	*(($3 = $2) + [16]) = [0]
	*($3) = ($3 + [16])
	*($3 + [28]) = $5
	*($3 + [24]) = $1
	*($3 + [32]) = $6
	*($3 + [36]) = $7
	$8 = ($1 + [44])
	*($3 + [40]) = $8
	$9 = ($1 + [46])
	*($3 + [44]) = $9
	CALL $165(($3 + [24]), $3)
	$10 = *($3 + [16])
	if ( ($10 <= [513]) ){ goto $label$2 }
	$2 = CALL $2($10)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($10 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$1
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $10)
	*($3 + [16]) = $3
	*($3 + [28]) = $5
	*($3 + [24]) = $1
	*($3 + [32]) = $6
	*($3 + [36]) = $7
	*($3 + [40]) = $8
	*($3 + [44]) = $9
	CALL $166(($3 + [24]), ($3 + [16]))
	$11 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-3899409856248546304, *(*($0 + [8])), $11, $2, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$5 }
	if ( ((uint_64)$11 >= (uint_64)*($4 + [16])) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $3($2)
	if ( (uint_64)($11 <= *($4 + [16])) ){ goto $label$3 }
	
.LABEL $label$4
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$3
	$global$0 = ($3 + [48])
}

int_32 .FUNC $163 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$4 = ($1 + [-24])
	*($3) = $4
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$8 }
	CALL $10(*(($1 + [40])))
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $10(*(($1 + [28])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $10(*(($1 + [16])))
	
.LABEL $label$4
	CALL $10($1)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $10($1)
	
.LABEL $label$9
	return $0
}

void .FUNC $162 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL $8(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $163(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

void .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $37(*($1), *($0 + [4]))
	CALL $37(*($1), *($0 + [8]))
	CALL $37(*($1), *($0 + [12]))
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [8615])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [2])
	*(($0 = ($0 + [4]))) = (*($0) + [2])
}

void .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [64])
	$global$0 = $2
	*(($3 = ($1 + [12]))) = *($1 + [8])
	*($1) = *(*(*($0 + [4])))
	$4 = *($0)
	$5 = ($2 | [9])
	*($2 + [24]) = $5
	*($2 + [16]) = $2
	CALL memcpy($2, $1, [8])
	$6 = ($2 | [8])
	*($2 + [20]) = $6
	$7 = (CASTING uint_64)(uint_32 ((int_32)(*($3) - *($1 + [8])) / (int_32)[20]))
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	*($2 + [40]) = ((((int_64)$7) != (int_64)0) << [7]) | ($3 & [127]))
	if ( ((int_32)($5 - $6) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$6 = *($2 + [20])
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [40]), [1])
	$6 = ($6 + [1])
	*($2 + [20]) = $6
	if ( (int_64)($7 == 0) ){ goto $label$3 }
	$5 = *((($2 + [16]) + [8]))
	goto $label$1 
	
.LABEL $label$3
	$5 = *(($1 + [12]))
	$6 = *(($1 + [8]))
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	*($2 + [32]) = ($2 + [16])
	*($2 + [40]) = $6
	*((($2 + [40]) + [8])) = ($6 + [8])
	*((($2 + [40]) + [12])) = ($6 + [12])
	*((($2 + [40]) + [16])) = ($6 + [16])
	*($2 + [44]) = ($6 + [4])
	CALL $144(($2 + [40]), ($2 + [32]))
	$6 = ($6 + [20])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($4 + [8]), (int_64)-3899189674848550912, *(*($0 + [8])), $7, $2, [9])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$global$0 = ($2 + [64])
}

void .FUNC $169 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [116]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($5 + [16]) = *($1 + [8])
	$6 = *($1)
	$7 = $6
	$8 = *(*($3))
	if ( ((((*($1 + [50]) + [50]) - $8) & [65535]) <= [101]) ){ goto $label$3 }
	CALL eosio_assert([0], [10323])
	$7 = *($1)
	$8 = *(*($3))
	
.LABEL $label$3
	$9 = ($1 + [50])
	$10 = ($1 + [8])
	*($1 + [44]) = $8
	*($1 + [40]) = $8
	*($1 + [52]) = $8
	*($1 + [54]) = $8
	*($1 + [72]) = [0]
	$11 = ($1 + [72])
	$12 = ($1 + [54])
	$13 = ($1 + [52])
	$14 = ($1 + [44])
	$15 = ($1 + [40])
	if ( ((int_64)$6 == (int_64)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8907])
	
.LABEL $label$4
	*($5 + [24]) = [0]
	*($5) = ($5 + [24])
	*($5 + [36]) = $10
	*($5 + [52]) = $15
	*($5 + [60]) = $14
	*($5 + [72]) = $9
	*($5 + [76]) = $13
	*($5 + [80]) = $12
	*($5 + [92]) = $11
	*($5 + [32]) = $1
	$16 = ($1 + [16])
	*($5 + [40]) = $16
	$17 = ($1 + [24])
	*($5 + [44]) = $17
	$18 = ($1 + [32])
	*($5 + [48]) = $18
	$19 = ($1 + [42])
	*($5 + [56]) = $19
	$20 = ($1 + [46])
	*($5 + [64]) = $20
	$21 = ($1 + [48])
	*($5 + [68]) = $21
	$22 = ($1 + [56])
	*($5 + [84]) = $22
	$23 = ($1 + [64])
	*($5 + [88]) = $23
	$24 = ($1 + [76])
	*($5 + [96]) = $24
	$25 = ($1 + [80])
	*($5 + [100]) = $25
	$26 = ($1 + [92])
	*($5 + [104]) = $26
	$27 = ($1 + [104])
	*($5 + [108]) = $27
	CALL $146(($5 + [32]), $5)
	$3 = *($5 + [24])
	if ( ($3 <= [513]) ){ goto $label$6 }
	$8 = CALL $2($3)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$5
	*($5 + [4]) = $8
	*($5) = $8
	*($5 + [8]) = ($8 + $3)
	*($5 + [24]) = $5
	*($5 + [36]) = $10
	*($5 + [40]) = $16
	*($5 + [44]) = $17
	*($5 + [48]) = $18
	*($5 + [52]) = $15
	*($5 + [56]) = $19
	*($5 + [60]) = $14
	*($5 + [64]) = $20
	*($5 + [68]) = $21
	*($5 + [72]) = $9
	*($5 + [76]) = $13
	*($5 + [80]) = $12
	*($5 + [84]) = $22
	*($5 + [88]) = $23
	*($5 + [92]) = $11
	*($5 + [96]) = $24
	*($5 + [100]) = $25
	*($5 + [104]) = $26
	*($5 + [32]) = $1
	*($5 + [108]) = $27
	CALL $147(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [120]), $2, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL $3($8)
	
.LABEL $label$7
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [32]) = *($10)
	if ( (CALL $19(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$9 }
	$8 = *($1 + [124])
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$10 }
	$8 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3899294111387090944, ($5 + [24]), $6)
	*(($1 + [124])) = $8
	
.LABEL $label$10
	CALL db_idx64_update($8, $2, ($5 + [32]))
	
.LABEL $label$9
	$global$0 = ($5 + [112])
}

void .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*(($5 = ($1 + [80]))) = *($1 + [76])
	*($1 + [8]) = *(*($4 + [4]))
	*($1 + [16]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*($1 + [32]) = (int_64)0
	*($1 + [40]) = (int_64)0
	*($1 + [48]) = (int_64)0
	*($1 + [56]) = (int_64)0
	*($1 + [64]) = (int_64)0
	$6 = *($0)
	$7 = CALL $17()
	*($1 + [88]) = [1]
	*($1 + [72]) = ((int_64)$7 / (int_64)1000000)
	$8 = ($1 + [88])
	$9 = ($1 + [72])
	$4 = [76]
	$10 = ($1 + [76])
	$11 = ($1 + [64])
	$12 = ($1 + [56])
	$13 = ($1 + [48])
	$14 = ($1 + [40])
	$15 = ($1 + [32])
	$16 = ($1 + [24])
	$17 = ($1 + [16])
	$18 = *($1 + [76])
	$5 = *($5)
	$19 = ($5 - $18)
	$7 = (CASTING uint_64)(uint_32 int_32($19 >> [5]))
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$18 == (int_32)$5) ){ goto $label$2 }
	$4 = ((((int_32)uint_32(($19 + [-32]) >> [5]) * (int_32)[26]) + $4) + [26])
	
.LABEL $label$2
	$5 = ($4 + [1])
	if ( ($5 <= [513]) ){ goto $label$4 }
	$4 = CALL $2($5)
	goto $label$3 
	
.LABEL $label$4
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$3
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = $17
	*($3 + [44]) = $16
	*($3 + [48]) = $15
	*($3 + [52]) = $14
	*($3 + [56]) = $13
	*($3 + [60]) = $12
	*($3 + [64]) = $11
	*($3 + [68]) = $9
	*($3 + [72]) = $10
	*($3 + [76]) = $8
	CALL $125(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [96]) = CALL db_store_i64(*($6 + [8]), (int_64)-3899173487572132544, *(*($0 + [8])), $7, $4, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$7 >= (uint_64)*($6 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $3($4)
	if ( (uint_64)($7 <= *($6 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [80])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [80])
}

void .FUNC $175 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9063])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL $8([56])
	CALL $176($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)0
	$5 = *($3 + [44])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)0
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $112(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $10($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $58 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [688])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [620]) = $2
	*($3 + [616]) = $2
	*($3 + [624]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$2 = *($3 + [620])
	
.LABEL $label$5
	CALL memcpy(($3 + [608]), $2, [8])
	*($3 + [620]) = ($2 + [8])
	*($3 + [600]) = [0]
	*($3 + [592]) = (int_64)0
	CALL $37(($3 + [616]), ($3 + [592]))
	*($3 + [584]) = [0]
	*($3 + [576]) = (int_64)0
	CALL $37(($3 + [616]), ($3 + [576]))
	*($3 + [568]) = [0]
	*($3 + [560]) = (int_64)0
	CALL $37(($3 + [616]), ($3 + [560]))
	$2 = *($3 + [620])
	$4 = (($3 + [616]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	$2 = *($3 + [620])
	
.LABEL $label$6
	CALL memcpy(($3 + [558]), $2, [2])
	$2 = (*($3 + [620]) + [2])
	*($3 + [620]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[1]) ){ goto $label$7 }
	CALL eosio_assert([0], [8615])
	$2 = *($3 + [620])
	
.LABEL $label$7
	CALL memcpy(($3 + [556]), $2, [2])
	*($3 + [620]) = (*($3 + [620]) + [2])
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [616]) + [8]))
	*($3 + [56]) = *($3 + [616])
	$2 = *($2)
	*((($3 + [632]) + [8])) = $2
	*(($4 = (($3 + [648]) + [8]))) = $2
	$5 = *($3 + [56])
	*($3 + [648]) = $5
	*($3 + [632]) = $5
	$2 = *($4)
	*((($3 + [664]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$1 = *($3 + [648])
	*($3 + [88]) = $1
	*($3 + [664]) = $1
	*(($3 + [112])) = $0
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($6 = ($3 + [152]))) = $0
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*($3 + [104]) = $0
	*($3 + [232]) = $0
	*(($3 + [248])) = $0
	*(($3 + [240])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = (int_64)0
	*(($3 + [360])) = [0]
	*(($3 + [364])) = [0]
	*(($3 + [368])) = $0
	*($3 + [320]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [376])) = $0
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [406])) = [0]
	*(($3 + [404])) = [0]
	*(($3 + [408])) = ($3 + [232])
	*(($3 + [412])) = ($3 + [104])
	*(($3 + [416])) = ($3 + [504])
	*(($3 + [424])) = (int_64)0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = (int_64)0
	*(($3 + [544])) = [0]
	*($3 + [504]) = $0
	$0 = *($3 + [608])
	$4 = CALL $21(($3 + [40]), ($3 + [592]))
	$7 = CALL $21(($3 + [24]), ($3 + [576]))
	$2 = CALL $21(($3 + [8]), ($3 + [560]))
	$8 = *($3 + [556])
	*($3 + [662]) = *($3 + [558])
	*($3 + [632]) = $0
	*($3 + [660]) = $8
	CALL require_auth((int_64)9022140632959968560)
	$0 = *($3 + [104])
	*($3 + [668]) = $4
	*($3 + [672]) = $7
	*($3 + [676]) = $2
	*($3 + [664]) = ($3 + [632])
	*($3 + [680]) = ($3 + [662])
	*($3 + [684]) = ($3 + [660])
	CALL $59(($3 + [648]), $6, $0, ($3 + [664]))
	if ( (*($2) & [1]) ){ goto $label$12 }
	if ( (*($7) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $10(*($2 + [8]))
	if ( ((*($7) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $10(*($7 + [8]))
	$2 = [1]
	if ( (*($4) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$2 = [1]
	if ( ((*($4) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $10(*($4 + [8]))
	
.LABEL $label$8
	CALL $29(($3 + [72]))
	if ( (*($3 + [560]) & $2) ){ goto $label$17 }
	$2 = [1]
	if ( (*($3 + [576]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $10(*(($3 + [568])))
	$2 = [1]
	if ( ((*($3 + [576]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $10(*(($3 + [584])))
	if ( ((*($3 + [592]) & $2) == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( (*($3 + [592]) & $2) ){ goto $label$13 }
	
.LABEL $label$14
	$global$0 = ($3 + [688])
	return 
	
.LABEL $label$13
	CALL $10(*(($3 + [600])))
	$global$0 = ($3 + [688])
}

void .FUNC $59 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9063])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $8([64])) + [8 align=4]) = (int_64)0
	*($3 + [16 align=4]) = (int_64)0
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [32 align=4]) = (int_64)0
	*($3 + [40]) = [0]
	*($3 + [48]) = $1
	CALL $164(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [52])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $162(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	if ( (*($3 + [32]) & [1]) ){ goto $label$9 }
	if ( (*($3 + [20]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $10(*(($3 + [40])))
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10(*(($3 + [28])))
	if ( (*($3 + [8]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $10(*(($3 + [16])))
	
.LABEL $label$5
	CALL $10($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $50 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $48($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $154(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $10($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $51 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)*(*($3)))
	*($1 + [36]) = ((int_64)CALL $17() / (int_64)1000000)
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-11])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [36])
	CALL $149(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [37])
	if ( ((int_64)*($0 + [16]) == (int_64)0) ){ goto $label$3 }
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$3
	*(($0 + [16])) = (int_64)1
	$global$0 = ($5 + [48])
}

void .FUNC $52 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [688])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [628]) = $2
	*($3 + [624]) = $2
	$5 = ($2 + $4)
	*($3 + [632]) = $5
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$5 = *(($3 + [632]))
	$2 = *($3 + [628])
	
.LABEL $label$5
	CALL memcpy(($3 + [616]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [628]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	$5 = *((($3 + [624]) + [8]))
	$2 = *($3 + [628])
	
.LABEL $label$6
	CALL memcpy(($3 + [612]), $2, [4])
	$2 = ($2 + [4])
	*($3 + [628]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8615])
	$5 = *(($3 + [632]))
	$2 = *($3 + [628])
	
.LABEL $label$7
	CALL memcpy(($3 + [600]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [628]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[1]) ){ goto $label$8 }
	CALL eosio_assert([0], [8615])
	$2 = *($3 + [628])
	
.LABEL $label$8
	CALL memcpy(($3 + [598]), $2, [2])
	*($3 + [628]) = ($2 + [2])
	*($3 + [592]) = [0]
	*($3 + [584]) = (int_64)0
	CALL $37(($3 + [624]), ($3 + [584]))
	*($3 + [576]) = [0]
	*($3 + [568]) = (int_64)0
	CALL $37(($3 + [624]), ($3 + [568]))
	*($3 + [560]) = [0]
	*($3 + [552]) = (int_64)0
	CALL $37(($3 + [624]), ($3 + [552]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [624]) + [8]))
	*($3 + [56]) = *($3 + [624])
	$2 = *($2)
	*((($3 + [640]) + [8])) = $2
	*(($5 = (($3 + [656]) + [8]))) = $2
	$6 = *($3 + [56])
	*($3 + [656]) = $6
	*($3 + [640]) = $6
	$2 = *($5)
	*((($3 + [672]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$1 = *($3 + [656])
	*($3 + [88]) = $1
	*($3 + [672]) = $1
	*(($3 + [112])) = $0
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*($3 + [104]) = $0
	*($3 + [232]) = $0
	*(($3 + [248])) = $0
	*(($3 + [240])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = (int_64)0
	*(($3 + [360])) = [0]
	*(($3 + [364])) = [0]
	*(($3 + [368])) = $0
	*($3 + [320]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [376])) = $0
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [406])) = [0]
	*(($3 + [404])) = [0]
	*(($3 + [408])) = ($3 + [232])
	$7 = ($3 + [104])
	*(($3 + [412])) = $7
	*(($3 + [416])) = ($3 + [504])
	*(($3 + [424])) = (int_64)0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = (int_64)0
	*(($3 + [544])) = [0]
	*($3 + [504]) = $0
	$8 = *($3 + [598])
	$0 = *($3 + [600])
	$1 = *($3 + [616])
	$9 = *($3 + [612])
	$5 = CALL $21(($3 + [40]), ($3 + [584]))
	$4 = CALL $21(($3 + [24]), ($3 + [568]))
	$2 = CALL $21(($3 + [8]), ($3 + [552]))
	*($3 + [640]) = $9
	*($3 + [672]) = $1
	*($3 + [656]) = $0
	*($3 + [686]) = $8
	CALL require_auth((int_64)9022140632959968560)
	CALL $53($7, ($3 + [672]), ($3 + [640]), ($3 + [656]), ($3 + [686]), $5, $4, $2)
	if ( (*($2) & [1]) ){ goto $label$13 }
	$2 = [1]
	if ( (*($4) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $10(*($2 + [8]))
	$2 = [1]
	if ( ((*($4) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $10(*($4 + [8]))
	if ( (*($5) & $2) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	if ( ((*($5) & $2) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $10(*($5 + [8]))
	
.LABEL $label$9
	CALL $29(($3 + [72]))
	if ( (*($3 + [552]) & [1]) ){ goto $label$18 }
	if ( (*($3 + [568]) & [1]) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $10(*(($3 + [560])))
	if ( ((*($3 + [568]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $10(*(($3 + [576])))
	if ( ((*($3 + [584]) & [1]) == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( (*($3 + [584]) & [1]) ){ goto $label$14 }
	
.LABEL $label$15
	$global$0 = ($3 + [688])
	return 
	
.LABEL $label$14
	CALL $10(*(($3 + [592])))
	$global$0 = ($3 + [688])
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$8 = ($global$0 - [48])
	$global$0 = $8
	$9 = ($0 + [48])
	$10 = *($3)
	$12 = *(($0 + [76]))
	$11 = *(($0 + [72]))
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$2 }
	
.LOOP $label$4:
	$13 = ($12 + [-24])
	$14 = *($13)
	if ( ((int_64)*($14) == (int_64)$10) ){ goto $label$3 }
	$12 = $13
	if ( ((int_32)$11 != (int_32)$13) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$2 }
	if ( ((int_32)*($14 + [48]) == (int_32)$9) ){ goto $label$1 }
	CALL eosio_assert([0], [8513])
	goto $label$1 
	
.LABEL $label$2
	$13 = CALL db_find_i64(*($9), *(($0 + [56])), (int_64)-3899409856248546304, $10)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)*(CALL $62($9, $13) + [48]) == (int_32)$9) ){ goto $label$1 }
	CALL eosio_assert([0], [8513])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert([0], [10243])
	
.LABEL $label$1
	$10 = *($0)
	*($8 + [20]) = $3
	*($8 + [16]) = $1
	*($8 + [24]) = $4
	*($8 + [28]) = $2
	*($8 + [32]) = $5
	*($8 + [36]) = $6
	*($8 + [40]) = $7
	CALL $157(($8 + [8]), ($0 + [8]), $10, ($8 + [16]))
	$10 = *($0)
	*($8 + [8]) = $1
	CALL $158(($8 + [16]), ($0 + [88]), $10, ($8 + [8]))
	$global$0 = ($8 + [48])
}

void .FUNC $54 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [672])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [612]) = $2
	*($3 + [608]) = $2
	$5 = ($2 + $4)
	*($3 + [616]) = $5
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$5 = *(($3 + [616]))
	$2 = *($3 + [612])
	
.LABEL $label$5
	CALL memcpy(($3 + [600]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [612]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	$2 = *($3 + [612])
	
.LABEL $label$6
	CALL memcpy(($3 + [596]), $2, [4])
	*($3 + [612]) = ($2 + [4])
	*($3 + [592]) = [0]
	*($3 + [584]) = (int_64)0
	CALL $37(($3 + [608]), ($3 + [584]))
	*($3 + [576]) = [0]
	*($3 + [568]) = (int_64)0
	CALL $37(($3 + [608]), ($3 + [568]))
	*($3 + [560]) = [0]
	*($3 + [552]) = (int_64)0
	CALL $37(($3 + [608]), ($3 + [552]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [608]) + [8]))
	*($3 + [56]) = *($3 + [608])
	$2 = *($2)
	*((($3 + [624]) + [8])) = $2
	*(($4 = (($3 + [640]) + [8]))) = $2
	$6 = *($3 + [56])
	*($3 + [640]) = $6
	*($3 + [624]) = $6
	$2 = *($4)
	*((($3 + [656]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$1 = *($3 + [640])
	*($3 + [88]) = $1
	*($3 + [656]) = $1
	*(($3 + [112])) = $0
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*($3 + [104]) = $0
	*($3 + [232]) = $0
	*(($3 + [248])) = $0
	*(($3 + [240])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = (int_64)0
	*(($3 + [360])) = [0]
	*(($3 + [364])) = [0]
	*(($3 + [368])) = $0
	*($3 + [320]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [376])) = $0
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [406])) = [0]
	*(($3 + [404])) = [0]
	*(($3 + [408])) = ($3 + [232])
	*(($3 + [412])) = ($3 + [104])
	*(($3 + [416])) = ($3 + [504])
	*(($3 + [424])) = (int_64)0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = (int_64)0
	*(($3 + [544])) = [0]
	*($3 + [504]) = $0
	$2 = CALL $21(($3 + [8]), ($3 + [552]))
	$5 = CALL $21(($3 + [24]), ($3 + [568]))
	$4 = CALL $21(($3 + [40]), ($3 + [584]))
	CALL $55(($3 + [72]), *($3 + [600]), *($3 + [596]), $4, $5, $2)
	if ( (*($2) & [1]) ){ goto $label$11 }
	if ( (*($5) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $10(*($2 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $10(*($5 + [8]))
	$2 = [1]
	if ( (*($4) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$2 = [1]
	if ( ((*($4) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10(*($4 + [8]))
	
.LABEL $label$7
	CALL $29(($3 + [72]))
	if ( (*($3 + [552]) & $2) ){ goto $label$16 }
	$2 = [1]
	if ( (*($3 + [568]) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $10(*(($3 + [560])))
	$2 = [1]
	if ( ((*($3 + [568]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $10(*(($3 + [576])))
	if ( ((*($3 + [584]) & $2) == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	if ( (*($3 + [584]) & $2) ){ goto $label$12 }
	
.LABEL $label$13
	$global$0 = ($3 + [672])
	return 
	
.LABEL $label$12
	CALL $10(*(($3 + [592])))
	$global$0 = ($3 + [672])
}

void .FUNC $55 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$6 = ($global$0 - [32])
	$global$0 = $6
	*($6 + [12]) = $2
	CALL require_auth((int_64)9022140632959968560)
	$7 = ($0 + [40])
	$9 = *(($0 + [68]))
	$8 = *(($0 + [64]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$10 = *($2)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($10 + [116]) == (int_32)$7) ){ goto $label$6 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$6
	if ( $10 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($7), *(($0 + [48])), (int_64)-3899294111387090944, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$10 = CALL $56($7, $2)
	if ( ((int_32)*($10 + [116]) == (int_32)$7) ){ goto $label$1 }
	CALL eosio_assert([0], [8513])
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	CALL eosio_assert([0], [8587])
	
.LABEL $label$1
	$1 = *($0 + [32])
	*($6 + [20]) = $3
	*($6 + [24]) = $4
	*($6 + [28]) = $5
	*($6 + [16]) = ($6 + [12])
	if ( $10 ){ goto $label$7 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$7
	CALL $57($7, $10, $1, ($6 + [16]))
	$global$0 = ($6 + [32])
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [112])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8564])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([128])) + [80 align=4]) = (int_64)0
	*($5 + [88 align=4]) = (int_64)0
	*($5 + [96 align=4]) = (int_64)0
	*($5 + [104 align=4]) = (int_64)0
	*($5 + [112]) = [0]
	*($5 + [116]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [42])
	*($3 + [60]) = ($5 + [44])
	*($3 + [64]) = ($5 + [46])
	*($3 + [68]) = ($5 + [48])
	*($3 + [72]) = ($5 + [50])
	*($3 + [76]) = ($5 + [52])
	*($3 + [80]) = ($5 + [54])
	*($3 + [84]) = ($5 + [56])
	*($3 + [88]) = ($5 + [64])
	*($3 + [92]) = ($5 + [72])
	*($3 + [96]) = ($5 + [76])
	*($3 + [100]) = ($5 + [80])
	*($3 + [104]) = ($5 + [92])
	*($3 + [108]) = ($5 + [104])
	CALL $113(($3 + [32]), ($3 + [24]))
	*($5 + [124]) = [-1]
	*($5 + [120]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $114(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( (*($1 + [104]) & [1]) ){ goto $label$15 }
	if ( (*($1 + [92]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $10(*(($1 + [112])))
	if ( ((*($1 + [92]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $10(*(($1 + [100])))
	if ( (*($1 + [80]) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	if ( ((*($1 + [80]) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $10(*(($1 + [88])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [112])
	return $5
}

void .FUNC $57 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [116]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($5 + [16]) = *($1 + [8])
	*($1 + [76]) = *(*($3))
	$6 = *($1)
	$7 = ($1 + [80])
	CALL $22($7, *($3 + [4]))
	$8 = ($1 + [92])
	CALL $22($8, *($3 + [8]))
	$9 = ($1 + [104])
	CALL $22($9, *($3 + [12]))
	$10 = ($1 + [76])
	$11 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [8907])
	
.LABEL $label$3
	*($5 + [24]) = [0]
	*($5) = ($5 + [24])
	*($5 + [36]) = $11
	*($5 + [96]) = $10
	*($5 + [100]) = $7
	*($5 + [104]) = $8
	*($5 + [32]) = $1
	$12 = ($1 + [16])
	*($5 + [40]) = $12
	$13 = ($1 + [24])
	*($5 + [44]) = $13
	$14 = ($1 + [32])
	*($5 + [48]) = $14
	$15 = ($1 + [40])
	*($5 + [52]) = $15
	$16 = ($1 + [42])
	*($5 + [56]) = $16
	$17 = ($1 + [44])
	*($5 + [60]) = $17
	$18 = ($1 + [46])
	*($5 + [64]) = $18
	$19 = ($1 + [48])
	*($5 + [68]) = $19
	$20 = ($1 + [50])
	*($5 + [72]) = $20
	$21 = ($1 + [52])
	*($5 + [76]) = $21
	$22 = ($1 + [54])
	*($5 + [80]) = $22
	$23 = ($1 + [56])
	*($5 + [84]) = $23
	$24 = ($1 + [64])
	*($5 + [88]) = $24
	$25 = ($1 + [72])
	*($5 + [92]) = $25
	*($5 + [108]) = $9
	CALL $146(($5 + [32]), $5)
	$26 = *($5 + [24])
	if ( ($26 <= [513]) ){ goto $label$5 }
	$3 = CALL $2($26)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($4 - (($26 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $26)
	*($5 + [24]) = $5
	*($5 + [36]) = $11
	*($5 + [40]) = $12
	*($5 + [44]) = $13
	*($5 + [48]) = $14
	*($5 + [52]) = $15
	*($5 + [56]) = $16
	*($5 + [60]) = $17
	*($5 + [64]) = $18
	*($5 + [68]) = $19
	*($5 + [72]) = $20
	*($5 + [76]) = $21
	*($5 + [80]) = $22
	*($5 + [84]) = $23
	*($5 + [88]) = $24
	*($5 + [92]) = $25
	*($5 + [96]) = $10
	*($5 + [100]) = $7
	*($5 + [104]) = $8
	*($5 + [32]) = $1
	*($5 + [108]) = $9
	CALL $147(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [120]), $2, $3, $26)
	if ( ($26 <= [513]) ){ goto $label$6 }
	CALL $3($3)
	
.LABEL $label$6
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($5 + [32]) = *($11)
	if ( (CALL $19(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$8 }
	$3 = *($1 + [124])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$9 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3899294111387090944, ($5 + [24]), $6)
	*(($1 + [124])) = $3
	
.LABEL $label$9
	CALL db_idx64_update($3, $2, ($5 + [32]))
	
.LABEL $label$8
	$global$0 = ($5 + [112])
}

void .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9490])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9540])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$17 }
	CALL $10(*(($5 + [40])))
	if ( ((*($5 + [20]) & [1]) == 0) ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((*($5 + [20]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $10(*(($5 + [28])))
	if ( (*($5 + [8]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $10(*(($5 + [16])))
	
.LABEL $label$13
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$18:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$19 }
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$24 }
	CALL $10(*(($8 + [40])))
	if ( ((*($8 + [20]) & [1]) == 0) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((*($8 + [20]) & [1]) == 0) ){ goto $label$22 }
	
.LABEL $label$23
	CALL $10(*(($8 + [28])))
	if ( (*($8 + [8]) & [1]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	CALL $10(*(($8 + [16])))
	
.LABEL $label$20
	CALL $10($8)
	
.LABEL $label$19
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$18 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [52]))
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [8])
	if ( ((int_32)*(*($0)) != (int_32)[1]) ){ goto $label$4 }
	$4 = *(*($0 + [4]))
	$3 = *($1 + [24])
	if ( ((uint_64)$3 >= (uint_64)$4) ){ goto $label$3 }
	*(($1 + [24])) = (int_64)0
	goto $label$1 
	
.LABEL $label$4
	$4 = *(*($0 + [4]))
	$3 = *($1 + [32])
	if ( ((uint_64)$3 >= (uint_64)$4) ){ goto $label$2 }
	*(($1 + [32])) = (int_64)0
	goto $label$1 
	
.LABEL $label$3
	*(($1 + [24])) = (int_64))($3 - $4)
	goto $label$1 
	
.LABEL $label$2
	*(($1 + [32])) = (int_64))($3 - $4)
	
.LABEL $label$1
	$5 = ($2 + [88])
	$3 = *(*($0 + [12]))
	$7 = *(($2 + [116]))
	$6 = *(($2 + [112]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$9:
	$0 = ($7 + [-24])
	$8 = *($0)
	if ( ((int_64)*($8) == (int_64)$3) ){ goto $label$8 }
	$7 = $0
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	if ( ((int_32)*($8 + [20]) == (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [8513])
	goto $label$6 
	
.LABEL $label$7
	$0 = CALL db_find_i64(*($5), *(($2 + [96])), (int_64)-3899189674848550912, $3)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $99($5, $0)
	if ( ((int_32)*($8 + [20]) == (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$6
	$0 = *($8 + [8])
	$7 = *(($8 + [12]))
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($1 + [40]))
	$5 = [1001]
	goto $label$11 
	
.LABEL $label$12
	$2 = ((int_32)($7 - $0) / (int_32)[20])
	$8 = [0]
	$5 = [1001]
	$7 = [0]
	
.LOOP $label$13:
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$15 }
	$6 = *($0)
	$7 = ( $6 ? $7 : ((uint_32)$6 > (uint_32)($7 & [65535])) )
	goto $label$14 
	
.LABEL $label$15
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$14 }
	$6 = *($0)
	$5 = ( $6 ? $5 : ($6 <= ($5 & [65535])) )
	
.LABEL $label$14
	$0 = ($0 + [20])
	$8 = ($8 + [1])
	if ( ($8 <= $2) ){ goto $label$13 }
	$0 = *(($1 + [40]))
	if ( ($7 & [65535]) ){ goto $label$10 }
	
.LABEL $label$11
	$7 = $0
	
.LABEL $label$10
	*(($1 + [52])) = $7
	*(($1 + [54])) = ( $0 ? $5 : ((int_32)($5 & [65535]) == (int_32)[1001]) )
	return (unreachable)
	
.LABEL $label$5
	CALL eosio_assert([0], [8587])
}

void .FUNC $153 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [92])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	$3 = *($3)
	*($1 + [16]) = (int_64))(*($1 + [16]) - *($3))
	*($1 + [64]) = ((int_64)*($1 + [64]) + (int_64)*($3))
	$3 = [76]
	$6 = ($1 + [76])
	$7 = ($1 + [64])
	$8 = ($1 + [16])
	$10 = *($1 + [76])
	$9 = *(($1 + [80]))
	$11 = ($9 - $10)
	$12 = (CASTING uint_64)(uint_32 int_32($11 >> [5]))
	$13 = *($1)
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$4 }
	$3 = ((((int_32)uint_32(($11 + [-32]) >> [5]) * (int_32)[26]) + $3) + [26])
	
.LABEL $label$4
	$9 = ($3 + [1])
	if ( ($9 <= [513]) ){ goto $label$6 }
	$3 = CALL $2($9)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($4 - (($9 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $9)
	*($5 + [24]) = ($5 + [8])
	*($5 + [40]) = $8
	*($5 + [64]) = $7
	*($5 + [72]) = $6
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	*($5 + [60]) = ($1 + [56])
	*($5 + [68]) = ($1 + [72])
	*($5 + [76]) = ($1 + [88])
	CALL $125(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [96]), $2, $3, $9)
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$13 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $3($3)
	if ( (uint_64)($13 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [80])
}

void .FUNC $150 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *(*($3))
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$4 }
	*(($7 = (($8 = *($1 + [8])) + ((int_32)$7 * (int_32)[20]))) + [4]) = (*($7 + [4]) - *(*($3 + [4])))
	goto $label$3 
	
.LABEL $label$4
	$8 = *($1 + [8])
	
.LABEL $label$3
	$7 = *(($1 + [12]))
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$9 / (int_32)[20]))
	$3 = [26]
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$9 }
	$9 = (((int_32)((uint_32)($9 + [-20]) / (uint_32)[20]) * (int_32)[18]) + $3)
	if ( ($9 <= [513]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$9 = ($3 + [-18])
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$7 }
	
.LABEL $label$8
	$7 = ($4 - (($9 + [15]) & [-16]))
	$global$0 = $7
	goto $label$6 
	
.LABEL $label$7
	$7 = CALL $2($9)
	
.LABEL $label$6
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = ($7 + $9)
	$3 = $7
	if ( ((int_32)$9 > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [8966])
	$3 = *($5 + [4])
	
.LABEL $label$10
	CALL memcpy($3, $1, [8])
	$3 = ($3 + [8])
	*($5 + [4]) = $3
	$10 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [12])) - *(($1 + [8]))) / (int_32)[20]))
	
.LOOP $label$11:
	$8 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$4 = ((int_64)$10) != (int_64)0
	*($5 + [24]) = (($4) << [7]) | ($8 & [127]))
	if ( ((int_32)(*(($5 + [8])) - $3) > (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert([0], [8966])
	$3 = *($5 + [4])
	
.LABEL $label$12
	CALL memcpy($3, ($5 + [24]), [1])
	$3 = ($3 + [1])
	*($5 + [4]) = $3
	if ( $4 ){ goto $label$11 }
	$8 = *(($1 + [12]))
	$3 = *($1 + [8])
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$13 }
	
.LOOP $label$14:
	*($5 + [16]) = $5
	*($5 + [24]) = $3
	*((($5 + [24]) + [8])) = ($3 + [8])
	*((($5 + [24]) + [12])) = ($3 + [12])
	*((($5 + [24]) + [16])) = ($3 + [16])
	*($5 + [28]) = ($3 + [4])
	CALL $144(($5 + [24]), ($5 + [16]))
	$3 = ($3 + [20])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$14 }
	
.LABEL $label$13
	CALL db_update_i64(*($1 + [24]), $2, $7, $9)
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$17 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $3($7)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$15 }
	
.LABEL $label$16
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$15
	$global$0 = ($5 + [48])
}

void .FUNC $151 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [116]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($5 + [16]) = *($1 + [8])
	$6 = *($1)
	CALL $152($3, $1)
	$7 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [8907])
	
.LABEL $label$3
	*($5 + [24]) = [0]
	*($5) = ($5 + [24])
	*($5 + [36]) = $7
	*($5 + [32]) = $1
	$8 = ($1 + [16])
	*($5 + [40]) = $8
	$9 = ($1 + [24])
	*($5 + [44]) = $9
	$10 = ($1 + [32])
	*($5 + [48]) = $10
	$11 = ($1 + [40])
	*($5 + [52]) = $11
	$12 = ($1 + [42])
	*($5 + [56]) = $12
	$13 = ($1 + [44])
	*($5 + [60]) = $13
	$14 = ($1 + [46])
	*($5 + [64]) = $14
	$15 = ($1 + [48])
	*($5 + [68]) = $15
	$16 = ($1 + [50])
	*($5 + [72]) = $16
	$17 = ($1 + [52])
	*($5 + [76]) = $17
	$18 = ($1 + [54])
	*($5 + [80]) = $18
	$19 = ($1 + [56])
	*($5 + [84]) = $19
	$20 = ($1 + [64])
	*($5 + [88]) = $20
	$21 = ($1 + [72])
	*($5 + [92]) = $21
	$22 = ($1 + [76])
	*($5 + [96]) = $22
	$23 = ($1 + [80])
	*($5 + [100]) = $23
	$24 = ($1 + [92])
	*($5 + [104]) = $24
	$25 = ($1 + [104])
	*($5 + [108]) = $25
	CALL $146(($5 + [32]), $5)
	$3 = *($5 + [24])
	if ( ($3 <= [513]) ){ goto $label$5 }
	$4 = CALL $2($3)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [24]) = $5
	*($5 + [36]) = $7
	*($5 + [40]) = $8
	*($5 + [44]) = $9
	*($5 + [48]) = $10
	*($5 + [52]) = $11
	*($5 + [56]) = $12
	*($5 + [60]) = $13
	*($5 + [64]) = $14
	*($5 + [68]) = $15
	*($5 + [72]) = $16
	*($5 + [76]) = $17
	*($5 + [80]) = $18
	*($5 + [84]) = $19
	*($5 + [88]) = $20
	*($5 + [92]) = $21
	*($5 + [96]) = $22
	*($5 + [100]) = $23
	*($5 + [104]) = $24
	*($5 + [32]) = $1
	*($5 + [108]) = $25
	CALL $147(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [120]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL $3($4)
	
.LABEL $label$6
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($5 + [32]) = *($7)
	if ( (CALL $19(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$8 }
	$4 = *($1 + [124])
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$9 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3899294111387090944, ($5 + [24]), $6)
	*(($1 + [124])) = $4
	
.LABEL $label$9
	CALL db_idx64_update($4, $2, ($5 + [32]))
	
.LABEL $label$8
	$global$0 = ($5 + [112])
}

int_32 .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [8966])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $157 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9063])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $8([128])) + [80 align=4]) = (int_64)0
	*($3 + [88 align=4]) = (int_64)0
	*($3 + [96 align=4]) = (int_64)0
	*($3 + [104 align=4]) = (int_64)0
	*($3 + [112]) = [0]
	*($3 + [116]) = $1
	CALL $159(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [120])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $114(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	if ( (*($3 + [104]) & [1]) ){ goto $label$9 }
	if ( (*($3 + [92]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $10(*(($3 + [112])))
	if ( ((*($3 + [92]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10(*(($3 + [100])))
	if ( (*($3 + [80]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $10(*(($3 + [88])))
	
.LABEL $label$5
	CALL $10($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

int_32 .FUNC $154 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $156(CALL $155($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8966])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8966])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8966])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $158 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9063])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $8([32])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [20]) = $1
	CALL $160(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [24])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $117(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [12])) = $1
	CALL $10($1)
	
.LABEL $label$5
	CALL $10($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_64 $26
	int_64 $27
	int_64 $28
	$2 = ($global$0 - [112])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($3 + [8])
	*($1 + [40]) = *($4)
	*($1 + [42]) = *($4)
	*($1 + [44]) = *($4)
	*($1 + [46]) = *($4)
	*($1 + [48]) = *($4)
	*($1 + [50]) = *($4)
	*($1) = *(*($3))
	*($1 + [52]) = *($4)
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*($1 + [32]) = (int_64)0
	*($1 + [54]) = *($4)
	$5 = *($0)
	*($1 + [56]) = ((int_64)CALL $17() / (int_64)1000000)
	*($1 + [64]) = (int_64)0
	*($1 + [72]) = [1]
	*($1 + [76]) = *(*($3 + [12]))
	$6 = ($1 + [80])
	CALL $22($6, *($3 + [16]))
	$7 = ($1 + [92])
	CALL $22($7, *($3 + [20]))
	$8 = ($1 + [104])
	CALL $22($8, *($3 + [24]))
	*(($4 = $2) + [24]) = [0]
	*($4 + [8]) = ($4 + [24])
	$9 = ($1 + [8])
	*($4 + [36]) = $9
	*($4 + [32]) = $1
	$10 = ($1 + [16])
	*($4 + [40]) = $10
	$11 = ($1 + [24])
	*($4 + [44]) = $11
	$12 = ($1 + [32])
	*($4 + [48]) = $12
	$13 = ($1 + [40])
	*($4 + [52]) = $13
	$14 = ($1 + [42])
	*($4 + [56]) = $14
	$15 = ($1 + [44])
	*($4 + [60]) = $15
	$16 = ($1 + [46])
	*($4 + [64]) = $16
	$17 = ($1 + [48])
	*($4 + [68]) = $17
	$18 = ($1 + [50])
	*($4 + [72]) = $18
	$19 = ($1 + [52])
	*($4 + [76]) = $19
	$20 = ($1 + [54])
	*($4 + [80]) = $20
	$21 = ($1 + [56])
	*($4 + [84]) = $21
	$22 = ($1 + [64])
	*($4 + [88]) = $22
	$23 = ($1 + [72])
	*($4 + [92]) = $23
	$24 = ($1 + [76])
	*($4 + [96]) = $24
	*($4 + [100]) = $6
	*($4 + [104]) = $7
	*($4 + [108]) = $8
	CALL $146(($4 + [32]), ($4 + [8]))
	$25 = *($4 + [24])
	if ( ($25 <= [513]) ){ goto $label$2 }
	$3 = CALL $2($25)
	goto $label$1 
	
.LABEL $label$2
	$3 = ($2 - (($25 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$1
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $25)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $9
	*($4 + [32]) = $1
	*($4 + [40]) = $10
	*($4 + [44]) = $11
	*($4 + [48]) = $12
	*($4 + [52]) = $13
	*($4 + [56]) = $14
	*($4 + [60]) = $15
	*($4 + [64]) = $16
	*($4 + [68]) = $17
	*($4 + [72]) = $18
	*($4 + [76]) = $19
	*($4 + [80]) = $20
	*($4 + [84]) = $21
	*($4 + [88]) = $22
	*($4 + [92]) = $23
	*($4 + [96]) = $24
	*($4 + [100]) = $6
	*($4 + [104]) = $7
	*($4 + [108]) = $8
	CALL $147(($4 + [32]), ($4 + [24]))
	$26 = *($1)
	*($1 + [120]) = CALL db_store_i64(*($5 + [8]), (int_64)-3899294111387090944, *(*($0 + [8])), $26, $3, $25)
	if ( ($25 <= [513]) ){ goto $label$3 }
	CALL $3($3)
	
.LABEL $label$3
	if ( (uint_64)($26 <= *($5 + [16])) ){ goto $label$4 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$26 + (int_64)1) : ((uint_64)$26 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$26 = *(($5 + [8]))
	$27 = *(*(($0 + [8])))
	$28 = *($1)
	*($4 + [32]) = *(($1 + [8]))
	*($1 + [124]) = CALL db_idx64_store($26, (int_64)-3899294111387090944, $27, $28, ($4 + [32]))
	$global$0 = ($4 + [112])
}

void .FUNC $179 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [92])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($1 + [16]) = *(*($3))
	*($1 + [32]) = *(*($3 + [4]))
	$3 = (*($1 + [76]) + (*(*($3 + [8])) << [5]))
	$7 = ($3 + [32])
	$6 = ($1 + [80])
	$8 = (*($6) - $7)
	$9 = int_32($8 >> [5])
	$10 = *($1)
	if ( ($8 == 0) ){ goto $label$4 }
	CALL memmove($3, $7, $8)
	$8 = ($3 + ($9 << [5]))
	*($6) = $8
	if ( ((int_64)$10 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [8907])
	$8 = *(($1 + [80]))
	goto $label$3 
	
.LABEL $label$4
	$8 = ($3 + ($9 << [5]))
	*($6) = $8
	
.LABEL $label$3
	$6 = ($1 + [32])
	$9 = ($1 + [16])
	$3 = [76]
	$7 = ($1 + [76])
	$11 = *($1 + [76])
	$12 = ($8 - $11)
	$13 = (CASTING uint_64)(uint_32 int_32($12 >> [5]))
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$6 }
	$3 = ((((int_32)uint_32(($12 + [-32]) >> [5]) * (int_32)[26]) + $3) + [26])
	
.LABEL $label$6
	$8 = ($3 + [1])
	if ( ($8 <= [513]) ){ goto $label$8 }
	$3 = CALL $2($8)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$7
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $8)
	*($5 + [24]) = ($5 + [8])
	*($5 + [40]) = $9
	*($5 + [48]) = $6
	*($5 + [72]) = $7
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [44]) = ($1 + [24])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	*($5 + [60]) = ($1 + [56])
	*($5 + [64]) = ($1 + [64])
	*($5 + [68]) = ($1 + [72])
	*($5 + [76]) = ($1 + [88])
	CALL $125(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [96]), $2, $3, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$10 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $3($3)
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$9
	$global$0 = ($5 + [80])
}

void .FUNC $69 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [592])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [532]) = $4
	*($3 + [528]) = $4
	*($3 + [536]) = ($4 + $5)
	*($3 + [520]) = [0]
	*($3 + [512]) = (int_64)0
	CALL $70(($3 + [528]), ($3 + [512]))
	*(($4 = (($3 + [16]) + [8]))) = *($3 + [536])
	*($3 + [16]) = *($3 + [528])
	$4 = *($4)
	*((($3 + [544]) + [8])) = $4
	*(($5 = (($3 + [560]) + [8]))) = $4
	$6 = *($3 + [16])
	*($3 + [560]) = $6
	*($3 + [544]) = $6
	$4 = *($5)
	*((($3 + [576]) + [8])) = $4
	*(($3 + [56])) = $4
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$1 = *($3 + [560])
	*($3 + [48]) = $1
	*($3 + [576]) = $1
	*(($3 + [72])) = $0
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [108])) = [0]
	*(($3 + [112])) = $0
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*($3 + [64]) = $0
	*($3 + [192]) = $0
	*(($3 + [208])) = $0
	*(($3 + [200])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($7 = ($3 + [288]))) = $0
	*(($8 = ($3 + [296]))) = $0
	*(($3 + [304])) = (int_64)-1
	*(($9 = ($3 + [312]))) = (int_64)0
	*(($3 + [320])) = [0]
	*(($3 + [324])) = [0]
	*(($3 + [328])) = $0
	*($3 + [280]) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [336])) = $0
	*(($3 + [352])) = (int_64)0
	*(($3 + [360])) = [0]
	*(($3 + [366])) = [0]
	*(($3 + [364])) = [0]
	*(($3 + [368])) = ($3 + [192])
	*(($3 + [372])) = ($3 + [64])
	*(($3 + [376])) = ($3 + [464])
	*(($3 + [384])) = (int_64)0
	*(($3 + [472])) = $0
	*(($3 + [480])) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [496])) = (int_64)0
	*(($3 + [504])) = [0]
	*($3 + [464]) = $0
	CALL require_auth((int_64)9022140632959968560)
	$4 = *($3 + [512])
	if ( ((int_32)*($3 + [516]) == (int_32)$4) ){ goto $label$4 }
	$10 = ($3 + [280])
	$11 = ($3 + [316])
	$12 = [0]
	
.LOOP $label$5:
	$0 = *(($4 + ($12 << [3])))
	$5 = *($11)
	$13 = *($9)
	if ( ((int_32)$13 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$10:
	$4 = ($5 + [-24])
	$2 = *($4)
	if ( ((int_64)*($2) == (int_64)$0) ){ goto $label$9 }
	$5 = $4
	if ( ((int_32)$13 != (int_32)$4) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$13 == (int_32)$5) ){ goto $label$8 }
	if ( ((int_32)*($2 + [52]) == (int_32)$7) ){ goto $label$11 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$11
	if ( $2 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	$4 = CALL db_find_i64(*($7), *($8), (int_64)-3899189678858829824, $0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	$2 = CALL $34($7, $4)
	if ( ((int_32)*($2 + [52]) == (int_32)$7) ){ goto $label$6 }
	CALL eosio_assert([0], [8513])
	goto $label$6 
	
.LABEL $label$7
	$2 = [0]
	CALL eosio_assert([0], [9593])
	
.LABEL $label$6
	*($3 + [580]) = $2
	*($3 + [576]) = $7
	*($3 + [8]) = *($3 + [576])
	CALL $35($10, ($3 + [8]))
	$4 = *($3 + [512])
	$12 = ($12 + [1])
	if ( ($12 <= int_32((*($3 + [516]) - $4) >> [3])) ){ goto $label$5 }
	
.LABEL $label$4
	CALL $29(($3 + [32]))
	$4 = *($3 + [512])
	if ( ($4 == 0) ){ goto $label$12 }
	*($3 + [516]) = $4
	CALL $10($4)
	
.LABEL $label$12
	$global$0 = ($3 + [592])
}

void .FUNC $68 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [496])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = [0]
	$6 = CALL action_data_size()
	if ( ($6 == 0) ){ goto $label$1 }
	if ( ($6 <= [512]) ){ goto $label$3 }
	$5 = CALL $2($6)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$2
	CALL read_action_data($5, $6)
	
.LABEL $label$1
	*(($3 + [28])) = $5
	*(($3 + [32])) = ($5 + $6)
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [84])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $5
	*($3 + [40]) = $0
	*(($3 + [136])) = $0
	*(($3 + [128])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [264])) = $0
	*($3 + [168]) = $0
	*($3 + [256]) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [272])) = $0
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($3 + [300])) = [0]
	*(($3 + [304])) = $0
	*(($3 + [312])) = $0
	*(($3 + [320])) = (int_64)-1
	*(($3 + [328])) = (int_64)0
	*(($3 + [336])) = [0]
	*(($3 + [342])) = [0]
	*(($3 + [340])) = [0]
	*(($3 + [344])) = ($3 + [168])
	*(($3 + [348])) = ($3 + [40])
	*(($3 + [352])) = ($3 + [440])
	*(($3 + [360])) = (int_64)0
	*(($5 = ($3 + [448]))) = $0
	*($3 + [440]) = $0
	*(($3 + [464])) = (int_64)-1
	*(($6 = ($3 + [456]))) = $0
	*(($3 + [472])) = (int_64)0
	*(($3 + [480])) = [0]
	CALL require_auth((int_64)9022140632959968560)
	*($3 + [495]) = [0]
	$6 = CALL db_lowerbound_i64(*($5), *($6), (int_64)-3899443509350574272, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $43($5, $6)
	
.LABEL $label$4
	$0 = *($3 + [440])
	*($3 + [488]) = ($3 + [495])
	if ( $4 ){ goto $label$5 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$5
	CALL $67($5, $4, $0, ($3 + [488]))
	CALL $29(($3 + [8]))
	$global$0 = ($3 + [496])
}

void .FUNC $65 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [16])
	$global$0 = $4
	if ( ($3 == 0) ){ goto $label$4 }
	$5 = ($0 + [48])
	$6 = *($2)
	$8 = *(($0 + [76]))
	$7 = *(($0 + [72]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	
.LOOP $label$7:
	$3 = ($8 + [-24])
	$9 = *($3)
	if ( ((int_64)*($9) == (int_64)$6) ){ goto $label$6 }
	$8 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	if ( ((int_32)*(($9 + [92])) == (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [8513])
	if ( (CALL is_account(*($1)) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$3 = CALL db_find_i64(*($5), *(($0 + [56])), (int_64)-3899173487572132544, $6)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	if ( ((int_32)*(CALL $41($5, $3) + [92]) == (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$4
	if ( CALL is_account(*($1)) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [10270])
	if ( CALL is_account(*($1)) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10296])
	
.LABEL $label$1
	$6 = *($0)
	*($4 + [12]) = $2
	*($4 + [8]) = $1
	CALL $167($4, ($0 + [48]), $6, ($4 + [8]))
	$global$0 = ($4 + [16])
}

void .FUNC $64 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [512])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [488]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [488]), $2, [8])
	*($3 + [480]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$6
	CALL memcpy(($3 + [480]), $6, [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	$4 = [0]
	*(($3 + [72])) = [0]
	*(($3 + [76])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*(($3 + [128])) = $0
	*(($3 + [120])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*($3 + [160]) = $0
	*($3 + [248]) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [264])) = $0
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [334])) = [0]
	*(($3 + [332])) = [0]
	$2 = ($3 + [160])
	*(($3 + [336])) = $2
	*(($3 + [340])) = ($3 + [32])
	*(($3 + [344])) = ($3 + [432])
	*(($3 + [352])) = (int_64)0
	*(($3 + [440])) = $0
	*($3 + [432]) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [448])) = $0
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	$0 = *($3 + [488])
	$1 = *($3 + [480])
	*($3 + [496]) = $1
	*($3 + [504]) = $0
	if ( ((int_64)$1 != (int_64)9022140632959968560) ){ goto $label$8 }
	CALL require_auth((int_64)9022140632959968560)
	goto $label$7 
	
.LABEL $label$8
	CALL require_auth((int_64)9022140625770162064)
	$4 = [1]
	
.LABEL $label$7
	CALL $65($2, ($3 + [504]), ($3 + [496]), $4)
	CALL $29($3)
	$global$0 = ($3 + [512])
}

void .FUNC $67 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($1 + [32]) = *(*($3))
	*($1 + [36]) = ((int_64)CALL $17() / (int_64)1000000)
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-11])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [36])
	CALL $149(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [37])
	if ( ((int_64)*($0 + [16]) == (int_64)0) ){ goto $label$3 }
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$3
	*(($0 + [16])) = (int_64)1
	$global$0 = ($5 + [48])
}

void .FUNC $66 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [496])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = [0]
	$6 = CALL action_data_size()
	if ( ($6 == 0) ){ goto $label$1 }
	if ( ($6 <= [512]) ){ goto $label$3 }
	$5 = CALL $2($6)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$2
	CALL read_action_data($5, $6)
	
.LABEL $label$1
	*(($3 + [28])) = $5
	*(($3 + [32])) = ($5 + $6)
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [84])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $5
	*($3 + [40]) = $0
	*(($3 + [136])) = $0
	*(($3 + [128])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [264])) = $0
	*($3 + [168]) = $0
	*($3 + [256]) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [272])) = $0
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($3 + [300])) = [0]
	*(($3 + [304])) = $0
	*(($3 + [312])) = $0
	*(($3 + [320])) = (int_64)-1
	*(($3 + [328])) = (int_64)0
	*(($3 + [336])) = [0]
	*(($3 + [342])) = [0]
	*(($3 + [340])) = [0]
	*(($3 + [344])) = ($3 + [168])
	*(($3 + [348])) = ($3 + [40])
	*(($3 + [352])) = ($3 + [440])
	*(($3 + [360])) = (int_64)0
	*(($5 = ($3 + [448]))) = $0
	*($3 + [440]) = $0
	*(($3 + [464])) = (int_64)-1
	*(($6 = ($3 + [456]))) = $0
	*(($3 + [472])) = (int_64)0
	*(($3 + [480])) = [0]
	CALL require_auth((int_64)9022140632959968560)
	*($3 + [495]) = [1]
	$6 = CALL db_lowerbound_i64(*($5), *($6), (int_64)-3899443509350574272, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $43($5, $6)
	
.LABEL $label$4
	$0 = *($3 + [440])
	*($3 + [488]) = ($3 + [495])
	if ( $4 ){ goto $label$5 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$5
	CALL $67($5, $4, $0, ($3 + [488]))
	CALL $29(($3 + [8]))
	$global$0 = ($3 + [496])
}

void .FUNC $61 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$7 = ($global$0 - [48])
	$global$0 = $7
	*($7 + [14]) = $5
	*($7 + [16]) = $1
	*($7 + [12]) = $6
	CALL require_auth((int_64)9022140632959968560)
	$8 = ($0 + [80])
	$5 = *(($0 + [108]))
	$9 = *(($0 + [104]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$10 = *($6)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($10 + [48]) == (int_32)$8) ){ goto $label$1 }
	CALL eosio_assert([0], [8513])
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	$6 = CALL db_find_i64(*($8), *(($0 + [88])), (int_64)-3899409856248546304, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$10 = CALL $62($8, $6)
	if ( ((int_32)*($10 + [48]) == (int_32)$8) ){ goto $label$1 }
	CALL eosio_assert([0], [8513])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert([0], [10243])
	
.LABEL $label$1
	$1 = *($0 + [32])
	*($7 + [28]) = $2
	*($7 + [32]) = $3
	*($7 + [36]) = $4
	*($7 + [24]) = ($7 + [16])
	*($7 + [40]) = ($7 + [14])
	*($7 + [44]) = ($7 + [12])
	if ( $10 ){ goto $label$6 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$6
	CALL $63($8, $10, $1, ($7 + [24]))
	$global$0 = ($7 + [48])
}

void .FUNC $60 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [672])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [612]) = $2
	*($3 + [608]) = $2
	*($3 + [616]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$2 = *($3 + [612])
	
.LABEL $label$5
	CALL memcpy(($3 + [600]), $2, [8])
	*($3 + [612]) = ($2 + [8])
	*($3 + [592]) = [0]
	*($3 + [584]) = (int_64)0
	CALL $37(($3 + [608]), ($3 + [584]))
	*($3 + [576]) = [0]
	*($3 + [568]) = (int_64)0
	CALL $37(($3 + [608]), ($3 + [568]))
	*($3 + [560]) = [0]
	*($3 + [552]) = (int_64)0
	CALL $37(($3 + [608]), ($3 + [552]))
	$2 = *($3 + [612])
	$4 = (($3 + [608]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	$2 = *($3 + [612])
	
.LABEL $label$6
	CALL memcpy(($3 + [550]), $2, [2])
	$2 = (*($3 + [612]) + [2])
	*($3 + [612]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[1]) ){ goto $label$7 }
	CALL eosio_assert([0], [8615])
	$2 = *($3 + [612])
	
.LABEL $label$7
	CALL memcpy(($3 + [548]), $2, [2])
	*($3 + [612]) = (*($3 + [612]) + [2])
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [608]) + [8]))
	*($3 + [48]) = *($3 + [608])
	$2 = *($2)
	*((($3 + [624]) + [8])) = $2
	*(($4 = (($3 + [640]) + [8]))) = $2
	$5 = *($3 + [48])
	*($3 + [640]) = $5
	*($3 + [624]) = $5
	$2 = *($4)
	*((($3 + [656]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$1 = *($3 + [640])
	*($3 + [80]) = $1
	*($3 + [656]) = $1
	*(($3 + [104])) = $0
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [140])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*($3 + [96]) = $0
	*($3 + [224]) = $0
	*(($3 + [240])) = $0
	*(($3 + [232])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [360])) = $0
	*($3 + [312]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [368])) = $0
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [398])) = [0]
	*(($3 + [396])) = [0]
	*(($3 + [400])) = ($3 + [224])
	*(($3 + [404])) = ($3 + [96])
	*(($3 + [408])) = ($3 + [496])
	*(($3 + [416])) = (int_64)0
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = (int_64)0
	*(($3 + [536])) = [0]
	*($3 + [496]) = $0
	$2 = CALL $21($3, ($3 + [552]))
	$6 = CALL $21(($3 + [16]), ($3 + [568]))
	$4 = CALL $21(($3 + [32]), ($3 + [584]))
	CALL $61(($3 + [64]), *($3 + [600]), $4, $6, $2, *($3 + [550]), *($3 + [548]))
	if ( (*($2) & [1]) ){ goto $label$12 }
	if ( (*($6) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $10(*($2 + [8]))
	if ( ((*($6) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $10(*($6 + [8]))
	$2 = [1]
	if ( (*($4) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$2 = [1]
	if ( ((*($4) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $10(*($4 + [8]))
	
.LABEL $label$8
	CALL $29(($3 + [64]))
	if ( (*($3 + [552]) & $2) ){ goto $label$17 }
	$2 = [1]
	if ( (*($3 + [568]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $10(*(($3 + [560])))
	$2 = [1]
	if ( ((*($3 + [568]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $10(*(($3 + [576])))
	if ( ((*($3 + [584]) & $2) == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( (*($3 + [584]) & $2) ){ goto $label$13 }
	
.LABEL $label$14
	$global$0 = ($3 + [672])
	return 
	
.LABEL $label$13
	CALL $10(*(($3 + [592])))
	$global$0 = ($3 + [672])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	$6 = *($1)
	*($1) = *(*($3))
	$7 = ($1 + [8])
	CALL $22($7, *($3 + [4]))
	$8 = ($1 + [20])
	CALL $22($8, *($3 + [8]))
	$9 = ($1 + [32])
	CALL $22($9, *($3 + [12]))
	*($1 + [44]) = *(*($3 + [16]))
	*($1 + [46]) = *(*($3 + [20]))
	$10 = ($1 + [46])
	$11 = ($1 + [44])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [8907])
	
.LABEL $label$3
	*($5 + [16]) = [0]
	*($5) = ($5 + [16])
	*($5 + [28]) = $7
	*($5 + [24]) = $1
	*($5 + [32]) = $8
	*($5 + [36]) = $9
	*($5 + [40]) = $11
	*($5 + [44]) = $10
	CALL $165(($5 + [24]), $5)
	$12 = *($5 + [16])
	if ( ($12 <= [513]) ){ goto $label$5 }
	$3 = CALL $2($12)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($4 - (($12 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $12)
	*($5 + [16]) = $5
	*($5 + [28]) = $7
	*($5 + [32]) = $8
	*($5 + [36]) = $9
	*($5 + [40]) = $11
	*($5 + [44]) = $10
	*($5 + [24]) = $1
	CALL $166(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [52]), $2, $3, $12)
	if ( ((uint_32)$12 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $3($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [48])
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8564])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $8([64])) + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40]) = [0]
	*($5 + [48]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [20])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [44])
	*($3 + [60]) = ($5 + [46])
	CALL $161(($3 + [40]), ($3 + [32]))
	*($5 + [52]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $162(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( (*($1 + [32]) & [1]) ){ goto $label$15 }
	if ( (*($1 + [20]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $10(*(($1 + [40])))
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $10(*(($1 + [28])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $10(*(($1 + [16])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC apply (int_64 $0, int_64 apply, int_64 $2)
{
	CALL $0()
	CALL $27($0, $1)
	CALL $33($0, $1)
	CALL $45($0, $1)
	CALL $52($0, $1)
	CALL $54($0, $1)
	CALL $58($0, $1)
	CALL $60($0, $1)
	CALL $64($0, $1)
	CALL $66($0, $1)
	CALL $68($0, $1)
	CALL $69($0, $1)
	CALL $72($0, $1)
	CALL $74($0, $1)
	CALL $78($0, $1)
	CALL $83($0, $1)
	CALL $85($0, $1)
	CALL $87($0, $1)
	CALL $89($0, $1)
	CALL $90($0, $1)
	CALL $96($0, $1)
	CALL eosio_assert_code([0], (int_64)8000000000000000000)
	CALL eosio_assert_code([0], (int_64)8000000000000000001)
	CALL $36($0, $1)
	CALL $25([0])
	((int_64)$0 == (int_64)$1)
	((int_64)-6031299209807413248 == (int_64)$2)
	((int_64)4730614996831743488 == (int_64)$2)
	((int_64)-2039333636196532224 == (int_64)$2)
	((int_64)3626220865949007872 == (int_64)$2)
	((int_64)-7704843151221686272 == (int_64)$2)
	((int_64)3626105121087552512 == (int_64)$2)
	((int_64)-7704951541376615424 == (int_64)$2)
	((int_64)5031766352605145360 == (int_64)$2)
	((int_64)5313485230982561792 == (int_64)$2)
	((int_64)5313272100377591808 == (int_64)$2)
	((int_64)3631171573136403968 == (int_64)$2)
	((int_64)8526761721202386432 == (int_64)$2)
	((int_64)8526761720999129248 == (int_64)$2)
	((int_64)-7949120720016239216 == (int_64)$2)
	((int_64)-4997502819606691840 == (int_64)$2)
	((int_64)-4997725215373526016 == (int_64)$2)
	((int_64)3631284186446299136 == (int_64)$2)
	((int_64)-3604158290865537024 == (int_64)$2)
	((int_64)5378121121427728256 == (int_64)$2)
	((int_64)5378121121445309104 == (int_64)$2)
	((int_64)$0 != (int_64)6138663577826885632)
	((int_64)6138663577826885632 == (int_64)$1)
	((int_64)-6569208335818555392 == (int_64)$2)
	((int_64)9022140666672313616 == (int_64)$1)
	((int_64)-3617168760277827584 == (int_64)$2)
}

void .FUNC $89 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [528])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [520]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$5
	CALL memcpy(($3 + [520]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$6
	CALL memcpy(($3 + [512]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$7
	CALL memcpy(($3 + [504]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$8
	CALL memcpy(($3 + [496]), $5, [8])
	$6 = ($2 + [32])
	if ( ((int_32)($4 & [-2]) != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$9
	CALL memcpy(($3 + [494]), $6, [2])
	$6 = ($2 + [34])
	if ( ((uint_32)($4 + [-34]) > (uint_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$10
	CALL memcpy(($3 + [488]), $6, [4])
	$6 = ($2 + [38])
	if ( ((uint_32)($4 + [-38]) > (uint_32)[3]) ){ goto $label$11 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$11
	$5 = ($2 + $4)
	CALL memcpy(($3 + [484]), $6, [4])
	$6 = ($2 + [42])
	if ( ((int_32)$4 != (int_32)[42]) ){ goto $label$12 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$12
	CALL memcpy(($3 + [483]), $6, [1])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [76])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [43])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*(($3 + [128])) = $0
	*(($3 + [120])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*($3 + [160]) = $0
	*($3 + [248]) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [264])) = $0
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [334])) = [0]
	*(($3 + [332])) = [0]
	*(($3 + [336])) = ($3 + [160])
	*(($3 + [340])) = ($3 + [32])
	*(($3 + [344])) = ($3 + [432])
	*(($3 + [352])) = (int_64)0
	*(($3 + [440])) = $0
	*($3 + [432]) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [448])) = $0
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	$1 = *($3 + [520])
	CALL require_auth($0)
	CALL require_recipient($1)
	CALL $29($3)
	$global$0 = ($3 + [528])
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$6 = ($global$0 - [32])
	$global$0 = $6
	$7 = ($0 + [8])
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)*(($0 + [32]))) ){ goto $label$3 }
	$8 = *(($8 + [-24]))
	if ( ((int_32)*($8 + [40]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$4
	if ( $8 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$8 = CALL db_find_i64(*($7), *(($0 + [16])), (int_64)-3899443509350574272, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $43($7, $8)
	if ( ((int_32)*($8 + [40]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$2
	$9 = *($0)
	*($6 + [12]) = $2
	*($6 + [8]) = $1
	*($6 + [16]) = $3
	*($6 + [20]) = $4
	*($6 + [24]) = $5
	CALL $174($7, $8, $9, ($6 + [8]))
	$global$0 = ($6 + [32])
	return 
	
.LABEL $label$1
	$9 = *($0)
	*($6 + [12]) = $2
	*($6 + [8]) = $1
	*($6 + [16]) = $3
	*($6 + [20]) = $4
	*($6 + [24]) = $5
	CALL $175($6, $7, $9, ($6 + [8]))
	$global$0 = ($6 + [32])
}

void .FUNC $87 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [560])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [512])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [512])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8615])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$7 = ($2 + [8])
	$5 = ($4 & [-8])
	if ( ((int_32)$5 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$6
	CALL memcpy(($3 + [504]), $7, [8])
	$7 = ($2 + [16])
	if ( ((int_32)$5 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$7
	CALL memcpy(($3 + [496]), $7, [8])
	$7 = ($2 + [24])
	if ( ((int_32)$5 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$8
	CALL memcpy(($3 + [488]), $7, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$9
	CALL memcpy(($3 + [487]), $5, [1])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [76])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [33])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*(($3 + [128])) = $0
	*(($3 + [120])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*($3 + [160]) = $0
	*($3 + [248]) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [264])) = $0
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [334])) = [0]
	*(($3 + [332])) = [0]
	*(($3 + [336])) = ($3 + [160])
	*(($3 + [340])) = ($3 + [32])
	$2 = ($3 + [432])
	*(($3 + [344])) = $2
	*(($3 + [352])) = (int_64)0
	*(($3 + [440])) = $0
	*($3 + [432]) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [448])) = $0
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	$4 = *($3 + [487])
	$0 = *($3 + [488])
	$1 = *($3 + [496])
	$8 = *($3 + [512])
	*($3 + [544]) = *($3 + [504])
	*($3 + [552]) = $8
	*($3 + [536]) = $1
	*($3 + [528]) = $0
	*($3 + [527]) = $4
	CALL require_auth((int_64)9022140632959968560)
	CALL $88($2, ($3 + [552]), ($3 + [544]), ($3 + [536]), ($3 + [528]), ($3 + [527]))
	CALL $29($3)
	$global$0 = ($3 + [560])
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [48])
	$4 = *($1)
	$6 = *(($0 + [76]))
	$5 = *(($0 + [72]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$7:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7) == (int_64)$4) ){ goto $label$6 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*($7 + [48]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [8513])
	if ( $7 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	$7 = [0]
	$1 = CALL db_find_i64(*($3), *(($0 + [56])), (int_64)-3899409856248546304, $4)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $62($3, $1)
	if ( ((int_32)*($7 + [48]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$4
	if ( $7 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [10243])
	
.LABEL $label$2
	CALL eosio_assert([0], [9381])
	CALL eosio_assert([0], [9415])
	
.LABEL $label$1
	$1 = CALL db_next_i64(*($7 + [52]), ($2 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$8 }
	CALL $62($3, $1)
	
.LABEL $label$8
	CALL $173($3, $7)
	$global$0 = ($2 + [16])
}

void .FUNC $85 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [496])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [480])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [480])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8615])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [76])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*(($3 + [128])) = $0
	*(($3 + [120])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*($3 + [160]) = $0
	*($3 + [248]) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [264])) = $0
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [334])) = [0]
	*(($3 + [332])) = [0]
	*(($3 + [336])) = ($3 + [160])
	$2 = ($3 + [32])
	*(($3 + [340])) = $2
	*(($3 + [344])) = ($3 + [432])
	*(($3 + [352])) = (int_64)0
	*(($3 + [440])) = $0
	*($3 + [432]) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [448])) = $0
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*($3 + [488]) = *($3 + [480])
	CALL require_auth((int_64)9022140632959968560)
	CALL $86($2, ($3 + [488]))
	CALL $29($3)
	$global$0 = ($3 + [496])
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [8])
	$4 = *($1)
	$6 = *(($0 + [36]))
	$5 = *(($0 + [32]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	if ( ((int_32)*($8 + [116]) == (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$6
	if ( $8 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($3), *(($0 + [16])), (int_64)-3899294111387090944, $4)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = CALL $56($3, $7)
	if ( ((int_32)*($8 + [116]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [8513])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	CALL eosio_assert([0], [8587])
	CALL eosio_assert([0], [9381])
	CALL eosio_assert([0], [9415])
	
.LABEL $label$1
	$7 = CALL db_next_i64(*($8 + [120]), ($2 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	CALL $56($3, $7)
	
.LABEL $label$7
	CALL $171($3, $8)
	$3 = ($0 + [88])
	$4 = *($1)
	$6 = *(($0 + [116]))
	$5 = *(($0 + [112]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$12:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$11 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$10 }
	if ( ((int_32)*($8 + [20]) == (int_32)$3) ){ goto $label$13 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$13
	if ( $8 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	$7 = CALL db_find_i64(*($3), *(($0 + [96])), (int_64)-3899189674848550912, $4)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$9 }
	$8 = CALL $99($3, $7)
	if ( ((int_32)*($8 + [20]) == (int_32)$3) ){ goto $label$8 }
	CALL eosio_assert([0], [8513])
	goto $label$8 
	
.LABEL $label$9
	$8 = [0]
	CALL eosio_assert([0], [8587])
	CALL eosio_assert([0], [9381])
	CALL eosio_assert([0], [9415])
	
.LABEL $label$8
	$7 = CALL db_next_i64(*($8 + [24]), ($2 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$14 }
	CALL $99($3, $7)
	
.LABEL $label$14
	CALL $172($3, $8)
	$global$0 = ($2 + [16])
}

void .FUNC $83 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [496])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [480])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [480])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8615])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [76])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*(($3 + [128])) = $0
	*(($3 + [120])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*($3 + [160]) = $0
	*($3 + [248]) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [264])) = $0
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [334])) = [0]
	*(($3 + [332])) = [0]
	*(($3 + [336])) = ($3 + [160])
	$2 = ($3 + [32])
	*(($3 + [340])) = $2
	*(($3 + [344])) = ($3 + [432])
	*(($3 + [352])) = (int_64)0
	*(($3 + [440])) = $0
	*($3 + [432]) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [448])) = $0
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*($3 + [488]) = *($3 + [480])
	CALL require_auth((int_64)9022140632959968560)
	CALL $84($2, ($3 + [488]))
	CALL $29($3)
	$global$0 = ($3 + [496])
}

void .FUNC $82 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [92])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)*(*($3)))
	$6 = *($1)
	if ( ((int_32)*(*($3 + [4])) == (int_32)[-1]) ){ goto $label$3 }
	$7 = CALL $17()
	*((($8 = *($1 + [76])) + (*(($9 = *(($3 + [4])))) << [5])) + [24]) = ((int_64)$7 / (int_64)1000000)
	*(($8 + (*($9) << [5])) + [12]) = *(*($3 + [8]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [8907])
	
.LABEL $label$3
	$9 = ($1 + [16])
	$3 = [76]
	$10 = ($1 + [76])
	$11 = *($1 + [76])
	$8 = *(($1 + [80]))
	$12 = ($8 - $11)
	$7 = (CASTING uint_64)(uint_32 int_32($12 >> [5]))
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$5 }
	$3 = ((((int_32)uint_32(($12 + [-32]) >> [5]) * (int_32)[26]) + $3) + [26])
	
.LABEL $label$5
	$8 = ($3 + [1])
	if ( ($8 <= [513]) ){ goto $label$7 }
	$3 = CALL $2($8)
	goto $label$6 
	
.LABEL $label$7
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$6
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $8)
	*($5 + [24]) = ($5 + [8])
	*($5 + [40]) = $9
	*($5 + [72]) = $10
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	*($5 + [60]) = ($1 + [56])
	*($5 + [64]) = ($1 + [64])
	*($5 + [68]) = ($1 + [72])
	*($5 + [76]) = ($1 + [88])
	CALL $125(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [96]), $2, $3, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $3($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$8
	$global$0 = ($5 + [80])
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [3])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($2 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $8(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $16($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [3]))
	$3 = ($2 + ($3 << [3]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [3]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $10($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $80 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL require_auth((int_64)9022140632959968560)
	$4 = ($0 + [40])
	$6 = *(($0 + [68]))
	$5 = *(($0 + [64]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$7:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$6 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*($8 + [116]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$8
	if ( $8 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = CALL db_find_i64(*($4), *(($0 + [48])), (int_64)-3899294111387090944, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $56($4, $7)
	if ( ((int_32)*($8 + [116]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$4
	$7 = *($2)
	if ( ((int_32)*($2 + [4]) != (int_32)$7) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	CALL eosio_assert([0], [8587])
	$7 = *($2)
	if ( ((int_32)*($2 + [4]) == (int_32)$7) ){ goto $label$1 }
	
.LABEL $label$2
	$9 = ($0 + [208])
	$10 = ($0 + [236])
	$11 = ($0 + [232])
	$12 = ($0 + [216])
	$13 = ($2 + [4])
	$14 = ($8 + [40])
	$15 = ($0 + [336])
	$4 = [0]
	
.LOOP $label$9:
	$1 = *(($7 + ($4 << [3])))
	$6 = *($10)
	$0 = *($11)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$12 }
	
.LOOP $label$14:
	$7 = ($6 + [-24])
	$5 = *($7)
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$13 }
	$6 = $7
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$12 }
	if ( ((int_32)*(($5 + [92])) == (int_32)$9) ){ goto $label$15 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$15
	if ( $5 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	$7 = CALL db_find_i64(*($9), *($12), (int_64)-3899173487572132544, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	$5 = CALL $41($9, $7)
	if ( ((int_32)*($5 + [92]) == (int_32)$9) ){ goto $label$10 }
	CALL eosio_assert([0], [8513])
	goto $label$10 
	
.LABEL $label$11
	$5 = [0]
	CALL eosio_assert([0], [8730])
	
.LABEL $label$10
	$7 = *($5 + [76])
	$6 = *(($5 + [80]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$18 }
	$1 = *($8)
	$0 = int_32(($6 - $7) >> [5])
	$6 = [0]
	
.LOOP $label$19:
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$17 }
	$7 = ($7 + [32])
	$6 = ($6 + [1])
	if ( ($6 <= $0) ){ goto $label$19 }
	
.LABEL $label$18
	*($3 + [4]) = [-1]
	goto $label$16 
	
.LABEL $label$17
	*($3 + [4]) = $6
	$6 = *($15)
	$0 = *($14)
	*($3 + [24]) = ((int_64)((int_64))(((int_64)(CASTING uint_64)(uint_32 $0) & (int_64)65535) - *(($7 + [12]))) * (int_64)*(($7 + [8]))) * (int_64)1000)
	*($3 + [22]) = $0
	$1 = *($6)
	*((($3 + [8]) + [8])) = ($3 + [22])
	$7 = ($6 + [48])
	*($3 + [12]) = ($3 + [4])
	*($3 + [8]) = ($3 + [24])
	if ( $5 ){ goto $label$20 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$20
	CALL $82($7, $5, $1, ($3 + [8]))
	
.LABEL $label$16
	$7 = *($2)
	$4 = ($4 + [1])
	if ( ($4 <= int_32((*($13) - $7) >> [3])) ){ goto $label$9 }
	
.LABEL $label$1
	$global$0 = ($3 + [32])
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [8966])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($1, $3, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

int_32 .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [8966])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = *(*($0 + [4]))
	*($1 + [40]) = $3
	if ( ((int_32)*($1 + [72]) != (int_32)[1]) ){ goto $label$5 }
	*($1 + [46]) = $3
	*($1 + [42]) = $3
	*($1 + [48]) = $3
	*(($1 + [72])) = [2]
	goto $label$4 
	
.LABEL $label$6
	$4 = *(*($0 + [12]))
	if ( ((int_32)*(*($0 + [8])) != (int_32)[1]) ){ goto $label$2 }
	$3 = ($1 + [24])
	goto $label$1 
	
.LABEL $label$5
	if ( ((uint_32)($3 & [65535]) <= (uint_32)*($1 + [48])) ){ goto $label$4 }
	*(($1 + [48])) = $3
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)($3 & [65535]) >= (uint_32)*($1 + [46])) ){ goto $label$3 }
	*(($1 + [46])) = $3
	
.LABEL $label$3
	if ( ((int_32)*(*($0 + [8])) != (int_32)[1]) ){ goto $label$8 }
	$5 = *($1 + [32])
	$4 = (CASTING uint_64)(uint_32 $2)
	*($1 + [32]) = (int_64))(( $4 ? $5 : (uint_64)($5 <= $4) ) - $4)
	$3 = *(*($0 + [12]))
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$7 }
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)(CASTING uint_64)(uint_32 ($3 - $2)))
	goto $label$7 
	
.LABEL $label$8
	$5 = *($1 + [24])
	$4 = (CASTING uint_64)(uint_32 $2)
	*($1 + [24]) = (int_64))(( $4 ? $5 : (uint_64)($5 <= $4) ) - $4)
	$3 = *(*($0 + [12]))
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$7 }
	*($1 + [32]) = ((int_64)*($1 + [32]) + (int_64)(CASTING uint_64)(uint_32 ($3 - $2)))
	
.LABEL $label$7
	*($1 + [16]) = *(*($0 + [16]))
	$3 = ($1 + [64])
	$4 = ((int_64)$4 * (int_64)1000)
	goto $label$1 
	
.LABEL $label$2
	$3 = ($1 + [32])
	
.LABEL $label$1
	*($3) = ((int_64)*($3) + (int_64)$4)
	$0 = *($0 + [8])
	$0 = *(*($0 + [24]) + [4])
	$3 = *(($0 + [12]))
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($1 + [40]))
	$6 = [1001]
	goto $label$10 
	
.LABEL $label$11
	$7 = ((int_32)($3 - $0) / (int_32)[20])
	$2 = [0]
	$6 = [1001]
	$3 = [0]
	
.LOOP $label$12:
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$14 }
	$8 = *($0)
	$3 = ( $8 ? $3 : ((uint_32)$8 > (uint_32)($3 & [65535])) )
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$13 }
	$8 = *($0)
	$6 = ( $8 ? $6 : ($8 <= ($6 & [65535])) )
	
.LABEL $label$13
	$0 = ($0 + [20])
	$2 = ($2 + [1])
	if ( ($2 <= $7) ){ goto $label$12 }
	$0 = *(($1 + [40]))
	if ( ($3 & [65535]) ){ goto $label$9 }
	
.LABEL $label$10
	$3 = $0
	
.LABEL $label$9
	*(($1 + [52])) = $3
	*(($1 + [54])) = ( $0 ? $6 : ((int_32)($6 & [65535]) == (int_32)[1001]) )
}

void .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$1 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [8966])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$7 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$8 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$9 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [36])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$10 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$10
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$11 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [44])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$12 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$12
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$13 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$13
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [52])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$14 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$14
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [56])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$15
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [60])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$16 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$16
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [64])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$17 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$17
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	CALL $148(*($1), *($0 + [68]))
	CALL $148(*($1), *($0 + [72]))
	CALL $148(*($1), *($0 + [76]))
}

void .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$1 = (*($2) + [73])
	*(($2 = *($1))) = $1
	$4 = *($3)
	$3 = *($0 + [68])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$2
	$4 = *($3)
	$3 = *($0 + [72])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$4
	$3 = *($0)
	$0 = *($0 + [76])
	$5 = (CASTING uint_64)(uint_32 ( *($0 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	*($2) = $1
	$0 = *($0)
	$0 = ( *(($0 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$6 }
	*($2) = ($0 + $1)
	
.LABEL $label$6
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [8966])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, $3, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [5])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$3 }
	$6 = [134217727]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [5]) > (uint_32)[67108862]) ){ goto $label$5 }
	$6 = int_32($7 >> [4])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $8(($6 << [5]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $16($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [5])))) = *($1)
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 - $1)
	$6 = ($5 + ($6 << [5]))
	$4 = ($4 + [32])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $10($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[20])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[214748365]) ){ goto $label$2 }
	$6 = [214748364]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[20])
	if ( ((uint_32)$7 > (uint_32)[107374181]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $8(((int_32)$6 * (int_32)[20]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	*(($4 = ($5 + ((int_32)$4 * (int_32)[20])))) = *($1)
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 + ((int_32)((int_32)$1 / (int_32)[-20]) * (int_32)[20]))
	$6 = ($5 + ((int_32)$6 * (int_32)[20]))
	$4 = ($4 + [20])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $10($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $142 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4)
	*($3 + [8]) = *(*($4 + [4]) + [8])
	if ( (CALL $19(*($4 + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$1 }
	$6 = *(*($4 + [12]) + [60])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)-3899189678858829824, $3, *(*($4 + [16])))
	*(*(($4 + [12])) + [60]) = $6
	
.LABEL $label$2
	CALL db_idx64_update($6, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$1
	$4 = *($0)
	$6 = *($4)
	*($3 + [8]) = *(*($4 + [4]) + [16])
	if ( (CALL $19((*($4 + [8]) + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($4 + [12]) + [64]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-3899189678858829823, $3, *(*($4 + [16])))
	*((*(($4 + [12])) + [64])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $72 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [576])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [516]) = $4
	*($3 + [512]) = $4
	*($3 + [520]) = ($4 + $5)
	*($3 + [504]) = [0]
	*($3 + [496]) = (int_64)0
	CALL $70(($3 + [512]), ($3 + [496]))
	*(($4 = ($3 + [8]))) = *($3 + [520])
	*($3) = *($3 + [512])
	$4 = *($4)
	*((($3 + [528]) + [8])) = $4
	*(($5 = (($3 + [544]) + [8]))) = $4
	$6 = *($3)
	*($3 + [544]) = $6
	*($3 + [528]) = $6
	$4 = *($5)
	*((($3 + [560]) + [8])) = $4
	*(($3 + [40])) = $4
	*($3 + [16]) = $0
	*($3 + [24]) = $1
	$1 = *($3 + [544])
	*($3 + [32]) = $1
	*($3 + [560]) = $1
	*(($7 = ($3 + [56]))) = $0
	*(($8 = ($3 + [64]))) = $0
	*(($3 + [72])) = (int_64)-1
	*(($9 = ($3 + [80]))) = (int_64)0
	*(($3 + [88])) = [0]
	*(($3 + [92])) = [0]
	*(($3 + [96])) = $0
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [136])) = $0
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*($3 + [48]) = $0
	*($3 + [176]) = $0
	*(($3 + [192])) = $0
	*(($3 + [184])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*(($3 + [256])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [308])) = [0]
	*(($3 + [312])) = $0
	*($3 + [264]) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [320])) = $0
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [350])) = [0]
	*(($3 + [348])) = [0]
	*(($3 + [352])) = ($3 + [176])
	$10 = ($3 + [48])
	*(($3 + [356])) = $10
	*(($3 + [360])) = ($3 + [448])
	*(($3 + [368])) = (int_64)0
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = (int_64)0
	*(($3 + [488])) = [0]
	*($3 + [448]) = $0
	CALL require_auth((int_64)9022140632959968560)
	$4 = *($3 + [496])
	if ( ((int_32)*($3 + [500]) == (int_32)$4) ){ goto $label$4 }
	$11 = ($3 + [84])
	$12 = [0]
	
.LOOP $label$5:
	$0 = *(($4 + ($12 << [3])))
	$5 = *($11)
	$13 = *($9)
	if ( ((int_32)$13 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$12:
	$4 = ($5 + [-24])
	$2 = *($4)
	if ( ((int_64)*($2) == (int_64)$0) ){ goto $label$11 }
	$5 = $4
	if ( ((int_32)$13 != (int_32)$4) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$13 == (int_32)$5) ){ goto $label$10 }
	if ( ((int_32)*($2 + [116]) == (int_32)$7) ){ goto $label$13 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$13
	if ( $2 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$4 = CALL db_find_i64(*($7), *($8), (int_64)-3899294111387090944, $0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$8 }
	$2 = CALL $56($7, $4)
	if ( ((int_32)*($2 + [116]) == (int_32)$7) ){ goto $label$9 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$9
	if ( *($2 + [72]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	$2 = [0]
	CALL eosio_assert([0], [8587])
	if ( *([0] + [72]) ){ goto $label$6 }
	
.LABEL $label$7
	$0 = *($10)
	if ( $2 ){ goto $label$14 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$14
	CALL $73($7, $2, $0, ($3 + [560]))
	
.LABEL $label$6
	$4 = *($3 + [496])
	$12 = ($12 + [1])
	if ( ($12 <= int_32((*($3 + [500]) - $4) >> [3])) ){ goto $label$5 }
	
.LABEL $label$4
	CALL $29(($3 + [16]))
	$4 = *($3 + [496])
	if ( ($4 == 0) ){ goto $label$15 }
	*($3 + [500]) = $4
	CALL $10($4)
	
.LABEL $label$15
	$global$0 = ($3 + [576])
}

void .FUNC $73 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [116]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($1 + [72]) = [1]
	*($1 + [50]) = *($1 + [44])
	*($5 + [16]) = *($1 + [8])
	$6 = *($1)
	*($5 + [24]) = [0]
	*($5) = ($5 + [24])
	$7 = ($1 + [8])
	*($5 + [36]) = $7
	*($5 + [32]) = $1
	$8 = ($1 + [16])
	*($5 + [40]) = $8
	$9 = ($1 + [24])
	*($5 + [44]) = $9
	$10 = ($1 + [32])
	*($5 + [48]) = $10
	$11 = ($1 + [40])
	*($5 + [52]) = $11
	$12 = ($1 + [42])
	*($5 + [56]) = $12
	$13 = ($1 + [44])
	*($5 + [60]) = $13
	$14 = ($1 + [46])
	*($5 + [64]) = $14
	$15 = ($1 + [48])
	*($5 + [68]) = $15
	$16 = ($1 + [50])
	*($5 + [72]) = $16
	$17 = ($1 + [52])
	*($5 + [76]) = $17
	$18 = ($1 + [54])
	*($5 + [80]) = $18
	$19 = ($1 + [56])
	*($5 + [84]) = $19
	$20 = ($1 + [64])
	*($5 + [88]) = $20
	$21 = ($1 + [72])
	*($5 + [92]) = $21
	$22 = ($1 + [76])
	*($5 + [96]) = $22
	$23 = ($1 + [80])
	*($5 + [100]) = $23
	$24 = ($1 + [92])
	*($5 + [104]) = $24
	$25 = ($1 + [104])
	*($5 + [108]) = $25
	CALL $146(($5 + [32]), $5)
	$26 = *($5 + [24])
	if ( ($26 <= [513]) ){ goto $label$4 }
	$4 = CALL $2($26)
	goto $label$3 
	
.LABEL $label$4
	$4 = ($4 - (($26 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$3
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $26)
	*($5 + [24]) = $5
	*($5 + [36]) = $7
	*($5 + [40]) = $8
	*($5 + [44]) = $9
	*($5 + [48]) = $10
	*($5 + [52]) = $11
	*($5 + [56]) = $12
	*($5 + [60]) = $13
	*($5 + [64]) = $14
	*($5 + [68]) = $15
	*($5 + [72]) = $16
	*($5 + [76]) = $17
	*($5 + [80]) = $18
	*($5 + [84]) = $19
	*($5 + [88]) = $20
	*($5 + [92]) = $21
	*($5 + [96]) = $22
	*($5 + [100]) = $23
	*($5 + [104]) = $24
	*($5 + [32]) = $1
	*($5 + [108]) = $25
	CALL $147(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [120]), $2, $4, $26)
	if ( ($26 <= [513]) ){ goto $label$5 }
	CALL $3($4)
	
.LABEL $label$5
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($5 + [32]) = *($7)
	if ( (CALL $19(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$7 }
	$4 = *($1 + [124])
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$8 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3899294111387090944, ($5 + [24]), $6)
	*(($1 + [124])) = $4
	
.LABEL $label$8
	CALL db_idx64_update($4, $2, ($5 + [32]))
	
.LABEL $label$7
	$global$0 = ($5 + [112])
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [8611])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [3])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $71($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [3]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8615])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [8])
	$2 = (*($6) + [8])
	*($6) = $2
	$7 = ($7 + [8])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [3])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($2 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $8(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $16($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [3]))
	$3 = ($2 + ($3 << [3]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [3]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $10($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $76 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = ($0 + [8])
	$5 = *($1)
	$7 = *(($0 + [36]))
	$6 = *(($0 + [32]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$7:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$6 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	if ( ((int_32)*($9 + [116]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$8
	if ( $9 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = CALL db_find_i64(*($4), *(($0 + [16])), (int_64)-3899294111387090944, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $56($4, $8)
	if ( ((int_32)*($9 + [116]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$4
	if ( (*($9 + [72]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	CALL eosio_assert([0], [8587])
	if ( *([0] + [72]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	$5 = *($0)
	*($3 + [8]) = $2
	if ( $9 ){ goto $label$9 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$9
	CALL $169($4, $9, $5, ($3 + [8]))
	$4 = ($0 + [88])
	$5 = *($1)
	$7 = *(($0 + [116]))
	$6 = *(($0 + [112]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$12 }
	
.LOOP $label$14:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$13 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$12 }
	if ( ((int_32)*($9 + [20]) == (int_32)$4) ){ goto $label$15 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$15
	$5 = *($0)
	if ( $9 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	$8 = CALL db_find_i64(*($4), *(($0 + [96])), (int_64)-3899189674848550912, $5)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL $99($4, $8)
	if ( ((int_32)*($9 + [20]) == (int_32)$4) ){ goto $label$17 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$17
	$5 = *($0)
	goto $label$10 
	
.LABEL $label$16
	$5 = *($0)
	$9 = [0]
	
.LABEL $label$11
	CALL eosio_assert([0], [8775])
	
.LABEL $label$10
	CALL $170($4, $9, $5, $3)
	$global$0 = ($3 + [16])
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [4])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$4 }
	$3 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$3 = int_32($2 >> [3])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $8(($3 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = (*($0) + [16])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $16($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($3 << [4]))
	$5 = ($2 + ($5 << [4]))
	$3 = $5
	
.LOOP $label$9:
	*($3) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = ($3 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$6 = ($2 + ($6 << [4]))
	$1 = *($0)
	$7 = ($0 + [4])
	$3 = (*($7) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $10($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $74 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [576])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [516]) = $4
	*($3 + [512]) = $4
	*($3 + [520]) = ($4 + $5)
	*($3 + [504]) = [0]
	*($3 + [496]) = (int_64)0
	CALL $75(($3 + [512]), ($3 + [496]))
	$4 = [8]
	*(($5 = ($3 + [8]))) = *($3 + [520])
	*($3) = *($3 + [512])
	$5 = *($5)
	*((($3 + [528]) + [8])) = $5
	*(($2 = (($3 + [544]) + [8]))) = $5
	$6 = *($3)
	*($3 + [544]) = $6
	*($3 + [528]) = $6
	$5 = *($2)
	*((($3 + [560]) + [8])) = $5
	*(($3 + [40])) = $5
	*($3 + [16]) = $0
	*($3 + [24]) = $1
	$1 = *($3 + [544])
	*($3 + [32]) = $1
	*($3 + [560]) = $1
	*(($3 + [56])) = $0
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = (int_64)0
	*(($3 + [88])) = [0]
	*(($3 + [92])) = [0]
	*(($3 + [96])) = $0
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [136])) = $0
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*($3 + [48]) = $0
	*($3 + [176]) = $0
	*(($3 + [192])) = $0
	*(($3 + [184])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*(($3 + [256])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [308])) = [0]
	*(($3 + [312])) = $0
	*($3 + [264]) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [320])) = $0
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [350])) = [0]
	*(($3 + [348])) = [0]
	*(($3 + [352])) = ($3 + [176])
	$7 = ($3 + [48])
	*(($3 + [356])) = $7
	*(($3 + [360])) = ($3 + [448])
	*(($3 + [368])) = (int_64)0
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = (int_64)0
	*(($3 + [488])) = [0]
	*($3 + [448]) = $0
	CALL require_auth((int_64)9022140632959968560)
	$5 = *($3 + [496])
	if ( ((int_32)*($3 + [500]) == (int_32)$5) ){ goto $label$4 }
	$2 = [0]
	
.LOOP $label$5:
	$5 = ($5 + $4)
	CALL $76($7, ($5 + [-8]), $5)
	$4 = ($4 + [16])
	$5 = *($3 + [496])
	$2 = ($2 + [1])
	if ( ($2 <= int_32((*($3 + [500]) - $5) >> [4])) ){ goto $label$5 }
	
.LABEL $label$4
	CALL $29(($3 + [16]))
	$4 = *($3 + [496])
	if ( ($4 == 0) ){ goto $label$6 }
	*($3 + [500]) = $4
	CALL $10($4)
	
.LABEL $label$6
	$global$0 = ($3 + [576])
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [8611])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$4 = *($1 + [4])
	$6 = int_32(($4 - $7) >> [4])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $77($1, ($2 - $6))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$4 = ($7 + ($2 << [4]))
	*(($1 + [4])) = $4
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = ($0 + [4])
	$6 = *($2)
	$5 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($5) - $6) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8615])
	$6 = *($2)
	
.LABEL $label$8
	CALL memcpy($7, $6, [8])
	$6 = (*($2) + [8])
	*($2) = $6
	if ( ((uint_32)(*($5) - $6) > (uint_32)[1]) ){ goto $label$9 }
	CALL eosio_assert([0], [8615])
	$6 = *($2)
	
.LABEL $label$9
	CALL memcpy(($7 + [8]), $6, [2])
	$6 = (*($2) + [2])
	*($2) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $78 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [592])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [532]) = $2
	*($3 + [528]) = $2
	*($3 + [536]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$2 = *($3 + [532])
	
.LABEL $label$5
	CALL memcpy(($3 + [520]), $2, [8])
	*($3 + [532]) = ($2 + [8])
	*($3 + [512]) = [0]
	*($3 + [504]) = (int_64)0
	CALL $79(($3 + [528]), ($3 + [504]))
	*(($2 = (($3 + [8]) + [8]))) = *((($3 + [528]) + [8]))
	*($3 + [8]) = *($3 + [528])
	$2 = *($2)
	*((($3 + [544]) + [8])) = $2
	*(($4 = (($3 + [560]) + [8]))) = $2
	$5 = *($3 + [8])
	*($3 + [560]) = $5
	*($3 + [544]) = $5
	$2 = *($4)
	*((($3 + [576]) + [8])) = $2
	*(($3 + [48])) = $2
	*($3 + [24]) = $0
	*($3 + [32]) = $1
	$1 = *($3 + [560])
	*($3 + [40]) = $1
	*($3 + [576]) = $1
	*(($3 + [64])) = $0
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = [0]
	*(($3 + [100])) = [0]
	*(($3 + [104])) = $0
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*($3 + [56]) = $0
	*($3 + [184]) = $0
	*(($3 + [200])) = $0
	*(($3 + [192])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [320])) = $0
	*($3 + [272]) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [328])) = $0
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [358])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [360])) = ($3 + [184])
	*(($3 + [364])) = ($3 + [56])
	*(($3 + [368])) = ($3 + [456])
	*(($3 + [376])) = (int_64)0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = (int_64)0
	*(($3 + [496])) = [0]
	*($3 + [456]) = $0
	CALL $80(($3 + [24]), *($3 + [520]), ($3 + [504]))
	CALL $29(($3 + [24]))
	$2 = *($3 + [504])
	if ( ($2 == 0) ){ goto $label$6 }
	*($3 + [508]) = $2
	CALL $10($2)
	
.LABEL $label$6
	$global$0 = ($3 + [592])
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [8611])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [3])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $81($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [3]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8615])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [8])
	$2 = (*($6) + [8])
	*($6) = $2
	$7 = ($7 + [8])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $98 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [48])
	$global$0 = $3
	$6 = *($4 + [76])
	$4 = *($2 + [4])
	$5 = *(($4 + [80]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	$7 = *($1 + [4])
	$8 = *($7)
	$9 = int_32(($5 - $6) >> [5])
	$5 = [0]
	$1 = [8]
	
.LOOP $label$3:
	$10 = ($6 + $1)
	if ( ((int_64)*(($10 + [-8])) == (int_64)$8) ){ goto $label$1 }
	$1 = ($1 + [32])
	$5 = ($5 + [1])
	if ( ($5 <= $9) ){ goto $label$3 }
	
.LABEL $label$2
	*($3 + [28]) = [-1]
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$1
	*($3 + [28]) = $5
	if ( ((int_32)*(($10 + [4])) == (int_32)*($7 + [40])) ){ goto $label$4 }
	CALL eosio_assert([0], [10348])
	$6 = *(($4 + [76]))
	
.LABEL $label$4
	$8 = *($4 + [32])
	*($3 + [16]) = $8
	$11 = ((int_64)(CASTING int_64)(int_32 CALL $26(*(($6 + $1)))) * (int_64)50000)
	if ( ((uint_64)$8 >= (uint_64)$11) ){ goto $label$5 }
	CALL eosio_assert([0], [10388])
	
.LABEL $label$5
	*($3 + [16]) = (int_64))($8 - $11)
	*($3 + [8]) = ((int_64)*($4 + [16]) + (int_64)((int_64)(CASTING int_64)(int_32 CALL $26(*((*(($4 + [76])) + $1)))) * (int_64)50000))
	$5 = *($0 + [88])
	$6 = ($5 + [48])
	$1 = *($2 + [4])
	$8 = *($5)
	*($3 + [36]) = ($3 + [16])
	*($3 + [32]) = ($3 + [8])
	*($3 + [40]) = ($3 + [28])
	if ( $1 ){ goto $label$6 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$6
	CALL $179($6, $1, $8, ($3 + [32]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8564])
	
.LABEL $label$5
	$4 = CALL $2($6)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $6)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $6)
	*(($5 = CALL $8([32])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [20]) = $0
	$8 = ($5 + [8])
	$2 = $4
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8615])
	$2 = *($3 + [36])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $116(($3 + [32]), $8)
	*($5 + [24]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($6 + [8]) = $9
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $5
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $117(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $3($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	$4 = *($1 + [8])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [12])) = $4
	CALL $10($4)
	
.LABEL $label$12
	CALL $10($1)
	
.LABEL $label$11
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $94 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [9415])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *(($2 + [60]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-3899101764628893183, ($1 + [8]), *($2))
	*((*(($0 + [4])) + [60])) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = *($1 + [8])
	$3 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$7:
	$2 = ($3 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$6 }
	$3 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	if ( ((int_32)*($4 + [48]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8513])
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	$2 = CALL db_find_i64(*($7), *($7 + [8]), (int_64)-3899101764628893184, $6)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $136($7, $2)
	if ( ((int_32)*($4 + [48]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$4
	*(($4 + [60])) = $5
	
.LABEL $label$3
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9490])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9540])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $10($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $10($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $178(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]))
	$global$0 = ($2 + [16])
}

void .FUNC $96 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [592])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [532]) = $2
	*($3 + [528]) = $2
	*($3 + [536]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$2 = *($3 + [532])
	
.LABEL $label$5
	CALL memcpy(($3 + [520]), $2, [8])
	*($3 + [532]) = ($2 + [8])
	*($3 + [512]) = [0]
	*($3 + [504]) = (int_64)0
	CALL $79(($3 + [528]), ($3 + [504]))
	*(($2 = (($3 + [8]) + [8]))) = *((($3 + [528]) + [8]))
	*($3 + [8]) = *($3 + [528])
	$2 = *($2)
	*((($3 + [544]) + [8])) = $2
	*(($4 = (($3 + [560]) + [8]))) = $2
	$5 = *($3 + [8])
	*($3 + [560]) = $5
	*($3 + [544]) = $5
	$2 = *($4)
	*((($3 + [576]) + [8])) = $2
	*(($3 + [48])) = $2
	*($3 + [24]) = $0
	*($3 + [32]) = $1
	$1 = *($3 + [560])
	*($3 + [40]) = $1
	*($3 + [576]) = $1
	*(($3 + [64])) = $0
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = [0]
	*(($3 + [100])) = [0]
	*(($3 + [104])) = $0
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*($3 + [56]) = $0
	*($3 + [184]) = $0
	*(($3 + [200])) = $0
	*(($3 + [192])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [320])) = $0
	*($3 + [272]) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [328])) = $0
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [358])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [360])) = ($3 + [184])
	*(($3 + [364])) = ($3 + [56])
	*(($3 + [368])) = ($3 + [456])
	*(($3 + [376])) = (int_64)0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = (int_64)0
	*(($3 + [496])) = [0]
	*($3 + [456]) = $0
	CALL $97(($3 + [24]), *($3 + [520]), ($3 + [504]))
	CALL $29(($3 + [24]))
	$2 = *($3 + [504])
	if ( ($2 == 0) ){ goto $label$6 }
	*($3 + [508]) = $2
	CALL $10($2)
	
.LABEL $label$6
	$global$0 = ($3 + [592])
}

void .FUNC $97 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL require_auth((int_64)9022140632959968560)
	$4 = ($0 + [40])
	$6 = *(($0 + [68]))
	$5 = *(($0 + [64]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$7:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$6 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*($8 + [116]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$8
	if ( $8 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = CALL db_find_i64(*($4), *(($0 + [48])), (int_64)-3899294111387090944, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$3 }
	$8 = CALL $56($4, $7)
	if ( ((int_32)*($8 + [116]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$4
	$7 = *($2)
	if ( ((int_32)*($2 + [4]) != (int_32)$7) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	CALL eosio_assert([0], [8587])
	$7 = *($2)
	if ( ((int_32)*($2 + [4]) == (int_32)$7) ){ goto $label$1 }
	
.LABEL $label$2
	$9 = ($0 + [248])
	$10 = ($0 + [208])
	$11 = ($0 + [236])
	$12 = ($0 + [232])
	$13 = ($0 + [216])
	$14 = ($2 + [4])
	$15 = [0]
	
.LOOP $label$9:
	$1 = *(($7 + ($15 << [3])))
	$6 = *($11)
	$0 = *($12)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$12 }
	
.LOOP $label$14:
	$7 = ($6 + [-24])
	$5 = *($7)
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$13 }
	$6 = $7
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$12 }
	if ( ((int_32)*(($5 + [92])) == (int_32)$10) ){ goto $label$15 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$15
	if ( $5 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	$7 = CALL db_find_i64(*($10), *($13), (int_64)-3899173487572132544, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	$5 = CALL $41($10, $7)
	if ( ((int_32)*($5 + [92]) == (int_32)$10) ){ goto $label$10 }
	CALL eosio_assert([0], [8513])
	goto $label$10 
	
.LABEL $label$11
	$5 = [0]
	CALL eosio_assert([0], [8730])
	
.LABEL $label$10
	*($3 + [28]) = $8
	*($3 + [24]) = $4
	*($3 + [16]) = $10
	*($3 + [20]) = $5
	*($3 + [8]) = *($3 + [24])
	*($3) = *($3 + [16])
	CALL $98($9, ($3 + [8]), $3)
	$7 = *($2)
	$15 = ($15 + [1])
	if ( ($15 <= int_32((*($14) - $7) >> [3])) ){ goto $label$9 }
	
.LABEL $label$1
	$global$0 = ($3 + [32])
}

void .FUNC $90 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [496])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [488])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [488])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8615])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-2]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$6
	CALL memcpy(($3 + [486]), $5, [2])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [76])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [10])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*(($3 + [128])) = $0
	*(($3 + [120])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*($3 + [160]) = $0
	*($3 + [248]) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [264])) = $0
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [334])) = [0]
	*(($3 + [332])) = [0]
	*(($3 + [336])) = ($3 + [160])
	*(($3 + [340])) = ($3 + [32])
	*(($3 + [344])) = ($3 + [432])
	*(($3 + [352])) = (int_64)0
	*(($3 + [440])) = $0
	*($3 + [432]) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [448])) = $0
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	CALL $91($3, *($3 + [488]), *($3 + [486]))
	CALL $29($3)
	$global$0 = ($3 + [496])
}

void .FUNC $91 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [104]) = $1
	CALL require_auth((int_64)9022140632959968560)
	*($3 + [96]) = ($0 + [296])
	CALL $92(($3 + [8]), ($3 + [96]), ($3 + [104]))
	$4 = *($3 + [12])
	if ( ($4 == 0) ){ goto $label$1 }
	if ( ((int_64)*($3 + [104]) != (int_64)*($4 + [24])) ){ goto $label$1 }
	if ( ($2 == 0) ){ goto $label$1 }
	$5 = *($3 + [8])
	$6 = ($3 + [84])
	$7 = ($3 + [52])
	$8 = ($3 + [76])
	
.LOOP $label$2:
	$1 = *($0)
	*(($9 = (($3 + [56]) + [16]))) = [0]
	$10 = *($4 + [8])
	$11 = *($4)
	*((($3 + [56]) + [8])) = (int_64)-3604158290865537024
	*((($3 + [8]) + [8])) = $11
	*((($3 + [8]) + [16])) = *($4 + [24])
	*((($3 + [8]) + [24])) = $10
	*((($3 + [8]) + [32])) = *($4 + [32])
	*((($3 + [8]) + [36])) = *($4 + [36 align=4])
	*($7) = *($4 + [44])
	*($3 + [8]) = *($4 + [16])
	*($3 + [56]) = $1
	*($8) = [0]
	*(($12 = (($3 + [56]) + [24]))) = [0]
	$13 = CALL $8([16])
	*($9) = $13
	*($13) = $1
	*($13 + [8]) = (int_64)3617214756542218240
	*($6) = (int_64)0
	*((($3 + [56]) + [36])) = [0]
	$13 = ($13 + [16])
	*($12) = $13
	*($8) = $13
	CALL $48($6, [43])
	$13 = *($6)
	$12 = (($3 + [56]) + [32])
	*((($3 + [112]) + [8])) = *($12)
	*($3 + [116]) = $13
	*($3 + [112]) = $13
	*($3 + [128]) = ($3 + [112])
	*($3 + [136]) = ($3 + [8])
	CALL $93(($3 + [136]), ($3 + [128]))
	CALL $50(($3 + [56]))
	$13 = *($6)
	if ( ($13 == 0) ){ goto $label$3 }
	*($12) = $13
	CALL $10($13)
	
.LABEL $label$3
	$13 = *($9)
	if ( ($13 == 0) ){ goto $label$4 }
	*($8) = $13
	CALL $10($13)
	
.LABEL $label$4
	*($3 + [8]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $5))
	CALL $94(($3 + [8]))
	CALL $95(*($3 + [96]), $4)
	$1 = *($3 + [8])
	$4 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ($4) == 0) ){ goto $label$1 }
	$5 = (CASTING uint_32)(uint_64 $1)
	$2 = ($2 + [-1])
	if ( ($2 & [65535]) ){ goto $label$2 }
	
.LABEL $label$1
	$global$0 = ($3 + [144])
}

void .FUNC $92 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-3899101764628893183, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8513])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $136($7, CALL $fimport$12(*($7), *($7 + [8]), (int_64)-3899101764628893184, $6))
	if ( ((int_32)*($4 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$2
	*(($4 + [60])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8966])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8966])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8966])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $177(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$8 }
	CALL eosio_assert([0], [8615])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $139 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	*($1 + [16]) = *(*($0))
	*($1 + [24]) = *(*($0 + [4]))
	*($1 + [32]) = *(*($0 + [8]))
	*($1 + [40]) = *(*($0 + [12]))
	*($1 + [48]) = *(*($0 + [16]))
	$2 = *(*($0 + [24]) + [8])
	$3 = *(*($0 + [20]))
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	if ( ($2 == 0) ){ goto $label$3 }
	$4 = CALL $17()
	*(($2 = *(($0 + [24]))) + [24]) = ((int_64)$4 / (int_64)1000000)
	*(($0 = (*($1 + [76]) + (*(*(($0 + [20]))) << [5])))) = *($2)
	*(($0 + [24])) = *($2 + [24])
	*(($0 + [16])) = *(($2 + [16]))
	*(($0 + [8])) = *(($2 + [8]))
	return 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$1 }
	$4 = CALL $17()
	*(($0 = *(($0 + [24]))) + [24]) = ((int_64)$4 / (int_64)1000000)
	$3 = ($1 + [80])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)*(($1 + [84]))) ){ goto $label$2 }
	*($2) = *($0)
	*(($2 + [24])) = *(($0 + [24]))
	*(($2 + [16])) = *(($0 + [16]))
	*(($2 + [8])) = *(($0 + [8]))
	*($3) = (*($3) + [32])
	return 
	
.LABEL $label$3
	$0 = (*($1 + [76]) + ($3 << [5]))
	$5 = ($0 + [32])
	$2 = ($1 + [80])
	$1 = (*($2) - $5)
	$3 = int_32($1 >> [5])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL memmove($0, $5, $1)
	
.LABEL $label$5
	*($2) = ($0 + ($3 << [5]))
	return 
	
.LABEL $label$2
	CALL $140(($1 + [76]), $0)
	
.LABEL $label$1
}

void .FUNC $130 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [8615])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$2 = ($global$0 - [112])
	$global$0 = $2
	$3 = *($0)
	CALL $134(*($0 + [4]), $1)
	*($2 + [64]) = ($2 + [43])
	*($2 + [60]) = $2
	*($2 + [56]) = $2
	*($2 + [72]) = ($2 + [56])
	*($2 + [84]) = ($1 + [8])
	*($2 + [80]) = $1
	*($2 + [88]) = ($1 + [16])
	$4 = ($1 + [24])
	*($2 + [92]) = $4
	*($2 + [96]) = ($1 + [32])
	*($2 + [100]) = ($1 + [36])
	$5 = ($1 + [40])
	*($2 + [104]) = $5
	*($2 + [108]) = ($1 + [44])
	CALL $135(($2 + [80]), ($2 + [72]))
	$6 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($3 + [8]), (int_64)-3899101764628893184, *(*($0 + [8])), $6, $2, [43])
	if ( (uint_64)($6 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = ($3 + [8])
	$6 = *($3)
	$0 = *(($0 + [8]))
	$7 = *($0)
	$8 = *($1)
	*($2 + [80]) = *($1 + [16])
	*($1 + [56]) = CALL db_idx64_store($6, (int_64)-3899101764628893184, $7, $8, ($2 + [80]))
	$6 = *($0)
	$7 = *($3)
	$8 = *($1)
	*($2 + [80]) = *($4)
	*(($1 + [60])) = CALL db_idx64_store($7, (int_64)-3899101764628893183, $6, $8, ($2 + [80]))
	$6 = *($0)
	$7 = *($3)
	$8 = *($1)
	*($2 + [80]) = *($5)
	*(($1 + [64])) = CALL db_idx64_store($7, (int_64)-3899101764628893182, $6, $8, ($2 + [80]))
	$global$0 = ($2 + [112])
}

void .FUNC $133 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *(($3 + [64]))
	if ( ((int_64)$4 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$4 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$4 = (int_64)0
	$5 = ($3 + [48])
	$6 = CALL db_lowerbound_i64(*($5), *(($3 + [56])), (int_64)-3899101764628893184, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $136($5, $6)
	*($2 + [12]) = [0]
	*($2 + [8]) = $5
	$4 = *(*(CALL $137(($2 + [8])) + [4]))
	$4 = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	*(($3 + [64])) = $4
	if ( (uint_64)($4 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9114])
	$4 = *(($3 + [64]))
	goto $label$1 
	
.LABEL $label$2
	*(($3 + [64])) = (int_64)0
	
.LABEL $label$1
	*($1) = $4
	*($1 + [8]) = *(*($0 + [4]))
	*($1 + [16]) = *(*($0 + [8]))
	*($1 + [32]) = *(*($0 + [16]))
	*($1 + [36]) = *(*($0 + [20]))
	*($1 + [24]) = *(*($0 + [12]))
	*($1 + [40]) = *(*($0 + [24]))
	*($1 + [44]) = *(*($0 + [28]))
	$global$0 = ($2 + [16])
}

void .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [8966])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($1, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

int_32 .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8564])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([72])) + [48]) = $0
	*($5 + [16]) = (int_64)0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [36])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [44])
	CALL $138(($3 + [32]), ($3 + [24]))
	*($5 + [52]) = $1
	*($5 + [56 align=4]) = (int_64)-1
	*($5 + [64]) = [-1]
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $133(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $137 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [52]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9220])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-3899101764628893184)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [9166])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9166])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $136(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$2 = ($global$0 - [112])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$4 = *($3 + [4])
	*($1 + [28]) = *($4 + [120])
	*($1 + [8]) = *($4 + [104])
	*($1 + [24]) = *($4 + [118])
	*($1 + [32]) = *(*($3 + [12]))
	*($1 + [16]) = *(*(*($3 + [8]) + [4]))
	$3 = *($0)
	*($1 + [36]) = *($4 + [116])
	*($1 + [48]) = ((int_64)CALL $17() / (int_64)1000000)
	*($1 + [40]) = *($4 + [128])
	*($2 + [56]) = ($2 + [47])
	*($2 + [52]) = $2
	*($2 + [48]) = $2
	*($2 + [64]) = ($2 + [48])
	$4 = ($1 + [8])
	*($2 + [76]) = $4
	*($2 + [72]) = $1
	$5 = ($1 + [16])
	*($2 + [80]) = $5
	*($2 + [84]) = ($1 + [24])
	*($2 + [88]) = ($1 + [28])
	*($2 + [92]) = ($1 + [32])
	*($2 + [96]) = ($1 + [36])
	*($2 + [100]) = ($1 + [40])
	*($2 + [104]) = ($1 + [48])
	CALL $141(($2 + [72]), ($2 + [64]))
	$6 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($3 + [8]), (int_64)-3899189678858829824, *(*($0 + [8])), $6, $2, [47])
	if ( (uint_64)($6 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = ($3 + [8])
	$6 = *($3)
	$0 = *(($0 + [8]))
	$7 = *($0)
	$8 = *($1)
	*($2 + [72]) = *($4)
	*($1 + [60]) = CALL db_idx64_store($6, (int_64)-3899189678858829824, $7, $8, ($2 + [72]))
	$6 = *($0)
	$7 = *($3)
	$8 = *($1)
	*($2 + [72]) = *($5)
	*(($1 + [64])) = CALL db_idx64_store($7, (int_64)-3899189678858829823, $6, $8, ($2 + [72]))
	$global$0 = ($2 + [112])
}

void .FUNC $128 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [92])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	$6 = *($1)
	CALL $139($3, $1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [8907])
	
.LABEL $label$3
	$3 = [76]
	$7 = ($1 + [76])
	$9 = *($1 + [76])
	$8 = *(($1 + [80]))
	$10 = ($8 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [5]))
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$5 }
	$3 = ((((int_32)uint_32(($10 + [-32]) >> [5]) * (int_32)[26]) + $3) + [26])
	
.LABEL $label$5
	$8 = ($3 + [1])
	if ( ($8 <= [513]) ){ goto $label$7 }
	$3 = CALL $2($8)
	goto $label$6 
	
.LABEL $label$7
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$6
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $8)
	*($5 + [24]) = ($5 + [8])
	*($5 + [72]) = $7
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	*($5 + [60]) = ($1 + [56])
	*($5 + [64]) = ($1 + [64])
	*($5 + [68]) = ($1 + [72])
	*($5 + [76]) = ($1 + [88])
	CALL $125(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [96]), $2, $3, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $3($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$8
	$global$0 = ($5 + [80])
}

int_32 .FUNC $8 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $2($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $2($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $9 (int_32 $0)
{
	return CALL $8($0)
}

void .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [5]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [5])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$4 }
	$3 = [134217727]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [5]) > (uint_32)[67108862]) ){ goto $label$7 }
	$3 = int_32($2 >> [4])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $8(($3 << [5]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = (*($0) + [32])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $16($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($3 << [5]))
	$5 = ($2 + ($5 << [5]))
	$3 = $5
	
.LOOP $label$9:
	*($3) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = ($3 + [32])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$6 = ($2 + ($6 << [5]))
	$3 = *($0)
	$7 = ($0 + [4])
	$1 = (*($7) - $3)
	$2 = ($5 - $1)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$10
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$1 }
	CALL $10($3)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [8611])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = int_32(($8 - $3) >> [5])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $123($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ($7 << [5]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	*($2) = $0
	*($2 + [8]) = $3
	*((($2 + [8]) + [8])) = ($3 + [12])
	*((($2 + [8]) + [12])) = ($3 + [16])
	*((($2 + [8]) + [16])) = ($3 + [24])
	*($2 + [12]) = ($3 + [8])
	CALL $124(($2 + [8]), $2)
	$3 = ($3 + [32])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $121 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [76])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [80])) = $2
	CALL $10($2)
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $10($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [36])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$10
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	CALL $122(*($1), *($0 + [40]))
	$3 = *($0 + [44])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$11 }
	CALL eosio_assert([0], [8615])
	$1 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8232])
	return $3
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [5]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [8]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$6 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$4:
	*($2) = $0
	*($2 + [8]) = $4
	*((($2 + [8]) + [8])) = ($4 + [12])
	*((($2 + [8]) + [12])) = ($4 + [16])
	*((($2 + [8]) + [16])) = ($4 + [24])
	*($2 + [12]) = ($4 + [8])
	CALL $127(($2 + [8]), $2)
	$4 = ($4 + [32])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [36])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [8966])
	$4 = *(($3 + [4]))
	
.LABEL $label$10
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	CALL $126(*($1), *($0 + [40]))
	$3 = *($0 + [44])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert([0], [8966])
	$1 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($1, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	CALL $14($0, $1)
}

void .FUNC $16 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_64 .FUNC $17 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8224]) = $0
	return $0
}

void .FUNC $10 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $11 (int_32 $0)
{
	CALL $10($0)
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $7(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $7(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	return CALL $12($0, $1)
}

int_32 .FUNC $18 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $19 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [8611])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = ((int_32)($8 - $3) / (int_32)[20])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $118($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ((int_32)$7 * (int_32)[20]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	*($2) = $0
	*($2 + [8]) = $3
	*((($2 + [8]) + [8])) = ($3 + [8])
	*((($2 + [8]) + [12])) = ($3 + [12])
	*((($2 + [8]) + [16])) = ($3 + [16])
	*($2 + [12]) = ($3 + [4])
	CALL $119(($2 + [8]), $2)
	$3 = ($3 + [20])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $117 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [8])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $2
	CALL $10($2)
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $10($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $114 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL $8(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $115(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

int_32 .FUNC $115 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$4 = ($1 + [-24])
	*($3) = $4
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((*($1 + [104]) & [1]) == 0) ){ goto $label$8 }
	CALL $10(*(($1 + [112])))
	if ( ((*($1 + [92]) & [1]) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((*($1 + [92]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $10(*(($1 + [100])))
	if ( (*($1 + [80]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((*($1 + [80]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $10(*(($1 + [88])))
	
.LABEL $label$4
	CALL $10($1)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $10($1)
	
.LABEL $label$9
	return $0
}

void .FUNC $112 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$7 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$8 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$9 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [36])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$10 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$10
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$11 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$11
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [44])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$12 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$12
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$13 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$13
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [52])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$14 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$14
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [56])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$15
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [60])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$16 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$16
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [64])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$17 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$17
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	CALL $37(*($1), *($0 + [68]))
	CALL $37(*($1), *($0 + [72]))
	CALL $37(*($1), *($0 + [76]))
}

void .FUNC $110 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9063])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $8([72])) + [52]) = $1
	*($3 + [8]) = (int_64)0
	CALL $129(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [56])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $130(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $10($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[20]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($3 - $4) / (int_32)[20])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[214748365]) ){ goto $label$3 }
	$3 = [214748364]
	$2 = ((int_32)($2 - $4) / (int_32)[20])
	if ( ((uint_32)$2 > (uint_32)[107374181]) ){ goto $label$6 }
	$3 = ($2 << [1])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $8(((int_32)$3 * (int_32)[20]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = (int_64)0
	*(($3 + [16])) = [0]
	*(($3 + [8])) = (int_64)0
	$3 = (*($0) + [20])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $16($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$3 * (int_32)[20]))
	$5 = ($2 + ((int_32)$5 * (int_32)[20]))
	$3 = $5
	
.LOOP $label$8:
	*($3) = (int_64)0
	*(($3 + [16])) = [0]
	*(($3 + [8])) = (int_64)0
	$3 = ($3 + [20])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$6 = ($2 + ((int_32)$6 * (int_32)[20]))
	$3 = *($0)
	$7 = ($0 + [4])
	$1 = (*($7) - $3)
	$2 = ($5 + ((int_32)((int_32)$1 / (int_32)[-20]) * (int_32)[20]))
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$1 }
	CALL $10($3)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$1 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [8615])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

int_32 .FUNC $29 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *(($0 + [464]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [468])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $10($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [464]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$1
	$1 = *(($0 + [320]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [324])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $10($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [320]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$6
	$1 = *(($0 + [280]))
	if ( ($1 == 0) ){ goto $label$11 }
	$2 = ($0 + [284])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $10($4)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$14 }
	$3 = *(($0 + [280]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $1
	
.LABEL $label$12
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$11
	CALL $30(($0 + [160]))
	$2 = *(($0 + [144]))
	if ( ($2 == 0) ){ goto $label$16 }
	$5 = ($0 + [148])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$18 }
	
.LOOP $label$19:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$21 }
	*(($4 + [12])) = $1
	CALL $10($1)
	
.LABEL $label$21
	CALL $10($4)
	
.LABEL $label$20
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$19 }
	$3 = *(($0 + [144]))
	goto $label$17 
	
.LABEL $label$18
	$3 = $2
	
.LABEL $label$17
	*($5) = $2
	CALL $10($3)
	
.LABEL $label$16
	CALL $31(($0 + [104]))
	CALL $32(($0 + [64]))
	return $0
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	$6 = ($global$0 - [80])
	$global$0 = $6
	$7 = *($0 + [96])
	$8 = ($7 + [8])
	$9 = *(($7 + [36]))
	if ( ((int_32)$9 == (int_32)*(($7 + [32]))) ){ goto $label$4 }
	$7 = *(($9 + [-24]))
	if ( ((int_32)*($7 + [40]) == (int_32)$8) ){ goto $label$3 }
	CALL eosio_assert([0], [8513])
	if ( ((int_32)*($7 + [32]) != (int_32)[1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$7 = CALL $43($8, CALL $fimport$12(*($8), *(($7 + [16])), (int_64)-3899443509350574272, (int_64)0))
	if ( ((int_32)*($7 + [40]) == (int_32)$8) ){ goto $label$3 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$3
	if ( ((int_32)*($7 + [32]) == (int_32)[1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8268])
	
.LABEL $label$1
	if ( *($5) ){ goto $label$5 }
	CALL eosio_assert([0], [8292])
	
.LABEL $label$5
	if ( (((*($3) + [-1]) & [65535]) <= [1000]) ){ goto $label$6 }
	CALL eosio_assert([0], [8321])
	
.LABEL $label$6
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)[1]) ){ goto $label$7 }
	if ( ((int_32)$7 == (int_32)[255]) ){ goto $label$7 }
	CALL eosio_assert([0], [8363])
	
.LABEL $label$7
	$10 = *($0 + [92])
	$11 = ($10 + [8])
	$12 = *($1)
	$8 = *(($10 + [36]))
	$13 = *(($10 + [32]))
	if ( ((int_32)$13 == (int_32)$8) ){ goto $label$12 }
	
.LOOP $label$14:
	$7 = ($8 + [-24])
	$9 = *($7)
	if ( ((int_64)*($9) == (int_64)$12) ){ goto $label$13 }
	$8 = $7
	if ( ((int_32)$13 != (int_32)$7) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_32)$13 == (int_32)$8) ){ goto $label$12 }
	if ( ((int_32)*($9 + [116]) == (int_32)$11) ){ goto $label$15 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$15
	if ( $9 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$7 = CALL db_find_i64(*($11), *(($10 + [16])), (int_64)-3899294111387090944, $12)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$10 }
	$9 = CALL $56($11, $7)
	if ( ((int_32)*($9 + [116]) == (int_32)$11) ){ goto $label$11 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$11
	*($0 + [168]) = *($9 + [16])
	if ( (*($9 + [72]) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$9 = [0]
	CALL eosio_assert([0], [8587])
	*($0 + [168]) = *([0] + [16])
	if ( *([0] + [72]) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [8406])
	
.LABEL $label$8
	if ( ((((*($9 + [50]) + [50]) - *($3)) & [65535]) <= [101]) ){ goto $label$16 }
	CALL eosio_assert([0], [8442])
	
.LABEL $label$16
	$14 = *(($0 + [92]))
	$15 = ($14 + [88])
	$12 = *($1)
	$8 = *(($14 + [116]))
	$10 = *(($14 + [112]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$19 }
	
.LOOP $label$21:
	$7 = ($8 + [-24])
	$13 = *($7)
	if ( ((int_64)*($13) == (int_64)$12) ){ goto $label$20 }
	$8 = $7
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$19 }
	if ( ((int_32)*($13 + [20]) == (int_32)$15) ){ goto $label$22 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$22
	if ( $13 ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$19
	$7 = CALL db_find_i64(*($15), *(($14 + [96])), (int_64)-3899189674848550912, $12)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$18 }
	$13 = CALL $99($15, $7)
	if ( ((int_32)*($13 + [20]) == (int_32)$15) ){ goto $label$17 }
	CALL eosio_assert([0], [8513])
	goto $label$17 
	
.LABEL $label$18
	$13 = [0]
	CALL eosio_assert([0], [8587])
	
.LABEL $label$17
	*($0 + [104]) = *($2)
	*($0 + [118]) = *($3)
	$7 = *($4)
	*($0 + [116]) = $7
	$8 = *($5)
	*($0 + [120]) = $8
	*($0 + [176]) = (int_64)0
	*($0 + [112]) = ((int_32)$8 * (int_32)$7)
	*($6 + [32]) = $11
	*($6 + [36]) = $9
	*($6 + [16]) = *($6 + [32])
	CALL $100($0, ($6 + [16]))
	*($0 + [136]) = [-1]
	$1 = ($0 + [136])
	$12 = ((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)32)
	$16 = (CASTING uint_64)(uint_32 $15)
	$14 = *($0 + [118])
	$5 = *($0 + [116])
	if ( ((int_32)$5 != (int_32)[1]) ){ goto $label$29 }
	$3 = *($9 + [54])
	if ( ((uint_32)($14 & [65535]) <= (uint_32)$3) ){ goto $label$28 }
	if ( ($3 == 0) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$3 = *($9 + [52])
	if ( (($14 & [65535]) <= $3) ){ goto $label$27 }
	
.LABEL $label$28
	$7 = *($13 + [8])
	$4 = *(($13 + [12]))
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$25 }
	goto $label$26 
	
.LABEL $label$27
	$7 = *($13 + [8])
	$4 = *(($13 + [12]))
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$31 }
	$15 = ((int_32)($4 - $7) / (int_32)[20])
	$10 = [0]
	$8 = $7
	
.LOOP $label$32:
	if ( ((int_32)*($8) == (int_32)$3) ){ goto $label$30 }
	$8 = ($8 + [20])
	$10 = ($10 + [1])
	if ( ($10 <= $15) ){ goto $label$32 }
	
.LABEL $label$31
	*($1) = [-1]
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$30
	*($1) = $10
	$10 = *(($8 + [4]))
	if ( ((int_32)$5 != (int_32)[1]) ){ goto $label$35 }
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$34 }
	*($1) = [-1]
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$35
	if ( ((int_32)$10 <= (int_32)[0]) ){ goto $label$33 }
	
.LABEL $label$34
	*(($0 + [118])) = $3
	*(($0 + [156])) = *(($8 + [16]))
	*(($0 + [148])) = *(($8 + [8]))
	*($0 + [140 align=4]) = *($8)
	$14 = ($0 + [140])
	goto $label$23 
	
.LABEL $label$33
	*($1) = [-1]
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$25 }
	
.LABEL $label$26
	$3 = ((int_32)($4 - $7) / (int_32)[20])
	$8 = [0]
	$10 = ($14 & [65535])
	
.LOOP $label$36:
	if ( ((int_32)*($7) == (int_32)$10) ){ goto $label$24 }
	$7 = ($7 + [20])
	$8 = ($8 + [1])
	if ( ($8 <= $3) ){ goto $label$36 }
	
.LABEL $label$25
	*($0 + [140]) = $14
	*(($0 + [136])) = [-1]
	*(($0 + [144])) = (int_64)0
	*(($0 + [152])) = (int_64)0
	$14 = ($0 + [140])
	goto $label$23 
	
.LABEL $label$24
	*(($0 + [136])) = $8
	*(($0 + [156])) = *(($7 + [16]))
	*(($0 + [148])) = *(($7 + [8]))
	*($0 + [140 align=4]) = *($7)
	$14 = ($0 + [140])
	
.LABEL $label$23
	$8 = ($0 + [168])
	$10 = ($0 + [120])
	$3 = ($0 + [116])
	$15 = ($0 + [118])
	$12 = ((int_64)$12 | (int_64)$16)
	*($6 + [28]) = $9
	*($6 + [24]) = $11
	*($6 + [8]) = *($6 + [24])
	CALL $101($0, ($6 + [8]))
	$7 = ($0 + [92])
	$11 = *($7)
	$16 = *($11)
	*($6 + [52]) = $14
	*($6 + [48]) = $1
	$11 = ($11 + [88])
	if ( $13 ){ goto $label$37 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$37
	CALL $102($11, $13, $16, ($6 + [48]))
	$7 = *($7)
	*($6 + [40]) = $12
	$12 = *($7)
	*($6 + [52]) = $15
	*($6 + [48]) = ($0 + [160])
	*($6 + [56]) = $3
	*($6 + [60]) = $10
	*($6 + [64]) = $8
	*($6 + [68]) = $7
	$7 = ($7 + [8])
	*($6 + [72]) = ($6 + [40])
	if ( $9 ){ goto $label$38 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$38
	CALL $103($7, $9, $12, ($6 + [48]))
	$12 = *(($0 + [176]))
	if ( (int_64)($12 == 0) ){ goto $label$39 }
	$7 = *(($0 + [96]))
	*($6 + [48]) = $12
	$0 = [0]
	$8 = ($7 + [8])
	$9 = CALL db_lowerbound_i64(*($7 + [8]), *(($7 + [16])), (int_64)-3899443509350574272, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$40 }
	$0 = CALL $43($8, $9)
	
.LABEL $label$40
	$12 = *($7)
	*($6 + [40]) = ($6 + [48])
	if ( $0 ){ goto $label$41 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$41
	CALL $104($8, $0, $12, ($6 + [40]))
	
.LABEL $label$39
	$global$0 = ($6 + [80])
}

int_32 .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $8($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $20 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $23 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $8($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $10($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $23($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $25 (int_32 $0)
{
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $8(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $10($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $27 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [528])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [496])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [496])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8615])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [488]) = (int_64)0
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$6
	CALL memcpy(($3 + [488]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)($4 & [-2]) != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$7
	CALL memcpy(($3 + [486]), $5, [2])
	$5 = ($2 + [18])
	if ( ((int_32)$4 != (int_32)[18]) ){ goto $label$8 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$8
	CALL memcpy(($3 + [485]), $5, [1])
	$5 = ($2 + [19])
	if ( ((uint_32)($4 + [-19]) > (uint_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [8615])
	
.LABEL $label$9
	CALL memcpy(($3 + [480]), $5, [4])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [76])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [23])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*(($3 + [128])) = $0
	*(($3 + [120])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*($3 + [160]) = $0
	*($3 + [248]) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [264])) = $0
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [334])) = [0]
	*(($3 + [332])) = [0]
	*(($3 + [336])) = ($3 + [160])
	*(($3 + [340])) = ($3 + [32])
	*(($3 + [344])) = ($3 + [432])
	*(($3 + [352])) = (int_64)0
	*(($3 + [440])) = $0
	*($3 + [432]) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [448])) = $0
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	$2 = *($3 + [480])
	$4 = *($3 + [485])
	$5 = *($3 + [486])
	$0 = *($3 + [488])
	*($3 + [512]) = *($3 + [496])
	*($3 + [520]) = $0
	*($3 + [510]) = $5
	*($3 + [509]) = $4
	*($3 + [504]) = $2
	CALL require_auth($0)
	CALL $28(($3 + [248]), ($3 + [512]), ($3 + [520]), ($3 + [510]), ($3 + [509]), ($3 + [504]))
	CALL $29($3)
	$global$0 = ($3 + [528])
}

int_32 .FUNC $26 (int_32 $0)
{
	int_32 $1
	$1 = int_32($0 >> [31])
	return ((int_32)($0 + $1) ^ (int_32)$1)
}

void .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_32 $29
	int_32 $30
	$2 = ($global$0 - [144])
	$global$0 = $2
	*($2 + [60]) = *($0 + [120])
	$3 = [0]
	*($0 + [160]) = [0]
	*($2 + [56]) = [0]
	$4 = ($0 + [160])
	$5 = ($0 + [120])
	$6 = *($0 + [112])
	$7 = *(($0 + [144]))
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$3 }
	$3 = [0]
	if ( ((int_32)$6 >= (int_32)[0]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($0 + [48])
	$9 = ($0 + [8])
	$10 = ($0 + [118])
	$11 = ($0 + [156])
	$6 = *($11)
	$12 = ($1 + [4])
	$13 = ($0 + [36])
	$14 = ($0 + [32])
	$15 = ($0 + [16])
	$16 = ($0 + [144])
	$17 = ($0 + [104])
	$18 = ($0 + [88])
	$19 = ($0 + [160])
	$20 = ($2 + [92])
	$21 = ($2 + [104])
	$22 = ($2 + [108])
	$3 = [0]
	
.LOOP $label$4:
	$23 = ((int_64)((int_64)((int_64)*($10) << (int_64)32) | (int_64)((int_64)*(*($12)) << (int_64)48)) | (int_64)(CASTING uint_64)(uint_32 $6))
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$11 }
	$23 = ((int_64)$23 | (int_64)2147483648)
	$6 = *($13)
	$24 = *($14)
	if ( ((int_32)$24 != (int_32)$6) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL prints([8972])
	CALL printui($23)
	CALL prints([8989])
	$6 = *($13)
	$24 = *($14)
	if ( ((int_32)$24 == (int_32)$6) ){ goto $label$9 }
	
.LABEL $label$10
	
.LOOP $label$13:
	$7 = ($6 + [-24])
	$25 = *($7)
	if ( ((int_64)*($25) == (int_64)$23) ){ goto $label$12 }
	$6 = $7
	if ( ((int_32)$24 != (int_32)$7) ){ goto $label$13 }
	goto $label$9 
	
.LABEL $label$12
	if ( ((int_32)$24 == (int_32)$6) ){ goto $label$9 }
	if ( ((int_32)*($25 + [52]) == (int_32)$9) ){ goto $label$14 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$14
	*($2 + [52]) = $25
	*($2 + [48]) = $9
	if ( ($25 == 0) ){ goto $label$8 }
	if ( ((int_64)*($17) != (int_64)*($25 + [8])) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$9
	$7 = CALL db_find_i64(*($9), *($15), (int_64)-3899189678858829824, $23)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$15 }
	$25 = CALL $34($9, $7)
	if ( ((int_32)*($25 + [52]) == (int_32)$9) ){ goto $label$16 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$16
	*($2 + [52]) = $25
	*($2 + [48]) = $9
	if ( ((int_64)*($17) == (int_64)*($25 + [8])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$15
	*($2 + [52]) = [0]
	*($2 + [48]) = $9
	
.LABEL $label$8
	CALL prints([9027])
	$7 = *($16)
	if ( ($7 == 0) ){ goto $label$1 }
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [8993])
	$25 = *($2 + [52])
	
.LABEL $label$6
	$6 = *($2 + [60])
	$7 = *($25 + [32])
	*($2 + [56]) = ( $7 ? $6 : ($7 <= $6) )
	if ( ((uint_32)$7 > (uint_32)$6) ){ goto $label$17 }
	$7 = *($10)
	$6 = *($25 + [36])
	$24 = *($25 + [28])
	$26 = *($25 + [16])
	$27 = *($25 + [8])
	$28 = CALL $17()
	*($2 + [128]) = $23
	*($2 + [136]) = $27
	*($2 + [120]) = $26
	*($2 + [64]) = $7
	*($2 + [32]) = $24
	*($2 + [70]) = $6
	*($2 + [116]) = ((int_64)$28 / (int_64)1000000)
	$23 = *($0)
	*($2 + [80]) = $0
	*((($2 + [80]) + [8])) = ($2 + [136])
	*($20) = ($2 + [120])
	*((($2 + [80]) + [16])) = ($2 + [64])
	*((($2 + [80]) + [20])) = ($2 + [32])
	*($21) = ($2 + [116])
	*($22) = ($2 + [70])
	*($2 + [84]) = ($2 + [128])
	CALL $106(($2 + [72]), $8, $23, ($2 + [80]))
	$25 = *($2 + [52])
	
.LABEL $label$17
	$29 = *($18)
	$30 = ($29 + [48])
	$23 = *($25 + [8])
	$6 = *(($29 + [76]))
	$25 = *(($29 + [72]))
	if ( ((int_32)$25 == (int_32)$6) ){ goto $label$20 }
	
.LOOP $label$22:
	$7 = ($6 + [-24])
	$24 = *($7)
	if ( ((int_64)*($24) == (int_64)$23) ){ goto $label$21 }
	$6 = $7
	if ( ((int_32)$25 != (int_32)$7) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	if ( ((int_32)$25 == (int_32)$6) ){ goto $label$20 }
	if ( ((int_32)*(($24 + [92])) == (int_32)$30) ){ goto $label$23 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$23
	*($2 + [44]) = $24
	*($2 + [40]) = $30
	if ( $24 ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$20
	$7 = CALL db_find_i64(*($30), *(($29 + [56])), (int_64)-3899173487572132544, $23)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$24 }
	$7 = CALL $41($30, $7)
	if ( ((int_32)*($7 + [92]) == (int_32)$30) ){ goto $label$25 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$25
	*($2 + [44]) = $7
	*($2 + [40]) = $30
	goto $label$18 
	
.LABEL $label$24
	*($2 + [44]) = [0]
	*($2 + [40]) = $30
	
.LABEL $label$19
	CALL eosio_assert([0], [8730])
	
.LABEL $label$18
	$7 = *($2 + [52])
	*($2 + [16]) = *($2 + [40])
	*($2 + [80]) = ((int_64)*($2 + [56]) * (int_64)50000)
	CALL $107($0, ($2 + [16]), ($7 + [16]), ($7 + [32]), ($7 + [40]), ($2 + [80]), ($7 + [36]), ($2 + [56]), $10)
	$23 = *($2 + [48])
	if ( ((int_32)*(*($2 + [52]) + [32]) != (int_32)*($2 + [56])) ){ goto $label$27 }
	$7 = (CASTING uint_32)(uint_64 (uint_64)$23 >> (uint_64)(int_64)32)
	if ( $7) ){ goto $label$28 }
	CALL eosio_assert([0], [9381])
	CALL eosio_assert([0], [9415])
	
.LABEL $label$28
	$6 = CALL db_next_i64(*($7 + [56]), ($2 + [80]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$29 }
	CALL $34((CASTING uint_32)(uint_64 $23), $6)
	
.LABEL $label$29
	CALL $108($9, $7)
	goto $label$26 
	
.LABEL $label$27
	$26 = *($0)
	*($2 + [84]) = ($2 + [56])
	*($2 + [80]) = ($2 + [48])
	$7 = (CASTING uint_32)(uint_64 (uint_64)$23 >> (uint_64)(int_64)32)
	if ( $7) ){ goto $label$30 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$30
	CALL $109($9, $7, $26, ($2 + [80]))
	
.LABEL $label$26
	$6 = *($2 + [56])
	*($19) = (*($19) + $6)
	$7 = *($16)
	$7 = (( ([0] - $6) ? $6 : ((int_32)$7 > (int_32)[0]) ) + $7)
	*($16) = $7
	*($2 + [60]) = (*($2 + [60]) - $6)
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$5
	if ( ((int_32)*($4) == (int_32)*($5)) ){ goto $label$1 }
	$6 = (*($11) + [1])
	*($11) = $6
	$3 = ($3 + [1])
	if ( (($3 & [255]) <= [20]) ){ goto $label$4 }
	
.LABEL $label$1
	$25 = *($0 + [116])
	if ( ((int_32)$25 != (int_32)[1]) ){ goto $label$32 }
	*(($6 = ($0 + [148]))) = (*($6) + [1])
	goto $label$31 
	
.LABEL $label$32
	*(($6 = ($0 + [152]))) = (*($6) + [1])
	
.LABEL $label$31
	$6 = ((int_32)$25 == (int_32)[1])
	*($2 + [48]) = ((int_64)((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)31) | (int_64)*(($0 + ( [148] ? [152] : $6 )))) | (int_64)((int_64)*(*($1 + [4])) << (int_64)48)) | (int_64)((int_64)*($0 + [118]) << (int_64)32))
	$6 = *(($0 + [160]))
	if ( ((uint_32)($3 & [255]) > (uint_32)[19]) ){ goto $label$33 }
	if ( ((int_32)$6 == (int_32)*(($0 + [120]))) ){ goto $label$33 }
	$6 = int_32(($25 << [24]) >> [24])
	if ( $7 ){ goto $label$34 }
	*(($0 + [156])) = *(($0 + ( [148] ? [152] : ((int_32)$25 == (int_32)[1]) )))
	
.LABEL $label$34
	*(($0 + [144])) = (((int_32)*($2 + [60]) * (int_32)$6) + $7)
	$23 = *($0)
	*($2 + [84]) = $0
	*($2 + [88]) = $1
	*($2 + [80]) = ($2 + [48])
	*($2 + [92]) = ($2 + [60])
	CALL $110(($2 + [136]), ($0 + [8]), $23, ($2 + [80]))
	$6 = *(($0 + [160]))
	
.LABEL $label$33
	if ( ($6 == 0) ){ goto $label$35 }
	*($2 + [32]) = ((int_64)(CASTING uint_64)(uint_32 $6) * (int_64)50000)
	$7 = ($3 & [255])
	if ( ((uint_32)$7 > (uint_32)[19]) ){ goto $label$37 }
	if ( ((int_32)$6 != (int_32)*($5)) ){ goto $label$36 }
	
.LABEL $label$37
	$25 = *(($0 + [116]))
	$24 = *(($0 + [118]))
	$23 = *(*(($1 + [4])))
	$26 = *($0 + [104])
	$27 = *($2 + [48])
	$28 = CALL $17()
	*($2 + [128]) = $27
	*($2 + [136]) = $26
	*($2 + [120]) = $23
	*($2 + [70]) = $24
	*($2 + [116]) = $6
	*($2 + [69]) = $25
	*($2 + [64]) = ((int_64)$28 / (int_64)1000000)
	$23 = *($0)
	*($2 + [80]) = $0
	*($2 + [84]) = ($2 + [128])
	*($2 + [88]) = ($2 + [136])
	*($2 + [92]) = ($2 + [120])
	*($2 + [96]) = ($2 + [70])
	*($2 + [100]) = ($2 + [116])
	*($2 + [104]) = ($2 + [64])
	*($2 + [108]) = ($2 + [69])
	CALL $106(($2 + [72]), ($0 + [48]), $23, ($2 + [80]))
	if ( ($7 <= [20]) ){ goto $label$36 }
	$23 = *($5)
	*($5) = *($4)
	*($2 + [32]) = ((int_64)$23 * (int_64)50000)
	
.LABEL $label$36
	$30 = ($0 + [116])
	$29 = ($0 + [118])
	$3 = *($0 + [88])
	$9 = ($3 + [48])
	$23 = *(($0 + [104]))
	$6 = *(($3 + [76]))
	$25 = *(($3 + [72]))
	if ( ((int_32)$25 == (int_32)$6) ){ goto $label$40 }
	
.LOOP $label$42:
	$7 = ($6 + [-24])
	$24 = *($7)
	if ( ((int_64)*($24) == (int_64)$23) ){ goto $label$41 }
	$6 = $7
	if ( ((int_32)$25 != (int_32)$7) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	if ( ((int_32)$25 == (int_32)$6) ){ goto $label$40 }
	if ( ((int_32)*(($24 + [92])) == (int_32)$9) ){ goto $label$43 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$43
	*($2 + [28]) = $24
	*($2 + [24]) = $9
	if ( $24 ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$40
	$7 = CALL db_find_i64(*($9), *(($3 + [56])), (int_64)-3899173487572132544, $23)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$44 }
	$7 = CALL $41($9, $7)
	if ( ((int_32)*($7 + [92]) == (int_32)$9) ){ goto $label$45 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$45
	*($2 + [28]) = $7
	*($2 + [24]) = $9
	goto $label$38 
	
.LABEL $label$44
	*($2 + [28]) = [0]
	*($2 + [24]) = $9
	
.LABEL $label$39
	CALL eosio_assert([0], [8730])
	
.LABEL $label$38
	$7 = *(($1 + [4]))
	*($2 + [8]) = *($2 + [24])
	CALL $107($0, ($2 + [8]), $7, $5, ($0 + [128]), ($2 + [32]), $30, $4, $29)
	
.LABEL $label$35
	$global$0 = ($2 + [144])
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($0 + [88])
	$4 = ($3 + [48])
	$5 = *($0 + [104])
	$7 = *(($3 + [76]))
	$6 = *(($3 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$5:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$4 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	if ( ((int_32)*(($9 + [92])) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$6
	if ( $9 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$8 = CALL db_find_i64(*($4), *(($3 + [56])), (int_64)-3899173487572132544, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	$9 = CALL $41($4, $8)
	if ( ((int_32)*($9 + [92]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8513])
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	CALL eosio_assert([0], [8730])
	
.LABEL $label$1
	$5 = *($9 + [40])
	$10 = *($9 + [16])
	*($2 + [16]) = $10
	$11 = *($9 + [24])
	*($2 + [8]) = $11
	$12 = *($9 + [32])
	$5 = ((int_64)$5 + (int_64)((int_64)*($0 + [120]) * (int_64)50000))
	*($2 + [24]) = $5
	if ( (uint_64)($5 <= ((int_64)$12 + (int_64)((int_64)$11 + (int_64)$10))) ){ goto $label$7 }
	CALL eosio_assert([0], [8620])
	
.LABEL $label$7
	$7 = [0]
	$8 = *($9 + [76])
	$6 = *(($9 + [80]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$8 }
	$5 = *(*($1 + [4]))
	$6 = int_32(($6 - $8) >> [5])
	$7 = [0]
	
.LOOP $label$10:
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$9 }
	$8 = ($8 + [32])
	$7 = ($7 + [1])
	if ( ($7 <= $6) ){ goto $label$10 }
	$7 = [0]
	goto $label$8 
	
.LABEL $label$9
	$7 = *(($8 + [8]))
	
.LABEL $label$8
	$8 = (CALL $26((*($0 + [112]) + $7)) - CALL $26($7))
	$5 = ((int_64)(CASTING int_64)(int_32 $8) * (int_64)50000)
	*($0 + [128]) = $5
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$11 }
	if ( ((int_64)$5 <= (int_64)*(($9 + [16]))) ){ goto $label$11 }
	CALL eosio_assert([0], [8693])
	$5 = *(($0 + [128]))
	
.LABEL $label$11
	if ( ((int_64)$5 < (int_64)1) ){ goto $label$12 }
	*($2 + [8]) = ((int_64)$11 + (int_64)$5)
	*($2 + [16]) = (int_64))($10 - $5)
	
.LABEL $label$12
	$8 = *(($0 + [88]))
	$7 = ($8 + [48])
	$5 = *($8)
	*($2 + [36]) = ($2 + [8])
	*($2 + [32]) = ($2 + [16])
	*($2 + [40]) = ($2 + [24])
	if ( $9 ){ goto $label$13 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$13
	CALL $105($7, $9, $5, ($2 + [32]))
	$global$0 = ($2 + [48])
}

void .FUNC $103 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [116]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($5 + [16]) = *($1 + [8])
	$6 = *($1)
	CALL $145($3, $1)
	$7 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [8907])
	
.LABEL $label$3
	*($5 + [24]) = [0]
	*($5) = ($5 + [24])
	*($5 + [36]) = $7
	*($5 + [32]) = $1
	$8 = ($1 + [16])
	*($5 + [40]) = $8
	$9 = ($1 + [24])
	*($5 + [44]) = $9
	$10 = ($1 + [32])
	*($5 + [48]) = $10
	$11 = ($1 + [40])
	*($5 + [52]) = $11
	$12 = ($1 + [42])
	*($5 + [56]) = $12
	$13 = ($1 + [44])
	*($5 + [60]) = $13
	$14 = ($1 + [46])
	*($5 + [64]) = $14
	$15 = ($1 + [48])
	*($5 + [68]) = $15
	$16 = ($1 + [50])
	*($5 + [72]) = $16
	$17 = ($1 + [52])
	*($5 + [76]) = $17
	$18 = ($1 + [54])
	*($5 + [80]) = $18
	$19 = ($1 + [56])
	*($5 + [84]) = $19
	$20 = ($1 + [64])
	*($5 + [88]) = $20
	$21 = ($1 + [72])
	*($5 + [92]) = $21
	$22 = ($1 + [76])
	*($5 + [96]) = $22
	$23 = ($1 + [80])
	*($5 + [100]) = $23
	$24 = ($1 + [92])
	*($5 + [104]) = $24
	$25 = ($1 + [104])
	*($5 + [108]) = $25
	CALL $146(($5 + [32]), $5)
	$3 = *($5 + [24])
	if ( ($3 <= [513]) ){ goto $label$5 }
	$4 = CALL $2($3)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [24]) = $5
	*($5 + [36]) = $7
	*($5 + [40]) = $8
	*($5 + [44]) = $9
	*($5 + [48]) = $10
	*($5 + [52]) = $11
	*($5 + [56]) = $12
	*($5 + [60]) = $13
	*($5 + [64]) = $14
	*($5 + [68]) = $15
	*($5 + [72]) = $16
	*($5 + [76]) = $17
	*($5 + [80]) = $18
	*($5 + [84]) = $19
	*($5 + [88]) = $20
	*($5 + [92]) = $21
	*($5 + [96]) = $22
	*($5 + [100]) = $23
	*($5 + [104]) = $24
	*($5 + [32]) = $1
	*($5 + [108]) = $25
	CALL $147(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [120]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL $3($4)
	
.LABEL $label$6
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($5 + [32]) = *($7)
	if ( (CALL $19(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$8 }
	$4 = *($1 + [124])
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$9 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3899294111387090944, ($5 + [24]), $6)
	*(($1 + [124])) = $4
	
.LABEL $label$9
	CALL db_idx64_update($4, $2, ($5 + [32]))
	
.LABEL $label$8
	$global$0 = ($5 + [112])
}

void .FUNC $102 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *(*($3))
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$5 }
	$3 = *(($3 + [4]))
	*(($7 = (*($1 + [8]) + ((int_32)$7 * (int_32)[20])))) = *($3)
	*(($7 + [16])) = *(($3 + [16]))
	*(($7 + [8])) = *(($3 + [8]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$3 = *(($3 + [4]))
	$8 = ($1 + [12])
	$7 = *($8)
	if ( ((int_32)$7 == (int_32)*(($1 + [16]))) ){ goto $label$6 }
	*($7) = *($3)
	*(($7 + [16])) = *(($3 + [16]))
	*(($7 + [8])) = *(($3 + [8]))
	*($8) = (*($8) + [20])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	CALL $143(($1 + [8]), $3)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8907])
	
.LABEL $label$3
	$8 = *($1 + [8])
	$7 = *(($1 + [12]))
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$9 / (int_32)[20]))
	$3 = [26]
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$11 }
	$9 = (((int_32)((uint_32)($9 + [-20]) / (uint_32)[20]) * (int_32)[18]) + $3)
	if ( ($9 <= [513]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$9 = ($3 + [-18])
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$9 }
	
.LABEL $label$10
	$8 = ($4 - (($9 + [15]) & [-16]))
	$global$0 = $8
	goto $label$8 
	
.LABEL $label$9
	$8 = CALL $2($9)
	
.LABEL $label$8
	*($5 + [4]) = $8
	*($5) = $8
	*($5 + [8]) = ($8 + $9)
	$3 = $8
	if ( ((int_32)$9 > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [8966])
	$3 = *($5 + [4])
	
.LABEL $label$12
	CALL memcpy($3, $1, [8])
	$3 = ($3 + [8])
	*($5 + [4]) = $3
	$10 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [12])) - *(($1 + [8]))) / (int_32)[20]))
	
.LOOP $label$13:
	$4 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$7 = ((int_64)$10) != (int_64)0
	*($5 + [24]) = (($7) << [7]) | ($4 & [127]))
	if ( ((int_32)(*(($5 + [8])) - $3) > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [8966])
	$3 = *($5 + [4])
	
.LABEL $label$14
	CALL memcpy($3, ($5 + [24]), [1])
	$3 = ($3 + [1])
	*($5 + [4]) = $3
	if ( $7 ){ goto $label$13 }
	$4 = *(($1 + [12]))
	$3 = *(($1 + [8]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$15 }
	
.LOOP $label$16:
	*($5 + [16]) = $5
	*($5 + [24]) = $3
	*((($5 + [24]) + [8])) = ($3 + [8])
	*((($5 + [24]) + [12])) = ($3 + [12])
	*((($5 + [24]) + [16])) = ($3 + [16])
	*($5 + [28]) = ($3 + [4])
	CALL $144(($5 + [24]), ($5 + [16]))
	$3 = ($3 + [20])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$16 }
	
.LABEL $label$15
	CALL db_update_i64(*($1 + [24]), $2, $8, $9)
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$19 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $3($8)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$17 }
	
.LABEL $label$18
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$17
	$global$0 = ($5 + [48])
}

void .FUNC $105 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [92])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($1 + [16]) = *(*($3))
	*($1 + [24]) = *(*($3 + [4]))
	*($1 + [40]) = *(*($3 + [8]))
	$3 = [76]
	$6 = ($1 + [76])
	$7 = ($1 + [40])
	$8 = ($1 + [24])
	$9 = ($1 + [16])
	$11 = *($1 + [76])
	$10 = *(($1 + [80]))
	$12 = ($10 - $11)
	$13 = (CASTING uint_64)(uint_32 int_32($12 >> [5]))
	$14 = *($1)
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$4 }
	$3 = ((((int_32)uint_32(($12 + [-32]) >> [5]) * (int_32)[26]) + $3) + [26])
	
.LABEL $label$4
	$10 = ($3 + [1])
	if ( ($10 <= [513]) ){ goto $label$6 }
	$3 = CALL $2($10)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $10)
	*($5 + [24]) = ($5 + [8])
	*($5 + [40]) = $9
	*($5 + [44]) = $8
	*($5 + [52]) = $7
	*($5 + [72]) = $6
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [48]) = ($1 + [32])
	*($5 + [56]) = ($1 + [48])
	*($5 + [60]) = ($1 + [56])
	*($5 + [64]) = ($1 + [64])
	*($5 + [68]) = ($1 + [72])
	*($5 + [76]) = ($1 + [88])
	CALL $125(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [96]), $2, $3, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$14 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $3($3)
	if ( (uint_64)($14 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [80])
}

void .FUNC $104 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)*(*($3)))
	*($1 + [36]) = ((int_64)CALL $17() / (int_64)1000000)
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-11])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [36])
	CALL $149(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [37])
	if ( ((int_64)*($0 + [16]) == (int_64)0) ){ goto $label$3 }
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$3
	*(($0 + [16])) = (int_64)1
	$global$0 = ($5 + [48])
}

void .FUNC $107 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_64 $18
	$9 = ($global$0 - [112])
	$global$0 = $9
	$10 = *($1 + [4])
	$11 = *($10 + [16])
	*($9 + [40]) = $11
	$12 = *($10 + [24])
	*($9 + [32]) = $12
	$13 = *($10 + [32])
	*($9 + [24]) = $13
	$14 = *($10 + [48])
	*($9 + [16]) = $14
	$15 = *($10 + [40])
	*($9 + [8]) = $15
	$16 = *($2)
	$10 = *($10 + [76])
	$2 = *(($10 + [80]))
	if ( ((int_32)$2 == (int_32)$10) ){ goto $label$3 }
	$17 = int_32(($2 - $10) >> [5])
	$2 = [0]
	
.LOOP $label$4:
	if ( ((int_64)*($10) == (int_64)$16) ){ goto $label$2 }
	$10 = ($10 + [32])
	$2 = ($2 + [1])
	if ( ($2 <= $17) ){ goto $label$4 }
	
.LABEL $label$3
	*($9 + [4]) = [-1]
	*($9 + [48]) = $16
	$2 = [0]
	*($9 + [56]) = [0]
	$18 = (int_64)0
	*($9 + [64]) = (int_64)0
	*($9 + [72]) = [0]
	*($9 + [60]) = *($8)
	goto $label$1 
	
.LABEL $label$2
	*(($17 = (($9 + [48]) + [8]))) = *(($10 + [8]))
	*((($9 + [48]) + [24])) = *(($10 + [24]))
	$18 = *(($10 + [16]))
	*((($9 + [48]) + [16])) = $18
	*($9 + [4]) = $2
	*($9 + [48]) = *($10)
	$16 = *($9 + [60])
	$10 = *($8)
	*($9 + [60]) = $10
	$2 = *($17)
	$11 = ((int_64)((int_64)((int_64))(((int_64)(CASTING uint_64)(uint_32 $10) & (int_64)65535) - $16) * (int_64)(CASTING int_64)(int_32 $2)) * (int_64)1000) + (int_64)$11
	*($9 + [40]) = $11)
	
.LABEL $label$1
	$6 = ((int_32)*($7) * (int_32)*($6))
	$10 = ($6 + $2)
	*(($9 + [56])) = $10
	$16 = ((int_64)(CASTING int_64)(int_32 CALL $26($10)) * (int_64)50000)
	*(($9 + [64])) = $16
	$16 = (int_64)
	$18 = (int_64)
	*($9 + [40]) = $18($11 - $16($16 - $18))))
	*($9 + [24]) = ((int_64)$13 + (int_64)$16)
	$11 = *($5)
	if ( ((uint_64)$15 >= (uint_64)$11) ){ goto $label$5 }
	CALL eosio_assert([0], [9268])
	$11 = *($5)
	
.LABEL $label$5
	$17 = *($7)
	$16 = ((int_64)(CASTING uint_64)(uint_32 $17) * (int_64)500)
	*($0 + [176]) = ((int_64)*($0 + [176]) + (int_64)$16)
	*($9 + [8]) = (int_64))($15 - $11)
	$15 = (int_64)
	*($9 + [40]) = $15($18 - $16))
	*($9 + [16]) = ((int_64)$14 + (int_64)$16)
	if ( ((int_32)$17 != (int_32)*($3)) ){ goto $label$6 }
	$16 = *($4)
	if ( ((int_64)$16 < (int_64)1) ){ goto $label$6 }
	$11 = $16
	if ( ((uint_64)$12 >= (uint_64)$16) ){ goto $label$7 }
	CALL eosio_assert([0], [9329])
	$11 = *($4)
	
.LABEL $label$7
	*($9 + [40]) = ((int_64)$15 + (int_64)$11)
	*($9 + [32]) = (int_64))($12 - $16)
	
.LABEL $label$6
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$10 }
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	*($0 + [168]) = ((int_64)*($0 + [168]) + (int_64)(CASTING int_64)(int_32 $6))
	goto $label$8 
	
.LABEL $label$10
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$8 }
	*($0 + [168]) = (int_64))(*($0 + [168]) - (CASTING int_64)(int_32 $2))
	goto $label$8 
	
.LABEL $label$9
	*($0 + [168]) = ((int_64)*($0 + [168]) + (int_64)(CASTING int_64)(int_32 $10))
	
.LABEL $label$8
	$2 = *($0 + [88])
	$17 = ($2 + [48])
	$10 = *($1 + [4])
	$16 = *($2)
	*($9 + [84]) = ($9 + [32])
	*($9 + [80]) = ($9 + [40])
	*($9 + [88]) = ($9 + [24])
	*($9 + [92]) = ($9 + [8])
	*($9 + [96]) = ($9 + [16])
	*($9 + [100]) = ($9 + [4])
	*($9 + [104]) = ($9 + [48])
	if ( $10 ){ goto $label$11 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$11
	CALL $128($17, $10, $16, ($9 + [80]))
	$global$0 = ($9 + [112])
}

void .FUNC $106 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9063])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $8([72])) + [48]) = $1
	*($3 + [16]) = (int_64)0
	CALL $132(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [52])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $133(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $10($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $109 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [96])
	$global$0 = $4
	*(($5 = $4) + [40]) = $2
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8810])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8856])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [8])
	*($5 + [32]) = *($1 + [16])
	*($1 + [32]) = (*(*(*($3) + [4]) + [32]) - *(*($3 + [4])))
	$6 = *($1)
	*($5 + [16]) = $6
	*($1 + [48]) = ((int_64)CALL $17() / (int_64)1000000)
	$7 = ($1 + [48])
	$8 = ($1 + [32])
	$9 = ($1 + [16])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [8907])
	
.LABEL $label$3
	$10 = ($0 + [36])
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-1])
	*($5 + [48]) = $5
	*($5 + [64]) = $9
	*($5 + [76]) = $8
	*($5 + [88]) = $7
	*($5 + [56]) = $1
	*($5 + [60]) = ($1 + [8])
	*($5 + [68]) = ($1 + [24])
	*($5 + [72]) = ($1 + [28])
	*($5 + [80]) = ($1 + [36])
	*($5 + [84]) = ($1 + [40])
	CALL $141(($5 + [56]), ($5 + [48]))
	CALL db_update_i64(*($1 + [56]), $2, $3, [47])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [60]) = $1
	*($5 + [56]) = $0
	*($5 + [68]) = $1
	*($5 + [64]) = ($5 + [24])
	*($5 + [72]) = ($5 + [16])
	*($5 + [76]) = ($5 + [40])
	*($5 + [48]) = ($5 + [56])
	CALL $142(($5 + [48]), $10, ($10 + [1]))
	$global$0 = ($5 + [96])
}

void .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9445])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9490])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9540])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $10($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $10($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [56]))
	$9 = *($1 + [60])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3899189678858829824, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$9 = *(($1 + [64]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3899189678858829823, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $38 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [32])
	$global$0 = $5
	if ( ((int_64)$1 == (int_64)9022140632959968560) ){ goto $label$1 }
	$6 = *($0)
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$1 }
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$1 }
	$6 = *($3)
	if ( ((int_64)$6 > (int_64)0) ){ goto $label$2 }
	CALL eosio_assert([0], [8292])
	
.LABEL $label$2
	$7 = *([0] + [8264])
	$8 = CALL $18($7)
	if ( ($8 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9755])
	goto $label$6 
	
.LABEL $label$7
	if ( ($8 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = (int_64)0
	
.LOOP $label$8:
	$9 = (($7 + $8) + [-1])
	$10 = *($9)
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9800])
	$10 = *($9)
	
.LABEL $label$9
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$8 }
	if ( ((int_64)*($3 + [8]) == (int_64)((int_64)((int_64)$2 << (int_64)8) | (int_64)4)) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_64)*($3 + [8]) == (int_64)4) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9733])
	
.LABEL $label$3
	if ( ((int_64)$1 != (int_64)9022140625770162064) ){ goto $label$10 }
	$8 = *($4)
	if ( ($8 & [1]) ){ goto $label$12 }
	$8 = uint_32($8 >> [1])
	$10 = ($4 + [1])
	goto $label$11 
	
.LABEL $label$12
	$8 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$11
	*($5 + [12]) = $8
	*($5 + [8]) = $10
	*($5) = *($5 + [8])
	$1 = *(CALL $40(($5 + [16]), $5))
	
.LABEL $label$10
	*($5 + [16]) = $6
	$3 = ($0 + [208])
	$10 = *(($0 + [236]))
	$7 = *(($0 + [232]))
	if ( ((int_32)$7 == (int_32)$10) ){ goto $label$15 }
	
.LOOP $label$17:
	$8 = ($10 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$16 }
	$10 = $8
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$7 == (int_32)$10) ){ goto $label$15 }
	if ( ((int_32)*(($9 + [92])) == (int_32)$3) ){ goto $label$18 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$18
	if ( $9 ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	$8 = CALL db_find_i64(*($3), *(($0 + [216])), (int_64)-3899173487572132544, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$14 }
	$9 = CALL $41($3, $8)
	if ( ((int_32)*($9 + [92]) == (int_32)$3) ){ goto $label$13 }
	CALL eosio_assert([0], [8513])
	goto $label$13 
	
.LABEL $label$14
	$9 = [0]
	CALL eosio_assert([0], [8730])
	
.LABEL $label$13
	$2 = *($0 + [160])
	*($5 + [24]) = ($5 + [16])
	if ( $9 ){ goto $label$19 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$19
	CALL $42($3, $9, $2, ($5 + [24]))
	*($5 + [16]) = $6
	$8 = [0]
	$10 = ($0 + [440])
	$9 = CALL db_lowerbound_i64(*($10), *(($0 + [448])), (int_64)-3899443509350574272, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$20 }
	$8 = CALL $43($10, $9)
	
.LABEL $label$20
	$2 = *($0 + [432])
	*($5 + [24]) = ($5 + [16])
	if ( $8 ){ goto $label$21 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$21
	CALL $44($10, $8, $2, ($5 + [24]))
	
.LABEL $label$1
	$global$0 = ($5 + [32])
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [8611])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $48($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $36 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [656])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [596]) = $2
	*($3 + [592]) = $2
	$5 = ($2 + $4)
	*($3 + [600]) = $5
	*($3 + [584]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8615])
	$5 = *(($3 + [600]))
	$2 = *($3 + [596])
	
.LABEL $label$5
	CALL memcpy(($3 + [584]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [596]) = $2
	*($3 + [576]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8615])
	$5 = *((($3 + [592]) + [8]))
	$2 = *($3 + [596])
	
.LABEL $label$6
	CALL memcpy(($3 + [576]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [596]) = $2
	*($3 + [568]) = (int_64)0
	*($3 + [560]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8615])
	$5 = *(($3 + [600]))
	$2 = *($3 + [596])
	
.LABEL $label$7
	CALL memcpy(($3 + [560]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [596]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8615])
	$2 = *($3 + [596])
	
.LABEL $label$8
	CALL memcpy(($3 + [64]), $2, [8])
	*(($5 = (($3 + [560]) + [8]))) = *($3 + [64])
	*($3 + [596]) = ($2 + [8])
	*($3 + [552]) = [0]
	*($3 + [544]) = (int_64)0
	CALL $37(($3 + [592]), ($3 + [544]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [592]) + [8]))
	*($3 + [48]) = *($3 + [592])
	$2 = *($2)
	*((($3 + [608]) + [8])) = $2
	*(($4 = (($3 + [624]) + [8]))) = $2
	$6 = *($3 + [48])
	*($3 + [624]) = $6
	*($3 + [608]) = $6
	$2 = *($4)
	*((($3 + [640]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$1 = *($3 + [624])
	*($3 + [80]) = $1
	*($3 + [640]) = $1
	*(($3 + [104])) = $0
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [140])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*($3 + [96]) = $0
	*($3 + [224]) = $0
	*(($3 + [240])) = $0
	*(($3 + [232])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [360])) = $0
	*($3 + [312]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [368])) = $0
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [398])) = [0]
	*(($3 + [396])) = [0]
	*(($3 + [400])) = ($3 + [224])
	*(($3 + [404])) = ($3 + [96])
	*(($3 + [408])) = ($3 + [496])
	*(($3 + [416])) = (int_64)0
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = (int_64)0
	*(($3 + [536])) = [0]
	*($3 + [496]) = $0
	*(($4 = (($3 + [32]) + [8]))) = *($5)
	*($3 + [32]) = *($3 + [560])
	$0 = *($3 + [576])
	$1 = *($3 + [584])
	$2 = CALL $21(($3 + [16]), ($3 + [544]))
	*(($3 + [8])) = *($4)
	*($3) = *($3 + [32])
	CALL $38(($3 + [64]), $1, $0, $3, $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*($2 + [8]))
	
.LABEL $label$9
	CALL $29(($3 + [64]))
	if ( ((*($3 + [544]) & [1]) == 0) ){ goto $label$10 }
	CALL $10(*(($3 + [552])))
	
.LABEL $label$10
	$global$0 = ($3 + [656])
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $39($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $8($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $24($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $24($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $20($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $10($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8564])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $8([72])) + [52]) = $0
	*($5 + [8]) = (int_64)0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [28])
	*($3 + [60]) = ($5 + [32])
	*($3 + [64]) = ($5 + [36])
	*($3 + [68]) = ($5 + [40])
	*($3 + [72]) = ($5 + [48])
	CALL $131(($3 + [40]), ($3 + [32]))
	*($5 + [56]) = $1
	*($5 + [60 align=4]) = (int_64)-1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $130(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$2 = ($global$0 - [112])
	$global$0 = $2
	$3 = *($0 + [88])
	$4 = ($3 + [48])
	$5 = *($1 + [4])
	$6 = *($5 + [8])
	$8 = *(($3 + [76]))
	$7 = *(($3 + [72]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LOOP $label$5:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$4 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	if ( ((int_32)*(($10 + [92])) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$6
	if ( $10 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$9 = CALL db_find_i64(*($4), *(($3 + [56])), (int_64)-3899173487572132544, $6)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$2 }
	$10 = CALL $41($4, $9)
	if ( ((int_32)*($10 + [92]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8513])
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	CALL eosio_assert([0], [8730])
	
.LABEL $label$1
	$11 = *($10 + [16])
	*($2 + [24]) = $11
	$6 = *($10 + [40])
	*($2 + [16]) = $6
	$12 = *($10 + [24])
	*($2 + [8]) = $12
	$13 = *($5 + [40])
	if ( ((int_64)$13 < (int_64)1) ){ goto $label$7 }
	$14 = $13
	if ( ((uint_64)$12 >= (uint_64)$13) ){ goto $label$8 }
	CALL eosio_assert([0], [9618])
	$14 = *(($5 + [40]))
	
.LABEL $label$8
	*($2 + [24]) = ((int_64)$11 + (int_64)$14)
	*($2 + [8]) = (int_64))($12 - $13)
	
.LABEL $label$7
	$13 = ((int_64)*($5 + [32]) * (int_64)50000)
	if ( ((uint_64)$6 >= (uint_64)$13) ){ goto $label$9 }
	CALL eosio_assert([0], [9671])
	
.LABEL $label$9
	*($2 + [16]) = (int_64))($6 - $13)
	$9 = *(($0 + [88]))
	$8 = ($9 + [48])
	$6 = *($9)
	*($2 + [44]) = ($2 + [8])
	*($2 + [40]) = ($2 + [24])
	*($2 + [48]) = ($2 + [16])
	if ( $10 ){ goto $label$10 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$10
	CALL $105($8, $10, $6, ($2 + [40]))
	$3 = *($0 + [92])
	$4 = ($3 + [88])
	$6 = *($5 + [16])
	$8 = *(($3 + [116]))
	$7 = *(($3 + [112]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$13 }
	
.LOOP $label$15:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$14 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$13 }
	if ( ((int_32)*($10 + [20]) == (int_32)$4) ){ goto $label$16 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$16
	if ( $10 ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	$9 = CALL db_find_i64(*(($3 + [88])), *(($3 + [96])), (int_64)-3899189674848550912, $6)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$12 }
	$10 = CALL $99($4, $9)
	if ( ((int_32)*($10 + [20]) == (int_32)$4) ){ goto $label$11 }
	CALL eosio_assert([0], [8513])
	goto $label$11 
	
.LABEL $label$12
	$10 = [0]
	CALL eosio_assert([0], [8587])
	
.LABEL $label$11
	$15 = ($5 + [16])
	$9 = *($10 + [8])
	$8 = *(($10 + [12]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$19 }
	$3 = ((int_32)($8 - $9) / (int_32)[20])
	$8 = [0]
	$7 = (*($5 + [24]) & [65535])
	
.LOOP $label$20:
	if ( ((int_32)*($9) == (int_32)$7) ){ goto $label$18 }
	$9 = ($9 + [20])
	$8 = ($8 + [1])
	if ( ($8 <= $3) ){ goto $label$20 }
	
.LABEL $label$19
	*($2 + [4]) = [-1]
	$16 = ($5 + [36])
	goto $label$17 
	
.LABEL $label$18
	*($2 + [4]) = $8
	*($2 + [104]) = ((int_32)*(($5 + [32])) * (int_32)*($5 + [36]))
	$9 = *(($0 + [92]))
	$8 = ($9 + [88])
	$6 = *($9)
	*($2 + [44]) = ($2 + [104])
	*($2 + [40]) = ($2 + [4])
	if ( $10 ){ goto $label$21 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$21
	$16 = ($5 + [36])
	CALL $150($8, $10, $6, ($2 + [40]))
	
.LABEL $label$17
	$17 = ($5 + [32])
	$3 = *(($0 + [92]))
	$4 = ($3 + [8])
	$6 = *($15)
	$8 = *(($3 + [36]))
	$7 = *(($3 + [32]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$24 }
	
.LOOP $label$26:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$25 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$24 }
	if ( ((int_32)*($10 + [116]) == (int_32)$4) ){ goto $label$27 }
	CALL eosio_assert([0], [8513])
	
.LABEL $label$27
	if ( $10 ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$24
	$9 = CALL db_find_i64(*($4), *(($3 + [16])), (int_64)-3899294111387090944, $6)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$23 }
	$10 = CALL $56($4, $9)
	if ( ((int_32)*($10 + [116]) == (int_32)$4) ){ goto $label$22 }
	CALL eosio_assert([0], [8513])
	goto $label$22 
	
.LABEL $label$23
	$10 = [0]
	CALL eosio_assert([0], [8587])
	
.LABEL $label$22
	$6 = *($3)
	*($2 + [44]) = $17
	*($2 + [40]) = $16
	*($2 + [48]) = $3
	*($2 + [52]) = $15
	if ( $10 ){ goto $label$28 }
	CALL eosio_assert([0], [8775])
	
.LABEL $label$28
	CALL $151($4, $10, $6, ($2 + [40]))
	$8 = *(($5 + [32]))
	$9 = *($5 + [28])
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$29 }
	$10 = *(($5 + [36]))
	$7 = *(($5 + [24]))
	$6 = *(($5 + [16]))
	$13 = *(($5 + [8]))
	$3 = *($5 + [48])
	*($2 + [96]) = *($5)
	*($2 + [104]) = $13
	*($2 + [88]) = $6
	*($2 + [86]) = $7
	*($2 + [80]) = ($9 - $8)
	*($2 + [79]) = $10
	*($2 + [72]) = $3
	$6 = *($0)
	*($2 + [40]) = $0
	*($2 + [44]) = ($2 + [96])
	*($2 + [48]) = ($2 + [104])
	*($2 + [52]) = ($2 + [88])
	*($2 + [56]) = ($2 + [86])
	*($2 + [60]) = ($2 + [80])
	*($2 + [64]) = ($2 + [72])
	*($2 + [68]) = ($2 + [79])
	CALL $106(($2 + [32]), ($0 + [48]), $6, ($2 + [40]))
	
.LABEL $label$29
	$6 = *($1)
	$9 = (CASTING uint_32)(uint_64 (uint_64)$6 >> (uint_64)(int_64)32)
	if ( $9) ){ goto $label$30 }
	CALL eosio_assert([0], [9381])
	CALL eosio_assert([0], [9415])
	
.LABEL $label$30
	$8 = ($0 + [8])
	$10 = CALL db_next_i64(*($9 + [56]), ($2 + [40]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$31 }
	CALL $34((CASTING uint_32)(uint_64 $6), $10)
	
.LABEL $label$31
	CALL $108($8, $9)
	$global$0 = ($2 + [112])
}

int_32 .FUNC $32 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((*($3 + [104]) & [1]) == 0) ){ goto $label$10 }
	CALL $10(*(($3 + [112])))
	if ( ((*($3 + [92]) & [1]) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((*($3 + [92]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $10(*(($3 + [100])))
	if ( (*($3 + [80]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $10(*(($3 + [88])))
	
.LABEL $label$6
	CALL $10($3)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $10($3)
	
.LABEL $label$1
	return $0
}

void .FUNC $33 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [512])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [496])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [496])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8615])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [36])) = ($2 + [8])
	*(($3 + [40])) = $6
	*(($3 + [56])) = $0
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = (int_64)0
	$4 = [0]
	*(($3 + [88])) = [0]
	*(($3 + [92])) = [0]
	*(($3 + [96])) = $0
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [24]) = $1
	*($3 + [16]) = $0
	*($3 + [32]) = $2
	*($3 + [48]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*(($3 + [256])) = [0]
	*(($2 = ($3 + [272]))) = $0
	*($3 + [176]) = $0
	*($3 + [264]) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [280])) = $0
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [308])) = [0]
	*(($3 + [312])) = $0
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [350])) = [0]
	*(($3 + [348])) = [0]
	*(($3 + [352])) = ($3 + [176])
	*(($3 + [356])) = ($3 + [48])
	*(($3 + [360])) = ($3 + [448])
	*(($3 + [368])) = (int_64)0
	*(($3 + [456])) = $0
	*($3 + [448]) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [464])) = $0
	*(($3 + [480])) = (int_64)0
	*(($3 + [488])) = [0]
	$5 = ($3 + [264])
	$6 = CALL db_find_i64($0, $0, (int_64)-3899189678858829824, *($3 + [496]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$7 }
	$4 = CALL $34($2, $6)
	if ( ((int_32)*($4 + [52]) == (int_32)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [8513])
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [9593])
	
.LABEL $label$6
	CALL require_auth(*($4 + [8]))
	*($3 + [508]) = $4
	*($3 + [504]) = $2
	*($3 + [8]) = *($3 + [504])
	CALL $35($5, ($3 + [8]))
	CALL $29(($3 + [16]))
	$global$0 = ($3 + [512])
}

int_32 .FUNC $30 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *(($0 + [72]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [76])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	$5 = *($4 + [76])
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [80])) = $5
	CALL $10($5)
	
.LABEL $label$6
	CALL $10($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [72]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$1
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$7 }
	$2 = ($0 + [36])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	$5 = *($4 + [80])
	if ( ($5 == 0) ){ goto $label$12 }
	*(($4 + [84])) = $5
	CALL $10($5)
	
.LABEL $label$12
	CALL $10($4)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($0 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$3 = $1
	
.LABEL $label$8
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$7
	return $0
}

int_32 .FUNC $31 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $10(*(($3 + [40])))
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $10(*(($3 + [28])))
	if ( (*($3 + [8]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $10(*(($3 + [16])))
	
.LABEL $label$6
	CALL $10($3)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $10($3)
	
.LABEL $label$1
	return $0
}