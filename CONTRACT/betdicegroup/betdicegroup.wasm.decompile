(data (i32.const 4) "P\84\00\00")
(data (i32.const 16) "Invalid hex character\00")
(data (i32.const 48) "0123456789abcdef\00")
(data (i32.const 80) "invalid sha256\00")
(data (i32.const 96) "invalid sha1\00")
(data (i32.const 112) "invalid first pos\00")
(data (i32.const 144) "parse memo error\00")
(data (i32.const 176) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\ff\ff\ff\ff\ff\ff\ff\t\n\0b\0c\0d\0e\0f\10\ff\11\12\13\14\15\ff\16\17\18\19\1a\1b\1c\1d\1e\1f \ff\ff\ff\ff\ff\ff!\"#$%&\'()*+\ff,-./0123456789\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 432) "carry == 0\00")
(data (i32.const 448) "/contract/PlatformContract/utils.hpp\00")
(data (i32.const 496) "DecodeBase58\00")
(data (i32.const 512) "No delimiter in signature\00")
(data (i32.const 544) "SIG\00")
(data (i32.const 560) "Signature Key has invalid prefix\00")
(data (i32.const 608) "No curve in signature\00")
(data (i32.const 640) "K1\00")
(data (i32.const 656) "R1\00")
(data (i32.const 672) "Incorrect curve\00")
(data (i32.const 688) "Signature has no data\00")
(data (i32.const 720) "Decode signature failed\00")
(data (i32.const 752) "Invalid signature\00")
(data (i32.const 784) "Signature checksum mismatch\00")
(data (i32.const 816) "EOS\00")
(data (i32.const 832) "Decode public key failed\00")
(data (i32.const 864) "Invalid public key\00")
(data (i32.const 896) "Public key checksum mismatch\00")
(data (i32.const 928) "-\00")
(data (i32.const 960) ".\00")
(data (i32.const 976) " \00")
(data (i32.const 992) "read_transaction failed\00")
(data (i32.const 1024) "read\00")
(data (i32.const 1040) "betdicetasks\00")
(data (i32.const 1056) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 1120) "cannot pass end iterator to modify\00")
(data (i32.const 1168) "cannot create objects in table of another contract\00")
(data (i32.const 1232) "write\00")
(data (i32.const 1248) "object passed to modify is not in multi_index\00")
(data (i32.const 1296) "cannot modify objects in table of another contract\00")
(data (i32.const 1360) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1424) "error reading iterator\00")
(data (i32.const 1456) "Not supported symbol\00")
(data (i32.const 1488) "next primary key in table is at autoincrement limit\00")
(data (i32.const 1552) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 1616) "cannot decrement iterator at beginning of table\00")
(data (i32.const 1664) "betdicegroup\00")
(data (i32.const 1680) "cannot increment end iterator\00")
(data (i32.const 1712) "get\00")
(data (i32.const 1728) "PLEASE DON\'T ABUSE\00")
(data (i32.const 1760) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1824) "invalid symbol name\00")
(data (i32.const 1856) "attempt to add asset with different symbol\00")
(data (i32.const 1904) "addition underflow\00")
(data (i32.const 1936) "addition overflow\00")
(data (i32.const 1968) "betdicehouse\00")
(data (i32.const 1984) "payout\00")
(data (i32.const 2000) "transfer\00")
(data (i32.const 2016) "No action from vipinit\00")
(data (i32.const 2048) "Loop userVipDecay\00")
(data (i32.const 2080) "No user vip\00")
(data (i32.const 2096) "All user decay\00")
(data (i32.const 2112) "VIP max count\00")
(data (i32.const 2128) "No action from vipdecay\00")
(data (i32.const 2160) "Loop jackpot\00")
(data (i32.const 2176) "Loop jackpot1\00")
(data (i32.const 2192) "Loop jackpot2\00")
(data (i32.const 2208) "Jackpot, id: \00")
(data (i32.const 2224) "Loop contest3\00")
(data (i32.const 2240) "Loop find jackpot remove\00")
(data (i32.const 2272) "No pending jackpot\00")
(data (i32.const 2304) "No pending jackpot2\00")
(data (i32.const 2336) "Read to reomve\00")
(data (i32.const 2352) "remove\00")
(data (i32.const 2368) "remove max\00")
(data (i32.const 2384) "all max\00")
(data (i32.const 2400) "cannot pass end iterator to erase\00")
(data (i32.const 2448) "Nothing to do\00")
(data (i32.const 2464) "object passed to erase is not in multi_index\00")
(data (i32.const 2512) "cannot erase objects in table of another contract\00")
(data (i32.const 2576) "attempt to remove object that was not in multi_index\00")
(data (i32.const 2640) "Nothing to claim\00")
(data (i32.const 2672) "betdicelotto\00")
(data (i32.const 2688) "addticket\00")
(data (i32.const 2704) "No exists quest found\00")
(data (i32.const 2736) "Loop contest\00")
(data (i32.const 2752) "Loop contest1\00")
(data (i32.const 2768) "Loop contest4\00")
(data (i32.const 2784) "attempt to subtract asset with different symbol\00")
(data (i32.const 2832) "subtraction underflow\00")
(data (i32.const 2864) "subtraction overflow\00")
(data (i32.const 2896) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 2960) "Rewards too much!\00")
(data (i32.const 2992) "active\00")
(data (i32.const 3008) "contest4pay\00")
(data (i32.const 3024) "Process contest\00")
(data (i32.const 3040) "Loop find contest remove\00")
(data (i32.const 3072) "No pending contest\00")
(data (i32.const 3104) "No pending contest2\00")
(data (i32.const 3136) "Not yet pay\00")
(data (i32.const 3152) "cannot find contest\00")
(data (i32.const 3184) "cannot find pay\00")
(data (i32.const 3200) "contest DICE distribution prize, id: \00")
(data (i32.const 3248) ", rank: \00")
(data (i32.const 3264) "betdicetoken\00")
(data (i32.const 3280) "issue\00")
(data (i32.const 3296) "Loop contest2\00")
(data (i32.const 3312) "contest3pay\00")
(data (i32.const 3328) "No exists contest found\00")
(data (i32.const 3360) "e\00")
(data (i32.const 3376) "eosio.token\00")
(data (i32.const 3392) "DICE\00")
(data (i32.const 3408) "BLACK\00")
(data (i32.const 3424) "eosblackteam\00")
(data (i32.const 3440) "EBTC\00")
(data (i32.const 3456) "bitpietokens\00")
(data (i32.const 3472) "EETH\00")
(data (i32.const 3488) "EUSD\00")
(data (i32.const 3504) "BT\00")
(data (i32.const 3520) "eosbtextoken\00")
(data (i32.const 3536) "MEETONE\00")
(data (i32.const 3552) "eosiomeetone\00")
(data (i32.const 3568) "EGT\00")
(data (i32.const 3584) "eosiotokener\00")
(data (i32.const 3600) "TPT\00")
(data (i32.const 3616) "eosiotptoken\00")
(data (i32.const 3632) "ZKS\00")
(data (i32.const 3648) "zkstokensr4u\00")
(data (i32.const 3664) "KARMA\00")
(data (i32.const 3680) "therealkarma\00")
(data (i32.const 3696) "TGC\00")
(data (i32.const 3712) "eostgctoken1\00")
(data (i32.const 3728) "TEA\00")
(data (i32.const 3744) "linzongsheng\00")
(data (i32.const 3760) "POKER\00")
(data (i32.const 3776) "eospokercoin\00")
(data (i32.const 3792) "DBET\00")
(data (i32.const 3808) "dbetminepool\00")
(data (i32.const 3824) "ZKSPLAY\00")
(data (i32.const 3840) "EPT\00")
(data (i32.const 3856) "alibabapoole\00")
(data (i32.const 3872) "OCT\00")
(data (i32.const 3888) "octtothemoon\00")
(data (i32.const 3904) "LT\00")
(data (i32.const 3920) "luckbettoken\00")
(data (i32.const 3936) "PIXEOS\00")
(data (i32.const 3952) "pixeos1token\00")
(data (i32.const 3968) "OSDS\00")
(data (i32.const 3984) "oasis.x\00")
(data (i32.const 4000) "contest 3 prize, id: \00")
(data (i32.const 4032) "contest2pay\00")
(data (i32.const 4048) "contest 2 prize, id: \00")
(data (i32.const 4080) "here\00")
(data (i32.const 4096) "contestpay2\00")
(data (i32.const 4112) "Remove contest\00")
(data (i32.const 4128) "contest prize, id: \00")
(data (i32.const 4160) "onpayout\00")
(data (i32.const 4176) "Not a valid user\00")
(data (i32.const 4208) "premium refer not found\00")
(data (i32.const 4240) "premium refer is added\00")
(data (i32.const 4272) "onbet\00")
(data (i32.const 4288) "Payout status not found\00")
(data (i32.const 4320) "Payout status not correct\00")
(data (i32.const 4352) "Not yet payout\00")
(data (i32.const 4368) "START PAYOUT\00")
(data (i32.const 4384) "LOCK STAKE\00")
(data (i32.const 4400) "betdicestake\00")
(data (i32.const 4416) "setstatus\00")
(data (i32.const 4432) "CHANGED\00")
(data (i32.const 4448) "REMOVE PAYOUTS\00")
(data (i32.const 4464) "Transfer asset\00")
(data (i32.const 4480) "betdicegiver\00")
(data (i32.const 4496) "Transfer\00")
(data (i32.const 4512) "sovmintofeos\00")
(data (i32.const 4528) "xtransfer\00")
(data (i32.const 4544) "Payout\00")
(data (i32.const 4560) "Add to payout table\00")
(data (i32.const 4592) "Add to payout history\00")
(data (i32.const 4624) "Remove payoutlogs\00")
(data (i32.const 4656) "Do payout for users\00")
(data (i32.const 4688) "No stats found\00")
(data (i32.const 4704) "userStakedAmount:\00")
(data (i32.const 4736) "totalStakedAmount:\00")
(data (i32.const 4768) "do now\00")
(data (i32.const 4784) "Too many precisions in asset\00")
(data (i32.const 4816) "UNLOCK STAKE\00")
(data (i32.const 4832) "wrong status\00")
(data (i32.const 4848) "Modify userbalance record\00")
(data (i32.const 4880) "Add uesrbalance record\00")
(data (i32.const 4912) ",\00")
(data (i32.const 4928) "REMAIN: \00")
(data (i32.const 4940) "P\13\00\00")
(data (i32.const 4944) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 13376) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 13472) "%lu\00")
(data (i32.const 13488) "%llu\00")
(data (i32.const 13496) "\88C\00\00")
(data (i32.const 13504) "Assertion failed: %s (%s: %s: %d)\n\00")
(data (i32.const 13540) "\f84\00\00")
(data (i32.const 13560) "\05\00\00\00\00\00\00\00\00\00\00\00$\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00%\00\00\00&\00\00\00\985\00\00\00\04\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
(data (i32.const 14752) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 15216) "0123456789ABCDEF")
(data (i32.const 15232) "-+   0X0x\00")
(data (i32.const 15248) "(null)\00")
(data (i32.const 15264) "-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 15296) "inf\00")
(data (i32.const 15312) "INF\00")
(data (i32.const 15328) "nan\00")
(data (i32.const 15344) "NAN\00")
(data (i32.const 15360) ".\00")
(data (i32.const 15376) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 15472) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(data (i32.const 17288) "\05\00\00\00\00\00\00\00\00\00\00\00$\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00&\00\00\00 D\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
(data (i32.const 17440) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 17456) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 17472) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(import "env" "__addtf3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__eqtf2" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "__extenddftf2" (func $fimport$2 (param i32 f64)))
(import "env" "__fixtfsi" (func $fimport$3 (param i64 i64) (result i32)))
(import "env" "__fixunsdfti" (func $fimport$4 (param i32 f64)))
(import "env" "__fixunstfsi" (func $fimport$5 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__floatunsitf" (func $fimport$7 (param i32 i32)))
(import "env" "__floatuntidf" (func $fimport$8 (param i64 i64) (result f64)))
(import "env" "__multf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$10 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$11 (param i32 i64 i64 i64 i64)))
(import "env" "__unordtf2" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "abort" (func $fimport$13))
(import "env" "action_data_size" (func $fimport$14 (result i32)))
(import "env" "current_receiver" (func $fimport$15 (result i64)))
(import "env" "current_time" (func $fimport$16 (result i64)))
(import "env" "db_end_i64" (func $fimport$17 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$19 (param i32 i32 i32) (result i32)))
(import "env" "db_idx128_find_primary" (func $fimport$20 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx128_lowerbound" (func $fimport$21 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx128_next" (func $fimport$22 (param i32 i32) (result i32)))
(import "env" "db_idx128_remove" (func $fimport$23 (param i32)))
(import "env" "db_idx128_store" (func $fimport$24 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx128_update" (func $fimport$25 (param i32 i64 i32)))
(import "env" "db_idx64_find_primary" (func $fimport$26 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$27 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$28 (param i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$29 (param i32)))
(import "env" "db_idx64_store" (func $fimport$30 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$31 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$32 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$33 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$34 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$35 (param i32)))
(import "env" "db_store_i64" (func $fimport$36 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$37 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$38 (param i32 i32)))
(import "env" "eosio_exit" (func $fimport$39 (param i32)))
(import "env" "is_account" (func $fimport$40 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$41 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$42 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$43 (param i32 i32 i32) (result i32)))
(import "env" "printi" (func $fimport$44 (param i64)))
(import "env" "printn" (func $fimport$45 (param i64)))
(import "env" "prints" (func $fimport$46 (param i32)))
(import "env" "prints_l" (func $fimport$47 (param i32 i32)))
(import "env" "printui" (func $fimport$48 (param i64)))
(import "env" "read_action_data" (func $fimport$49 (param i32 i32) (result i32)))
(import "env" "read_transaction" (func $fimport$50 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$51 (param i64)))
(import "env" "require_auth2" (func $fimport$52 (param i64 i64)))
(import "env" "ripemd160" (func $fimport$53 (param i32 i32 i32)))
(import "env" "send_deferred" (func $fimport$54 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$55 (param i32 i32)))
(import "env" "sha256" (func $fimport$56 (param i32 i32 i32)))
(import "env" "transaction_size" (func $fimport$57 (result i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_Z13uint64_stringy" (func $5))
(export "_Z8from_hexc" (func $7))
(export "_Z8from_hexRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPcj" (func $8))
(export "_Z6to_hexPKcm" (func $9))
(export "_Z13sha256_to_hexRK11checksum256" (func $10))
(export "_Z11sha1_to_hexRK11checksum160" (func $11))
(export "_Z11uint64_hashRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE" (func $12))
(export "_Z11uint64_hashRK11checksum256" (func $13))
(export "_Z13hex_to_sha256RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE" (func $14))
(export "_Z11hex_to_sha1RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE" (func $15))
(export "_Z7sub2sepRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPS5_RKcRKjRKb" (func $16))
(export "_Z12DecodeBase58PKcRNSt3__16vectorIhNS1_9allocatorIhEEEE" (func $17))
(export "_Z13decode_base58RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_6vectorIhNS3_IhEEEE" (func $20))
(export "_Z10str_to_sigRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKb" (func $21))
(export "_Z10str_to_pubRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKb" (func $22))
(export "_Z16symbol_to_stringN5eosio5assetE" (func $23))
(export "_Z15asset_to_stringN5eosio5assetE" (func $24))
(export "_Z18get_transaction_idv" (func $26))
(export "apply" (func $27))
(export "malloc" (func $413))
(export "free" (func $416))
(export "_ZNSt3__19to_stringEm" (func $433))
(export "_ZNSt3__19to_stringEy" (func $435))
(export "isspace" (func $439))
(export "__assert_fail" (func $440))
(export "fprintf" (func $441))
(export "fflush" (func $442))
(export "__ofl_lock" (func $443))
(export "__lockfile" (func $444))
(export "__unlockfile" (func $445))
(export "__ofl_unlock" (func $446))
(export "__unlock" (func $447))
(export "__lock" (func $448))
(export "__stdio_close" (func $449))
(export "__stdout_write" (func $450))
(export "__stdio_seek" (func $451))
(export "__stdio_write" (func $452))
(export "vfprintf" (func $453))
(export "__fwritex" (func $455))
(export "__errno_location" (func $457))
(export "strerror" (func $458))
(export "strnlen" (func $459))
(export "wctomb" (func $460))
(export "__signbitl" (func $461))
(export "__fpclassifyl" (func $462))
(export "frexpl" (func $463))
(export "wcrtomb" (func $464))
(export "memchr" (func $465))
(export "__lctrans" (func $466))
(export "__lctrans_impl" (func $467))
(export "__mo_lookup" (func $468))
(export "strcmp" (func $469))
(export "__towrite" (func $470))
(export "floor" (func $471))
(export "pow" (func $472))
(export "sqrt" (func $473))
(export "fabs" (func $474))
(export "scalbn" (func $475))
(export "snprintf" (func $476))
(export "vsnprintf" (func $477))
(export "llabs" (func $479))
(export "memcmp" (func $480))
(export "strlen" (func $481))
(table $0 40 40 anyfunc)
(elem (i32.const 0) $482 $75 $63 $69 $65 $47 $58 $35 $54 $43 $51 $39 $29 $42 $52 $37 $56 $71 $61 $73 $45 $68 $64 $38 $55 $40 $59 $66 $49 $33 $41 $31 $57 $36 $53 $478 $449 $450 $451 $452)



int_32 .FUNC __mo_lookup (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0)
	$10 = ((int_32)$3 == (int_32)[-1794895138])
	$9 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	$4 = *($0 + [8])
	$5 = ( $4 ? $9 : $10 )
	if ( ((uint_32)$5 >= (uint_32)uint_32($1 >> [2])) ){ goto $label$4 }
	$12 = ($1 - ($5 << [2]))
	$11 = *($0 + [12])
	$6 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$6 >= (uint_32)$12) ){ goto $label$3 }
	$11 = *($0 + [16])
	$10 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$10 >= (uint_32)$12) ){ goto $label$2 }
	if ( ((($10 | $6) & [3]) == 0) ){ goto $label$1 }
	return [0]
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$12 = uint_32($6 >> [2])
	if ( ((int_32)$3 != (int_32)[-1794895138]) ){ goto $label$16 }
	$5 = uint_32($5 >> [1])
	$6 = ($5 << [1])
	$9 = ($0 + (($6 + $12) << [2]))
	$11 = *(($9 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$15 }
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)($1 - $11)) ){ goto $label$14 }
	$9 = $5
	$7 = [0]
	
.LOOP $label$17:
	if ( *(($0 + ($11 + $8))) ){ goto $label$9 }
	$11 = CALL strcmp($2, ($0 + $11))
	if ( ($11 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$7 }
	$13 = [0]
	$4 = ( $9 ? ($4 - $9) : $11 )
	$9 = uint_32($4 >> [1])
	$11 = ((int_32)$11 < (int_32)[0])
	$7 = ( $7 ? $5 : $11 )
	$5 = ($7 + $9)
	$6 = ($5 << [1])
	$8 = ($0 + (($6 + $12) << [2]))
	$11 = *(($8 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$10 }
	$8 = *($8)
	if ( ($8 <= ($1 - $11)) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	$8 = uint_32($9 >> [1])
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$13 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ((uint_32)$11 >= (uint_32)($1 - $4)) ){ goto $label$12 }
	$5 = $8
	$7 = [0]
	
.LOOP $label$18:
	if ( *(($0 + ($4 + $11))) ){ goto $label$8 }
	$4 = CALL strcmp($2, ($0 + $4))
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$6 }
	$13 = [0]
	$9 = ( $5 ? ($9 - $5) : $4 )
	$5 = uint_32($9 >> [1])
	$4 = ((int_32)$4 < (int_32)[0])
	$7 = ( $7 ? $8 : $4 )
	$8 = ($7 + $5)
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$10 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ($11 <= ($1 - $4)) ){ goto $label$18 }
	goto $label$10 
	
.LABEL $label$15
	return [0]
	
.LABEL $label$14
	return [0]
	
.LABEL $label$13
	return [0]
	
.LABEL $label$12
	return [0]
	
.LABEL $label$11
	$9 = ((int_32)$3 == (int_32)[-1794895138])
	$10 = ($0 + (($6 + uint_32($10 >> [2])) << [2]))
	$4 = *(($10 + [4]))
	$11 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$5 }
	$13 = [0]
	$4 = *($10)
	$4 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$4 >= (uint_32)($1 - $11)) ){ goto $label$10 }
	return ( [0] ? ($0 + $11) : *(($0 + ($11 + $4))) )
	
.LABEL $label$10
	return $13
	
.LABEL $label$9
	return [0]
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	return [0]
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	return [0]
}

int_32 .FUNC strcmp (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ((int_32)$2 != (int_32)($3 & [255])) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	
.LOOP $label$2:
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)($3 & [255])) ){ goto $label$2 }
	
.LABEL $label$1
	return ($2 - ($3 & [255]))
}

int_32 .FUNC __lctrans (int_32 $0, int_32 $1)
{
	return CALL __lctrans_impl($0, $1)
}

int_32 .FUNC __lctrans_impl (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL __mo_lookup(*($1), *($1 + [4]), $0)
	return ( $1 ? $0 : $1 )
	
.LABEL $label$1
	return ( [0] ? $0 : [0] )
}

int_32 .FUNC wcrtomb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL __errno_location()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL __errno_location()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC __fpclassifyl (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [3] ? [2] : ((int_64)((int_64)$2 | (int_64)$0) != (int_64)0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

void .FUNC frexpl (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$5 = ($4) & [32767]
	if ( ((int_32)$5) == (int_32)[32767]) ){ goto $label$1 }
	if ( $5 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($6, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL frexpl(($6 + [16]), *($6), *(($6 + [8])), $3)
	$4 = (*($3) + [-120])
	$2 = *($6 + [24])
	$1 = *($6 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($4 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($4 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	*($3) = $4
	
.LABEL $label$1
	*($0) = $1
	*(($0 + [8])) = $2
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC wctomb (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL wcrtomb($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC __signbitl (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

void .FUNC $121 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [36]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	CALL __fixunsdfti($5, *(*($3)))
	*(($1 + [24])) = *(($5 + [8]))
	*($1 + [16]) = *($5)
	$4 = *($1)
	*($1 + [32]) = *(*($3 + [4]))
	CALL eosio_assert([1], [1360])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($5 + [16]), $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy((($5 + [16]) | [8]), ($1 + [16]), [16])
	CALL eosio_assert([1], [1232])
	CALL memcpy((($5 + [16]) + [24]), ($1 + [32]), [4])
	CALL db_update_i64(*(($1 + [40])), $2, ($5 + [16]), [28])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $120 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	*($8 + [72]) = $1
	if ( (CALL is_account($1) == 0) ){ goto $label$1 }
	*(($8 + [64])) = [0]
	*($8 + [48]) = (int_64)-1
	*($8 + [56]) = (int_64)0
	$7 = *($0)
	*($8 + [32]) = $7
	*($8 + [40]) = $7
	$6 = CALL db_find_i64($7, $7, (int_64)-3020372007511536368, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $119(($8 + [32]), $6)
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)($8 + [32])), [1056])
	goto $label$2 
	
.LABEL $label$3
	$1 = *($0)
	*($8 + [16]) = ($8 + [72])
	CALL $122(($8 + [24]), ($8 + [32]), $1, ($8 + [16]))
	$1 = *($8 + [72])
	$3 = *(($8 + [56]))
	$5 = *(($8 + [60]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$4 }
	$0 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$5:
	if ( ((int_64)*(*($0)) == (int_64)$1) ){ goto $label$4 }
	$5 = $0
	$6 = ($0 + [-24])
	$0 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	$0 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)($8 + [32])), [1056])
	goto $label$2 
	
.LABEL $label$6
	$0 = [0]
	$6 = CALL db_find_i64(*($8 + [32]), *(($8 + [40])), (int_64)-3020372007511536368, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$0 = CALL $119(($8 + [32]), $6)
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)($8 + [32])), [1056])
	
.LABEL $label$2
	$1 = ((int_64)*($0 + [16]) + (int_64)(CASTING int_64)(int_32 $2))
	*($8 + [24]) = $1
	*($8 + [16]) = *($0 + [8])
	if ( (uint_64)($1 <= (int_64)300) ){ goto $label$8 }
	*($8 + [16]) = (int_64)5
	goto $label$7 
	
.LABEL $label$8
	if ( (uint_64)($1 <= (int_64)100) ){ goto $label$9 }
	*($8 + [16]) = (int_64)4
	goto $label$7 
	
.LABEL $label$9
	if ( (uint_64)($1 <= (int_64)50) ){ goto $label$10 }
	*($8 + [16]) = (int_64)3
	goto $label$7 
	
.LABEL $label$10
	if ( (uint_64)($1 <= (int_64)25) ){ goto $label$11 }
	*($8 + [16]) = (int_64)2
	goto $label$7 
	
.LABEL $label$11
	if ( (uint_64)($1 <= (int_64)10) ){ goto $label$12 }
	*($8 + [16]) = (int_64)1
	goto $label$7 
	
.LABEL $label$12
	*($8 + [16]) = (int_64)0
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [16])
	*($8 + [8]) = ($8 + [24])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [1120])
	CALL $123(($8 + [32]), $0, (int_64)0, ($8 + [8]))
	$5 = *($8 + [56])
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = ($8 + [60])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$14 }
	
.LOOP $label$15:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$16 }
	CALL $418($6)
	
.LABEL $label$16
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$15 }
	$0 = *(($8 + [56]))
	goto $label$13 
	
.LABEL $label$14
	$0 = $5
	
.LABEL $label$13
	*($4) = $5
	CALL $418($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [80])
}

int_64 .FUNC sqrt (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($7) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$2 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$6 }
	$8 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $8) ){ goto $label$4 }
	$8 = [1]
	$9 = $2
	goto $label$5 
	
.LABEL $label$6
	if ( ((($7 & [2147483647]) | $2) == 0) ){ goto $label$3 }
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = [1]
	
.LOOP $label$7:
	$8 = ($8 + [-21])
	$7 = uint_32($2 >> [11])
	$9 = ($2 << [21])
	$2 = $9
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$5
	$5 = [0]
	if ( ($7 & [1048576]) ){ goto $label$8 }
	$5 = [0]
	
.LOOP $label$9:
	$5 = ($5 + [1])
	$7 = ($7 << [1])
	if ( (($7 & [1048576]) == 0) ){ goto $label$9 }
	
.LABEL $label$8
	$2 = ($9 << $5)
	$8 = ($8 - $5)
	$7 = (uint_32($9 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$7 = (($7 & [1048575]) | [1048576])
	$10 = ($8 + [-1023])
	if ( (($10 & [1]) == 0) ){ goto $label$10 }
	$7 = (($7 << [1]) | uint_32($2 >> [31]))
	$2 = ($2 << [1])
	
.LABEL $label$10
	$7 = (uint_32($2 >> [31]) | ($7 << [1]))
	$5 = ($2 << [1])
	$4 = [0]
	$9 = [2097152]
	$8 = [0]
	
.LOOP $label$11:
	$6 = $5
	$5 = ($9 + $8)
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$12 }
	$4 = ($9 + $4)
	$7 = ($7 - $5)
	$8 = ($5 + $9)
	
.LABEL $label$12
	$7 = (($7 << [1]) | (uint_32($2 >> [30]) & [1]))
	$5 = ($6 << [1])
	$2 = $6
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$11 }
	$3 = uint_32($10 >> [1])
	$9 = [-2147483648]
	$10 = [0]
	$2 = [0]
	
.LOOP $label$13:
	$6 = ($2 + $9)
	if ( ((int_32)$7 > (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$14 }
	if ( ($5 <= $6) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (($7 - $8) + ( [-1] ? [0] : ($5 <= $6) ))
	$2 = ($6 + $9)
	$8 = ((((int_32)$6 < (int_32)[0]) & ((int_32)$2 > (int_32)[-1])) + $8)
	$10 = ($10 + $9)
	$5 = ($5 - $6)
	
.LABEL $label$14
	$7 = (uint_32($5 >> [31]) | ($7 << [1]))
	$5 = ($5 << [1])
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$13 }
	if ( (($5 | $7) == 0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$17 }
	$10 = (($10 & [1]) + $10)
	goto $label$16 
	
.LABEL $label$17
	$4 = ($4 + [1])
	$10 = [0]
	
.LABEL $label$16
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($3 << [20]) + int_32($4 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($4 << [31])))))
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
}

void .FUNC $364 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $417([64])) + [48]) = $1
	CALL $402(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [52])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $403(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $418($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC __stdout_write (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL __stdio_write($0, $1, $2)
}

int_32 .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1232])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $0, [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((int_32)(*($2 + [8]) - $1) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[48]))
	$5 = *($0 + [4])
	$4 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [16]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $5) > (int_32)[0]), [1232])
	CALL memcpy(*($7), ($8 + [16]), [1])
	$5 = (*($7) + [1])
	*($7) = $5
	if ( $3 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$2 = ($8 + [28])
	
.LOOP $label$3:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [16])
	*($2) = ($7 + [32])
	*($8 + [20]) = ($7 + [8])
	CALL $189(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [48])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $49 (int_32 $0, int_64 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [224])
	*([0] + [4]) = $12
	CALL require_auth(*($0))
	$7 = [0]
	*((($12 + [168]) + [32])) = [0]
	*($12 + [184]) = (int_64)-1
	*($12 + [192]) = (int_64)0
	$11 = *($0)
	*($12 + [168]) = $11
	*($12 + [176]) = $11
	*($12 + [204]) = [0]
	*((($12 + [128]) + [32])) = [0]
	*($12 + [136]) = $1
	*($12 + [128]) = $11
	*($12 + [144]) = (int_64)-1
	*($12 + [152]) = (int_64)0
	$0 = CALL db_find_i64($11, $11, (int_64)4983115765679915008, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $279(($12 + [168]), $0)
	CALL eosio_assert(((int_32)*($8 + [72]) == (int_32)($12 + [168])), [1056])
	$7 = *(($12 + [152]))
	$6 = *(($12 + [156]))
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$8 = [0]
	if ( ((int_32)[0] == (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	$0 = ($6 + [-24])
	$4 = ([0] - $7)
	
.LOOP $label$4:
	if ( ((int_64)*(*($0)) == (int_64)$2) ){ goto $label$1 }
	$6 = $0
	$5 = ($0 + [-24])
	$0 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	$6 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)($12 + [128])), [1056])
	goto $label$5 
	
.LABEL $label$6
	$6 = [0]
	$0 = CALL db_find_i64(*($12 + [128]), *(($12 + [136])), (int_64)4983115766110178784, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $334(($12 + [128]), $0)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)($12 + [128])), [1056])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [3152])
	$4 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($4, [3184])
	if ( ((int_64)*(($6 + [48])) < (int_64)1) ){ goto $label$7 }
	CALL _ZNSt3__19to_stringEy(($12 + [56]), $1)
	$0 = CALL $427(($12 + [56]), [0], [4128])
	$5 = ($0 + [8])
	*((($12 + [72]) + [8])) = *($5)
	*($12 + [72]) = *($0)
	*($0) = [0]
	*(($0 + [4])) = [0]
	*($5) = [0]
	$0 = CALL $424(($12 + [72]), [3248])
	$5 = ($0 + [8])
	*((($12 + [8]) + [8])) = *($5)
	*($12 + [8]) = *($0)
	*($0) = [0]
	*(($0 + [4])) = [0]
	*($5) = [0]
	CALL _ZNSt3__19to_stringEm(($12 + [208]), *($6 + [16]))
	$0 = *($12 + [208])
	$5 = ($0 & [1])
	$0 = CALL $423(($12 + [8]), ( *($12 + [216]) ? (($12 + [208]) | [1]) : $5 ), ( *($12 + [212]) ? uint_32($0 >> [1]) : $5 ))
	$5 = ($0 + [8])
	*((($12 + [112]) + [8])) = *($5)
	*($12 + [112]) = *($0)
	*($0) = [0]
	*(($0 + [4])) = [0]
	*($5) = [0]
	if ( ((*($12 + [208]) & [1]) == 0) ){ goto $label$8 }
	CALL $418(*((($12 + [208]) + [8])))
	
.LABEL $label$8
	if ( ((*($12 + [8]) & [1]) == 0) ){ goto $label$9 }
	CALL $418(*($12 + [16]))
	
.LABEL $label$9
	if ( ((*($12 + [72]) & [1]) == 0) ){ goto $label$10 }
	CALL $418(*($12 + [80]))
	
.LABEL $label$10
	if ( ((*($12 + [56]) & [1]) == 0) ){ goto $label$11 }
	CALL $418(*($12 + [64]))
	
.LABEL $label$11
	$2 = (int_64)0
	$11 = (int_64)59
	$0 = [1968]
	$9 = (int_64)0
	
.LOOP $label$12:
	$1 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$13 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$5 = ($5 + [165])
	goto $label$14 
	
.LABEL $label$15
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$1 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$13
	$0 = ($0 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$9 = ((int_64)$1 | (int_64)$9)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$12 }
	$2 = (int_64)0
	$1 = (int_64)59
	$0 = [1984]
	$10 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$21 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$5 = ($5 + [165])
	goto $label$19 
	
.LABEL $label$21
	$11 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$17
	$0 = ($0 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$16 }
	*($12 + [64]) = $10
	*($12 + [56]) = $9
	$3 = *(($8 + [24]))
	$2 = (int_64)0
	$1 = (int_64)59
	$0 = [2000]
	$9 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$27 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$5 = ($5 + [165])
	goto $label$25 
	
.LABEL $label$27
	$11 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$23
	$0 = ($0 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$9 = ((int_64)$11 | (int_64)$9)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$22 }
	$2 = (int_64)0
	$11 = (int_64)59
	$0 = [1968]
	$10 = (int_64)0
	
.LOOP $label$28:
	$1 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$29 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$5 = ($5 + [165])
	goto $label$30 
	
.LABEL $label$31
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$1 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$29
	$0 = ($0 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$1 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$28 }
	$2 = *(($6 + [24]))
	*(($12 + [36])) = *(($6 + [60]))
	*((($12 + [8]) + [24])) = *(($6 + [56]))
	*(($12 + [28])) = *(($6 + [52]))
	*($12 + [8]) = $10
	*($12 + [16]) = $2
	*($12 + [24]) = *(($6 + [48]))
	CALL $437(($12 + [40]), ($12 + [112]))
	$0 = CALL $108(($12 + [72]), ($12 + [56]), $3, $9, ($12 + [8]))
	CALL $109(($12 + [208]), $0)
	$5 = *($12 + [208])
	CALL send_inline($5, (*($12 + [212]) - $5))
	$5 = *($12 + [208])
	if ( ($5 == 0) ){ goto $label$32 }
	*($12 + [212]) = $5
	CALL $418($5)
	
.LABEL $label$32
	$5 = *($0 + [28])
	if ( ($5 == 0) ){ goto $label$33 }
	*(($0 + [32])) = $5
	CALL $418($5)
	
.LABEL $label$33
	$5 = *($0 + [16])
	if ( ($5 == 0) ){ goto $label$34 }
	*(($0 + [20])) = $5
	CALL $418($5)
	
.LABEL $label$34
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$35 }
	CALL $418(*(($12 + [48])))
	
.LABEL $label$35
	if ( ((*($12 + [112]) & [1]) == 0) ){ goto $label$7 }
	CALL $418(*($12 + [120]))
	
.LABEL $label$7
	CALL eosio_assert($4, [2400])
	CALL eosio_assert($4, [1680])
	$0 = CALL db_next_i64(*($6 + [68]), ($12 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$36 }
	CALL $334(($12 + [128]), $0)
	
.LABEL $label$36
	CALL $335(($12 + [128]), $6)
	$6 = *($12 + [152])
	if ( ($6 == 0) ){ goto $label$37 }
	$4 = ($12 + [156])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$39 }
	
.LOOP $label$40:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$41 }
	CALL $418($5)
	
.LABEL $label$41
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$40 }
	$0 = *(($12 + [152]))
	goto $label$38 
	
.LABEL $label$39
	$0 = $6
	
.LABEL $label$38
	*($4) = $6
	CALL $418($0)
	
.LABEL $label$37
	$4 = *($12 + [192])
	if ( ($4 == 0) ){ goto $label$42 }
	$7 = ($12 + [196])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$44 }
	
.LOOP $label$45:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$46 }
	$6 = *($5 + [60])
	if ( ($6 == 0) ){ goto $label$47 }
	*(($5 + [64])) = $6
	CALL $418($6)
	
.LABEL $label$47
	CALL $418($5)
	
.LABEL $label$46
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$45 }
	$0 = *(($12 + [192]))
	goto $label$43 
	
.LABEL $label$44
	$0 = $4
	
.LABEL $label$43
	*($7) = $4
	CALL $418($0)
	
.LABEL $label$42
	*([0] + [4]) = ($12 + [224])
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$10 = (*([0] + [4]) - [112])
	$12 = $10
	*([0] + [4]) = $10
	$2 = *($1 + [4])
	$11 = *($1)
	$1 = [0]
	$8 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$8 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $3)
	
.LABEL $label$1
	*(($12 + [56])) = (int_64)1398362884
	*($12 + [24]) = (int_64)0
	*($12 + [16]) = (int_64)0
	*($12 + [32]) = (int_64)0
	*($12 + [40]) = (int_64)0
	*($12 + [48]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$9 = (int_64)5462355
	
.LOOP $label$5:
	$10 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$10 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($10, [1824])
	*($12 + [100]) = $8
	*($12 + [96]) = $8
	*($12 + [104]) = ($8 + $3)
	*($12 + [64]) = ($12 + [96])
	*($12 + [80]) = ($12 + [16])
	CALL $337(($12 + [80]), ($12 + [64]))
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($8)
	
.LABEL $label$8
	$9 = *((($12 + [16]) + [8]))
	*(($12 + [76])) = *(($12 + [60]))
	*(($1 = (($12 + [64]) + [8]))) = *(($12 + [56]))
	$4 = *($12 + [16])
	*($12 + [64]) = *($12 + [48])
	*($12 + [68]) = *(($12 + [52]))
	$6 = *(($12 + [40]))
	$5 = *(($12 + [32]))
	*((($12 + [80]) + [8])) = *($1)
	*($12 + [80]) = *($12 + [64])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$11 = *((*($1) + $11))
	
.LABEL $label$9
	$7 = *((($12 + [80]) + [8]))
	*((($12 + [96]) + [8])) = $7
	*(($12 + [8])) = $7
	$7 = *($12 + [80])
	*($12 + [96]) = $7
	*($12) = $7
	CALL void $1((int_32 $4), (int_64 $9), (int_64 $5), (int_64 $6), (int_64 $12), (int_32 $11))
	*([0] + [4]) = ($12 + [112])
	return [1]
}

void .FUNC $264 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [48])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [80])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)4983115765713469440, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [80]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [56])
	if ( (CALL memcmp((*($3 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [84]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)4983115765713469441, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [84])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $265 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[48]))
	$5 = *($0 + [4])
	$4 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [16]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $5) > (int_32)[0]), [1232])
	CALL memcpy(*($7), ($8 + [16]), [1])
	$5 = (*($7) + [1])
	*($7) = $5
	if ( $3 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$2 = ($8 + [28])
	
.LOOP $label$3:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [16])
	*($2) = ($7 + [32])
	*($8 + [20]) = ($7 + [8])
	CALL $266(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [48])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $266 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1232])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $0, [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((int_32)(*($2 + [8]) - $1) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $267 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = ((int_32)$3 / (int_32)[48])
	if ( ((uint_32)$4 <= (uint_32)((int_32)($8 - $5) / (int_32)[48])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $418($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[89478486]) ){ goto $label$1 }
	$5 = [89478485]
	$2 = ((int_32)$8 / (int_32)[48])
	if ( ((uint_32)$2 > (uint_32)[44739241]) ){ goto $label$6 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	
.LABEL $label$6
	$4 = ((int_32)$5 * (int_32)[48])
	$5 = CALL $417($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + ((int_32)((uint_32)$3 / (uint_32)[48]) * (int_32)[48]))
	return 
	
.LABEL $label$4
	$3 = ((int_32)(*($0 + [4]) - $5) / (int_32)[48])
	$6 = ( ($1 + ((int_32)$3 * (int_32)[48])) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$8 = ($6 - $1)
	$7 = ((int_32)$8 / (int_32)[48])
	if ( ($8 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $8)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $6)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $6, $1)
	*($0) = (*($0) + ((int_32)((uint_32)$1 / (uint_32)[48]) * (int_32)[48]))
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ((int_32)$7 * (int_32)[48]))
	return (unreachable)
	
.LABEL $label$1
	CALL $436($0)
}

void .FUNC $43 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($8 + [24]) = $1
	CALL require_auth(*($0))
	$3 = *(($0 + [352]))
	$7 = *(($0 + [356]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [328])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	$5 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [20]) == (int_32)$6), [1056])
	if ( $5 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$5 = CALL db_find_i64(*(($0 + [328])), *(($0 + [336])), (int_64)7235159551873908736, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $341($6, $5)
	CALL eosio_assert(((int_32)*($5 + [20]) == (int_32)$6), [1056])
	
.LABEL $label$5
	*($8 + [16]) = $2
	CALL eosio_assert([1], [1120])
	CALL $343($6, $5, (int_64)0, ($8 + [16]))
	goto $label$3 
	
.LABEL $label$4
	$1 = *($0)
	*($8 + [20]) = $2
	*($8 + [16]) = ($8 + [24])
	CALL $342(($8 + [8]), $6, $1, ($8 + [16]))
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $42 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	CALL eosio_assert(CALL $fimport$40($1), [4176])
	$2 = *(($0 + [392]))
	$6 = *(($0 + [396]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [368])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)$4), [1056])
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$6 = CALL db_find_i64(*(($0 + [368])), *(($0 + [376])), (int_64)-5920782797423585936, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $346($4, $6)
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)$4), [1056])
	
.LABEL $label$3
	$6 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($6, [4208])
	CALL eosio_assert($6, [2400])
	CALL eosio_assert($6, [1680])
	$6 = CALL db_next_i64(*($5 + [12]), ($7 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	CALL $346($4, $6)
	
.LABEL $label$5
	CALL $347($4, $5)
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $41 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = $1
	CALL require_auth(*($0))
	CALL eosio_assert(CALL $fimport$40($1), [4176])
	$2 = *(($0 + [392]))
	$6 = *(($0 + [396]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [368])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [8]) == (int_32)$5), [1056])
	goto $label$3 
	
.LABEL $label$4
	$4 = [0]
	$6 = CALL db_find_i64(*(($0 + [368])), *(($0 + [376])), (int_64)-5920782797423585936, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $346($5, $6)
	CALL eosio_assert(((int_32)*($4 + [8]) == (int_32)$5), [1056])
	
.LABEL $label$3
	CALL eosio_assert(($4 == 0), [4240])
	$1 = *($0)
	*($7 + [16]) = ($7 + [24])
	CALL $349(($7 + [8]), $5, $1, ($7 + [16]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $40 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_64 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	*(($9 = (($11 + [64]) + [8]))) = *(($5 + [8]))
	*(($10 = (($11 + [48]) + [8]))) = *(($6 + [8]))
	*($11 + [64]) = *($5)
	*($11 + [48]) = *($6)
	CALL $437(($11 + [32]), $8)
	*((($11 + [16]) + [8])) = *($9)
	*(($11 + [8])) = *($10)
	*($11 + [16]) = *($11 + [64])
	*($11) = *($11 + [48])
	CALL $350($0, $1, $2, $3, $4, ($11 + [16]), $11, $7, ($11 + [32]))
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $418(*($11 + [40]))
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [80])
}

void .FUNC $47 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	CALL require_auth(*($0))
	*(($6 = (($8 + [16]) + [8]))) = *(($5 + [8]))
	$7 = *($5)
	*(($8 + [12])) = *((($8 + [16]) + [12]))
	*(($8 + [8])) = *($6)
	*($8 + [16]) = $7
	*($8 + [4]) = *($8 + [20])
	*($8) = *($8 + [16])
	CALL $338($0, $1, $2, $3, $4, $8)
	*([0] + [4]) = ($8 + [32])
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

void .FUNC $45 (int_32 $0)
{
	CALL require_auth(*($0))
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [24])) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [56]) = ($1 + $0)
	*($2 + [48]) = $1
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [1024])
	CALL memcpy(($2 + [8]), $1, [8])
	*($2 + [52]) = ($1 + [8])
	CALL $94(($2 + [48]), (($2 + [8]) + [8]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $340(($2 + [48]), ($2 + [8]))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $418(*(($2 + [24])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [64])
	return [1]
}

int_32 .FUNC $363 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $417([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $96($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $406(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

int_32 .FUNC $362 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	$9 = $10
	*([0] + [4]) = $10
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($7)
	CALL db_get_i64($1, $3, $7)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($10 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $7)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $417([32])) + [8]) = (int_64)1398362884
	*($5) = (int_64)0
	CALL eosio_assert([1], [1760])
	$10 = ($5 + [8])
	$8 = (int_64)5462355
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [1824])
	*($5 + [16]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [1024])
	CALL memcpy($5, $3, [8])
	CALL eosio_assert(((int_32)($7 & [-8]) != (int_32)[8]), [1024])
	CALL memcpy($10, ($3 + [8]), [8])
	*($5 + [20]) = $1
	*($9 + [24]) = $5
	$8 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($9 + [16]) = $8)
	$7 = *($5 + [20])
	*($9 + [12]) = $7
	$1 = ($0 + [28])
	$6 = *($1)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($6 + [8]) = $8
	*($6 + [16]) = $7
	*($9 + [24]) = [0]
	*($6) = $5
	*($1) = ($6 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $407($2, ($9 + [24]), ($9 + [16]), ($9 + [12]))
	
.LABEL $label$12
	$6 = *($9 + [24])
	*($9 + [24]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $418($6)
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [32])
	return $5
}

int_32 .FUNC __errno_location ()
{
	return [17276]
}

int_32 .FUNC $167 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $417([128])
	$4 = CALL $203($6)
	*($6 + [104]) = $0
	CALL $204(($8 + [32]), $4)
	*($6 + [112]) = [-1]
	*($6 + [108]) = $1
	*($6 + [116]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [108])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $205(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [92])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [96])) = $7
	CALL $418($7)
	
.LABEL $label$10
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $166 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4983115765747023872, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [104]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $167($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)4983115765747023872, $5))
	CALL eosio_assert(((int_32)*($2 + [104]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*($2 + [112]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$2 = *($0)
	$4 = *($4 + [8])
	$3 = *(($4 + [8]))
	$5 = *($4)
	*(($1 + [40])) = (int_64)0
	*($1 + [32]) = (int_64)0
	*(($4 = ($1 + [24]))) = $3
	*($1 + [16]) = $5
	*(($1 + [56])) = (int_64)0
	*($1 + [48]) = (int_64)0
	*($1 + [64]) = [0]
	*($1 + [68]) = [0]
	*($7 + [88]) = ($7 + [72])
	*($7 + [84]) = $7
	*($7 + [80]) = $7
	CALL $157(($7 + [80]), $1)
	$3 = *($1)
	*($1 + [84]) = CALL db_store_i64(*($2 + [8]), (int_64)-5290167705893076992, *(*($0 + [8])), $3, $7, [72])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$2 = ($2 + [8])
	$3 = *($2)
	$0 = *(($0 + [8]))
	$5 = *($0)
	$6 = *($1)
	*($7 + [96]) = *(($1 + [8]))
	*($1 + [88]) = CALL db_idx64_store($3, (int_64)-5290167705893076992, $5, $6, ($7 + [96]))
	$3 = *($0)
	$5 = *($2)
	$6 = *($1)
	*($7 + [104]) = *($4)
	*($7 + [96]) = *(($1 + [16]))
	*(($1 + [92])) = CALL db_idx128_store($5, (int_64)-5290167705893076991, $3, $6, ($7 + [96]))
	*([0] + [4]) = ($7 + [112])
}

int_32 .FUNC $164 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1680])
	$6 = *($0 + [4])
	$7 = *(($6 + [92]))
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-5290167705893076991, $9, *($6))
	*((*(($0 + [4])) + [92])) = $7
	
.LABEL $label$1
	*($9) = (int_64)0
	$1 = CALL db_idx128_next($7, $9)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9)
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [80]) == (int_32)$2), [1056])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $155($2, CALL $fimport$18(*($2), *($2 + [8]), (int_64)-5290167705893076992, $3))
	CALL eosio_assert(((int_32)*($7 + [80]) == (int_32)$2), [1056])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [92])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $163 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $417([96])) + [80]) = $1
	CALL $165(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [84])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $160(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $418($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $162 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [84]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1616])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-5290167705893076992)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1552])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1552])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $155(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $161 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)-5290167705893076991, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [80]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $155($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)-5290167705893076992, $5))
	CALL eosio_assert(((int_32)*($2 + [80]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*(($2 + [92])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

void .FUNC $160 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	*(($3 = $4) + [44]) = $0
	*($3 + [32]) = *($1)
	*($3 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($4 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [24])) = [0]
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [48]) = $1
	$4 = ($1 + $0)
	*($3 + [56]) = $4
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [1024])
	CALL memcpy($3, $1, [8])
	$2 = ($1 + [8])
	CALL eosio_assert(((uint_32)($4 - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [8]), $2, [8])
	*($3 + [52]) = ($1 + [16])
	CALL $94(($3 + [48]), ($3 + [16]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($3 + [52]) = ($3 + [32])
	*($3 + [48]) = ($3 + [44])
	CALL $106(($3 + [48]), $3)
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $418(*(($3 + [24])))
	
.LABEL $label$5
	*([0] + [4]) = ($3 + [64])
	return [1]
}

void .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$2 = ((int_32)($5 - $4) / (int_32)[48])
	$7 = ($2 + [1])
	if ( ((uint_32)$7 >= (uint_32)[89478486]) ){ goto $label$2 }
	$6 = [89478485]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[48])
	if ( ((uint_32)$3 > (uint_32)[44739241]) ){ goto $label$4 }
	$6 = ($3 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $417(((int_32)$6 * (int_32)[48]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = ($5 - $4)
	$2 = CALL memcpy(($7 + ((int_32)$2 * (int_32)[48])), $1, [48])
	$1 = ($2 + ((int_32)((int_32)$5 / (int_32)[-48]) * (int_32)[48]))
	$6 = ($7 + ((int_32)$6 * (int_32)[48]))
	$7 = ($2 + [48])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $4, $5)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $168 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4983115765756270592, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $183($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)4983115765756270592, $5))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*(($2 + [32])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $66 (int_32 $0, int_64 $1, float_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL require_auth(*($0))
	CALL $437($4, $3)
	CALL $107($0, $1, $2, $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	CALL $418(*($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $61 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	*($7 + [80]) = $1
	CALL require_auth(*($0))
	*($7 + [72]) = ((float_64)(CASTING float_64)(uint_64 $3) / (float_64)(float_64)1e7)
	*(($7 + [64])) = [0]
	*($7 + [48]) = (int_64)-1
	*($7 + [56]) = (int_64)0
	$3 = *($0)
	*($7 + [32]) = $3
	*($7 + [40]) = $3
	*($7 + [68]) = [0]
	*($7 + [24]) = ($7 + [32])
	*($7 + [8]) = $1
	*($7) = *($2 + [8])
	CALL $147(($7 + [88]), ($7 + [24]), $7)
	$6 = *($7 + [92])
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((int_64)(((int_64)((int_64)*($7) ^ (int_64)*($6 + [16])) | (int_64)((int_64)*($7 + [8]) ^ (int_64)*(($6 + [24])))) == 0) == 0) ){ goto $label$5 }
	if ( ($6 == 0) ){ goto $label$5 }
	$1 = *($6)
	$4 = *(($7 + [56]))
	$6 = *(($7 + [60]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$6 }
	$0 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($0)) == (int_64)$1) ){ goto $label$6 }
	$6 = $0
	$2 = ($0 + [-24])
	$0 = $2
	if ( ((int_32)($2 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$4 }
	$0 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [48]) == (int_32)($7 + [32])), [1056])
	goto $label$3 
	
.LABEL $label$5
	$1 = *($0)
	*($7 + [4]) = $0
	*($7 + [12]) = $2
	*($7) = ($7 + [32])
	*($7 + [8]) = ($7 + [80])
	*($7 + [16]) = ($7 + [72])
	CALL $148(($7 + [88]), ($7 + [32]), $1, $7)
	$6 = *($7 + [56])
	if ( ($6 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$0 = [0]
	$2 = CALL db_find_i64(*($7 + [32]), *(($7 + [40])), (int_64)5093418677667738272, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $149(($7 + [32]), $2)
	CALL eosio_assert(((int_32)*($0 + [48]) == (int_32)($7 + [32])), [1056])
	
.LABEL $label$3
	*($7) = ($7 + [72])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [1120])
	CALL $150(($7 + [32]), $0, (int_64)0, $7)
	$6 = *($7 + [56])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($7 + [60])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $418($2)
	
.LABEL $label$11
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($7 + [56]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $6
	
.LABEL $label$8
	*($5) = $6
	CALL $418($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [96])
}

void .FUNC $456 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$1 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$18
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$16
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$15
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$9
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$8
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$7
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$5
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$1 
	
.LABEL $label$2
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$3 = *($1)
	*(($0 + [8])) = *($1 + [8])
	*($0) = $3
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	$1
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$10 = (*([0] + [4]) - [48])
	$12 = $10
	*([0] + [4]) = $10
	$2 = *($1 + [4])
	$11 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$10 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$10 = [0]
	goto $label$1 
	
.LABEL $label$3
	$10 = ($10 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$2
	CALL read_action_data($10, $1)
	
.LABEL $label$1
	*(($7 = ($12 + [24]))) = (int_64)0
	*($12 + [16]) = (int_64)0
	*($12) = (int_64)0
	*($12 + [32]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1024])
	CALL memcpy($12, $10, [8])
	CALL eosio_assert(((uint_32)($1 + [-8]) > (uint_32)[15]), [1024])
	$8 = ($12 + [16])
	CALL memcpy($8, ($10 + [8]), [16])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[24]), [1024])
	$9 = ($12 + [32])
	CALL memcpy($9, ($10 + [24]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($7)
	$4 = *($8)
	$6 = *($9)
	$3 = *($12)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$11 = *((*($1) + $11))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_64 $6), (int_64 $11))
	*([0] + [4]) = ($12 + [48])
	return [1]
}

void .FUNC $63 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [304])
	*([0] + [4]) = $16
	CALL require_auth(*($0))
	*(($16 + [280])) = [0]
	*($16 + [264]) = (int_64)-1
	*($16 + [272]) = (int_64)0
	$13 = *($0)
	*($16 + [248]) = $13
	*($16 + [256]) = $13
	*($16 + [284]) = [0]
	*($16 + [240]) = ($16 + [248])
	*($16 + [8]) = (int_64)0
	CALL $130(($16 + [232]), ($16 + [240]), ($16 + [8]))
	CALL prints([2160])
	$10 = *($16 + [236])
	if ( ($10 == 0) ){ goto $label$23 }
	
.LOOP $label$24:
	if ( ((int_64)(*($10 + [8]) == 0) == 0) ){ goto $label$22 }
	if ( (*($10 + [16]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$20 }
	CALL prints([2224])
	CALL $135(($16 + [232]))
	CALL prints([2160])
	$10 = *($16 + [236])
	if ( $10 ){ goto $label$24 }
	
.LABEL $label$23
	CALL prints([2176])
	goto $label$21 
	
.LABEL $label$22
	CALL prints([2192])
	
.LABEL $label$21
	*($16 + [192]) = (int_64)1
	CALL $130(($16 + [8]), ($16 + [240]), ($16 + [192]))
	*($16 + [232]) = *($16 + [8])
	CALL prints([2240])
	$10 = *($16 + [236])
	if ( ($10 == 0) ){ goto $label$25 }
	
.LOOP $label$26:
	if ( ((int_64)*($10 + [8]) != (int_64)1) ){ goto $label$19 }
	if ( ((*($10 + [16]) + [86400]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$17 }
	CALL $135(($16 + [232]))
	CALL prints([2240])
	$10 = *($16 + [236])
	if ( $10 ){ goto $label$26 }
	
.LABEL $label$25
	CALL prints([2272])
	goto $label$18 
	
.LABEL $label$20
	$13 = *(*($16 + [236]))
	$5 = *(($16 + [272]))
	$1 = *(($16 + [276]))
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$27 }
	$10 = ($1 + [-24])
	$2 = ([0] - $5)
	
.LOOP $label$28:
	if ( ((int_64)*(*($10)) == (int_64)$13) ){ goto $label$27 }
	$1 = $10
	$3 = ($10 + [-24])
	$10 = $3
	if ( ((int_32)($3 + $2) != (int_32)[-24]) ){ goto $label$28 }
	
.LABEL $label$27
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$16 }
	$9 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)($16 + [248])), [1056])
	goto $label$15 
	
.LABEL $label$19
	CALL prints([2304])
	
.LABEL $label$18
	CALL eosio_assert([0], [2448])
	goto $label$3 
	
.LABEL $label$17
	CALL prints([2336])
	$13 = *(*($16 + [236]))
	$5 = *(($16 + [272]))
	$1 = *(($16 + [276]))
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$29 }
	$10 = ($1 + [-24])
	$2 = ([0] - $5)
	
.LOOP $label$30:
	if ( ((int_64)*(*($10)) == (int_64)$13) ){ goto $label$29 }
	$1 = $10
	$3 = ($10 + [-24])
	$10 = $3
	if ( ((int_32)($3 + $2) != (int_32)[-24]) ){ goto $label$30 }
	
.LABEL $label$29
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$14 }
	$2 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)($16 + [248])), [1056])
	goto $label$13 
	
.LABEL $label$16
	$9 = [0]
	$10 = CALL db_find_i64(*($16 + [248]), *(($16 + [256])), (int_64)8759794652103573504, $13)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$15 }
	$9 = CALL $131(($16 + [248]), $10)
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)($16 + [248])), [1056])
	
.LABEL $label$15
	*($16 + [208]) = (int_64)-1
	$13 = *($0)
	*($16 + [192]) = $13
	$10 = *($16 + [236])
	*($16 + [200]) = *($10)
	*($16 + [216]) = [0]
	*(($16 + [220])) = [0]
	*((($16 + [192]) + [32])) = [0]
	*($16 + [228]) = [0]
	*((($16 + [152]) + [32])) = [0]
	*($16 + [152]) = $13
	*($16 + [168]) = (int_64)-1
	*($16 + [176]) = (int_64)0
	*($16 + [160]) = *($10)
	*($16 + [188]) = [0]
	*($16 + [144]) = ($16 + [192])
	*($16 + [8]) = (int_64)0
	CALL $132(($16 + [136]), ($16 + [144]), ($16 + [8]))
	*($16 + [128]) = *($9 + [24])
	$10 = *($16 + [140])
	if ( ($10 == 0) ){ goto $label$31 }
	*($16 + [128]) = *($10)
	$10 = CALL db_lowerbound_i64(*($16 + [152]), *((($16 + [152]) + [8])), (int_64)8759794652468199072, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$31 }
	$2 = (($16 + [8]) + [32])
	$0 = CALL $133(($16 + [152]), $10)
	$1 = (($16 + [8]) + [16])
	$6 = ($1 + [12])
	$7 = ($16 + [100])
	$8 = ($16 + [92])
	
.LOOP $label$32:
	CALL _ZNSt3__19to_stringEy(($16 + [8]), *(*($16 + [236])))
	$10 = CALL $427(($16 + [8]), [0], [2208])
	$3 = ($10 + [8])
	*(($5 = (($16 + [112]) + [8]))) = *($3)
	*($16 + [112]) = *($10)
	*($10) = [0]
	*(($10 + [4])) = [0]
	*($3) = [0]
	if ( ((*($16 + [8]) & [1]) == 0) ){ goto $label$33 }
	CALL $418(*((($16 + [8]) + [8])))
	
.LABEL $label$33
	$13 = (int_64)0
	$15 = (int_64)59
	$10 = [1968]
	$11 = (int_64)0
	
.LOOP $label$34:
	$12 = (int_64)0
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$35 }
	$3 = *($10)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$3 = ($3 + [165])
	goto $label$36 
	
.LABEL $label$37
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$35
	$10 = ($10 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$34 }
	$13 = (int_64)0
	$12 = (int_64)59
	$10 = [1984]
	$14 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$43 }
	$3 = *($10)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$3 = ($3 + [165])
	goto $label$41 
	
.LABEL $label$43
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$39
	$10 = ($10 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$38 }
	*((($16 + [56]) + [8])) = $14
	*($16 + [56]) = $11
	$4 = *(($0 + [24]))
	$13 = (int_64)0
	$12 = (int_64)59
	$10 = [2000]
	$11 = (int_64)0
	
.LOOP $label$44:
	if ( ((uint_64)$13 > (uint_64)(int_64)7) ){ goto $label$49 }
	$3 = *($10)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$3 = ($3 + [165])
	goto $label$47 
	
.LABEL $label$49
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$45
	$10 = ($10 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$11 = ((int_64)$15 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$44 }
	$13 = (int_64)0
	$15 = (int_64)59
	$10 = [1968]
	$14 = (int_64)0
	
.LOOP $label$50:
	$12 = (int_64)0
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$51 }
	$3 = *($10)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$3 = ($3 + [165])
	goto $label$52 
	
.LABEL $label$53
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$51
	$10 = ($10 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$12 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$50 }
	*($1) = *($0 + [32])
	*($16 + [8]) = $14
	*((($16 + [8]) + [8])) = *($16 + [128])
	*($6) = *(($0 + [44]))
	*(($1 + [8])) = *(($0 + [40]))
	*(($1 + [4])) = *(($0 + [36]))
	CALL $437($2, ($16 + [112]))
	CALL $109(($16 + [288]), CALL $108(($16 + [72]), ($16 + [56]), $4, $11, ($16 + [8])))
	$10 = *($16 + [288])
	CALL send_inline($10, (*($16 + [292]) - $10))
	$10 = *($16 + [288])
	if ( ($10 == 0) ){ goto $label$54 }
	*($16 + [292]) = $10
	CALL $418($10)
	
.LABEL $label$54
	$10 = *($7)
	if ( ($10 == 0) ){ goto $label$55 }
	*((($16 + [72]) + [32])) = $10
	CALL $418($10)
	
.LABEL $label$55
	$10 = *((($16 + [72]) + [16]))
	if ( ($10 == 0) ){ goto $label$56 }
	*($8) = $10
	CALL $418($10)
	
.LABEL $label$56
	if ( ((*($2) & [1]) == 0) ){ goto $label$57 }
	CALL $418(*((($16 + [8]) + [40])))
	
.LABEL $label$57
	CALL eosio_assert([1], [1680])
	$10 = *($0 + [52])
	$0 = [0]
	$10 = CALL db_next_i64($10, ($16 + [8]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$58 }
	$0 = CALL $133(($16 + [152]), $10)
	
.LABEL $label$58
	if ( ((*($16 + [112]) & [1]) == 0) ){ goto $label$59 }
	CALL $418(*($5))
	
.LABEL $label$59
	if ( $0 ){ goto $label$32 }
	
.LABEL $label$31
	*($16 + [8]) = ($16 + [128])
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [1120])
	CALL $134(($16 + [248]), $9, (int_64)0, ($16 + [8]))
	$0 = *($16 + [176])
	if ( ($0 == 0) ){ goto $label$10 }
	$1 = ($16 + [180])
	$10 = *($1)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$12 }
	
.LOOP $label$60:
	$10 = ($10 + [-24])
	$3 = *($10)
	*($10) = [0]
	if ( ($3 == 0) ){ goto $label$61 }
	CALL $418($3)
	
.LABEL $label$61
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$60 }
	$10 = *(($16 + [176]))
	goto $label$11 
	
.LABEL $label$14
	$2 = [0]
	$10 = CALL db_find_i64(*($16 + [248]), *(($16 + [256])), (int_64)8759794652103573504, $13)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$13 }
	$2 = CALL $131(($16 + [248]), $10)
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)($16 + [248])), [1056])
	
.LABEL $label$13
	*($16 + [24]) = (int_64)-1
	*($16 + [32]) = [0]
	$13 = *($0)
	*($16 + [8]) = $13
	$15 = *($2)
	*($16 + [16]) = $15
	*(($16 + [36])) = [0]
	*(($16 + [40])) = [0]
	*($16 + [44]) = [0]
	CALL prints([2352])
	$10 = CALL db_lowerbound_i64($13, $15, (int_64)8759794652399468544, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$62 }
	$0 = ($16 + [16])
	$3 = [0]
	
.LOOP $label$63:
	CALL $137(($16 + [8]), $10)
	$10 = [0]
	$1 = CALL db_lowerbound_i64(*($16 + [8]), *($0), (int_64)8759794652399468544, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$64 }
	$10 = CALL $137(($16 + [8]), $1)
	
.LABEL $label$64
	$1 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($1, [2400])
	CALL eosio_assert($1, [1680])
	$1 = CALL db_next_i64(*($10 + [28]), ($16 + [192]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$65 }
	CALL $137(($16 + [8]), $1)
	
.LABEL $label$65
	CALL $138(($16 + [8]), $10)
	CALL prints([2352])
	$3 = ($3 + [1])
	if ( ((uint_32)$3 > (uint_32)[29]) ){ goto $label$9 }
	$10 = CALL db_lowerbound_i64(*($16 + [8]), *($0), (int_64)8759794652399468544, (int_64)0)
	if ( ((int_32)$10 >= (int_32)[0]) ){ goto $label$63 }
	
.LABEL $label$62
	CALL prints([2384])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [1120])
	CALL $136(($16 + [248]), $2, (int_64)0, ($16 + [192]))
	$0 = *($16 + [32])
	if ( $0 ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$12
	$10 = $0
	
.LABEL $label$11
	*($1) = $0
	CALL $418($10)
	
.LABEL $label$10
	$0 = *($16 + [216])
	if ( ($0 == 0) ){ goto $label$3 }
	$1 = ($16 + [220])
	$10 = *($1)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$7 }
	
.LOOP $label$66:
	$10 = ($10 + [-24])
	$3 = *($10)
	*($10) = [0]
	if ( ($3 == 0) ){ goto $label$67 }
	CALL $418($3)
	
.LABEL $label$67
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$66 }
	$10 = *(($16 + [216]))
	goto $label$6 
	
.LABEL $label$9
	CALL prints([2368])
	$0 = *($16 + [32])
	if ( ($0 == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$1 = ($16 + [36])
	$10 = *($1)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$5 }
	
.LOOP $label$68:
	$10 = ($10 + [-24])
	$3 = *($10)
	*($10) = [0]
	if ( ($3 == 0) ){ goto $label$69 }
	CALL $418($3)
	
.LABEL $label$69
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$68 }
	$10 = *(($16 + [32]))
	goto $label$4 
	
.LABEL $label$7
	$10 = $0
	
.LABEL $label$6
	*($1) = $0
	CALL $418($10)
	$0 = *($16 + [272])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$10 = $0
	
.LABEL $label$4
	*($1) = $0
	CALL $418($10)
	$0 = *($16 + [272])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$0 = *($16 + [272])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = ($16 + [276])
	$10 = *($1)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$71 }
	
.LOOP $label$72:
	$10 = ($10 + [-24])
	$3 = *($10)
	*($10) = [0]
	if ( ($3 == 0) ){ goto $label$73 }
	CALL $418($3)
	
.LABEL $label$73
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$72 }
	$10 = *(($16 + [272]))
	goto $label$70 
	
.LABEL $label$71
	$10 = $0
	
.LABEL $label$70
	*($1) = $0
	CALL $418($10)
	
.LABEL $label$1
	*([0] + [4]) = ($16 + [304])
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [13364])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [13172]
	$1 = (((int_32)$2 * (int_32)[12]) + [13172])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $241 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1824])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1824])
	return $0
}

int_32 .FUNC $398 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [16])
	*($0 + [4]) = (*($0 + [4]) + [16])
	return $0
}

void .FUNC $399 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	$2 = *($0)
	CALL $400(*($0 + [4]), $1)
	CALL eosio_assert([1], [1232])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($7 | [8]), ($1 + [16]), [16])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($7 + [24]), ($1 + [32]), [16])
	CALL eosio_assert([1], [1232])
	$4 = ($1 + [48])
	CALL memcpy(($7 + [40]), $4, [4])
	$3 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)-6215726811582152704, *(*($0 + [8])), $3, $7, [44])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = *(($2 + [8]))
	$5 = *(*(($0 + [8])))
	$6 = *($1)
	*($7 + [56]) = *($4)
	*($1 + [72]) = CALL db_idx64_store($3, (int_64)-6215726811582152704, $5, $6, ($7 + [56]))
	*([0] + [4]) = ($7 + [64])
}

void .FUNC $390 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	$11 = $12
	*([0] + [4]) = $12
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [24])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [8])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [16])), (int_64)-3020380869172259840, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $386($5, $6)
	*($11 + [12]) = [0]
	*($11 + [8]) = $5
	$7 = *(*(CALL $392(($11 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [24])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [1488])
	*($1) = *($8)
	*($1 + [8]) = *(*($3 + [4]))
	$4 = *($3 + [8])
	$7 = *($4)
	*(($1 + [24])) = *(($4 + [8]))
	*($1 + [16]) = $7
	$3 = *($3 + [12])
	$7 = *($3)
	*(($1 + [40])) = *(($3 + [8]))
	*($1 + [32]) = $7
	$3 = $12
	$12 = ($3 + [-48])
	*([0] + [4]) = $12
	CALL eosio_assert([1], [1232])
	CALL memcpy($12, $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($3 + [-40]), ($1 + [8]), [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($3 + [-32]), ($1 + [16]), [16])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($3 + [-16]), ($1 + [32]), [16])
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-3020380869172259840, *(*($0 + [8])), $7, $12, [48])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$7 = *(($2 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *($1)
	*($11 + [8]) = *(($1 + [8]))
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-3020380869172259840, $9, $10, ($11 + [8]))
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $391 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $392 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [52]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1616])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-3020380869172259840)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1552])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1552])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $386(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $393 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [16])
	*($0 + [4]) = (*($0 + [4]) + [16])
	return $0
}

void .FUNC $394 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $395 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1824])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1824])
	return $0
}

int_32 .FUNC $396 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $397 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC fflush (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = [0]
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$5 }
	$1 = CALL __lockfile($0)
	
.LABEL $label$5
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$6 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	if ( (*(($0 + [20])) == 0) ){ goto $label$3 }
	
.LABEL $label$6
	$2 = *($0 + [8])
	$3 = *($0 + [4])
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$7 }
	CALL int_64 $0((int_32 (CASTING int_64)(int_32 ($3 - $2))), (int_64 [1]), (int_32 *($0 + [40])))
	
.LABEL $label$7
	*($0 + [16]) = (int_64)0
	$3 = [0]
	*(($0 + [28])) = [0]
	*(($0 + [4])) = (int_64)0
	if ( ($1 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$5 = [0]
	if ( (*([0] + [13540]) == 0) ){ goto $label$8 }
	$5 = CALL fflush(*([0] + [13540]))
	
.LABEL $label$8
	$0 = *(CALL __ofl_lock())
	if ( ($0 == 0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = [0]
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$11 }
	$1 = CALL __lockfile($0)
	
.LABEL $label$11
	$2 = *($0 + [28])
	$3 = *($0 + [20])
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$12 }
	$4 = [0]
	if ( ((int_32)*(($0 + [76])) < (int_32)[0]) ){ goto $label$13 }
	$4 = CALL __lockfile($0)
	$2 = *(($0 + [28]))
	$3 = *(($0 + [20]))
	
.LABEL $label$13
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$16 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	if ( *(($0 + [20])) ){ goto $label$16 }
	$3 = [-1]
	if ( $4 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$2 = *($0 + [8])
	$3 = *($0 + [4])
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$17 }
	CALL int_64 $0((int_32 (CASTING int_64)(int_32 ($3 - $2))), (int_64 [1]), (int_32 *($0 + [40])))
	
.LABEL $label$17
	*($0 + [16]) = (int_64)0
	$3 = [0]
	*(($0 + [28])) = [0]
	*(($0 + [4])) = (int_64)0
	if ( ($4 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL __unlockfile($0)
	
.LABEL $label$14
	$5 = ($3 | $5)
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$18 }
	CALL __unlockfile($0)
	
.LABEL $label$18
	$0 = *($0 + [56])
	if ( $0 ){ goto $label$10 }
	
.LABEL $label$9
	CALL __ofl_unlock()
	return $5
	
.LABEL $label$3
	$3 = [-1]
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL __unlockfile($0)
	
.LABEL $label$1
	return $3
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC $454 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	$39 = (*([0] + [4]) - [8128])
	*([0] + [4]) = $39
	$12 = (($39 + [692]) + [11])
	$11 = (($39 + [704]) | [8])
	$10 = (($39 + [704]) | [9])
	$9 = ($39 + [7664])
	$8 = ([-2] - ($39 + [704]))
	$7 = (($39 + [692]) + [12])
	$6 = (($39 + [352]) + [54])
	$5 = (($39 + [352]) + [55])
	$30 = [0]
	$38 = [0]
	$32 = [0]
	
.LOOP $label$17:
	$38 = ($30 + $38)
	$37 = $1
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$16 }
	$1 = $37
	$30 = ($30 & [255])
	if ( ($30 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	if ( ((int_32)$30 == (int_32)[37]) ){ goto $label$19 }
	$1 = ($1 + [1])
	$30 = (*($1) & [255])
	if ( $30 ){ goto $label$21 }
	
.LABEL $label$20
	$30 = $1
	goto $label$18 
	
.LABEL $label$19
	$30 = $1
	
.LOOP $label$22:
	if ( ((int_32)*(($1 + [1])) != (int_32)[37]) ){ goto $label$18 }
	$30 = ($30 + [1])
	$1 = ($1 + [2])
	if ( ((int_32)*($1) == (int_32)[37]) ){ goto $label$22 }
	
.LABEL $label$18
	$13 = ([2147483647] - $38)
	$30 = ($30 - $37)
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	if ( ($0 == 0) ){ goto $label$23 }
	if ( (*($0) & [32]) ){ goto $label$23 }
	CALL __fwritex($37, $30, $0)
	
.LABEL $label$23
	if ( $30 ){ goto $label$24 }
	$36 = ($1 + [1])
	$27 = [-1]
	$30 = *($1 + [1])
	$17 = ($30 + [-48])
	if ( ((uint_32)$17 > (uint_32)[9]) ){ goto $label$25 }
	$1 = ((int_32)*($1 + [2]) == (int_32)[36])
	$36 = ( ($1 + [3]) ? $36 : $1 )
	$30 = *($36)
	$27 = ( $17 ? [-1] : $1 )
	$32 = ( [1] ? $32 : $1 )
	
.LABEL $label$25
	$14 = [0]
	$1 = (int_32(($30 << [24]) >> [24]) + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$26 }
	$14 = [0]
	
.LOOP $label$27:
	if ( ((([1] << $1) & [75913]) == 0) ){ goto $label$26 }
	$14 = (([1] << (int_32(($30 << [24]) >> [24]) + [-32])) | $14)
	$36 = ($36 + [1])
	$30 = *($36)
	$1 = ($30 + [-32])
	if ( ($1 <= [32]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)($30 & [255]) != (int_32)[42]) ){ goto $label$33 }
	$1 = (*($36 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$32 }
	if ( ((int_32)*($36 + [2]) != (int_32)[36]) ){ goto $label$32 }
	*(($4 + ($1 << [2]))) = [10]
	$17 = ($36 + [3])
	$32 = [1]
	$15 = *((($3 + (*(($36 + [1])) << [4])) + [-768]))
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	goto $label$31 
	
.LABEL $label$33
	$15 = [0]
	$30 = (int_32(($30 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$30 > (uint_32)[9]) ){ goto $label$30 }
	$1 = [0]
	$17 = $36
	
.LOOP $label$34:
	$15 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$35 }
	$1 = ((int_32)$1 * (int_32)[10])
	$15 = ( [-1] ? ($1 + $30) : ((int_32)$30 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$35
	$1 = $15
	$17 = ($17 + [1])
	$30 = (*($17) + [-48])
	if ( ($30 <= [10]) ){ goto $label$34 }
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$28 }
	goto $label$15 
	
.LABEL $label$32
	if ( $32 ){ goto $label$3 }
	$17 = ($36 + [1])
	if ( ($0 == 0) ){ goto $label$29 }
	$1 = *($2)
	*($2) = ($1 + [4])
	$32 = [0]
	$15 = *($1)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$31
	$15 = ([0] - $15)
	$14 = ($14 | [8192])
	goto $label$28 
	
.LABEL $label$30
	$17 = $36
	goto $label$28 
	
.LABEL $label$29
	$32 = [0]
	$15 = [0]
	
.LABEL $label$28
	$30 = [0]
	$36 = [-1]
	if ( ((int_32)*($17) != (int_32)[46]) ){ goto $label$42 }
	$36 = *($17 + [1])
	if ( ((int_32)$36 != (int_32)[42]) ){ goto $label$41 }
	$1 = (*($17 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$40 }
	if ( ((int_32)*($17 + [3]) != (int_32)[36]) ){ goto $label$40 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($17 + [4])
	$36 = *((($3 + (*(($17 + [2])) << [4])) + [-768]))
	goto $label$37 
	
.LABEL $label$42
	$1 = $17
	$16 = [0]
	goto $label$36 
	
.LABEL $label$41
	$1 = ($17 + [1])
	$31 = ($36 + [-48])
	if ( ((uint_32)$31 > (uint_32)[9]) ){ goto $label$39 }
	$17 = [0]
	
.LOOP $label$43:
	$36 = [-1]
	if ( ((uint_32)$17 > (uint_32)[214748364]) ){ goto $label$44 }
	$17 = ((int_32)$17 * (int_32)[10])
	$36 = ( [-1] ? ($17 + $31) : ((int_32)$31 > (int_32)([2147483647] - $17)) )
	
.LABEL $label$44
	$16 = [1]
	$17 = $36
	$1 = ($1 + [1])
	$31 = (*($1) + [-48])
	if ( ($31 <= [10]) ){ goto $label$43 }
	goto $label$36 
	
.LABEL $label$40
	if ( $32 ){ goto $label$3 }
	$1 = ($17 + [2])
	if ( ($0 == 0) ){ goto $label$38 }
	$17 = *($2)
	*($2) = ($17 + [4])
	$36 = *($17)
	goto $label$37 
	
.LABEL $label$39
	$16 = [1]
	$36 = [0]
	goto $label$36 
	
.LABEL $label$38
	$36 = [0]
	
.LABEL $label$37
	$16 = ((int_32)uint_32($36 >> [31]) ^ (int_32)[1])
	
.LABEL $label$36
	
.LOOP $label$45:
	$17 = $30
	$30 = (*($1) + [-65])
	if ( ((uint_32)$30 > (uint_32)[57]) ){ goto $label$3 }
	$1 = ($1 + [1])
	$30 = *(((((int_32)$17 * (int_32)[58]) + $30) + [14752]))
	if ( (($30 + [-1]) <= [8]) ){ goto $label$45 }
	if ( ($30 == 0) ){ goto $label$3 }
	if ( ((int_32)$30 != (int_32)[27]) ){ goto $label$49 }
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$48 }
	goto $label$3 
	
.LABEL $label$49
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$47 }
	*(($4 + ($27 << [2]))) = $30
	$30 = ($3 + ($27 << [4]))
	*($39 + [428]) = *(($30 + [12]))
	*($39 + [424]) = *(($30 + [8]))
	*($39 + [420]) = *(($30 + [4]))
	*($39 + [416]) = *($30)
	
.LABEL $label$48
	if ( $0 ){ goto $label$46 }
	$30 = [0]
	goto $label$24 
	
.LABEL $label$47
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $456(($39 + [416]), $30, $2)
	
.LABEL $label$46
	$31 = ($14 & [-65537])
	$18 = ( $31 ? $14 : ($14 & [8192]) )
	$26 = [0]
	$24 = [15232]
	$30 = *(($1 + [-1]))
	$29 = ( ( ($30 & [-33]) ? $30 : ((int_32)($30 & [15]) == (int_32)[3]) ) ? $30 : $17 )
	$30 = ($29 + [-65])
	if ( ((uint_32)$30 > (uint_32)[55]) ){ goto $label$80 }
	$14 = $5
	goto $label$111 
	
.LABEL $label$111
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$112 }
	if ( $16 ){ goto $label$15 }
	
.LABEL $label$112
	$35 = *($39 + [424])
	$23 = *($39 + [416])
	*($39 + [748]) = [0]
	if ( (CALL __signbitl($23, $35) == 0) ){ goto $label$113 }
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	$20 = [1]
	$19 = [15264]
	goto $label$108 
	
.LABEL $label$113
	if ( ($18 & [2048]) ){ goto $label$109 }
	$20 = ($18 & [1])
	$19 = ( [15270] ? [15265] : $20 )
	goto $label$108 
	
.LABEL $label$110
	$35 = *($39 + [416])
	if ( ((int_64)$35 <= (int_64)-1) ){ goto $label$92 }
	if ( ($18 & [2048]) ){ goto $label$88 }
	$26 = ($18 & [1])
	$24 = ( [15234] ? [15232] : $26 )
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$109
	$20 = [1]
	$19 = [15267]
	
.LABEL $label$108
	if ( ((int_32)CALL __fpclassifyl($23, $35) <= (int_32)[1]) ){ goto $label$115 }
	CALL frexpl(($39 + [320]), $23, $35, ($39 + [748]))
	$23 = *($39 + [328])
	$35 = *($39 + [320])
	CALL __addtf3(($39 + [304]), $35, $23, $35, $23)
	$23 = *((($39 + [304]) + [8]))
	$35 = *($39 + [304])
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$116 }
	*($39 + [748]) = (*($39 + [748]) + [-1])
	
.LABEL $label$116
	$21 = ($29 | [32])
	if ( ((int_32)$21 != (int_32)[97]) ){ goto $label$114 }
	$37 = ($29 & [32])
	$24 = ( ($19 + [9]) ? $19 : $37 )
	if ( ((uint_32)$36 > (uint_32)[26]) ){ goto $label$77 }
	if ( (([27] - $36) == 0) ){ goto $label$77 }
	$30 = ($36 + [-27])
	$34 = (int_64)4612248968380809216
	$33 = (int_64)0
	
.LOOP $label$117:
	CALL __multf3(($39 + [208]), $33, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($39 + [208]) + [8]))
	$33 = *($39 + [208])
	$30 = ($30 + [1])
	if ( $30 ){ goto $label$117 }
	if ( ((int_32)*($24) != (int_32)[45]) ){ goto $label$78 }
	CALL __subtf3(($39 + [160]), $35, ((int_64)$23 ^ (int_64)-9223372036854775808), $33, $34)
	CALL __addtf3(($39 + [144]), $33, $34, *($39 + [160]), *((($39 + [160]) + [8])))
	$23 = ((int_64)*((($39 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$35 = *($39 + [144])
	goto $label$77 
	
.LABEL $label$115
	$16 = CALL __unordtf2($23, $35, $23, $35)
	$37 = ($20 + [3])
	if ( ($18 & [8192]) ){ goto $label$93 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$93 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$95 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$118:
	if ( (($30 & [1]) == 0) ){ goto $label$119 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$119
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$118 }
	if ( $14 ){ goto $label$93 }
	$31 = ($31 & [255])
	goto $label$94 
	
.LABEL $label$114
	$30 = ((int_32)$36 < (int_32)[0])
	if ( (CALL __netf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$90 }
	CALL __multf3(($39 + [288]), $35, $23, (int_64)0, (int_64)4619285842798575616)
	$31 = (*($39 + [748]) + [-28])
	*($39 + [748]) = $31
	$23 = *((($39 + [288]) + [8]))
	$35 = *($39 + [288])
	goto $label$89 
	
.LABEL $label$107
	$35 = *($39 + [416])
	*((($39 + [344]) + [4])) = [0]
	*($39 + [344]) = $35
	*($39 + [416]) = ($39 + [344])
	$36 = [-1]
	$37 = ($39 + [344])
	goto $label$105 
	
.LABEL $label$106
	$37 = *($39 + [416])
	if ( ($36 == 0) ){ goto $label$74 }
	
.LABEL $label$105
	$30 = [0]
	$14 = $37
	$17 = [0]
	
.LOOP $label$121:
	$31 = *($14)
	if ( ($31 == 0) ){ goto $label$120 }
	$17 = CALL wctomb(($39 + [340]), $31)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$120 }
	if ( ((uint_32)$17 > (uint_32)($36 - $30)) ){ goto $label$120 }
	$14 = ($14 + [4])
	$30 = ($17 + $30)
	if ( ((uint_32)$36 > (uint_32)$30) ){ goto $label$121 }
	
.LABEL $label$120
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$104
	*((($39 + [352]) + [54])) = *($39 + [416])
	$36 = [1]
	$37 = $6
	$14 = $5
	$18 = $31
	goto $label$79 
	
.LABEL $label$103
	$37 = CALL strerror(*(CALL $457()))
	goto $label$97 
	
.LABEL $label$102
	$30 = ($17 & [255])
	if ( ((uint_32)$30 > (uint_32)[7]) ){ goto $label$56 }
	goto $label$122 
	
.LABEL $label$122
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$101
	$37 = $5
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$123 }
	$37 = $5
	
.LOOP $label$124:
	*(($37 = ($37 + [-1]))) = ((int_64)((int_64)$35 & (int_64)7) | (int_64)48)
	$35 = (uint_64)$35 >> (uint_64)(int_64)3
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	if ( ($18 & [8]) ){ goto $label$84 }
	$26 = [0]
	$24 = [15232]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$100
	$36 = ( $36 ? [8] : ((uint_32)$36 > (uint_32)[8]) )
	$18 = ($18 | [8])
	$29 = [120]
	
.LABEL $label$99
	$26 = [0]
	$24 = [15232]
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$125 }
	$30 = ($29 & [32])
	$37 = $5
	
.LOOP $label$126:
	*(($37 = ($37 + [-1]))) = (*((((CASTING uint_32)(uint_64 $35) & [15]) + [15216])) | $30)
	$35 = (uint_64)$35 >> (uint_64)(int_64)4
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$126 }
	if ( (($18 & [8]) == 0) ){ goto $label$83 }
	if ( (int_64)(*($39 + [416]) == 0) ){ goto $label$83 }
	$24 = (int_32($29 >> [4]) + [15232])
	$26 = [2]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$125
	$37 = $5
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$98
	$30 = *($39 + [416])
	$37 = ( $30 ? [15248] : $30 )
	
.LABEL $label$97
	$26 = [0]
	$30 = CALL strnlen($37, ( [2147483647] ? $36 : ((int_32)$36 < (int_32)[0]) ))
	$14 = ($37 + $30)
	if ( ((int_32)$36 <= (int_32)[-1]) ){ goto $label$91 }
	$18 = $31
	$36 = $30
	goto $label$79 
	
.LABEL $label$96
	$26 = [0]
	$24 = [15232]
	$35 = *($39 + [416])
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$95
	if ( $17 ){ goto $label$93 }
	
.LABEL $label$94
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$93
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$127 }
	CALL __fwritex($19, $20, $0)
	$30 = *($0)
	
.LABEL $label$127
	if ( ($30 & [32]) ){ goto $label$128 }
	$30 = uint_32(($29 & [32]) >> [5])
	CALL __fwritex(( ( [15328] ? [15344] : $30 ) ? ( [15296] ? [15312] : $30 ) : $16 ), [3], $0)
	
.LABEL $label$128
	if ( ((int_32)($18 & [73728]) != (int_32)[8192]) ){ goto $label$129 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$129 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$131 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$132:
	if ( (($30 & [1]) == 0) ){ goto $label$133 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$133
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$132 }
	if ( $14 ){ goto $label$129 }
	$31 = ($31 & [255])
	goto $label$130 
	
.LABEL $label$131
	if ( $17 ){ goto $label$129 }
	
.LABEL $label$130
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$129
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$92
	$35 = (int_64)
	*($39 + [416]) = $35((int_64)0 - $35))
	$26 = [1]
	$24 = [15232]
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$91
	$18 = $31
	$36 = $30
	if ( (*($14) == 0) ){ goto $label$79 }
	goto $label$15 
	
.LABEL $label$90
	$31 = *($39 + [748])
	
.LABEL $label$89
	$28 = ( [6] ? $36 : $30 )
	$22 = ( ($39 + [752]) ? $9 : ((int_32)$31 < (int_32)[0]) )
	$36 = $22
	
.LOOP $label$134:
	$30 = CALL __fixunstfsi($35, $23)
	CALL __floatunsitf(($39 + [272]), $30)
	CALL __subtf3(($39 + [256]), $35, $23, *($39 + [272]), *((($39 + [272]) + [8])))
	CALL __multf3(($39 + [240]), *($39 + [256]), *((($39 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($36) = $30
	$36 = ($36 + [4])
	$23 = *((($39 + [240]) + [8]))
	$35 = *($39 + [240])
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$134 }
	if ( ((int_32)$31 < (int_32)[1]) ){ goto $label$137 }
	$17 = $22
	
.LOOP $label$138:
	$14 = ( $31 ? [29] : ((int_32)$31 < (int_32)[29]) )
	$30 = ($36 + [-4])
	if ( ($30 <= $17) ){ goto $label$139 }
	$23 = (CASTING uint_64)(uint_32 $14)
	$35 = (int_64)0
	
.LOOP $label$140:
	$35 = ((int_64)((int_64)*($30) << (int_64)$23) + (int_64)((int_64)$35 & (int_64)4294967295))
	*($30) = ((uint_64)$35 % (uint_64)(int_64)1000000000)
	$35 = ((uint_64)$35 / (uint_64)(int_64)1000000000)
	$30 = ($30 + [-4])
	if ( ((uint_32)$30 >= (uint_32)$17) ){ goto $label$140 }
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( ($30 == 0) ){ goto $label$139 }
	*(($17 = ($17 + [-4]))) = $30
	
.LABEL $label$139
	
.LOOP $label$142:
	$30 = $36
	if ( ((uint_32)$30 <= (uint_32)$17) ){ goto $label$141 }
	$36 = ($30 + [-4])
	if ( (*($36) == 0) ){ goto $label$142 }
	
.LABEL $label$141
	$36 = $30
	$31 = ($31 - $14)
	if ( ((int_32)$31 > (int_32)[0]) ){ goto $label$138 }
	*($39 + [748]) = $31
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$137
	$30 = $36
	$17 = $22
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	
.LABEL $label$136
	$24 = (((uint_32)($28 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$21 != (int_32)[102]) ){ goto $label$144 }
	$25 = ($22 + ($24 << [2]))
	
.LOOP $label$145:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$147 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$148:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$148 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$146 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$146 
	
.LABEL $label$147
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$146
	$30 = ( $25 ? $30 : ((int_32)int_32(($30 - $22) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$145 }
	goto $label$143 
	
.LABEL $label$144
	
.LOOP $label$149:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$151 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$152:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$152 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$150 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$150 
	
.LABEL $label$151
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$150
	$30 = ( ($17 + ($24 << [2])) ? $30 : ((int_32)int_32(($30 - $17) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$149 }
	
.LABEL $label$143
	*($39 + [748]) = $31
	
.LABEL $label$135
	$36 = [0]
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$153 }
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$153 }
	$14 = [10]
	
.LOOP $label$154:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$154 }
	
.LABEL $label$153
	$16 = ((int_32)$21 == (int_32)[103])
	$14 = (($28 - ( $36 ? [0] : ((int_32)$21 != (int_32)[102]) )) - (((int_32)$28 != (int_32)[0]) & $16))
	if ( ((int_32)$14 >= (int_32)(((int_32)int_32(($30 - $22) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$155 }
	$37 = ($14 + [147456])
	$24 = ($22 + (((int_32)$37 / (int_32)[9]) << [2]))
	$31 = ($24 + [-65532])
	$14 = [10]
	$37 = ((int_32)$37 % (int_32)[9])
	if ( ((int_32)($37 + [1]) > (int_32)[8]) ){ goto $label$156 }
	$37 = ([8] - $37)
	$14 = [10]
	
.LOOP $label$157:
	$14 = ((int_32)$14 * (int_32)[10])
	$37 = ($37 + [-1])
	if ( $37 ){ goto $label$157 }
	
.LABEL $label$156
	$27 = *($31)
	$37 = ((uint_32)$27 % (uint_32)$14)
	$26 = ($31 + [4])
	if ( ((int_32)$26 != (int_32)$30) ){ goto $label$159 }
	if ( ($37 == 0) ){ goto $label$158 }
	
.LABEL $label$159
	if ( (((uint_32)$27 / (uint_32)$14) & [1]) ){ goto $label$161 }
	$35 = (int_64)4643211215818981376
	$23 = (int_64)0
	if ( ((uint_32)$31 <= (uint_32)$17) ){ goto $label$160 }
	if ( ((int_32)$14 != (int_32)[1000000000]) ){ goto $label$160 }
	if ( ((*(($31 + [-4])) & [1]) == 0) ){ goto $label$160 }
	
.LABEL $label$161
	$35 = (int_64)4643211215818981376
	$23 = (int_64)1
	
.LABEL $label$160
	$34 = (int_64)4611123068473966592
	$25 = ((int_32)$14 / (int_32)[2])
	if ( ($37 <= $25) ){ goto $label$162 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$37 == (int_32)$25) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$30) )
	
.LABEL $label$162
	if ( ($20 == 0) ){ goto $label$163 }
	if ( ((int_32)*($19) != (int_32)[45]) ){ goto $label$163 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	
.LABEL $label$163
	CALL __addtf3(($39 + [224]), $23, $35, (int_64)0, $34)
	$37 = ($27 - $37)
	*($31) = $37
	if ( (CALL __eqtf2(*($39 + [224]), *((($39 + [224]) + [8])), $23, $35) == 0) ){ goto $label$158 }
	$36 = ($37 + $14)
	*($31) = $36
	if ( ($36 <= [1000000000]) ){ goto $label$164 }
	$36 = ($24 + [-65536])
	
.LOOP $label$165:
	*(($36 + [4])) = [0]
	if ( ((uint_32)$36 >= (uint_32)$17) ){ goto $label$166 }
	*(($17 = ($17 + [-4]))) = [0]
	
.LABEL $label$166
	$14 = (*($36) + [1])
	*($36) = $14
	$36 = ($36 + [-4])
	if ( ((uint_32)$14 > (uint_32)[999999999]) ){ goto $label$165 }
	$31 = ($36 + [4])
	
.LABEL $label$164
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$158 }
	$14 = [10]
	
.LOOP $label$167:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$167 }
	
.LABEL $label$158
	$14 = ($31 + [4])
	$30 = ( $14 ? $30 : ((uint_32)$30 > (uint_32)$14) )
	
.LABEL $label$155
	$31 = ([0] - $36)
	
.LOOP $label$171:
	$14 = $30
	if ( ((uint_32)$14 <= (uint_32)$17) ){ goto $label$170 }
	$30 = ($14 + [-4])
	if ( (*($30) == 0) ){ goto $label$171 }
	$27 = [1]
	if ( $16 ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$170
	$27 = [0]
	if ( ($16 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$30 = (($28 == 0) + $28)
	if ( ((int_32)$30 <= (int_32)$36) ){ goto $label$76 }
	if ( ((int_32)$36 < (int_32)[-4]) ){ goto $label$76 }
	$29 = ($29 + [-1])
	$28 = (($30 + [-1]) - $36)
	$16 = ($18 & [8])
	if ( ($16 == 0) ){ goto $label$75 }
	goto $label$68 
	
.LABEL $label$168
	$16 = ($18 & [8])
	goto $label$68 
	
.LABEL $label$88
	$26 = [1]
	$24 = [15233]
	if ( (uint_64)($35 <= (int_64)4294967296) ){ goto $label$86 }
	
.LABEL $label$87
	$37 = $5
	
.LOOP $label$172:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$172 }
	goto $label$85 
	
.LABEL $label$86
	$23 = $35
	$37 = $5
	
.LABEL $label$85
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$83 }
	
.LOOP $label$173:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $17 ){ goto $label$173 }
	goto $label$83 
	
.LABEL $label$84
	$30 = ($5 - $37)
	$24 = ( [15232] ? [15237] : ((int_32)$36 > (int_32)$30) )
	$26 = ((int_32)$36 <= (int_32)$30)
	
.LABEL $label$83
	if ( ($16 == 0) ){ goto $label$81 }
	
.LABEL $label$82
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$81
	$18 = ( ($18 & [-65537]) ? $18 : ((int_32)$36 > (int_32)[-1]) )
	$35 = *($39 + [416])
	if ( $36 ){ goto $label$174 }
	if ( ((int_64)($35 == 0) == 0) ){ goto $label$174 }
	$37 = $5
	$14 = $5
	$36 = [0]
	goto $label$79 
	
.LABEL $label$174
	$30 = ((int_64)($35 == 0) + ($5 - $37))
	$36 = ( $36 ? $30 : ((int_32)$36 > (int_32)$30) )
	
.LABEL $label$80
	$14 = $5
	
.LABEL $label$79
	$29 = ($14 - $37)
	$28 = ( $29 ? $36 : ((int_32)$36 < (int_32)$29) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$15 }
	$27 = ($26 + $28)
	$30 = ( $27 ? $15 : ((int_32)$15 < (int_32)$27) )
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$175 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$175 }
	$17 = ($22 <= [256])
	$22 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $22 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$177 }
	$17 = ($14 == 0)
	$14 = $22
	
.LOOP $label$178:
	if ( (($17 & [1]) == 0) ){ goto $label$179 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$179
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$178 }
	if ( $16 ){ goto $label$175 }
	$22 = ($22 & [255])
	goto $label$176 
	
.LABEL $label$177
	if ( $14 ){ goto $label$175 }
	
.LABEL $label$176
	CALL __fwritex(($39 + [432]), $22, $0)
	
.LABEL $label$175
	if ( (*($0) & [32]) ){ goto $label$180 }
	CALL __fwritex($24, $26, $0)
	
.LABEL $label$180
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$181 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$181 }
	$17 = ($26 <= [256])
	$26 = ($30 - $27)
	CALL memset(($39 + [432]), [48], ( $26 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$183 }
	$17 = ($14 == 0)
	$14 = $26
	
.LOOP $label$184:
	if ( (($17 & [1]) == 0) ){ goto $label$185 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$185
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$184 }
	if ( $16 ){ goto $label$181 }
	$26 = ($26 & [255])
	goto $label$182 
	
.LABEL $label$183
	if ( $14 ){ goto $label$181 }
	
.LABEL $label$182
	CALL __fwritex(($39 + [432]), $26, $0)
	
.LABEL $label$181
	if ( ((int_32)$29 >= (int_32)$36) ){ goto $label$186 }
	$17 = ($16 <= [256])
	$16 = ($28 - $29)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$188 }
	$17 = ($36 == 0)
	$36 = $16
	
.LOOP $label$189:
	if ( (($17 & [1]) == 0) ){ goto $label$190 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$190
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$189 }
	if ( $31 ){ goto $label$186 }
	$16 = ($16 & [255])
	goto $label$187 
	
.LABEL $label$188
	if ( $36 ){ goto $label$186 }
	
.LABEL $label$187
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$186
	if ( (*($0) & [32]) ){ goto $label$191 }
	CALL __fwritex($37, $29, $0)
	
.LABEL $label$191
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$24 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$24 }
	$17 = ($37 <= [256])
	$37 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $17 ))
	$36 = *($0)
	$15 = ($36 & [32])
	if ( $17 ){ goto $label$193 }
	$17 = ($15 == 0)
	$15 = $37
	
.LOOP $label$194:
	if ( (($17 & [1]) == 0) ){ goto $label$195 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$195
	$14 = ($36 & [32])
	$17 = ($14 == 0)
	$15 = ($15 + [-256])
	if ( ((uint_32)$15 > (uint_32)[255]) ){ goto $label$194 }
	if ( $14 ){ goto $label$24 }
	$37 = ($37 & [255])
	goto $label$192 
	
.LABEL $label$193
	if ( $15 ){ goto $label$24 }
	
.LABEL $label$192
	CALL __fwritex(($39 + [432]), $37, $0)
	goto $label$24 
	
.LABEL $label$78
	CALL __addtf3(($39 + [192]), $35, $23, $33, $34)
	CALL __subtf3(($39 + [176]), *($39 + [192]), *((($39 + [192]) + [8])), $33, $34)
	$23 = *((($39 + [176]) + [8]))
	$35 = *($39 + [176])
	
.LABEL $label$77
	$30 = int_32($31 >> [31])
	$31 = *($39 + [748])
	$17 = ((int_32)($31 + $30) ^ (int_32)$30)
	$34 = (CASTING int_64)(int_32 $17)
	$30 = [0]
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$198 }
	$17 = (CASTING uint_32)(uint_64 $34)
	if ( $17 ){ goto $label$197 }
	goto $label$196 
	
.LABEL $label$198
	$30 = [0]
	
.LOOP $label$199:
	*(($12 + $30)) = ((int_64)((uint_64)$34 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ($30 + [-1])
	$17 = ((uint_64)$34 > (uint_64)(int_64)42949672959)
	$33 = ((uint_64)$34 / (uint_64)(int_64)10)
	$34 = $33
	if ( $17 ){ goto $label$199 }
	$17 = (CASTING uint_32)(uint_64 $33)
	if ( ($17 == 0) ){ goto $label$196 }
	
.LABEL $label$197
	
.LOOP $label$200:
	*(((($39 + [692]) + $30) + [11])) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$30 = ($30 + [-1])
	$14 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $14 ){ goto $label$200 }
	
.LABEL $label$196
	$17 = ($7 + $30)
	if ( $30 ){ goto $label$201 }
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$201
	$16 = ($20 | [2])
	*(($27 = ($17 + [-2]))) = ($29 + [15])
	*(($17 + [-1])) = ((uint_32($31 >> [30]) & [2]) + [43])
	if ( ($18 & [8]) ){ goto $label$202 }
	if ( ((int_32)$36 < (int_32)[1]) ){ goto $label$71 }
	$30 = ($39 + [704])
	
.LOOP $label$203:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [80]), $17)
	CALL __subtf3(($39 + [64]), $35, $23, *($39 + [80]), *((($39 + [80]) + [8])))
	CALL __multf3(($39 + [48]), *($39 + [64]), *((($39 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [15216])) | $37)
	$23 = *((($39 + [48]) + [8]))
	$35 = *($39 + [48])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$204 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$204
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$203 }
	goto $label$70 
	
.LABEL $label$202
	$30 = ($39 + [704])
	
.LOOP $label$205:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [128]), $17)
	CALL __subtf3(($39 + [112]), $35, $23, *($39 + [128]), *((($39 + [128]) + [8])))
	CALL __multf3(($39 + [96]), *($39 + [112]), *((($39 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [15216])) | $37)
	$23 = *((($39 + [96]) + [8]))
	$35 = *($39 + [96])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$206 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$206
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$205 }
	goto $label$70 
	
.LABEL $label$76
	$28 = ($30 + [-1])
	$29 = ($29 + [-2])
	$16 = ($18 & [8])
	if ( $16 ){ goto $label$68 }
	
.LABEL $label$75
	$30 = [9]
	if ( ($27 == 0) ){ goto $label$207 }
	$16 = *(($14 + [-4]))
	if ( ($16 == 0) ){ goto $label$207 }
	$30 = [0]
	if ( ((uint_32)$16 % (uint_32)[10]) ){ goto $label$207 }
	$37 = [10]
	$30 = [0]
	
.LOOP $label$208:
	$30 = ($30 + [1])
	$37 = ((int_32)$37 * (int_32)[10])
	if ( (((uint_32)$16 % (uint_32)$37) == 0) ){ goto $label$208 }
	
.LABEL $label$207
	$37 = (((int_32)int_32(($14 - $22) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($29 | [32]) != (int_32)[102]) ){ goto $label$69 }
	$16 = [0]
	$30 = ($37 - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	goto $label$68 
	
.LABEL $label$74
	$30 = [0]
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	
.LABEL $label$73
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$72 }
	$17 = ($27 <= [256])
	$27 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $27 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$210 }
	$17 = ($36 == 0)
	$36 = $27
	
.LOOP $label$211:
	if ( (($17 & [1]) == 0) ){ goto $label$212 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$212
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$211 }
	if ( $31 ){ goto $label$72 }
	$27 = ($27 & [255])
	goto $label$209 
	
.LABEL $label$210
	if ( $36 ){ goto $label$72 }
	
.LABEL $label$209
	CALL __fwritex(($39 + [432]), $27, $0)
	
.LABEL $label$72
	if ( ($30 == 0) ){ goto $label$213 }
	$17 = [0]
	
.LOOP $label$214:
	$36 = *($37)
	if ( ($36 == 0) ){ goto $label$213 }
	$36 = CALL wctomb(($39 + [340]), $36)
	$17 = ($36 + $17)
	if ( ((uint_32)$17 > (uint_32)$30) ){ goto $label$213 }
	if ( (*($0) & [32]) ){ goto $label$215 }
	CALL __fwritex(($39 + [340]), $36, $0)
	
.LABEL $label$215
	$37 = ($37 + [4])
	if ( ($17 <= $30) ){ goto $label$214 }
	
.LABEL $label$213
	if ( ((int_32)$16 != (int_32)[8192]) ){ goto $label$216 }
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$216 }
	$17 = ($31 <= [256])
	$31 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$218 }
	$17 = ($36 == 0)
	$36 = $31
	
.LOOP $label$219:
	if ( (($17 & [1]) == 0) ){ goto $label$220 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$220
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$219 }
	if ( $37 ){ goto $label$216 }
	$31 = ($31 & [255])
	goto $label$217 
	
.LABEL $label$218
	if ( $36 ){ goto $label$216 }
	
.LABEL $label$217
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$216
	$30 = ( $15 ? $30 : ((int_32)$15 > (int_32)$30) )
	goto $label$24 
	
.LABEL $label$71
	$17 = ($39 + [704])
	
.LOOP $label$221:
	$14 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [32]), $14)
	CALL __subtf3(($39 + [16]), $35, $23, *($39 + [32]), *((($39 + [32]) + [8])))
	CALL __multf3($39, *($39 + [16]), *((($39 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($30 = $17)) = (*(($14 + [15216])) | $37)
	$23 = *(($39 + [8]))
	$35 = *($39)
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$222 }
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$222 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$222
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$221 }
	
.LABEL $label$70
	$30 = [-1]
	$31 = ($7 - $27)
	if ( ((int_32)(([2147483645] - $16) - $31) < (int_32)$36) ){ goto $label$50 }
	$26 = ($17 - ($39 + [704]))
	$29 = ( ( ($36 + [2]) ? $26 : ((int_32)($8 + $17) < (int_32)$36) ) ? $26 : $36 )
	$37 = (($31 + $16) + $29)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$65 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$65 }
	$30 = ($28 <= [256])
	$28 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$67 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$223:
	if ( (($30 & [1]) == 0) ){ goto $label$224 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$224
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$223 }
	if ( $14 ){ goto $label$65 }
	$28 = ($28 & [255])
	goto $label$66 
	
.LABEL $label$69
	$16 = [0]
	$30 = (($37 + $36) - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	
.LABEL $label$68
	$30 = [-1]
	$24 = ($28 | $16)
	$37 = ((int_32)$24 != (int_32)[0])
	if ( ((int_32)$28 > (int_32)([2147483646] - $37)) ){ goto $label$50 }
	$26 = (($28 + $37) + [1])
	$21 = ((int_32)($29 | [32]) != (int_32)[102])
	if ( $21 ){ goto $label$225 }
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	$36 = ( $36 ? [0] : ((int_32)$36 > (int_32)[0]) )
	goto $label$61 
	
.LABEL $label$225
	$30 = ( $31 ? $36 : ((int_32)$36 < (int_32)[0]) )
	$35 = (CASTING int_64)(int_32 $30)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$64 }
	$37 = $7
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( $30 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$67
	if ( $17 ){ goto $label$65 }
	
.LABEL $label$66
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$65
	if ( (*($0) & [32]) ){ goto $label$226 }
	CALL __fwritex($24, $16, $0)
	
.LABEL $label$226
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$227 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$227 }
	$30 = ($16 <= [256])
	$16 = ($15 - $37)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$229 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$230:
	if ( (($30 & [1]) == 0) ){ goto $label$231 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$231
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$230 }
	if ( $14 ){ goto $label$227 }
	$16 = ($16 & [255])
	goto $label$228 
	
.LABEL $label$229
	if ( $17 ){ goto $label$227 }
	
.LABEL $label$228
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$227
	if ( (*($0) & [32]) ){ goto $label$232 }
	CALL __fwritex(($39 + [704]), $26, $0)
	
.LABEL $label$232
	$16 = ($29 - $26)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$233 }
	$30 = ($16 <= [256])
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$235 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$236:
	if ( (($30 & [1]) == 0) ){ goto $label$237 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$237
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$236 }
	if ( $14 ){ goto $label$233 }
	$16 = ($16 & [255])
	goto $label$234 
	
.LABEL $label$235
	if ( $17 ){ goto $label$233 }
	
.LABEL $label$234
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$233
	if ( (*($0) & [32]) ){ goto $label$238 }
	CALL __fwritex($27, $31, $0)
	
.LABEL $label$238
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$239 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$239 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$241 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$242:
	if ( (($30 & [1]) == 0) ){ goto $label$243 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$243
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$242 }
	if ( $14 ){ goto $label$239 }
	$31 = ($31 & [255])
	goto $label$240 
	
.LABEL $label$241
	if ( $17 ){ goto $label$239 }
	
.LABEL $label$240
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$239
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$64
	$37 = $7
	
.LOOP $label$244:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$244 }
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	
.LOOP $label$245:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$31 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $31 ){ goto $label$245 }
	
.LABEL $label$62
	if ( ((int_32)($7 - $37) > (int_32)[1]) ){ goto $label$246 }
	$30 = ($37 + [-1])
	
.LOOP $label$247:
	*($30) = [48]
	$37 = ($7 - $30)
	$31 = ($30 + [-1])
	$30 = $31
	if ( ((int_32)$37 < (int_32)[2]) ){ goto $label$247 }
	$37 = ($31 + [1])
	
.LABEL $label$246
	*(($25 = ($37 + [-2]))) = $29
	$30 = [-1]
	*(($37 + [-1])) = ((uint_32($36 >> [30]) & [2]) + [43])
	$36 = ($7 - $25)
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	
.LABEL $label$61
	$30 = [-1]
	$36 = ($36 + $26)
	if ( ((int_32)$36 > (int_32)((int_32)$20 ^ (int_32)[2147483647])) ){ goto $label$50 }
	$26 = ($36 + $20)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$51 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$51 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$53 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$248:
	if ( (($30 & [1]) == 0) ){ goto $label$249 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$249
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$248 }
	if ( $31 ){ goto $label$51 }
	$29 = ($29 & [255])
	goto $label$52 
	
.LABEL $label$60
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$59
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$58
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$57
	*(*($39 + [416])) = $38
	
.LABEL $label$56
	$30 = [0]
	goto $label$24 
	
.LABEL $label$55
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$54
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$53
	if ( $36 ){ goto $label$51 }
	
.LABEL $label$52
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$51
	if ( (*($0) & [32]) ){ goto $label$250 }
	CALL __fwritex($19, $20, $0)
	
.LABEL $label$250
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$251 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$251 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [48], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$253 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$254:
	if ( (($30 & [1]) == 0) ){ goto $label$255 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$255
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$254 }
	if ( $31 ){ goto $label$251 }
	$29 = ($29 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $36 ){ goto $label$251 }
	
.LABEL $label$252
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$251
	if ( $21 ){ goto $label$266 }
	$31 = ( $22 ? $17 : ((uint_32)$17 > (uint_32)$22) )
	$37 = $31
	
.LOOP $label$267:
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$269 }
	$17 = [0]
	
.LOOP $label$270:
	*(($11 + $17)) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ($17 + [-1])
	$36 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $36 ){ goto $label$270 }
	goto $label$268 
	
.LABEL $label$269
	$17 = [0]
	
.LABEL $label$268
	$30 = ($10 + $17)
	if ( ((int_32)$37 == (int_32)$31) ){ goto $label$272 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$271 }
	
.LOOP $label$273:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$273 }
	$30 = ($39 + [704])
	goto $label$271 
	
.LABEL $label$272
	if ( $17 ){ goto $label$271 }
	*(($30 = ($30 + [-1]))) = [48]
	
.LABEL $label$271
	if ( (*($0) & [32]) ){ goto $label$274 }
	CALL __fwritex($30, ($10 - $30), $0)
	
.LABEL $label$274
	$37 = ($37 + [4])
	if ( ((uint_32)$37 <= (uint_32)$22) ){ goto $label$267 }
	if ( ($24 == 0) ){ goto $label$275 }
	if ( (*($0) & [32]) ){ goto $label$275 }
	CALL __fwritex([15360], [1], $0)
	
.LABEL $label$275
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$265 }
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$264 }
	
.LOOP $label$276:
	$30 = $10
	$17 = *($37)
	if ( ($17 == 0) ){ goto $label$278 }
	$30 = $10
	
.LOOP $label$279:
	*(($30 = ($30 + [-1]))) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$36 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $36 ){ goto $label$279 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$277 }
	
.LABEL $label$278
	
.LOOP $label$280:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$280 }
	
.LABEL $label$277
	if ( (*($0) & [32]) ){ goto $label$281 }
	CALL __fwritex($30, ( $28 ? [9] : ((int_32)$28 < (int_32)[9]) ), $0)
	
.LABEL $label$281
	$30 = ($28 + [-9])
	if ( ((int_32)$28 < (int_32)[10]) ){ goto $label$263 }
	$28 = $30
	$37 = ($37 + [4])
	if ( ($37 <= $14) ){ goto $label$276 }
	goto $label$263 
	
.LABEL $label$266
	if ( ((int_32)$28 <= (int_32)[-1]) ){ goto $label$259 }
	$31 = ( $14 ? ($17 + [4]) : $27 )
	if ( ($16 == 0) ){ goto $label$261 }
	$37 = $17
	
.LOOP $label$282:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$284 }
	$36 = [0]
	
.LOOP $label$285:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$285 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$283 }
	
.LABEL $label$284
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$283
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$287 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$286 }
	
.LOOP $label$288:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$288 }
	goto $label$286 
	
.LABEL $label$287
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$289 }
	CALL __fwritex($14, [1], $0)
	$30 = *($0)
	
.LABEL $label$289
	$14 = ($14 + [1])
	if ( ($30 & [32]) ){ goto $label$286 }
	CALL __fwritex([15360], [1], $0)
	
.LABEL $label$286
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$290 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$290
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$282 }
	goto $label$260 
	
.LABEL $label$265
	$30 = $28
	if ( ((int_32)$30 >= (int_32)[1]) ){ goto $label$262 }
	goto $label$258 
	
.LABEL $label$264
	$30 = $28
	
.LABEL $label$263
	if ( ((int_32)$30 < (int_32)[1]) ){ goto $label$258 }
	
.LABEL $label$262
	$17 = ($30 <= [256])
	CALL memset(($39 + [432]), [48], ( $30 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$292 }
	$17 = ($36 == 0)
	$36 = $30
	
.LOOP $label$293:
	if ( (($17 & [1]) == 0) ){ goto $label$294 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$294
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$293 }
	if ( $37 ){ goto $label$258 }
	$30 = ($30 & [255])
	goto $label$291 
	
.LABEL $label$292
	if ( $36 ){ goto $label$258 }
	
.LABEL $label$291
	CALL __fwritex(($39 + [432]), $30, $0)
	if ( ((int_32)$18 == (int_32)[8192]) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$261
	$37 = $17
	
.LOOP $label$295:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$297 }
	$36 = [0]
	
.LOOP $label$298:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$298 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$296 }
	
.LABEL $label$297
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$296
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$300 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$299 }
	
.LOOP $label$301:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$301 }
	goto $label$299 
	
.LABEL $label$300
	if ( (*($0) & [32]) ){ goto $label$302 }
	CALL __fwritex($14, [1], $0)
	
.LABEL $label$302
	$14 = ($14 + [1])
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$299 }
	if ( (*($0) & [32]) ){ goto $label$299 }
	CALL __fwritex([15360], [1], $0)
	
.LABEL $label$299
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$303 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$303
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$295 }
	
.LABEL $label$260
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$259 }
	$30 = ($28 <= [256])
	CALL memset(($39 + [432]), [48], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$305 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$306:
	if ( (($30 & [1]) == 0) ){ goto $label$307 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$307
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$306 }
	if ( $14 ){ goto $label$259 }
	$28 = ($28 & [255])
	goto $label$304 
	
.LABEL $label$305
	if ( $17 ){ goto $label$259 }
	
.LABEL $label$304
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$259
	if ( (*($0) & [32]) ){ goto $label$258 }
	CALL __fwritex($25, ($7 - $25), $0)
	
.LABEL $label$258
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$256 }
	
.LABEL $label$257
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$256 }
	$30 = ($37 <= [256])
	$37 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$309 }
	$30 = ($17 == 0)
	$17 = $37
	
.LOOP $label$310:
	if ( (($30 & [1]) == 0) ){ goto $label$311 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$311
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$310 }
	if ( $14 ){ goto $label$256 }
	$37 = ($37 & [255])
	goto $label$308 
	
.LABEL $label$309
	if ( $17 ){ goto $label$256 }
	
.LABEL $label$308
	CALL __fwritex(($39 + [432]), $37, $0)
	
.LABEL $label$256
	$30 = ( $15 ? $26 : ((int_32)$15 > (int_32)$26) )
	
.LABEL $label$50
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$24
	if ( ((int_32)$30 <= (int_32)$13) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( $0 ){ goto $label$1 }
	if ( ($32 == 0) ){ goto $label$14 }
	$30 = [1]
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $456(($3 + [16]), $1, $2)
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $456(($3 + [32]), $1, $2)
	$1 = *($4 + [12])
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $456(($3 + [48]), $1, $2)
	$1 = *($4 + [16])
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $456(($3 + [64]), $1, $2)
	$1 = *($4 + [20])
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $456(($3 + [80]), $1, $2)
	$1 = *($4 + [24])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $456(($3 + [96]), $1, $2)
	$1 = *($4 + [28])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $456(($3 + [112]), $1, $2)
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $456(($3 + [128]), $1, $2)
	$1 = *($4 + [36])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $456(($3 + [144]), $1, $2)
	$38 = [1]
	goto $label$1 
	
.LABEL $label$15
	*(CALL __errno_location()) = [75]
	goto $label$2 
	
.LABEL $label$14
	$38 = [0]
	goto $label$1 
	
.LABEL $label$13
	$30 = [2]
	goto $label$4 
	
.LABEL $label$12
	$30 = [3]
	goto $label$4 
	
.LABEL $label$11
	$38 = [0]
	goto $label$1 
	
.LABEL $label$10
	$30 = [4]
	goto $label$4 
	
.LABEL $label$9
	$30 = [5]
	goto $label$4 
	
.LABEL $label$8
	$30 = [6]
	goto $label$4 
	
.LABEL $label$7
	$30 = [7]
	goto $label$4 
	
.LABEL $label$6
	$30 = [8]
	goto $label$4 
	
.LABEL $label$5
	$30 = [9]
	
.LABEL $label$4
	$1 = ($4 + ($30 << [2]))
	
.LOOP $label$312:
	if ( *($1) ){ goto $label$3 }
	$1 = ($1 + [4])
	$38 = [1]
	$30 = ($30 + [1])
	if ( ((uint_32)$30 <= (uint_32)[9]) ){ goto $label$312 }
	goto $label$1 
	
.LABEL $label$3
	*(CALL __errno_location()) = [22]
	
.LABEL $label$2
	$38 = [-1]
	
.LABEL $label$1
	*([0] + [4]) = ($39 + [8128])
	$30
	$30
	return $38
}

void .FUNC $365 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $417([80])) + [64]) = $1
	CALL $399(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [68])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $381(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $418($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $87 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	$5 = *($3 + [4])
	*($6 + [24]) = *(($5 + [24]))
	*($6 + [16]) = *($5 + [16])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [16]), [16]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [56])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx128_find_primary(*($4), *($4 + [8]), (int_64)5445032172408799232, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [56]) = $5
	
.LABEL $label$2
	CALL db_idx128_update($5, *(*($3 + [20])), ($6 + [16]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [16]) = *(*($3 + [4]) + [32])
	if ( (CALL memcmp((*($3 + [8]) + [16]), ($6 + [16]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [60]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)5445032172408799233, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [60])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [16]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $367 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
}

int_32 .FUNC $366 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $417([64])) + [48]) = $0
	*($6 + [8]) = (int_64)0
	CALL $398(($8 + [32]), $6)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $383(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $69 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*(($3 = (($6 + [16]) + [12]))) = *(($2 + [12]))
	*(($4 = (($6 + [16]) + [8]))) = *($2 + [8])
	*($6 + [20]) = *(($2 + [4]))
	*($6 + [16]) = *($2)
	$5 = *($2 + [8])
	*(($6 + [12])) = *($3)
	*(($6 + [8])) = *($4)
	*($6 + [4]) = *($6 + [20])
	*($6) = *($6 + [16])
	CALL $97($0, $5, $1, $6)
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $68 (int_32 $0, int_64 $1)
{
	CALL require_auth($1)
}

void .FUNC $248 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
}

void .FUNC $249 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4983115765713469440, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $250($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)4983115765713469440, $5))
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*($2 + [80]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $246 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [1712])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = ((int_32)($4 - $7) / (int_32)[48])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $247($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ((int_32)$6 * (int_32)[48]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($8 + [28])
	
.LOOP $label$6:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [16])
	*($6) = ($7 + [32])
	*($8 + [20]) = ($7 + [8])
	CALL $244(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [48])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $247 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $6) / (int_32)[48]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ((int_32)($6 - $5) / (int_32)[48])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[89478486]) ){ goto $label$3 }
	$6 = [89478485]
	$2 = ((int_32)($2 - $5) / (int_32)[48])
	if ( ((uint_32)$2 > (uint_32)[44739241]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $417(((int_32)$6 * (int_32)[48]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	CALL $241(CALL $fimport$43($6, [0], [48]))
	$6 = (*($0) + [48])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $436($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$6 * (int_32)[48]))
	$5 = ($2 + ((int_32)$3 * (int_32)[48]))
	$6 = $5
	
.LOOP $label$8:
	$6 = CALL memset($6, [0], [48])
	CALL $241($6)
	$6 = ($6 + [48])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 + ((int_32)((int_32)$2 / (int_32)[-48]) * (int_32)[48]))
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $418($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $244 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1024])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($0, *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $245 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $246($0, ($1 + [60]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1024])
	CALL memcpy(($1 + [56]), *($0 + [4]), [4])
	return *($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $242 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [48])
	$8 = $7
	*([0] + [4]) = $7
	$2 = *($0)
	$3 = *($0 + [4])
	$6 = *($3)
	$5 = *($6 + [16])
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4983115765735076448, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $213($6, $4)
	*($8 + [36]) = [0]
	*($8 + [32]) = $6
	$5 = *(*(CALL $214(($8 + [32])) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [1488])
	$5 = *(($6 + [16]))
	*($1 + [8]) = (int_64)0
	*($1) = $5
	$3 = CALL memcpy(($1 + [16]), *($3 + [4]), [48])
	$6 = $7
	$7 = ($6 + [-64])
	*([0] + [4]) = $7
	*($8 + [16]) = ($6 + [-4])
	*($8 + [8]) = $7
	CALL eosio_assert([1], [1232])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($6 + [-56]), ($1 + [8]), [8])
	*($8 + [12]) = ($6 + [-48])
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($1 + [24])
	*($8 + [32]) = $3
	*($8 + [40]) = ($1 + [32])
	*($8 + [44]) = ($1 + [48])
	CALL $228(($8 + [32]), ($8 + [24]))
	$5 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)4983115765735076448, *(*($0 + [8])), $5, $7, [60])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $243 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $240 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	*($1) = *(*($0))
	$4 = *($0 + [4])
	$3 = *($4)
	*(($1 + [24])) = *(($4 + [8]))
	*($1 + [16]) = $3
	$2 = *(*($0 + [4]))
	CALL eosio_assert([1], [1760])
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1824])
	*(($1 + [40])) = $2
	*($1 + [32]) = (int_64)0
	*($1 + [48]) = (int_64)0
	*($1 + [56]) = (CASTING uint_32)(float_64 ((float_64)((float_64)CALL floor((CASTING float_64)(uint_32 ((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$16() / (uint_64)(int_64)1000000)) / (uint_32)[86400]))) * (float_64)(float_64)86400) + (float_64)(float_64)86400))
	$4 = *($0 + [12])
	$1 = ($1 + [60])
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$6 }
	CALL $229($1, *($4), *($4 + [4]))
	
.LABEL $label$6
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [96])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = [0]
	$6 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $3)
	
.LABEL $label$1
	*(($10 + [32])) = (int_64)1398362884
	*($10 + [24]) = (int_64)0
	*($10 + [16]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$7 = (int_64)5462355
	
.LOOP $label$5:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($8, [1824])
	*($10 + [40]) = (int_64)0
	*($10 + [84]) = $6
	*($10 + [80]) = $6
	*($10 + [88]) = ($6 + $3)
	*($10 + [48]) = ($10 + [80])
	*($10 + [64]) = ($10 + [16])
	CALL $146(($10 + [64]), ($10 + [48]))
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($6)
	
.LABEL $label$8
	*(($1 = (($10 + [48]) + [8]))) = *(($10 + [32]))
	$7 = *($10 + [16])
	*($10 + [48]) = *($10 + [24])
	$4 = *(($10 + [40]))
	*((($10 + [64]) + [8])) = *($1)
	*($10 + [64]) = *($10 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$9 = *((*($1) + $9))
	
.LABEL $label$9
	$5 = *((($10 + [64]) + [8]))
	*((($10 + [80]) + [8])) = $5
	*(($10 + [8])) = $5
	$5 = *($10 + [64])
	*($10 + [80]) = $5
	*($10) = $5
	CALL void $1((int_32 $7), (int_64 $10), (int_32 $4), (int_64 $9))
	*([0] + [4]) = ($10 + [96])
	return [1]
}

void .FUNC $84 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $417([64])) + [48]) = $1
	CALL $89(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [52])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $88(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $418($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $199 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1232])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1232])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1232])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $111(CALL $110($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $83 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)5445032172408799232, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $85($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)5445032172408799232, $5))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*(($2 + [56])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

int_32 .FUNC $82 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [48])
	*([0] + [4]) = $13
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1664]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1664]
	$11 = (int_64)0
	
.LOOP $label$5:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$6
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$5 }
	$12 = [0]
	*(($13 + [32])) = [0]
	*($13 + [16]) = (int_64)-1
	*($13 + [8]) = $11
	*($13) = $9
	*($13 + [24]) = (int_64)0
	$6 = CALL db_lowerbound_i64($9, $11, (int_64)-4057297639048043008, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$11 }
	$12 = [1]
	$6 = CALL $91($13, $6)
	if ( (int_64)(((int_64)((int_64)*($6 + [32]) ^ (int_64)$1) | (int_64)((int_64)*(($6 + [40])) ^ (int_64)$2)) == 0) ){ goto $label$11 }
	
.LOOP $label$13:
	CALL eosio_assert([1], [1680])
	$6 = CALL db_next_i64(*($6 + [52]), ($13 + [40]))
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$12 }
	$6 = CALL $91($13, $6)
	if ( ((int_64)((int_64)((int_64)*($6 + [32]) ^ (int_64)$1) | (int_64)((int_64)*(($6 + [40])) ^ (int_64)$2)) != (int_64)0) ){ goto $label$13 }
	$12 = [1]
	$4 = *($13 + [24])
	if ( $4 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$12 = [0]
	
.LABEL $label$11
	$4 = *($13 + [24])
	if ( ($4 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$5 = ($13 + [28])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$17 }
	CALL $418($3)
	
.LABEL $label$17
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$16 }
	$6 = *(($13 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$6 = $4
	
.LABEL $label$14
	*($5) = $4
	CALL $418($6)
	
.LABEL $label$9
	*([0] + [4]) = ($13 + [48])
	return $12
}

int_32 .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $417([64])) + [48]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1024])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((uint_32)($4 + [-8]) > (uint_32)[15]), [1024])
	CALL memcpy(($6 + [16]), ($7 + [8]), [16])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[24]), [1024])
	CALL memcpy(($6 + [32]), ($7 + [24]), [8])
	*($6 + [56]) = [-1]
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $151(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $81 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $419 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $418 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $145 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $64 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	float_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	float_64 $15
	float_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	$24 = (*([0] + [4]) - [96])
	*([0] + [4]) = $24
	CALL require_auth(*($0))
	CALL $114(($24 + [80]), $0)
	$2 = ($0 + [88])
	*($24 + [72]) = $2
	*($24 + [8]) = (int_64)0
	CALL $115(($24 + [64]), ($24 + [72]), ($24 + [8]))
	CALL prints([2048])
	$21 = *($24 + [68])
	if ( ($21 == 0) ){ goto $label$8 }
	$3 = ($0 + [48])
	$8 = ($0 + [112])
	$9 = ($0 + [116])
	$10 = ($0 + [96])
	$11 = ($0 + [72])
	$12 = ($0 + [76])
	$13 = ($0 + [56])
	$17 = ($24 + [16])
	$18 = (($24 + [8]) + [16])
	$19 = ($24 + [36])
	$20 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)*($21 + [8]) >= (uint_32)[1566557682]) ){ goto $label$6 }
	if ( ((uint_32)$20 >= (uint_32)[30]) ){ goto $label$4 }
	$4 = *($21)
	$5 = *($8)
	$23 = *($9)
	if ( ((int_32)$23 == (int_32)$5) ){ goto $label$10 }
	$21 = ($23 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$11:
	if ( ((int_64)*(*($21)) == (int_64)$4) ){ goto $label$10 }
	$23 = $21
	$22 = ($21 + [-24])
	$21 = $22
	if ( ((int_32)($22 + $6) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$23 == (int_32)$5) ){ goto $label$13 }
	$21 = *(($23 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [12]) == (int_32)$2), [1056])
	goto $label$12 
	
.LABEL $label$13
	$21 = [0]
	$22 = CALL db_find_i64(*($2), *($10), (int_64)-3020369734423933472, $4)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$12 }
	$21 = CALL $116($2, $22)
	CALL eosio_assert(((int_32)*($21 + [12]) == (int_32)$2), [1056])
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$21 != (int_32)[0]), [1120])
	CALL $117($2, $21, (int_64)0, ($24 + [8]))
	$4 = *(*($24 + [68]))
	$5 = *($11)
	$23 = *($12)
	if ( ((int_32)$23 == (int_32)$5) ){ goto $label$14 }
	$21 = ($23 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$15:
	if ( ((int_64)*(*($21)) == (int_64)$4) ){ goto $label$14 }
	$23 = $21
	$22 = ($21 + [-24])
	$21 = $22
	if ( ((int_32)($22 + $6) != (int_32)[-24]) ){ goto $label$15 }
	
.LABEL $label$14
	if ( ((int_32)$23 == (int_32)$5) ){ goto $label$17 }
	$6 = *(($23 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [36]) == (int_32)$3), [1056])
	goto $label$16 
	
.LABEL $label$17
	$6 = [0]
	$21 = CALL db_find_i64(*($3), *($13), (int_64)-3020369734580305920, $4)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$16 }
	$6 = CALL $118($3, $21)
	CALL eosio_assert(((int_32)*($6 + [36]) == (int_32)$3), [1056])
	
.LABEL $label$16
	$21 = (*($24 + [80]) + ((int_32)*($6 + [32]) * (int_32)[48]))
	$7 = CALL __floatuntidf(*($21 + [16]), *(($21 + [24])))
	$4 = *(($6 + [24]))
	$14 = *($6 + [16])
	$16 = CALL pow((float_64)10, (float_64)6)
	$7 = (float_64)
	$7 = ( $7(CALL __floatuntidf($14, $4) - ((float_64)$7 * (float_64)$16))) ? (float_64)0 : ((float_64)$7 > (float_64)(float_64)0) 
	*($24 + [56]) = $7)
	CALL $114(($24 + [8]), $0)
	$14 = (Rounds 0)($7)
	$4 = (int_64)0
	$21 = *($24 + [8])
	if ( ((int_32)*($24 + [12]) == (int_32)$21) ){ goto $label$20 }
	$7 = (CASTING float_64)(uint_64 $14)
	$4 = (int_64)0
	$22 = [0]
	$23 = [0]
	
.LOOP $label$21:
	$21 = ($21 + $22)
	$16 = CALL __floatuntidf(*(($21 + [16])), *(($21 + [24])))
	$15 = CALL pow((float_64)10, (float_64)6)
	$21 = *($24 + [8])
	$16 = ((float_64)$16 * (float_64)$15)
	if ( (((float_64)$7 < (float_64)$16) | (((float_64)$7 != (float_64)$7) | ((float_64)$16 != (float_64)$16))) ){ goto $label$20 }
	$4 = *(($21 + $22))
	$22 = ($22 + [48])
	$23 = ($23 + [1])
	if ( ($23 <= ((int_32)(*($24 + [12]) - $21) / (int_32)[48])) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	if ( ($21 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	*($24 + [12]) = $21
	CALL $418($21)
	
.LABEL $label$18
	*($24 + [48]) = $4
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$22 }
	if ( (*(($6 + [32])) == 0) ){ goto $label$22 }
	*(($5 = (($24 + [8]) + [24]))) = (int_64)0
	$4 = *($0)
	*($17) = $4
	*($18) = (int_64)-1
	*((($24 + [8]) + [32])) = [0]
	*($24 + [8]) = $4
	$21 = CALL db_find_i64($4, $4, (int_64)-3020372007511536368, *($6))
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$23 }
	$21 = CALL $119(($24 + [8]), $21)
	CALL eosio_assert(((int_32)*($21 + [32]) == (int_32)($24 + [8])), [1056])
	CALL $120($0, *($21 + [24]), [-1])
	
.LABEL $label$23
	$23 = *($5)
	if ( ($23 == 0) ){ goto $label$22 }
	$21 = *($19)
	if ( ((int_32)$21 == (int_32)$23) ){ goto $label$25 }
	
.LOOP $label$26:
	$21 = ($21 + [-24])
	$22 = *($21)
	*($21) = [0]
	if ( ($22 == 0) ){ goto $label$27 }
	CALL $418($22)
	
.LABEL $label$27
	if ( ((int_32)$23 != (int_32)$21) ){ goto $label$26 }
	$21 = *($5)
	goto $label$24 
	
.LABEL $label$25
	$21 = $23
	
.LABEL $label$24
	*($19) = $23
	CALL $418($21)
	
.LABEL $label$22
	*($24 + [12]) = ($24 + [48])
	*($24 + [8]) = ($24 + [56])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [1120])
	CALL $121($3, $6, (int_64)0, ($24 + [8]))
	*($24 + [72]) = $2
	*($24 + [8]) = (int_64)0
	CALL $115(($24 + [64]), ($24 + [72]), ($24 + [8]))
	CALL prints([2048])
	$20 = ($20 + [1])
	$21 = *($24 + [68])
	if ( $21 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$20 = [0]
	
.LABEL $label$7
	CALL prints([2080])
	if ( $20 ){ goto $label$3 }
	goto $label$5 
	
.LABEL $label$6
	CALL prints([2096])
	if ( $20 ){ goto $label$3 }
	
.LABEL $label$5
	CALL eosio_assert([0], [2128])
	$21 = *($24 + [80])
	if ( $21 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL prints([2112])
	
.LABEL $label$3
	$21 = *($24 + [80])
	if ( ($21 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($24 + [84]) = $21
	CALL $418($21)
	
.LABEL $label$1
	*([0] + [4]) = ($24 + [96])
}

void .FUNC $147 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)5093418677667738272, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $149($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)5093418677667738272, $5))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*(($2 + [56])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

void .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $141 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [8])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [40])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)8759794652103573504, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [40]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [16])
	if ( (CALL memcmp((*($3 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [44]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)8759794652103573505, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [44])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $140 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [8])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [40])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)8759794652103573504, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [40]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [16])
	if ( (CALL memcmp((*($3 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [44]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)8759794652103573505, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [44])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $143 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $278 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4983115765679915008, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $279($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)4983115765679915008, $5))
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*($2 + [80]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $412 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
	$7 = *(($1 + [56]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020380869172259840, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $148 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $417([64])) + [48]) = $1
	CALL $152(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [52])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $151(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $418($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC __assert_fail (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [12]) = $2
	*($4 + [8]) = $3
	*($4 + [4]) = $1
	*($4) = $0
	CALL fprintf(*([0] + [13496]), [13504], $4)
	CALL fflush([0])
	CALL abort()
	(unreachable)
}

void .FUNC $98 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)-5966706556312485888, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $100($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)-5966706556312485888, $5))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*(($2 + [56])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

void .FUNC $99 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $417([64])) + [40]) = (int_64)1398362884
	*($4 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$2 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1824])
	*($4 + [48]) = $1
	CALL $104(($7 + [16]), $4)
	*($7 + [32]) = $4
	$2 = *($4)
	*($7 + [16]) = $2
	$6 = *($4 + [52])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $2
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $103(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $418($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $239 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [60])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [64])) = $6
	CALL $418($6)
	
.LABEL $label$11
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $418($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $238 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [32])
	$11 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	CALL $240(*($0 + [4]), $1)
	$4 = *($1 + [60])
	$3 = *(($1 + [64]))
	$5 = ($3 - $4)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[48]))
	$8 = [52]
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	$8 = ((((int_32)((uint_32)($5 + [-48]) / (uint_32)[48]) * (int_32)[44]) + $8) + [44])
	
.LABEL $label$2
	if ( ($8 <= [513]) ){ goto $label$4 }
	$10 = CALL malloc($8)
	goto $label$3 
	
.LABEL $label$4
	$10 = ($10 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$3
	*($11 + [12]) = $10
	*($11 + [8]) = $10
	*($11 + [16]) = ($10 + $8)
	CALL $225(($11 + [8]), $1)
	$9 = *($1)
	*($1 + [76]) = CALL db_store_i64(*($2 + [8]), (int_64)4983115765730246656, *(*($0 + [8])), $9, $10, $8)
	if ( ($8 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$8 = ($2 + [8])
	$9 = *($8)
	$10 = *(($0 + [8]))
	$6 = *($10)
	$7 = *($1)
	*($11 + [24]) = *($1 + [48])
	*($1 + [80]) = CALL db_idx64_store($9, (int_64)4983115765730246656, $6, $7, ($11 + [24]))
	$9 = *($10)
	$6 = *($8)
	$7 = *($1)
	*($11 + [24]) = *($1 + [56])
	*(($1 + [84])) = CALL db_idx64_store($6, (int_64)4983115765730246657, $9, $7, ($11 + [24]))
	*([0] + [4]) = ($11 + [32])
}

int_32 .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $95($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $422($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $417($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $422($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $418($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $419($7)
	return (unreachable)
}

void .FUNC $236 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $417([96])) + [40]) = (int_64)1398362884
	*($4 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$2 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1824])
	*($4 + [68]) = [0]
	*($4 + [60 align=4]) = (int_64)0
	*($4 + [72]) = $1
	CALL $238(($7 + [16]), $4)
	*($7 + [32]) = $4
	$2 = *($4)
	*($7 + [16]) = $2
	$6 = *($4 + [76])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $2
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $239(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	$4 = *($3 + [60])
	if ( ($4 == 0) ){ goto $label$9 }
	*(($3 + [64])) = $4
	CALL $418($4)
	
.LABEL $label$9
	CALL $418($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $417($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $436($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $418($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $234 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4983115765730246657, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $211($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)4983115765730246656, $5))
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*(($2 + [84])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $233 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [48])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [80])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)4983115765730246656, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [80]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [56])
	if ( (CALL memcmp((*($3 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [84]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)4983115765730246657, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [84])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $417([64])) + [48]) = $0
	*($6 + [8]) = (int_64)0
	CALL $92(($8 + [32]), $6)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $93(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [16])
	*($0 + [4]) = (*($0 + [4]) + [16])
	return $0
}

void .FUNC $230 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [48])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [80])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)4983115765730246656, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [80]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [56])
	if ( (CALL memcmp((*($3 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [84]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)4983115765730246657, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [84])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $411 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	$3 = *($3)
	$4 = *($3)
	*(($1 + [40])) = *(($3 + [8]))
	*($1 + [32]) = $4
	*($5 + [56]) = *($1 + [8])
	$4 = *($1)
	CALL eosio_assert([1], [1360])
	CALL eosio_assert([1], [1232])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [1232])
	$3 = ($1 + [8])
	CALL memcpy(($5 | [8]), $3, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($5 + [16]), ($1 + [16]), [16])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($5 + [32]), ($1 + [32]), [16])
	CALL db_update_i64(*($1 + [52]), $2, $5, [48])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($5 + [72]) = *($3)
	if ( (CALL memcmp(($5 + [56]), ($5 + [72]), [8]) == 0) ){ goto $label$2 }
	$3 = ($1 + [56])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020380869172259840, ($5 + [64]), $4)
	*($3) = $1
	
.LABEL $label$3
	CALL db_idx64_update($1, $2, ($5 + [72]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [80])
}

int_32 .FUNC $417 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [13468])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC __ofl_lock ()
{
	CALL __lock([13544])
	return [13552]
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $409 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC __lockfile (int_32 $0)
{
	int_32 $1
	return $1
}

int_32 .FUNC $415 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [13462]) == 0) ){ goto $label$2 }
	$7 = *([0] + [13464])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [13462]) = [1]
	$7 = ($7 << [16])
	*([0] + [13464]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [13464])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [13464]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [13462]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [13462]) = [1]
	$3 = ($3 << [16])
	*([0] + [13464]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [13464])
	
.LABEL $label$8
	*([0] + [13464]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC __unlockfile (int_32 $0)
{
}

void .FUNC $192 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $260 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	$10 = $11
	*([0] + [4]) = $11
	$3 = *($0 + [24])
	$8 = *(($0 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$7 = ($8 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($8 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($8 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$8 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($8)
	CALL db_get_i64($1, $3, $8)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($11 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $8)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $417([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$11 = ($5 + [16])
	$6 = ($5 + [8])
	$9 = (int_64)5462355
	$7 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [1824])
	*($5 + [24]) = $0
	CALL eosio_assert(((uint_32)$8 > (uint_32)[7]), [1024])
	CALL memcpy($5, $3, [8])
	$7 = ($8 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [1024])
	CALL memcpy($6, ($3 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [1024])
	CALL memcpy($11, ($3 + [16]), [8])
	*($5 + [32]) = [-1]
	*($5 + [28]) = $1
	*($10 + [24]) = $5
	$9 = *($5)
	*($10 + [16]) = $9
	$8 = *($5 + [28])
	*($10 + [12]) = $8
	$1 = ($0 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($7 + [8]) = $9
	*($7 + [16]) = $8
	*($10 + [24]) = [0]
	*($7) = $5
	*($1) = ($7 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $262($2, ($10 + [24]), ($10 + [16]), ($10 + [12]))
	
.LABEL $label$12
	$7 = *($10 + [24])
	*($10 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $418($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [32])
	return $5
}

int_32 .FUNC $414 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $415($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [13376])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC __ofl_unlock ()
{
	CALL __unlock([13544])
}

void .FUNC $261 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$7 = *(($1 + [32]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4983115765722716160, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $414([4980], $0)
}

void .FUNC __unlock (int_32 $0)
{
	*($0) = [0]
}

void .FUNC $262 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $410 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $417([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [4940]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $438($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $422($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $386 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $417([64])) + [48]) = $0
	*($6 + [8]) = (int_64)0
	CALL $393(($8 + [32]), $6)
	*($6 + [56]) = [-1]
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $391(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $303 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *($4 + [60])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [64])) = $6
	CALL $418($6)
	
.LABEL $label$7
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *($4 + [60])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [64])) = $6
	CALL $418($6)
	
.LABEL $label$10
	CALL $418($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [76])))
	$7 = *($1 + [80])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4983115765679915008, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	$7 = *(($1 + [84]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$14 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4983115765679915009, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	
.LABEL $label$14
	CALL db_idx64_remove($7)
	
.LABEL $label$13
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $302 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
	$7 = *(($1 + [56]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)4983115766044540448, $9, *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx128_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $301 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
	$7 = *(($1 + [56]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)4983115766044540576, $9, *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx128_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $263 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $265($0, ($1 + [60]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[15]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [4])
	return *($0 + [4]) = (*($0 + [4]) + [4])
}

int_32 .FUNC $307 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $309($0, ($1 + [60]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[15]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [4])
	return *($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $306 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $305 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $304 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $309 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[48]))
	$5 = *($0 + [4])
	$4 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [16]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $5) > (int_32)[0]), [1232])
	CALL memcpy(*($7), ($8 + [16]), [1])
	$5 = (*($7) + [1])
	*($7) = $5
	if ( $3 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$2 = ($8 + [28])
	
.LOOP $label$3:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [16])
	*($2) = ($7 + [32])
	*($8 + [20]) = ($7 + [8])
	CALL $310(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [48])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $308 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [48])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [80])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)4983115765679915008, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [80]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [56])
	if ( (CALL memcmp((*($3 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [84]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)4983115765679915009, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [84])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $423 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $421($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

void .FUNC _ZNSt3__19to_stringEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [13488], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $434(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $434(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $434 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$3 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$4 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$4 = *($0 + [4])
	
.LABEL $label$3
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$5 }
	CALL $426($0, $3, (($1 - $3) + $4), $4, $4, [0], [0])
	$5 = *($0)
	
.LABEL $label$5
	if ( ($5 & [1]) ){ goto $label$7 }
	$5 = ($0 + [1])
	goto $label$6 
	
.LABEL $label$7
	$5 = *($0 + [8])
	
.LABEL $label$6
	CALL memset(($5 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($1 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $1
	
.LABEL $label$8
	*(($5 + $1)) = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $437 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $417($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $436 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $431 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $430 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = *($0)
	if ( ($4 & [1]) ){ goto $label$2 }
	$4 = uint_32($4 >> [1])
	$3 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0 + [4])
	$3 = *($0 + [8])
	
.LABEL $label$1
	$0 = [-1]
	if ( ((uint_32)$4 <= (uint_32)$2) ){ goto $label$3 }
	$0 = ($4 - $2)
	if ( ($0 == 0) ){ goto $label$5 }
	$0 = CALL memchr(($3 + $2), ($1 & [255]), $0)
	goto $label$4 
	
.LABEL $label$5
	$0 = [0]
	
.LABEL $label$4
	$0 = ( ($0 - $3) ? [-1] : $0 )
	
.LABEL $label$3
	return $0
}

void .FUNC _ZNSt3__19to_stringEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [13472], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $434(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $434(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $432 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = CALL strlen($1)
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$6 = ($4 + $3)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$6 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($6 + [16]) & [-16])
	$6 = CALL $417($5)
	*($0) = ($5 | [1])
	*(($0 + [8])) = $6
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL $423($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC isspace (int_32 $0)
{
	return (((int_32)$0 == (int_32)[32]) | (($0 + [-9]) <= [5]))
}

int_32 .FUNC $438 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $417($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $282 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = *($0)
	$9 = *($0 + [8])
	$8 = ((int_32)($2 - $1) / (int_32)[48])
	if ( ((uint_32)$8 <= (uint_32)((int_32)($9 - $10) / (int_32)[48])) ){ goto $label$8 }
	if ( ($10 == 0) ){ goto $label$5 }
	$9 = *($0 + [4])
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$7 }
	$6 = ([0] - $10)
	$9 = ($9 + [-16])
	
.LOOP $label$9:
	$5 = *($9)
	if ( ($5 == 0) ){ goto $label$10 }
	*(($9 + [4])) = $5
	CALL $418($5)
	
.LABEL $label$10
	$9 = ($9 + [-48])
	if ( ((int_32)($9 + $6) != (int_32)[-16]) ){ goto $label$9 }
	$9 = *($0)
	goto $label$6 
	
.LABEL $label$8
	$6 = ((int_32)(*($0 + [4]) - $10) / (int_32)[48])
	$9 = ($1 + ((int_32)$6 * (int_32)[48]))
	$5 = ( $9 ? $2 : ((uint_32)$8 > (uint_32)$6) )
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	*($10) = *($1)
	*(($10 + [24])) = *(($1 + [24]))
	*(($10 + [16])) = *(($1 + [16]))
	*(($10 + [8])) = *(($1 + [8]))
	if ( ((int_32)$1 == (int_32)$10) ){ goto $label$13 }
	CALL $318(($10 + [32]), *(($1 + [32])), *(($1 + [36])))
	
.LABEL $label$13
	$10 = ($10 + [48])
	$1 = ($1 + [48])
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((uint_32)$8 <= (uint_32)$6) ){ goto $label$14 }
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$4 }
	$0 = ($0 + [4])
	$1 = *($0)
	
.LOOP $label$15:
	*($1) = *($9)
	*(($1 + [24])) = *(($9 + [24]))
	*(($1 + [16])) = *(($9 + [16]))
	*(($1 + [8])) = *(($9 + [8]))
	*($1 + [32]) = [0]
	*(($10 = ($1 + [36]))) = [0]
	*(($6 = ($1 + [40]))) = [0]
	$7 = ($9 + [32])
	$8 = ($9 + [36])
	$4 = (*($8) - *($7))
	$5 = int_32($4 >> [5])
	if ( ($5 == 0) ){ goto $label$16 }
	$3 = ($1 + [32])
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$2 }
	$1 = CALL $417($4)
	*($3) = $1
	*($6) = ($1 + ($5 << [5]))
	*($10) = $1
	$6 = *($7)
	$5 = (*($8) - $6)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$16 }
	CALL memcpy($1, $6, $5)
	*($10) = (*($10) + $5)
	
.LABEL $label$16
	$1 = (*($0) + [48])
	*($0) = $1
	$9 = ($9 + [48])
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$15 }
	goto $label$4 
	
.LABEL $label$14
	$0 = ($0 + [4])
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)$10) ){ goto $label$17 }
	$5 = ([0] - $10)
	$1 = ($1 + [-16])
	
.LOOP $label$18:
	$9 = *($1)
	if ( ($9 == 0) ){ goto $label$19 }
	*(($1 + [4])) = $9
	CALL $418($9)
	
.LABEL $label$19
	$1 = ($1 + [-48])
	if ( ((int_32)($1 + $5) != (int_32)[-16]) ){ goto $label$18 }
	
.LABEL $label$17
	*($0) = $10
	return (unreachable)
	
.LABEL $label$7
	$9 = $10
	
.LABEL $label$6
	*(($0 + [4])) = $10
	CALL $418($9)
	$9 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$8 >= (uint_32)[89478486]) ){ goto $label$1 }
	$10 = [89478485]
	$9 = ((int_32)$9 / (int_32)[48])
	if ( ((uint_32)$9 > (uint_32)[44739241]) ){ goto $label$20 }
	$10 = ($9 << [1])
	$10 = ( $8 ? $10 : ($10 <= $8) )
	
.LABEL $label$20
	$9 = ((int_32)$10 * (int_32)[48])
	$10 = CALL $417($9)
	*($0) = $10
	*($0 + [4]) = $10
	*(($0 + [8])) = ($10 + $9)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$4 }
	$0 = ($0 + [4])
	
.LOOP $label$21:
	*($10) = *($1)
	*(($10 + [24])) = *(($1 + [24]))
	*(($10 + [16])) = *(($1 + [16]))
	*(($10 + [8])) = *(($1 + [8]))
	*($10 + [32]) = [0]
	*(($9 = ($10 + [36]))) = [0]
	*(($6 = ($10 + [40]))) = [0]
	$7 = ($1 + [32])
	$8 = ($1 + [36])
	$4 = (*($8) - *($7))
	$5 = int_32($4 >> [5])
	if ( ($5 == 0) ){ goto $label$22 }
	$3 = ($10 + [32])
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$3 }
	$10 = CALL $417($4)
	*($3) = $10
	*($6) = ($10 + ($5 << [5]))
	*($9) = $10
	$6 = *($7)
	$5 = (*($8) - $6)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$22 }
	CALL memcpy($10, $6, $5)
	*($9) = (*($9) + $5)
	
.LABEL $label$22
	$10 = (*($0) + [48])
	*($0) = $10
	$1 = ($1 + [48])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$21 }
	
.LABEL $label$4
	return (unreachable)
	
.LABEL $label$3
	CALL $436($3)
	
.LABEL $label$2
	CALL $436($3)
	
.LABEL $label$1
	CALL $436($0)
	(unreachable)
}

void .FUNC $268 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [48])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [80])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)4983115765713469440, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [80]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [56])
	if ( (CALL memcmp((*($3 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [84]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)4983115765713469441, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [84])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$2 = ((int_32)($5 - $4) / (int_32)[48])
	$7 = ($2 + [1])
	if ( ((uint_32)$7 >= (uint_32)[89478486]) ){ goto $label$2 }
	$6 = [89478485]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[48])
	if ( ((uint_32)$3 > (uint_32)[44739241]) ){ goto $label$4 }
	$6 = ($3 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $417(((int_32)$6 * (int_32)[48]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = ($5 - $4)
	$2 = CALL memcpy(($7 + ((int_32)$2 * (int_32)[48])), $1, [48])
	$1 = ($2 + ((int_32)((int_32)$5 / (int_32)[-48]) * (int_32)[48]))
	$6 = ($7 + ((int_32)$6 * (int_32)[48]))
	$7 = ($2 + [48])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $4, $5)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $128 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $286 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$2 = ((int_32)($5 - $4) / (int_32)[48])
	$7 = ($2 + [1])
	if ( ((uint_32)$7 >= (uint_32)[89478486]) ){ goto $label$2 }
	$6 = [89478485]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[48])
	if ( ((uint_32)$3 > (uint_32)[44739241]) ){ goto $label$4 }
	$6 = ($3 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $417(((int_32)$6 * (int_32)[48]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = ($5 - $4)
	$2 = CALL memcpy(($7 + ((int_32)$2 * (int_32)[48])), $1, [48])
	$1 = ($2 + ((int_32)((int_32)$5 / (int_32)[-48]) * (int_32)[48]))
	$6 = ($7 + ((int_32)$6 * (int_32)[48]))
	$7 = ($2 + [48])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $4, $5)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	(unreachable)
}

int_32 .FUNC $287 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	$9 = $10
	*([0] + [4]) = $10
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$5 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$5 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$5
	CALL db_get_i64($1, $5, $6)
	*($9 + [12]) = $5
	*($9 + [8]) = $5
	*($9 + [16]) = ($5 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($5)
	
.LABEL $label$7
	$2 = ($0 + [24])
	*(($5 = CALL $417([80])) + [32]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [40]) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$4 = ($5 + [32])
	$3 = ($5 + [24])
	$8 = (int_64)5462355
	$6 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$7 = [0]
	
.LABEL $label$8
	CALL eosio_assert($7, [1824])
	*($5 + [56]) = [0]
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [64]) = $0
	$6 = *($9 + [12])
	$7 = *((($9 + [8]) + [8]))
	CALL eosio_assert(((uint_32)($7 - $6) > (uint_32)[7]), [1024])
	CALL memcpy($5, $6, [8])
	$10 = ($6 + [8])
	CALL eosio_assert(((uint_32)($7 - $10) > (uint_32)[7]), [1024])
	CALL memcpy(($5 + [8]), $10, [8])
	*($9 + [12]) = ($6 + [16])
	*($9 + [24]) = ($9 + [8])
	*($9 + [36]) = $3
	*($9 + [32]) = ($5 + [16])
	*($9 + [40]) = $4
	*($9 + [44]) = ($5 + [48])
	CALL $319(($9 + [32]), ($9 + [24]))
	*($5 + [68]) = $1
	*($9 + [24]) = $5
	$8 = *($5)
	*($9 + [32]) = $8
	$7 = *($5 + [68])
	*($9 + [4]) = $7
	$1 = ($0 + [28])
	$6 = *($1)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($6 + [8]) = $8
	*($6 + [16]) = $7
	*($9 + [24]) = [0]
	*($6) = $5
	*($1) = ($6 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $317($2, ($9 + [24]), ($9 + [32]), ($9 + [4]))
	
.LABEL $label$13
	$6 = *($9 + [24])
	*($9 + [24]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = *(($6 + [48]))
	if ( ($7 == 0) ){ goto $label$15 }
	*(($6 + [52])) = $7
	CALL $418($7)
	
.LABEL $label$15
	CALL $418($6)
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [48])
	return $5
}

void .FUNC $284 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $417([64])) + [40]) = (int_64)1398362884
	*($4 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$2 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1824])
	*($4 + [48]) = $1
	CALL $322(($7 + [16]), $4)
	*($7 + [32]) = $4
	$2 = *($4)
	*($7 + [16]) = $2
	$6 = *($4 + [52])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $2
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $323(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $418($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $285 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1680])
	$6 = *($0 + [4])
	$7 = *($6 + [32])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)4983115765975810048, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [32]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [1056])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $297($2, CALL $fimport$18(*($2), *($2 + [8]), (int_64)4983115765975810048, $3))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [1056])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [32])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $123 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($1 + [16]) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	$4 = *($1)
	CALL eosio_assert([1], [1360])
	CALL eosio_assert([1], [1232])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($5 + [16]), ($1 + [16]), [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($5 + [24]), ($1 + [24]), [8])
	CALL db_update_i64(*($1 + [36]), $2, $5, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $122 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $417([48])) + [24]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [32]) = $1
	CALL $124(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $125(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $418($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $288 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [68]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1616])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)4983115766110178336)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1552])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1552])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $287(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $289 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$2 = int_32(($6 - $5) >> [5])
	$3 = ($2 + [1])
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$3 }
	$4 = [134217727]
	$7 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($7 >> [5]) > (uint_32)[67108862]) ){ goto $label$5 }
	$4 = int_32($7 >> [4])
	$4 = ( $3 ? $4 : ($4 <= $3) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[134217728]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $417(($4 << [5]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $436($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($2 << [5])))) = *($1)
	*(($3 + [24])) = *(($1 + [24]))
	*(($3 + [16])) = *(($1 + [16]))
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($6 - $5)
	$6 = ($3 - $1)
	$4 = ($7 + ($4 << [5]))
	$3 = ($3 + [32])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($6, $5, $1)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $418($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $127 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	$10 = $11
	*([0] + [4]) = $11
	$3 = *($0 + [24])
	$8 = *(($0 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$7 = ($8 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($8 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($8 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$8 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($8)
	CALL db_get_i64($1, $3, $8)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($11 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $8)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $417([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$11 = ($5 + [16])
	$6 = ($5 + [8])
	$9 = (int_64)5462355
	$7 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [1824])
	*($5 + [24]) = $0
	CALL eosio_assert(((uint_32)$8 > (uint_32)[7]), [1024])
	CALL memcpy($5, $3, [8])
	$7 = ($8 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [1024])
	CALL memcpy($6, ($3 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [1024])
	CALL memcpy($11, ($3 + [16]), [8])
	*($5 + [32]) = [-1]
	*($5 + [28]) = $1
	*($10 + [24]) = $5
	$9 = *($5)
	*($10 + [16]) = $9
	$8 = *($5 + [28])
	*($10 + [12]) = $8
	$1 = ($0 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($7 + [8]) = $9
	*($7 + [16]) = $8
	*($10 + [24]) = [0]
	*($7) = $5
	*($1) = ($7 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $185($2, ($10 + [24]), ($10 + [16]), ($10 + [12]))
	
.LABEL $label$12
	$7 = *($10 + [24])
	*($10 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $418($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [32])
	return $5
}

void .FUNC $125 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	$3 = *(*(*($0 + [4])))
	*($1 + [8]) = (int_64)0
	$2 = *($0)
	*($1) = $3
	*($1 + [16]) = (int_64)0
	*($1 + [24]) = (int_64)0
	CALL eosio_assert([1], [1232])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($4 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($4 + [16]), ($1 + [16]), [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($4 + [24]), ($1 + [24]), [8])
	$3 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)-3020372007511536368, *(*($0 + [8])), $3, $4, [32])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [32])
}

void .FUNC $182 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*(($11 = $9) + [64]) = $2
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($11 + [48]) = *($1 + [80])
	*($11 + [56]) = *($1 + [88])
	*($1 + [80]) = (int_64)3
	$10 = *($1)
	*($11 + [40]) = $10
	CALL eosio_assert([1], [1360])
	$5 = *($1 + [92])
	$4 = *(($1 + [96]))
	$6 = ($4 - $5)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[48]))
	$7 = [84]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$2 }
	$7 = ((((int_32)((uint_32)($6 + [-48]) / (uint_32)[48]) * (int_32)[44]) + $7) + [44])
	
.LABEL $label$2
	if ( ($7 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($7)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($11 + [28]) = $9
	*($11 + [24]) = $9
	*($11 + [32]) = ($9 + $7)
	CALL $186(($11 + [24]), $1)
	CALL db_update_i64(*(($1 + [108])), $2, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL free($9)
	$10 = *($11 + [40])
	
.LABEL $label$5
	$7 = ($0 + [36])
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($11 + [4]) = $1
	*($11) = $0
	*($11 + [12]) = $1
	*($11 + [8]) = ($11 + [48])
	*($11 + [16]) = ($11 + [40])
	*($11 + [20]) = ($11 + [64])
	*($11 + [72]) = $11
	CALL $187(($11 + [72]), $7, ($7 + [1]))
	*([0] + [4]) = ($11 + [80])
}

void .FUNC $185 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $184 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$7 = *(($1 + [32]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4983115765756270592, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $187 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [80])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [112])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)4983115765747023872, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [112]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [88])
	if ( (CALL memcmp((*($3 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [116]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)4983115765747023873, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [116])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $186 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $188($0, ($1 + [92]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[15]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [4])
	return *($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $358 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($1 + [8]) = [1]
	*($1 + [16]) = (int_64)0
	$4 = *($1)
	*($1 + [24]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($1 + [28]) = (CASTING uint_32)(float_64 ((float_64)CALL floor((CASTING float_64)(uint_32 ((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$16() / (uint_64)(int_64)1000000)) + [86400]) / (uint_32)[86400]))) * (float_64)(float_64)86400))
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1360])
	*($5 + [40]) = ($5 + [28])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $379(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [36]), $2, $5, [28])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $359 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $417([64])) + [48]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1024])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((uint_32)($4 + [-8]) > (uint_32)[15]), [1024])
	CALL memcpy(($6 + [16]), ($7 + [8]), [16])
	CALL eosio_assert(((uint_32)($4 + [-24]) > (uint_32)[15]), [1024])
	CALL memcpy(($6 + [32]), ($7 + [24]), [16])
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $403(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $478 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0 + [28])
	$6 = (*($0 + [20]) - $4)
	$3 = *($0 + [84])
	$5 = *($3 + [4])
	$6 = ( $5 ? $6 : ($5 <= $6) )
	if ( ($6 == 0) ){ goto $label$1 }
	CALL memcpy(*($3), $4, $6)
	*($3) = (*($3) + $6)
	$5 = (*($5) - $6)
	*(($5 = ($3 + [4]))) = $5
	
.LABEL $label$1
	$6 = *($3)
	$5 = ( $5 ? $2 : ($5 <= $2) )
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memcpy($6, $1, $5)
	$6 = (*($3) + $5)
	*($3) = $6
	*(($3 = ($3 + [4]))) = (*($3) - $5)
	
.LABEL $label$2
	*($6) = [0]
	$3 = *($0 + [44])
	*(($0 + [28])) = $3
	*(($0 + [20])) = $3
	return $2
}

void .FUNC $354 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [160])
	*([0] + [4]) = $9
	*(($9 + [76])) = *(($1 + [44]))
	*(($7 = (($9 + [64]) + [8]))) = *(($1 + [40]))
	*($9 + [64]) = *($1 + [32])
	*($9 + [68]) = *(($1 + [36]))
	$5 = *($1 + [24])
	$4 = *($1 + [16])
	$3 = *($1 + [8])
	$2 = *($1)
	*(($8 = (($9 + [48]) + [8]))) = *(($1 + [56]))
	*($9 + [48]) = *($1 + [48])
	$6 = *($1 + [64])
	CALL $437(($9 + [32]), ($1 + [72]))
	*((($9 + [96]) + [8])) = *($8)
	*((($9 + [80]) + [8])) = *($7)
	*($9 + [96]) = *($9 + [48])
	*($9 + [80]) = *($9 + [64])
	$1 = *($0 + [4])
	$7 = *($1 + [4])
	$0 = (*(*($0)) + int_32($7 >> [1]))
	$1 = *($1)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($7 = (($9 + [144]) + [8]))) = *((($9 + [80]) + [8]))
	*(($8 = (($9 + [128]) + [8]))) = *((($9 + [96]) + [8]))
	*($9 + [144]) = *($9 + [80])
	*($9 + [128]) = *($9 + [96])
	CALL $437(($9 + [112]), ($9 + [32]))
	*((($9 + [16]) + [8])) = *($7)
	*(($9 + [8])) = *($8)
	*($9 + [16]) = *($9 + [144])
	*($9) = *($9 + [128])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $4), (int_64 $5), (int_64 ($9 + [16])), (int_32 $9), (int_32 $6), (int_64 ($9 + [112])), (int_32 $1))
	if ( ((*($9 + [112]) & [1]) == 0) ){ goto $label$2 }
	CALL $418(*($9 + [120]))
	
.LABEL $label$2
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$3 }
	CALL $418(*($9 + [40]))
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [160])
}

void .FUNC $355 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($2 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($2 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $2
	CALL $356(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $356 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [32]), *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [40]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [48]), *($2 + [4]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $3) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [56]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [64]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $94(*($1), ($0 + [72]))
}

int_32 .FUNC $357 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $417([48])) + [32]) = $0
	*($6 + [16]) = (int_64)0
	CALL $408(($8 + [32]), $6)
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $409(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $350 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_64 $7, int_32 $8)
{
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [160])
	*([0] + [4]) = $17
	CALL require_auth(*($0))
	$12 = (int_64)0
	$14 = (int_64)59
	$0 = [1040]
	$10 = (int_64)0
	
.LOOP $label$1:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$2 }
	$9 = *($0)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$9 = ($9 + [165])
	goto $label$3 
	
.LABEL $label$4
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$1 }
	$12 = (int_64)0
	$11 = (int_64)59
	$0 = [2992]
	$13 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$10 }
	$9 = *($0)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$9 = ($9 + [165])
	goto $label$8 
	
.LABEL $label$10
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$6
	$0 = ($0 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$5 }
	$12 = (int_64)0
	$14 = (int_64)59
	$0 = [1040]
	$15 = (int_64)0
	
.LOOP $label$11:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$12 }
	$9 = *($0)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$9 = ($9 + [165])
	goto $label$13 
	
.LABEL $label$14
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$12
	$0 = ($0 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$15 = ((int_64)$11 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$11 }
	$12 = (int_64)0
	$11 = (int_64)59
	$0 = [4272]
	$16 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$12 > (uint_64)(int_64)4) ){ goto $label$20 }
	$9 = *($0)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$9 = ($9 + [165])
	goto $label$18 
	
.LABEL $label$20
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$16
	$0 = ($0 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$14 | (int_64)$16)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$15 }
	*(($17 + [44])) = *(($5 + [12]))
	*(($17 + [40])) = *(($5 + [8]))
	*(($17 + [36])) = *(($5 + [4]))
	*($17 + [8]) = $2
	*($17) = $1
	*($17 + [16]) = $3
	*($17 + [24]) = $4
	*($17 + [32]) = *($5)
	*(($17 + [56])) = *(($6 + [8]))
	*($17 + [48]) = *($6)
	*($17 + [64]) = $7
	CALL $437(($17 + [72]), $8)
	*($17 + [96]) = $16
	*($17 + [88]) = $15
	*(($0 = CALL $417([16]))) = $10
	*($0 + [8]) = $13
	*(($17 + [120])) = [0]
	$9 = ($0 + [16])
	*(($17 + [112])) = $9
	*(($17 + [108])) = $9
	*($17 + [104]) = $0
	*($17 + [116]) = [0]
	*((($17 + [88]) + [36])) = [0]
	$0 = *($17 + [72])
	$9 = ( *(($17 + [76])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	$0 = ($9 + [72])
	$12 = (CASTING uint_64)(uint_32 $9)
	$9 = ($17 + [116])
	
.LOOP $label$21:
	$0 = ($0 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$21 }
	if ( ($0 == 0) ){ goto $label$23 }
	CALL $96($9, $0)
	$9 = *(($17 + [120]))
	$0 = *(($17 + [116]))
	goto $label$22 
	
.LABEL $label$23
	$9 = [0]
	$0 = [0]
	
.LABEL $label$22
	*($17 + [132]) = $0
	*($17 + [128]) = $0
	*($17 + [136]) = $9
	*($17 + [144]) = ($17 + [128])
	*($17 + [152]) = $17
	CALL $351(($17 + [152]), ($17 + [144]))
	CALL $109(($17 + [128]), ($17 + [88]))
	$0 = *($17 + [128])
	CALL send_inline($0, (*($17 + [132]) - $0))
	$0 = *($17 + [128])
	if ( ($0 == 0) ){ goto $label$24 }
	*($17 + [132]) = $0
	CALL $418($0)
	
.LABEL $label$24
	$0 = *($17 + [116])
	if ( ($0 == 0) ){ goto $label$25 }
	*(($17 + [120])) = $0
	CALL $418($0)
	
.LABEL $label$25
	$0 = *($17 + [104])
	if ( ($0 == 0) ){ goto $label$26 }
	*(($17 + [108])) = $0
	CALL $418($0)
	
.LABEL $label$26
	if ( ((*($17 + [72]) & [1]) == 0) ){ goto $label$27 }
	CALL $418(*(($17 + [80])))
	
.LABEL $label$27
	*([0] + [4]) = ($17 + [160])
}

void .FUNC $351 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($2 + [16]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($2 + [24]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $2
	CALL $352(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $352 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($3 + [32]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($3 + [40]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($0 + [48]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((int_32)(*($2 + [8]) - $3) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($0 + [56]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($0 + [64]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $113(*($1), ($0 + [72]))
}

void .FUNC $353 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [24]) = (int_64)0
	*($0 + [32]) = (int_64)0
	*(($0 + [40])) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1824])
	*(($0 + [56])) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [1824])
	*($0 + [64]) = (int_64)0
	*($0 + [72 align=4]) = (int_64)0
	*(($0 + [80])) = [0]
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $355(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $29 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	float_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	int_64 $25
	int_32 $26
	int_32 $27
	$27 = (*([0] + [4]) - [192])
	*([0] + [4]) = $27
	CALL require_auth($1)
	$2 = ($0 + [8])
	*($27 + [168]) = $2
	*($27 + [40]) = $1
	CALL $385(($27 + [160]), ($27 + [168]), ($27 + [40]))
	$20 = *($27 + [164])
	if ( ($20 == 0) ){ goto $label$1 }
	$4 = (($27 + [40]) | [1])
	$12 = (($27 + [8]) + [8])
	$14 = (($27 + [40]) + [16])
	$3 = (($27 + [40]) + [32])
	$15 = ($3 + [4])
	$16 = ($27 + [132])
	$18 = ($0 + [36])
	$17 = ($27 + [124])
	$19 = [0]
	
.LOOP $label$2:
	if ( ((int_64)*($20 + [8]) != (int_64)$1) ){ goto $label$1 }
	$22 = *(($20 + [40]))
	$24 = *($20 + [32])
	$5 = *($20 + [16])
	$21 = ((int_64)$5 & (int_64)255)
	$26 = (uint_64)($21 <= (int_64)11)
	CALL eosio_assert($26, [4784])
	$6 = (CASTING float_64)(uint_64 (int_64))((int_64)10 - $21)
	$7 = (Rounds 0)(((float_64)CALL __floatuntidf($24, $22) / (float_64)CALL $472((float_64)10, $6)))
	CALL eosio_assert((uint_64)(((int_64)$7) + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1760])
	$22 = (uint_64)$5 >> (uint_64)(int_64)8)
	$20 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$9 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	
.LABEL $label$3
	CALL eosio_assert($9, [1824])
	$8 = *((*($27 + [164]) + [24]))
	CALL eosio_assert($26, [4784])
	CALL __fixunsdfti(($27 + [8]), ((float_64)CALL $fimport$8($7, (int_64)$7 >> (int_64)63)) * (float_64)CALL $472((float_64)10, $6)))
	$24 = *($27 + [8])
	$26 = *($27 + [164])
	$22 = *($26 + [32])
	*($27 + [144]) = (int_64))($22 - $24)
	*($27 + [152]) = (int_64))((int_64))(*(($26 + [40])) - *($12)) - (CASTING uint_64)(uint_32 (uint_64)($22 <= $24)))
	if ( ((int_64)$7 < (int_64)1) ){ goto $label$10 }
	$25 = *($0)
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [2992]
	$23 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$16 }
	$9 = *($20)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$9 = ($9 + [165])
	goto $label$14 
	
.LABEL $label$16
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$12
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$11 }
	*((($27 + [88]) + [8])) = $23
	*($27 + [88]) = $25
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [2000]
	$23 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$22 > (uint_64)(int_64)7) ){ goto $label$22 }
	$9 = *($20)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$9 = ($9 + [165])
	goto $label$20 
	
.LABEL $label$22
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$18
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$17 }
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [1040]
	$25 = (int_64)0
	
.LOOP $label$23:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$24 }
	$9 = *($20)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$9 = ($9 + [165])
	goto $label$25 
	
.LABEL $label$26
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$24
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$25 = ((int_64)$21 | (int_64)$25)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$23 }
	CALL $410(($27 + [24]), ($26 + [8]))
	*(($13 = (($27 + [40]) + [8]))) = $25
	*($14) = $7
	*((($27 + [40]) + [24])) = $5
	*($15) = *($27 + [28])
	$20 = (($27 + [24]) + [8])
	*(($3 + [8])) = *($20)
	*($27 + [40]) = *($0)
	*($3) = *($27 + [24])
	*($27 + [24]) = [0]
	*($27 + [28]) = [0]
	*($20) = [0]
	CALL $109(($27 + [176]), CALL $363(($27 + [104]), ($27 + [88]), $8, $23, ($27 + [40])))
	$9 = *($27 + [176])
	CALL send_inline($9, (*($27 + [180]) - $9))
	$9 = *($27 + [176])
	if ( ($9 == 0) ){ goto $label$27 }
	*($27 + [180]) = $9
	CALL $418($9)
	
.LABEL $label$27
	$9 = *($16)
	if ( ($9 == 0) ){ goto $label$28 }
	*((($27 + [104]) + [32])) = $9
	CALL $418($9)
	
.LABEL $label$28
	$9 = *((($27 + [104]) + [16]))
	if ( ($9 == 0) ){ goto $label$29 }
	*($17) = $9
	CALL $418($9)
	
.LABEL $label$29
	if ( ((*($3) & [1]) == 0) ){ goto $label$30 }
	CALL $418(*((($27 + [40]) + [40])))
	
.LABEL $label$30
	if ( ((*($27 + [24]) & [1]) == 0) ){ goto $label$31 }
	CALL $418(*($20))
	
.LABEL $label$31
	$22 = *(*($27 + [164]))
	$10 = *(($0 + [32]))
	$26 = *($18)
	if ( ((int_32)$26 == (int_32)$10) ){ goto $label$32 }
	$20 = ($26 + [-24])
	$11 = ([0] - $10)
	
.LOOP $label$33:
	if ( ((int_64)*(*($20)) == (int_64)$22) ){ goto $label$32 }
	$26 = $20
	$9 = ($20 + [-24])
	$20 = $9
	if ( ((int_32)($9 + $11) != (int_32)[-24]) ){ goto $label$33 }
	
.LABEL $label$32
	if ( ((int_32)$26 == (int_32)$10) ){ goto $label$9 }
	$20 = *(($26 + [-24]))
	CALL eosio_assert(((int_32)*($20 + [48]) == (int_32)$2), [1056])
	goto $label$8 
	
.LABEL $label$10
	CALL $388(($27 + [160]))
	$20 = *($27 + [164])
	if ( $20 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$9
	$20 = [0]
	$9 = CALL db_find_i64(*($2), *(($0 + [16])), (int_64)-3020380869172259840, $22)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$8 }
	$20 = CALL $386($2, $9)
	CALL eosio_assert(((int_32)*($20 + [48]) == (int_32)$2), [1056])
	
.LABEL $label$8
	CALL $388(($27 + [160]))
	if ( (int_64)(((int_64)*($27 + [144]) | (int_64)*($27 + [152])) == 0) ){ goto $label$35 }
	CALL prints([4928])
	CALL _ZNSt3__19to_stringEy(($27 + [40]), *($27 + [144]))
	CALL prints(( *($13) ? $4 : (*($27 + [40]) & [1]) ))
	if ( ((*($27 + [40]) & [1]) == 0) ){ goto $label$36 }
	CALL $418(*($13))
	
.LABEL $label$36
	*($27 + [40]) = ($27 + [144])
	CALL eosio_assert(((int_32)$20 != (int_32)[0]), [1120])
	CALL $411($2, $20, (int_64)0, ($27 + [40]))
	if ( ((int_32)$19 < (int_32)[4]) ){ goto $label$34 }
	goto $label$1 
	
.LABEL $label$35
	$9 = ((int_32)$20 != (int_32)[0])
	CALL eosio_assert($9, [2400])
	CALL eosio_assert($9, [1680])
	$9 = CALL db_next_i64(*($20 + [52]), ($27 + [40]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$37 }
	CALL $386($2, $9)
	
.LABEL $label$37
	CALL $412($2, $20)
	if ( ((int_32)$19 >= (int_32)[4]) ){ goto $label$1 }
	
.LABEL $label$34
	$19 = ($19 + [1])
	$20 = *($27 + [164])
	if ( $20 ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($27 + [192])
}

void .FUNC $310 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1232])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $0, [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((int_32)(*($2 + [8]) - $1) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $311 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [48])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [80])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)4983115765679915008, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [80]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [56])
	if ( (CALL memcmp((*($3 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [84]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)4983115765679915009, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [84])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

void .FUNC _Z10str_to_sigRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [176])
	*([0] + [4]) = $7
	$4 = [0]
	$5 = CALL $430($1, [95], [0])
	CALL eosio_assert(((int_32)$5 != (int_32)[-1]), [512])
	CALL $438(($7 + [160]), $1, [0], $5, $1)
	$6 = *($7 + [160])
	$3 = CALL strlen([544])
	if ( ((int_32)$3 != (int_32)( *($7 + [164]) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$1 }
	$4 = (CALL $431(($7 + [160]), [0], [-1], [544], $3) == 0)
	
.LABEL $label$1
	CALL eosio_assert($4, [560])
	$6 = ($5 + [1])
	$4 = CALL $430($1, [95], $6)
	CALL eosio_assert(((int_32)$4 != (int_32)[-1]), [608])
	CALL $438(($7 + [144]), $1, $6, ($4 + ((int_32)$5 ^ (int_32)[-1])), $1)
	$5 = *($7 + [144])
	$6 = CALL strlen([640])
	if ( ((int_32)$6 != (int_32)( *($7 + [148]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$4 }
	if ( (CALL $431(($7 + [144]), [0], [-1], [640], $6) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = [0]
	$6 = *($7 + [144])
	$3 = CALL strlen([656])
	if ( ((int_32)$3 != (int_32)( *($7 + [148]) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$2 }
	$5 = (CALL $431(($7 + [144]), [0], [-1], [656], $3) == 0)
	goto $label$2 
	
.LABEL $label$3
	$5 = [1]
	
.LABEL $label$2
	CALL eosio_assert($5, [672])
	$5 = [0]
	$6 = *($7 + [144])
	$3 = CALL strlen([640])
	if ( ((int_32)$3 != (int_32)( *($7 + [148]) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$5 }
	$5 = (CALL $431(($7 + [144]), [0], [-1], [640], $3) == 0)
	
.LABEL $label$5
	CALL $438(($7 + [128]), $1, ($4 + [1]), [-1], $1)
	$1 = *($7 + [128])
	CALL eosio_assert(((int_32)( *($7 + [132]) ? uint_32($1 >> [1]) : ($1 & [1]) ) != (int_32)[0]), [688])
	*($7 + [112]) = (int_64)0
	*($7 + [120]) = [0]
	CALL eosio_assert(CALL $17(( *($7 + [136]) ? (($7 + [128]) | [1]) : (*($7 + [128]) & [1]) ), ($7 + [112])), [720])
	CALL eosio_assert(((int_32)(*($7 + [116]) - *($7 + [112])) == (int_32)[69]), [752])
	if ( (*($2) == 0) ){ goto $label$6 }
	CALL memmove(($7 + [40]), *($7 + [112]), [65])
	*($7 + [106]) = [49]
	*($7 + [105]) = ( [75] ? [82] : $5 )
	CALL ripemd160(($7 + [40]), [67], $7)
	CALL eosio_assert((CALL $480($7, (*($7 + [116]) + [-4]), [4]) == 0), [784])
	
.LABEL $label$6
	*($0) = ((int_32)$5 ^ (int_32)[1])
	$0 = ($0 + [1])
	$1 = [0]
	$5 = *($7 + [112])
	
.LOOP $label$7:
	*(($0 + $1)) = *(($5 + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[65]) ){ goto $label$7 }
	*($7 + [116]) = $5
	CALL $418($5)
	if ( ((*($7 + [128]) & [1]) == 0) ){ goto $label$8 }
	CALL $418(*(($7 + [136])))
	
.LABEL $label$8
	if ( ((*($7 + [144]) & [1]) == 0) ){ goto $label$9 }
	CALL $418(*($7 + [152]))
	
.LABEL $label$9
	if ( ((*($7 + [160]) & [1]) == 0) ){ goto $label$10 }
	CALL $418(*($7 + [168]))
	
.LABEL $label$10
	*([0] + [4]) = ($7 + [176])
}

int_32 .FUNC _Z13decode_base58RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_6vectorIhNS3_IhEEEE (int_32 $0, int_32 $1)
{
	return CALL _Z12DecodeBase58PKcRNSt3__16vectorIhNS1_9allocatorIhEEEE(( *($0 + [8]) ? ($0 + [1]) : (*($0) & [1]) ), $1)
}

void .FUNC _Z16symbol_to_stringN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	*($0) = (int_64)0
	*($0 + [8]) = [0]
	$2 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	if ( (int_64)($2) == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	CALL $425($0, int_32(((CASTING uint_32)(uint_64 $2) << [24]) >> [24]))
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$2 }
	
.LABEL $label$1
}

void .FUNC _Z10str_to_pubRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [128])
	*([0] + [4]) = $6
	*(($6 + [120])) = [0]
	*($6 + [112]) = (int_64)0
	$3 = CALL strlen([816])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($6 + [112]) = ($3 << [1])
	$4 = (($6 + [112]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($3 + [16]) & [-16])
	$4 = CALL $417($5)
	*($6 + [112]) = ($5 | [1])
	*($6 + [120]) = $4
	*($6 + [116]) = $3
	
.LABEL $label$3
	CALL memcpy($4, [816], $3)
	
.LABEL $label$2
	$5 = [0]
	*(($4 + $3)) = [0]
	$3 = *($6 + [112])
	CALL $438(($6 + [96]), $1, ( *($6 + [116]) ? uint_32($3 >> [1]) : ($3 & [1]) ), [-1], $1)
	*($6 + [80]) = (int_64)0
	*($6 + [88]) = [0]
	CALL eosio_assert(CALL $17(( *($6 + [104]) ? (($6 + [96]) | [1]) : (*($6 + [96]) & [1]) ), ($6 + [80])), [832])
	CALL eosio_assert(((int_32)(*($6 + [84]) - *($6 + [80])) == (int_32)[37]), [864])
	if ( (*($2) == 0) ){ goto $label$5 }
	CALL memmove(($6 + [40]), *($6 + [80]), [33])
	CALL ripemd160(($6 + [40]), [33], $6)
	CALL eosio_assert((CALL $480($6, (*($6 + [84]) + [-4]), [4]) == 0), [896])
	
.LABEL $label$5
	*($0) = [0]
	$4 = ($0 + [1])
	$3 = *($6 + [80])
	
.LOOP $label$6:
	*(($4 + $5)) = *(($3 + $5))
	$5 = ($5 + [1])
	if ( ((int_32)$5 != (int_32)[33]) ){ goto $label$6 }
	*($6 + [84]) = $3
	CALL $418($3)
	if ( ((*($6 + [96]) & [1]) == 0) ){ goto $label$7 }
	CALL $418(*(($6 + [104])))
	
.LABEL $label$7
	if ( ((*($6 + [112]) & [1]) == 0) ){ goto $label$8 }
	CALL $418(*($6 + [120]))
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [128])
	return (unreachable)
	
.LABEL $label$1
	CALL $419(($6 + [112]))
}

void .FUNC $25 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = ($3 & [1])
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : $5 )
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($4 + $3)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $417($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : $5 ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $423($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $419($0)
}

void .FUNC _Z15asset_to_stringN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	*([0] + [4]) = $10
	*($10 + [64]) = [0]
	*($10 + [68 align=4]) = (int_64)0
	$9 = ( [928] ? [944] : ((int_64)*($1) < (int_64)0) )
	$2 = CALL strlen($9)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($10 + [64]) = ($2 << [1])
	$6 = (($10 + [64]) | [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $417($5)
	*($10 + [64]) = ($5 | [1])
	*($10 + [72]) = $6
	*($10 + [68]) = $2
	
.LABEL $label$3
	CALL memcpy($6, $9, $2)
	
.LABEL $label$2
	$9 = [0]
	*(($6 + $2)) = [0]
	$4 = *($1 + [8])
	$3 = CALL llabs(*($1))
	CALL _ZNSt3__19to_stringEy(($10 + [48]), $3)
	$8 = ((int_64)$4 & (int_64)255)
	if ( (int_64)($8 == 0) ){ goto $label$5 }
	$7 = (int_64))((int_64)0 - $8)
	$8 = (int_64)1
	
.LOOP $label$6:
	$8 = ((int_64)$8 * (int_64)10)
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)0) ){ goto $label$6 }
	CALL _ZNSt3__19to_stringEy(($10 + [32]), ((uint_64)$3 / (uint_64)$8))
	if ( (*($10 + [48]) & [1]) ){ goto $label$8 }
	*($10 + [48]) = [0]
	goto $label$7 
	
.LABEL $label$8
	*(*($10 + [56])) = [0]
	*($10 + [52]) = [0]
	
.LABEL $label$7
	CALL $422(($10 + [48]), [0])
	$6 = (($10 + [32]) + [8])
	*((($10 + [48]) + [8])) = *($6)
	*($10 + [48]) = *($10 + [32])
	CALL _ZNSt3__19to_stringEy(($10 + [16]), ((int_64)((uint_64)$3 % (uint_64)$8) + (int_64)$8))
	CALL $432(($10 + [32]), [960], CALL $429(($10 + [16]), [0], [1]))
	$2 = *($10 + [32])
	$1 = ($2 & [1])
	CALL $423(($10 + [48]), ( *($10 + [40]) ? (($10 + [32]) | [1]) : $1 ), ( *($10 + [36]) ? uint_32($2 >> [1]) : $1 ))
	if ( ((*($10 + [32]) & [1]) == 0) ){ goto $label$9 }
	CALL $418(*($6))
	
.LABEL $label$9
	if ( ((*($10 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $418(*($10 + [24]))
	
.LABEL $label$5
	CALL $25(($10 + [16]), ($10 + [64]), ($10 + [48]))
	$2 = CALL $424(($10 + [16]), [976])
	$1 = ($2 + [8])
	*((($10 + [32]) + [8])) = *($1)
	*($10 + [32]) = *($2)
	*($2) = [0]
	*(($2 + [4])) = [0]
	*($1) = [0]
	*($10 + [8]) = [0]
	*($10) = (int_64)0
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( (int_64)($8) == 0) ){ goto $label$11 }
	
.LOOP $label$12:
	CALL $425($10, int_32(((CASTING uint_32)(uint_64 $8) << [24]) >> [24]))
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	$6 = *(($10 + [8]))
	$9 = *($10 + [4])
	$2 = *($10)
	goto $label$10 
	
.LABEL $label$11
	$6 = [0]
	$2 = [0]
	
.LABEL $label$10
	$1 = ($2 & [1])
	$2 = CALL $423(($10 + [32]), ( $6 ? ($10 | [1]) : $1 ), ( $9 ? uint_32(($2 & [254]) >> [1]) : $1 ))
	$8 = *($2)
	*($2) = (int_64)0
	*($0) = $8
	$2 = ($2 + [8])
	*(($0 + [8])) = *($2)
	*($2) = [0]
	if ( ((*($10) & [1]) == 0) ){ goto $label$13 }
	CALL $418(*(($10 + [8])))
	
.LABEL $label$13
	if ( ((*($10 + [32]) & [1]) == 0) ){ goto $label$14 }
	CALL $418(*($10 + [40]))
	
.LABEL $label$14
	if ( ((*($10 + [16]) & [1]) == 0) ){ goto $label$15 }
	CALL $418(*($10 + [24]))
	
.LABEL $label$15
	if ( ((*($10 + [48]) & [1]) == 0) ){ goto $label$16 }
	CALL $418(*($10 + [56]))
	
.LABEL $label$16
	if ( ((*($10 + [64]) & [1]) == 0) ){ goto $label$17 }
	CALL $418(*($10 + [72]))
	
.LABEL $label$17
	*([0] + [4]) = ($10 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $419(($10 + [64]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [416])
	*([0] + [4]) = $3
	*(($3 + [24])) = $0
	*(($3 + [32])) = (int_64)-1
	*(($3 + [40])) = (int_64)0
	*(($3 + [48])) = [0]
	*($3 + [16]) = $0
	*($3 + [8]) = $0
	*(($3 + [52])) = [0]
	*($3 + [56]) = $0
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = [0]
	*(($3 + [84])) = [0]
	*(($3 + [88])) = [0]
	*($3 + [96]) = $0
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = [0]
	*(($3 + [124])) = [0]
	*(($3 + [128])) = [0]
	*(($3 + [132])) = [0]
	*($3 + [136]) = $0
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = [0]
	*(($3 + [164])) = [0]
	*(($3 + [168])) = [0]
	*($3 + [176]) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = [0]
	*(($3 + [204])) = [0]
	*(($3 + [208])) = [0]
	*($3 + [216]) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = [0]
	*(($3 + [244])) = [0]
	*(($3 + [248])) = [0]
	*($3 + [256]) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = [0]
	*(($3 + [284])) = [0]
	*(($3 + [288])) = [0]
	*($3 + [296]) = $0
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = [0]
	*(($3 + [324])) = [0]
	*(($3 + [328])) = [0]
	*(($3 + [332])) = [0]
	*($3 + [336]) = $0
	*(($3 + [344])) = $0
	*(($3 + [352])) = (int_64)-1
	*(($3 + [360])) = [0]
	*(($3 + [364])) = [0]
	*(($3 + [368])) = [0]
	*($3 + [376]) = $0
	*(($3 + [384])) = $0
	*(($3 + [392])) = (int_64)-1
	*(($3 + [400])) = [0]
	*(($3 + [404])) = [0]
	*(($3 + [408])) = [0]
	CALL $28(($3 + [8]), $1, $2)
	CALL eosio_exit([0])
	(unreachable)
}

void .FUNC _Z18get_transaction_idv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = CALL transaction_size()
	$4 = *([0] + [4])
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	$3 = CALL read_transaction($2, $1)
	CALL eosio_assert(((int_32)$1 == (int_32)$3), [992])
	CALL sha256($2, $3, $0)
	*([0] + [4]) = $4
}

int_32 .FUNC $329 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [1712])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = ((int_32)($4 - $7) / (int_32)[48])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $330($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ((int_32)$6 * (int_32)[48]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($8 + [28])
	
.LOOP $label$6:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [16])
	*($6) = ($7 + [32])
	*($8 + [20]) = ($7 + [8])
	CALL $331(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [48])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $328 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [60])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [64])) = $6
	CALL $418($6)
	
.LABEL $label$11
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $418($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $193 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = ((int_32)$3 / (int_32)[48])
	if ( ((uint_32)$4 <= (uint_32)((int_32)($8 - $5) / (int_32)[48])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $418($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[89478486]) ){ goto $label$1 }
	$5 = [89478485]
	$2 = ((int_32)$8 / (int_32)[48])
	if ( ((uint_32)$2 > (uint_32)[44739241]) ){ goto $label$6 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	
.LABEL $label$6
	$4 = ((int_32)$5 * (int_32)[48])
	$5 = CALL $417($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + ((int_32)((uint_32)$3 / (uint_32)[48]) * (int_32)[48]))
	return 
	
.LABEL $label$4
	$3 = ((int_32)(*($0 + [4]) - $5) / (int_32)[48])
	$6 = ( ($1 + ((int_32)$3 * (int_32)[48])) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$8 = ($6 - $1)
	$7 = ((int_32)$8 / (int_32)[48])
	if ( ($8 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $8)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $6)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $6, $1)
	*($0) = (*($0) + ((int_32)((uint_32)$1 / (uint_32)[48]) * (int_32)[48]))
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ((int_32)$7 * (int_32)[48]))
	return (unreachable)
	
.LABEL $label$1
	CALL $436($0)
}

int_32 .FUNC __towrite (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

void .FUNC $321 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $6) >> [5]) >= (uint_32)$1) ){ goto $label$6 }
	$8 = *($0)
	$2 = int_32(($6 - $8) >> [5])
	$3 = ($2 + $1)
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$4 }
	$6 = [134217727]
	$7 = ($7 - $8)
	if ( ((uint_32)int_32($7 >> [5]) > (uint_32)[67108862]) ){ goto $label$7 }
	$6 = int_32($7 >> [4])
	$6 = ( $3 ? $6 : ($6 <= $3) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$3 }
	
.LABEL $label$7
	$7 = CALL $417(($6 << [5]))
	goto $label$2 
	
.LABEL $label$6
	$8 = ($0 + [4])
	
.LOOP $label$8:
	*($6) = (int_64)0
	*($6 + [16]) = (int_64)0
	*(($6 + [8])) = (int_64)0
	*(($6 = ($6 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$5 = (uint_64)*($6) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$7 = [0]
	
.LABEL $label$9
	CALL eosio_assert($7, [1824])
	$6 = (*($8) + [32])
	*($8) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$7 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $436($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$3 = ($7 + ($6 << [5]))
	$2 = ($7 + ($2 << [5]))
	$7 = $2
	
.LOOP $label$14:
	*($7) = (int_64)0
	*($7 + [16]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($6 = ($7 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$5 = (uint_64)*($6) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$8 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$8 = [0]
	
.LABEL $label$15
	CALL eosio_assert($8, [1824])
	$7 = ($7 + [32])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$14 }
	$6 = *($0)
	$4 = ($0 + [4])
	$8 = (*($4) - $6)
	$1 = ($2 - $8)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$20 }
	CALL memcpy($1, $6, $8)
	$6 = *($0)
	
.LABEL $label$20
	*($0) = $1
	*($4) = $7
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$1 }
	CALL $418($6)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $320 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [1712])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [5])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $321($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [5]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$3 = *($4)
	
.LOOP $label$6:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[15]), [1024])
	CALL memcpy($7, *($4), [16])
	$3 = (*($4) + [16])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [1024])
	CALL memcpy(($7 + [16]), *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [1024])
	CALL memcpy(($7 + [24]), *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	$7 = ($7 + [32])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $323 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $322 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	*([0] + [4]) = $9
	$4 = *($0 + [4])
	*($1) = *(*(*($4) + [4]))
	$2 = *($0)
	$6 = *(*($4) + [4])
	$3 = *($6 + [16])
	*(($5 = ($1 + [24]))) = *(($6 + [24]))
	*($1 + [16]) = $3
	$4 = *(*($4) + [4])
	*($1 + [32]) = *($4 + [32])
	*(($6 = ($1 + [40]))) = *(($4 + [40]))
	CALL eosio_assert([1], [1232])
	CALL memcpy($9, $1, [8])
	CALL eosio_assert([1], [1232])
	$4 = ($1 + [16])
	CALL memcpy(($9 | [8]), $4, [16])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($9 + [24]), ($1 + [32]), [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($9 + [32]), $6, [8])
	$3 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)4983115766044540448, *(*($0 + [8])), $3, $9, [40])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = *(($2 + [8]))
	$7 = *(*(($0 + [8])))
	$8 = *($1)
	*($9 + [56]) = *($5)
	*($9 + [48]) = *($4)
	*($1 + [56]) = CALL db_idx128_store($3, (int_64)4983115766044540448, $7, $8, ($9 + [48]))
	*([0] + [4]) = ($9 + [64])
}

int_32 .FUNC $325 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [1712])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$3 = *($1)
	$4 = *($1 + [4])
	$6 = ((int_32)($4 - $3) / (int_32)[48])
	$7 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$7 <= (uint_32)$6) ){ goto $label$3 }
	CALL $326($1, ($7 - $6))
	$4 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$7 >= (uint_32)$6) ){ goto $label$2 }
	$7 = ((int_32)$7 * (int_32)[48])
	$2 = ($3 + $7)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$4 }
	$6 = (([0] - $3) - $7)
	$7 = ($4 + [-16])
	
.LOOP $label$5:
	$4 = *($7)
	if ( ($4 == 0) ){ goto $label$6 }
	*(($7 + [4])) = $4
	CALL $418($4)
	
.LABEL $label$6
	$7 = ($7 + [-48])
	if ( ((int_32)($7 + $6) != (int_32)[-16]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $2
	$4 = $2
	
.LABEL $label$2
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$7 }
	$6 = ($8 + [28])
	
.LOOP $label$8:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [16])
	*($6) = ($7 + [32])
	*($8 + [20]) = ($7 + [8])
	CALL $319(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [48])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [32])
	return $0
}

int_32 .FUNC $324 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $327 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $329($0, ($1 + [60]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1024])
	CALL memcpy(($1 + [56]), *($0 + [4]), [4])
	return *($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $326 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)((int_32)($8 - $7) / (int_32)[48]) >= (uint_32)$1) ){ goto $label$5 }
	$2 = *($0)
	$9 = ((int_32)($7 - $2) / (int_32)[48])
	$5 = ($9 + $1)
	if ( ((uint_32)$5 >= (uint_32)[89478486]) ){ goto $label$3 }
	$7 = [89478485]
	$8 = ((int_32)($8 - $2) / (int_32)[48])
	if ( ((uint_32)$8 > (uint_32)[44739241]) ){ goto $label$6 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$8 = CALL $417(((int_32)$7 * (int_32)[48]))
	goto $label$2 
	
.LABEL $label$5
	$9 = ($0 + [4])
	
.LOOP $label$7:
	*(($2 = CALL memset($7, [0], [48])) + [16]) = (int_64)0
	*($2 + [8]) = (int_64)0
	*(($7 = ($2 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$6 = (uint_64)*($7) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$9:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	CALL eosio_assert($8, [1824])
	*(($2 + [40])) = [0]
	*($2 + [32 align=4]) = (int_64)0
	$7 = (*($9) + [48])
	*($9) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $436($0)
	
.LABEL $label$2
	$3 = ($8 + ((int_32)$7 * (int_32)[48]))
	$9 = ($8 + ((int_32)$9 * (int_32)[48]))
	$8 = $9
	
.LOOP $label$12:
	*(($2 = CALL memset($8, [0], [48])) + [16]) = (int_64)0
	*($2 + [8]) = (int_64)0
	*(($7 = ($2 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$6 = (uint_64)*($7) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$14:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	CALL eosio_assert($8, [1824])
	*(($2 + [40])) = [0]
	*($2 + [32 align=4]) = (int_64)0
	$8 = ($2 + [48])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$12 }
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$18 }
	$4 = ([0] - $7)
	$7 = ($2 + [-48])
	
.LOOP $label$19:
	*(($9 + [-48])) = *($7)
	*(($9 + [-24])) = *(($7 + [24]))
	*(($9 + [-32])) = *(($7 + [16]))
	*(($9 + [-40])) = *(($7 + [8]))
	*(($2 = ($9 + [-16]))) = [0]
	*(($1 = ($9 + [-12]))) = [0]
	$5 = ($7 + [32])
	*($2) = *($5)
	*(($2 = ($9 + [-8]))) = [0]
	*($1) = *(($7 + [36]))
	$1 = ($7 + [40])
	*($2) = *($1)
	*($1) = [0]
	*($5) = (int_64)0
	$9 = ($9 + [-48])
	$7 = ($7 + [-48])
	if ( ((int_32)($7 + $4) != (int_32)[-48]) ){ goto $label$19 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$17 
	
.LABEL $label$18
	$1 = $7
	
.LABEL $label$17
	*($0) = $9
	*(($0 + [4])) = $8
	*(($0 + [8])) = $3
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$20 }
	$2 = ([0] - $1)
	$7 = ($7 + [-16])
	
.LOOP $label$21:
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$22 }
	*(($7 + [4])) = $8
	CALL $418($8)
	
.LABEL $label$22
	$7 = ($7 + [-48])
	if ( ((int_32)($7 + $2) != (int_32)[-16]) ){ goto $label$21 }
	
.LABEL $label$20
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $418($1)
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $101 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($8 + [56]) = *(($1 + [24]))
	*($8 + [48]) = *($1 + [16])
	$5 = *($1)
	$7 = *($1 + [32])
	$3 = ($1 + [40])
	$6 = *($3)
	$4 = *($3)
	CALL eosio_assert(((int_64)*($4 + [8]) == (int_64)$6), [1856])
	$7 = ((int_64)$7 + (int_64)*($4))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1904])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [1936])
	*($3) = $6
	*($1 + [32]) = $7
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [1360])
	CALL eosio_assert([1], [1232])
	CALL memcpy($8, $1, [8])
	CALL eosio_assert([1], [1232])
	$4 = ($1 + [16])
	CALL memcpy(($8 | [8]), $4, [16])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($8 + [24]), ($1 + [32]), [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($8 + [32]), $3, [8])
	CALL db_update_i64(*($1 + [52]), $2, $8, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [80]) = *($4)
	*($8 + [88]) = *(($4 + [8]))
	if ( (CALL memcmp(($8 + [48]), ($8 + [80]), [16]) == 0) ){ goto $label$2 }
	$3 = ($1 + [56])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-5966706556312485888, ($8 + [64]), $5)
	*($3) = $1
	
.LABEL $label$3
	CALL db_idx128_update($1, $2, ($8 + [80]))
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [96])
}

int_32 .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $417([64])) + [40]) = (int_64)1398362884
	*($4 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1824])
	*($4 + [48]) = $0
	CALL $102(($8 + [32]), $4)
	*($4 + [56]) = [-1]
	*($4 + [52]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [52])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $103($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $418($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $103 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $105 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [52]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1616])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-5966706556312485888)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1552])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1552])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $100(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	$2 = *($0)
	$3 = *($0 + [4])
	$6 = *($3)
	$4 = *($6 + [16])
	if ( ((int_64)$4 != (int_64)-1) ){ goto $label$1 }
	$4 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-5966706556312485888, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $100($6, $5)
	*($10 + [4]) = [0]
	*($10) = $6
	$4 = *(*(CALL $105($10) + [4]))
	$4 = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $4
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($4 <= (int_64)-2), [1488])
	*($1) = *(($6 + [16]))
	$6 = *($3 + [4])
	$4 = *($6)
	*(($5 = ($1 + [24]))) = *(($6 + [8]))
	*($1 + [16]) = $4
	$6 = *($3 + [8])
	*($1 + [32]) = *($6)
	*(($3 = ($1 + [40]))) = *(($6 + [8]))
	$6 = $11
	$11 = ($6 + [-48])
	*([0] + [4]) = $11
	CALL eosio_assert([1], [1232])
	CALL memcpy($11, $1, [8])
	CALL eosio_assert([1], [1232])
	$7 = ($1 + [16])
	CALL memcpy(($6 + [-40]), $7, [16])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($6 + [-24]), ($1 + [32]), [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($6 + [-16]), $3, [8])
	$4 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-5966706556312485888, *(*($0 + [8])), $4, $11, [40])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$4 = *(($2 + [8]))
	$8 = *(*(($0 + [8])))
	$9 = *($1)
	*($10 + [8]) = *($5)
	*($10) = *($7)
	*($1 + [56]) = CALL db_idx128_store($4, (int_64)-5966706556312485888, $8, $9, $10)
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $107 (int_32 $0, int_64 $1, float_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	$20 = (*([0] + [4]) - [192])
	*([0] + [4]) = $20
	*((($20 + [136]) + [32])) = [0]
	*($20 + [152]) = (int_64)-1
	$16 = *($0)
	*($20 + [136]) = $16
	*($20 + [144]) = $16
	*($20 + [160]) = (int_64)0
	*($20 + [172]) = [0]
	$14 = CALL db_lowerbound_i64($16, $16, (int_64)-5966706556312485888, (int_64)0)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$1 }
	$4 = (($20 + [16]) + [32])
	$13 = CALL $100(($20 + [136]), $14)
	$10 = (($20 + [16]) + [16])
	$11 = ($20 + [108])
	$12 = ($20 + [100])
	
.LOOP $label$2:
	$5 = *(($13 + [40]))
	$6 = (Rounds 0)(CALL floor(((float_64)((float_64)(CASTING float_64)(int_64 *($13 + [32])) * (float_64)$2) / (float_64)(float_64)100)))
	if ( ((int_64)$6 < (int_64)1) ){ goto $label$3 }
	*(($14 = (($20 + [120]) + [8]))) = $5
	$9 = ($13 + [24])
	$17 = *($9)
	$15 = *($13 + [16])
	*(($20 + [12])) = *((($20 + [120]) + [12]))
	*(($20 + [8])) = *($14)
	$16 = (int_64)0
	*($20 + [120]) = (int_64))((int_64)0 - $6)
	*($20 + [4]) = *($20 + [124])
	*($20) = *($20 + [120])
	CALL $97($0, $15, $17, $20)
	$17 = (int_64)59
	$14 = [1968]
	$18 = (int_64)0
	
.LOOP $label$4:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$5 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$7 = ($7 + [165])
	goto $label$6 
	
.LABEL $label$7
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$5
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$18 = ((int_64)$15 | (int_64)$18)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$4 }
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1984]
	$19 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$13 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$7 = ($7 + [165])
	goto $label$11 
	
.LABEL $label$13
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$9
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$17 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$8 }
	*((($20 + [64]) + [8])) = $19
	*($20 + [64]) = $18
	$8 = *($9)
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2000]
	$18 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$16 > (uint_64)(int_64)7) ){ goto $label$19 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$7 = ($7 + [165])
	goto $label$17 
	
.LABEL $label$19
	$17 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$15
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$14 }
	$16 = (int_64)0
	$17 = (int_64)59
	$14 = [1968]
	$19 = (int_64)0
	
.LOOP $label$20:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$21 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$7 = ($7 + [165])
	goto $label$22 
	
.LABEL $label$23
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$21
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$15 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$20 }
	*((($20 + [16]) + [8])) = $1
	*($10) = $6
	*((($20 + [16]) + [24])) = $5
	*($20 + [16]) = $19
	CALL $437($4, $3)
	CALL $109(($20 + [176]), CALL $108(($20 + [80]), ($20 + [64]), $8, $18, ($20 + [16])))
	$14 = *($20 + [176])
	CALL send_inline($14, (*($20 + [180]) - $14))
	$14 = *($20 + [176])
	if ( ($14 == 0) ){ goto $label$24 }
	*($20 + [180]) = $14
	CALL $418($14)
	
.LABEL $label$24
	$14 = *($11)
	if ( ($14 == 0) ){ goto $label$25 }
	*((($20 + [80]) + [32])) = $14
	CALL $418($14)
	
.LABEL $label$25
	$14 = *((($20 + [80]) + [16]))
	if ( ($14 == 0) ){ goto $label$26 }
	*($12) = $14
	CALL $418($14)
	
.LABEL $label$26
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	CALL $418(*((($20 + [16]) + [40])))
	
.LABEL $label$3
	CALL eosio_assert([1], [1680])
	$14 = CALL db_next_i64(*($13 + [52]), ($20 + [16]))
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$1 }
	$13 = CALL $100(($20 + [136]), $14)
	goto $label$2 
	
.LABEL $label$1
	$13 = *($20 + [160])
	if ( ($13 == 0) ){ goto $label$27 }
	$4 = ($20 + [164])
	$14 = *($4)
	if ( ((int_32)$14 == (int_32)$13) ){ goto $label$29 }
	
.LOOP $label$30:
	$14 = ($14 + [-24])
	$7 = *($14)
	*($14) = [0]
	if ( ($7 == 0) ){ goto $label$31 }
	CALL $418($7)
	
.LABEL $label$31
	if ( ((int_32)$13 != (int_32)$14) ){ goto $label$30 }
	$14 = *(($20 + [160]))
	goto $label$28 
	
.LABEL $label$29
	$14 = $13
	
.LABEL $label$28
	*($4) = $13
	CALL $418($14)
	
.LABEL $label$27
	*([0] + [4]) = ($20 + [192])
}

void .FUNC $28 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [544])
	*([0] + [4]) = $3
	if ( ((int_64)*($0) != (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$2 > (int_64)-2618116264966488065) ){ goto $label$34 }
	if ( ((int_64)$2 <= (int_64)-6571125054631837697) ){ goto $label$33 }
	if ( ((int_64)$2 <= (int_64)-4420675752651915265) ){ goto $label$31 }
	if ( ((int_64)$2 <= (int_64)-4352386753648847361) ){ goto $label$27 }
	if ( ((int_64)$2 == (int_64)-4352386753648847360) ){ goto $label$19 }
	if ( ((int_64)$2 == (int_64)-3075276114268356608) ){ goto $label$18 }
	if ( ((int_64)$2 != (int_64)-3020380528709553664) ){ goto $label$1 }
	*($3 + [276]) = [0]
	*($3 + [272]) = [1]
	*($3 + [264 align=4]) = *($3 + [272])
	CALL $76($0, ($3 + [264]))
	goto $label$1 
	
.LABEL $label$34
	if ( ((int_64)$2 <= (int_64)4983115765741370367) ){ goto $label$32 }
	if ( ((int_64)$2 <= (int_64)4983115766035873791) ){ goto $label$30 }
	if ( ((int_64)$2 <= (int_64)5445032172421558783) ){ goto $label$26 }
	if ( ((int_64)$2 == (int_64)5445032172421558784) ){ goto $label$17 }
	if ( ((int_64)$2 == (int_64)8421045207927095296) ){ goto $label$16 }
	if ( ((int_64)$2 != (int_64)8759794652399610368) ){ goto $label$1 }
	*($3 + [340]) = [0]
	*($3 + [336]) = [2]
	*($3 + [200 align=4]) = *($3 + [336])
	CALL $46($0, ($3 + [200]))
	goto $label$1 
	
.LABEL $label$33
	if ( ((int_64)$2 > (int_64)-6571125122277572609) ){ goto $label$29 }
	if ( ((int_64)$2 > (int_64)-6571125140531183617) ){ goto $label$25 }
	if ( ((int_64)$2 == (int_64)-8279611178955571200) ){ goto $label$15 }
	if ( ((int_64)$2 != (int_64)-7704843147539906560) ){ goto $label$1 }
	*($3 + [300]) = [0]
	*($3 + [296]) = [3]
	*($3 + [240 align=4]) = *($3 + [296])
	CALL $70($0, ($3 + [240]))
	goto $label$1 
	
.LABEL $label$32
	if ( ((int_64)$2 > (int_64)4921565071114911743) ){ goto $label$28 }
	if ( ((int_64)$2 > (int_64)3626342911988498431) ){ goto $label$24 }
	if ( ((int_64)$2 == (int_64)-2618116264966488064) ){ goto $label$14 }
	if ( ((int_64)$2 != (int_64)-2618023243457495040) ){ goto $label$1 }
	*($3 + [324]) = [0]
	*($3 + [320]) = [4]
	*($3 + [216 align=4]) = *($3 + [320])
	CALL $32($0, ($3 + [216]))
	goto $label$1 
	
.LABEL $label$31
	if ( ((int_64)$2 > (int_64)-6215726818809348097) ){ goto $label$23 }
	if ( ((int_64)$2 == (int_64)-6571125054631837696) ){ goto $label$13 }
	if ( ((int_64)$2 != (int_64)-6563311103172935680) ){ goto $label$1 }
	*($3 + [436]) = [0]
	*($3 + [432]) = [5]
	*($3 + [104 align=4]) = *($3 + [432])
	CALL $48($0, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$30
	if ( ((int_64)$2 > (int_64)4983115765758147583) ){ goto $label$22 }
	if ( ((int_64)$2 == (int_64)4983115765741370368) ){ goto $label$12 }
	if ( ((int_64)$2 != (int_64)4983115765756275024) ){ goto $label$1 }
	*($3 + [364]) = [0]
	*($3 + [360]) = [6]
	*($3 + [176 align=4]) = *($3 + [360])
	CALL $46($0, ($3 + [176]))
	goto $label$1 
	
.LABEL $label$29
	if ( ((int_64)$2 > (int_64)-6571125088991576065) ){ goto $label$21 }
	if ( ((int_64)$2 == (int_64)-6571125122277572608) ){ goto $label$11 }
	if ( ((int_64)$2 != (int_64)-6571125106171445248) ){ goto $label$1 }
	*($3 + [516]) = [0]
	*($3 + [512]) = [7]
	*($3 + [24 align=4]) = *($3 + [512])
	CALL $34($0, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$28
	if ( ((int_64)$2 > (int_64)4983115765724593151) ){ goto $label$20 }
	if ( ((int_64)$2 == (int_64)4921565071114911744) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)4983115765722720592) ){ goto $label$1 }
	*($3 + [396]) = [0]
	*($3 + [392]) = [8]
	*($3 + [144 align=4]) = *($3 + [392])
	CALL $46($0, ($3 + [144]))
	goto $label$1 
	
.LABEL $label$27
	if ( ((int_64)$2 == (int_64)-4420675752651915264) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)-4417247484950164112) ){ goto $label$1 }
	*($3 + [452]) = [0]
	*($3 + [448]) = [9]
	*($3 + [88 align=4]) = *($3 + [448])
	CALL $44($0, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$26
	if ( ((int_64)$2 == (int_64)4983115766035873792) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)4983115766035874816) ){ goto $label$1 }
	*($3 + [420]) = [0]
	*($3 + [416]) = [10]
	*($3 + [120 align=4]) = *($3 + [416])
	CALL $50($0, ($3 + [120]))
	goto $label$1 
	
.LABEL $label$25
	if ( ((int_64)$2 == (int_64)-6571125140531183616) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)-6571125122814443520) ){ goto $label$1 }
	*($3 + [484]) = [0]
	*($3 + [480]) = [11]
	*($3 + [56 align=4]) = *($3 + [480])
	CALL $34($0, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$24
	if ( ((int_64)$2 == (int_64)3626342911988498432) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)4921564802787365024) ){ goto $label$1 }
	*($3 + [540]) = [0]
	*($3 + [536]) = [12]
	*($3) = *($3 + [536])
	CALL $30($0, $3)
	goto $label$1 
	
.LABEL $label$23
	if ( ((int_64)$2 == (int_64)-6215726818809348096) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-4851655213501644800) ){ goto $label$1 }
	*($3 + [460]) = [0]
	*($3 + [456]) = [13]
	*($3 + [80 align=4]) = *($3 + [456])
	CALL $30($0, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$22
	if ( ((int_64)$2 == (int_64)4983115765758147584) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)4983115765975951872) ){ goto $label$1 }
	*($3 + [412]) = [0]
	*($3 + [408]) = [14]
	*($3 + [128 align=4]) = *($3 + [408])
	CALL $46($0, ($3 + [128]))
	goto $label$1 
	
.LABEL $label$21
	if ( ((int_64)$2 == (int_64)-6571125088991576064) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-6571125071811706880) ){ goto $label$1 }
	*($3 + [500]) = [0]
	*($3 + [496]) = [15]
	*($3 + [40 align=4]) = *($3 + [496])
	CALL $34($0, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$20
	if ( ((int_64)$2 == (int_64)4983115765724593152) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)4983115765739497808) ){ goto $label$1 }
	*($3 + [380]) = [0]
	*($3 + [376]) = [16]
	*($3 + [160 align=4]) = *($3 + [376])
	CALL $46($0, ($3 + [160]))
	goto $label$1 
	
.LABEL $label$19
	*($3 + [292]) = [0]
	*($3 + [288]) = [17]
	*($3 + [248 align=4]) = *($3 + [288])
	CALL $72($0, ($3 + [248]))
	goto $label$1 
	
.LABEL $label$18
	*($3 + [348]) = [0]
	*($3 + [344]) = [18]
	*($3 + [192 align=4]) = *($3 + [344])
	CALL $62($0, ($3 + [192]))
	goto $label$1 
	
.LABEL $label$17
	*($3 + [284]) = [0]
	*($3 + [280]) = [19]
	*($3 + [256 align=4]) = *($3 + [280])
	CALL $74($0, ($3 + [256]))
	goto $label$1 
	
.LABEL $label$16
	*($3 + [444]) = [0]
	*($3 + [440]) = [20]
	*($3 + [96 align=4]) = *($3 + [440])
	CALL $46($0, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$15
	*($3 + [308]) = [0]
	*($3 + [304]) = [21]
	*($3 + [232 align=4]) = *($3 + [304])
	CALL $30($0, ($3 + [232]))
	goto $label$1 
	
.LABEL $label$14
	*($3 + [332]) = [0]
	*($3 + [328]) = [22]
	*($3 + [208 align=4]) = *($3 + [328])
	CALL $32($0, ($3 + [208]))
	goto $label$1 
	
.LABEL $label$13
	*($3 + [492]) = [0]
	*($3 + [488]) = [23]
	*($3 + [48 align=4]) = *($3 + [488])
	CALL $34($0, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$12
	*($3 + [388]) = [0]
	*($3 + [384]) = [24]
	*($3 + [152 align=4]) = *($3 + [384])
	CALL $50($0, ($3 + [152]))
	goto $label$1 
	
.LABEL $label$11
	*($3 + [476]) = [0]
	*($3 + [472]) = [25]
	*($3 + [64 align=4]) = *($3 + [472])
	CALL $34($0, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [356]) = [0]
	*($3 + [352]) = [26]
	*($3 + [184 align=4]) = *($3 + [352])
	CALL $60($0, ($3 + [184]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [316]) = [0]
	*($3 + [312]) = [27]
	*($3 + [224 align=4]) = *($3 + [312])
	CALL $67($0, ($3 + [224]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [428]) = [0]
	*($3 + [424]) = [28]
	*($3 + [112 align=4]) = *($3 + [424])
	CALL $50($0, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [524]) = [0]
	*($3 + [520]) = [29]
	*($3 + [16 align=4]) = *($3 + [520])
	CALL $34($0, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [468]) = [0]
	*($3 + [464]) = [30]
	*($3 + [72 align=4]) = *($3 + [464])
	CALL $30($0, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [532]) = [0]
	*($3 + [528]) = [31]
	*($3 + [8 align=4]) = *($3 + [528])
	CALL $32($0, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [372]) = [0]
	*($3 + [368]) = [32]
	*($3 + [168 align=4]) = *($3 + [368])
	CALL $50($0, ($3 + [168]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [508]) = [0]
	*($3 + [504]) = [33]
	*($3 + [32 align=4]) = *($3 + [504])
	CALL $34($0, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [404]) = [0]
	*($3 + [400]) = [34]
	*($3 + [136 align=4]) = *($3 + [400])
	CALL $50($0, ($3 + [136]))
	
.LABEL $label$1
	*([0] + [4]) = ($3 + [544])
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $96($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [1232])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [1232])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $111(CALL $110($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $108 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $417([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $96($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $112(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

int_32 .FUNC strnlen (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL memchr($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC strerror (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL __lctrans($3, *([0] + [20]))
	$2 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*(($2 + [15376])) == (int_32)$0) ){ goto $label$4 }
	$1 = [87]
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[87]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$1 = $2
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = [15472]
	
.LOOP $label$6:
	$0 = *($2)
	$3 = ($2 + [1])
	$2 = $3
	if ( $0 ){ goto $label$6 }
	$2 = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [15472]
	return .LABEL $label$1
}

void .FUNC $318 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [5])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [5])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $418($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[134217728]) ){ goto $label$1 }
	$5 = [134217727]
	if ( ((uint_32)int_32($8 >> [5]) > (uint_32)[67108862]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [4])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[134217728]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [5])
	$5 = CALL $417($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [5])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [5])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [5]))
	return (unreachable)
	
.LABEL $label$1
	CALL $436($0)
}

void .FUNC $319 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1024])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $320(*($1), *($0 + [12]))
}

int_32 .FUNC snprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [12]) = $3
	$3 = CALL vsnprintf($0, $1, $2, $3)
	*([0] + [4]) = ($4 + [16])
	return $3
}

void .FUNC $422 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $417(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $418($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $215 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $417([80])
	CALL $241(($3 + [16]))
	*($3 + [64]) = $1
	CALL $242(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [68])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $243(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $418($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $214 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [68]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1616])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)4983115765735076448)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1552])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1552])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $213(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $217 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1680])
	$6 = *($0 + [4])
	$7 = *($6 + [32])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)4983115765739493376, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [32]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [1056])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $222($2, CALL $fimport$18(*($2), *($2 + [8]), (int_64)4983115765739493376, $3))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [1056])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [32])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $216 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$2 = ((int_32)($5 - $4) / (int_32)[48])
	$7 = ($2 + [1])
	if ( ((uint_32)$7 >= (uint_32)[89478486]) ){ goto $label$2 }
	$6 = [89478485]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[48])
	if ( ((uint_32)$3 > (uint_32)[44739241]) ){ goto $label$4 }
	$6 = ($3 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $417(((int_32)$6 * (int_32)[48]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = ($5 - $4)
	$2 = CALL memcpy(($7 + ((int_32)$2 * (int_32)[48])), $1, [48])
	$1 = ($2 + ((int_32)((int_32)$5 / (int_32)[-48]) * (int_32)[48]))
	$6 = ($7 + ((int_32)$6 * (int_32)[48]))
	$7 = ($2 + [48])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $4, $5)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	(unreachable)
}

int_32 .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $417([96])) + [40]) = (int_64)1398362884
	*($4 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1824])
	*($4 + [68]) = [0]
	*($4 + [60 align=4]) = (int_64)0
	*($4 + [72]) = $0
	CALL $245(($8 + [32]), $4)
	*($4 + [80]) = [-1]
	*($4 + [76]) = $1
	*($4 + [84]) = [-1]
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [76])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $239($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	$6 = *($5 + [60])
	if ( ($6 == 0) ){ goto $label$15 }
	*(($5 + [64])) = $6
	CALL $418($6)
	
.LABEL $label$15
	CALL $418($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $210 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4983115765730246656, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $211($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)4983115765730246656, $5))
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*($2 + [80]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $213 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	$7 = ($4 + $6)
	*($8 + [16]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [16]))
	$4 = *($8 + [12])
	
.LABEL $label$7
	$6 = CALL $417([80])
	$3 = ($6 + [16])
	CALL $241($3)
	*($6 + [64]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [1024])
	CALL memcpy($6, $4, [8])
	$2 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($6 + [8]), $2, [8])
	*($8 + [12]) = ($4 + [16])
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [24])
	*($8 + [32]) = $3
	*($8 + [40]) = ($6 + [32])
	*($8 + [44]) = ($6 + [48])
	CALL $244(($8 + [32]), ($8 + [24]))
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [68])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $243(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $223 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$7 = *(($1 + [32]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4983115765739493376, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $196 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [80])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [112])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)4983115765747023872, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [112]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [88])
	if ( (CALL memcmp((*($3 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [116]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)4983115765747023873, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [116])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $197 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

void .FUNC $194 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [80])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [112])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)4983115765747023872, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [112]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [88])
	if ( (CALL memcmp((*($3 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [116]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)4983115765747023873, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [116])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $195 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [80])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [112])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)4983115765747023872, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [112]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [88])
	if ( (CALL memcmp((*($3 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [116]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)4983115765747023873, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [116])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $219 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*(($11 = $9) + [64]) = $2
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($11 + [48]) = *($1 + [48])
	*($11 + [56]) = *($1 + [56])
	*($1 + [48]) = (int_64)1
	$10 = *($1)
	*($11 + [40]) = $10
	$8 = $10
	$3 = *($3)
	$7 = ($1 + [60])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	CALL $229($7, *($3), *($3 + [4]))
	$8 = *($1)
	
.LABEL $label$1
	$3 = ($0 + [36])
	CALL eosio_assert(((int_64)$10 == (int_64)$8), [1360])
	$5 = *($7)
	$4 = *(($1 + [64]))
	$6 = ($4 - $5)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[48]))
	$7 = [52]
	
.LOOP $label$2:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$3 }
	$7 = ((((int_32)((uint_32)($6 + [-48]) / (uint_32)[48]) * (int_32)[44]) + $7) + [44])
	
.LABEL $label$3
	if ( ($7 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($7)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	*($11 + [28]) = $9
	*($11 + [24]) = $9
	*($11 + [32]) = ($9 + $7)
	CALL $225(($11 + [24]), $1)
	CALL db_update_i64(*(($1 + [76])), $2, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL free($9)
	$10 = *($11 + [40])
	
.LABEL $label$6
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($11 + [4]) = $1
	*($11) = $0
	*($11 + [12]) = $1
	*($11 + [8]) = ($11 + [48])
	*($11 + [16]) = ($11 + [40])
	*($11 + [20]) = ($11 + [64])
	*($11 + [72]) = $11
	CALL $230(($11 + [72]), $3, ($3 + [1]))
	*([0] + [4]) = ($11 + [80])
}

void .FUNC $218 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	$2 = CALL $231($0, $1, $2)
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$1 = *($0)
	*($7 + [8]) = $1
	*($7 + [16]) = $1
	*($7 + [44]) = [0]
	$0 = [0]
	$5 = CALL db_find_i64($1, $1, (int_64)4983115765730246656, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $211(($7 + [8]), $5)
	CALL eosio_assert(((int_32)*($0 + [72]) == (int_32)($7 + [8])), [1056])
	
.LABEL $label$1
	*($7) = $3
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [1120])
	CALL $232(($7 + [8]), $0, (int_64)0, $7)
	$4 = *($7 + [32])
	if ( ($4 == 0) ){ goto $label$2 }
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	$5 = *($3 + [60])
	if ( ($5 == 0) ){ goto $label$7 }
	*(($3 + [64])) = $5
	CALL $418($5)
	
.LABEL $label$7
	CALL $418($3)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($7 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $4
	
.LABEL $label$3
	*($6) = $4
	CALL $418($0)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $190 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1824])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1824])
	return $0
}

void .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [48])
	$8 = $7
	*([0] + [4]) = $7
	$2 = *($0)
	$3 = *($0 + [4])
	$6 = *($3)
	$5 = *($6 + [16])
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4983115765751853664, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $170($6, $4)
	*($8 + [36]) = [0]
	*($8 + [32]) = $6
	$5 = *(*(CALL $171(($8 + [32])) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [1488])
	$5 = *(($6 + [16]))
	*($1 + [8]) = (int_64)0
	*($1) = $5
	$3 = CALL memcpy(($1 + [16]), *($3 + [4]), [48])
	$6 = $7
	$7 = ($6 + [-64])
	*([0] + [4]) = $7
	*($8 + [16]) = ($6 + [-4])
	*($8 + [8]) = $7
	CALL eosio_assert([1], [1232])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($6 + [-56]), ($1 + [8]), [8])
	*($8 + [12]) = ($6 + [-48])
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($1 + [24])
	*($8 + [32]) = $3
	*($8 + [40]) = ($1 + [32])
	*($8 + [44]) = ($1 + [48])
	CALL $189(($8 + [32]), ($8 + [24]))
	$5 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)4983115765751853664, *(*($0 + [8])), $5, $7, [60])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $378 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($1 + [8]) = [0]
	$4 = *($1)
	CALL eosio_assert([1], [1360])
	*($5 + [40]) = ($5 + [28])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $379(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [36]), $2, $5, [28])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $379 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $372 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [96])
	*([0] + [4]) = $12
	*($12 + [88]) = $1
	*($12 + [64]) = $2
	*($12 + [72]) = $3
	*($12 + [56]) = $5
	*($12 + [48]) = $4
	$6 = ($0 + [8])
	*($12 + [40]) = $6
	*($12 + [16]) = $1
	CALL $385(($12 + [32]), ($12 + [40]), ($12 + [16]))
	if ( (int_64)(((int_64)$4 | (int_64)$5) == 0) ){ goto $label$1 }
	$10 = *($12 + [36])
	if ( ($10 == 0) ){ goto $label$3 }
	if ( ((int_64)*($10 + [8]) != (int_64)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	if ( ((int_64)((int_64)((int_64)*($10 + [16]) ^ (int_64)*($12 + [64])) | (int_64)((int_64)*(($10 + [24])) ^ (int_64)*($12 + [72]))) == (int_64)0) ){ goto $label$2 }
	CALL $388(($12 + [32]))
	$10 = *($12 + [36])
	if ( ($10 == 0) ){ goto $label$3 }
	if ( ((int_64)*($10 + [8]) == (int_64)*($12 + [88])) ){ goto $label$4 }
	
.LABEL $label$3
	CALL prints([4880])
	$1 = *($0)
	*($12 + [16]) = $0
	*($12 + [20]) = ($12 + [88])
	*($12 + [24]) = ($12 + [64])
	*($12 + [28]) = ($12 + [48])
	CALL $389(($12 + [8]), $6, $1, ($12 + [16]))
	goto $label$1 
	
.LABEL $label$2
	$1 = *($10)
	$7 = *(($0 + [32]))
	$11 = *(($0 + [36]))
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$5 }
	$10 = ($11 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$6:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$5 }
	$11 = $10
	$9 = ($10 + [-24])
	$10 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$8 }
	$10 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [48]) == (int_32)$6), [1056])
	goto $label$7 
	
.LABEL $label$8
	$10 = [0]
	$0 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-3020380869172259840, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$7 }
	$10 = CALL $386($6, $0)
	CALL eosio_assert(((int_32)*($10 + [48]) == (int_32)$6), [1056])
	
.LABEL $label$7
	CALL prints([4848])
	*($12 + [16]) = ($12 + [48])
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [1120])
	CALL $387($6, $10, (int_64)0, ($12 + [16]))
	
.LABEL $label$1
	*([0] + [4]) = ($12 + [96])
}

void .FUNC $373 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $417([64])) + [48]) = $1
	*($3 + [8]) = (int_64)0
	CALL $382(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [52])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $383(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $418($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $370 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	$10 = $11
	*([0] + [4]) = $11
	$3 = *($0 + [24])
	$8 = *(($0 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$7 = ($8 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($8 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($8 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$8 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($8)
	CALL db_get_i64($1, $3, $8)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($11 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $8)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $417([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$11 = ($5 + [16])
	$6 = ($5 + [8])
	$9 = (int_64)5462355
	$7 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [1824])
	*($5 + [24]) = $0
	CALL eosio_assert(((uint_32)$8 > (uint_32)[7]), [1024])
	CALL memcpy($5, $3, [8])
	$7 = ($8 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [1024])
	CALL memcpy($6, ($3 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [1024])
	CALL memcpy($11, ($3 + [16]), [8])
	*($5 + [28]) = $1
	*($10 + [24]) = $5
	$9 = *($5)
	*($10 + [16]) = $9
	$8 = *($5 + [28])
	*($10 + [12]) = $8
	$1 = ($0 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($7 + [8]) = $9
	*($7 + [16]) = $8
	*($10 + [24]) = [0]
	*($7) = $5
	*($1) = ($7 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $394($2, ($10 + [24]), ($10 + [16]), ($10 + [12]))
	
.LABEL $label$12
	$7 = *($10 + [24])
	*($10 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $418($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [32])
	return $5
}

void .FUNC $371 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = *([0] + [4])
	$10 = $2
	$7 = (int_64)1
	$8 = *($0 + [8])
	$5 = (int_64)($8 == 0)
	if ( $5 ){ goto $label$1 }
	$9 = ((int_64)$8 + (int_64)1)
	$7 = (int_64)1
	
.LOOP $label$2:
	$7 = ((int_64)$7 * (int_64)10)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [8])
	$2 = ($2 - (((CASTING uint_32)(uint_64 ((int_64)$8 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $8))))) = [0]
	$4 = *($0)
	if ( $5 ){ goto $label$3 }
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$4 % (int_64)$7)
	$0 = ($6 + [-1])
	
.LOOP $label$4:
	*($0) = ((int_64)((int_64)$9 % (int_64)10) + (int_64)48)
	$0 = ($0 + [-1])
	$9 = ((int_64)$9 / (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL printi(((int_64)$4 / (int_64)$7))
	CALL prints([960])
	CALL prints_l($2, $3)
	CALL prints([976])
	CALL $361($1, [0])
	*([0] + [4]) = $10
}

int_32 .FUNC $376 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $417([80])) + [64]) = $0
	CALL $380(($8 + [32]), $6)
	*($6 + [72]) = [-1]
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [68])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $381(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $377 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
	$7 = *(($1 + [72]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6215726811582152704, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $374 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($1 + [16]) = *(*(*($3) + [4]))
	$4 = *($1)
	CALL eosio_assert([1], [1360])
	*($5 + [40]) = ($5 + [28])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $379(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [36]), $2, $5, [28])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $375 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($1 + [8]) = [3]
	$4 = *($1)
	CALL eosio_assert([1], [1360])
	*($5 + [40]) = ($5 + [28])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $379(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [36]), $2, $5, [28])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $197($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $96($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $198($4, $1)
	CALL $200(CALL $199(CALL $199($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $175 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1680])
	$6 = *($0 + [4])
	$7 = *($6 + [32])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)4983115765756270592, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [32]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [1056])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $183($2, CALL $fimport$18(*($2), *($2 + [8]), (int_64)4983115765756270592, $3))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [1056])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [32])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

int_32 .FUNC $176 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $418($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $418($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $418($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $418($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $418($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $418($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $418($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $418($5)
	
.LABEL $label$12
	return $0
}

void .FUNC $177 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	*([0] + [4]) = $11
	*(($10 = $11) + [64]) = $2
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($10 + [48]) = *($1 + [80])
	*($10 + [56]) = *($1 + [88])
	*($1 + [80]) = (int_64)1
	$9 = *($1)
	*($10 + [40]) = $9
	$8 = *($3)
	*($1 + [64]) = *($8)
	*(($1 + [72])) = *(($8 + [8]))
	$7 = $9
	$3 = *($3 + [4])
	$8 = ($1 + [92])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	CALL $193($8, *($3), *($3 + [4]))
	$7 = *($1)
	
.LABEL $label$1
	$4 = ($0 + [36])
	CALL eosio_assert(((int_64)$9 == (int_64)$7), [1360])
	$8 = *($8)
	$5 = *(($1 + [96]))
	$6 = ($5 - $8)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[48]))
	$3 = [84]
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$3 }
	$3 = ((((int_32)((uint_32)($6 + [-48]) / (uint_32)[48]) * (int_32)[44]) + $3) + [44])
	
.LABEL $label$3
	if ( ($3 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($10 + [28]) = $8
	*($10 + [24]) = $8
	*($10 + [32]) = ($8 + $3)
	CALL $186(($10 + [24]), $1)
	CALL db_update_i64(*(($1 + [108])), $2, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($8)
	$9 = *($10 + [40])
	
.LABEL $label$6
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($10 + [4]) = $1
	*($10) = $0
	*($10 + [12]) = $1
	*($10 + [8]) = ($10 + [48])
	*($10 + [16]) = ($10 + [40])
	*($10 + [20]) = ($10 + [64])
	*($10 + [72]) = $10
	CALL $196(($10 + [72]), $4, ($4 + [1]))
	*([0] + [4]) = ($10 + [80])
}

int_32 .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	$7 = ($4 + $6)
	*($8 + [16]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [16]))
	$4 = *($8 + [12])
	
.LABEL $label$7
	$6 = CALL $417([80])
	$3 = ($6 + [16])
	CALL $190($3)
	*($6 + [64]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [1024])
	CALL memcpy($6, $4, [8])
	$2 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($6 + [8]), $2, [8])
	*($8 + [12]) = ($4 + [16])
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [24])
	*($8 + [32]) = $3
	*($8 + [40]) = ($6 + [32])
	*($8 + [44]) = ($6 + [48])
	CALL $202(($8 + [32]), ($8 + [24]))
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [68])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $192(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $171 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [68]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1616])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)4983115765751853664)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1552])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1552])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $170(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $172 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $417([80])
	CALL $190(($3 + [16]))
	*($3 + [64]) = $1
	CALL $201(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [68])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $192(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $418($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $173 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$7 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $417([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $96(($8 + [28]), [16])
	$2 = *($8 + [28])
	$1 = (*($2) - $2)
	CALL eosio_assert(((int_32)$1 > (int_32)[7]), [1232])
	CALL memcpy($2, $4, [8])
	CALL eosio_assert(((int_32)($1 + [-8]) > (int_32)[7]), [1232])
	CALL memcpy(($2 + [8]), ($4 + [8]), [8])
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($7 = ($8 + [-16]))) = [0]
	$4 = ($2 + [-4])
	*($1) = *($4)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($7) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($4) = (int_64)0
	*(($7 = ($8 + [-4]))) = [0]
	$4 = ($2 + [8])
	*($1) = *($4)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($7) = *($1)
	*($1) = [0]
	*($4) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$7 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$7 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$8 }
	$1 = ([0] - $7)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $418($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $418($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $418($7)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $178 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = [0]
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1680])
	$8 = *($0 + [4])
	$6 = *($8 + [112])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$1 }
	$6 = *(*($0))
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)4983115765747023872, ($9 + [8]), *($8))
	*(*(($0 + [4])) + [112]) = $6
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($6, ($9 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$3 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [104]) == (int_32)$2), [1056])
	goto $label$5 
	
.LABEL $label$6
	$7 = [0]
	$6 = CALL db_find_i64(*($2), *($2 + [8]), (int_64)4983115765747023872, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $167($2, $6)
	CALL eosio_assert(((int_32)*($7 + [104]) == (int_32)$2), [1056])
	
.LABEL $label$5
	*($7 + [112]) = $1
	
.LABEL $label$2
	*(($0 + [4])) = $7
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $179 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	*([0] + [4]) = $11
	*(($10 = $11) + [64]) = $2
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($10 + [48]) = *($1 + [80])
	*($10 + [56]) = *($1 + [88])
	*($1 + [80]) = (int_64)2
	$9 = *($1)
	*($10 + [40]) = $9
	$7 = $9
	$4 = *($3)
	$8 = ($1 + [92])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$1 }
	CALL $193($8, *($4), *($4 + [4]))
	$7 = *($1)
	
.LABEL $label$1
	$4 = ($0 + [36])
	$3 = *($3 + [4])
	*($1 + [64]) = *($3)
	*(($1 + [72])) = *(($3 + [8]))
	CALL eosio_assert(((int_64)$9 == (int_64)$7), [1360])
	$8 = *($8)
	$5 = *(($1 + [96]))
	$6 = ($5 - $8)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[48]))
	$3 = [84]
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$3 }
	$3 = ((((int_32)((uint_32)($6 + [-48]) / (uint_32)[48]) * (int_32)[44]) + $3) + [44])
	
.LABEL $label$3
	if ( ($3 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($10 + [28]) = $8
	*($10 + [24]) = $8
	*($10 + [32]) = ($8 + $3)
	CALL $186(($10 + [24]), $1)
	CALL db_update_i64(*(($1 + [108])), $2, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($8)
	$9 = *($10 + [40])
	
.LABEL $label$6
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($10 + [4]) = $1
	*($10) = $0
	*($10 + [12]) = $1
	*($10 + [8]) = ($10 + [48])
	*($10 + [16]) = ($10 + [40])
	*($10 + [20]) = ($10 + [64])
	*($10 + [72]) = $10
	CALL $195(($10 + [72]), $4, ($4 + [1]))
	*([0] + [4]) = ($10 + [80])
}

void .FUNC $361 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([4912])
	
.LABEL $label$1
	$2 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	*($3 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	
.LABEL $label$2
	*([0] + [4]) = ($3 + [16])
}

int_32 .FUNC $420 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $421($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $237 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = [0]
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1680])
	$8 = *($0 + [4])
	$6 = *(($8 + [84]))
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$1 }
	$6 = *(*($0))
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)4983115765730246657, ($9 + [8]), *($8))
	*((*(($0 + [4])) + [84])) = $6
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($6, ($9 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$3 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$2), [1056])
	goto $label$5 
	
.LABEL $label$6
	$7 = [0]
	$6 = CALL db_find_i64(*($2), *($2 + [8]), (int_64)4983115765730246656, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $211($2, $6)
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$2), [1056])
	
.LABEL $label$5
	*(($7 + [84])) = $1
	
.LABEL $label$2
	*(($0 + [4])) = $7
	*([0] + [4]) = ($9 + [16])
	return $0
}

int_32 .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1712])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $96($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [1024])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $235 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [76]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1616])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)4983115765730246656)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1552])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1552])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $211(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_64 .FUNC llabs (int_64 $0)
{
	int_64 $1
	$1 = (int_64)$0 >> (int_64)63
	return ((int_64)((int_64)$0 + (int_64)$1)) ^ (int_64)$1)
}

void .FUNC $360 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
}

void .FUNC $97 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	*($8 + [88]) = $2
	*($8 + [80]) = $1
	*(($8 + [72])) = [0]
	*($8 + [56]) = (int_64)-1
	*($8 + [64]) = (int_64)0
	$1 = *($0)
	*($8 + [40]) = $1
	*($8 + [48]) = $1
	*($8 + [76]) = [0]
	*($8 + [32]) = ($8 + [40])
	CALL $98(($8 + [16]), ($8 + [32]), ($8 + [80]))
	$7 = *($8 + [20])
	if ( ($7 == 0) ){ goto $label$5 }
	if ( ((int_64)(((int_64)((int_64)*($8 + [80]) ^ (int_64)*($7 + [16])) | (int_64)((int_64)*($8 + [88]) ^ (int_64)*(($7 + [24])))) == 0) == 0) ){ goto $label$5 }
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = *($7)
	$4 = *(($8 + [64]))
	$6 = *(($8 + [68]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$6 }
	$0 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($0)) == (int_64)$1) ){ goto $label$6 }
	$6 = $0
	$7 = ($0 + [-24])
	$0 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$4 }
	$0 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [48]) == (int_32)($8 + [40])), [1056])
	goto $label$3 
	
.LABEL $label$5
	$1 = *($0)
	*($8 + [24]) = $3
	*($8 + [20]) = ($8 + [80])
	*($8 + [16]) = ($8 + [40])
	CALL $99(($8 + [8]), ($8 + [40]), $1, ($8 + [16]))
	$6 = *($8 + [64])
	if ( ($6 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$0 = [0]
	$7 = CALL db_find_i64(*($8 + [40]), *(($8 + [48])), (int_64)-5966706556312485888, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $100(($8 + [40]), $7)
	CALL eosio_assert(((int_32)*($0 + [48]) == (int_32)($8 + [40])), [1056])
	
.LABEL $label$3
	*($8 + [16]) = $3
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [1120])
	CALL $101(($8 + [40]), $0, (int_64)0, ($8 + [16]))
	$6 = *($8 + [64])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($8 + [68])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$11 }
	CALL $418($7)
	
.LABEL $label$11
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($8 + [64]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $6
	
.LABEL $label$8
	*($5) = $6
	CALL $418($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [96])
}

int_64 .FUNC floor (float_64 $0)
{
	int_64 $1
	int_32 $2
	float_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	if ( ((float_64)$0 == (float_64)(float_64)0) ){ goto $label$1 }
	$1 = (CASTING int_64)(float_64 $0)
	$2 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)) & [2047]
	if ( ((uint_32)$2) > (uint_32)[1074]) ){ goto $label$1 }
	$4 = ((int_64)$1 < (int_64)0)
	$3 = (float_64))(((float_64)( (float_64)4503599627370496 ? (float_64)-4503599627370496 : $4 ) + (float_64)((float_64)( (float_64)-4503599627370496 ? (float_64)4503599627370496 : $4 ) + (float_64)$0)) - $0)
	if ( ((uint_32)$2 > (uint_32)[1022]) ){ goto $label$2 }
	*($5 + [8]) = $3
	return (CASTING float_64)(int_32 (CASTING uint_32)(uint_64 (int_64)$1 >> (int_64)63)))
	
.LABEL $label$2
	$0 = ((float_64)$3 + (float_64)$0)
	if ( (((float_64)$3 <= (float_64)(float_64)0) | ((float_64)$3 != (float_64)$3)) ){ goto $label$1 }
	$0 = ((float_64)$0 + (float_64)(float_64)-1)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $90 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [52]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1616])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)5445032172408799232)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1552])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1552])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $85(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $86 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [112])
	*([0] + [4]) = $5
	*($5 + [96]) = $2
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($5 + [72]) = *(($1 + [24]))
	*($5 + [64]) = *($1 + [16])
	*($5 + [80]) = *($1 + [32])
	*($1 + [32]) = *(*($3))
	$4 = *($1)
	*($5 + [56]) = $4
	CALL eosio_assert([1], [1360])
	CALL eosio_assert([1], [1232])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($5 | [8]), ($1 + [16]), [16])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($5 + [24]), ($1 + [32]), [4])
	CALL db_update_i64(*($1 + [52]), $2, $5, [28])
	$3 = ($0 + [36])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($5 + [36]) = $1
	*($5 + [32]) = $0
	*($5 + [44]) = $1
	*($5 + [40]) = ($5 + [64])
	*($5 + [48]) = ($5 + [56])
	*($5 + [52]) = ($5 + [96])
	*($5 + [104]) = ($5 + [32])
	CALL $87(($5 + [104]), $3, ($3 + [1]))
	*([0] + [4]) = ($5 + [112])
}

int_64 .FUNC pow (float_64 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_64 $11
	float_64 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	int_32 $19
	float_64 $20
	float_64 $21
	$21 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $4)
	$4 = (CASTING int_64)(float_64 $1)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$8 = ($5) & [2147483647]
	if ( (($8) | $6) == 0) ){ goto $label$1 }
	$11 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)32))
	$3 = (CASTING uint_32)(uint_64 $11)
	if ( $3 ){ goto $label$2 }
	if ( ((int_32)$2 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 & [2147483647])
	if ( ((uint_32)$7 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$3 != (int_32)[0]) & ((int_32)$7 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$8 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$19 = [0]
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$19 = [2]
	if ( ((uint_32)$8 > (uint_32)[1128267775]) ){ goto $label$8 }
	$19 = [0]
	if ( ($8 <= [1072693248]) ){ goto $label$8 }
	$9 = uint_32($8 >> [20])
	if ( ((int_32)($9 + [-1023]) < (int_32)[21]) ){ goto $label$7 }
	$19 = ([1075] - $9)
	$9 = uint_32($6 >> $19)
	$19 = ( ([2] - ($9 & [1])) ? [0] : ((int_32)($9 << $19) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$19 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $9)
	$19 = uint_32($8 >> $6)
	$19 = ( ([2] - ($19 & [1])) ? [0] : ((int_32)($19 << $6) == (int_32)$8) )
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($7 + [-1072693248]) | $3) == 0) ){ goto $label$1 }
	if ( ($7 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL sqrt($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$21 = CALL fabs($0)
	if ( $3 ){ goto $label$18 }
	if ( ($7 == 0) ){ goto $label$17 }
	if ( ((int_32)($7 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$17 }
	
.LABEL $label$18
	$10 = (float_64)1
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$19 == (int_32)[1]) ){ goto $label$16 }
	if ( $19 ){ goto $label$14 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$17
	$21 = ( ((float_64)(float_64)1 / (float_64)$21) ? $21 : ((int_32)$5 < (int_32)[0]) )
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($19 | ($7 + [-1072693248])) == 0) ){ goto $label$15 }
	return ( !(float_64)$21 ? $21 : ((int_32)$19 == (int_32)[1]) )
	
.LABEL $label$16
	$10 = (float_64)-1
	goto $label$14 
	
.LABEL $label$15
	$1 = (float_64)
	return ((float_64)$1($21 - $21)) / (float_64)$1)
	
.LABEL $label$14
	if ( ($8 <= [1105199105]) ){ goto $label$28 }
	if ( ($8 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$7 > (uint_32)[1072693247]) ){ goto $label$24 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 < (int_32)[0]) )
	
.LABEL $label$28
	$8 = [0]
	if ( ((uint_32)$7 > (uint_32)[1048575]) ){ goto $label$26 }
	$21 = ((float_64)$21 * (float_64)(float_64)9007199254740992)
	$7 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $21) >> (uint_64)(int_64)32))
	$5 = [-53]
	goto $label$25 
	
.LABEL $label$27
	if ( ((uint_32)$7 > (uint_32)[1072693246]) ){ goto $label$23 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 < (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$26
	$5 = [0]
	
.LABEL $label$25
	$6 = ($7 & [1048575])
	$2 = ($6 | [1072693248])
	$5 = ((int_32($7 >> [20]) + $5) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$21 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$22 }
	$8 = [1]
	goto $label$21 
	
.LABEL $label$24
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 > (int_32)[0]) )
	
.LABEL $label$23
	if ( ($7 <= [1072693249]) ){ goto $label$20 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 > (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$22
	$2 = ($2 + [-1048576])
	$5 = ($5 + [1])
	
.LABEL $label$21
	$13 = ((float_64)*(($6 + [17456])) + (float_64)((float_64)((float_64)(float_64))($21 - (float_64))($0 - $14)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$21 = ((float_64)((float_64)$12 * (float_64)$0) + (float_64)((float_64)$21 * (float_64)(float_64))($13 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $17))
	$0 = ((float_64)$21 * (float_64)$21)
	$16 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($2 >> [1]) | [536870912]) + ($8 << [18])) + [524288])) << (int_64)32))
	$12 = ((float_64)$15 * (float_64)(float_64))((float_64))($14 - ((float_64)$0 * (float_64)$16)) - ((float_64)$0 * (float_64)(float_64))($12 - (float_64))($16 - $13)
	$13 = ((float_64)((float_64)((float_64)$21 + (float_64)$0) * (float_64)$12))
	$17 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$17 + (float_64)(float_64)3) + (float_64)$13)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$15 = ((float_64)(float_64)1 / (float_64)((float_64)$13 + (float_64)$12))
	$13 = *(($6 + [17440]))
	$12 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $21) & (int_64)4294967295)))
	$14 = (float_64)
	$21 = ((float_64)$14($12 - $13)) * (float_64)$15
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $21)) & (int_64)-4294967296)
	$14 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$14 & (int_64)-4294967296))))
	$12 = ((float_64)$0 + (float_64)$21)
	$6 = ($8 << [3])
	$18 = *(($6 + [17472]))
	$20 = (CASTING float_64)(int_32 $5)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$20 + (float_64)((float_64)$18 + (float_64)((float_64)$12)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$20 = (float_64))((float_64))((float_64))($0 + (float_64)$13)))))) & (int_64)-4294967296))) - $20) - $18) - $12)
	goto $label$19 
	
.LABEL $label$20
	$13 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$21 + (float_64)(float_64)-1)
	$21 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$21 + (float_64)$13))) & (int_64)-4294967296)
	$20 = (float_64))($0) - $21)
	
.LABEL $label$19
	$1 = ((float_64)((float_64)(float_64))($1 - $12) * (float_64)$0) + (float_64)((float_64)(float_64))($13 - $20) * (float_64)$1
	$12 = (CASTING float_64)(int_64 ((int_64)$4 & (int_64)-4294967296))
	$21 = ((float_64)$12 * (float_64)$0)
	$0 = ((float_64)$21 + (float_64)$1)
	$4 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 $4)))
	$2 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ((int_32)$2) < (int_32)[1083179008]) ){ goto $label$33 }
	if ( ((($2 + [-1083179008]) | $8) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$33
	if ( (($2 & [2147482624]) <= [1083231232]) ){ goto $label$30 }
	if ( ((($2 + [1064252416]) | $8) == 0) ){ goto $label$31 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$32
	$0 = (float_64)
	$12 = ((float_64)$1 + (float_64)(float_64)8.008566259537294e-17)
	if ( (((float_64)$12 <= (float_64)$0($0 - $21))) | (((float_64)$12 != (float_64)$12) | ((float_64)$0 != (float_64)$0))) ){ goto $label$30 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$31
	$0 = (float_64)
	if ( ((((float_64)$1 > (float_64)$0($0 - $21))) | (((float_64)$1 != (float_64)$1) | ((float_64)$0 != (float_64)$0))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$8 = ($2 & [2147483647])
	if ( ($8 <= [1071644673]) ){ goto $label$35 }
	$6 = (uint_32($8 >> [20]) & [2047])
	$8 = (uint_32([1048576] >> (uint_32($8 >> [20]) + [-1022])) + $2)
	$5 = uint_32((($8 & [1048575]) | [1048576]) >> ([1043] - $6))
	$2 = ( ([0] - $5) ? $5 : ((int_32)$2 < (int_32)[0]) )
	$21 = (float_64))($21 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($8 & ((int_32)uint_32([1048575] >> ($6 + [-1023])) ^ (int_32)[-1]))) << (int_64)32)))
	goto $label$34 
	
.LABEL $label$35
	$2 = [0]
	
.LABEL $label$34
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$21 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $21)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$1 + (float_64)$21)) & (int_64)-4294967296))
	$12 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$12 + (float_64)$21 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = (float_64)
	$4 = (CASTING int_64)(float_64 $1((float_64)1 - (float_64))((float_64))(((float_64)((float_64)$1)) * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$4 - ((float_64)$0($21 - (float_64))($1 - $12))) + (float_64)((float_64)$1 * (float_64)$0))
	if ( ((int_32)int_32($8 - $1))))) >> (uint_64)(int_64)32)) + ($2 << [20]))) >> [20]) <= (int_32)[0]) ){ goto $label$36 }
	return ((float_64)$10 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))))
	
.LABEL $label$36
	return ((float_64)$10 * (float_64)CALL scalbn($1, $2))
	
.LABEL $label$29
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $21
}

int_64 .FUNC scalbn (float_64 $0, int_32 $1)
{
	int_32 $2
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	$2 = ($1 + [-1023])
	if ( ((int_32)$2 < (int_32)[1024]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	$2 = ($1 + [969])
	if ( ((int_32)$2 > (int_32)[-1023]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = $2
	goto $label$1 
	
.LABEL $label$2
	$1 = $2
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_64 .FUNC fabs (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_32 .FUNC vsnprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [160])
	*([0] + [4]) = $4
	$5 = [-1]
	*($4 + [148]) = ( ($1 + [-1]) ? [0] : $1 )
	$0 = ( $0 ? ($4 + [158]) : $1 )
	*($4 + [144]) = $0
	*(($4 = CALL memset($4, [0], [144])) + [36]) = [35]
	*($4 + [75]) = [255]
	*($4 + [76]) = [-1]
	*($4 + [44]) = ($4 + [159])
	*($4 + [84]) = ($4 + [144])
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	*($0) = [0]
	$5 = CALL vfprintf($4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*(CALL __errno_location()) = [75]
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [160])
	return $5
}

void .FUNC $232 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*(($11 = $9) + [64]) = $2
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($11 + [48]) = *($1 + [48])
	*($11 + [56]) = *($1 + [56])
	$10 = *($1)
	*($11 + [40]) = $10
	$8 = *($1 + [32])
	$5 = ($1 + [40])
	$6 = *($5)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$6), [1856])
	$8 = ((int_64)$8 + (int_64)*($3))
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1904])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1936])
	*($5) = $6
	*($1 + [32]) = $8
	CALL eosio_assert(((int_64)$10 == (int_64)*($1)), [1360])
	$4 = *($1 + [60])
	$5 = *(($1 + [64]))
	$7 = ($5 - $4)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[48]))
	$3 = [52]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$3 = ((((int_32)((uint_32)($7 + [-48]) / (uint_32)[48]) * (int_32)[44]) + $3) + [44])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($11 + [28]) = $9
	*($11 + [24]) = $9
	*($11 + [32]) = ($9 + $3)
	CALL $225(($11 + [24]), $1)
	CALL db_update_i64(*(($1 + [76])), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	$10 = *($11 + [40])
	
.LABEL $label$5
	$3 = ($0 + [36])
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($11 + [4]) = $1
	*($11) = $0
	*($11 + [12]) = $1
	*($11 + [8]) = ($11 + [48])
	*($11 + [16]) = ($11 + [40])
	*($11 + [20]) = ($11 + [64])
	*($11 + [72]) = $11
	CALL $233(($11 + [72]), $3, ($3 + [1]))
	*([0] + [4]) = ($11 + [80])
}

int_32 .FUNC $408 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1024])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1024])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1024])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_64 .FUNC $231 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [128])
	*([0] + [4]) = $7
	*($7 + [120]) = $2
	*($7 + [112]) = $1
	*(($7 + [104])) = [0]
	*($7 + [88]) = (int_64)-1
	*($7 + [96]) = (int_64)0
	$1 = *($0)
	*($7 + [72]) = $1
	*($7 + [80]) = $1
	*($7 + [108]) = [0]
	*($7 + [64]) = ($7 + [72])
	*($7 + [16]) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)1) & (int_64)4294967295)
	CALL $234(($7 + [56]), ($7 + [64]), ($7 + [16]))
	$6 = *($7 + [60])
	if ( ($6 == 0) ){ goto $label$5 }
	
.LOOP $label$6:
	if ( ((uint_32)*($6 + [56]) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$7 }
	$6 = *($7 + [60])
	if ( ((int_64)((int_64)((int_64)*($6 + [16]) ^ (int_64)*($7 + [112])) | (int_64)((int_64)*(($6 + [24])) ^ (int_64)*($7 + [120]))) == (int_64)0) ){ goto $label$4 }
	
.LABEL $label$7
	CALL $237(($7 + [56]))
	$6 = *($7 + [60])
	if ( $6 ){ goto $label$6 }
	
.LABEL $label$5
	CALL prints([3328])
	*($7 + [48]) = [0]
	*($7 + [40]) = (int_64)0
	$6 = ($7 + [88])
	$1 = *($6)
	if ( ((int_64)$1 != (int_64)-1) ){ goto $label$8 }
	$1 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($7 + [72]), *(($7 + [80])), (int_64)4983115765730246656, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$9 }
	CALL $211(($7 + [72]), $4)
	*($7 + [20]) = [0]
	*($7 + [16]) = ($7 + [72])
	$1 = *(*(CALL $235(($7 + [16])) + [4]))
	$1 = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*(($7 + [88])) = $1
	
.LABEL $label$8
	CALL eosio_assert((uint_64)($1 <= (int_64)-2), [1488])
	*($7 + [32]) = *($6)
	$1 = *($0)
	*($7 + [24]) = $0
	*($7 + [20]) = ($7 + [112])
	*($7 + [16]) = ($7 + [32])
	*($7 + [28]) = ($7 + [40])
	CALL $236(($7 + [8]), ($7 + [72]), $1, ($7 + [16]))
	$1 = *($7 + [32])
	$6 = *($7 + [40])
	if ( ($6 == 0) ){ goto $label$3 }
	*($7 + [44]) = $6
	CALL $418($6)
	$3 = *($7 + [96])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$1 = *($6)
	
.LABEL $label$3
	$3 = *($7 + [96])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($7 + [100])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$11 }
	
.LOOP $label$12:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	$4 = *($0 + [60])
	if ( ($4 == 0) ){ goto $label$14 }
	*(($0 + [64])) = $4
	CALL $418($4)
	
.LABEL $label$14
	CALL $418($0)
	
.LABEL $label$13
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$12 }
	$6 = *(($7 + [96]))
	goto $label$10 
	
.LABEL $label$11
	$6 = $3
	
.LABEL $label$10
	*($5) = $3
	CALL $418($6)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [128])
	return $1
}

void .FUNC $93 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC fprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	*($3 + [12]) = $2
	$2 = CALL vfprintf($0, $1, $2)
	*([0] + [4]) = ($3 + [16])
	return $2
}

void .FUNC $65 (int_32 $0, int_64 $1)
{
	CALL require_auth(*($0))
	CALL eosio_assert([0], [2016])
}

int_32 .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $417([64])) + [48]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1024])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((uint_32)($4 + [-8]) > (uint_32)[15]), [1024])
	CALL memcpy(($6 + [16]), ($7 + [8]), [16])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[24]), [1024])
	CALL memcpy(($6 + [32]), ($7 + [24]), [4])
	*($6 + [56]) = [-1]
	*($6 + [52]) = $1
	*($6 + [60]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $88(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $58 (int_32 $0)
{
	int_64 $1
	int_64 $2
	int_32 $3
	float_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_64 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_32 $29
	$29 = (*([0] + [4]) - [352])
	*([0] + [4]) = $29
	CALL require_auth(*($0))
	*(($29 + [344])) = [0]
	*($29 + [328]) = (int_64)-1
	*($29 + [336]) = (int_64)0
	$26 = *($0)
	*($29 + [312]) = $26
	*($29 + [320]) = $26
	*($29 + [348]) = [0]
	*($29 + [304]) = ($29 + [312])
	*($29 + [64]) = (int_64)0
	CALL $166(($29 + [296]), ($29 + [304]), ($29 + [64]))
	CALL prints([2736])
	$24 = *($29 + [300])
	if ( ($24 == 0) ){ goto $label$23 }
	
.LOOP $label$24:
	if ( ((int_64)(*($24 + [80]) == 0) == 0) ){ goto $label$22 }
	if ( (*($24 + [88]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$20 }
	CALL prints([2224])
	CALL $178(($29 + [296]))
	CALL prints([2736])
	$24 = *($29 + [300])
	if ( $24 ){ goto $label$24 }
	
.LABEL $label$23
	CALL prints([2752])
	goto $label$21 
	
.LABEL $label$22
	CALL prints([2768])
	
.LABEL $label$21
	*($29 + [128]) = (int_64)1
	CALL $166(($29 + [64]), ($29 + [304]), ($29 + [128]))
	$26 = *($29 + [64])
	*($29 + [296]) = $26
	$24 = (CASTING uint_32)(uint_64 (uint_64)$26 >> (uint_64)(int_64)32)
	if ( ($24) == 0) ){ goto $label$27 }
	if ( ((int_64)*($24 + [80]) != (int_64)1) ){ goto $label$26 }
	$26 = *($24)
	$6 = *(($29 + [336]))
	$23 = *(($29 + [340]))
	if ( ((int_32)$23 == (int_32)$6) ){ goto $label$28 }
	$24 = ($23 + [-24])
	$19 = ([0] - $6)
	
.LOOP $label$29:
	if ( ((int_64)*(*($24)) == (int_64)$26) ){ goto $label$28 }
	$23 = $24
	$22 = ($24 + [-24])
	$24 = $22
	if ( ((int_32)($22 + $19) != (int_32)[-24]) ){ goto $label$29 }
	
.LABEL $label$28
	if ( ((int_32)$23 == (int_32)$6) ){ goto $label$17 }
	$21 = *(($23 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [104]) == (int_32)($29 + [312])), [1056])
	goto $label$16 
	
.LABEL $label$27
	CALL prints([2752])
	goto $label$25 
	
.LABEL $label$26
	CALL prints([2768])
	
.LABEL $label$25
	*($29 + [128]) = (int_64)2
	CALL $166(($29 + [64]), ($29 + [304]), ($29 + [128]))
	*($29 + [296]) = *($29 + [64])
	CALL prints([3040])
	$24 = *($29 + [300])
	if ( ($24 == 0) ){ goto $label$30 }
	
.LOOP $label$31:
	if ( ((int_64)*($24 + [80]) != (int_64)2) ){ goto $label$19 }
	if ( ((*($24 + [88]) + [14400]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$18 }
	CALL $178(($29 + [296]))
	CALL prints([3040])
	$24 = *($29 + [300])
	if ( $24 ){ goto $label$31 }
	
.LABEL $label$30
	CALL prints([3072])
	goto $label$10 
	
.LABEL $label$20
	$26 = *(*($29 + [300]))
	$6 = *(($29 + [336]))
	$23 = *(($29 + [340]))
	if ( ((int_32)$23 == (int_32)$6) ){ goto $label$32 }
	$24 = ($23 + [-24])
	$19 = ([0] - $6)
	
.LOOP $label$33:
	if ( ((int_64)*(*($24)) == (int_64)$26) ){ goto $label$32 }
	$23 = $24
	$22 = ($24 + [-24])
	$24 = $22
	if ( ((int_32)($22 + $19) != (int_32)[-24]) ){ goto $label$33 }
	
.LABEL $label$32
	if ( ((int_32)$23 == (int_32)$6) ){ goto $label$15 }
	$19 = *(($23 + [-24]))
	CALL eosio_assert(((int_32)*($19 + [104]) == (int_32)($29 + [312])), [1056])
	goto $label$14 
	
.LABEL $label$19
	CALL prints([3104])
	goto $label$10 
	
.LABEL $label$18
	CALL prints([2336])
	$26 = *(*($29 + [300]))
	$6 = *(($29 + [336]))
	$23 = *(($29 + [340]))
	if ( ((int_32)$23 == (int_32)$6) ){ goto $label$34 }
	$24 = ($23 + [-24])
	$19 = ([0] - $6)
	
.LOOP $label$35:
	if ( ((int_64)*(*($24)) == (int_64)$26) ){ goto $label$34 }
	$23 = $24
	$22 = ($24 + [-24])
	$24 = $22
	if ( ((int_32)($22 + $19) != (int_32)[-24]) ){ goto $label$35 }
	
.LABEL $label$34
	if ( ((int_32)$23 == (int_32)$6) ){ goto $label$12 }
	$19 = *(($23 + [-24]))
	CALL eosio_assert(((int_32)*($19 + [104]) == (int_32)($29 + [312])), [1056])
	goto $label$11 
	
.LABEL $label$17
	$21 = [0]
	$24 = CALL db_find_i64(*($29 + [312]), *(($29 + [320])), (int_64)4983115765747023872, $26)
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$16 }
	$21 = CALL $167(($29 + [312]), $24)
	CALL eosio_assert(((int_32)*($21 + [104]) == (int_32)($29 + [312])), [1056])
	
.LABEL $label$16
	*($29 + [272]) = (int_64)-1
	*($29 + [280]) = [0]
	$26 = *($0)
	*($29 + [256]) = $26
	*($29 + [264]) = *($21)
	*(($29 + [284])) = [0]
	*((($29 + [256]) + [32])) = [0]
	*($29 + [292]) = [0]
	*((($29 + [216]) + [32])) = [0]
	*($29 + [216]) = $26
	*($29 + [232]) = (int_64)-1
	*($29 + [240]) = (int_64)0
	*($29 + [224]) = *($21)
	*($29 + [16]) = ($29 + [256])
	*($29 + [208]) = (int_64)0
	$23 = [1]
	$9 = (int_64)0
	$24 = ($21 + [96])
	$22 = *($24)
	if ( ((int_32)$22 == (int_32)*($21 + [92])) ){ goto $label$36 }
	$23 = *(($22 + [-48]))
	$9 = *(($22 + [-32]))
	*($29 + [208]) = (int_64))((int_64)4611686018427387904 - $9)
	$23 = ($23 + [1])
	
.LABEL $label$36
	CALL $168(($29 + [40]), ($29 + [16]), ($29 + [208]))
	*($29 + [192]) = (int_64)0
	*($29 + [200]) = [0]
	$24 = (*($24) - *(($21 + [92])))
	$22 = ((int_32)$24 / (int_32)[48])
	if ( ($24 == 0) ){ goto $label$37 }
	if ( ((uint_32)$22 >= (uint_32)[89478486]) ){ goto $label$13 }
	$24 = CALL $417($24)
	*(($29 + [200])) = ($24 + ((int_32)$22 * (int_32)[48]))
	*($29 + [192]) = $24
	*($29 + [196]) = $24
	$19 = *(($21 + [92]))
	$22 = (*(($21 + [96])) - $19)
	if ( ((int_32)$22 < (int_32)[1]) ){ goto $label$37 }
	CALL memcpy($24, $19, $22)
	*($29 + [196]) = (*($29 + [196]) + ((int_32)((uint_32)$22 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$37
	*(($29 + [184])) = *(($21 + [72]))
	*($29 + [176]) = *($21 + [64])
	CALL pow((float_64)10, (CASTING float_64)(uint_64 *($21 + [16])))
	$4 = CALL floor(((float_64)(CASTING float_64)(int_64 *(*($29 + [300]) + [32])) * (float_64)(float_64)0.3))
	$27 = *((*($29 + [300]) + [40]))
	$25 = (Rounds 0)($4)
	CALL eosio_assert((uint_64)(((int_64)$25 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1760])
	$26 = (uint_64)$27 >> (uint_64)(int_64)8)
	$24 = [0]
	
.LOOP $label$40:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$39 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	
.LOOP $label$42:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$42 }
	
.LABEL $label$41
	$22 = [1]
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$22 = [0]
	
.LABEL $label$38
	CALL eosio_assert($22, [1824])
	$24 = *($29 + [300])
	$26 = *($24 + [32])
	$20 = *(($24 + [40]))
	CALL eosio_assert(((int_64)$27 == (int_64)$20), [2784])
	$26 = (int_64)
	CALL eosio_assert(((int_64)$26($26 - $25)) > (int_64)-4611686018427387904), [2832])
	CALL eosio_assert(((int_64)$26 < (int_64)4611686018427387904), [2864])
	$24 = *($29 + [44])
	if ( ($24 == 0) ){ goto $label$43 }
	$4 = ((float_64)(CASTING float_64)(int_64 $26) / (float_64)(CASTING float_64)(int_64 *(*($29 + [300]) + [48])))
	$2 = (uint_64)$20 >> (uint_64)(int_64)8)
	$7 = ($29 + [100])
	$10 = (($29 + [176]) + [8])
	$11 = ($21 + [40])
	$12 = ($21 + [32])
	$6 = (($29 + [128]) + [16])
	$13 = ($6 + [4])
	$14 = ($29 + [92])
	$15 = ($29 + [108])
	$16 = (($29 + [64]) + [48])
	$17 = ($29 + [116])
	$18 = ($29 + [120])
	$19 = [0]
	
.LOOP $label$44:
	if ( ($19 <= [100]) ){ goto $label$45 }
	if ( ((int_64)$9 != (int_64)*($24 + [8])) ){ goto $label$6 }
	
.LABEL $label$45
	$9 = *($24 + [8])
	$27 = (Rounds 0)(CALL floor(((float_64)$4 * (float_64)(CASTING float_64)(int_64 $9))))
	CALL eosio_assert((uint_64)(((int_64)$27 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1760])
	$24 = [0]
	$26 = $2
	
.LOOP $label$48:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$47 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$49 }
	
.LOOP $label$50:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$47 }
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$50 }
	
.LABEL $label$49
	$22 = [1]
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$47
	$22 = [0]
	
.LABEL $label$46
	CALL eosio_assert($22, [1824])
	CALL eosio_assert(((int_64)$20 == (int_64)*($10)), [1856])
	$26 = ((int_64)*($29 + [176]) + (int_64)$27)
	*($29 + [176]) = $26
	CALL eosio_assert(((int_64)$26 > (int_64)-4611686018427387904), [1904])
	CALL eosio_assert(((int_64)*($29 + [176]) < (int_64)4611686018427387904), [1936])
	CALL eosio_assert(((int_64)*($10) == (int_64)*($11)), [2896])
	if ( ((int_64)*($29 + [176]) <= (int_64)*($12)) ){ goto $label$51 }
	CALL eosio_assert([0], [2960])
	
.LABEL $label$51
	$24 = *($29 + [44])
	*((($29 + [128]) + [8])) = *($24)
	*(($6 + [12])) = *(($24 + [20]))
	*(($6 + [8])) = *(($24 + [16]))
	*($13) = *(($24 + [12]))
	*($6) = *($24 + [8])
	*($29 + [128]) = $23
	*((($29 + [128]) + [32])) = $27
	*((($29 + [128]) + [40])) = $20
	$24 = *($29 + [196])
	if ( ((int_32)$24 == (int_32)*((($29 + [192]) + [8]))) ){ goto $label$53 }
	*($29 + [196]) = (CALL memcpy($24, ($29 + [128]), [48]) + [48])
	goto $label$52 
	
.LABEL $label$53
	CALL $169(($29 + [192]), ($29 + [128]))
	
.LABEL $label$52
	$24 = (($29 + [216]) + [16])
	$26 = *($24)
	if ( ((int_64)$26 != (int_64)-1) ){ goto $label$54 }
	$26 = (int_64)0
	$22 = CALL db_lowerbound_i64(*($29 + [216]), *((($29 + [216]) + [8])), (int_64)4983115765751853664, (int_64)0)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$55 }
	CALL $170(($29 + [216]), $22)
	*($29 + [68]) = [0]
	*($29 + [64]) = ($29 + [216])
	$26 = *(*(CALL $171(($29 + [64])) + [4]))
	$26 = ( (int_64)-2 ? ((int_64)$26 + (int_64)1) : ((uint_64)$26 > (uint_64)(int_64)-3) )
	
.LABEL $label$55
	*($24) = $26
	
.LABEL $label$54
	CALL eosio_assert((uint_64)($26 <= (int_64)-2), [1488])
	$1 = *($24)
	$26 = *($0)
	*($29 + [68]) = ($29 + [128])
	*($29 + [64]) = ($29 + [216])
	CALL $181(($29 + [48]), ($29 + [216]), $26, ($29 + [64]))
	$26 = CALL current_time()
	*((($29 + [64]) + [12])) = [0]
	*((($29 + [64]) + [16])) = [0]
	*(($3 = (($29 + [64]) + [20]))) = [0]
	*((($29 + [64]) + [24])) = [0]
	*($14) = [0]
	*((($29 + [64]) + [32])) = [0]
	*($29 + [64]) = ((CASTING uint_32)(uint_64 ((uint_64)$26 / (uint_64)(int_64)1000000)) + [60])
	*($7) = [0]
	*((($29 + [64]) + [40])) = [0]
	*($15) = [0]
	*($16) = [0]
	*($17) = [0]
	*($18) = [0]
	$8 = *($0)
	$26 = (int_64)0
	$25 = (int_64)59
	$24 = [2992]
	$28 = (int_64)0
	
.LOOP $label$56:
	if ( ((uint_64)$26 > (uint_64)(int_64)5) ){ goto $label$61 }
	$22 = *($24)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$60 }
	$22 = ($22 + [165])
	goto $label$59 
	
.LABEL $label$61
	$27 = (int_64)0
	if ( ((uint_64)$26 <= (uint_64)(int_64)11) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$60
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$59
	$27 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$58
	$27 = ((int_64)((int_64)$27 & (int_64)31) << (int_64)((int_64)$25 & (int_64)4294967295))
	
.LABEL $label$57
	$24 = ($24 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$28 = ((int_64)$27 | (int_64)$28)
	$25 = ((int_64)$25 + (int_64)-5)
	if ( ((int_64)$25 != (int_64)-6) ){ goto $label$56 }
	*((($29 + [48]) + [8])) = $28
	*($29 + [48]) = $8
	$26 = (int_64)0
	$25 = (int_64)59
	$24 = [3008]
	$28 = (int_64)0
	
.LOOP $label$62:
	if ( ((uint_64)$26 > (uint_64)(int_64)10) ){ goto $label$67 }
	$22 = *($24)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$66 }
	$22 = ($22 + [165])
	goto $label$65 
	
.LABEL $label$67
	$27 = (int_64)0
	if ( ((int_64)$26 == (int_64)11) ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$66
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$65
	$27 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$64
	$27 = ((int_64)((int_64)$27 & (int_64)31) << (int_64)((int_64)$25 & (int_64)4294967295))
	
.LABEL $label$63
	$24 = ($24 + [1])
	$25 = ((int_64)$25 + (int_64)-5)
	$28 = ((int_64)$27 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)1)
	if ( ((int_64)$26 != (int_64)13) ){ goto $label$62 }
	*($29 + [8]) = $28
	*((($29 + [24]) + [8])) = $1
	*($29 + [24]) = *($21)
	CALL $173($7, ($29 + [48]), $0, ($29 + [8]), ($29 + [24]))
	$26 = *($0)
	$27 = *($29 + [128])
	*($3) = [0]
	*($29 + [56]) = (int_64)0
	*($29 + [48]) = ((int_64)$27 | (int_64)((int_64)*($21) << (int_64)32))
	CALL $174(($29 + [24]), ($29 + [64]))
	$24 = *($29 + [24])
	CALL send_deferred(($29 + [48]), $26, $24, (*($29 + [28]) - $24), [1])
	$24 = *($29 + [24])
	if ( ($24 == 0) ){ goto $label$68 }
	*($29 + [28]) = $24
	CALL $418($24)
	
.LABEL $label$68
	CALL prints([3024])
	$19 = ($19 + [1])
	$23 = ($23 + [1])
	CALL $175(($29 + [40]))
	CALL $176(($29 + [64]))
	$24 = *($29 + [44])
	if ( $24 ){ goto $label$44 }
	
.LABEL $label$43
	*($29 + [68]) = ($29 + [176])
	*($29 + [64]) = ($29 + [192])
	CALL eosio_assert(((int_32)$21 != (int_32)[0]), [1120])
	CALL $179(($29 + [312]), $21, (int_64)0, ($29 + [64]))
	$24 = *($29 + [192])
	if ( $24 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$15
	$19 = [0]
	$24 = CALL db_find_i64(*($29 + [312]), *(($29 + [320])), (int_64)4983115765747023872, $26)
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$14 }
	$19 = CALL $167(($29 + [312]), $24)
	CALL eosio_assert(((int_32)*($19 + [104]) == (int_32)($29 + [312])), [1056])
	
.LABEL $label$14
	*($29 + [272]) = (int_64)-1
	*($29 + [280]) = [0]
	$26 = *($0)
	*($29 + [256]) = $26
	*($29 + [264]) = *($19)
	*(($29 + [284])) = [0]
	*((($29 + [256]) + [32])) = [0]
	*($29 + [292]) = [0]
	*((($29 + [216]) + [32])) = [0]
	*($29 + [216]) = $26
	*($29 + [232]) = (int_64)-1
	*($29 + [240]) = (int_64)0
	*($29 + [224]) = *($19)
	*($29 + [8]) = ($29 + [256])
	*($29 + [64]) = (int_64)0
	CALL $168(($29 + [208]), ($29 + [8]), ($29 + [64]))
	*($29 + [200]) = [0]
	*($29 + [192]) = (int_64)0
	*(($29 + [184])) = *(($19 + [72]))
	*($29 + [176]) = *($19 + [64])
	CALL pow((float_64)10, (CASTING float_64)(uint_64 *($19 + [16])))
	$4 = CALL floor(((float_64)(CASTING float_64)(int_64 *(*($29 + [300]) + [32])) * (float_64)(float_64)0.3))
	$1 = *((*($29 + [300]) + [40]))
	$20 = (Rounds 0)($4)
	CALL eosio_assert((uint_64)(((int_64)$20 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1760])
	$24 = [0]
	$2 = (uint_64)$1 >> (uint_64)(int_64)8
	$26 = $2)
	
.LOOP $label$71:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$70 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$72 }
	
.LOOP $label$73:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$70 }
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$73 }
	
.LABEL $label$72
	$22 = [1]
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$71 }
	goto $label$69 
	
.LABEL $label$70
	$22 = [0]
	
.LABEL $label$69
	CALL eosio_assert($22, [1824])
	$24 = *($29 + [300])
	$26 = *($24 + [32])
	$27 = *(($24 + [40]))
	$3 = ((int_64)$1 == (int_64)$27)
	CALL eosio_assert($3, [2784])
	$26 = (int_64)
	CALL eosio_assert(((int_64)$26($26 - $20)) > (int_64)-4611686018427387904), [2832])
	CALL eosio_assert(((int_64)$26 < (int_64)4611686018427387904), [2864])
	$5 = (uint_64)$27 >> (uint_64)(int_64)8)
	$4 = ((float_64)(CASTING float_64)(int_64 $26) / (float_64)(CASTING float_64)(int_64 *(*($29 + [300]) + [48])))
	$7 = ($29 + [100])
	$10 = (($29 + [176]) + [8])
	$11 = ($19 + [32])
	$6 = (($29 + [128]) + [16])
	$12 = ($6 + [4])
	$13 = ($29 + [92])
	$14 = ($29 + [108])
	$15 = (($29 + [64]) + [48])
	$16 = ($29 + [116])
	$17 = ($29 + [120])
	$21 = [1]
	
.LOOP $label$74:
	$27 = (Rounds 0)(CALL floor((CASTING float_64)(int_64 ((int_64)$20 / (int_64)2))))
	CALL eosio_assert((uint_64)(((int_64)$27 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1760])
	$22 = [0]
	$26 = $2
	
.LOOP $label$77:
	$24 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$76 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$78 }
	
.LOOP $label$79:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$76 }
	$22 = ($22 + [1])
	if ( ((int_32)$22 < (int_32)[7]) ){ goto $label$79 }
	
.LABEL $label$78
	$23 = [1]
	$22 = ($22 + [1])
	if ( ((int_32)$22 < (int_32)[7]) ){ goto $label$77 }
	goto $label$75 
	
.LABEL $label$76
	$23 = [0]
	
.LABEL $label$75
	CALL eosio_assert($23, [1824])
	$25 = (Rounds 0)(CALL floor(((float_64)$4 * (float_64)(CASTING float_64)(int_64 *(*($29 + [212]) + [8])))))
	CALL eosio_assert((uint_64)(((int_64)$25 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1760])
	$27 = ( $20 ? $27 : (int_64)($27 == 0) )
	$26 = $5
	
.LOOP $label$81:
	$22 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$80 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$82 }
	
.LOOP $label$83:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$80 }
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$83 }
	
.LABEL $label$82
	$22 = [1]
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$81 }
	
.LABEL $label$80
	CALL eosio_assert($22, [1824])
	CALL eosio_assert([1], [2784])
	$20 = (int_64)
	CALL eosio_assert(((int_64)$20($20 - $27)) > (int_64)-4611686018427387904), [2832])
	CALL eosio_assert(((int_64)$20 < (int_64)4611686018427387904), [2864])
	if ( ((int_64)$27 < (int_64)1) ){ goto $label$85 }
	if ( (*($29 + [212]) == 0) ){ goto $label$85 }
	CALL eosio_assert($3, [1856])
	$26 = ((int_64)$25 + (int_64)$27)
	CALL eosio_assert(((int_64)$26 > (int_64)-4611686018427387904), [1904])
	CALL eosio_assert(((int_64)$26 < (int_64)4611686018427387904), [1936])
	CALL eosio_assert(((int_64)$1 == (int_64)*($10)), [1856])
	$27 = ((int_64)*($29 + [176]) + (int_64)$26)
	*($29 + [176]) = $27
	CALL eosio_assert(((int_64)$27 > (int_64)-4611686018427387904), [1904])
	CALL eosio_assert(((int_64)*($29 + [176]) < (int_64)4611686018427387904), [1936])
	CALL eosio_assert(((int_64)*($10) == (int_64)*(($19 + [40]))), [2896])
	if ( ((int_64)*($29 + [176]) <= (int_64)*($11)) ){ goto $label$86 }
	CALL eosio_assert([0], [2960])
	
.LABEL $label$86
	$24 = *($29 + [212])
	*((($29 + [128]) + [8])) = *($24)
	*(($6 + [12])) = *(($24 + [20]))
	*(($6 + [8])) = *(($24 + [16]))
	*($12) = *(($24 + [12]))
	*($6) = *($24 + [8])
	*($29 + [128]) = $21
	*((($29 + [128]) + [32])) = $26
	*((($29 + [128]) + [40])) = $1
	$24 = *($29 + [196])
	if ( ((int_32)$24 == (int_32)*((($29 + [192]) + [8]))) ){ goto $label$88 }
	*($29 + [196]) = (CALL memcpy($24, ($29 + [128]), [48]) + [48])
	goto $label$87 
	
.LABEL $label$88
	CALL $169(($29 + [192]), ($29 + [128]))
	
.LABEL $label$87
	$24 = (($29 + [216]) + [16])
	$26 = *($24)
	if ( ((int_64)$26 != (int_64)-1) ){ goto $label$89 }
	$26 = (int_64)0
	$22 = CALL db_lowerbound_i64(*($29 + [216]), *((($29 + [216]) + [8])), (int_64)4983115765751853664, (int_64)0)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$90 }
	CALL $170(($29 + [216]), $22)
	*($29 + [68]) = [0]
	*($29 + [64]) = ($29 + [216])
	$26 = *(*(CALL $171(($29 + [64])) + [4]))
	$26 = ( (int_64)-2 ? ((int_64)$26 + (int_64)1) : ((uint_64)$26 > (uint_64)(int_64)-3) )
	
.LABEL $label$90
	*($24) = $26
	
.LABEL $label$89
	CALL eosio_assert((uint_64)($26 <= (int_64)-2), [1488])
	$8 = *($24)
	$26 = *($0)
	*($29 + [68]) = ($29 + [128])
	*($29 + [64]) = ($29 + [216])
	CALL $172(($29 + [48]), ($29 + [216]), $26, ($29 + [64]))
	$26 = CALL current_time()
	*((($29 + [64]) + [12])) = [0]
	*((($29 + [64]) + [16])) = [0]
	*(($23 = (($29 + [64]) + [20]))) = [0]
	*((($29 + [64]) + [24])) = [0]
	*($13) = [0]
	*((($29 + [64]) + [32])) = [0]
	*($29 + [64]) = ((CASTING uint_32)(uint_64 ((uint_64)$26 / (uint_64)(int_64)1000000)) + [60])
	*($7) = [0]
	*((($29 + [64]) + [40])) = [0]
	*($14) = [0]
	*($15) = [0]
	*($16) = [0]
	*($17) = [0]
	$9 = *($0)
	$26 = (int_64)0
	$25 = (int_64)59
	$24 = [2992]
	$28 = (int_64)0
	
.LOOP $label$91:
	if ( ((uint_64)$26 > (uint_64)(int_64)5) ){ goto $label$96 }
	$22 = *($24)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$95 }
	$22 = ($22 + [165])
	goto $label$94 
	
.LABEL $label$96
	$27 = (int_64)0
	if ( ((uint_64)$26 <= (uint_64)(int_64)11) ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$95
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$94
	$27 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$93
	$27 = ((int_64)((int_64)$27 & (int_64)31) << (int_64)((int_64)$25 & (int_64)4294967295))
	
.LABEL $label$92
	$24 = ($24 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$28 = ((int_64)$27 | (int_64)$28)
	$25 = ((int_64)$25 + (int_64)-5)
	if ( ((int_64)$25 != (int_64)-6) ){ goto $label$91 }
	*((($29 + [48]) + [8])) = $28
	*($29 + [48]) = $9
	$26 = (int_64)0
	$25 = (int_64)59
	$24 = [3008]
	$28 = (int_64)0
	
.LOOP $label$97:
	if ( ((uint_64)$26 > (uint_64)(int_64)10) ){ goto $label$102 }
	$22 = *($24)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$101 }
	$22 = ($22 + [165])
	goto $label$100 
	
.LABEL $label$102
	$27 = (int_64)0
	if ( ((int_64)$26 == (int_64)11) ){ goto $label$99 }
	goto $label$98 
	
.LABEL $label$101
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$100
	$27 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$99
	$27 = ((int_64)((int_64)$27 & (int_64)31) << (int_64)((int_64)$25 & (int_64)4294967295))
	
.LABEL $label$98
	$24 = ($24 + [1])
	$25 = ((int_64)$25 + (int_64)-5)
	$28 = ((int_64)$27 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)1)
	if ( ((int_64)$26 != (int_64)13) ){ goto $label$97 }
	goto $label$84 
	
.LABEL $label$85
	*($29 + [68]) = ($29 + [192])
	*($29 + [64]) = ($29 + [176])
	CALL eosio_assert(((int_32)$19 != (int_32)[0]), [1120])
	CALL $177(($29 + [312]), $19, (int_64)0, ($29 + [64]))
	$24 = *($29 + [192])
	if ( ($24 == 0) ){ goto $label$103 }
	*($29 + [196]) = $24
	CALL $418($24)
	
.LABEL $label$103
	$0 = *($29 + [240])
	if ( ($0 == 0) ){ goto $label$104 }
	$23 = ($29 + [244])
	$24 = *($23)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$106 }
	
.LOOP $label$107:
	$24 = ($24 + [-24])
	$22 = *($24)
	*($24) = [0]
	if ( ($22 == 0) ){ goto $label$108 }
	CALL $418($22)
	
.LABEL $label$108
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$107 }
	$24 = *(($29 + [240]))
	goto $label$105 
	
.LABEL $label$106
	$24 = $0
	
.LABEL $label$105
	*($23) = $0
	CALL $418($24)
	
.LABEL $label$104
	$0 = *($29 + [280])
	if ( ($0 == 0) ){ goto $label$3 }
	$23 = ($29 + [284])
	$24 = *($23)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$110 }
	
.LOOP $label$111:
	$24 = ($24 + [-24])
	$22 = *($24)
	*($24) = [0]
	if ( ($22 == 0) ){ goto $label$112 }
	CALL $418($22)
	
.LABEL $label$112
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$111 }
	$24 = *(($29 + [280]))
	goto $label$109 
	
.LABEL $label$110
	$24 = $0
	
.LABEL $label$109
	*($23) = $0
	CALL $418($24)
	$23 = *($29 + [336])
	if ( $23 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$84
	*($29 + [40]) = $28
	*((($29 + [24]) + [8])) = $8
	*($29 + [24]) = *($19)
	CALL $173($7, ($29 + [48]), $0, ($29 + [40]), ($29 + [24]))
	$26 = *($0)
	$27 = *($29 + [128])
	*($23) = [0]
	*($29 + [56]) = (int_64)0
	*($29 + [48]) = ((int_64)$27 | (int_64)((int_64)*($19) << (int_64)32))
	CALL $174(($29 + [24]), ($29 + [64]))
	$24 = *($29 + [24])
	CALL send_deferred(($29 + [48]), $26, $24, (*($29 + [28]) - $24), [1])
	$24 = *($29 + [24])
	if ( ($24 == 0) ){ goto $label$113 }
	*($29 + [28]) = $24
	CALL $418($24)
	
.LABEL $label$113
	CALL prints([3024])
	$21 = ($21 + [1])
	CALL $175(($29 + [208]))
	CALL $176(($29 + [64]))
	goto $label$74 
	
.LABEL $label$13
	CALL $436(($29 + [192]))
	
.LABEL $label$12
	$19 = [0]
	$24 = CALL db_find_i64(*($29 + [312]), *(($29 + [320])), (int_64)4983115765747023872, $26)
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$11 }
	$19 = CALL $167(($29 + [312]), $24)
	CALL eosio_assert(((int_32)*($19 + [104]) == (int_32)($29 + [312])), [1056])
	
.LABEL $label$11
	*($29 + [80]) = (int_64)-1
	*($29 + [88]) = [0]
	$26 = *($0)
	*($29 + [64]) = $26
	*($29 + [72]) = *($19)
	*(($29 + [92])) = [0]
	*((($29 + [64]) + [32])) = [0]
	*($29 + [100]) = [0]
	*((($29 + [128]) + [32])) = [0]
	$27 = *($19)
	*($29 + [136]) = $27
	*($29 + [128]) = $26
	*($29 + [144]) = (int_64)-1
	*($29 + [152]) = (int_64)0
	$24 = CALL db_lowerbound_i64($26, $27, (int_64)4983115765751853664, (int_64)0)
	if ( ((int_32)$24 <= (int_32)[-1]) ){ goto $label$117 }
	CALL $170(($29 + [128]), $24)
	CALL prints([3136])
	$0 = *($29 + [152])
	if ( ($0 == 0) ){ goto $label$114 }
	$23 = ($29 + [156])
	$24 = *($23)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$116 }
	
.LOOP $label$118:
	$24 = ($24 + [-24])
	$22 = *($24)
	*($24) = [0]
	if ( ($22 == 0) ){ goto $label$119 }
	CALL $418($22)
	
.LABEL $label$119
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$118 }
	$24 = *(($29 + [152]))
	goto $label$115 
	
.LABEL $label$117
	CALL prints([2352])
	$22 = ($29 + [72])
	$0 = [0]
	
.LOOP $label$122:
	$24 = CALL db_lowerbound_i64(*($29 + [64]), *($22), (int_64)4983115765756270592, (int_64)0)
	if ( ((int_32)$24 <= (int_32)[-1]) ){ goto $label$121 }
	CALL $183(($29 + [64]), $24)
	$24 = [0]
	$23 = CALL db_lowerbound_i64(*($29 + [64]), *($22), (int_64)4983115765756270592, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$123 }
	$24 = CALL $183(($29 + [64]), $23)
	
.LABEL $label$123
	$23 = ((int_32)$24 != (int_32)[0])
	CALL eosio_assert($23, [2400])
	CALL eosio_assert($23, [1680])
	$23 = CALL db_next_i64(*($24 + [28]), ($29 + [256]))
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$124 }
	CALL $183(($29 + [64]), $23)
	
.LABEL $label$124
	CALL $184(($29 + [64]), $24)
	CALL prints([2352])
	$0 = ($0 + [1])
	if ( ((uint_32)$0 <= (uint_32)[29]) ){ goto $label$122 }
	CALL prints([2368])
	$0 = *($29 + [152])
	if ( $0 ){ goto $label$120 }
	goto $label$7 
	
.LABEL $label$121
	CALL prints([2384])
	CALL eosio_assert(((int_32)$19 != (int_32)[0]), [1120])
	CALL $182(($29 + [312]), $19, (int_64)0, ($29 + [256]))
	$0 = *($29 + [152])
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$120
	$23 = ($29 + [156])
	$24 = *($23)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$125:
	$24 = ($24 + [-24])
	$22 = *($24)
	*($24) = [0]
	if ( ($22 == 0) ){ goto $label$126 }
	CALL $418($22)
	
.LABEL $label$126
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$125 }
	$24 = *(($29 + [152]))
	goto $label$8 
	
.LABEL $label$116
	$24 = $0
	
.LABEL $label$115
	*($23) = $0
	CALL $418($24)
	
.LABEL $label$114
	$0 = *($29 + [88])
	if ( ($0 == 0) ){ goto $label$10 }
	$23 = ($29 + [92])
	$24 = *($23)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$128 }
	
.LOOP $label$129:
	$24 = ($24 + [-24])
	$22 = *($24)
	*($24) = [0]
	if ( ($22 == 0) ){ goto $label$130 }
	CALL $418($22)
	
.LABEL $label$130
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$129 }
	$24 = *(($29 + [88]))
	goto $label$127 
	
.LABEL $label$128
	$24 = $0
	
.LABEL $label$127
	*($23) = $0
	CALL $418($24)
	
.LABEL $label$10
	CALL eosio_assert([0], [2448])
	goto $label$3 
	
.LABEL $label$9
	$24 = $0
	
.LABEL $label$8
	*($23) = $0
	CALL $418($24)
	
.LABEL $label$7
	$0 = *($29 + [88])
	if ( ($0 == 0) ){ goto $label$3 }
	$23 = ($29 + [92])
	$24 = *($23)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$132 }
	
.LOOP $label$133:
	$24 = ($24 + [-24])
	$22 = *($24)
	*($24) = [0]
	if ( ($22 == 0) ){ goto $label$134 }
	CALL $418($22)
	
.LABEL $label$134
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$133 }
	$24 = *(($29 + [88]))
	goto $label$131 
	
.LABEL $label$132
	$24 = $0
	
.LABEL $label$131
	*($23) = $0
	CALL $418($24)
	$23 = *($29 + [336])
	if ( $23 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	*($29 + [68]) = ($29 + [192])
	*($29 + [64]) = ($29 + [176])
	CALL eosio_assert(((int_32)$21 != (int_32)[0]), [1120])
	CALL $180(($29 + [312]), $21, (int_64)0, ($29 + [64]))
	$24 = *($29 + [192])
	if ( ($24 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*($29 + [196]) = $24
	CALL $418($24)
	
.LABEL $label$4
	$0 = *($29 + [240])
	if ( ($0 == 0) ){ goto $label$135 }
	$23 = ($29 + [244])
	$24 = *($23)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$137 }
	
.LOOP $label$138:
	$24 = ($24 + [-24])
	$22 = *($24)
	*($24) = [0]
	if ( ($22 == 0) ){ goto $label$139 }
	CALL $418($22)
	
.LABEL $label$139
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$138 }
	$24 = *(($29 + [240]))
	goto $label$136 
	
.LABEL $label$137
	$24 = $0
	
.LABEL $label$136
	*($23) = $0
	CALL $418($24)
	
.LABEL $label$135
	$0 = *($29 + [280])
	if ( ($0 == 0) ){ goto $label$3 }
	$23 = ($29 + [284])
	$24 = *($23)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$141 }
	
.LOOP $label$142:
	$24 = ($24 + [-24])
	$22 = *($24)
	*($24) = [0]
	if ( ($22 == 0) ){ goto $label$143 }
	CALL $418($22)
	
.LABEL $label$143
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$142 }
	$24 = *(($29 + [280]))
	goto $label$140 
	
.LABEL $label$141
	$24 = $0
	
.LABEL $label$140
	*($23) = $0
	CALL $418($24)
	$23 = *($29 + [336])
	if ( $23 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$23 = *($29 + [336])
	if ( ($23 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$19 = ($29 + [340])
	$24 = *($19)
	if ( ((int_32)$24 == (int_32)$23) ){ goto $label$145 }
	
.LOOP $label$146:
	$24 = ($24 + [-24])
	$22 = *($24)
	*($24) = [0]
	if ( ($22 == 0) ){ goto $label$147 }
	$0 = *($22 + [92])
	if ( ($0 == 0) ){ goto $label$148 }
	*(($22 + [96])) = $0
	CALL $418($0)
	
.LABEL $label$148
	CALL $418($22)
	
.LABEL $label$147
	if ( ((int_32)$23 != (int_32)$24) ){ goto $label$146 }
	$24 = *(($29 + [336]))
	goto $label$144 
	
.LABEL $label$145
	$24 = $23
	
.LABEL $label$144
	*($19) = $23
	CALL $418($24)
	
.LABEL $label$1
	*([0] + [4]) = ($29 + [352])
	(unreachable)
}

void .FUNC $59 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [144])
	*([0] + [4]) = $14
	CALL require_auth($4)
	$12 = CALL $154($0, $1, $2, $3, $4)
	$6 = [0]
	*(($14 + [120])) = [0]
	*($14 + [96]) = $4
	*($14 + [104]) = (int_64)-1
	*($14 + [112]) = (int_64)0
	$10 = *($0)
	*($14 + [88]) = $10
	*($14 + [124]) = [0]
	$13 = CALL db_find_i64($10, $4, (int_64)-5290167705893076992, $12)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $155(($14 + [88]), $13)
	CALL eosio_assert(((int_32)*($6 + [80]) == (int_32)($14 + [88])), [1056])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)((int_64)*($6 + [48]) | (int_64)*(($6 + [56]))) != (int_64)0), [2640])
	if ( ((int_64)$1 != (int_64)1) ){ goto $label$2 }
	$1 = (int_64)0
	$12 = (int_64)59
	$13 = [2672]
	$8 = (int_64)0
	
.LOOP $label$3:
	$10 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$4 }
	$7 = *($13)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$7 = ($7 + [165])
	goto $label$5 
	
.LABEL $label$6
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$4
	$13 = ($13 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$8 = ((int_64)$10 | (int_64)$8)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$3 }
	$5 = *($0)
	$1 = (int_64)0
	$12 = (int_64)59
	$13 = [2672]
	$9 = (int_64)0
	
.LOOP $label$7:
	$10 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$8 }
	$7 = *($13)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [165])
	goto $label$9 
	
.LABEL $label$10
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$8
	$13 = ($13 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$7 }
	$1 = (int_64)0
	$10 = (int_64)59
	$13 = [2688]
	$11 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$1 > (uint_64)(int_64)8) ){ goto $label$16 }
	$7 = *($13)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$7 = ($7 + [165])
	goto $label$14 
	
.LABEL $label$16
	$12 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$12
	$13 = ($13 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$11 }
	*(($14 + [24])) = $3
	*(($14 + [40])) = *(($6 + [56]))
	*($14) = $4
	*($14 + [16]) = $2
	*($14 + [56]) = $11
	*($14 + [48]) = $9
	*($14 + [32]) = *(($6 + [48]))
	*(($13 = CALL $417([16]))) = $8
	*($13 + [8]) = $5
	*(($7 = (($14 + [48]) + [32]))) = [0]
	$0 = ($13 + [16])
	*((($14 + [48]) + [24])) = $0
	*(($14 + [68])) = $0
	*($14 + [64]) = $13
	*($14 + [76]) = [0]
	*(($14 + [84])) = [0]
	CALL $96(($14 + [76]), [40])
	$13 = *($14 + [76])
	$7 = (*($7) - $13)
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [1232])
	CALL memcpy($13, $14, [8])
	CALL eosio_assert(((int_32)($7 + [-8]) > (int_32)[15]), [1232])
	CALL memcpy(($13 + [8]), ($14 + [16]), [16])
	CALL eosio_assert(((int_32)($7 + [-24]) > (int_32)[15]), [1232])
	CALL memcpy(($13 + [24]), ($14 + [32]), [16])
	CALL $109(($14 + [128]), ($14 + [48]))
	$13 = *($14 + [128])
	CALL send_inline($13, (*($14 + [132]) - $13))
	$13 = *($14 + [128])
	if ( ($13 == 0) ){ goto $label$17 }
	*($14 + [132]) = $13
	CALL $418($13)
	
.LABEL $label$17
	$13 = *($14 + [76])
	if ( ($13 == 0) ){ goto $label$18 }
	*(($14 + [80])) = $13
	CALL $418($13)
	
.LABEL $label$18
	$13 = *($14 + [64])
	if ( ($13 == 0) ){ goto $label$2 }
	*(($14 + [68])) = $13
	CALL $418($13)
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [1120])
	CALL $156(($14 + [88]), $6, (int_64)0, $14)
	$6 = *($14 + [112])
	if ( ($6 == 0) ){ goto $label$19 }
	$0 = ($14 + [116])
	$13 = *($0)
	if ( ((int_32)$13 == (int_32)$6) ){ goto $label$21 }
	
.LOOP $label$22:
	$13 = ($13 + [-24])
	$7 = *($13)
	*($13) = [0]
	if ( ($7 == 0) ){ goto $label$23 }
	CALL $418($7)
	
.LABEL $label$23
	if ( ((int_32)$6 != (int_32)$13) ){ goto $label$22 }
	$13 = *(($14 + [112]))
	goto $label$20 
	
.LABEL $label$21
	$13 = $6
	
.LABEL $label$20
	*($0) = $6
	CALL $418($13)
	
.LABEL $label$19
	*([0] + [4]) = ($14 + [144])
}

void .FUNC $271 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $270 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [48])
	$8 = $7
	*([0] + [4]) = $7
	$2 = *($0)
	$3 = *($0 + [4])
	$6 = *($3)
	$5 = *($6 + [16])
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4983115765718299232, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $254($6, $4)
	*($8 + [36]) = [0]
	*($8 + [32]) = $6
	$5 = *(*(CALL $255(($8 + [32])) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [1488])
	$5 = *(($6 + [16]))
	*($1 + [8]) = (int_64)0
	*($1) = $5
	$3 = CALL memcpy(($1 + [16]), *($3 + [4]), [48])
	$6 = $7
	$7 = ($6 + [-64])
	*([0] + [4]) = $7
	*($8 + [16]) = ($6 + [-4])
	*($8 + [8]) = $7
	CALL eosio_assert([1], [1232])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($6 + [-56]), ($1 + [8]), [8])
	*($8 + [12]) = ($6 + [-48])
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($1 + [24])
	*($8 + [32]) = $3
	*($8 + [40]) = ($1 + [32])
	*($8 + [44]) = ($1 + [48])
	CALL $266(($8 + [32]), ($8 + [24]))
	$5 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)4983115765718299232, *(*($0 + [8])), $5, $7, [60])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $277 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
}

void .FUNC $276 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $6) / (int_32)[48]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ((int_32)($6 - $5) / (int_32)[48])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[89478486]) ){ goto $label$3 }
	$6 = [89478485]
	$2 = ((int_32)($2 - $5) / (int_32)[48])
	if ( ((uint_32)$2 > (uint_32)[44739241]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $417(((int_32)$6 * (int_32)[48]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	CALL $269(CALL $fimport$43($6, [0], [48]))
	$6 = (*($0) + [48])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $436($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$6 * (int_32)[48]))
	$5 = ($2 + ((int_32)$3 * (int_32)[48]))
	$6 = $5
	
.LOOP $label$8:
	$6 = CALL memset($6, [0], [48])
	CALL $269($6)
	$6 = ($6 + [48])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 + ((int_32)((int_32)$2 / (int_32)[-48]) * (int_32)[48]))
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $418($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $275 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [1712])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = ((int_32)($4 - $7) / (int_32)[48])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $276($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ((int_32)$6 * (int_32)[48]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($8 + [28])
	
.LOOP $label$6:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [16])
	*($6) = ($7 + [32])
	*($8 + [20]) = ($7 + [8])
	CALL $272(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [48])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $274 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [60])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [64])) = $6
	CALL $418($6)
	
.LABEL $label$11
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $418($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1024])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [1024])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

void .FUNC $51 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_32 $24
	$24 = (*([0] + [4]) - [224])
	*([0] + [4]) = $24
	CALL require_auth(*($0))
	$5 = [0]
	*((($24 + [168]) + [32])) = [0]
	*($24 + [184]) = (int_64)-1
	*($24 + [192]) = (int_64)0
	$23 = *($0)
	*($24 + [168]) = $23
	*($24 + [176]) = $23
	*($24 + [204]) = [0]
	*((($24 + [128]) + [32])) = [0]
	*($24 + [136]) = $1
	*($24 + [128]) = $23
	*($24 + [144]) = (int_64)-1
	*($24 + [152]) = (int_64)0
	$0 = CALL db_find_i64($23, $23, (int_64)4983115765679915008, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$12 = CALL $279(($24 + [168]), $0)
	CALL eosio_assert(((int_32)*($12 + [72]) == (int_32)($24 + [168])), [1056])
	$5 = *(($24 + [152]))
	$15 = *(($24 + [156]))
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$15 = [0]
	$12 = [0]
	if ( ((int_32)[0] == (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	$0 = ($15 + [-24])
	$19 = ([0] - $5)
	
.LOOP $label$4:
	if ( ((int_64)*(*($0)) == (int_64)$2) ){ goto $label$1 }
	$15 = $0
	$7 = ($0 + [-24])
	$0 = $7
	if ( ((int_32)($7 + $19) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$1
	if ( ((int_32)$15 == (int_32)$5) ){ goto $label$6 }
	$18 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($18 + [64]) == (int_32)($24 + [128])), [1056])
	goto $label$5 
	
.LABEL $label$6
	$18 = [0]
	$0 = CALL db_find_i64(*($24 + [128]), *(($24 + [136])), (int_64)4983115766110178336, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	$18 = CALL $287(($24 + [128]), $0)
	CALL eosio_assert(((int_32)*($18 + [64]) == (int_32)($24 + [128])), [1056])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [3152])
	$3 = ((int_32)$18 != (int_32)[0])
	CALL eosio_assert($3, [3184])
	$9 = ($18 + [48])
	$0 = *($9)
	$10 = ($18 + [52])
	$7 = *($10)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$7 }
	$6 = (($24 + [8]) + [32])
	$4 = (($24 + [208]) | [1])
	$5 = (($24 + [8]) + [16])
	$16 = ($5 + [12])
	$17 = ($24 + [48])
	$19 = [0]
	
.LOOP $label$8:
	$15 = ($19 << [5])
	if ( ((int_64)*(($0 + $15) + [16]) < (int_64)1) ){ goto $label$9 }
	CALL _ZNSt3__19to_stringEy(($24 + [56]), $1)
	$0 = CALL $427(($24 + [56]), [0], [4128])
	$7 = ($0 + [8])
	*(($11 = (($24 + [72]) + [8]))) = *($7)
	*($24 + [72]) = *($0)
	*($0) = [0]
	*(($0 + [4])) = [0]
	*($7) = [0]
	$0 = CALL $424(($24 + [72]), [3248])
	$7 = ($0 + [8])
	*(($12 = (($24 + [8]) + [8]))) = *($7)
	*($24 + [8]) = *($0)
	*($0) = [0]
	*(($0 + [4])) = [0]
	*($7) = [0]
	CALL _ZNSt3__19to_stringEm(($24 + [208]), *(($18 + [16])))
	$0 = *($24 + [208])
	$7 = ($0 & [1])
	$13 = (($24 + [208]) + [8])
	$0 = CALL $423(($24 + [8]), ( *($13) ? $4 : $7 ), ( *($24 + [212]) ? uint_32($0 >> [1]) : $7 ))
	$7 = ($0 + [8])
	*(($14 = (($24 + [112]) + [8]))) = *($7)
	*($24 + [112]) = *($0)
	*($0) = [0]
	*(($0 + [4])) = [0]
	*($7) = [0]
	if ( ((*($24 + [208]) & [1]) == 0) ){ goto $label$10 }
	CALL $418(*($13))
	
.LABEL $label$10
	if ( ((*($24 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $418(*($12))
	
.LABEL $label$11
	if ( ((*($24 + [72]) & [1]) == 0) ){ goto $label$12 }
	CALL $418(*($11))
	
.LABEL $label$12
	if ( ((*($24 + [56]) & [1]) == 0) ){ goto $label$13 }
	CALL $418(*((($24 + [56]) + [8])))
	
.LABEL $label$13
	$2 = (int_64)0
	$23 = (int_64)59
	$0 = [1968]
	$20 = (int_64)0
	
.LOOP $label$14:
	$21 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$15 }
	$7 = *($0)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$7 = ($7 + [165])
	goto $label$16 
	
.LABEL $label$17
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$23 & (int_64)4294967295))
	
.LABEL $label$15
	$0 = ($0 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$20 = ((int_64)$21 | (int_64)$20)
	$23 = ((int_64)$23 + (int_64)-5)
	if ( ((int_64)$23 != (int_64)-6) ){ goto $label$14 }
	$2 = (int_64)0
	$21 = (int_64)59
	$0 = [1984]
	$22 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$23 }
	$7 = *($0)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$7 = ($7 + [165])
	goto $label$21 
	
.LABEL $label$23
	$23 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$23 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$23 = ((int_64)((int_64)$23 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$19
	$0 = ($0 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$22 = ((int_64)$23 | (int_64)$22)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$18 }
	*((($24 + [56]) + [8])) = $22
	*($24 + [56]) = $20
	$15 = (*($9) + $15)
	$8 = *(($15 + [8]))
	$2 = (int_64)0
	$21 = (int_64)59
	$0 = [2000]
	$20 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$29 }
	$7 = *($0)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$7 = ($7 + [165])
	goto $label$27 
	
.LABEL $label$29
	$23 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$23 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$23 = ((int_64)((int_64)$23 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$25
	$0 = ($0 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$20 = ((int_64)$23 | (int_64)$20)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$24 }
	$2 = (int_64)0
	$23 = (int_64)59
	$0 = [1968]
	$22 = (int_64)0
	
.LOOP $label$30:
	$21 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$31 }
	$7 = *($0)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$7 = ($7 + [165])
	goto $label$32 
	
.LABEL $label$33
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$23 & (int_64)4294967295))
	
.LABEL $label$31
	$0 = ($0 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$22 = ((int_64)$21 | (int_64)$22)
	$23 = ((int_64)$23 + (int_64)-5)
	if ( ((int_64)$23 != (int_64)-6) ){ goto $label$30 }
	*($12) = *(($18 + [24]))
	*($5) = *($15 + [16])
	*($16) = *(($15 + [28]))
	*(($5 + [8])) = *(($15 + [24]))
	*(($5 + [4])) = *(($15 + [20]))
	*($24 + [8]) = $22
	CALL $437($6, ($24 + [112]))
	CALL $109(($24 + [208]), CALL $108(($24 + [72]), ($24 + [56]), $8, $20, ($24 + [8])))
	$0 = *($24 + [208])
	CALL send_inline($0, (*($24 + [212]) - $0))
	$0 = *($24 + [208])
	if ( ($0 == 0) ){ goto $label$34 }
	*($24 + [212]) = $0
	CALL $418($0)
	
.LABEL $label$34
	$0 = *((($24 + [72]) + [28]))
	if ( ($0 == 0) ){ goto $label$35 }
	*((($24 + [72]) + [32])) = $0
	CALL $418($0)
	
.LABEL $label$35
	$0 = *((($24 + [72]) + [16]))
	if ( ($0 == 0) ){ goto $label$36 }
	*((($24 + [72]) + [20])) = $0
	CALL $418($0)
	
.LABEL $label$36
	if ( ((*($6) & [1]) == 0) ){ goto $label$37 }
	CALL $418(*($17))
	
.LABEL $label$37
	if ( ((*($24 + [112]) & [1]) == 0) ){ goto $label$38 }
	CALL $418(*($14))
	
.LABEL $label$38
	$0 = *($9)
	$7 = *($10)
	
.LABEL $label$9
	$19 = ($19 + [1])
	if ( ($19 <= int_32(($7 - $0) >> [5])) ){ goto $label$8 }
	
.LABEL $label$7
	CALL eosio_assert($3, [2400])
	CALL eosio_assert($3, [1680])
	$0 = CALL db_next_i64(*($18 + [68]), ($24 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$39 }
	CALL $287(($24 + [128]), $0)
	
.LABEL $label$39
	CALL $333(($24 + [128]), $18)
	$19 = *($24 + [152])
	if ( ($19 == 0) ){ goto $label$40 }
	$5 = ($24 + [156])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$19) ){ goto $label$42 }
	
.LOOP $label$43:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$44 }
	$15 = *(($7 + [48]))
	if ( ($15 == 0) ){ goto $label$45 }
	*(($7 + [52])) = $15
	CALL $418($15)
	
.LABEL $label$45
	CALL $418($7)
	
.LABEL $label$44
	if ( ((int_32)$19 != (int_32)$0) ){ goto $label$43 }
	$0 = *(($24 + [152]))
	goto $label$41 
	
.LABEL $label$42
	$0 = $19
	
.LABEL $label$41
	*($5) = $19
	CALL $418($0)
	
.LABEL $label$40
	$19 = *($24 + [192])
	if ( ($19 == 0) ){ goto $label$46 }
	$5 = ($24 + [196])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$19) ){ goto $label$48 }
	
.LOOP $label$49:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$50 }
	$15 = *($7 + [60])
	if ( ($15 == 0) ){ goto $label$51 }
	*(($7 + [64])) = $15
	CALL $418($15)
	
.LABEL $label$51
	CALL $418($7)
	
.LABEL $label$50
	if ( ((int_32)$19 != (int_32)$0) ){ goto $label$49 }
	$0 = *(($24 + [192]))
	goto $label$47 
	
.LABEL $label$48
	$0 = $19
	
.LABEL $label$47
	*($5) = $19
	CALL $418($0)
	
.LABEL $label$46
	*([0] + [4]) = ($24 + [224])
}

int_32 .FUNC $279 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $417([96])) + [40]) = (int_64)1398362884
	*($4 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1824])
	*($4 + [68]) = [0]
	*($4 + [60 align=4]) = (int_64)0
	*($4 + [72]) = $0
	CALL $327(($8 + [32]), $4)
	*($4 + [80]) = [-1]
	*($4 + [76]) = $1
	*($4 + [84]) = [-1]
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [76])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $328($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	$6 = *($5 + [60])
	if ( ($6 == 0) ){ goto $label$15 }
	*(($5 + [64])) = $6
	CALL $418($6)
	
.LABEL $label$15
	CALL $418($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $53 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [208])
	*([0] + [4]) = $12
	CALL require_auth(*($0))
	$6 = [0]
	*((($12 + [152]) + [32])) = [0]
	*($12 + [168]) = (int_64)-1
	*($12 + [176]) = (int_64)0
	$11 = *($0)
	*($12 + [152]) = $11
	*($12 + [160]) = $11
	*($12 + [188]) = [0]
	*((($12 + [112]) + [32])) = [0]
	*($12 + [120]) = $1
	*($12 + [112]) = $11
	*($12 + [128]) = (int_64)-1
	*($12 + [136]) = (int_64)0
	$8 = CALL db_find_i64($11, $11, (int_64)4983115765713469440, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $250(($12 + [152]), $8)
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)($12 + [152])), [1056])
	$6 = *(($12 + [136]))
	$5 = *(($12 + [140]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$7 = [0]
	if ( ((int_32)[0] == (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($5 + [-24])
	$3 = ([0] - $6)
	
.LOOP $label$4:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$5 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	$5 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)($12 + [112])), [1056])
	goto $label$5 
	
.LABEL $label$6
	$5 = [0]
	$8 = CALL db_find_i64(*($12 + [112]), *(($12 + [120])), (int_64)4983115765718299232, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $254(($12 + [112]), $8)
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)($12 + [112])), [1056])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [3152])
	$3 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($3, [3184])
	if ( ((int_64)*(($5 + [48])) < (int_64)1) ){ goto $label$7 }
	CALL _ZNSt3__19to_stringEy(($12 + [40]), $1)
	$8 = CALL $427(($12 + [40]), [0], [4048])
	$4 = ($8 + [8])
	*(($12 + [8])) = *($4)
	*($12) = *($8)
	*($8) = [0]
	*(($8 + [4])) = [0]
	*($4) = [0]
	$8 = CALL $424($12, [3248])
	$4 = ($8 + [8])
	*((($12 + [56]) + [8])) = *($4)
	*($12 + [56]) = *($8)
	*($8) = [0]
	*(($8 + [4])) = [0]
	*($4) = [0]
	CALL _ZNSt3__19to_stringEm(($12 + [192]), *($5 + [16]))
	$8 = *($12 + [192])
	$4 = ($8 & [1])
	$8 = CALL $423(($12 + [56]), ( *($12 + [200]) ? (($12 + [192]) | [1]) : $4 ), ( *($12 + [196]) ? uint_32($8 >> [1]) : $4 ))
	$4 = ($8 + [8])
	*((($12 + [96]) + [8])) = *($4)
	*($12 + [96]) = *($8)
	*($8) = [0]
	*(($8 + [4])) = [0]
	*($4) = [0]
	if ( ((*($12 + [192]) & [1]) == 0) ){ goto $label$8 }
	CALL $418(*((($12 + [192]) + [8])))
	
.LABEL $label$8
	if ( ((*($12 + [56]) & [1]) == 0) ){ goto $label$9 }
	CALL $418(*($12 + [64]))
	
.LABEL $label$9
	if ( ((*($12) & [1]) == 0) ){ goto $label$10 }
	CALL $418(*($12 + [8]))
	
.LABEL $label$10
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$11 }
	CALL $418(*($12 + [48]))
	
.LABEL $label$11
	$2 = (int_64)0
	$11 = (int_64)59
	$8 = [3264]
	$9 = (int_64)0
	
.LOOP $label$12:
	$1 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$13 }
	$4 = *($8)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$4 = ($4 + [165])
	goto $label$14 
	
.LABEL $label$15
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$1 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$13
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$9 = ((int_64)$1 | (int_64)$9)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$12 }
	*($12 + [40]) = $9
	*($12 + [48]) = *($0)
	$2 = (int_64)0
	$11 = (int_64)59
	$8 = [3264]
	$9 = (int_64)0
	
.LOOP $label$16:
	$1 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$17 }
	$4 = *($8)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$4 = ($4 + [165])
	goto $label$18 
	
.LABEL $label$19
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$1 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$17
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$9 = ((int_64)$1 | (int_64)$9)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$16 }
	$2 = (int_64)0
	$1 = (int_64)59
	$8 = [3280]
	$10 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$2 > (uint_64)(int_64)4) ){ goto $label$25 }
	$4 = *($8)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$4 = ($4 + [165])
	goto $label$23 
	
.LABEL $label$25
	$11 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$21
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$20 }
	*(($12 + [20])) = *(($5 + [60]))
	*(($12 + [16])) = *(($5 + [56]))
	*(($12 + [12])) = *(($5 + [52]))
	*($12) = *(($5 + [24]))
	*($12 + [8]) = *(($5 + [48]))
	CALL $437(($12 + [24]), ($12 + [96]))
	$8 = CALL $208(($12 + [56]), ($12 + [40]), $9, $10, $12)
	CALL $109(($12 + [192]), $8)
	$4 = *($12 + [192])
	CALL send_inline($4, (*($12 + [196]) - $4))
	$4 = *($12 + [192])
	if ( ($4 == 0) ){ goto $label$26 }
	*($12 + [196]) = $4
	CALL $418($4)
	
.LABEL $label$26
	$4 = *($8 + [28])
	if ( ($4 == 0) ){ goto $label$27 }
	*(($8 + [32])) = $4
	CALL $418($4)
	
.LABEL $label$27
	$4 = *($8 + [16])
	if ( ($4 == 0) ){ goto $label$28 }
	*(($8 + [20])) = $4
	CALL $418($4)
	
.LABEL $label$28
	if ( ((*($12 + [24]) & [1]) == 0) ){ goto $label$29 }
	CALL $418(*(($12 + [32])))
	
.LABEL $label$29
	if ( ((*($12 + [96]) & [1]) == 0) ){ goto $label$7 }
	CALL $418(*($12 + [104]))
	
.LABEL $label$7
	CALL eosio_assert($3, [2400])
	CALL eosio_assert($3, [1680])
	$8 = CALL db_next_i64(*($5 + [68]), ($12 + [56]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$30 }
	CALL $254(($12 + [112]), $8)
	
.LABEL $label$30
	CALL $277(($12 + [112]), $5)
	$5 = *($12 + [136])
	if ( ($5 == 0) ){ goto $label$31 }
	$3 = ($12 + [140])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$33 }
	
.LOOP $label$34:
	$8 = ($8 + [-24])
	$4 = *($8)
	*($8) = [0]
	if ( ($4 == 0) ){ goto $label$35 }
	CALL $418($4)
	
.LABEL $label$35
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$34 }
	$8 = *(($12 + [136]))
	goto $label$32 
	
.LABEL $label$33
	$8 = $5
	
.LABEL $label$32
	*($3) = $5
	CALL $418($8)
	
.LABEL $label$31
	$3 = *($12 + [176])
	if ( ($3 == 0) ){ goto $label$36 }
	$0 = ($12 + [180])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$38 }
	
.LOOP $label$39:
	$8 = ($8 + [-24])
	$4 = *($8)
	*($8) = [0]
	if ( ($4 == 0) ){ goto $label$40 }
	$5 = *($4 + [60])
	if ( ($5 == 0) ){ goto $label$41 }
	*(($4 + [64])) = $5
	CALL $418($5)
	
.LABEL $label$41
	CALL $418($4)
	
.LABEL $label$40
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$39 }
	$8 = *(($12 + [176]))
	goto $label$37 
	
.LABEL $label$38
	$8 = $3
	
.LABEL $label$37
	*($0) = $3
	CALL $418($8)
	
.LABEL $label$36
	*([0] + [4]) = ($12 + [208])
}

void .FUNC $54 (int_32 $0)
{
	int_64 $1
	int_64 $2
	int_64 $3
	float_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	float_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_64 $21
	int_64 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_64 $27
	int_64 $28
	int_64 $29
	int_64 $30
	int_32 $31
	$31 = (*([0] + [4]) - [352])
	*([0] + [4]) = $31
	CALL require_auth(*($0))
	*(($31 + [344])) = [0]
	*($31 + [328]) = (int_64)-1
	*($31 + [336]) = (int_64)0
	$28 = *($0)
	*($31 + [312]) = $28
	*($31 + [320]) = $28
	*($31 + [348]) = [0]
	*($31 + [304]) = ($31 + [312])
	*($31 + [56]) = (int_64)0
	CALL $249(($31 + [296]), ($31 + [304]), ($31 + [56]))
	CALL prints([2736])
	$26 = *($31 + [300])
	if ( ($26 == 0) ){ goto $label$17 }
	
.LOOP $label$18:
	if ( ((int_64)(*($26 + [48]) == 0) == 0) ){ goto $label$16 }
	if ( (*($26 + [56]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$14 }
	CALL prints([2224])
	CALL $258(($31 + [296]))
	CALL prints([2736])
	$26 = *($31 + [300])
	if ( $26 ){ goto $label$18 }
	
.LABEL $label$17
	CALL prints([2752])
	goto $label$15 
	
.LABEL $label$16
	CALL prints([3296])
	
.LABEL $label$15
	*($31 + [120]) = (int_64)1
	CALL $249(($31 + [56]), ($31 + [304]), ($31 + [120]))
	*($31 + [296]) = *($31 + [56])
	CALL prints([3040])
	$26 = *($31 + [300])
	if ( ($26 == 0) ){ goto $label$19 }
	
.LOOP $label$20:
	if ( ((int_64)*($26 + [48]) != (int_64)1) ){ goto $label$13 }
	if ( ((*($26 + [56]) + [14400]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$12 }
	CALL $258(($31 + [296]))
	CALL prints([3040])
	$26 = *($31 + [300])
	if ( $26 ){ goto $label$20 }
	
.LABEL $label$19
	CALL prints([3072])
	goto $label$7 
	
.LABEL $label$14
	$28 = *(*($31 + [300]))
	$23 = *(($31 + [336]))
	$25 = *(($31 + [340]))
	if ( ((int_32)$25 == (int_32)$23) ){ goto $label$21 }
	$26 = ($25 + [-24])
	$6 = ([0] - $23)
	
.LOOP $label$22:
	if ( ((int_64)*(*($26)) == (int_64)$28) ){ goto $label$21 }
	$25 = $26
	$24 = ($26 + [-24])
	$26 = $24
	if ( ((int_32)($24 + $6) != (int_32)[-24]) ){ goto $label$22 }
	
.LABEL $label$21
	if ( ((int_32)$25 == (int_32)$23) ){ goto $label$11 }
	$20 = *(($25 + [-24]))
	CALL eosio_assert(((int_32)*($20 + [72]) == (int_32)($31 + [312])), [1056])
	goto $label$10 
	
.LABEL $label$13
	CALL prints([3104])
	goto $label$7 
	
.LABEL $label$12
	CALL prints([2336])
	$28 = *(*($31 + [300]))
	$23 = *(($31 + [336]))
	$25 = *(($31 + [340]))
	if ( ((int_32)$25 == (int_32)$23) ){ goto $label$23 }
	$26 = ($25 + [-24])
	$6 = ([0] - $23)
	
.LOOP $label$24:
	if ( ((int_64)*(*($26)) == (int_64)$28) ){ goto $label$23 }
	$25 = $26
	$24 = ($26 + [-24])
	$26 = $24
	if ( ((int_32)($24 + $6) != (int_32)[-24]) ){ goto $label$24 }
	
.LABEL $label$23
	if ( ((int_32)$25 == (int_32)$23) ){ goto $label$9 }
	$6 = *(($25 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)($31 + [312])), [1056])
	goto $label$8 
	
.LABEL $label$11
	$20 = [0]
	$26 = CALL db_find_i64(*($31 + [312]), *(($31 + [320])), (int_64)4983115765713469440, $28)
	if ( ((int_32)$26 < (int_32)[0]) ){ goto $label$10 }
	$20 = CALL $250(($31 + [312]), $26)
	CALL eosio_assert(((int_32)*($20 + [72]) == (int_32)($31 + [312])), [1056])
	
.LABEL $label$10
	*($31 + [272]) = (int_64)-1
	*($31 + [280]) = [0]
	$28 = *($0)
	*($31 + [256]) = $28
	*($31 + [264]) = *($20)
	*(($31 + [284])) = [0]
	*((($31 + [256]) + [32])) = [0]
	*($31 + [292]) = [0]
	*((($31 + [216]) + [32])) = [0]
	*($31 + [216]) = $28
	*($31 + [232]) = (int_64)-1
	*($31 + [240]) = (int_64)0
	*($31 + [224]) = *($20)
	*($31 + [208]) = ($31 + [256])
	*($31 + [56]) = (int_64)0
	CALL $251(($31 + [200]), ($31 + [208]), ($31 + [56]))
	$29 = *((*($31 + [204]) + [16]))
	CALL eosio_assert([1], [1760])
	$28 = (uint_64)$29 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $28) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	
.LOOP $label$29:
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$29 }
	
.LABEL $label$28
	$24 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	$24 = [0]
	
.LABEL $label$25
	CALL eosio_assert($24, [1824])
	$26 = *($31 + [204])
	if ( ($26 == 0) ){ goto $label$31 }
	$28 = (int_64)0
	$24 = [1]
	
.LOOP $label$33:
	CALL eosio_assert(((int_64)*(($26 + [16])) == (int_64)$29), [1856])
	$28 = ((int_64)*($26 + [8]) + (int_64)$28)
	CALL eosio_assert(((int_64)$28 > (int_64)-4611686018427387904), [1904])
	CALL eosio_assert(((int_64)$28 < (int_64)4611686018427387904), [1936])
	CALL $252(($31 + [200]))
	if ( ((int_32)$24 > (int_32)[99]) ){ goto $label$32 }
	$24 = ($24 + [1])
	$26 = *($31 + [204])
	if ( $26 ){ goto $label$33 }
	
.LABEL $label$32
	$11 = (CASTING float_64)(int_64 $28)
	goto $label$30 
	
.LABEL $label$31
	$11 = (float_64)0
	
.LABEL $label$30
	*($31 + [120]) = (int_64)0
	CALL $251(($31 + [56]), ($31 + [208]), ($31 + [120]))
	*($31 + [200]) = *($31 + [56])
	*($31 + [192]) = [0]
	*($31 + [184]) = (int_64)0
	CALL pow((float_64)10, (CASTING float_64)(uint_64 *($20 + [16])))
	$26 = *($31 + [300])
	$1 = *(($26 + [40]))
	$22 = ((int_64)*($26 + [32]) / (int_64)2)
	CALL eosio_assert((uint_64)(((int_64)$22 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1760])
	$26 = [0]
	$2 = (uint_64)$1 >> (uint_64)(int_64)8
	$28 = $2)
	
.LOOP $label$36:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $28) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$35 }
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	
.LOOP $label$38:
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$35 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$38 }
	
.LABEL $label$37
	$24 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	$24 = [0]
	
.LABEL $label$34
	CALL eosio_assert($24, [1824])
	$26 = *($31 + [300])
	$28 = *($26 + [32])
	$3 = *(($26 + [40]))
	CALL eosio_assert(((int_64)$1 == (int_64)$3), [2784])
	$21 = (int_64)
	CALL eosio_assert(((int_64)$21($28 - $22)) > (int_64)-4611686018427387904), [2832])
	CALL eosio_assert(((int_64)$21 < (int_64)4611686018427387904), [2864])
	*($31 + [176]) = $3
	*($31 + [168]) = $21
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((float_64)(CASTING float_64)(int_64 $21) / (float_64)$11)
	$7 = ($31 + [92])
	$12 = (($31 + [56]) + [8])
	$6 = (($31 + [120]) + [16])
	$13 = ($6 + [4])
	$14 = (($31 + [120]) + [32])
	$15 = ($31 + [84])
	$16 = ($31 + [100])
	$17 = (($31 + [56]) + [48])
	$18 = ($31 + [108])
	$19 = ($31 + [112])
	$23 = [1]
	
.LOOP $label$39:
	$8 = (Rounds 0)(CALL floor((CASTING float_64)(int_64 ((int_64)$22 / (int_64)2))))
	CALL eosio_assert((uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1760])
	$24 = [0]
	$28 = $2
	
.LOOP $label$42:
	$26 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $28) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	
.LOOP $label$44:
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$44 }
	
.LABEL $label$43
	$25 = [1]
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	$25 = [0]
	
.LABEL $label$40
	CALL eosio_assert($25, [1824])
	$11 = CALL floor(((float_64)$4 * (float_64)(CASTING float_64)(int_64 *(*($31 + [204]) + [8]))))
	*($12) = $3
	$29 = (Rounds 0)($11)
	*($31 + [56]) = $29
	CALL eosio_assert((uint_64)(((int_64)$29 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1760])
	$28 = $5
	
.LOOP $label$46:
	$24 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $28) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$45 }
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$47 }
	
.LOOP $label$48:
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$45 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$48 }
	
.LABEL $label$47
	$24 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$46 }
	
.LABEL $label$45
	CALL eosio_assert($24, [1824])
	CALL eosio_assert([1], [2896])
	$26 = ( ($31 + [56]) ? ($31 + [168]) : ((int_64)$29 < (int_64)$21) )
	$28 = *($26)
	$29 = *($26 + [8])
	CALL eosio_assert(((int_64)$29 == (int_64)$3), [2784])
	$21 = (int_64)
	*($31 + [168]) = $21($21 - $28))
	CALL eosio_assert(((int_64)$21 > (int_64)-4611686018427387904), [2832])
	CALL eosio_assert(((int_64)$21 < (int_64)4611686018427387904), [2864])
	if ( (((int_64)$8 < (int_64)1) & ((int_64)$21 < (int_64)1)) ){ goto $label$50 }
	if ( (*($31 + [204]) == 0) ){ goto $label$50 }
	CALL eosio_assert(((int_64)$29 == (int_64)$1), [1856])
	$28 = ((int_64)$28 + (int_64)$8)
	CALL eosio_assert(((int_64)$28 > (int_64)-4611686018427387904), [1904])
	CALL eosio_assert(((int_64)$28 < (int_64)4611686018427387904), [1936])
	$26 = *($31 + [204])
	*((($31 + [120]) + [8])) = *($26)
	*(($6 + [12])) = *(($26 + [20]))
	*(($6 + [8])) = *(($26 + [16]))
	*($13) = *(($26 + [12]))
	*($6) = *($26 + [8])
	*($31 + [120]) = $23
	*($14) = $28
	*((($31 + [120]) + [40])) = $1
	$26 = *($31 + [188])
	if ( ((int_32)$26 == (int_32)*((($31 + [184]) + [8]))) ){ goto $label$52 }
	*($31 + [188]) = (CALL memcpy($26, ($31 + [120]), [48]) + [48])
	goto $label$51 
	
.LABEL $label$52
	CALL $253(($31 + [184]), ($31 + [120]))
	
.LABEL $label$51
	$26 = (($31 + [216]) + [16])
	$28 = *($26)
	if ( ((int_64)$28 != (int_64)-1) ){ goto $label$53 }
	$28 = (int_64)0
	$24 = CALL db_lowerbound_i64(*($31 + [216]), *((($31 + [216]) + [8])), (int_64)4983115765718299232, (int_64)0)
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$54 }
	CALL $254(($31 + [216]), $24)
	*($31 + [60]) = [0]
	*($31 + [56]) = ($31 + [216])
	$28 = *(*(CALL $255(($31 + [56])) + [4]))
	$28 = ( (int_64)-2 ? ((int_64)$28 + (int_64)1) : ((uint_64)$28 > (uint_64)(int_64)-3) )
	
.LABEL $label$54
	*($26) = $28
	
.LABEL $label$53
	CALL eosio_assert((uint_64)($28 <= (int_64)-2), [1488])
	$9 = *($26)
	$28 = *($0)
	*($31 + [60]) = ($31 + [120])
	*($31 + [56]) = ($31 + [216])
	CALL $256(($31 + [32]), ($31 + [216]), $28, ($31 + [56]))
	$28 = CALL current_time()
	*((($31 + [56]) + [12])) = [0]
	*((($31 + [56]) + [16])) = [0]
	*(($25 = (($31 + [56]) + [20]))) = [0]
	*((($31 + [56]) + [24])) = [0]
	*($15) = [0]
	*((($31 + [56]) + [32])) = [0]
	*($31 + [56]) = ((CASTING uint_32)(uint_64 ((uint_64)$28 / (uint_64)(int_64)1000000)) + [60])
	*($7) = [0]
	*((($31 + [56]) + [40])) = [0]
	*($16) = [0]
	*($17) = [0]
	*($18) = [0]
	*($19) = [0]
	$10 = *($0)
	$28 = (int_64)0
	$27 = (int_64)59
	$26 = [2992]
	$30 = (int_64)0
	
.LOOP $label$55:
	if ( ((uint_64)$28 > (uint_64)(int_64)5) ){ goto $label$60 }
	$24 = *($26)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$24 = ($24 + [165])
	goto $label$58 
	
.LABEL $label$60
	$29 = (int_64)0
	if ( ((uint_64)$28 <= (uint_64)(int_64)11) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $24) << (int_64)56) >> (int_64)56)
	
.LABEL $label$57
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$27 & (int_64)4294967295))
	
.LABEL $label$56
	$26 = ($26 + [1])
	$28 = ((int_64)$28 + (int_64)1)
	$30 = ((int_64)$29 | (int_64)$30)
	$27 = ((int_64)$27 + (int_64)-5)
	if ( ((int_64)$27 != (int_64)-6) ){ goto $label$55 }
	*((($31 + [32]) + [8])) = $30
	*($31 + [32]) = $10
	$28 = (int_64)0
	$27 = (int_64)59
	$26 = [4032]
	$30 = (int_64)0
	
.LOOP $label$61:
	if ( ((uint_64)$28 > (uint_64)(int_64)10) ){ goto $label$66 }
	$24 = *($26)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$65 }
	$24 = ($24 + [165])
	goto $label$64 
	
.LABEL $label$66
	$29 = (int_64)0
	if ( ((int_64)$28 == (int_64)11) ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$65
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$64
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $24) << (int_64)56) >> (int_64)56)
	
.LABEL $label$63
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$27 & (int_64)4294967295))
	
.LABEL $label$62
	$26 = ($26 + [1])
	$27 = ((int_64)$27 + (int_64)-5)
	$30 = ((int_64)$29 | (int_64)$30)
	$28 = ((int_64)$28 + (int_64)1)
	if ( ((int_64)$28 != (int_64)13) ){ goto $label$61 }
	goto $label$49 
	
.LABEL $label$50
	*($31 + [56]) = ($31 + [184])
	CALL eosio_assert(((int_32)$20 != (int_32)[0]), [1120])
	CALL $257(($31 + [312]), $20, (int_64)0, ($31 + [56]))
	$26 = *($31 + [184])
	if ( ($26 == 0) ){ goto $label$67 }
	*($31 + [188]) = $26
	CALL $418($26)
	
.LABEL $label$67
	$25 = *($31 + [240])
	if ( ($25 == 0) ){ goto $label$68 }
	$0 = ($31 + [244])
	$26 = *($0)
	if ( ((int_32)$26 == (int_32)$25) ){ goto $label$70 }
	
.LOOP $label$71:
	$26 = ($26 + [-24])
	$24 = *($26)
	*($26) = [0]
	if ( ($24 == 0) ){ goto $label$72 }
	CALL $418($24)
	
.LABEL $label$72
	if ( ((int_32)$25 != (int_32)$26) ){ goto $label$71 }
	$26 = *(($31 + [240]))
	goto $label$69 
	
.LABEL $label$70
	$26 = $25
	
.LABEL $label$69
	*($0) = $25
	CALL $418($26)
	
.LABEL $label$68
	$25 = *($31 + [280])
	if ( ($25 == 0) ){ goto $label$3 }
	$0 = ($31 + [284])
	$26 = *($0)
	if ( ((int_32)$26 == (int_32)$25) ){ goto $label$74 }
	
.LOOP $label$75:
	$26 = ($26 + [-24])
	$24 = *($26)
	*($26) = [0]
	if ( ($24 == 0) ){ goto $label$76 }
	CALL $418($24)
	
.LABEL $label$76
	if ( ((int_32)$25 != (int_32)$26) ){ goto $label$75 }
	$26 = *(($31 + [280]))
	goto $label$73 
	
.LABEL $label$74
	$26 = $25
	
.LABEL $label$73
	*($0) = $25
	CALL $418($26)
	$0 = *($31 + [336])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$49
	*($31 + [24]) = $30
	*((($31 + [8]) + [8])) = $9
	*($31 + [8]) = *($20)
	CALL $173($7, ($31 + [32]), $0, ($31 + [24]), ($31 + [8]))
	$28 = *($0)
	$29 = *($31 + [120])
	*($25) = [0]
	*($31 + [40]) = (int_64)0
	*($31 + [32]) = ((int_64)$29 | (int_64)((int_64)*($20) << (int_64)32))
	CALL $174(($31 + [8]), ($31 + [56]))
	$26 = *($31 + [8])
	CALL send_deferred(($31 + [32]), $28, $26, (*($31 + [12]) - $26), [1])
	$26 = *($31 + [8])
	if ( ($26 == 0) ){ goto $label$77 }
	*($31 + [12]) = $26
	CALL $418($26)
	
.LABEL $label$77
	CALL prints([3024])
	CALL $252(($31 + [200]))
	CALL eosio_assert([1], [2784])
	$22 = (int_64)
	CALL eosio_assert(((int_64)$22($22 - $8)) > (int_64)-4611686018427387904), [2832])
	CALL eosio_assert(((int_64)$22 < (int_64)4611686018427387904), [2864])
	$23 = ($23 + [1])
	CALL $176(($31 + [56]))
	goto $label$39 
	
.LABEL $label$9
	$6 = [0]
	$26 = CALL db_find_i64(*($31 + [312]), *(($31 + [320])), (int_64)4983115765713469440, $28)
	if ( ((int_32)$26 < (int_32)[0]) ){ goto $label$8 }
	$6 = CALL $250(($31 + [312]), $26)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)($31 + [312])), [1056])
	
.LABEL $label$8
	*($31 + [72]) = (int_64)-1
	*($31 + [80]) = [0]
	$28 = *($0)
	*($31 + [56]) = $28
	*($31 + [64]) = *($6)
	*(($31 + [84])) = [0]
	*((($31 + [56]) + [32])) = [0]
	*($31 + [92]) = [0]
	*((($31 + [120]) + [32])) = [0]
	$29 = *($6)
	*($31 + [128]) = $29
	*($31 + [120]) = $28
	*($31 + [136]) = (int_64)-1
	*($31 + [144]) = (int_64)0
	$26 = CALL db_lowerbound_i64($28, $29, (int_64)4983115765718299232, (int_64)0)
	if ( ((int_32)$26 <= (int_32)[-1]) ){ goto $label$81 }
	CALL $254(($31 + [120]), $26)
	CALL prints([3136])
	$25 = *($31 + [144])
	if ( ($25 == 0) ){ goto $label$78 }
	$0 = ($31 + [148])
	$26 = *($0)
	if ( ((int_32)$26 == (int_32)$25) ){ goto $label$80 }
	
.LOOP $label$82:
	$26 = ($26 + [-24])
	$24 = *($26)
	*($26) = [0]
	if ( ($24 == 0) ){ goto $label$83 }
	CALL $418($24)
	
.LABEL $label$83
	if ( ((int_32)$25 != (int_32)$26) ){ goto $label$82 }
	$26 = *(($31 + [144]))
	goto $label$79 
	
.LABEL $label$81
	CALL prints([2352])
	$24 = ($31 + [64])
	$25 = [0]
	
.LOOP $label$86:
	$26 = CALL db_lowerbound_i64(*($31 + [56]), *($24), (int_64)4983115765722716160, (int_64)0)
	if ( ((int_32)$26 <= (int_32)[-1]) ){ goto $label$85 }
	CALL $260(($31 + [56]), $26)
	$26 = [0]
	$0 = CALL db_lowerbound_i64(*($31 + [56]), *($24), (int_64)4983115765722716160, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$87 }
	$26 = CALL $260(($31 + [56]), $0)
	
.LABEL $label$87
	$0 = ((int_32)$26 != (int_32)[0])
	CALL eosio_assert($0, [2400])
	CALL eosio_assert($0, [1680])
	$0 = CALL db_next_i64(*($26 + [28]), ($31 + [256]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$88 }
	CALL $260(($31 + [56]), $0)
	
.LABEL $label$88
	CALL $261(($31 + [56]), $26)
	CALL prints([2352])
	$25 = ($25 + [1])
	if ( ((uint_32)$25 <= (uint_32)[29]) ){ goto $label$86 }
	CALL prints([2368])
	$25 = *($31 + [144])
	if ( $25 ){ goto $label$84 }
	goto $label$4 
	
.LABEL $label$85
	CALL prints([2384])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [1120])
	CALL $259(($31 + [312]), $6, (int_64)0, ($31 + [256]))
	$25 = *($31 + [144])
	if ( ($25 == 0) ){ goto $label$4 }
	
.LABEL $label$84
	$0 = ($31 + [148])
	$26 = *($0)
	if ( ((int_32)$26 == (int_32)$25) ){ goto $label$6 }
	
.LOOP $label$89:
	$26 = ($26 + [-24])
	$24 = *($26)
	*($26) = [0]
	if ( ($24 == 0) ){ goto $label$90 }
	CALL $418($24)
	
.LABEL $label$90
	if ( ((int_32)$25 != (int_32)$26) ){ goto $label$89 }
	$26 = *(($31 + [144]))
	goto $label$5 
	
.LABEL $label$80
	$26 = $25
	
.LABEL $label$79
	*($0) = $25
	CALL $418($26)
	
.LABEL $label$78
	$25 = *($31 + [80])
	if ( ($25 == 0) ){ goto $label$7 }
	$0 = ($31 + [84])
	$26 = *($0)
	if ( ((int_32)$26 == (int_32)$25) ){ goto $label$92 }
	
.LOOP $label$93:
	$26 = ($26 + [-24])
	$24 = *($26)
	*($26) = [0]
	if ( ($24 == 0) ){ goto $label$94 }
	CALL $418($24)
	
.LABEL $label$94
	if ( ((int_32)$25 != (int_32)$26) ){ goto $label$93 }
	$26 = *(($31 + [80]))
	goto $label$91 
	
.LABEL $label$92
	$26 = $25
	
.LABEL $label$91
	*($0) = $25
	CALL $418($26)
	
.LABEL $label$7
	CALL eosio_assert([0], [2448])
	goto $label$3 
	
.LABEL $label$6
	$26 = $25
	
.LABEL $label$5
	*($0) = $25
	CALL $418($26)
	
.LABEL $label$4
	$25 = *($31 + [80])
	if ( ($25 == 0) ){ goto $label$3 }
	$0 = ($31 + [84])
	$26 = *($0)
	if ( ((int_32)$26 == (int_32)$25) ){ goto $label$96 }
	
.LOOP $label$97:
	$26 = ($26 + [-24])
	$24 = *($26)
	*($26) = [0]
	if ( ($24 == 0) ){ goto $label$98 }
	CALL $418($24)
	
.LABEL $label$98
	if ( ((int_32)$25 != (int_32)$26) ){ goto $label$97 }
	$26 = *(($31 + [80]))
	goto $label$95 
	
.LABEL $label$96
	$26 = $25
	
.LABEL $label$95
	*($0) = $25
	CALL $418($26)
	$0 = *($31 + [336])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$0 = *($31 + [336])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($31 + [340])
	$26 = *($6)
	if ( ((int_32)$26 == (int_32)$0) ){ goto $label$100 }
	
.LOOP $label$101:
	$26 = ($26 + [-24])
	$24 = *($26)
	*($26) = [0]
	if ( ($24 == 0) ){ goto $label$102 }
	$25 = *($24 + [60])
	if ( ($25 == 0) ){ goto $label$103 }
	*(($24 + [64])) = $25
	CALL $418($25)
	
.LABEL $label$103
	CALL $418($24)
	
.LABEL $label$102
	if ( ((int_32)$0 != (int_32)$26) ){ goto $label$101 }
	$26 = *(($31 + [336]))
	goto $label$99 
	
.LABEL $label$100
	$26 = $0
	
.LABEL $label$99
	*($6) = $0
	CALL $418($26)
	
.LABEL $label$1
	*([0] + [4]) = ($31 + [352])
}

void .FUNC $55 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [224])
	*([0] + [4]) = $12
	CALL require_auth(*($0))
	$6 = [0]
	*((($12 + [168]) + [32])) = [0]
	*($12 + [184]) = (int_64)-1
	*($12 + [192]) = (int_64)0
	$9 = *($0)
	*($12 + [168]) = $9
	*($12 + [176]) = $9
	*($12 + [204]) = [0]
	*((($12 + [128]) + [32])) = [0]
	*($12 + [136]) = $1
	*($12 + [128]) = $9
	*($12 + [144]) = (int_64)-1
	*($12 + [152]) = (int_64)0
	$0 = CALL db_find_i64($9, $9, (int_64)4983115765730246656, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $211(($12 + [168]), $0)
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)($12 + [168])), [1056])
	$6 = *(($12 + [152]))
	$3 = *(($12 + [156]))
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$3 = [0]
	$7 = [0]
	if ( ((int_32)[0] == (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	$0 = ($3 + [-24])
	$4 = ([0] - $6)
	
.LOOP $label$4:
	if ( ((int_64)*(*($0)) == (int_64)$2) ){ goto $label$1 }
	$3 = $0
	$5 = ($0 + [-24])
	$0 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$1
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$6 }
	$5 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)($12 + [128])), [1056])
	goto $label$5 
	
.LABEL $label$6
	$5 = [0]
	$0 = CALL db_find_i64(*($12 + [128]), *(($12 + [136])), (int_64)4983115765735076448, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $213(($12 + [128]), $0)
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)($12 + [128])), [1056])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [3152])
	$4 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($4, [3184])
	$8 = (int_64)59
	$0 = [3360]
	$9 = (int_64)0
	$2 = (int_64)0
	
.LOOP $label$7:
	if ( ((int_64)$9 == (int_64)0) ){ goto $label$10 }
	$10 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$10 | (int_64)$2)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	*($12 + [8]) = (int_64)0
	$3 = [0]
	*($12 + [16]) = [0]
	$9 = (uint_64)*(($5 + [56])) >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$13 }
	
.LOOP $label$14:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$14 }
	
.LABEL $label$13
	$0 = *($12 + [8])
	$6 = CALL strlen([816])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$15 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [816], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$15
	if ( (($0 & [1]) == 0) ){ goto $label$16 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$16
	if ( ($3 == 0) ){ goto $label$17 }
	$9 = (int_64)0
	$8 = (int_64)59
	$0 = [3376]
	$2 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$9 > (uint_64)(int_64)10) ){ goto $label$23 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$3 = ($3 + [165])
	goto $label$21 
	
.LABEL $label$23
	$10 = (int_64)0
	if ( ((int_64)$9 == (int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$19
	$0 = ($0 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$2 = ((int_64)$10 | (int_64)$2)
	$9 = ((int_64)$9 + (int_64)1)
	if ( ((int_64)$9 != (int_64)13) ){ goto $label$18 }
	
.LABEL $label$17
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$24 }
	
.LOOP $label$25:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$25 }
	
.LABEL $label$24
	$0 = *($12 + [8])
	$6 = CALL strlen([3392])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$26 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3392], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$26
	if ( (($0 & [1]) == 0) ){ goto $label$27 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$27
	if ( ($3 == 0) ){ goto $label$28 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3264]
	$2 = (int_64)0
	
.LOOP $label$29:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$30 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$3 = ($3 + [165])
	goto $label$31 
	
.LABEL $label$32
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$30
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$29 }
	
.LABEL $label$28
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$33 }
	
.LOOP $label$34:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$34 }
	
.LABEL $label$33
	$0 = *($12 + [8])
	$6 = CALL strlen([3408])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$35 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3408], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$35
	if ( (($0 & [1]) == 0) ){ goto $label$36 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$36
	if ( ($3 == 0) ){ goto $label$37 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3424]
	$2 = (int_64)0
	
.LOOP $label$38:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$39 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$3 = ($3 + [165])
	goto $label$40 
	
.LABEL $label$41
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$39
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$38 }
	
.LABEL $label$37
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$42 }
	
.LOOP $label$43:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$43 }
	
.LABEL $label$42
	$0 = *($12 + [8])
	$6 = CALL strlen([3440])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$44 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3440], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$44
	if ( (($0 & [1]) == 0) ){ goto $label$45 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$45
	if ( ($3 == 0) ){ goto $label$46 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3456]
	$2 = (int_64)0
	
.LOOP $label$47:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$48 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$50 }
	$3 = ($3 + [165])
	goto $label$49 
	
.LABEL $label$50
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$49
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$48
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$47 }
	
.LABEL $label$46
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$51 }
	
.LOOP $label$52:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$52 }
	
.LABEL $label$51
	$0 = *($12 + [8])
	$6 = CALL strlen([3472])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$53 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3472], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$53
	if ( (($0 & [1]) == 0) ){ goto $label$54 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$54
	if ( ($3 == 0) ){ goto $label$55 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3456]
	$2 = (int_64)0
	
.LOOP $label$56:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$57 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$3 = ($3 + [165])
	goto $label$58 
	
.LABEL $label$59
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$57
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$56 }
	
.LABEL $label$55
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$60 }
	
.LOOP $label$61:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$61 }
	
.LABEL $label$60
	$0 = *($12 + [8])
	$6 = CALL strlen([3488])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$62 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3488], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$62
	if ( (($0 & [1]) == 0) ){ goto $label$63 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$63
	if ( ($3 == 0) ){ goto $label$64 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3456]
	$2 = (int_64)0
	
.LOOP $label$65:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$66 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$68 }
	$3 = ($3 + [165])
	goto $label$67 
	
.LABEL $label$68
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$67
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$66
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$65 }
	
.LABEL $label$64
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$69 }
	
.LOOP $label$70:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$70 }
	
.LABEL $label$69
	$0 = *($12 + [8])
	$6 = CALL strlen([3504])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$71 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3504], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$71
	if ( (($0 & [1]) == 0) ){ goto $label$72 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$72
	if ( ($3 == 0) ){ goto $label$73 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3520]
	$2 = (int_64)0
	
.LOOP $label$74:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$75 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$77 }
	$3 = ($3 + [165])
	goto $label$76 
	
.LABEL $label$77
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$76
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$75
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$74 }
	
.LABEL $label$73
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$78 }
	
.LOOP $label$79:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$79 }
	
.LABEL $label$78
	$0 = *($12 + [8])
	$6 = CALL strlen([3536])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$80 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3536], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$80
	if ( (($0 & [1]) == 0) ){ goto $label$81 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$81
	if ( ($3 == 0) ){ goto $label$82 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3552]
	$2 = (int_64)0
	
.LOOP $label$83:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$84 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$86 }
	$3 = ($3 + [165])
	goto $label$85 
	
.LABEL $label$86
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$85
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$84
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$83 }
	
.LABEL $label$82
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$87 }
	
.LOOP $label$88:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$88 }
	
.LABEL $label$87
	$0 = *($12 + [8])
	$6 = CALL strlen([3568])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$89 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3568], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$89
	if ( (($0 & [1]) == 0) ){ goto $label$90 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$90
	if ( ($3 == 0) ){ goto $label$91 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3584]
	$2 = (int_64)0
	
.LOOP $label$92:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$93 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$95 }
	$3 = ($3 + [165])
	goto $label$94 
	
.LABEL $label$95
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$94
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$93
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$92 }
	
.LABEL $label$91
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$96 }
	
.LOOP $label$97:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$97 }
	
.LABEL $label$96
	$0 = *($12 + [8])
	$6 = CALL strlen([3600])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$98 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3600], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$98
	if ( (($0 & [1]) == 0) ){ goto $label$99 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$99
	if ( ($3 == 0) ){ goto $label$100 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3616]
	$2 = (int_64)0
	
.LOOP $label$101:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$102 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$104 }
	$3 = ($3 + [165])
	goto $label$103 
	
.LABEL $label$104
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$103
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$102
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$101 }
	
.LABEL $label$100
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$105 }
	
.LOOP $label$106:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$106 }
	
.LABEL $label$105
	$0 = *($12 + [8])
	$6 = CALL strlen([3632])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$107 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3632], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$107
	if ( (($0 & [1]) == 0) ){ goto $label$108 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$108
	if ( ($3 == 0) ){ goto $label$109 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3648]
	$2 = (int_64)0
	
.LOOP $label$110:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$111 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$113 }
	$3 = ($3 + [165])
	goto $label$112 
	
.LABEL $label$113
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$112
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$111
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$110 }
	
.LABEL $label$109
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$114 }
	
.LOOP $label$115:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$115 }
	
.LABEL $label$114
	$0 = *($12 + [8])
	$6 = CALL strlen([3664])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$116 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3664], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$116
	if ( (($0 & [1]) == 0) ){ goto $label$117 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$117
	if ( ($3 == 0) ){ goto $label$118 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3680]
	$2 = (int_64)0
	
.LOOP $label$119:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$120 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$122 }
	$3 = ($3 + [165])
	goto $label$121 
	
.LABEL $label$122
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$121
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$120
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$119 }
	
.LABEL $label$118
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$123 }
	
.LOOP $label$124:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	$0 = *($12 + [8])
	$6 = CALL strlen([3696])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$125 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3696], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$125
	if ( (($0 & [1]) == 0) ){ goto $label$126 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$126
	if ( ($3 == 0) ){ goto $label$127 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3712]
	$2 = (int_64)0
	
.LOOP $label$128:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$129 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$131 }
	$3 = ($3 + [165])
	goto $label$130 
	
.LABEL $label$131
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$130
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$129
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$128 }
	
.LABEL $label$127
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$132 }
	
.LOOP $label$133:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$133 }
	
.LABEL $label$132
	$0 = *($12 + [8])
	$6 = CALL strlen([3728])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$134 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3728], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$134
	if ( (($0 & [1]) == 0) ){ goto $label$135 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$135
	if ( ($3 == 0) ){ goto $label$136 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3744]
	$2 = (int_64)0
	
.LOOP $label$137:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$138 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$140 }
	$3 = ($3 + [165])
	goto $label$139 
	
.LABEL $label$140
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$139
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$138
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$137 }
	
.LABEL $label$136
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$141 }
	
.LOOP $label$142:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$142 }
	
.LABEL $label$141
	$0 = *($12 + [8])
	$6 = CALL strlen([3760])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$143 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3760], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$143
	if ( (($0 & [1]) == 0) ){ goto $label$144 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$144
	if ( ($3 == 0) ){ goto $label$145 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3776]
	$2 = (int_64)0
	
.LOOP $label$146:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$147 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$149 }
	$3 = ($3 + [165])
	goto $label$148 
	
.LABEL $label$149
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$148
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$147
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$146 }
	
.LABEL $label$145
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$150 }
	
.LOOP $label$151:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$151 }
	
.LABEL $label$150
	$0 = *($12 + [8])
	$6 = CALL strlen([3792])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$152 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3792], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$152
	if ( (($0 & [1]) == 0) ){ goto $label$153 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$153
	if ( ($3 == 0) ){ goto $label$154 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3808]
	$2 = (int_64)0
	
.LOOP $label$155:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$156 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$158 }
	$3 = ($3 + [165])
	goto $label$157 
	
.LABEL $label$158
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$157
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$156
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$155 }
	
.LABEL $label$154
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$159 }
	
.LOOP $label$160:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$160 }
	
.LABEL $label$159
	$0 = *($12 + [8])
	$6 = CALL strlen([3824])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$161 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3824], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$161
	if ( (($0 & [1]) == 0) ){ goto $label$162 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$162
	if ( ($3 == 0) ){ goto $label$163 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3648]
	$2 = (int_64)0
	
.LOOP $label$164:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$165 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$167 }
	$3 = ($3 + [165])
	goto $label$166 
	
.LABEL $label$167
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$166
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$165
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$164 }
	
.LABEL $label$163
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$168 }
	
.LOOP $label$169:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$169 }
	
.LABEL $label$168
	$0 = *($12 + [8])
	$6 = CALL strlen([3840])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$170 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3840], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$170
	if ( (($0 & [1]) == 0) ){ goto $label$171 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$171
	if ( ($3 == 0) ){ goto $label$172 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3856]
	$2 = (int_64)0
	
.LOOP $label$173:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$174 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$176 }
	$3 = ($3 + [165])
	goto $label$175 
	
.LABEL $label$176
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$175
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$174
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$173 }
	
.LABEL $label$172
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$177 }
	
.LOOP $label$178:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$178 }
	
.LABEL $label$177
	$0 = *($12 + [8])
	$6 = CALL strlen([3872])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$179 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3872], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$179
	if ( (($0 & [1]) == 0) ){ goto $label$180 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$180
	if ( ($3 == 0) ){ goto $label$181 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3888]
	$2 = (int_64)0
	
.LOOP $label$182:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$183 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$185 }
	$3 = ($3 + [165])
	goto $label$184 
	
.LABEL $label$185
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$184
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$183
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$182 }
	
.LABEL $label$181
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$186 }
	
.LOOP $label$187:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$187 }
	
.LABEL $label$186
	$0 = *($12 + [8])
	$6 = CALL strlen([3904])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$188 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3904], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$188
	if ( (($0 & [1]) == 0) ){ goto $label$189 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$189
	if ( ($3 == 0) ){ goto $label$190 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3920]
	$2 = (int_64)0
	
.LOOP $label$191:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$192 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$194 }
	$3 = ($3 + [165])
	goto $label$193 
	
.LABEL $label$194
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$193
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$192
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$191 }
	
.LABEL $label$190
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$195 }
	
.LOOP $label$196:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$196 }
	
.LABEL $label$195
	$0 = *($12 + [8])
	$6 = CALL strlen([3936])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$197 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3936], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$197
	if ( (($0 & [1]) == 0) ){ goto $label$198 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$198
	if ( ($3 == 0) ){ goto $label$199 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [3952]
	$2 = (int_64)0
	
.LOOP $label$200:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$201 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$203 }
	$3 = ($3 + [165])
	goto $label$202 
	
.LABEL $label$203
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$202
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$201
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$8 | (int_64)$2)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$200 }
	
.LABEL $label$199
	$9 = *(($5 + [56]))
	$3 = [0]
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$204 }
	
.LOOP $label$205:
	CALL $425(($12 + [8]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$205 }
	
.LABEL $label$204
	$0 = *($12 + [8])
	$6 = CALL strlen([3968])
	if ( ((int_32)$6 != (int_32)( *($12 + [12]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$206 }
	$3 = (CALL $431(($12 + [8]), [0], [-1], [3968], $6) == 0)
	$0 = *($12 + [8])
	
.LABEL $label$206
	if ( (($0 & [1]) == 0) ){ goto $label$207 }
	CALL $418(*(($12 + [16])))
	
.LABEL $label$207
	if ( ($3 == 0) ){ goto $label$208 }
	$9 = (int_64)0
	$8 = (int_64)59
	$0 = [3984]
	$2 = (int_64)0
	
.LOOP $label$209:
	if ( ((uint_64)$9 > (uint_64)(int_64)6) ){ goto $label$214 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$213 }
	$3 = ($3 + [165])
	goto $label$212 
	
.LABEL $label$214
	$10 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$211 }
	goto $label$210 
	
.LABEL $label$213
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$212
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$211
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$210
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$2 = ((int_64)$10 | (int_64)$2)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$209 }
	
.LABEL $label$208
	if ( ((int_64)*(($5 + [48])) < (int_64)1) ){ goto $label$215 }
	CALL _ZNSt3__19to_stringEy(($12 + [56]), $1)
	$0 = CALL $427(($12 + [56]), [0], [4000])
	$3 = ($0 + [8])
	*((($12 + [72]) + [8])) = *($3)
	*($12 + [72]) = *($0)
	*($0) = [0]
	*(($0 + [4])) = [0]
	*($3) = [0]
	$0 = CALL $424(($12 + [72]), [3248])
	$3 = ($0 + [8])
	*((($12 + [8]) + [8])) = *($3)
	*($12 + [8]) = *($0)
	*($0) = [0]
	*(($0 + [4])) = [0]
	*($3) = [0]
	CALL _ZNSt3__19to_stringEm(($12 + [208]), *($5 + [16]))
	$0 = *($12 + [208])
	$3 = ($0 & [1])
	$0 = CALL $423(($12 + [8]), ( *($12 + [216]) ? (($12 + [208]) | [1]) : $3 ), ( *($12 + [212]) ? uint_32($0 >> [1]) : $3 ))
	$3 = ($0 + [8])
	*((($12 + [112]) + [8])) = *($3)
	*($12 + [112]) = *($0)
	*($0) = [0]
	*(($0 + [4])) = [0]
	*($3) = [0]
	if ( ((*($12 + [208]) & [1]) == 0) ){ goto $label$216 }
	CALL $418(*((($12 + [208]) + [8])))
	
.LABEL $label$216
	if ( ((*($12 + [8]) & [1]) == 0) ){ goto $label$217 }
	CALL $418(*($12 + [16]))
	
.LABEL $label$217
	if ( ((*($12 + [72]) & [1]) == 0) ){ goto $label$218 }
	CALL $418(*($12 + [80]))
	
.LABEL $label$218
	if ( ((*($12 + [56]) & [1]) == 0) ){ goto $label$219 }
	CALL $418(*($12 + [64]))
	
.LABEL $label$219
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [1968]
	$1 = (int_64)0
	
.LOOP $label$220:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$221 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$223 }
	$3 = ($3 + [165])
	goto $label$222 
	
.LABEL $label$223
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$222
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$221
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$1 = ((int_64)$8 | (int_64)$1)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$220 }
	$9 = (int_64)0
	$8 = (int_64)59
	$0 = [1984]
	$11 = (int_64)0
	
.LOOP $label$224:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$229 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$228 }
	$3 = ($3 + [165])
	goto $label$227 
	
.LABEL $label$229
	$10 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$226 }
	goto $label$225 
	
.LABEL $label$228
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$227
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$226
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$225
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$224 }
	*($12 + [64]) = $11
	*($12 + [56]) = $1
	$9 = (int_64)0
	$8 = (int_64)59
	$0 = [2000]
	$1 = (int_64)0
	
.LOOP $label$230:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$235 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$234 }
	$3 = ($3 + [165])
	goto $label$233 
	
.LABEL $label$235
	$10 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$232 }
	goto $label$231 
	
.LABEL $label$234
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$233
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$232
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$231
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$1 = ((int_64)$10 | (int_64)$1)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$230 }
	$9 = (int_64)0
	$10 = (int_64)59
	$0 = [1968]
	$11 = (int_64)0
	
.LOOP $label$236:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$237 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$239 }
	$3 = ($3 + [165])
	goto $label$238 
	
.LABEL $label$239
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$238
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$237
	$0 = ($0 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$11 = ((int_64)$8 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$236 }
	$9 = *(($5 + [24]))
	*(($12 + [36])) = *(($5 + [60]))
	*((($12 + [8]) + [24])) = *(($5 + [56]))
	*(($12 + [28])) = *(($5 + [52]))
	*($12 + [8]) = $11
	*($12 + [16]) = $9
	*($12 + [24]) = *(($5 + [48]))
	CALL $437(($12 + [40]), ($12 + [112]))
	$0 = CALL $108(($12 + [72]), ($12 + [56]), $2, $1, ($12 + [8]))
	CALL $109(($12 + [208]), $0)
	$3 = *($12 + [208])
	CALL send_inline($3, (*($12 + [212]) - $3))
	$3 = *($12 + [208])
	if ( ($3 == 0) ){ goto $label$240 }
	*($12 + [212]) = $3
	CALL $418($3)
	
.LABEL $label$240
	$3 = *($0 + [28])
	if ( ($3 == 0) ){ goto $label$241 }
	*(($0 + [32])) = $3
	CALL $418($3)
	
.LABEL $label$241
	$3 = *($0 + [16])
	if ( ($3 == 0) ){ goto $label$242 }
	*(($0 + [20])) = $3
	CALL $418($3)
	
.LABEL $label$242
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$243 }
	CALL $418(*(($12 + [48])))
	
.LABEL $label$243
	if ( ((*($12 + [112]) & [1]) == 0) ){ goto $label$215 }
	CALL $418(*($12 + [120]))
	
.LABEL $label$215
	CALL eosio_assert($4, [2400])
	CALL eosio_assert($4, [1680])
	$0 = CALL db_next_i64(*($5 + [68]), ($12 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$244 }
	CALL $213(($12 + [128]), $0)
	
.LABEL $label$244
	CALL $248(($12 + [128]), $5)
	$3 = *($12 + [152])
	if ( ($3 == 0) ){ goto $label$245 }
	$4 = ($12 + [156])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$247 }
	
.LOOP $label$248:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$249 }
	CALL $418($5)
	
.LABEL $label$249
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$248 }
	$0 = *(($12 + [152]))
	goto $label$246 
	
.LABEL $label$247
	$0 = $3
	
.LABEL $label$246
	*($4) = $3
	CALL $418($0)
	
.LABEL $label$245
	$4 = *($12 + [192])
	if ( ($4 == 0) ){ goto $label$250 }
	$6 = ($12 + [196])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$252 }
	
.LOOP $label$253:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$254 }
	$3 = *($5 + [60])
	if ( ($3 == 0) ){ goto $label$255 }
	*(($5 + [64])) = $3
	CALL $418($3)
	
.LABEL $label$255
	CALL $418($5)
	
.LABEL $label$254
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$253 }
	$0 = *(($12 + [192]))
	goto $label$251 
	
.LABEL $label$252
	$0 = $4
	
.LABEL $label$251
	*($6) = $4
	CALL $418($0)
	
.LABEL $label$250
	*([0] + [4]) = ($12 + [224])
}

void .FUNC $56 (int_32 $0)
{
	int_64 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_64 $22
	int_32 $23
	int_32 $24
	int_64 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_32 $29
	$29 = (*([0] + [4]) - [368])
	*([0] + [4]) = $29
	CALL require_auth(*($0))
	*(($29 + [360])) = [0]
	*($29 + [344]) = (int_64)-1
	*($29 + [352]) = (int_64)0
	$26 = *($0)
	*($29 + [328]) = $26
	*($29 + [336]) = $26
	*($29 + [364]) = [0]
	*($29 + [320]) = ($29 + [328])
	*($29 + [88]) = (int_64)0
	CALL $210(($29 + [312]), ($29 + [320]), ($29 + [88]))
	CALL prints([2736])
	$24 = *($29 + [316])
	if ( ($24 == 0) ){ goto $label$17 }
	
.LOOP $label$18:
	if ( ((int_64)(*($24 + [48]) == 0) == 0) ){ goto $label$16 }
	if ( (*($24 + [56]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$14 }
	CALL prints([2224])
	CALL $220(($29 + [312]))
	CALL prints([2736])
	$24 = *($29 + [316])
	if ( $24 ){ goto $label$18 }
	
.LABEL $label$17
	CALL prints([2752])
	goto $label$15 
	
.LABEL $label$16
	CALL prints([3296])
	
.LABEL $label$15
	*($29 + [152]) = (int_64)1
	CALL $210(($29 + [88]), ($29 + [320]), ($29 + [152]))
	*($29 + [312]) = *($29 + [88])
	CALL prints([3040])
	$24 = *($29 + [316])
	if ( ($24 == 0) ){ goto $label$19 }
	
.LOOP $label$20:
	if ( ((int_64)*($24 + [48]) != (int_64)1) ){ goto $label$13 }
	if ( ((*($24 + [56]) + [86400]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$12 }
	CALL $220(($29 + [312]))
	CALL prints([3040])
	$24 = *($29 + [316])
	if ( $24 ){ goto $label$20 }
	
.LABEL $label$19
	CALL prints([3072])
	goto $label$7 
	
.LABEL $label$14
	$26 = *(*($29 + [316]))
	$21 = *(($29 + [352]))
	$11 = *(($29 + [356]))
	if ( ((int_32)$11 == (int_32)$21) ){ goto $label$21 }
	$24 = ($11 + [-24])
	$23 = ([0] - $21)
	
.LOOP $label$22:
	if ( ((int_64)*(*($24)) == (int_64)$26) ){ goto $label$21 }
	$11 = $24
	$10 = ($24 + [-24])
	$24 = $10
	if ( ((int_32)($10 + $23) != (int_32)[-24]) ){ goto $label$22 }
	
.LABEL $label$21
	if ( ((int_32)$11 == (int_32)$21) ){ goto $label$11 }
	$21 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [72]) == (int_32)($29 + [328])), [1056])
	goto $label$10 
	
.LABEL $label$13
	CALL prints([3104])
	goto $label$7 
	
.LABEL $label$12
	CALL prints([2336])
	$26 = *(*($29 + [316]))
	$21 = *(($29 + [352]))
	$11 = *(($29 + [356]))
	if ( ((int_32)$11 == (int_32)$21) ){ goto $label$23 }
	$24 = ($11 + [-24])
	$23 = ([0] - $21)
	
.LOOP $label$24:
	if ( ((int_64)*(*($24)) == (int_64)$26) ){ goto $label$23 }
	$11 = $24
	$10 = ($24 + [-24])
	$24 = $10
	if ( ((int_32)($10 + $23) != (int_32)[-24]) ){ goto $label$24 }
	
.LABEL $label$23
	if ( ((int_32)$11 == (int_32)$21) ){ goto $label$9 }
	$23 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($23 + [72]) == (int_32)($29 + [328])), [1056])
	goto $label$8 
	
.LABEL $label$11
	$21 = [0]
	$24 = CALL db_find_i64(*($29 + [328]), *(($29 + [336])), (int_64)4983115765730246656, $26)
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$10 }
	$21 = CALL $211(($29 + [328]), $24)
	CALL eosio_assert(((int_32)*($21 + [72]) == (int_32)($29 + [328])), [1056])
	
.LABEL $label$10
	*($29 + [288]) = (int_64)-1
	*($29 + [296]) = [0]
	$26 = *($0)
	*($29 + [272]) = $26
	*($29 + [280]) = *($21)
	*(($29 + [300])) = [0]
	*((($29 + [272]) + [32])) = [0]
	*($29 + [308]) = [0]
	*((($29 + [232]) + [32])) = [0]
	*($29 + [232]) = $26
	*($29 + [248]) = (int_64)-1
	*($29 + [256]) = (int_64)0
	*($29 + [240]) = *($21)
	*($29 + [224]) = ($29 + [272])
	*($29 + [88]) = (int_64)0
	CALL $212(($29 + [216]), ($29 + [224]), ($29 + [88]))
	*($29 + [208]) = [0]
	*($29 + [200]) = (int_64)0
	CALL pow((float_64)10, (CASTING float_64)(uint_64 *($21 + [16])))
	$24 = *($29 + [316])
	$2 = *(($24 + [40]))
	$1 = ((int_64)*($24 + [32]) / (int_64)2)
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1760])
	$26 = (uint_64)$2 >> (uint_64)(int_64)8)
	$24 = [0]
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	
.LOOP $label$29:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$29 }
	
.LABEL $label$28
	$10 = [1]
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	$10 = [0]
	
.LABEL $label$25
	CALL eosio_assert($10, [1824])
	$24 = *($29 + [316])
	$26 = *($24 + [32])
	$3 = *(($24 + [40]))
	$4 = ((int_64)$2 == (int_64)$3)
	CALL eosio_assert($4, [2784])
	$22 = (int_64)
	CALL eosio_assert(((int_64)$22($26 - $1)) > (int_64)-4611686018427387904), [2832])
	CALL eosio_assert(((int_64)$22 < (int_64)4611686018427387904), [2864])
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	$6 = ($29 + [124])
	$12 = (($29 + [232]) + [8])
	$11 = (($29 + [152]) + [16])
	$13 = ($11 + [4])
	$14 = (($29 + [152]) + [32])
	$16 = ($29 + [116])
	$17 = ($29 + [132])
	$18 = (($29 + [88]) + [48])
	$19 = ($29 + [140])
	$20 = ($29 + [144])
	$23 = [1]
	
.LOOP $label$30:
	$7 = (Rounds 0)(CALL floor((CASTING float_64)(int_64 ((int_64)$22 / (int_64)2))))
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1760])
	$24 = [0]
	$26 = $5
	
.LOOP $label$32:
	$10 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$31 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	
.LOOP $label$34:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$31 }
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$34 }
	
.LABEL $label$33
	$10 = [1]
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$32 }
	
.LABEL $label$31
	CALL eosio_assert($10, [1824])
	if ( ((int_64)$7 < (int_64)1) ){ goto $label$36 }
	$24 = *($29 + [220])
	if ( ($24 == 0) ){ goto $label$36 }
	if ( ((int_64)*($24 + [8]) < (int_64)0) ){ goto $label$36 }
	$24 = (($29 + [232]) + [16])
	$26 = *($24)
	if ( ((int_64)$26 != (int_64)-1) ){ goto $label$37 }
	$26 = (int_64)0
	$10 = CALL db_lowerbound_i64(*($29 + [232]), *($12), (int_64)4983115765735076448, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$38 }
	CALL $213(($29 + [232]), $10)
	*($29 + [92]) = [0]
	*($29 + [88]) = ($29 + [232])
	$26 = *(*(CALL $214(($29 + [88])) + [4]))
	$26 = ( (int_64)-2 ? ((int_64)$26 + (int_64)1) : ((uint_64)$26 > (uint_64)(int_64)-3) )
	
.LABEL $label$38
	*($24) = $26
	
.LABEL $label$37
	CALL eosio_assert((uint_64)($26 <= (int_64)-2), [1488])
	$8 = *($24)
	$24 = *($29 + [220])
	*((($29 + [152]) + [8])) = *($24)
	*(($11 + [12])) = *(($24 + [20]))
	*(($11 + [8])) = *(($24 + [16]))
	*($13) = *(($24 + [12]))
	*($11) = *($24 + [8])
	*($29 + [152]) = $23
	*($14) = $7
	*((($29 + [152]) + [40])) = $3
	$26 = *($0)
	*($29 + [92]) = ($29 + [152])
	*($29 + [88]) = ($29 + [232])
	CALL $215(($29 + [64]), ($29 + [232]), $26, ($29 + [88]))
	$24 = *($29 + [204])
	if ( ((int_32)$24 == (int_32)*((($29 + [200]) + [8]))) ){ goto $label$40 }
	*($29 + [204]) = (CALL memcpy($24, ($29 + [152]), [48]) + [48])
	goto $label$39 
	
.LABEL $label$40
	CALL $216(($29 + [200]), ($29 + [152]))
	
.LABEL $label$39
	$26 = CALL current_time()
	*((($29 + [88]) + [12])) = [0]
	*((($29 + [88]) + [16])) = [0]
	*(($15 = (($29 + [88]) + [20]))) = [0]
	*((($29 + [88]) + [24])) = [0]
	*($16) = [0]
	*((($29 + [88]) + [32])) = [0]
	*($29 + [88]) = ((CASTING uint_32)(uint_64 ((uint_64)$26 / (uint_64)(int_64)1000000)) + [60])
	*($6) = [0]
	*((($29 + [88]) + [40])) = [0]
	*($17) = [0]
	*($18) = [0]
	*($19) = [0]
	*($20) = [0]
	$9 = *($0)
	$26 = (int_64)0
	$25 = (int_64)59
	$24 = [2992]
	$28 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$26 > (uint_64)(int_64)5) ){ goto $label$46 }
	$10 = *($24)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$10 = ($10 + [165])
	goto $label$44 
	
.LABEL $label$46
	$27 = (int_64)0
	if ( ((uint_64)$26 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$27 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$27 = ((int_64)((int_64)$27 & (int_64)31) << (int_64)((int_64)$25 & (int_64)4294967295))
	
.LABEL $label$42
	$24 = ($24 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$28 = ((int_64)$27 | (int_64)$28)
	$25 = ((int_64)$25 + (int_64)-5)
	if ( ((int_64)$25 != (int_64)-6) ){ goto $label$41 }
	*((($29 + [64]) + [8])) = $28
	*($29 + [64]) = $9
	$26 = (int_64)0
	$25 = (int_64)59
	$24 = [3312]
	$28 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$26 > (uint_64)(int_64)10) ){ goto $label$52 }
	$10 = *($24)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$10 = ($10 + [165])
	goto $label$50 
	
.LABEL $label$52
	$27 = (int_64)0
	if ( ((int_64)$26 == (int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$27 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$27 = ((int_64)((int_64)$27 & (int_64)31) << (int_64)((int_64)$25 & (int_64)4294967295))
	
.LABEL $label$48
	$24 = ($24 + [1])
	$25 = ((int_64)$25 + (int_64)-5)
	$28 = ((int_64)$27 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)1)
	if ( ((int_64)$26 != (int_64)13) ){ goto $label$47 }
	goto $label$35 
	
.LABEL $label$36
	CALL eosio_assert($4, [1856])
	$26 = ((int_64)$22 + (int_64)$1)
	CALL eosio_assert(((int_64)$26 > (int_64)-4611686018427387904), [1904])
	CALL eosio_assert(((int_64)$26 < (int_64)4611686018427387904), [1936])
	if ( ((int_64)$26 < (int_64)1) ){ goto $label$53 }
	$27 = *(($21 + [24]))
	$25 = *(($21 + [16]))
	*($29 + [32]) = $2
	*(($29 + [16])) = $2
	*($29 + [24]) = $26
	*($29 + [8]) = $26
	CALL $218($0, $25, $27, ($29 + [8]))
	
.LABEL $label$53
	*($29 + [88]) = ($29 + [200])
	CALL eosio_assert(((int_32)$21 != (int_32)[0]), [1120])
	CALL $219(($29 + [328]), $21, (int_64)0, ($29 + [88]))
	$24 = *($29 + [200])
	if ( ($24 == 0) ){ goto $label$54 }
	*($29 + [204]) = $24
	CALL $418($24)
	
.LABEL $label$54
	$0 = *($29 + [256])
	if ( ($0 == 0) ){ goto $label$55 }
	$11 = ($29 + [260])
	$24 = *($11)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$57 }
	
.LOOP $label$58:
	$24 = ($24 + [-24])
	$10 = *($24)
	*($24) = [0]
	if ( ($10 == 0) ){ goto $label$59 }
	CALL $418($10)
	
.LABEL $label$59
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$58 }
	$24 = *(($29 + [256]))
	goto $label$56 
	
.LABEL $label$57
	$24 = $0
	
.LABEL $label$56
	*($11) = $0
	CALL $418($24)
	
.LABEL $label$55
	$0 = *($29 + [296])
	if ( ($0 == 0) ){ goto $label$3 }
	$11 = ($29 + [300])
	$24 = *($11)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$61 }
	
.LOOP $label$62:
	$24 = ($24 + [-24])
	$10 = *($24)
	*($24) = [0]
	if ( ($10 == 0) ){ goto $label$63 }
	CALL $418($10)
	
.LABEL $label$63
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$62 }
	$24 = *(($29 + [296]))
	goto $label$60 
	
.LABEL $label$61
	$24 = $0
	
.LABEL $label$60
	*($11) = $0
	CALL $418($24)
	$11 = *($29 + [352])
	if ( $11 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$35
	*($29 + [56]) = $28
	*((($29 + [40]) + [8])) = $8
	*($29 + [40]) = *($21)
	CALL $173($6, ($29 + [64]), $0, ($29 + [56]), ($29 + [40]))
	$26 = *($0)
	$27 = *($29 + [152])
	*($15) = [0]
	*($29 + [72]) = (int_64)0
	*($29 + [64]) = ((int_64)$27 | (int_64)((int_64)*($21) << (int_64)32))
	CALL $174(($29 + [40]), ($29 + [88]))
	$24 = *($29 + [40])
	CALL send_deferred(($29 + [64]), $26, $24, (*($29 + [44]) - $24), [1])
	$24 = *($29 + [40])
	if ( ($24 == 0) ){ goto $label$64 }
	*($29 + [44]) = $24
	CALL $418($24)
	
.LABEL $label$64
	CALL prints([3024])
	CALL $217(($29 + [216]))
	CALL eosio_assert([1], [2784])
	$22 = (int_64)
	CALL eosio_assert(((int_64)$22($22 - $7)) > (int_64)-4611686018427387904), [2832])
	CALL eosio_assert(((int_64)$22 < (int_64)4611686018427387904), [2864])
	$23 = ($23 + [1])
	CALL $176(($29 + [88]))
	goto $label$30 
	
.LABEL $label$9
	$23 = [0]
	$24 = CALL db_find_i64(*($29 + [328]), *(($29 + [336])), (int_64)4983115765730246656, $26)
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$8 }
	$23 = CALL $211(($29 + [328]), $24)
	CALL eosio_assert(((int_32)*($23 + [72]) == (int_32)($29 + [328])), [1056])
	
.LABEL $label$8
	*($29 + [104]) = (int_64)-1
	*($29 + [112]) = [0]
	$26 = *($0)
	*($29 + [88]) = $26
	*($29 + [96]) = *($23)
	*(($29 + [116])) = [0]
	*((($29 + [88]) + [32])) = [0]
	*($29 + [124]) = [0]
	*((($29 + [152]) + [32])) = [0]
	$27 = *($23)
	*($29 + [160]) = $27
	*($29 + [152]) = $26
	*($29 + [168]) = (int_64)-1
	*($29 + [176]) = (int_64)0
	$24 = CALL db_lowerbound_i64($26, $27, (int_64)4983115765735076448, (int_64)0)
	if ( ((int_32)$24 <= (int_32)[-1]) ){ goto $label$68 }
	CALL $213(($29 + [152]), $24)
	CALL prints([3136])
	$0 = *($29 + [176])
	if ( ($0 == 0) ){ goto $label$65 }
	$11 = ($29 + [180])
	$24 = *($11)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$67 }
	
.LOOP $label$69:
	$24 = ($24 + [-24])
	$10 = *($24)
	*($24) = [0]
	if ( ($10 == 0) ){ goto $label$70 }
	CALL $418($10)
	
.LABEL $label$70
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$69 }
	$24 = *(($29 + [176]))
	goto $label$66 
	
.LABEL $label$68
	CALL prints([2352])
	$10 = ($29 + [96])
	$0 = [0]
	
.LOOP $label$73:
	$24 = CALL db_lowerbound_i64(*($29 + [88]), *($10), (int_64)4983115765739493376, (int_64)0)
	if ( ((int_32)$24 <= (int_32)[-1]) ){ goto $label$72 }
	CALL $222(($29 + [88]), $24)
	$24 = [0]
	$11 = CALL db_lowerbound_i64(*($29 + [88]), *($10), (int_64)4983115765739493376, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$74 }
	$24 = CALL $222(($29 + [88]), $11)
	
.LABEL $label$74
	$11 = ((int_32)$24 != (int_32)[0])
	CALL eosio_assert($11, [2400])
	CALL eosio_assert($11, [1680])
	$11 = CALL db_next_i64(*($24 + [28]), ($29 + [272]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$75 }
	CALL $222(($29 + [88]), $11)
	
.LABEL $label$75
	CALL $223(($29 + [88]), $24)
	CALL prints([2352])
	$0 = ($0 + [1])
	if ( ((uint_32)$0 <= (uint_32)[29]) ){ goto $label$73 }
	CALL prints([2368])
	$0 = *($29 + [176])
	if ( $0 ){ goto $label$71 }
	goto $label$4 
	
.LABEL $label$72
	CALL prints([2384])
	CALL eosio_assert(((int_32)$23 != (int_32)[0]), [1120])
	CALL $221(($29 + [328]), $23, (int_64)0, ($29 + [272]))
	$0 = *($29 + [176])
	if ( ($0 == 0) ){ goto $label$4 }
	
.LABEL $label$71
	$11 = ($29 + [180])
	$24 = *($11)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$6 }
	
.LOOP $label$76:
	$24 = ($24 + [-24])
	$10 = *($24)
	*($24) = [0]
	if ( ($10 == 0) ){ goto $label$77 }
	CALL $418($10)
	
.LABEL $label$77
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$76 }
	$24 = *(($29 + [176]))
	goto $label$5 
	
.LABEL $label$67
	$24 = $0
	
.LABEL $label$66
	*($11) = $0
	CALL $418($24)
	
.LABEL $label$65
	$0 = *($29 + [112])
	if ( ($0 == 0) ){ goto $label$7 }
	$11 = ($29 + [116])
	$24 = *($11)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$79 }
	
.LOOP $label$80:
	$24 = ($24 + [-24])
	$10 = *($24)
	*($24) = [0]
	if ( ($10 == 0) ){ goto $label$81 }
	CALL $418($10)
	
.LABEL $label$81
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$80 }
	$24 = *(($29 + [112]))
	goto $label$78 
	
.LABEL $label$79
	$24 = $0
	
.LABEL $label$78
	*($11) = $0
	CALL $418($24)
	
.LABEL $label$7
	CALL eosio_assert([0], [2448])
	goto $label$3 
	
.LABEL $label$6
	$24 = $0
	
.LABEL $label$5
	*($11) = $0
	CALL $418($24)
	
.LABEL $label$4
	$0 = *($29 + [112])
	if ( ($0 == 0) ){ goto $label$3 }
	$11 = ($29 + [116])
	$24 = *($11)
	if ( ((int_32)$24 == (int_32)$0) ){ goto $label$83 }
	
.LOOP $label$84:
	$24 = ($24 + [-24])
	$10 = *($24)
	*($24) = [0]
	if ( ($10 == 0) ){ goto $label$85 }
	CALL $418($10)
	
.LABEL $label$85
	if ( ((int_32)$0 != (int_32)$24) ){ goto $label$84 }
	$24 = *(($29 + [112]))
	goto $label$82 
	
.LABEL $label$83
	$24 = $0
	
.LABEL $label$82
	*($11) = $0
	CALL $418($24)
	$11 = *($29 + [352])
	if ( $11 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$11 = *($29 + [352])
	if ( ($11 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$23 = ($29 + [356])
	$24 = *($23)
	if ( ((int_32)$24 == (int_32)$11) ){ goto $label$87 }
	
.LOOP $label$88:
	$24 = ($24 + [-24])
	$10 = *($24)
	*($24) = [0]
	if ( ($10 == 0) ){ goto $label$89 }
	$0 = *($10 + [60])
	if ( ($0 == 0) ){ goto $label$90 }
	*(($10 + [64])) = $0
	CALL $418($0)
	
.LABEL $label$90
	CALL $418($10)
	
.LABEL $label$89
	if ( ((int_32)$11 != (int_32)$24) ){ goto $label$88 }
	$24 = *(($29 + [352]))
	goto $label$86 
	
.LABEL $label$87
	$24 = $11
	
.LABEL $label$86
	*($23) = $11
	CALL $418($24)
	
.LABEL $label$1
	*([0] + [4]) = ($29 + [368])
}

void .FUNC $57 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [208])
	*([0] + [4]) = $12
	CALL require_auth(*($0))
	$6 = [0]
	*((($12 + [152]) + [32])) = [0]
	*($12 + [168]) = (int_64)-1
	*($12 + [176]) = (int_64)0
	$11 = *($0)
	*($12 + [152]) = $11
	*($12 + [160]) = $11
	*($12 + [188]) = [0]
	*((($12 + [112]) + [32])) = [0]
	*($12 + [120]) = $1
	*($12 + [112]) = $11
	*($12 + [128]) = (int_64)-1
	*($12 + [136]) = (int_64)0
	$8 = CALL db_find_i64($11, $11, (int_64)4983115765747023872, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $167(($12 + [152]), $8)
	CALL eosio_assert(((int_32)*($7 + [104]) == (int_32)($12 + [152])), [1056])
	$6 = *(($12 + [136]))
	$5 = *(($12 + [140]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$7 = [0]
	if ( ((int_32)[0] == (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($5 + [-24])
	$3 = ([0] - $6)
	
.LOOP $label$4:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$5 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	$5 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)($12 + [112])), [1056])
	goto $label$5 
	
.LABEL $label$6
	$5 = [0]
	$8 = CALL db_find_i64(*($12 + [112]), *(($12 + [120])), (int_64)4983115765751853664, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $170(($12 + [112]), $8)
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)($12 + [112])), [1056])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [3152])
	$3 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($3, [3184])
	if ( ((int_64)*(($5 + [48])) < (int_64)1) ){ goto $label$7 }
	CALL _ZNSt3__19to_stringEy(($12 + [40]), $1)
	$8 = CALL $427(($12 + [40]), [0], [3200])
	$4 = ($8 + [8])
	*(($12 + [8])) = *($4)
	*($12) = *($8)
	*($8) = [0]
	*(($8 + [4])) = [0]
	*($4) = [0]
	$8 = CALL $424($12, [3248])
	$4 = ($8 + [8])
	*((($12 + [56]) + [8])) = *($4)
	*($12 + [56]) = *($8)
	*($8) = [0]
	*(($8 + [4])) = [0]
	*($4) = [0]
	CALL _ZNSt3__19to_stringEm(($12 + [192]), *($5 + [16]))
	$8 = *($12 + [192])
	$4 = ($8 & [1])
	$8 = CALL $423(($12 + [56]), ( *($12 + [200]) ? (($12 + [192]) | [1]) : $4 ), ( *($12 + [196]) ? uint_32($8 >> [1]) : $4 ))
	$4 = ($8 + [8])
	*((($12 + [96]) + [8])) = *($4)
	*($12 + [96]) = *($8)
	*($8) = [0]
	*(($8 + [4])) = [0]
	*($4) = [0]
	if ( ((*($12 + [192]) & [1]) == 0) ){ goto $label$8 }
	CALL $418(*((($12 + [192]) + [8])))
	
.LABEL $label$8
	if ( ((*($12 + [56]) & [1]) == 0) ){ goto $label$9 }
	CALL $418(*($12 + [64]))
	
.LABEL $label$9
	if ( ((*($12) & [1]) == 0) ){ goto $label$10 }
	CALL $418(*($12 + [8]))
	
.LABEL $label$10
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$11 }
	CALL $418(*($12 + [48]))
	
.LABEL $label$11
	$2 = (int_64)0
	$11 = (int_64)59
	$8 = [3264]
	$9 = (int_64)0
	
.LOOP $label$12:
	$1 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$13 }
	$4 = *($8)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$4 = ($4 + [165])
	goto $label$14 
	
.LABEL $label$15
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$1 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$13
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$9 = ((int_64)$1 | (int_64)$9)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$12 }
	*($12 + [40]) = $9
	*($12 + [48]) = *($0)
	$2 = (int_64)0
	$11 = (int_64)59
	$8 = [3264]
	$9 = (int_64)0
	
.LOOP $label$16:
	$1 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$17 }
	$4 = *($8)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$4 = ($4 + [165])
	goto $label$18 
	
.LABEL $label$19
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$1 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$17
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$9 = ((int_64)$1 | (int_64)$9)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$16 }
	$2 = (int_64)0
	$1 = (int_64)59
	$8 = [3280]
	$10 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$2 > (uint_64)(int_64)4) ){ goto $label$25 }
	$4 = *($8)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$4 = ($4 + [165])
	goto $label$23 
	
.LABEL $label$25
	$11 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$21
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$20 }
	*(($12 + [20])) = *(($5 + [60]))
	*(($12 + [16])) = *(($5 + [56]))
	*(($12 + [12])) = *(($5 + [52]))
	*($12) = *(($5 + [24]))
	*($12 + [8]) = *(($5 + [48]))
	CALL $437(($12 + [24]), ($12 + [96]))
	$8 = CALL $208(($12 + [56]), ($12 + [40]), $9, $10, $12)
	CALL $109(($12 + [192]), $8)
	$4 = *($12 + [192])
	CALL send_inline($4, (*($12 + [196]) - $4))
	$4 = *($12 + [192])
	if ( ($4 == 0) ){ goto $label$26 }
	*($12 + [196]) = $4
	CALL $418($4)
	
.LABEL $label$26
	$4 = *($8 + [28])
	if ( ($4 == 0) ){ goto $label$27 }
	*(($8 + [32])) = $4
	CALL $418($4)
	
.LABEL $label$27
	$4 = *($8 + [16])
	if ( ($4 == 0) ){ goto $label$28 }
	*(($8 + [20])) = $4
	CALL $418($4)
	
.LABEL $label$28
	if ( ((*($12 + [24]) & [1]) == 0) ){ goto $label$29 }
	CALL $418(*(($12 + [32])))
	
.LABEL $label$29
	if ( ((*($12 + [96]) & [1]) == 0) ){ goto $label$7 }
	CALL $418(*($12 + [104]))
	
.LABEL $label$7
	CALL eosio_assert($3, [2400])
	CALL eosio_assert($3, [1680])
	$8 = CALL db_next_i64(*($5 + [68]), ($12 + [56]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$30 }
	CALL $170(($12 + [112]), $8)
	
.LABEL $label$30
	CALL $209(($12 + [112]), $5)
	$5 = *($12 + [136])
	if ( ($5 == 0) ){ goto $label$31 }
	$3 = ($12 + [140])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$33 }
	
.LOOP $label$34:
	$8 = ($8 + [-24])
	$4 = *($8)
	*($8) = [0]
	if ( ($4 == 0) ){ goto $label$35 }
	CALL $418($4)
	
.LABEL $label$35
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$34 }
	$8 = *(($12 + [136]))
	goto $label$32 
	
.LABEL $label$33
	$8 = $5
	
.LABEL $label$32
	*($3) = $5
	CALL $418($8)
	
.LABEL $label$31
	$3 = *($12 + [176])
	if ( ($3 == 0) ){ goto $label$36 }
	$0 = ($12 + [180])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$38 }
	
.LOOP $label$39:
	$8 = ($8 + [-24])
	$4 = *($8)
	*($8) = [0]
	if ( ($4 == 0) ){ goto $label$40 }
	$5 = *($4 + [92])
	if ( ($5 == 0) ){ goto $label$41 }
	*(($4 + [96])) = $5
	CALL $418($5)
	
.LABEL $label$41
	CALL $418($4)
	
.LABEL $label$40
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$39 }
	$8 = *(($12 + [176]))
	goto $label$37 
	
.LABEL $label$38
	$8 = $3
	
.LABEL $label$37
	*($0) = $3
	CALL $418($8)
	
.LABEL $label$36
	*([0] + [4]) = ($12 + [208])
}

int_32 .FUNC vfprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [288])
	*([0] + [4]) = $7
	*($7 + [284]) = $2
	$6 = [0]
	CALL memset(($7 + [240]), [0], [40])
	*($7 + [280]) = *($7 + [284])
	$2 = [-1]
	if ( ((int_32)CALL $454([0], $1, ($7 + [280]), ($7 + [80]), ($7 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL __lockfile($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) > (int_32)[0]) ){ goto $label$3 }
	*($0) = ($2 & [-33])
	
.LABEL $label$3
	$3 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	$2 = CALL $454($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	goto $label$4 
	
.LABEL $label$5
	*(($5 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($7 + [80])
	*($0 + [28]) = $7
	*($0 + [20]) = $7
	$4 = *($0 + [44])
	*($0 + [44]) = $7
	$2 = CALL $454($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	if ( ($4 == 0) ){ goto $label$4 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $4
	*($5) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$4 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $4 )
	
.LABEL $label$4
	$1 = *($0)
	*($0) = ($1 | $3)
	$1 = ($1 & [32])
	if ( ($6 == 0) ){ goto $label$6 }
	CALL __unlockfile($0)
	
.LABEL $label$6
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [288])
	return $2
}

int_32 .FUNC __stdio_write (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = *($0 + [28])
	CALL prints_l($3, (*($0 + [20]) - $3))
	CALL prints_l($1, $2)
	return ((*($0 + [20]) + $2) - *($0 + [28]))
}

int_64 .FUNC __stdio_seek (int_32 $0, int_64 $1, int_32 $2)
{
	return (int_64)-1
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$5 = *($4 + [16])
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$6 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)5093418677667738272, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $149($4, $6)
	*($9 + [4]) = [0]
	*($9) = $4
	$5 = *(*(CALL $153($9) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [1488])
	*($1) = *(($4 + [16]))
	$5 = *(*($3 + [12]) + [8])
	*(($6 = ($1 + [24]))) = *(*($3 + [8]))
	*($1 + [16]) = $5
	*($1 + [32]) = *(*($3 + [16]))
	$3 = $10
	$4 = ($3 + [-32])
	*([0] + [4]) = $4
	CALL eosio_assert([1], [1232])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [1232])
	$10 = ($1 + [16])
	CALL memcpy(($3 + [-24]), $10, [16])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($3 + [-8]), ($1 + [32]), [8])
	$5 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)5093418677667738272, *(*($0 + [8])), $5, $4, [32])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$5 = *(($2 + [8]))
	$7 = *(*(($0 + [8])))
	$8 = *($1)
	*($9 + [8]) = *($6)
	*($9) = *($10)
	*($1 + [56]) = CALL db_idx128_store($5, (int_64)5093418677667738272, $7, $8, $9)
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $153 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [52]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1616])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)5093418677667738272)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1552])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1552])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $149(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $150 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($5 + [40]) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($1 + [32]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [1360])
	CALL eosio_assert([1], [1232])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [1232])
	$3 = ($1 + [16])
	CALL memcpy(($5 | [8]), $3, [16])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($5 + [24]), ($1 + [32]), [8])
	CALL db_update_i64(*($1 + [52]), $2, $5, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($5 + [64]) = *($3)
	*($5 + [72]) = *(($3 + [8]))
	if ( (CALL memcmp(($5 + [32]), ($5 + [64]), [16]) == 0) ){ goto $label$2 }
	$3 = ($1 + [56])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)5093418677667738272, ($5 + [48]), $4)
	*($3) = $1
	
.LABEL $label$3
	CALL db_idx128_update($1, $2, ($5 + [64]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [80])
}

void .FUNC $151 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $156 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [176])
	*([0] + [4]) = $6
	*($6 + [160]) = $2
	CALL eosio_assert(((int_32)*($1 + [80]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*((($6 + [128]) + [24])) = *(($1 + [24]))
	*($6 + [144]) = *($1 + [16])
	*($6 + [128]) = *($1 + [8])
	*(($1 + [56])) = (int_64)0
	*($1 + [48]) = (int_64)0
	$5 = *($1)
	*($6 + [120]) = $5
	*($1 + [68]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [1360])
	*($6 + [112]) = ($6 + [72])
	*($6 + [108]) = $6
	*($6 + [104]) = $6
	CALL $157(($6 + [104]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $6, [72])
	$4 = ($0 + [36])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($6 + [84]) = $1
	*($6 + [80]) = $0
	*($6 + [92]) = $1
	*($6 + [88]) = ($6 + [128])
	*($6 + [96]) = ($6 + [120])
	*($6 + [100]) = ($6 + [160])
	*($6 + [168]) = ($6 + [80])
	CALL $158(($6 + [168]), $4, ($4 + [1]))
	*([0] + [4]) = ($6 + [176])
}

int_32 .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[15]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[15]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[15]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [68]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_64 .FUNC $154 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [128])
	*([0] + [4]) = $8
	*($8 + [120]) = $1
	*($8 + [104]) = $3
	*($8 + [96]) = $2
	*(($8 + [88])) = [0]
	*($8 + [64]) = $4
	*($8 + [72]) = (int_64)-1
	*($8 + [80]) = (int_64)0
	*($8 + [56]) = *($0)
	*($8 + [92]) = [0]
	*($8 + [48]) = ($8 + [56])
	CALL $161(($8 + [40]), ($8 + [48]), ($8 + [96]))
	$7 = *($8 + [44])
	if ( ($7 == 0) ){ goto $label$4 }
	
.LOOP $label$5:
	if ( ((int_64)(((int_64)((int_64)*($7 + [16]) ^ (int_64)*($8 + [96])) | (int_64)((int_64)*(($7 + [24])) ^ (int_64)*($8 + [104]))) == 0) == 0) ){ goto $label$4 }
	if ( ((int_64)*($7 + [8]) == (int_64)*($8 + [120])) ){ goto $label$3 }
	CALL $164(($8 + [40]))
	$7 = *($8 + [44])
	if ( $7 ){ goto $label$5 }
	
.LABEL $label$4
	CALL prints([2704])
	$7 = ($8 + [72])
	$4 = *($7)
	if ( ((int_64)$4 != (int_64)-1) ){ goto $label$6 }
	$4 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($8 + [56]), *(($8 + [64])), (int_64)-5290167705893076992, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	CALL $155(($8 + [56]), $5)
	*($8 + [20]) = [0]
	*($8 + [16]) = ($8 + [56])
	$4 = *(*(CALL $162(($8 + [16])) + [4]))
	$4 = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*(($8 + [72])) = $4
	
.LABEL $label$6
	CALL eosio_assert((uint_64)($4 <= (int_64)-2), [1488])
	*($8 + [32]) = *($7)
	$4 = *($0)
	*($8 + [20]) = ($8 + [120])
	*($8 + [16]) = ($8 + [32])
	*($8 + [24]) = ($8 + [96])
	CALL $163(($8 + [8]), ($8 + [56]), $4, ($8 + [16]))
	$4 = *($8 + [32])
	$5 = *($8 + [80])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($7)
	$5 = *($8 + [80])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($8 + [84])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$7 = ($7 + [-24])
	$0 = *($7)
	*($7) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $418($0)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$10 }
	$7 = *(($8 + [80]))
	goto $label$8 
	
.LABEL $label$9
	$7 = $5
	
.LABEL $label$8
	*($6) = $5
	CALL $418($7)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [128])
	return $4
}

int_32 .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $417([96])) + [80]) = $0
	CALL $159(($8 + [32]), $6)
	*($6 + [88]) = [-1]
	*($6 + [84]) = $1
	*($6 + [92]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [84])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $160(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $404 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$2 = *($0)
	$5 = ($2 + [224])
	$7 = *($5)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$3 = ($2 + [208])
	$4 = CALL db_lowerbound_i64(*($3), *(($2 + [216])), (int_64)-6215726815275210864, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $359($3, $4)
	*($8 + [28]) = [0]
	*($8 + [24]) = $3
	$7 = *(*(CALL $405(($8 + [24])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($2 + [224])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [1488])
	*($1) = *($5)
	$7 = *(*($0 + [8]) + [8])
	*(($1 + [24])) = *(*(*($0 + [4]) + [4]) + [8])
	*($1 + [16]) = $7
	$0 = *($0 + [8])
	$7 = *($0)
	$6 = *($0 + [8])
	CALL eosio_assert((uint_64)($6 <= (int_64)11), [4784])
	CALL __fixunsdfti(($8 + [8]), ((float_64)CALL $fimport$8($7, (int_64)$7 >> (int_64)63)) * (float_64)CALL $472((float_64)10, (CASTING float_64)(uint_64 (int_64))((int_64)10 - $6)))))
	*(($1 + [40])) = *(($8 + [16]))
	*($1 + [32]) = *($8 + [8])
	*([0] + [4]) = ($8 + [32])
}

int_32 .FUNC $405 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [52]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1616])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-6215726815275210864)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1552])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1552])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $359(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $158 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [16]) = *(*($3 + [4]) + [8])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [16]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [88])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)-5290167705893076992, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [88]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [16]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	$0 = *($3 + [4])
	*($6 + [24]) = *(($0 + [24]))
	*($6 + [16]) = *($0 + [16])
	if ( (CALL memcmp((*($3 + [8]) + [16]), ($6 + [16]), [16]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [92]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx128_find_primary(*($5), *($5 + [8]), (int_64)-5290167705893076991, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [92])) = $0
	
.LABEL $label$4
	CALL db_idx128_update($0, *(*($3 + [20])), ($6 + [16]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [48]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1024])
	CALL memcpy(($1 + [64]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1024])
	CALL memcpy(($1 + [68]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $400 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$2 = *($0)
	$5 = ($2 + [304])
	$7 = *($5)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$3 = ($2 + [288])
	$4 = CALL db_lowerbound_i64(*($3), *(($2 + [296])), (int_64)-6215726811582152704, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $376($3, $4)
	*($8 + [28]) = [0]
	*($8 + [24]) = $3
	$7 = *(*(CALL $401(($8 + [24])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($2 + [304])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [1488])
	*($1) = *($5)
	$7 = *(*($0 + [8]) + [8])
	*(($1 + [24])) = *(*(*($0 + [4]) + [4]) + [8])
	*($1 + [16]) = $7
	$0 = *($0 + [8])
	$7 = *($0)
	$6 = *($0 + [8])
	CALL eosio_assert((uint_64)($6 <= (int_64)11), [4784])
	CALL __fixunsdfti(($8 + [8]), ((float_64)CALL $fimport$8($7, (int_64)$7 >> (int_64)63)) * (float_64)CALL $472((float_64)10, (CASTING float_64)(uint_64 (int_64))((int_64)10 - $6)))))
	*(($1 + [40])) = *(($8 + [16]))
	*($1 + [32]) = *($8 + [8])
	*($1 + [48]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*([0] + [4]) = ($8 + [32])
}

int_32 .FUNC $401 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [68]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1616])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-6215726811582152704)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1552])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1552])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $376(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $402 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [48])
	*([0] + [4]) = $4
	$2 = *($0)
	CALL $404(*($0 + [4]), $1)
	CALL eosio_assert([1], [1232])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($4 | [8]), ($1 + [16]), [16])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($4 + [24]), ($1 + [32]), [16])
	$3 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-6215726815275210864, *(*($0 + [8])), $3, $4, [40])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [48])
}

void .FUNC $403 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $273 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $275($0, ($1 + [60]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1024])
	CALL memcpy(($1 + [56]), *($0 + [4]), [4])
	return *($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $421 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $417($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $418($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC __fwritex (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($2 + [16])
	if ( $6 ){ goto $label$2 }
	$6 = [0]
	if ( CALL __towrite($2) ){ goto $label$1 }
	$6 = *(($2 + [16]))
	
.LABEL $label$2
	$7 = *($2 + [20])
	if ( ((uint_32)($6 - $7) >= (uint_32)$1) ){ goto $label$3 }
	return CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	
.LABEL $label$3
	$8 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$4 }
	$3 = ($0 + $1)
	$8 = [0]
	$6 = [0]
	
.LOOP $label$5:
	if ( (($1 + $6) == 0) ){ goto $label$4 }
	$5 = ($3 + $6)
	$4 = ($6 + [-1])
	$6 = $4
	if ( ((int_32)*(($5 + [-1])) != (int_32)[10]) ){ goto $label$5 }
	$8 = (($1 + $4) + [1])
	$6 = CALL int_32 $2((int_32 $0), (int_32 $8), (int_32 *($2 + [36])))
	if ( ($6 <= $8) ){ goto $label$1 }
	$1 = ((int_32)$4 ^ (int_32)[-1])
	$0 = (($3 + $4) + [1])
	$7 = *(($2 + [20]))
	
.LABEL $label$4
	CALL memcpy($7, $0, $1)
	*(($6 = ($2 + [20]))) = (*($6) + $1)
	return ($8 + $1)
	
.LABEL $label$1
	return $6
}

void .FUNC $272 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1024])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($0, *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $426 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $417($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $418($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_64 $2
	float_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $437($5, ($1 + [16]))
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $437(($5 + [16]), $5)
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($5 + [16])), (int_32 $1))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $418(*($5 + [24]))
	
.LABEL $label$2
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	CALL $418(*($5 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [32])
}

int_32 .FUNC $427 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $428($0, $1, $2, CALL $481($2))
}

int_32 .FUNC $424 (int_32 $0, int_32 $1)
{
	return CALL $423($0, $1, CALL $481($1))
}

void .FUNC $425 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = *($0)
	$2 = ($4 & [1])
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ((*($0) & [-2]) + [-1])
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [10]
	$4 = uint_32($4 >> [1])
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $426($0, $3, [1], $3, $3, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($4 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($4 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $4)) + [1]) = [0]
	*($0) = $1
}

void .FUNC $344 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [16])
	$8 = $7
	*([0] + [4]) = $7
	$5 = *($0 + [4])
	*($1) = *(*($5))
	$2 = *($0)
	$3 = ($1 + [8])
	CALL $420($3, *($5 + [4]))
	$5 = *($1 + [8])
	$4 = ( *(($1 + [12])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($4 + [8])
	$6 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$7 = CALL malloc($5)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($7 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$2
	*($8) = $7
	*($8 + [8]) = ($7 + $5)
	CALL eosio_assert(((int_32)$5 > (int_32)[7]), [1232])
	CALL memcpy($7, $1, [8])
	*($8 + [4]) = ($7 + [8])
	CALL $113($8, $3)
	$6 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)7235159551873908736, *(*($0 + [8])), $6, $7, $5)
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL free($7)
	
.LABEL $label$4
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $228 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1232])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $0, [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((int_32)(*($2 + [8]) - $1) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $229 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = ((int_32)$3 / (int_32)[48])
	if ( ((uint_32)$4 <= (uint_32)((int_32)($8 - $5) / (int_32)[48])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $418($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[89478486]) ){ goto $label$1 }
	$5 = [89478485]
	$2 = ((int_32)$8 / (int_32)[48])
	if ( ((uint_32)$2 > (uint_32)[44739241]) ){ goto $label$6 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	
.LABEL $label$6
	$4 = ((int_32)$5 * (int_32)[48])
	$5 = CALL $417($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + ((int_32)((uint_32)$3 / (uint_32)[48]) * (int_32)[48]))
	return 
	
.LABEL $label$4
	$3 = ((int_32)(*($0 + [4]) - $5) / (int_32)[48])
	$6 = ( ($1 + ((int_32)$3 * (int_32)[48])) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$8 = ($6 - $1)
	$7 = ((int_32)$8 / (int_32)[48])
	if ( ($8 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $8)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $6)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $6, $1)
	*($0) = (*($0) + ((int_32)((uint_32)$1 / (uint_32)[48]) * (int_32)[48]))
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ((int_32)$7 * (int_32)[48]))
	return (unreachable)
	
.LABEL $label$1
	CALL $436($0)
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$5 = *($4 + [16])
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$6 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)5445032172408799232, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $85($4, $6)
	*($9 + [4]) = [0]
	*($9) = $4
	$5 = *(*(CALL $90($9) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [1488])
	*($1) = *(($4 + [16]))
	$4 = *($3 + [4])
	$5 = *($4)
	*(($6 = ($1 + [24]))) = *(($4 + [8]))
	*($1 + [16]) = $5
	*($1 + [32]) = *(*($3 + [8]))
	$4 = $10
	$10 = ($4 + [-32])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [1232])
	CALL memcpy($10, $1, [8])
	CALL eosio_assert([1], [1232])
	$3 = ($1 + [16])
	CALL memcpy(($4 + [-24]), $3, [16])
	CALL eosio_assert([1], [1232])
	$4 = ($1 + [32])
	CALL memcpy(($4 + [-8]), $4, [4])
	$5 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)5445032172408799232, *(*($0 + [8])), $5, $10, [28])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = ($2 + [8])
	$5 = *($2)
	$0 = *(($0 + [8]))
	$7 = *($0)
	$8 = *($1)
	*($9 + [8]) = *($6)
	*($9) = *($3)
	*($1 + [56]) = CALL db_idx128_store($5, (int_64)5445032172408799232, $7, $8, $9)
	$5 = *($0)
	$7 = *($2)
	$8 = *($1)
	*($9) = *($4)
	*(($1 + [60])) = CALL db_idx64_store($7, (int_64)5445032172408799233, $5, $8, $9)
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $224 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $225 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $227($0, ($1 + [60]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[15]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [4])
	return *($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $226 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [48])
	if ( (CALL memcmp(*($3 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$5 = *(*($3 + [12]) + [80])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)4983115765730246656, $6, *(*($3 + [16])))
	*(*(($3 + [12])) + [80]) = $5
	
.LABEL $label$2
	CALL db_idx64_update($5, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$3 = *($0)
	$5 = *($3)
	*($6 + [8]) = *(*($3 + [4]) + [56])
	if ( (CALL memcmp((*($3 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($3 + [12]) + [84]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)4983115765730246657, $6, *(*($3 + [16])))
	*((*(($3 + [12])) + [84])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($3 + [20])), ($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $227 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[48]))
	$5 = *($0 + [4])
	$4 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [16]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $5) > (int_32)[0]), [1232])
	CALL memcpy(*($7), ($8 + [16]), [1])
	$5 = (*($7) + [1])
	*($7) = $5
	if ( $3 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$2 = ($8 + [28])
	
.LOOP $label$3:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [16])
	*($2) = ($7 + [32])
	*($8 + [20]) = ($7 + [8])
	CALL $228(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [48])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

int_32 .FUNC $220 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = [0]
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1680])
	$8 = *($0 + [4])
	$6 = *($8 + [80])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$1 }
	$6 = *(*($0))
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)4983115765730246656, ($9 + [8]), *($8))
	*(*(($0 + [4])) + [80]) = $6
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($6, ($9 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$3 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$2), [1056])
	goto $label$5 
	
.LABEL $label$6
	$7 = [0]
	$6 = CALL db_find_i64(*($2), *($2 + [8]), (int_64)4983115765730246656, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $211($2, $6)
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$2), [1056])
	
.LABEL $label$5
	*($7 + [80]) = $1
	
.LABEL $label$2
	*(($0 + [4])) = $7
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $221 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*(($11 = $9) + [64]) = $2
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($11 + [48]) = *($1 + [48])
	*($11 + [56]) = *($1 + [56])
	*($1 + [48]) = (int_64)2
	$10 = *($1)
	*($11 + [40]) = $10
	CALL eosio_assert([1], [1360])
	$5 = *($1 + [60])
	$4 = *(($1 + [64]))
	$6 = ($4 - $5)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[48]))
	$7 = [52]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$2 }
	$7 = ((((int_32)((uint_32)($6 + [-48]) / (uint_32)[48]) * (int_32)[44]) + $7) + [44])
	
.LABEL $label$2
	if ( ($7 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($7)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($11 + [28]) = $9
	*($11 + [24]) = $9
	*($11 + [32]) = ($9 + $7)
	CALL $225(($11 + [24]), $1)
	CALL db_update_i64(*(($1 + [76])), $2, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL free($9)
	$10 = *($11 + [40])
	
.LABEL $label$5
	$7 = ($0 + [36])
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($11 + [4]) = $1
	*($11) = $0
	*($11 + [12]) = $1
	*($11 + [8]) = ($11 + [48])
	*($11 + [16]) = ($11 + [40])
	*($11 + [20]) = ($11 + [64])
	*($11 + [72]) = $11
	CALL $226(($11 + [72]), $7, ($7 + [1]))
	*([0] + [4]) = ($11 + [80])
}

int_32 .FUNC $222 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	$10 = $11
	*([0] + [4]) = $11
	$3 = *($0 + [24])
	$8 = *(($0 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$7 = ($8 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($8 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($8 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$8 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($8)
	CALL db_get_i64($1, $3, $8)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($11 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $8)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $417([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$11 = ($5 + [16])
	$6 = ($5 + [8])
	$9 = (int_64)5462355
	$7 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [1824])
	*($5 + [24]) = $0
	CALL eosio_assert(((uint_32)$8 > (uint_32)[7]), [1024])
	CALL memcpy($5, $3, [8])
	$7 = ($8 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [1024])
	CALL memcpy($6, ($3 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [1024])
	CALL memcpy($11, ($3 + [16]), [8])
	*($5 + [32]) = [-1]
	*($5 + [28]) = $1
	*($10 + [24]) = $5
	$9 = *($5)
	*($10 + [16]) = $9
	$8 = *($5 + [28])
	*($10 + [12]) = $8
	$1 = ($0 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($7 + [8]) = $9
	*($7 + [16]) = $8
	*($10 + [24]) = [0]
	*($7) = $5
	*($1) = ($7 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $224($2, ($10 + [24]), ($10 + [16]), ($10 + [12]))
	
.LABEL $label$12
	$7 = *($10 + [24])
	*($10 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $418($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [32])
	return $5
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	$2 = *($0)
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	CALL eosio_assert([1], [1232])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [1232])
	$4 = ($1 + [8])
	CALL memcpy(($7 | [8]), $4, [4])
	$3 = *($1)
	*($1 + [16]) = CALL db_store_i64(*($2 + [8]), (int_64)-3020380528722313216, *(*($0 + [8])), $3, $7, [12])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = *(($2 + [8]))
	$5 = *(*(($0 + [8])))
	$6 = *($1)
	*($7 + [24]) = *($4)
	*($1 + [20]) = CALL db_idx64_store($3, (int_64)-3020380528722313216, $5, $6, ($7 + [24]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $389 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $417([64])) + [48]) = $1
	*($3 + [8]) = (int_64)0
	CALL $390(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [52])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $391(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $418($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $388 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1680])
	$6 = *($0 + [4])
	$7 = *($6 + [56])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-3020380869172259840, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [56]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)$2), [1056])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $386($2, CALL $fimport$18(*($2), *($2 + [8]), (int_64)-3020380869172259840, $3))
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)$2), [1056])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [56])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $383 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $382 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [264])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [248])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [256])), (int_64)-6215726809340706816, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $366($5, $6)
	*($9 + [12]) = [0]
	*($9 + [8]) = $5
	$7 = *(*(CALL $384(($9 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [264])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [1488])
	*($1) = *($8)
	*($1 + [8]) = *(*(*($3 + [4]) + [4]))
	$4 = *(*($3 + [8]) + [4])
	$7 = *($4 + [16])
	*(($1 + [24])) = *(($4 + [24]))
	*($1 + [16]) = $7
	$3 = *($3 + [12])
	$7 = *($3)
	*(($1 + [40])) = *(($3 + [8]))
	*($1 + [32]) = $7
	$3 = $10
	$10 = ($3 + [-48])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [1232])
	CALL memcpy($10, $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($3 + [-40]), ($1 + [8]), [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($3 + [-32]), ($1 + [16]), [16])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($3 + [-16]), ($1 + [32]), [16])
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-6215726809340706816, *(*($0 + [8])), $7, $10, [48])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $381 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $380 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1024])
	CALL memcpy(($1 + [48]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $387 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($10 + [56]) = *($1 + [8])
	$5 = ($1 + [40])
	$6 = *($5)
	$3 = *($3)
	$7 = *(($3 + [8]))
	$8 = *($1 + [32])
	$9 = *($3)
	$4 = ((int_64)$9 + (int_64)$8)
	*($1 + [32]) = $4
	*($5) = ((int_64)((int_64)$7 + (int_64)$6) + (int_64)( (int_64)1 ? (CASTING uint_64)(uint_32 (uint_64)($4 <= $9)) : (uint_64)($4 <= $8) ))
	$4 = *($1)
	CALL eosio_assert([1], [1360])
	CALL eosio_assert([1], [1232])
	CALL memcpy($10, $1, [8])
	CALL eosio_assert([1], [1232])
	$3 = ($1 + [8])
	CALL memcpy(($10 | [8]), $3, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($10 + [16]), ($1 + [16]), [16])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($10 + [32]), ($1 + [32]), [16])
	CALL db_update_i64(*($1 + [52]), $2, $10, [48])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($10 + [72]) = *($3)
	if ( (CALL memcmp(($10 + [56]), ($10 + [72]), [8]) == 0) ){ goto $label$2 }
	$3 = ($1 + [56])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020380869172259840, ($10 + [64]), $4)
	*($3) = $1
	
.LABEL $label$3
	CALL db_idx64_update($1, $2, ($10 + [72]))
	
.LABEL $label$2
	*([0] + [4]) = ($10 + [80])
}

void .FUNC $52 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_64 $18
	float_64 $19
	int_32 $20
	int_32 $21
	int_32 $22
	$22 = (*([0] + [4]) - [544])
	*([0] + [4]) = $22
	CALL require_auth(*($0))
	*((($22 + [504]) + [32])) = [0]
	*($22 + [520]) = (int_64)-1
	*($22 + [528]) = (int_64)0
	$2 = *($0)
	*($22 + [504]) = $2
	*($22 + [512]) = $2
	*((($22 + [464]) + [32])) = [0]
	*($22 + [472]) = $2
	*($22 + [464]) = $2
	*($22 + [480]) = (int_64)-1
	*($22 + [488]) = (int_64)0
	*($22 + [500]) = [0]
	*($22 + [456]) = ($22 + [464])
	*($22 + [80]) = (int_64)0
	CALL $278(($22 + [448]), ($22 + [456]), ($22 + [80]))
	CALL prints([2736])
	$21 = *($22 + [452])
	if ( ($21 == 0) ){ goto $label$23 }
	
.LOOP $label$24:
	if ( ((int_64)(*($21 + [48]) == 0) == 0) ){ goto $label$22 }
	if ( (*($21 + [56]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$20 }
	CALL prints([2224])
	CALL $295(($22 + [448]))
	CALL prints([2736])
	$21 = *($22 + [452])
	if ( $21 ){ goto $label$24 }
	
.LABEL $label$23
	CALL prints([2752])
	goto $label$21 
	
.LABEL $label$22
	CALL prints([3296])
	
.LABEL $label$21
	*($22 + [144]) = (int_64)1
	CALL $278(($22 + [80]), ($22 + [456]), ($22 + [144]))
	*($22 + [448]) = *($22 + [80])
	CALL prints([3040])
	$21 = *($22 + [452])
	if ( ($21 == 0) ){ goto $label$25 }
	
.LOOP $label$26:
	if ( ((int_64)*($21 + [48]) != (int_64)1) ){ goto $label$19 }
	if ( ((*($21 + [56]) + [14400]) <= (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$18 }
	CALL $295(($22 + [448]))
	CALL prints([3040])
	$21 = *($22 + [452])
	if ( $21 ){ goto $label$26 }
	
.LABEL $label$25
	CALL prints([3072])
	goto $label$6 
	
.LABEL $label$20
	$2 = *(*($22 + [452]))
	$8 = *(($22 + [488]))
	$9 = *(($22 + [492]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$27 }
	$21 = ($9 + [-24])
	$20 = ([0] - $8)
	
.LOOP $label$28:
	if ( ((int_64)*(*($21)) == (int_64)$2) ){ goto $label$27 }
	$9 = $21
	$10 = ($21 + [-24])
	$21 = $10
	if ( ((int_32)($10 + $20) != (int_32)[-24]) ){ goto $label$28 }
	
.LABEL $label$27
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$17 }
	$21 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [72]) == (int_32)($22 + [464])), [1056])
	*($22 + [444]) = $21
	*($22 + [440]) = ($22 + [464])
	$1 = (($22 + [440]) | [4])
	goto $label$13 
	
.LABEL $label$19
	CALL prints([3104])
	goto $label$6 
	
.LABEL $label$18
	CALL prints([2336])
	$2 = *(*($22 + [452]))
	$8 = *(($22 + [488]))
	$9 = *(($22 + [492]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$29 }
	$21 = ($9 + [-24])
	$20 = ([0] - $8)
	
.LOOP $label$30:
	if ( ((int_64)*(*($21)) == (int_64)$2) ){ goto $label$29 }
	$9 = $21
	$10 = ($21 + [-24])
	$21 = $10
	if ( ((int_32)($10 + $20) != (int_32)[-24]) ){ goto $label$30 }
	
.LABEL $label$29
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$16 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [72]) == (int_32)($22 + [464])), [1056])
	goto $label$15 
	
.LABEL $label$17
	$21 = CALL db_find_i64(*($22 + [464]), *(($22 + [472])), (int_64)4983115765679915008, $2)
	if ( ((int_32)$21 <= (int_32)[-1]) ){ goto $label$14 }
	$21 = CALL $279(($22 + [464]), $21)
	CALL eosio_assert(((int_32)*($21 + [72]) == (int_32)($22 + [464])), [1056])
	*($22 + [444]) = $21
	*($22 + [440]) = ($22 + [464])
	$1 = (($22 + [440]) | [4])
	goto $label$13 
	
.LABEL $label$16
	$8 = [0]
	$21 = CALL db_find_i64(*($22 + [464]), *(($22 + [472])), (int_64)4983115765679915008, $2)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$15 }
	$8 = CALL $279(($22 + [464]), $21)
	CALL eosio_assert(((int_32)*($8 + [72]) == (int_32)($22 + [464])), [1056])
	
.LABEL $label$15
	*($22 + [96]) = (int_64)-1
	*($22 + [104]) = [0]
	$2 = *($0)
	*($22 + [80]) = $2
	*($22 + [88]) = *($8)
	*(($22 + [108])) = [0]
	*((($22 + [80]) + [32])) = [0]
	*($22 + [116]) = [0]
	*((($22 + [144]) + [32])) = [0]
	$12 = *($8)
	*($22 + [152]) = $12
	*($22 + [144]) = $2
	*($22 + [160]) = (int_64)-1
	*($22 + [168]) = (int_64)0
	$21 = CALL db_lowerbound_i64($2, $12, (int_64)4983115766110178336, (int_64)0)
	if ( ((int_32)$21 <= (int_32)[-1]) ){ goto $label$31 }
	CALL $287(($22 + [144]), $21)
	CALL prints([3136])
	CALL printui(*($8))
	$20 = *($22 + [168])
	if ( ($20 == 0) ){ goto $label$7 }
	$8 = ($22 + [172])
	$21 = *($8)
	if ( ((int_32)$21 == (int_32)$20) ){ goto $label$9 }
	
.LOOP $label$32:
	$21 = ($21 + [-24])
	$10 = *($21)
	*($21) = [0]
	if ( ($10 == 0) ){ goto $label$33 }
	$9 = *(($10 + [48]))
	if ( ($9 == 0) ){ goto $label$34 }
	*(($10 + [52])) = $9
	CALL $418($9)
	
.LABEL $label$34
	CALL $418($10)
	
.LABEL $label$33
	if ( ((int_32)$20 != (int_32)$21) ){ goto $label$32 }
	$21 = *(($22 + [168]))
	goto $label$8 
	
.LABEL $label$31
	CALL prints([2352])
	$10 = ($22 + [88])
	$9 = [0]
	
.LOOP $label$37:
	$21 = CALL db_lowerbound_i64(*($22 + [80]), *($10), (int_64)4983115765975810048, (int_64)0)
	if ( ((int_32)$21 <= (int_32)[-1]) ){ goto $label$36 }
	CALL $297(($22 + [80]), $21)
	$21 = [0]
	$20 = CALL db_lowerbound_i64(*($22 + [80]), *($10), (int_64)4983115765975810048, (int_64)0)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$38 }
	$21 = CALL $297(($22 + [80]), $20)
	
.LABEL $label$38
	$20 = ((int_32)$21 != (int_32)[0])
	CALL eosio_assert($20, [2400])
	CALL eosio_assert($20, [1680])
	$20 = CALL db_next_i64(*($21 + [28]), ($22 + [400]))
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$39 }
	CALL $297(($22 + [80]), $20)
	
.LABEL $label$39
	CALL $298(($22 + [80]), $21)
	CALL prints([2352])
	$9 = ($9 + [1])
	if ( ((uint_32)$9 <= (uint_32)[29]) ){ goto $label$37 }
	CALL prints([2368])
	$20 = *($22 + [168])
	if ( $20 ){ goto $label$35 }
	goto $label$10 
	
.LABEL $label$36
	CALL prints([2384])
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [1120])
	CALL $296(($22 + [464]), $8, (int_64)0, ($22 + [400]))
	$20 = *($22 + [168])
	if ( ($20 == 0) ){ goto $label$10 }
	
.LABEL $label$35
	$8 = ($22 + [172])
	$21 = *($8)
	if ( ((int_32)$21 == (int_32)$20) ){ goto $label$12 }
	
.LOOP $label$40:
	$21 = ($21 + [-24])
	$10 = *($21)
	*($21) = [0]
	if ( ($10 == 0) ){ goto $label$41 }
	$9 = *(($10 + [48]))
	if ( ($9 == 0) ){ goto $label$42 }
	*(($10 + [52])) = $9
	CALL $418($9)
	
.LABEL $label$42
	CALL $418($10)
	
.LABEL $label$41
	if ( ((int_32)$20 != (int_32)$21) ){ goto $label$40 }
	$21 = *(($22 + [168]))
	goto $label$11 
	
.LABEL $label$14
	$21 = [0]
	*($22 + [444]) = [0]
	*($22 + [440]) = ($22 + [464])
	$1 = (($22 + [440]) | [4])
	
.LABEL $label$13
	*($22 + [416]) = (int_64)-1
	*($22 + [424]) = [0]
	$2 = *($0)
	*($22 + [400]) = $2
	*($22 + [408]) = *($21)
	*((($22 + [400]) + [28])) = [0]
	*((($22 + [400]) + [32])) = [0]
	*($22 + [436]) = [0]
	*((($22 + [360]) + [32])) = [0]
	*($22 + [360]) = $2
	*($22 + [376]) = (int_64)-1
	*($22 + [384]) = (int_64)0
	*($22 + [368]) = *($21)
	*($22 + [352]) = ($22 + [400])
	*($22 + [80]) = (int_64)0
	CALL $280(($22 + [344]), ($22 + [352]), ($22 + [80]))
	*($22 + [336]) = [0]
	*($22 + [328]) = (int_64)0
	*($22 + [320]) = [0]
	*($22 + [312]) = (int_64)0
	$2 = *(*($1))
	$8 = *(($22 + [528]))
	$9 = *((($22 + [504]) + [28]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$43 }
	$21 = ($9 + [-24])
	$20 = ([0] - $8)
	
.LOOP $label$44:
	if ( ((int_64)*(*($21)) == (int_64)$2) ){ goto $label$43 }
	$9 = $21
	$10 = ($21 + [-24])
	$21 = $10
	if ( ((int_32)($10 + $20) != (int_32)[-24]) ){ goto $label$44 }
	
.LABEL $label$43
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$48 }
	$16 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($16 + [20]) == (int_32)($22 + [504])), [1056])
	if ( $16 ){ goto $label$47 }
	$15 = [0]
	goto $label$46 
	
.LABEL $label$48
	$15 = [0]
	$21 = CALL db_find_i64(*($22 + [504]), *(($22 + [512])), (int_64)4983115766157328384, $2)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$46 }
	$16 = CALL $281(($22 + [504]), $21)
	CALL eosio_assert(((int_32)*($16 + [20]) == (int_32)($22 + [504])), [1056])
	
.LABEL $label$47
	$15 = [1]
	$21 = ($16 + [8])
	if ( ((int_32)($22 + [328]) == (int_32)$21) ){ goto $label$45 }
	CALL $282(($22 + [328]), *($21), *(($16 + [12])))
	goto $label$45 
	
.LABEL $label$46
	$16 = [0]
	
.LABEL $label$45
	*((($22 + [272]) + [32])) = [0]
	*($22 + [288]) = (int_64)-1
	$2 = *($0)
	*($22 + [272]) = $2
	*($22 + [280]) = $2
	*($22 + [296]) = (int_64)0
	*($22 + [308]) = [0]
	*($22 + [232]) = $2
	*($22 + [248]) = (int_64)-1
	*($22 + [256]) = [0]
	*($22 + [240]) = *(*($1))
	*(($7 = ($22 + [260]))) = [0]
	*((($22 + [232]) + [32])) = [0]
	*($22 + [268]) = [0]
	$21 = CALL db_lowerbound_i64($2, $2, (int_64)-5966706556312485888, (int_64)0)
	if ( ((int_32)$21 <= (int_32)[-1]) ){ goto $label$5 }
	$21 = CALL $100(($22 + [272]), $21)
	*($22 + [228]) = $21
	*($22 + [224]) = ($22 + [272])
	$14 = ($22 + [256])
	$11 = ($22 + [240])
	
.LOOP $label$49:
	$2 = *($21)
	$8 = *($14)
	$9 = *($7)
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$50 }
	$21 = ($9 + [-24])
	$20 = ([0] - $8)
	
.LOOP $label$51:
	if ( ((int_64)*(*($21)) == (int_64)$2) ){ goto $label$50 }
	$9 = $21
	$10 = ($21 + [-24])
	$21 = $10
	if ( ((int_32)($10 + $20) != (int_32)[-24]) ){ goto $label$51 }
	
.LABEL $label$50
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$54 }
	$21 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [48]) == (int_32)($22 + [232])), [1056])
	if ( $21 ){ goto $label$52 }
	goto $label$53 
	
.LABEL $label$54
	$21 = CALL db_find_i64(*($22 + [232]), *($11), (int_64)4983115766044540448, $2)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$53 }
	CALL eosio_assert(((int_32)*(CALL $283(($22 + [232]), $21) + [48]) == (int_32)($22 + [232])), [1056])
	goto $label$52 
	
.LABEL $label$53
	$2 = *($0)
	*($22 + [144]) = ($22 + [224])
	CALL $284(($22 + [80]), ($22 + [232]), $2, ($22 + [144]))
	
.LABEL $label$52
	CALL eosio_assert(((int_32)*($22 + [228]) != (int_32)[0]), [1680])
	$21 = CALL db_next_i64(*(*($22 + [228]) + [52]), ($22 + [80]))
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$55 }
	$21 = CALL $100(*($22 + [224]), $21)
	*($22 + [228]) = $21
	goto $label$49 
	
.LABEL $label$55
	*($22 + [228]) = [0]
	goto $label$4 
	
.LABEL $label$12
	$21 = $20
	
.LABEL $label$11
	*($8) = $20
	CALL $418($21)
	
.LABEL $label$10
	$9 = *($22 + [104])
	if ( ($9 == 0) ){ goto $label$3 }
	$20 = ($22 + [108])
	$21 = *($20)
	if ( ((int_32)$21 == (int_32)$9) ){ goto $label$57 }
	
.LOOP $label$58:
	$21 = ($21 + [-24])
	$10 = *($21)
	*($21) = [0]
	if ( ($10 == 0) ){ goto $label$59 }
	CALL $418($10)
	
.LABEL $label$59
	if ( ((int_32)$9 != (int_32)$21) ){ goto $label$58 }
	$21 = *(($22 + [104]))
	goto $label$56 
	
.LABEL $label$57
	$21 = $9
	
.LABEL $label$56
	*($20) = $9
	CALL $418($21)
	$20 = *($22 + [488])
	if ( $20 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$9
	$21 = $20
	
.LABEL $label$8
	*($8) = $20
	CALL $418($21)
	
.LABEL $label$7
	$9 = *($22 + [104])
	if ( ($9 == 0) ){ goto $label$6 }
	$20 = ($22 + [108])
	$21 = *($20)
	if ( ((int_32)$21 == (int_32)$9) ){ goto $label$61 }
	
.LOOP $label$62:
	$21 = ($21 + [-24])
	$10 = *($21)
	*($21) = [0]
	if ( ($10 == 0) ){ goto $label$63 }
	CALL $418($10)
	
.LABEL $label$63
	if ( ((int_32)$9 != (int_32)$21) ){ goto $label$62 }
	$21 = *(($22 + [104]))
	goto $label$60 
	
.LABEL $label$61
	$21 = $9
	
.LABEL $label$60
	*($20) = $9
	CALL $418($21)
	
.LABEL $label$6
	$21 = CALL db_lowerbound_i64(*($22 + [464]), *(($22 + [472])), (int_64)4983115765679915008, (int_64)0)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$66 }
	$21 = CALL $279(($22 + [464]), $21)
	if ( ((int_64)*($21 + [48]) != (int_64)2) ){ goto $label$66 }
	if ( ((uint_32)(*($21 + [56]) + [172800]) >= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$66 }
	$2 = *($21)
	*((($22 + [80]) + [32])) = [0]
	*($22 + [96]) = (int_64)-1
	*($22 + [104]) = (int_64)0
	$12 = *($0)
	*($22 + [80]) = $12
	*($22 + [88]) = $12
	$21 = CALL db_find_i64($12, $12, (int_64)4983115766157328384, $2)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$67 }
	$21 = CALL $281(($22 + [80]), $21)
	CALL eosio_assert(((int_32)*($21 + [20]) == (int_32)($22 + [80])), [1056])
	CALL eosio_assert([1], [2400])
	CALL eosio_assert([1], [1680])
	$10 = CALL db_next_i64(*($21 + [24]), ($22 + [144]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$68 }
	CALL $281(($22 + [80]), $10)
	
.LABEL $label$68
	CALL $299(($22 + [80]), $21)
	
.LABEL $label$67
	*((($22 + [144]) + [32])) = [0]
	*($22 + [160]) = (int_64)-1
	$12 = *($0)
	*($22 + [144]) = $12
	*($22 + [152]) = $2
	*($22 + [168]) = (int_64)0
	*($22 + [180]) = [0]
	$21 = CALL db_lowerbound_i64($12, $2, (int_64)4983115766044540576, (int_64)0)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$69 }
	$10 = CALL $300(($22 + [144]), $21)
	
.LOOP $label$70:
	CALL eosio_assert([1], [2400])
	CALL eosio_assert([1], [1680])
	$21 = [0]
	$9 = CALL db_next_i64(*($10 + [52]), ($22 + [400]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$71 }
	$21 = CALL $300(($22 + [144]), $9)
	
.LABEL $label$71
	CALL $301(($22 + [144]), $10)
	$10 = $21
	if ( $21 ){ goto $label$70 }
	
.LABEL $label$69
	*(($22 + [432])) = [0]
	*($22 + [416]) = (int_64)-1
	$12 = *($0)
	*($22 + [400]) = $12
	*($22 + [408]) = $2
	*($22 + [424]) = (int_64)0
	*($22 + [436]) = [0]
	$21 = CALL db_lowerbound_i64($12, $2, (int_64)4983115766044540448, (int_64)0)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$72 }
	$10 = CALL $283(($22 + [400]), $21)
	
.LOOP $label$73:
	CALL eosio_assert([1], [2400])
	CALL eosio_assert([1], [1680])
	$21 = [0]
	$9 = CALL db_next_i64(*($10 + [52]), ($22 + [360]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$74 }
	$21 = CALL $283(($22 + [400]), $9)
	
.LABEL $label$74
	CALL $302(($22 + [400]), $10)
	$10 = $21
	if ( $21 ){ goto $label$73 }
	
.LABEL $label$72
	$8 = *(($22 + [488]))
	$9 = *(($22 + [492]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$75 }
	$21 = ($9 + [-24])
	$20 = ([0] - $8)
	
.LOOP $label$76:
	if ( ((int_64)*(*($21)) == (int_64)$2) ){ goto $label$75 }
	$9 = $21
	$10 = ($21 + [-24])
	$21 = $10
	if ( ((int_32)($10 + $20) != (int_32)[-24]) ){ goto $label$76 }
	
.LABEL $label$75
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$65 }
	$21 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [72]) == (int_32)($22 + [464])), [1056])
	goto $label$64 
	
.LABEL $label$66
	CALL eosio_assert([0], [2448])
	goto $label$3 
	
.LABEL $label$65
	$21 = [0]
	$10 = CALL db_find_i64(*($22 + [464]), *(($22 + [472])), (int_64)4983115765679915008, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$64 }
	$21 = CALL $279(($22 + [464]), $10)
	CALL eosio_assert(((int_32)*($21 + [72]) == (int_32)($22 + [464])), [1056])
	
.LABEL $label$64
	$10 = ((int_32)$21 != (int_32)[0])
	CALL eosio_assert($10, [2400])
	CALL eosio_assert($10, [1680])
	$10 = CALL db_next_i64(*($21 + [76]), ($22 + [360]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$77 }
	CALL $279(($22 + [464]), $10)
	
.LABEL $label$77
	CALL $303(($22 + [464]), $21)
	CALL prints([4112])
	CALL printui($2)
	$9 = *($22 + [424])
	if ( ($9 == 0) ){ goto $label$78 }
	$20 = ($22 + [428])
	$21 = *($20)
	if ( ((int_32)$21 == (int_32)$9) ){ goto $label$80 }
	
.LOOP $label$81:
	$21 = ($21 + [-24])
	$10 = *($21)
	*($21) = [0]
	if ( ($10 == 0) ){ goto $label$82 }
	CALL $418($10)
	
.LABEL $label$82
	if ( ((int_32)$9 != (int_32)$21) ){ goto $label$81 }
	$21 = *(($22 + [424]))
	goto $label$79 
	
.LABEL $label$80
	$21 = $9
	
.LABEL $label$79
	*($20) = $9
	CALL $418($21)
	
.LABEL $label$78
	$9 = *($22 + [168])
	if ( ($9 == 0) ){ goto $label$83 }
	$20 = ($22 + [172])
	$21 = *($20)
	if ( ((int_32)$21 == (int_32)$9) ){ goto $label$85 }
	
.LOOP $label$86:
	$21 = ($21 + [-24])
	$10 = *($21)
	*($21) = [0]
	if ( ($10 == 0) ){ goto $label$87 }
	CALL $418($10)
	
.LABEL $label$87
	if ( ((int_32)$9 != (int_32)$21) ){ goto $label$86 }
	$21 = *(($22 + [168]))
	goto $label$84 
	
.LABEL $label$85
	$21 = $9
	
.LABEL $label$84
	*($20) = $9
	CALL $418($21)
	
.LABEL $label$83
	$7 = *($22 + [104])
	if ( ($7 == 0) ){ goto $label$3 }
	$11 = ($22 + [108])
	$20 = *($11)
	if ( ((int_32)$20 == (int_32)$7) ){ goto $label$89 }
	
.LOOP $label$90:
	$20 = ($20 + [-24])
	$8 = *($20)
	*($20) = [0]
	if ( ($8 == 0) ){ goto $label$91 }
	$0 = *($8 + [8])
	if ( ($0 == 0) ){ goto $label$92 }
	$14 = ($8 + [12])
	$21 = *($14)
	if ( ((int_32)$21 == (int_32)$0) ){ goto $label$94 }
	$9 = ([0] - $0)
	$21 = ($21 + [-16])
	
.LOOP $label$95:
	$10 = *($21)
	if ( ($10 == 0) ){ goto $label$96 }
	*(($21 + [4])) = $10
	CALL $418($10)
	
.LABEL $label$96
	$21 = ($21 + [-48])
	if ( ((int_32)($21 + $9) != (int_32)[-16]) ){ goto $label$95 }
	$21 = *(($8 + [8]))
	goto $label$93 
	
.LABEL $label$94
	$21 = $0
	
.LABEL $label$93
	*($14) = $0
	CALL $418($21)
	
.LABEL $label$92
	CALL $418($8)
	
.LABEL $label$91
	if ( ((int_32)$20 != (int_32)$7) ){ goto $label$90 }
	$21 = *(($22 + [104]))
	goto $label$88 
	
.LABEL $label$89
	$21 = $7
	
.LABEL $label$88
	*($11) = $7
	CALL $418($21)
	$20 = *($22 + [488])
	if ( $20 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	*($22 + [228]) = [0]
	*($22 + [224]) = ($22 + [272])
	
.LABEL $label$4
	$3 = (*($22 + [332]) - *($22 + [328]))
	$7 = ((int_32)$3 / (int_32)[48])
	if ( ($3 == 0) ){ goto $label$97 }
	$21 = [0]
	
.LOOP $label$98:
	CALL $285(($22 + [344]))
	$21 = ($21 + [1])
	if ( ($21 <= $7) ){ goto $label$98 }
	
.LABEL $label$97
	$21 = CALL db_lowerbound_i64(*($22 + [232]), *((($22 + [232]) + [8])), (int_64)4983115766044540448, (int_64)0)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$105 }
	$4 = ($7 + [1])
	$21 = CALL $283(($22 + [232]), $21)
	$14 = ($22 + [96])
	$10 = ($22 + [112])
	$11 = ($10 + [12])
	$13 = ($10 + [4])
	$9 = [0]
	
.LOOP $label$106:
	$2 = *($21 + [32])
	*((($22 + [80]) + [24])) = *(($21 + [24]))
	*($14) = *($21 + [16])
	$12 = *($21)
	*($11) = *(($21 + [44]))
	*(($10 + [8])) = *(($21 + [40]))
	*($13) = *(($21 + [36]))
	*($10) = *($21 + [32])
	*($22 + [80]) = $12
	$20 = ((int_64)$2 > (int_64)0)
	$8 = *($22 + [316])
	if ( ((int_32)$8 == (int_32)*((($22 + [312]) + [8]))) ){ goto $label$108 }
	*($22 + [316]) = (CALL memcpy($8, ($22 + [80]), [48]) + [48])
	goto $label$107 
	
.LABEL $label$108
	CALL $286(($22 + [312]), ($22 + [80]))
	
.LABEL $label$107
	$9 = ($9 | $20)
	CALL eosio_assert([1], [1680])
	$21 = CALL db_next_i64(*($21 + [52]), ($22 + [144]))
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$109 }
	$21 = CALL $283(($22 + [232]), $21)
	goto $label$106 
	
.LABEL $label$109
	CALL prints([4080])
	if ( (($9 & [1]) == 0) ){ goto $label$104 }
	if ( ((uint_32)$4 > (uint_32)[3]) ){ goto $label$104 }
	if ( (*($22 + [348]) == 0) ){ goto $label$104 }
	$21 = ($22 + [376])
	$2 = *($21)
	if ( ((int_64)$2 != (int_64)-1) ){ goto $label$110 }
	$2 = (int_64)0
	$10 = CALL db_lowerbound_i64(*($22 + [360]), *(($22 + [368])), (int_64)4983115766110178336, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$111 }
	CALL $287(($22 + [360]), $10)
	*($22 + [84]) = [0]
	*($22 + [80]) = ($22 + [360])
	$2 = *(*(CALL $288(($22 + [80])) + [4]))
	$2 = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$111
	*(($22 + [376])) = $2
	
.LABEL $label$110
	CALL eosio_assert((uint_64)($2 <= (int_64)-2), [1488])
	$5 = *($21)
	*($22 + [208]) = (int_64)0
	*($22 + [216]) = [0]
	$21 = *($22 + [312])
	if ( ((int_32)*($22 + [316]) == (int_32)$21) ){ goto $label$102 }
	if ( ($3 == 0) ){ goto $label$103 }
	$20 = [0]
	$11 = ((int_32)$7 == (int_32)[1])
	$8 = (($22 + [80]) + [16])
	$14 = (($22 + [80]) + [24])
	$7 = ((int_32)$7 != (int_32)[2])
	$10 = [32]
	
.LOOP $label$112:
	$9 = ($21 + $10)
	$2 = *($9)
	$12 = *(($9 + [8]))
	if ( $11 ){ goto $label$115 }
	if ( $7 ){ goto $label$113 }
	$19 = (float_64)0.0005
	goto $label$114 
	
.LABEL $label$115
	$19 = (float_64)0.00125
	
.LABEL $label$114
	$2 = (Rounds 0)(CALL floor(((float_64)(CASTING float_64)(int_64 $2) * (float_64)$19)))
	$21 = *($22 + [312])
	
.LABEL $label$113
	$9 = ($21 + $10)
	$17 = *(($9 + [-16]))
	$18 = *(($9 + [-8]))
	*($8) = $2
	*($14) = $12
	*($22 + [88]) = $18
	*($22 + [80]) = $17
	$9 = *($22 + [212])
	if ( ((uint_32)$9 >= (uint_32)*((($22 + [208]) + [8]))) ){ goto $label$117 }
	*($9) = *($22 + [80])
	*(($9 + [8])) = *($22 + [88])
	*(($9 + [24])) = *($14)
	*(($9 + [16])) = *($8)
	*($22 + [212]) = ($9 + [32])
	goto $label$116 
	
.LABEL $label$117
	CALL $289(($22 + [208]), ($22 + [80]))
	$21 = *($22 + [312])
	
.LABEL $label$116
	$21 = ($21 + $10)
	$17 = *(($21 + [-8]))
	$18 = *(($21 + [-16]))
	*(($21 = (($22 + [192]) + [8]))) = $12
	*((($22 + [24]) + [12])) = *((($22 + [192]) + [12]))
	*((($22 + [24]) + [8])) = *($21)
	*($22 + [192]) = (int_64))((int_64)0 - $2)
	*($22 + [28]) = *($22 + [196])
	*($22 + [24]) = *($22 + [192])
	CALL $97($0, $18, $17, ($22 + [24]))
	$10 = ($10 + [48])
	$21 = *($22 + [312])
	$20 = ($20 + [1])
	if ( ($20 <= ((int_32)(*($22 + [316]) - $21) / (int_32)[48])) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$105
	CALL prints([4080])
	
.LABEL $label$104
	$21 = *($22 + [444])
	CALL eosio_assert(((int_32)$21 != (int_32)[0]), [1120])
	CALL $294(($22 + [464]), $21, (int_64)0, ($22 + [80]))
	goto $label$101 
	
.LABEL $label$103
	$20 = [0]
	$10 = [40]
	$8 = (($22 + [80]) + [16])
	$7 = (($22 + [80]) + [24])
	$14 = (($22 + [208]) + [8])
	
.LOOP $label$118:
	$21 = ($21 + $10)
	$2 = *($21)
	$19 = CALL floor(((float_64)(CASTING float_64)(int_64 *(($21 + [-8]))) * (float_64)(float_64)0.00325))
	$9 = *($22 + [312])
	$21 = ($9 + $10)
	$12 = *(($21 + [-24]))
	$17 = *(($21 + [-16]))
	$18 = (Rounds 0)($19)
	*($8) = $18
	*($7) = $2
	*($22 + [88]) = $17
	*($22 + [80]) = $12
	$21 = *($22 + [212])
	if ( ((uint_32)$21 >= (uint_32)*($14)) ){ goto $label$120 }
	*($21) = *($22 + [80])
	*(($21 + [8])) = *($22 + [88])
	*(($21 + [24])) = *($7)
	*(($21 + [16])) = *($8)
	*($22 + [212]) = ($21 + [32])
	goto $label$119 
	
.LABEL $label$120
	CALL $289(($22 + [208]), ($22 + [80]))
	$9 = *($22 + [312])
	
.LABEL $label$119
	$21 = ($9 + $10)
	$12 = *(($21 + [-16]))
	$17 = *(($21 + [-24]))
	*(($21 = (($22 + [192]) + [8]))) = $2
	*((($22 + [8]) + [12])) = *((($22 + [192]) + [12]))
	*((($22 + [8]) + [8])) = *($21)
	*($22 + [192]) = (int_64))((int_64)0 - $18)
	*($22 + [12]) = *($22 + [196])
	*($22 + [8]) = *($22 + [192])
	CALL $97($0, $17, $12, ($22 + [8]))
	$10 = ($10 + [48])
	$21 = *($22 + [312])
	$20 = ($20 + [1])
	if ( ($20 <= ((int_32)(*($22 + [316]) - $21) / (int_32)[48])) ){ goto $label$118 }
	
.LABEL $label$102
	$21 = *($22 + [348])
	*($22 + [152]) = *($21)
	*(($22 + [172])) = *(($21 + [20]))
	*(($22 + [168])) = *(($21 + [16]))
	*((($22 + [144]) + [20])) = *(($21 + [12]))
	*($22 + [144]) = $4
	*($22 + [160]) = *($21 + [8])
	*($22 + [176]) = [0]
	*(($22 + [180])) = [0]
	*(($22 + [184])) = [0]
	$21 = (*($22 + [212]) - *($22 + [208]))
	$10 = int_32($21 >> [5])
	if ( ($10 == 0) ){ goto $label$123 }
	if ( ((uint_32)$10 >= (uint_32)[134217728]) ){ goto $label$122 }
	$21 = CALL $417($21)
	*(($22 + [176])) = $21
	*(($9 = ($22 + [180]))) = $21
	*(($22 + [184])) = ($21 + ($10 << [5]))
	$20 = *($22 + [208])
	$10 = (*($22 + [212]) - $20)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$123 }
	CALL memcpy($21, $20, $10)
	*($9) = (*($9) + $10)
	
.LABEL $label$123
	$2 = *($0)
	*($22 + [84]) = ($22 + [144])
	*($22 + [80]) = ($22 + [360])
	CALL $290(($22 + [64]), ($22 + [360]), $2, ($22 + [80]))
	$21 = *($22 + [332])
	if ( ((int_32)$21 == (int_32)*((($22 + [328]) + [8]))) ){ goto $label$125 }
	*($21) = *($22 + [144])
	*(($21 + [24])) = *((($22 + [144]) + [24]))
	*(($21 + [16])) = *((($22 + [144]) + [16]))
	*(($21 + [8])) = *((($22 + [144]) + [8]))
	*($21 + [32]) = [0]
	*(($21 + [36])) = [0]
	*(($21 + [40])) = [0]
	$10 = (*((($22 + [144]) + [36])) - *((($22 + [144]) + [32])))
	$9 = int_32($10 >> [5])
	if ( ($9 == 0) ){ goto $label$126 }
	if ( ((uint_32)$9 >= (uint_32)[134217728]) ){ goto $label$121 }
	$10 = CALL $417($10)
	*(($21 + [32])) = $10
	*(($21 + [40])) = ($10 + ($9 << [5]))
	*(($21 = ($21 + [36]))) = $10
	$20 = *((($22 + [144]) + [32]))
	$9 = (*((($22 + [144]) + [36])) - $20)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$126 }
	CALL memcpy($10, $20, $9)
	*($21) = (*($21) + $9)
	
.LABEL $label$126
	*($22 + [332]) = (*($22 + [332]) + [48])
	goto $label$124 
	
.LABEL $label$125
	CALL $291(($22 + [328]), ($22 + [144]))
	
.LABEL $label$124
	$2 = CALL current_time()
	*(($22 + [108])) = [0]
	*(($22 + [112])) = [0]
	*($22 + [92]) = [0]
	*($22 + [96]) = [0]
	*($22 + [100]) = [0]
	*($22 + [104]) = [0]
	*($22 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000)) + [60])
	*($22 + [116]) = [0]
	*(($22 + [120])) = [0]
	*(($22 + [124])) = [0]
	*($22 + [128]) = [0]
	*(($22 + [132])) = [0]
	*(($22 + [136])) = [0]
	$9 = ($22 + [116])
	$6 = *($0)
	$2 = (int_64)0
	$17 = (int_64)59
	$21 = [2992]
	$18 = (int_64)0
	
.LOOP $label$127:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$132 }
	$10 = *($21)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$131 }
	$10 = ($10 + [165])
	goto $label$130 
	
.LABEL $label$132
	$12 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$129 }
	goto $label$128 
	
.LABEL $label$131
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$130
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$129
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$128
	$21 = ($21 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$18 = ((int_64)$12 | (int_64)$18)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$127 }
	*($22 + [72]) = $18
	*($22 + [64]) = $6
	$2 = (int_64)0
	$17 = (int_64)59
	$21 = [4096]
	$18 = (int_64)0
	
.LOOP $label$133:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$138 }
	$10 = *($21)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$137 }
	$10 = ($10 + [165])
	goto $label$136 
	
.LABEL $label$138
	$12 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$135 }
	goto $label$134 
	
.LABEL $label$137
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$136
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$135
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$134
	$21 = ($21 + [1])
	$17 = ((int_64)$17 + (int_64)-5)
	$18 = ((int_64)$12 | (int_64)$18)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$133 }
	*($22 + [56]) = $18
	*($22 + [48]) = $5
	*($22 + [40]) = *(*($1))
	CALL $173($9, ($22 + [64]), $0, ($22 + [56]), ($22 + [40]))
	$2 = *($0)
	$21 = *($1)
	$12 = *($22 + [144])
	*(($22 + [100])) = [0]
	*($22 + [72]) = (int_64)0
	*($22 + [64]) = ((int_64)$12 | (int_64)((int_64)*($21) << (int_64)32))
	CALL $174(($22 + [40]), ($22 + [80]))
	$21 = *($22 + [40])
	CALL send_deferred(($22 + [64]), $2, $21, (*($22 + [44]) - $21), [1])
	$21 = *($22 + [40])
	if ( ($21 == 0) ){ goto $label$139 }
	*($22 + [44]) = $21
	CALL $418($21)
	
.LABEL $label$139
	CALL prints([3024])
	CALL $285(($22 + [344]))
	if ( ($15 == 0) ){ goto $label$141 }
	*($22 + [64]) = ($22 + [328])
	CALL eosio_assert([1], [1120])
	CALL $292(($22 + [504]), $16, (int_64)0, ($22 + [64]))
	goto $label$140 
	
.LABEL $label$141
	$2 = *($0)
	*($22 + [68]) = ($22 + [328])
	*($22 + [64]) = ($22 + [440])
	CALL $293(($22 + [40]), ($22 + [504]), $2, ($22 + [64]))
	
.LABEL $label$140
	CALL $176(($22 + [80]))
	$21 = *($22 + [176])
	if ( ($21 == 0) ){ goto $label$142 }
	*(($22 + [180])) = $21
	CALL $418($21)
	
.LABEL $label$142
	$21 = *($22 + [208])
	if ( ($21 == 0) ){ goto $label$101 }
	*($22 + [212]) = $21
	CALL $418($21)
	$9 = *($22 + [256])
	if ( $9 ){ goto $label$100 }
	goto $label$99 
	
.LABEL $label$122
	CALL $436(($22 + [176]))
	
.LABEL $label$121
	CALL $436(($21 + [32]))
	
.LABEL $label$101
	$9 = *($22 + [256])
	if ( ($9 == 0) ){ goto $label$99 }
	
.LABEL $label$100
	$20 = ($22 + [260])
	$21 = *($20)
	if ( ((int_32)$21 == (int_32)$9) ){ goto $label$144 }
	
.LOOP $label$145:
	$21 = ($21 + [-24])
	$10 = *($21)
	*($21) = [0]
	if ( ($10 == 0) ){ goto $label$146 }
	CALL $418($10)
	
.LABEL $label$146
	if ( ((int_32)$9 != (int_32)$21) ){ goto $label$145 }
	$21 = *(($22 + [256]))
	goto $label$143 
	
.LABEL $label$144
	$21 = $9
	
.LABEL $label$143
	*($20) = $9
	CALL $418($21)
	
.LABEL $label$99
	$9 = *($22 + [296])
	if ( ($9 == 0) ){ goto $label$147 }
	$20 = ($22 + [300])
	$21 = *($20)
	if ( ((int_32)$21 == (int_32)$9) ){ goto $label$149 }
	
.LOOP $label$150:
	$21 = ($21 + [-24])
	$10 = *($21)
	*($21) = [0]
	if ( ($10 == 0) ){ goto $label$151 }
	CALL $418($10)
	
.LABEL $label$151
	if ( ((int_32)$9 != (int_32)$21) ){ goto $label$150 }
	$21 = *(($22 + [296]))
	goto $label$148 
	
.LABEL $label$149
	$21 = $9
	
.LABEL $label$148
	*($20) = $9
	CALL $418($21)
	
.LABEL $label$147
	$21 = *($22 + [312])
	if ( ($21 == 0) ){ goto $label$152 }
	*($22 + [316]) = $21
	CALL $418($21)
	
.LABEL $label$152
	$20 = *($22 + [328])
	if ( ($20 == 0) ){ goto $label$153 }
	$21 = *($22 + [332])
	if ( ((int_32)$21 == (int_32)$20) ){ goto $label$155 }
	$9 = ([0] - $20)
	$21 = ($21 + [-16])
	
.LOOP $label$156:
	$10 = *($21)
	if ( ($10 == 0) ){ goto $label$157 }
	*(($21 + [4])) = $10
	CALL $418($10)
	
.LABEL $label$157
	$21 = ($21 + [-48])
	if ( ((int_32)($21 + $9) != (int_32)[-16]) ){ goto $label$156 }
	$21 = *($22 + [328])
	goto $label$154 
	
.LABEL $label$155
	$21 = $20
	
.LABEL $label$154
	*($22 + [332]) = $20
	CALL $418($21)
	
.LABEL $label$153
	$20 = *($22 + [384])
	if ( ($20 == 0) ){ goto $label$158 }
	$8 = ($22 + [388])
	$21 = *($8)
	if ( ((int_32)$21 == (int_32)$20) ){ goto $label$160 }
	
.LOOP $label$161:
	$21 = ($21 + [-24])
	$10 = *($21)
	*($21) = [0]
	if ( ($10 == 0) ){ goto $label$162 }
	$9 = *(($10 + [48]))
	if ( ($9 == 0) ){ goto $label$163 }
	*(($10 + [52])) = $9
	CALL $418($9)
	
.LABEL $label$163
	CALL $418($10)
	
.LABEL $label$162
	if ( ((int_32)$20 != (int_32)$21) ){ goto $label$161 }
	$21 = *(($22 + [384]))
	goto $label$159 
	
.LABEL $label$160
	$21 = $20
	
.LABEL $label$159
	*($8) = $20
	CALL $418($21)
	
.LABEL $label$158
	$9 = *($22 + [424])
	if ( ($9 == 0) ){ goto $label$3 }
	$20 = ($22 + [428])
	$21 = *($20)
	if ( ((int_32)$21 == (int_32)$9) ){ goto $label$165 }
	
.LOOP $label$166:
	$21 = ($21 + [-24])
	$10 = *($21)
	*($21) = [0]
	if ( ($10 == 0) ){ goto $label$167 }
	CALL $418($10)
	
.LABEL $label$167
	if ( ((int_32)$9 != (int_32)$21) ){ goto $label$166 }
	$21 = *(($22 + [424]))
	goto $label$164 
	
.LABEL $label$165
	$21 = $9
	
.LABEL $label$164
	*($20) = $9
	CALL $418($21)
	$20 = *($22 + [488])
	if ( $20 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$20 = *($22 + [488])
	if ( ($20 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($22 + [492])
	$21 = *($8)
	if ( ((int_32)$21 == (int_32)$20) ){ goto $label$169 }
	
.LOOP $label$170:
	$21 = ($21 + [-24])
	$10 = *($21)
	*($21) = [0]
	if ( ($10 == 0) ){ goto $label$171 }
	$9 = *($10 + [60])
	if ( ($9 == 0) ){ goto $label$172 }
	*(($10 + [64])) = $9
	CALL $418($9)
	
.LABEL $label$172
	CALL $418($10)
	
.LABEL $label$171
	if ( ((int_32)$20 != (int_32)$21) ){ goto $label$170 }
	$21 = *(($22 + [488]))
	goto $label$168 
	
.LABEL $label$169
	$21 = $20
	
.LABEL $label$168
	*($8) = $20
	CALL $418($21)
	
.LABEL $label$1
	$7 = *($22 + [528])
	if ( ($7 == 0) ){ goto $label$173 }
	$11 = ($22 + [532])
	$20 = *($11)
	if ( ((int_32)$20 == (int_32)$7) ){ goto $label$175 }
	
.LOOP $label$176:
	$20 = ($20 + [-24])
	$8 = *($20)
	*($20) = [0]
	if ( ($8 == 0) ){ goto $label$177 }
	$0 = *($8 + [8])
	if ( ($0 == 0) ){ goto $label$178 }
	$14 = ($8 + [12])
	$21 = *($14)
	if ( ((int_32)$21 == (int_32)$0) ){ goto $label$180 }
	$9 = ([0] - $0)
	$21 = ($21 + [-16])
	
.LOOP $label$181:
	$10 = *($21)
	if ( ($10 == 0) ){ goto $label$182 }
	*(($21 + [4])) = $10
	CALL $418($10)
	
.LABEL $label$182
	$21 = ($21 + [-48])
	if ( ((int_32)($21 + $9) != (int_32)[-16]) ){ goto $label$181 }
	$21 = *(($8 + [8]))
	goto $label$179 
	
.LABEL $label$180
	$21 = $0
	
.LABEL $label$179
	*($14) = $0
	CALL $418($21)
	
.LABEL $label$178
	CALL $418($8)
	
.LABEL $label$177
	if ( ((int_32)$20 != (int_32)$7) ){ goto $label$176 }
	$21 = *(($22 + [528]))
	goto $label$174 
	
.LABEL $label$175
	$21 = $7
	
.LABEL $label$174
	*($11) = $7
	CALL $418($21)
	
.LABEL $label$173
	*([0] + [4]) = ($22 + [544])
	(unreachable)
	(unreachable)
}

void .FUNC $385 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3020380869172259840, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $386($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)-3020380869172259840, $5))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*(($2 + [56])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $384 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [52]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1616])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-6215726809340706816)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1552])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1552])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $366(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	*($5) = (int_64)0
	*($5 + [36]) = $1
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + $3)
	CALL $94(($5 + [32]), $5)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	CALL $437(($5 + [16]), $5)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL $437(($5 + [32]), ($5 + [16]))
	CALL void $1((int_32 ($5 + [32])), (int_32 $4))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $418(*($5 + [40]))
	
.LABEL $label$6
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$7 }
	CALL $418(*($5 + [24]))
	
.LABEL $label$7
	if ( ((*($5) & [1]) == 0) ){ goto $label$8 }
	CALL $418(*(($5 + [8])))
	
.LABEL $label$8
	*([0] + [4]) = ($5 + [48])
	return [1]
}

void .FUNC $73 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [112])
	*([0] + [4]) = $11
	*($11 + [96]) = $1
	*($11 + [104]) = $2
	*($11 + [92]) = $3
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1040]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$4 = ($4 + [165])
	goto $label$3 
	
.LABEL $label$4
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($9)
	CALL eosio_assert(CALL $82($0, $1, $2), [1456])
	*(($11 + [80])) = [0]
	*($11 + [64]) = (int_64)-1
	*($11 + [72]) = (int_64)0
	$8 = *($0)
	*($11 + [48]) = $8
	*($11 + [56]) = $8
	*($11 + [84]) = [0]
	*($11 + [40]) = ($11 + [48])
	CALL $83(($11 + [32]), ($11 + [40]), ($11 + [96]))
	$6 = *($11 + [36])
	if ( ($6 == 0) ){ goto $label$10 }
	if ( ((int_64)(((int_64)((int_64)*($6 + [16]) ^ (int_64)*($11 + [96])) | (int_64)((int_64)*(($6 + [24])) ^ (int_64)*($11 + [104]))) == 0) == 0) ){ goto $label$10 }
	if ( ((uint_32)*($6 + [32]) >= (uint_32)$3) ){ goto $label$9 }
	$8 = *($6)
	$5 = *(($11 + [72]))
	$0 = *(($11 + [76]))
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$11 }
	$6 = ($0 + [-24])
	$3 = ([0] - $5)
	
.LOOP $label$12:
	if ( ((int_64)*(*($6)) == (int_64)$8) ){ goto $label$11 }
	$0 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$8 }
	$6 = *(($0 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)($11 + [48])), [1056])
	goto $label$7 
	
.LABEL $label$10
	$8 = *($0)
	*($11 + [20]) = ($11 + [96])
	*($11 + [16]) = ($11 + [48])
	*($11 + [24]) = ($11 + [92])
	CALL $84(($11 + [8]), ($11 + [48]), $8, ($11 + [16]))
	
.LABEL $label$9
	$0 = *($11 + [72])
	if ( ($0 == 0) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$8
	$6 = [0]
	$4 = CALL db_find_i64(*($11 + [48]), *(($11 + [56])), (int_64)5445032172408799232, $8)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $85(($11 + [48]), $4)
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)($11 + [48])), [1056])
	
.LABEL $label$7
	*($11 + [16]) = ($11 + [92])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [1120])
	CALL $86(($11 + [48]), $6, (int_64)0, ($11 + [16]))
	$0 = *($11 + [72])
	if ( ($0 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$3 = ($11 + [76])
	$6 = *($3)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $418($4)
	
.LABEL $label$16
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$15 }
	$6 = *(($11 + [72]))
	goto $label$13 
	
.LABEL $label$14
	$6 = $0
	
.LABEL $label$13
	*($3) = $0
	CALL $418($6)
	
.LABEL $label$5
	*([0] + [4]) = ($11 + [112])
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [1824])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [1024])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [1024])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [1024])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	CALL eosio_assert([0], [1728])
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = [0]
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1024])
	CALL memcpy($6, $4, [8])
	CALL eosio_assert(((int_32)($1 & [-4]) != (int_32)[8]), [1024])
	$7 = ($6 + [8])
	CALL memcpy($7, ($4 + [8]), [4])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($7)
	$3 = *($6)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 $4), (int_32 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $417([24])) + [12]) = $0
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1024])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [1024])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [20]) = [-1]
	*($6 + [16]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [16])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $81(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$6 = *($1)
	$5 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $1)
	
.LABEL $label$1
	*($7 + [8]) = (int_64)0
	*($7) = (int_64)0
	*($7 + [16]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[15]), [1024])
	CALL memcpy($7, $5, [16])
	CALL eosio_assert(((int_32)($1 & [-4]) != (int_32)[16]), [1024])
	$8 = ($7 + [16])
	CALL memcpy($8, ($5 + [16]), [4])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($5)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($8)
	$4 = *($7 + [8])
	$3 = *($7)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($1) + $6))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_32 $6))
	*([0] + [4]) = ($7 + [32])
	return [1]
}

void .FUNC $75 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*($9 + [72]) = $1
	*($9 + [68]) = $2
	$6 = (int_64)0
	$5 = (int_64)59
	$2 = [1040]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($2)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$2 = ($2 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($7)
	*(($9 + [56])) = [0]
	*($9 + [40]) = (int_64)-1
	*($9 + [48]) = (int_64)0
	$6 = *($0)
	*($9 + [24]) = $6
	*($9 + [32]) = $6
	*($9 + [60]) = [0]
	$2 = CALL db_find_i64($6, $6, (int_64)-3020380528722313216, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$7 }
	$2 = CALL $77(($9 + [24]), $2)
	CALL eosio_assert(((int_32)*($2 + [12]) == (int_32)($9 + [24])), [1056])
	*($9 + [16]) = ($9 + [68])
	CALL eosio_assert([1], [1120])
	CALL $78(($9 + [24]), $2, (int_64)0, ($9 + [16]))
	$0 = *($9 + [48])
	if ( $0 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$6 = *($0)
	*($9 + [20]) = ($9 + [68])
	*($9 + [16]) = ($9 + [72])
	CALL $79(($9 + [8]), ($9 + [24]), $6, ($9 + [16]))
	$0 = *($9 + [48])
	if ( ($0 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$4 = ($9 + [52])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $418($3)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($9 + [48]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $0
	
.LABEL $label$8
	*($4) = $0
	CALL $418($2)
	
.LABEL $label$5
	*([0] + [4]) = ($9 + [80])
}

void .FUNC $78 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	$4 = *($1 + [8])
	*($1 + [8]) = *(*($3))
	*($5 + [24]) = $4
	$4 = *($1)
	CALL eosio_assert([1], [1360])
	CALL eosio_assert([1], [1232])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [1232])
	$3 = ($1 + [8])
	CALL memcpy(($5 | [8]), $3, [4])
	CALL db_update_i64(*($1 + [16]), $2, $5, [12])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($5 + [40]) = *($3)
	if ( (CALL memcmp(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$2 }
	$3 = *($1 + [20])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$3 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020380528722313216, ($5 + [32]), $4)
	*(($1 + [20])) = $3
	
.LABEL $label$3
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $417([24])) + [12]) = $1
	*($3) = (int_64)0
	CALL $80(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [16])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $81(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $418($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $259 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*(($11 = $9) + [64]) = $2
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($11 + [48]) = *($1 + [48])
	*($11 + [56]) = *($1 + [56])
	*($1 + [48]) = (int_64)2
	$10 = *($1)
	*($11 + [40]) = $10
	CALL eosio_assert([1], [1360])
	$5 = *($1 + [60])
	$4 = *(($1 + [64]))
	$6 = ($4 - $5)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[48]))
	$7 = [52]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$2 }
	$7 = ((((int_32)((uint_32)($6 + [-48]) / (uint_32)[48]) * (int_32)[44]) + $7) + [44])
	
.LABEL $label$2
	if ( ($7 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($7)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($11 + [28]) = $9
	*($11 + [24]) = $9
	*($11 + [32]) = ($9 + $7)
	CALL $263(($11 + [24]), $1)
	CALL db_update_i64(*(($1 + [76])), $2, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL free($9)
	$10 = *($11 + [40])
	
.LABEL $label$5
	$7 = ($0 + [36])
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($11 + [4]) = $1
	*($11) = $0
	*($11 + [12]) = $1
	*($11 + [8]) = ($11 + [48])
	*($11 + [16]) = ($11 + [40])
	*($11 + [20]) = ($11 + [64])
	*($11 + [72]) = $11
	CALL $264(($11 + [72]), $7, ($7 + [1]))
	*([0] + [4]) = ($11 + [80])
}

int_32 .FUNC $258 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = [0]
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1680])
	$8 = *($0 + [4])
	$6 = *($8 + [80])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$1 }
	$6 = *(*($0))
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)4983115765713469440, ($9 + [8]), *($8))
	*(*(($0 + [4])) + [80]) = $6
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($6, ($9 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$3 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$2), [1056])
	goto $label$5 
	
.LABEL $label$6
	$7 = [0]
	$6 = CALL db_find_i64(*($2), *($2 + [8]), (int_64)4983115765713469440, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $250($2, $6)
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$2), [1056])
	
.LABEL $label$5
	*($7 + [80]) = $1
	
.LABEL $label$2
	*(($0 + [4])) = $7
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $312 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [48])
	$10 = $11
	*([0] + [4]) = $11
	$5 = *($0 + [4])
	*($1) = *(*(*($5) + [4]))
	$7 = [8]
	$2 = *($0)
	$5 = *($5 + [4])
	$9 = ($1 + [8])
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$1 }
	CALL $282($9, *($5), *($5 + [4]))
	
.LABEL $label$1
	$9 = *($9)
	$3 = *(($1 + [12]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($3 - $9) / (int_32)[48]))
	
.LOOP $label$2:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$7 = ($7 + [28])
	$6 = *($9 + [32])
	$5 = *(($9 + [36]))
	$4 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($4 >> [5]))
	
.LOOP $label$5:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	$7 = (($4 & [-32]) + $7)
	
.LABEL $label$6
	$9 = ($9 + [48])
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ($7 <= [513]) ){ goto $label$8 }
	$3 = CALL malloc($7)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$7
	*($10 + [8]) = $3
	$4 = ($3 + $7)
	*($10 + [16]) = $4
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [1232])
	CALL memcpy($3, $1, [8])
	$9 = ($3 + [8])
	*($10 + [12]) = $9
	$8 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [12])) - *(($1 + [8]))) / (int_32)[48]))
	
.LOOP $label$9:
	$5 = (CASTING uint_32)(uint_64 $8)
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	$6 = ((int_64)$8) != (int_64)0
	*($10 + [32]) = (($6) << [7]) | ($5 & [127]))
	CALL eosio_assert(((int_32)($4 - $9) > (int_32)[0]), [1232])
	CALL memcpy($9, ($10 + [32]), [1])
	$9 = ($9 + [1])
	*($10 + [12]) = $9
	if ( $6 ){ goto $label$9 }
	$5 = *(($1 + [12]))
	$9 = *(($1 + [8]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$10 }
	$6 = (($10 + [32]) + [12])
	
.LOOP $label$11:
	*($10 + [24]) = ($10 + [8])
	*($10 + [32]) = $9
	*((($10 + [32]) + [8])) = ($9 + [16])
	*($6) = ($9 + [32])
	*($10 + [36]) = ($9 + [8])
	CALL $314(($10 + [32]), ($10 + [24]))
	$9 = ($9 + [48])
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$11 }
	
.LABEL $label$10
	$8 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)4983115766157328384, *(*($0 + [8])), $8, $3, $7)
	if ( ($7 <= [513]) ){ goto $label$12 }
	CALL free($3)
	
.LABEL $label$12
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$13 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $313 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($8 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$6 = [178956970]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 > (uint_32)[89478484]) ){ goto $label$4 }
	$6 = ($5 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $417(((int_32)$6 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*(($1 = ($5 + ((int_32)$8 * (int_32)[24])))) = $7
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$7 = ($5 + ((int_32)$6 * (int_32)[24]))
	$4 = ($1 + [24])
	$2 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = ($6 + [-24])
	$3 = *($5)
	*($5) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $5
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$8 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$8 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $4
	*(($0 + [8])) = $7
	if ( ((int_32)$2 == (int_32)$8) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	$0 = *($3 + [8])
	if ( ($0 == 0) ){ goto $label$11 }
	$7 = ($3 + [12])
	$1 = *($7)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$13 }
	$5 = ([0] - $0)
	$1 = ($1 + [-16])
	
.LOOP $label$14:
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$15 }
	*(($1 + [4])) = $6
	CALL $418($6)
	
.LABEL $label$15
	$1 = ($1 + [-48])
	if ( ((int_32)($1 + $5) != (int_32)[-16]) ){ goto $label$14 }
	$1 = *(($3 + [8]))
	goto $label$12 
	
.LABEL $label$13
	$1 = $0
	
.LABEL $label$12
	*($7) = $0
	CALL $418($1)
	
.LABEL $label$11
	CALL $418($3)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($8 == 0) ){ goto $label$16 }
	CALL $418($8)
	
.LABEL $label$16
	(unreachable)
}

void .FUNC $314 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1232])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1232])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $315(*($1), *($0 + [12]))
}

int_32 .FUNC $315 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [5]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1232])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[15]), [1232])
	CALL memcpy(*($4), $7, [16])
	$6 = (*($4) + [16])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1232])
	CALL memcpy(*($4), ($7 + [16]), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1232])
	CALL memcpy(*($4), ($7 + [24]), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [32])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $316 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$11 = (*([0] + [4]) - [48])
	$12 = $11
	*([0] + [4]) = $11
	$2 = *($0)
	$5 = *($0 + [4])
	$9 = *($5)
	$10 = *($9 + [16])
	if ( ((int_64)$10 != (int_64)-1) ){ goto $label$1 }
	$10 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($9), *($9 + [8]), (int_64)4983115766110178336, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $287($9, $4)
	*($12 + [36]) = [0]
	*($12 + [32]) = $9
	$10 = *(*(CALL $288(($12 + [32])) + [4]))
	$10 = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($9 + [16])) = $10
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($10 <= (int_64)-2), [1488])
	$10 = *(($9 + [16]))
	*($1 + [8]) = (int_64)0
	*($1) = $10
	$9 = *($5 + [4])
	*($1 + [16]) = *($9)
	*(($1 + [40])) = *(($9 + [24]))
	*(($1 + [32])) = *(($9 + [16]))
	*(($1 + [24])) = *(($9 + [8]))
	$5 = ($1 + [48])
	$4 = ($1 + [16])
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$3 }
	CALL $318($5, *($9 + [32]), *(($9 + [36])))
	
.LABEL $label$3
	$3 = ($1 + [8])
	$7 = *($5)
	$6 = *(($1 + [52]))
	$8 = ($6 - $7)
	$10 = (CASTING uint_64)(uint_32 int_32($8 >> [5]))
	$9 = [44]
	
.LOOP $label$4:
	$9 = ($9 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$5 }
	$9 = (($8 & [-32]) + $9)
	
.LABEL $label$5
	if ( ($9 <= [513]) ){ goto $label$7 }
	$11 = CALL malloc($9)
	goto $label$6 
	
.LABEL $label$7
	$11 = ($11 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $11
	
.LABEL $label$6
	*($12 + [8]) = $11
	$6 = ($11 + $9)
	*($12 + [16]) = $6
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [1232])
	CALL memcpy($11, $1, [8])
	$7 = ($11 + [8])
	CALL eosio_assert(((int_32)($6 - $7) > (int_32)[7]), [1232])
	CALL memcpy($7, $3, [8])
	*($12 + [12]) = ($11 + [16])
	*($12 + [24]) = ($12 + [8])
	*($12 + [36]) = ($1 + [24])
	*($12 + [32]) = $4
	*($12 + [40]) = ($1 + [32])
	*($12 + [44]) = $5
	CALL $314(($12 + [32]), ($12 + [24]))
	$10 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)4983115766110178336, *(*($0 + [8])), $10, $11, $9)
	if ( ($9 <= [513]) ){ goto $label$8 }
	CALL free($11)
	
.LABEL $label$8
	if ( (uint_64)($10 <= *($2 + [16])) ){ goto $label$9 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($12 + [48])
}

void .FUNC $317 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *(($1 + [48]))
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [52])) = $6
	CALL $418($6)
	
.LABEL $label$11
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $418($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $251 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4983115765722716160, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $260($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)4983115765722716160, $5))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*(($2 + [32])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $250 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $417([96])) + [40]) = (int_64)1398362884
	*($4 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1824])
	*($4 + [68]) = [0]
	*($4 + [60 align=4]) = (int_64)0
	*($4 + [72]) = $0
	CALL $273(($8 + [32]), $4)
	*($4 + [80]) = [-1]
	*($4 + [76]) = $1
	*($4 + [84]) = [-1]
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [76])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $274($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	$6 = *($5 + [60])
	if ( ($6 == 0) ){ goto $label$15 }
	*(($5 + [64])) = $6
	CALL $418($6)
	
.LABEL $label$15
	CALL $418($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $253 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$2 = ((int_32)($5 - $4) / (int_32)[48])
	$7 = ($2 + [1])
	if ( ((uint_32)$7 >= (uint_32)[89478486]) ){ goto $label$2 }
	$6 = [89478485]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[48])
	if ( ((uint_32)$3 > (uint_32)[44739241]) ){ goto $label$4 }
	$6 = ($3 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $417(((int_32)$6 * (int_32)[48]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = ($5 - $4)
	$2 = CALL memcpy(($7 + ((int_32)$2 * (int_32)[48])), $1, [48])
	$1 = ($2 + ((int_32)((int_32)$5 / (int_32)[-48]) * (int_32)[48]))
	$6 = ($7 + ((int_32)$6 * (int_32)[48]))
	$7 = ($2 + [48])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $4, $5)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	(unreachable)
}

int_32 .FUNC $252 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1680])
	$6 = *($0 + [4])
	$7 = *($6 + [32])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)4983115765722716160, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [32]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [1056])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $260($2, CALL $fimport$18(*($2), *($2 + [8]), (int_64)4983115765722716160, $3))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [1056])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [32])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

int_32 .FUNC $255 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [68]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1616])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)4983115765718299232)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1552])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1552])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $254(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $254 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	$7 = ($4 + $6)
	*($8 + [16]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [16]))
	$4 = *($8 + [12])
	
.LABEL $label$7
	$6 = CALL $417([80])
	$3 = ($6 + [16])
	CALL $269($3)
	*($6 + [64]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [1024])
	CALL memcpy($6, $4, [8])
	$2 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($6 + [8]), $2, [8])
	*($8 + [12]) = ($4 + [16])
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [24])
	*($8 + [32]) = $3
	*($8 + [40]) = ($6 + [32])
	*($8 + [44]) = ($6 + [48])
	CALL $272(($8 + [32]), ($8 + [24]))
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [68])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $271(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $257 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*(($11 = $9) + [64]) = $2
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($11 + [48]) = *($1 + [48])
	*($11 + [56]) = *($1 + [56])
	*($1 + [48]) = (int_64)1
	$10 = *($1)
	*($11 + [40]) = $10
	$8 = $10
	$3 = *($3)
	$7 = ($1 + [60])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	CALL $267($7, *($3), *($3 + [4]))
	$8 = *($1)
	
.LABEL $label$1
	$3 = ($0 + [36])
	CALL eosio_assert(((int_64)$10 == (int_64)$8), [1360])
	$5 = *($7)
	$4 = *(($1 + [64]))
	$6 = ($4 - $5)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[48]))
	$7 = [52]
	
.LOOP $label$2:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$3 }
	$7 = ((((int_32)((uint_32)($6 + [-48]) / (uint_32)[48]) * (int_32)[44]) + $7) + [44])
	
.LABEL $label$3
	if ( ($7 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($7)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	*($11 + [28]) = $9
	*($11 + [24]) = $9
	*($11 + [32]) = ($9 + $7)
	CALL $263(($11 + [24]), $1)
	CALL db_update_i64(*(($1 + [76])), $2, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL free($9)
	$10 = *($11 + [40])
	
.LABEL $label$6
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($11 + [4]) = $1
	*($11) = $0
	*($11 + [12]) = $1
	*($11 + [8]) = ($11 + [48])
	*($11 + [16]) = ($11 + [40])
	*($11 + [20]) = ($11 + [64])
	*($11 + [72]) = $11
	CALL $268(($11 + [72]), $3, ($3 + [1]))
	*([0] + [4]) = ($11 + [80])
}

void .FUNC $256 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $417([80])
	CALL $269(($3 + [16]))
	*($3 + [64]) = $1
	CALL $270(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [68])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $271(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $418($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $181 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $417([80])
	CALL $190(($3 + [16]))
	*($3 + [64]) = $1
	CALL $191(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [68])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $192(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $418($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $406 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $113(*($1), ($0 + [32]))
}

void .FUNC $180 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	*([0] + [4]) = $11
	*(($10 = $11) + [64]) = $2
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($10 + [48]) = *($1 + [80])
	*($10 + [56]) = *($1 + [88])
	$8 = *($3)
	*(($1 + [72])) = *(($8 + [8]))
	$9 = *($1)
	*($10 + [40]) = $9
	*($1 + [64]) = *($8)
	$7 = $9
	$3 = *($3 + [4])
	$8 = ($1 + [92])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	CALL $193($8, *($3), *($3 + [4]))
	$7 = *($1)
	
.LABEL $label$1
	$4 = ($0 + [36])
	CALL eosio_assert(((int_64)$9 == (int_64)$7), [1360])
	$8 = *($8)
	$5 = *(($1 + [96]))
	$6 = ($5 - $8)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[48]))
	$3 = [84]
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$3 }
	$3 = ((((int_32)((uint_32)($6 + [-48]) / (uint_32)[48]) * (int_32)[44]) + $3) + [44])
	
.LABEL $label$3
	if ( ($3 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($10 + [28]) = $8
	*($10 + [24]) = $8
	*($10 + [32]) = ($8 + $3)
	CALL $186(($10 + [24]), $1)
	CALL db_update_i64(*(($1 + [108])), $2, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($8)
	$9 = *($10 + [40])
	
.LABEL $label$6
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($10 + [4]) = $1
	*($10) = $0
	*($10 + [12]) = $1
	*($10 + [8]) = ($10 + [48])
	*($10 + [16]) = ($10 + [40])
	*($10 + [20]) = ($10 + [64])
	*($10 + [72]) = $10
	CALL $194(($10 + [72]), $4, ($4 + [1]))
	*([0] + [4]) = ($10 + [80])
}

void .FUNC $138 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$7 = *(($1 + [32]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)8759794652399468544, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $139 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $428 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$3 }
	$4 = uint_32($5 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $6 ){ goto $label$5 }
	$6 = [10]
	goto $label$4 
	
.LABEL $label$5
	$5 = *($0)
	$6 = (($5 & [-2]) + [-1])
	
.LABEL $label$4
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$6 }
	CALL $421($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	return $0
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ($5 & [1]) ){ goto $label$8 }
	$5 = ($0 + [1])
	goto $label$7 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	
.LABEL $label$7
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$10 }
	CALL memmove(($6 + $3), $6, $1)
	$2 = ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) )
	
.LABEL $label$10
	CALL memmove($6, $2, $3)
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$12 }
	*($0) = ($3 << [1])
	goto $label$11 
	
.LABEL $label$12
	*($0 + [4]) = $3
	
.LABEL $label$11
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $369 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $417([56])
	$4 = CALL $395($6)
	*($6 + [40]) = $0
	CALL $396(($8 + [32]), $4)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $397(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $269 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1824])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1824])
	return $0
}

void .FUNC $130 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)8759794652103573504, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $131($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)8759794652103573504, $5))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*(($2 + [40])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $417([48])) + [32]) = $0
	*($6 + [24]) = (int_64)0
	CALL $144(($8 + [32]), $6)
	*($6 + [40]) = [-1]
	*($6 + [36]) = $1
	*($6 + [44]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $145(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $132 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)8759794652399468544, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $137($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)8759794652399468544, $5))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*(($2 + [32])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $417([64])) + [40]) = (int_64)1398362884
	*($4 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1824])
	*($4 + [48]) = $0
	CALL $142(($8 + [32]), $4)
	*($4 + [56]) = [-1]
	*($4 + [52]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [52])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $143($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $418($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $134 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*($5 + [80]) = $2
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($5 + [64]) = *($1 + [8])
	*($5 + [72]) = *($1 + [16])
	*($1 + [8]) = (int_64)1
	$4 = *($1)
	*($5 + [56]) = $4
	*($1 + [24]) = *(*($3))
	CALL eosio_assert([1], [1360])
	CALL eosio_assert([1], [1232])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($5 + [16]), ($1 + [16]), [4])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($5 + [20]), ($1 + [24]), [8])
	CALL db_update_i64(*($1 + [36]), $2, $5, [28])
	$3 = ($0 + [36])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($5 + [36]) = $1
	*($5 + [32]) = $0
	*($5 + [44]) = $1
	*($5 + [40]) = ($5 + [64])
	*($5 + [48]) = ($5 + [56])
	*($5 + [52]) = ($5 + [80])
	*($5 + [88]) = ($5 + [32])
	CALL $141(($5 + [88]), $3, ($3 + [1]))
	*([0] + [4]) = ($5 + [96])
}

int_32 .FUNC $135 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1680])
	$6 = *($0 + [4])
	$7 = *($6 + [40])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)8759794652103573504, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [40]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$2), [1056])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $131($2, CALL $fimport$18(*($2), *($2 + [8]), (int_64)8759794652103573504, $3))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$2), [1056])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [40])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $136 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	*($6 + [80]) = $2
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($6 + [64]) = *($1 + [8])
	*($6 + [72]) = *($1 + [16])
	*($1 + [8]) = (int_64)2
	$5 = *($1)
	*($6 + [56]) = $5
	CALL eosio_assert([1], [1360])
	CALL eosio_assert([1], [1232])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($6 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($6 + [16]), ($1 + [16]), [4])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($6 + [20]), ($1 + [24]), [8])
	CALL db_update_i64(*($1 + [36]), $2, $6, [28])
	$4 = ($0 + [36])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($6 + [36]) = $1
	*($6 + [32]) = $0
	*($6 + [44]) = $1
	*($6 + [40]) = ($6 + [64])
	*($6 + [48]) = ($6 + [56])
	*($6 + [52]) = ($6 + [80])
	*($6 + [88]) = ($6 + [32])
	CALL $140(($6 + [88]), $4, ($4 + [1]))
	*([0] + [4]) = ($6 + [96])
}

int_32 .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	$10 = $11
	*([0] + [4]) = $11
	$3 = *($0 + [24])
	$8 = *(($0 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$7 = ($8 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($8 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($8 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$8 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($8)
	CALL db_get_i64($1, $3, $8)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($11 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $8)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $417([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$11 = ($5 + [16])
	$6 = ($5 + [8])
	$9 = (int_64)5462355
	$7 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [1824])
	*($5 + [24]) = $0
	CALL eosio_assert(((uint_32)$8 > (uint_32)[7]), [1024])
	CALL memcpy($5, $3, [8])
	$7 = ($8 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [1024])
	CALL memcpy($6, ($3 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [1024])
	CALL memcpy($11, ($3 + [16]), [8])
	*($5 + [32]) = [-1]
	*($5 + [28]) = $1
	*($10 + [24]) = $5
	$9 = *($5)
	*($10 + [16]) = $9
	$8 = *($5 + [28])
	*($10 + [12]) = $8
	$1 = ($0 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($7 + [8]) = $9
	*($7 + [16]) = $8
	*($10 + [24]) = [0]
	*($7) = $5
	*($1) = ($7 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $139($2, ($10 + [24]), ($10 + [16]), ($10 + [12]))
	
.LABEL $label$12
	$7 = *($10 + [24])
	*($10 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $418($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [32])
	return $5
}

void .FUNC $33 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_64 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	*(($9 = (($11 + [64]) + [8]))) = *(($5 + [8]))
	*(($10 = (($11 + [48]) + [8]))) = *(($6 + [8]))
	*($11 + [64]) = *($5)
	*($11 + [48]) = *($6)
	CALL $437(($11 + [32]), $8)
	*((($11 + [16]) + [8])) = *($9)
	*(($11 + [8])) = *($10)
	*($11 + [16]) = *($11 + [64])
	*($11) = *($11 + [48])
	CALL $350($0, $1, $2, $3, $4, ($11 + [16]), $11, $7, ($11 + [32]))
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $418(*($11 + [40]))
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [80])
}

void .FUNC $368 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($1 + [8]) = [2]
	$4 = *($1)
	CALL eosio_assert([1], [1360])
	*($5 + [40]) = ($5 + [28])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $379(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [36]), $2, $5, [28])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $300 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $417([64])) + [40]) = (int_64)1398362884
	*($4 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1824])
	*($4 + [48]) = $0
	CALL $304(($8 + [32]), $4)
	*($4 + [56]) = [-1]
	*($4 + [52]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [52])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $305($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $418($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $429 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$3 = ($6 & [1])
	if ( $3 ){ goto $label$3 }
	$4 = uint_32($6 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $3 ){ goto $label$6 }
	$5 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $3 ? $2 : ($3 <= $2) )
	$3 = ($4 - $1)
	$3 = ($3 - $2)
	if ( ($3 == 0) ){ goto $label$7 }
	$1 = ($5 + $1)
	CALL memmove($1, ($1 + $2), $3)
	$6 = *($0)
	
.LABEL $label$7
	$2 = ($4 - $2)
	if ( ($6 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($5 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $208 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $417([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [24])
	$1 = ( *(($4 + [28])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [24])
	$2 = (CASTING uint_64)(uint_32 $1)
	$5 = ($4 + [24])
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $96($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9) = $8
	*($9 + [8]) = $1
	CALL eosio_assert(((int_32)($1 - $8) > (int_32)[7]), [1232])
	CALL memcpy($8, $4, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [1232])
	CALL memcpy($6, ($4 + [8]), [8])
	$6 = ($8 + [16])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [1232])
	CALL memcpy($6, ($4 + [16]), [8])
	*($9 + [4]) = ($8 + [24])
	CALL $113($9, $5)
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $209 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
}

void .FUNC $202 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1024])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($0, *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $203 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [32]) = (int_64)0
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1824])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1824])
	*(($2 = ($0 + [72]))) = (int_64)1398362884
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [1824])
	*(($0 + [100])) = [0]
	*($0 + [92 align=4]) = (int_64)0
	return $0
}

int_32 .FUNC $200 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1232])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [1232])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $111($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [48])
	$8 = $7
	*([0] + [4]) = $7
	$2 = *($0)
	$3 = *($0 + [4])
	$6 = *($3)
	$5 = *($6 + [16])
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4983115765751853664, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $170($6, $4)
	*($8 + [36]) = [0]
	*($8 + [32]) = $6
	$5 = *(*(CALL $171(($8 + [32])) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [1488])
	$5 = *(($6 + [16]))
	*($1 + [8]) = (int_64)0
	*($1) = $5
	$3 = CALL memcpy(($1 + [16]), *($3 + [4]), [48])
	$6 = $7
	$7 = ($6 + [-64])
	*([0] + [4]) = $7
	*($8 + [16]) = ($6 + [-4])
	*($8 + [8]) = $7
	CALL eosio_assert([1], [1232])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [1232])
	CALL memcpy(($6 + [-56]), ($1 + [8]), [8])
	*($8 + [12]) = ($6 + [-48])
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($1 + [24])
	*($8 + [32]) = $3
	*($8 + [40]) = ($1 + [32])
	*($8 + [44]) = ($1 + [48])
	CALL $189(($8 + [32]), ($8 + [24]))
	$5 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)4983115765751853664, *(*($0 + [8])), $5, $7, [60])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
}

int_32 .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [1712])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = ((int_32)($4 - $7) / (int_32)[48])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $207($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ((int_32)$6 * (int_32)[48]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($8 + [28])
	
.LOOP $label$6:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [16])
	*($6) = ($7 + [32])
	*($8 + [20]) = ($7 + [8])
	CALL $202(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [48])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $207 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $6) / (int_32)[48]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ((int_32)($6 - $5) / (int_32)[48])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[89478486]) ){ goto $label$3 }
	$6 = [89478485]
	$2 = ((int_32)($2 - $5) / (int_32)[48])
	if ( ((uint_32)$2 > (uint_32)[44739241]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $417(((int_32)$6 * (int_32)[48]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	CALL $190(CALL $fimport$43($6, [0], [48]))
	$6 = (*($0) + [48])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $436($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$6 * (int_32)[48]))
	$5 = ($2 + ((int_32)$3 * (int_32)[48]))
	$6 = $5
	
.LOOP $label$8:
	$6 = CALL memset($6, [0], [48])
	CALL $190($6)
	$6 = ($6 + [48])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 + ((int_32)((int_32)$2 / (int_32)[-48]) * (int_32)[48]))
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $418($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $204 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $206($0, ($1 + [92]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[15]), [1024])
	CALL memcpy(($1 + [16]), *($0 + [4]), [16])
	$2 = (*($0 + [4]) + [16])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1024])
	CALL memcpy(($1 + [88]), *($0 + [4]), [4])
	return *($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $205 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [92])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [96])) = $6
	CALL $418($6)
	
.LABEL $label$11
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $418($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC _Z8from_hexRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPcj (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = $1
	if ( ($2 == 0) ){ goto $label$1 }
	$13 = $1
	$9 = ($9 & [1])
	$9 = *($0)
	if ( (( *($0 + [4]) ? uint_32($9 >> [1]) : $9 ) == 0) ){ goto $label$1 }
	$3 = ($0 + [1])
	$5 = ($0 + [8])
	$9 = ( *($5) ? $3 : $9 )
	$8 = ($2 + [-1])
	$13 = $1
	
.LOOP $label$2:
	$2 = *($9)
	if ( ((uint_32)(($2 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$4 }
	$2 = ($2 + [208])
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[5]) ){ goto $label$5 }
	$2 = ($2 + [169])
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)(($2 + [-65]) & [255]) > (uint_32)[5]) ){ goto $label$6 }
	$2 = ($2 + [201])
	goto $label$3 
	
.LABEL $label$6
	$2 = [0]
	CALL eosio_assert([0], [16])
	
.LABEL $label$3
	$10 = ($2 << [4])
	*($13) = $10
	$7 = ($0 + [4])
	$11 = *($7)
	$2 = *($0)
	$6 = ($2 & [1])
	$12 = *($5)
	$4 = ($9 + [1])
	if ( ((int_32)$4 == (int_32)(( $12 ? $3 : $6 ) + ( $11 ? uint_32($2 >> [1]) : $6 ))) ){ goto $label$10 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$9 }
	$2 = ($2 + [208])
	goto $label$8 
	
.LABEL $label$10
	$9 = $4
	$13 = ($13 + [1])
	if ( $8 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$9
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[5]) ){ goto $label$11 }
	$2 = ($2 + [169])
	goto $label$8 
	
.LABEL $label$11
	if ( ((uint_32)(($2 + [-65]) & [255]) > (uint_32)[5]) ){ goto $label$12 }
	$2 = ($2 + [201])
	goto $label$8 
	
.LABEL $label$12
	$2 = [0]
	CALL eosio_assert([0], [16])
	$10 = *($13)
	
.LABEL $label$8
	*($13) = ($10 | $2)
	$9 = ($9 + [2])
	$11 = *($7)
	$12 = *($5)
	$2 = *($0)
	$13 = ($13 + [1])
	if ( ($8 == 0) ){ goto $label$1 }
	
.LABEL $label$7
	$8 = ($8 + [-1])
	$4 = ($2 & [1])
	if ( ((int_32)$9 != (int_32)(( $12 ? $3 : $4 ) + ( $11 ? uint_32(($2 & [254]) >> [1]) : $4 ))) ){ goto $label$2 }
	
.LABEL $label$1
	return ($13 - $1)
}

void .FUNC _Z6to_hexPKcm (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$3 = *($1)
	CALL $425($0, *((uint_32($3 >> [4]) + [48])))
	CALL $425($0, *((($3 & [15]) + [48])))
	$1 = ($1 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$2 }
	
.LABEL $label$1
}

void .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	*($0) = (int_64)0
	*($0 + [8]) = [0]
	*($5 + [15]) = $1
	$1 = *($2)
	$3 = ( *($2 + [4]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($3 + [1])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[10]) ){ goto $label$3 }
	*($0) = [2]
	$1 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$4 = (($3 + [17]) & [-16])
	$1 = CALL $417($4)
	*($0) = ($4 | [1])
	*(($0 + [8])) = $1
	*(($0 + [4])) = [1]
	
.LABEL $label$2
	CALL memcpy($1, ($5 + [15]), [1])
	*($1 + [1]) = [0]
	CALL $423($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $3)
	*([0] + [4]) = ($5 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $419($0)
}

int_32 .FUNC _Z8from_hexc (int_32 $0)
{
	if ( ((uint_32)(($0 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$2 }
	$0 = ($0 + [208])
	goto $label$1 
	
.LABEL $label$2
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[5]) ){ goto $label$3 }
	$0 = ($0 + [169])
	goto $label$1 
	
.LABEL $label$3
	if ( ((uint_32)(($0 + [-65]) & [255]) > (uint_32)[5]) ){ goto $label$4 }
	$0 = ($0 + [201])
	goto $label$1 
	
.LABEL $label$4
	$0 = [0]
	CALL eosio_assert([0], [16])
	
.LABEL $label$1
	return ($0 & [255])
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _Z13uint64_stringy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 ((uint_64)$1 % (uint_64)(int_64)10))
	CALL $6($5, ( ($3 | [48]) ? ($3 + [55]) : ($3 <= [10]) ), $0)
	$2 = ((uint_64)$1 / (uint_64)(int_64)10)
	if ( (*($0) & [1]) ){ goto $label$3 }
	*($0) = [0]
	goto $label$2 
	
.LABEL $label$3
	*(*(($0 + [8]))) = [0]
	*($4) = [0]
	
.LABEL $label$2
	CALL $422($0, [0])
	*(($0 + [8])) = *(($5 + [8]))
	*($0) = *($5)
	$3 = ((uint_64)$1 > (uint_64)(int_64)9)
	$1 = $2
	if ( $3 ){ goto $label$1 }
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _Z13hex_to_sha256RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *($1)
	CALL eosio_assert(((int_32)( *($1 + [4]) ? uint_32($2 >> [1]) : ($2 & [1]) ) == (int_32)[64]), [80])
	CALL _Z8from_hexRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPcj($1, $0, [32])
}

void .FUNC _Z11hex_to_sha1RKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *($1)
	CALL eosio_assert(((int_32)( *($1 + [4]) ? uint_32($2 >> [1]) : ($2 & [1]) ) == (int_32)[40]), [96])
	CALL _Z8from_hexRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPcj($1, $0, [20])
}

int_32 .FUNC _Z7sub2sepRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPS5_RKcRKjRKb (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($3) != (int_32)[-1]), [112])
	$2 = CALL $430($0, *($2), *($3))
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$4 }
	$3 = *($3)
	CALL $438($5, $0, $3, ($2 - $3), $0)
	if ( (*($1) & [1]) ){ goto $label$3 }
	*($1) = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL eosio_assert(((int_32)*($4) ^ (int_32)[1]), [144])
	$2 = [-1]
	goto $label$1 
	
.LABEL $label$3
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$2
	CALL $422($1, [0])
	*(($1 + [8])) = *(($5 + [8]))
	*($1) = *($5)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
	return $2
}

int_32 .FUNC _Z12DecodeBase58PKcRNSt3__16vectorIhNS1_9allocatorIhEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	*([0] + [4]) = $12
	$10 = *($0)
	if ( ($10 == 0) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( (CALL isspace(int_32(($10 << [24]) >> [24])) == 0) ){ goto $label$3 }
	$0 = ($0 + [1])
	$10 = *($0)
	if ( $10 ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)[49]) ){ goto $label$2 }
	$10 = [0]
	
.LOOP $label$5:
	$11 = ($0 + $10)
	$8 = ($10 + [1])
	$10 = $8
	if ( ((int_32)*(($11 + [1])) == (int_32)[49]) ){ goto $label$5 }
	$0 = ($0 + $8)
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	$11 = ((uint_32)((int_32)CALL strlen($0) * (int_32)[733]) / (uint_32)[1000])
	$10 = ((int_32)$11 ^ (int_32)[-1])
	$2 = ($11 + [1])
	$3 = CALL $417($2)
	$5 = $3
	
.LOOP $label$6:
	*($5) = [0]
	$4 = $5
	$5 = ($4 + [1])
	$10 = ($10 + [1])
	if ( $10 ){ goto $label$6 }
	$11 = [0]
	$10 = *($0)
	if ( ($10 == 0) ){ goto $label$16 }
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$17 }
	$6 = [0]
	
.LOOP $label$18:
	if ( CALL isspace(int_32(($10 << [24]) >> [24])) ){ goto $label$15 }
	$10 = *($0)
	$9 = *(($10 + [176]))
	if ( ((int_32)$9 == (int_32)[-1]) ){ goto $label$13 }
	if ( ((int_32)$10 != (int_32)[49]) ){ goto $label$20 }
	$11 = [0]
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$19 }
	
.LABEL $label$20
	$11 = [0]
	$10 = $5
	
.LOOP $label$21:
	$7 = (((int_32)*($10) * (int_32)[58]) + $9)
	*(($10 = ($10 + [-1]))) = $7
	$11 = ($11 + [1])
	$9 = ((int_32)$7 / (int_32)[256])
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$19 }
	if ( (((uint_32)($7 + [255]) > (uint_32)[510]) | ((int_32)$11 < (int_32)$6)) ){ goto $label$21 }
	
.LABEL $label$19
	if ( $9 ){ goto $label$7 }
	$10 = *($0 + [1])
	$6 = $11
	$7 = ($0 + [1])
	$0 = $7
	if ( $10 ){ goto $label$18 }
	goto $label$14 
	
.LABEL $label$17
	
.LOOP $label$22:
	if ( CALL isspace(int_32(($10 << [24]) >> [24])) ){ goto $label$16 }
	$10 = *($0)
	if ( ((int_32)*(($10 + [176])) == (int_32)[255]) ){ goto $label$10 }
	if ( ((int_32)$10 != (int_32)[49]) ){ goto $label$7 }
	$0 = ($0 + [1])
	$10 = *($0)
	if ( $10 ){ goto $label$22 }
	$11 = [0]
	
.LABEL $label$16
	$7 = $0
	goto $label$14 
	
.LABEL $label$15
	$7 = $0
	$11 = $6
	
.LABEL $label$14
	$10 = ($7 + [-1])
	
.LOOP $label$23:
	$10 = ($10 + [1])
	if ( CALL isspace(*($10)) ){ goto $label$23 }
	$7 = [0]
	if ( (*($10) == 0) ){ goto $label$24 }
	if ( $3 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$24
	$11 = ($3 + ($2 - $11))
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$12 }
	$9 = ([0] - $4)
	$7 = *($12 + [8])
	
.LOOP $label$26:
	$10 = $11
	if ( *($10) ){ goto $label$25 }
	$7 = $10
	$11 = ($10 + [1])
	if ( ((int_32)($11 + $9) != (int_32)[1]) ){ goto $label$26 }
	$10 = $11
	$7 = $4
	
.LABEL $label$25
	*($12 + [8]) = $7
	goto $label$11 
	
.LABEL $label$13
	$7 = [0]
	if ( $3 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$12
	$10 = $5
	
.LABEL $label$11
	$11 = (($5 - $11) + $8)
	$7 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $7) >= (uint_32)$11) ){ goto $label$27 }
	$9 = *($1 + [4])
	$7 = *($1)
	$9 = (*($1 + [4]) - $7)
	$0 = CALL $417($11)
	$2 = ($0 + ($9 - $7))
	$6 = ($2 - $9)
	$11 = ($0 + $11)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$28 }
	CALL memcpy($6, $7, $9)
	$7 = *($1)
	
.LABEL $label$28
	*($1) = $6
	*(($1 + [4])) = $2
	*(($1 + [8])) = $11
	if ( ($7 == 0) ){ goto $label$27 }
	CALL $418($7)
	
.LABEL $label$27
	*($12 + [7]) = [0]
	CALL $18($1, $8, ($12 + [7]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$29 }
	$5 = ($4 + [1])
	$6 = ($1 + [8])
	$7 = ($1 + [4])
	
.LOOP $label$30:
	$11 = ($10 + [1])
	$9 = *($7)
	if ( ((int_32)$9 == (int_32)*($6)) ){ goto $label$32 }
	*($9) = *($10)
	*($7) = (*($7) + [1])
	goto $label$31 
	
.LABEL $label$32
	CALL $19($1, $10)
	
.LABEL $label$31
	$10 = $11
	if ( ((int_32)$5 != (int_32)$11) ){ goto $label$30 }
	
.LABEL $label$29
	$7 = [1]
	if ( $3 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$7 = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $418($3)
	
.LABEL $label$8
	*([0] + [4]) = ($12 + [16])
	return $7
	
.LABEL $label$7
	CALL __assert_fail([432], [448], [164], [496])
	return (unreachable)
}

void .FUNC _Z13sha256_to_hexRK11checksum256 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	
.LOOP $label$1:
	$2 = *(($1 + $3))
	CALL $425($0, *((uint_32($2 >> [4]) + [48])))
	CALL $425($0, *((($2 & [15]) + [48])))
	$3 = ($3 + [1])
	if ( ((int_32)$3 != (int_32)[32]) ){ goto $label$1 }
}

void .FUNC _Z11sha1_to_hexRK11checksum160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	
.LOOP $label$1:
	$2 = *(($1 + $3))
	CALL $425($0, *((uint_32($2 >> [4]) + [48])))
	CALL $425($0, *((($2 & [15]) + [48])))
	$3 = ($3 + [1])
	if ( ((int_32)$3 != (int_32)[20]) ){ goto $label$1 }
}

int_64 .FUNC _Z11uint64_hashRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$2 = *($0)
	$3 = ($2 & [1])
	$5 = ( *($0 + [8]) ? ($0 + [1]) : $3 )
	$3 = ( *($0 + [4]) ? uint_32($2 >> [1]) : $3 )
	if ( ($3 <= [4]) ){ goto $label$4 }
	$1 = ($3 + [-4])
	$0 = $5
	$2 = $3
	
.LOOP $label$5:
	CALL memcpy(($6 + [12]), $0, [4])
	$4 = ((int_32)*($6 + [12]) * (int_32)[1540483477])
	$2 = ((int_32)((int_32)((int_32)uint_32($4 >> [24]) ^ (int_32)$4) * (int_32)[1540483477]) ^ (int_32)((int_32)$2 * (int_32)[1540483477]))
	$0 = ($0 + [4])
	$3 = ($3 + [-4])
	if ( ((uint_32)$3 > (uint_32)[3]) ){ goto $label$5 }
	$0 = ($1 & [-4])
	$5 = (($5 + $0) + [4])
	$3 = ($1 - $0)
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$2 = $3
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$6 }
	if ( ((int_32)$3 != (int_32)[3]) ){ goto $label$1 }
	$2 = ((int_32)(*($5 + [2]) << [16]) ^ (int_32)$2)
	
.LABEL $label$6
	$2 = ((int_32)(*($5 + [1]) << [8]) ^ (int_32)$2)
	
.LABEL $label$2
	$2 = ((int_32)((int_32)*($5) ^ (int_32)$2) * (int_32)[1540483477])
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [16])
	$0 = ((int_32)((int_32)uint_32($2 >> [13]) ^ (int_32)$2) * (int_32)[1540483477])
	return (CASTING uint_64)(uint_32 ((int_32)uint_32($0 >> [15]) ^ (int_32)$0))
}

int_64 .FUNC _Z11uint64_hashRK11checksum256 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	
.LOOP $label$1:
	$2 = *(($0 + $3))
	CALL $425($4, *((uint_32($2 >> [4]) + [48])))
	CALL $425($4, *((($2 & [15]) + [48])))
	$3 = ($3 + [1])
	if ( ((int_32)$3 != (int_32)[32]) ){ goto $label$1 }
	$1 = CALL _Z11uint64_hashRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	CALL $418(*(($4 + [8])))
	
.LABEL $label$2
	*([0] + [4]) = ($4 + [16])
	return $1
}

void .FUNC $39 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_64 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	*(($9 = (($11 + [64]) + [8]))) = *(($5 + [8]))
	*(($10 = (($11 + [48]) + [8]))) = *(($6 + [8]))
	*($11 + [64]) = *($5)
	*($11 + [48]) = *($6)
	CALL $437(($11 + [32]), $8)
	*((($11 + [16]) + [8])) = *($9)
	*(($11 + [8])) = *($10)
	*($11 + [16]) = *($11 + [64])
	*($11) = *($11 + [48])
	CALL $350($0, $1, $2, $3, $4, ($11 + [16]), $11, $7, ($11 + [32]))
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $418(*($11 + [40]))
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [80])
}

void .FUNC $18 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *($0)
	$3 = *($0 + [8])
	if ( ((uint_32)($3 - $5) >= (uint_32)$1) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $418($5)
	$3 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$1 }
	$4 = [2147483647]
	if ( ((uint_32)$3 > (uint_32)[1073741822]) ){ goto $label$6 }
	$5 = ($3 << [1])
	$4 = ( $1 ? $5 : ($5 <= $1) )
	
.LABEL $label$6
	$5 = CALL $417($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($5) = *($2)
	$5 = (*($0) + [1])
	*($0) = $5
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$3 = (*($0 + [4]) - $5)
	$4 = ( $3 ? $1 : ($3 <= $1) )
	if ( ($4 == 0) ){ goto $label$8 }
	CALL memset($5, *($2), $4)
	
.LABEL $label$8
	if ( ((uint_32)$3 >= (uint_32)$1) ){ goto $label$2 }
	$1 = ($3 - $1)
	$5 = ($0 + [4])
	$0 = *($5)
	
.LOOP $label$9:
	*($0) = *($2)
	$0 = (*($5) + [1])
	*($5) = $0
	$1 = ($1 + [1])
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = (*($0) + $1)
	return (unreachable)
	
.LABEL $label$1
	CALL $436($0)
}

void .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$3 = ($5 - $4)
	$7 = ($3 + [1])
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [2147483647]
	$2 = (*($0 + [8]) - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$4 }
	$6 = ($2 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $417($6)
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	*(($3 = ($7 + $3))) = *($1)
	$5 = ($5 - $4)
	$1 = ($3 - $5)
	$6 = ($7 + $6)
	$7 = ($3 + [1])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $4, $5)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $338 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [128])
	*([0] + [4]) = $15
	$10 = (int_64)0
	$12 = (int_64)59
	$7 = [1040]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$2 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$6 = ($6 + [165])
	goto $label$3 
	
.LABEL $label$4
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$1 }
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [2992]
	$11 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$10 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$6 = ($6 + [165])
	goto $label$8 
	
.LABEL $label$10
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$6
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$5 }
	$10 = (int_64)0
	$12 = (int_64)59
	$7 = [1040]
	$13 = (int_64)0
	
.LOOP $label$11:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$12 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$6 = ($6 + [165])
	goto $label$13 
	
.LABEL $label$14
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$12
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$9 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$11 }
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [4160]
	$14 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$20 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$6 = ($6 + [165])
	goto $label$18 
	
.LABEL $label$20
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$16
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$14 = ((int_64)$12 | (int_64)$14)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$15 }
	*(($15 + [52])) = *(($5 + [12]))
	*(($15 + [48])) = *(($5 + [8]))
	*((($15 + [8]) + [36])) = *(($5 + [4]))
	*($15 + [16]) = $2
	*($15 + [8]) = $1
	*($15 + [24]) = $3
	*($15 + [32]) = $4
	*($15 + [40]) = *($5)
	*($15 + [56]) = $13
	*($15 + [64]) = $14
	*(($7 = CALL $417([16]))) = $8
	*($7 + [8]) = $11
	*(($6 = ($15 + [88]))) = [0]
	$5 = ($7 + [16])
	*(($15 + [80])) = $5
	*(($15 + [76])) = $5
	*($15 + [72]) = $7
	*($15 + [84]) = [0]
	*((($15 + [56]) + [36])) = [0]
	CALL $96(($15 + [84]), [48])
	$7 = *($6)
	$6 = *($15 + [84])
	*($15 + [100]) = $6
	*($15 + [96]) = $6
	*($15 + [104]) = $7
	*($15 + [112]) = ($15 + [96])
	*($15 + [120]) = ($15 + [8])
	CALL $339(($15 + [120]), ($15 + [112]))
	CALL $109(($15 + [96]), ($15 + [56]))
	$7 = *($15 + [96])
	CALL send_inline($7, (*($15 + [100]) - $7))
	$7 = *($15 + [96])
	if ( ($7 == 0) ){ goto $label$21 }
	*($15 + [100]) = $7
	CALL $418($7)
	
.LABEL $label$21
	$7 = *($15 + [84])
	if ( ($7 == 0) ){ goto $label$22 }
	*(($15 + [88])) = $7
	CALL $418($7)
	
.LABEL $label$22
	$7 = *($15 + [72])
	if ( ($7 == 0) ){ goto $label$23 }
	*(($15 + [76])) = $7
	CALL $418($7)
	
.LABEL $label$23
	*([0] + [4]) = ($15 + [128])
}

void .FUNC $339 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($3 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($3 + [16]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($0 + [4]), ($3 + [24]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((int_32)(*($1 + [8]) - *($1 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($1 + [4]), ($3 + [32]), [8])
	$0 = (*($1 + [4]) + [8])
	*($1 + [4]) = $0
	CALL eosio_assert(((int_32)(*($1 + [8]) - $0) > (int_32)[7]), [1232])
	CALL memcpy(*($1 + [4]), ($3 + [40]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $336 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $337 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [32]), *($1 + [4]), [8])
	$0 = (*($1 + [4]) + [8])
	*($1 + [4]) = $0
	CALL eosio_assert(((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [40]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

int_32 .FUNC $334 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	$7 = ($4 + $6)
	*($8 + [16]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [16]))
	$4 = *($8 + [12])
	
.LABEL $label$7
	$6 = CALL $417([80])
	$3 = ($6 + [16])
	CALL $332($3)
	*($6 + [64]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [1024])
	CALL memcpy($6, $4, [8])
	$2 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($6 + [8]), $2, [8])
	*($8 + [12]) = ($4 + [16])
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [24])
	*($8 + [32]) = $3
	*($8 + [40]) = ($6 + [32])
	*($8 + [44]) = ($6 + [48])
	CALL $331(($8 + [32]), ($8 + [24]))
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [68])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $336(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $335 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
}

int_32 .FUNC $332 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1824])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1824])
	return $0
}

void .FUNC $333 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *(($4 + [48]))
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [52])) = $6
	CALL $418($6)
	
.LABEL $label$7
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *(($4 + [48]))
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [52])) = $6
	CALL $418($6)
	
.LABEL $label$10
	CALL $418($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
}

void .FUNC $330 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $6) / (int_32)[48]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ((int_32)($6 - $5) / (int_32)[48])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[89478486]) ){ goto $label$3 }
	$6 = [89478485]
	$2 = ((int_32)($2 - $5) / (int_32)[48])
	if ( ((uint_32)$2 > (uint_32)[44739241]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $417(((int_32)$6 * (int_32)[48]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	CALL $332(CALL $fimport$43($6, [0], [48]))
	$6 = (*($0) + [48])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $436($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$6 * (int_32)[48]))
	$5 = ($2 + ((int_32)$3 * (int_32)[48]))
	$6 = $5
	
.LOOP $label$8:
	$6 = CALL memset($6, [0], [48])
	CALL $332($6)
	$6 = ($6 + [48])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 + ((int_32)((int_32)$2 / (int_32)[-48]) * (int_32)[48]))
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $418($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $331 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1024])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($0, *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $417([24])) + [12]) = $0
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1024])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [1024])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [20]) = [-1]
	*($6 + [16]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [16])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $128(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $117 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($6 + [24]) = *($1 + [8])
	$5 = *($1)
	*($1 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [1360])
	CALL eosio_assert([1], [1232])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [1232])
	$4 = ($1 + [8])
	CALL memcpy(($6 | [8]), $4, [4])
	CALL db_update_i64(*($1 + [16]), $2, $6, [12])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($6 + [40]) = *($4)
	if ( (CALL memcmp(($6 + [24]), ($6 + [40]), [8]) == 0) ){ goto $label$2 }
	$4 = *($1 + [20])
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$3 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020369734423933472, ($6 + [32]), $5)
	*(($1 + [20])) = $4
	
.LABEL $label$3
	CALL db_idx64_update($4, $2, ($6 + [40]))
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*(($3 = ($5 + [24]))) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5) = [0]
	*($5 + [32]) = (int_64)100
	*($5 + [40]) = [0]
	CALL $129($0, $5)
	$4 = *($0 + [8])
	$2 = *($0 + [4])
	*($3) = (int_64)0
	*($5 + [16]) = (int_64)10000
	*($5) = [1]
	*($5 + [32]) = (int_64)102
	*($5 + [40]) = [1]
	if ( ((uint_32)$2 >= (uint_32)$4) ){ goto $label$2 }
	CALL memcpy($2, $5, [48])
	$2 = (*($2) + [48])
	*(($2 = ($0 + [4]))) = $2
	goto $label$1 
	
.LABEL $label$2
	CALL $129($0, $5)
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)0
	*($5 + [16]) = (int_64)20500
	*($5) = [2]
	*($5 + [32]) = (int_64)104
	*($5 + [40]) = [2]
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [8]))) ){ goto $label$4 }
	CALL memcpy($2, $5, [48])
	$2 = (*($2) + [48])
	*(($2 = ($0 + [4]))) = $2
	goto $label$3 
	
.LABEL $label$4
	CALL $129($0, $5)
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	*(($5 + [24])) = (int_64)0
	*($5 + [16]) = (int_64)43100
	*($5) = [3]
	*($5 + [32]) = (int_64)106
	*($5 + [40]) = [4]
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [8]))) ){ goto $label$6 }
	CALL memcpy($2, $5, [48])
	$2 = (*($2) + [48])
	*(($2 = ($0 + [4]))) = $2
	goto $label$5 
	
.LABEL $label$6
	CALL $129($0, $5)
	$2 = *(($0 + [4]))
	
.LABEL $label$5
	*(($5 + [24])) = (int_64)0
	*($5 + [16]) = (int_64)92700
	*($5) = [4]
	*($5 + [32]) = (int_64)108
	*($5 + [40]) = [8]
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [8]))) ){ goto $label$8 }
	CALL memcpy($2, $5, [48])
	$2 = (*($2) + [48])
	*(($2 = ($0 + [4]))) = $2
	goto $label$7 
	
.LABEL $label$8
	CALL $129($0, $5)
	$2 = *(($0 + [4]))
	
.LABEL $label$7
	*(($5 + [24])) = (int_64)0
	*($5 + [16]) = (int_64)204000
	*($5) = [5]
	*($5 + [32]) = (int_64)110
	*($5 + [40]) = [19]
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [8]))) ){ goto $label$10 }
	CALL memcpy($2, $5, [48])
	$2 = (*($2) + [48])
	*(($2 = ($0 + [4]))) = $2
	goto $label$9 
	
.LABEL $label$10
	CALL $129($0, $5)
	$2 = *(($0 + [4]))
	
.LABEL $label$9
	*(($5 + [24])) = (int_64)0
	*($5 + [16]) = (int_64)459000
	*($5) = [6]
	*($5 + [32]) = (int_64)112
	*($5 + [40]) = [45]
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [8]))) ){ goto $label$12 }
	CALL memcpy($2, $5, [48])
	$2 = (*($2) + [48])
	*(($2 = ($0 + [4]))) = $2
	goto $label$11 
	
.LABEL $label$12
	CALL $129($0, $5)
	$2 = *(($0 + [4]))
	
.LABEL $label$11
	*(($5 + [24])) = (int_64)0
	*($5 + [16]) = (int_64)1055700
	*($5) = [7]
	*($5 + [32]) = (int_64)114
	*($5 + [40]) = [108]
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [8]))) ){ goto $label$14 }
	CALL memcpy($2, $5, [48])
	$2 = (*($2) + [48])
	*(($2 = ($0 + [4]))) = $2
	goto $label$13 
	
.LABEL $label$14
	CALL $129($0, $5)
	$2 = *(($0 + [4]))
	
.LABEL $label$13
	*(($5 + [24])) = (int_64)0
	*($5 + [16]) = (int_64)2480900
	*($5 + [32]) = (int_64)116
	*($5 + [40]) = [265]
	*($5) = [8]
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [8]))) ){ goto $label$16 }
	CALL memcpy($2, $5, [48])
	$2 = (*($2) + [48])
	*(($2 = ($0 + [4]))) = $2
	goto $label$15 
	
.LABEL $label$16
	CALL $129($0, $5)
	$2 = *(($0 + [4]))
	
.LABEL $label$15
	*(($5 + [24])) = (int_64)0
	*($5 + [16]) = (int_64)5954200
	*($5) = [9]
	*($5 + [32]) = (int_64)118
	*($5 + [40]) = [659]
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [8]))) ){ goto $label$18 }
	CALL memcpy($2, $5, [48])
	$2 = (*($2) + [48])
	*(($2 = ($0 + [4]))) = $2
	goto $label$17 
	
.LABEL $label$18
	CALL $129($0, $5)
	$2 = *(($0 + [4]))
	
.LABEL $label$17
	*(($5 + [24])) = (int_64)0
	*($5 + [16]) = (int_64)14587800
	*($5) = [10]
	*($5 + [32]) = (int_64)120
	*($5 + [40]) = [1669]
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [8]))) ){ goto $label$20 }
	CALL memcpy($2, $5, [48])
	*(($0 = ($0 + [4]))) = (*($0) + [48])
	goto $label$19 
	
.LABEL $label$20
	CALL $129($0, $5)
	
.LABEL $label$19
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $115 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3020369734423933472, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [12]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$8 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-3020369734423933472, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$2 = CALL $116($4, $8)
	CALL eosio_assert(((int_32)*($2 + [12]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*($2 + [20]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1232])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1232])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $113(*($1), ($0 + [32]))
}

int_32 .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1232])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1232])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [1232])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1232])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1232])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1232])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1232])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC __lock (int_32 $0)
{
	*($0) = [1]
}

int_32 .FUNC __stdio_close (int_32 $0)
{
	return [0]
}

int_32 .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $417([48])) + [36]) = $0
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1024])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((uint_32)($4 + [-8]) > (uint_32)[15]), [1024])
	CALL memcpy(($6 + [16]), ($7 + [8]), [16])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[24]), [1024])
	CALL memcpy(($6 + [32]), ($7 + [24]), [4])
	*($6 + [40]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [40])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $127(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $417([48])) + [24]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [32]) = $0
	CALL $126(($8 + [32]), $6)
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $125(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $299 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$9 = *($0 + [24])
	$4 = ($0 + [28])
	$10 = *($4)
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $9)
	$11 = ($10 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$2) ){ goto $label$1 }
	$10 = $11
	$7 = ($11 + [-24])
	$11 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$10 != (int_32)$9), [2576])
	$9 = ($10 + [-24])
	$3 = *($4)
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$5:
	$11 = *($10)
	*($10) = [0]
	$4 = *($9)
	*($9) = $11
	if ( ($4 == 0) ){ goto $label$6 }
	$5 = *($4 + [8])
	if ( ($5 == 0) ){ goto $label$7 }
	$8 = ($4 + [12])
	$11 = *($8)
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$9 }
	$6 = ([0] - $5)
	$11 = ($11 + [-16])
	
.LOOP $label$10:
	$7 = *($11)
	if ( ($7 == 0) ){ goto $label$11 }
	*(($11 + [4])) = $7
	CALL $418($7)
	
.LABEL $label$11
	$11 = ($11 + [-48])
	if ( ((int_32)($11 + $6) != (int_32)[-16]) ){ goto $label$10 }
	$11 = *(($4 + [8]))
	goto $label$8 
	
.LABEL $label$9
	$11 = $5
	
.LABEL $label$8
	*($8) = $5
	CALL $418($11)
	
.LABEL $label$7
	CALL $418($4)
	
.LABEL $label$6
	*($9 + [8]) = *($10 + [8])
	*(($9 + [16])) = *(($10 + [16]))
	$9 = ($9 + [24])
	$10 = ($10 + [24])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$5 }
	$10 = *(($0 + [28]))
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$12:
	$10 = ($10 + [-24])
	$4 = *($10)
	*($10) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	$5 = *($4 + [8])
	if ( ($5 == 0) ){ goto $label$14 }
	$3 = ($4 + [12])
	$11 = *($3)
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$16 }
	$6 = ([0] - $5)
	$11 = ($11 + [-16])
	
.LOOP $label$17:
	$7 = *($11)
	if ( ($7 == 0) ){ goto $label$18 }
	*(($11 + [4])) = $7
	CALL $418($7)
	
.LABEL $label$18
	$11 = ($11 + [-48])
	if ( ((int_32)($11 + $6) != (int_32)[-16]) ){ goto $label$17 }
	$11 = *(($4 + [8]))
	goto $label$15 
	
.LABEL $label$16
	$11 = $5
	
.LABEL $label$15
	*($3) = $5
	CALL $418($11)
	
.LABEL $label$14
	CALL $418($4)
	
.LABEL $label$13
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$12 }
	
.LABEL $label$3
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [24]))
}

void .FUNC $298 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$7 = *(($1 + [32]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4983115765975810048, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $295 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = [0]
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1680])
	$8 = *($0 + [4])
	$6 = *($8 + [80])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$1 }
	$6 = *(*($0))
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)4983115765679915008, ($9 + [8]), *($8))
	*(*(($0 + [4])) + [80]) = $6
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($6, ($9 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$3 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$2), [1056])
	goto $label$5 
	
.LABEL $label$6
	$7 = [0]
	$6 = CALL db_find_i64(*($2), *($2 + [8]), (int_64)4983115765679915008, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $279($2, $6)
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)$2), [1056])
	
.LABEL $label$5
	*($7 + [80]) = $1
	
.LABEL $label$2
	*(($0 + [4])) = $7
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $294 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*(($11 = $9) + [64]) = $2
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($11 + [48]) = *($1 + [48])
	*($11 + [56]) = *($1 + [56])
	*($1 + [48]) = (int_64)1
	$10 = *($1)
	*($11 + [40]) = $10
	CALL eosio_assert([1], [1360])
	$5 = *($1 + [60])
	$4 = *(($1 + [64]))
	$6 = ($4 - $5)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[48]))
	$7 = [52]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$2 }
	$7 = ((((int_32)((uint_32)($6 + [-48]) / (uint_32)[48]) * (int_32)[44]) + $7) + [44])
	
.LABEL $label$2
	if ( ($7 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($7)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($11 + [28]) = $9
	*($11 + [24]) = $9
	*($11 + [32]) = ($9 + $7)
	CALL $307(($11 + [24]), $1)
	CALL db_update_i64(*(($1 + [76])), $2, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL free($9)
	$10 = *($11 + [40])
	
.LABEL $label$5
	$7 = ($0 + [36])
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($11 + [4]) = $1
	*($11) = $0
	*($11 + [12]) = $1
	*($11 + [8]) = ($11 + [48])
	*($11 + [16]) = ($11 + [40])
	*($11 + [20]) = ($11 + [64])
	*($11 + [72]) = $11
	CALL $311(($11 + [72]), $7, ($7 + [1]))
	*([0] + [4]) = ($11 + [80])
}

int_32 .FUNC $297 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	$10 = $11
	*([0] + [4]) = $11
	$3 = *($0 + [24])
	$8 = *(($0 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$7 = ($8 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($8 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($8 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$8 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($8)
	CALL db_get_i64($1, $3, $8)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($11 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $8)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $417([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$11 = ($5 + [16])
	$6 = ($5 + [8])
	$9 = (int_64)5462355
	$7 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [1824])
	*($5 + [24]) = $0
	CALL eosio_assert(((uint_32)$8 > (uint_32)[7]), [1024])
	CALL memcpy($5, $3, [8])
	$7 = ($8 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [1024])
	CALL memcpy($6, ($3 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [1024])
	CALL memcpy($11, ($3 + [16]), [8])
	*($5 + [32]) = [-1]
	*($5 + [28]) = $1
	*($10 + [24]) = $5
	$9 = *($5)
	*($10 + [16]) = $9
	$8 = *($5 + [28])
	*($10 + [12]) = $8
	$1 = ($0 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($7 + [8]) = $9
	*($7 + [16]) = $8
	*($10 + [24]) = [0]
	*($7) = $5
	*($1) = ($7 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $306($2, ($10 + [24]), ($10 + [16]), ($10 + [12]))
	
.LABEL $label$12
	$7 = *($10 + [24])
	*($10 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $418($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [32])
	return $5
}

void .FUNC $296 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*(($11 = $9) + [64]) = $2
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	*($11 + [48]) = *($1 + [48])
	*($11 + [56]) = *($1 + [56])
	*($1 + [48]) = (int_64)2
	$10 = *($1)
	*($11 + [40]) = $10
	CALL eosio_assert([1], [1360])
	$5 = *($1 + [60])
	$4 = *(($1 + [64]))
	$6 = ($4 - $5)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[48]))
	$7 = [52]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$2 }
	$7 = ((((int_32)((uint_32)($6 + [-48]) / (uint_32)[48]) * (int_32)[44]) + $7) + [44])
	
.LABEL $label$2
	if ( ($7 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($7)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($11 + [28]) = $9
	*($11 + [24]) = $9
	*($11 + [32]) = ($9 + $7)
	CALL $307(($11 + [24]), $1)
	CALL db_update_i64(*(($1 + [76])), $2, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL free($9)
	$10 = *($11 + [40])
	
.LABEL $label$5
	$7 = ($0 + [36])
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($11 + [4]) = $1
	*($11) = $0
	*($11 + [12]) = $1
	*($11 + [8]) = ($11 + [48])
	*($11 + [16]) = ($11 + [40])
	*($11 + [20]) = ($11 + [64])
	*($11 + [72]) = $11
	CALL $308(($11 + [72]), $7, ($7 + [1]))
	*([0] + [4]) = ($11 + [80])
}

void .FUNC $291 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = *($0)
	$8 = ((int_32)(*($0 + [4]) - $9) / (int_32)[48])
	$7 = ($8 + [1])
	if ( ((uint_32)$7 >= (uint_32)[89478486]) ){ goto $label$2 }
	$6 = [89478485]
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[48])
	if ( ((uint_32)$9 > (uint_32)[44739241]) ){ goto $label$4 }
	$9 = ($9 << [1])
	$6 = ( $7 ? $9 : ($9 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $417(((int_32)$6 * (int_32)[48]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	*(($9 = ($7 + ((int_32)$8 * (int_32)[48])))) = *($1)
	*(($9 + [24])) = *(($1 + [24]))
	*(($9 + [16])) = *(($1 + [16]))
	*(($9 + [8])) = *(($1 + [8]))
	*($9 + [32]) = [0]
	*(($8 = ($9 + [36]))) = [0]
	*(($4 = ($9 + [40]))) = [0]
	$5 = (*(($1 + [36])) - *($1 + [32]))
	$3 = int_32($5 >> [5])
	if ( ($3 == 0) ){ goto $label$6 }
	$2 = ($9 + [32])
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$5 }
	$5 = CALL $417($5)
	*($2) = $5
	*($8) = $5
	*($4) = ($5 + ($3 << [5]))
	$3 = *(($1 + [32]))
	$1 = (*(($1 + [36])) - $3)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($5, $3, $1)
	*($8) = (*($8) + $1)
	
.LABEL $label$6
	$3 = ($7 + ((int_32)$6 * (int_32)[48]))
	$4 = ($9 + [48])
	$1 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$8 }
	$5 = ([0] - $1)
	$1 = ($6 + [-48])
	
.LOOP $label$9:
	*(($9 + [-48])) = *($1)
	*(($9 + [-24])) = *(($1 + [24]))
	*(($9 + [-32])) = *(($1 + [16]))
	*(($9 + [-40])) = *(($1 + [8]))
	*(($6 = ($9 + [-16]))) = [0]
	*(($7 = ($9 + [-12]))) = [0]
	$8 = ($1 + [32])
	*($6) = *($8)
	*(($6 = ($9 + [-8]))) = [0]
	*($7) = *(($1 + [36]))
	$7 = ($1 + [40])
	*($6) = *($7)
	*($7) = [0]
	*($8) = (int_64)0
	$9 = ($9 + [-48])
	$1 = ($1 + [-48])
	if ( ((int_32)($1 + $5) != (int_32)[-48]) ){ goto $label$9 }
	$1 = *(($0 + [4]))
	$7 = *($0)
	goto $label$7 
	
.LABEL $label$8
	$7 = $1
	
.LABEL $label$7
	*($0) = $9
	*(($0 + [4])) = $4
	*(($0 + [8])) = $3
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$10 }
	$6 = ([0] - $7)
	$9 = ($1 + [-16])
	
.LOOP $label$11:
	$1 = *($9)
	if ( ($1 == 0) ){ goto $label$12 }
	*(($9 + [4])) = $1
	CALL $418($1)
	
.LABEL $label$12
	$9 = ($9 + [-48])
	if ( ((int_32)($9 + $6) != (int_32)[-16]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($7 == 0) ){ goto $label$13 }
	CALL $418($7)
	
.LABEL $label$13
	return (unreachable)
	
.LABEL $label$5
	CALL $436($2)
	(unreachable)
}

void .FUNC $290 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $417([80])) + [32]) = (int_64)0
	*($4 + [24]) = (int_64)0
	*($4 + [40]) = (int_64)1398362884
	CALL eosio_assert([1], [1760])
	$2 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1824])
	*($4 + [56]) = [0]
	*($4 + [48 align=4]) = (int_64)0
	*($4 + [64]) = $1
	CALL $316(($7 + [16]), $4)
	*($7 + [32]) = $4
	$2 = *($4)
	*($7 + [16]) = $2
	$6 = *($4 + [68])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $2
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $317(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	$4 = *(($3 + [48]))
	if ( ($4 == 0) ){ goto $label$9 }
	*(($3 + [52])) = $4
	CALL $418($4)
	
.LABEL $label$9
	CALL $418($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $293 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $417([32])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [20]) = $1
	CALL $312(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$5 = *($3 + [24])
	*($7 + [12]) = $5
	$6 = ($1 + [28])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($4 + [8]) = $2
	*($4 + [16]) = $5
	*($7 + [32]) = [0]
	*($4) = $3
	*($6) = ($4 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $313(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$4 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$5 = *($4 + [8])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($4 + [12])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$6 }
	$0 = ([0] - $5)
	$3 = ($3 + [-16])
	
.LOOP $label$7:
	$1 = *($3)
	if ( ($1 == 0) ){ goto $label$8 }
	*(($3 + [4])) = $1
	CALL $418($1)
	
.LABEL $label$8
	$3 = ($3 + [-48])
	if ( ((int_32)($3 + $0) != (int_32)[-16]) ){ goto $label$7 }
	$3 = *(($4 + [8]))
	goto $label$5 
	
.LABEL $label$6
	$3 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $418($3)
	
.LABEL $label$4
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $292 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [48])
	$11 = $12
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	$8 = [8]
	$4 = *($1)
	$9 = $4
	$3 = *($3)
	$10 = ($1 + [8])
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$1 }
	CALL $282($10, *($3), *($3 + [4]))
	$9 = *($1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)$9), [1360])
	$10 = *($10)
	$5 = *(($1 + [12]))
	$9 = (CASTING uint_64)(uint_32 ((int_32)($5 - $10) / (int_32)[48]))
	
.LOOP $label$2:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$4:
	$8 = ($8 + [28])
	$7 = *($10 + [32])
	$3 = *(($10 + [36]))
	$6 = ($3 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	
.LOOP $label$5:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	$8 = (($6 & [-32]) + $8)
	
.LABEL $label$6
	$10 = ($10 + [48])
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ($8 <= [513]) ){ goto $label$8 }
	$5 = CALL malloc($8)
	goto $label$7 
	
.LABEL $label$8
	$5 = ($12 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$7
	*($11 + [8]) = $5
	$6 = ($5 + $8)
	*($11 + [16]) = $6
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [1232])
	CALL memcpy($5, $1, [8])
	$10 = ($5 + [8])
	*($11 + [12]) = $10
	$9 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [12])) - *(($1 + [8]))) / (int_32)[48]))
	
.LOOP $label$9:
	$3 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$7 = ((int_64)$9) != (int_64)0
	*($11 + [32]) = (($7) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)($6 - $10) > (int_32)[0]), [1232])
	CALL memcpy($10, ($11 + [32]), [1])
	$10 = ($10 + [1])
	*($11 + [12]) = $10
	if ( $7 ){ goto $label$9 }
	$3 = *(($1 + [12]))
	$10 = *(($1 + [8]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$10 }
	$7 = (($11 + [32]) + [12])
	
.LOOP $label$11:
	*($11 + [24]) = ($11 + [8])
	*($11 + [32]) = $10
	*((($11 + [32]) + [8])) = ($10 + [16])
	*($7) = ($10 + [32])
	*($11 + [36]) = ($10 + [8])
	CALL $314(($11 + [32]), ($11 + [24]))
	$10 = ($10 + [48])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$11 }
	
.LABEL $label$10
	CALL db_update_i64(*($1 + [24]), $2, $5, $8)
	if ( ($8 <= [513]) ){ goto $label$12 }
	CALL free($5)
	
.LABEL $label$12
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*([0] + [4]) = ($11 + [48])
}

void .FUNC $407 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1232])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [1232])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [1232])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1232])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1232])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $349 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*(($4 = CALL $417([24])) + [8]) = $1
	*($4) = (int_64)0
	*($4) = *(*($3))
	CALL eosio_assert([1], [1232])
	CALL memcpy(($8 + [16]), $4, [8])
	$5 = *($4)
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)-5920782797423585936, $2, $5, ($8 + [16]), [8])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [8]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$6 = *($4 + [12])
	*($8 + [4]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [8]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $348(($1 + [24]), ($8 + [8]), ($8 + [16]), ($8 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [8])
	*($8 + [8]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $418($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $348 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $418($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $347 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [2464])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [2512])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2576])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $418($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $418($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

int_32 .FUNC $346 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1424])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $417([24])) + [8]) = $0
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1024])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $348(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $345 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $417(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $436($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $418(*(($1 + [16])))
	
.LABEL $label$11
	CALL $418($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $418($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $212 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4983115765739493376, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $222($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)4983115765739493376, $5))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*(($2 + [32])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $343 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$8 = (*([0] + [4]) - [16])
	$9 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [1248])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [1296])
	$4 = *($1)
	$5 = ($1 + [8])
	CALL $420($5, *($3))
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1360])
	$3 = *($1 + [8])
	$6 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [8])
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$8 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	*($9) = $8
	*($9 + [8]) = ($8 + $3)
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [1232])
	CALL memcpy($8, $1, [8])
	*($9 + [4]) = ($8 + [8])
	CALL $113($9, $5)
	CALL db_update_i64(*($1 + [24]), $2, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($8)
	
.LABEL $label$4
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $342 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $417([32])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [20]) = $1
	CALL $344(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [24])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $345(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$4 }
	CALL $418(*(($3 + [16])))
	
.LABEL $label$4
	CALL $418($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $341 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $417([32])) + [16]) = [0]
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [20]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [1024])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	CALL $94(($8 + [32]), ($6 + [8]))
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $345(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL $418(*(($4 + [16])))
	
.LABEL $label$10
	CALL $418($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $340 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	$2 = *($1)
	CALL $437($4, ($1 + [8]))
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$1 = (*(*($0)) + int_32($3 >> [1]))
	$0 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL $437(($4 + [16]), $4)
	CALL void $1((int_32 $2), (int_64 ($4 + [16])), (int_32 $0))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $418(*($4 + [24]))
	
.LABEL $label$2
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	CALL $418(*($4 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [32])
}

void .FUNC $482 ()
{
	(unreachable)
}

void .FUNC $38 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_64 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	*(($9 = (($11 + [64]) + [8]))) = *(($5 + [8]))
	*(($10 = (($11 + [48]) + [8]))) = *(($6 + [8]))
	*($11 + [64]) = *($5)
	*($11 + [48]) = *($6)
	CALL $437(($11 + [32]), $8)
	*((($11 + [16]) + [8])) = *($9)
	*(($11 + [8])) = *($10)
	*($11 + [16]) = *($11 + [64])
	*($11) = *($11 + [48])
	CALL $350($0, $1, $2, $3, $4, ($11 + [16]), $11, $7, ($11 + [32]))
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $418(*($11 + [40]))
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [80])
}

int_32 .FUNC $283 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $417([64])) + [40]) = (int_64)1398362884
	*($4 + [32]) = (int_64)0
	CALL eosio_assert([1], [1760])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1824])
	*($4 + [48]) = $0
	CALL $324(($8 + [32]), $4)
	*($4 + [56]) = [-1]
	*($4 + [52]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [52])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $323($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $418($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $36 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_64 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	*(($9 = (($11 + [64]) + [8]))) = *(($5 + [8]))
	*(($10 = (($11 + [48]) + [8]))) = *(($6 + [8]))
	*($11 + [64]) = *($5)
	*($11 + [48]) = *($6)
	CALL $437(($11 + [32]), $8)
	*((($11 + [16]) + [8])) = *($9)
	*(($11 + [8])) = *($10)
	*($11 + [16]) = *($11 + [64])
	*($11) = *($11 + [48])
	CALL $350($0, $1, $2, $3, $4, ($11 + [16]), $11, $7, ($11 + [32]))
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $418(*($11 + [40]))
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [80])
}

void .FUNC $37 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_64 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	*(($9 = (($11 + [64]) + [8]))) = *(($5 + [8]))
	*(($10 = (($11 + [48]) + [8]))) = *(($6 + [8]))
	*($11 + [64]) = *($5)
	*($11 + [48]) = *($6)
	CALL $437(($11 + [32]), $8)
	*((($11 + [16]) + [8])) = *($9)
	*(($11 + [8])) = *($10)
	*($11 + [16]) = *($11 + [64])
	*($11) = *($11 + [48])
	CALL $350($0, $1, $2, $3, $4, ($11 + [16]), $11, $7, ($11 + [32]))
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $418(*($11 + [40]))
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [80])
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [112])
	*([0] + [4]) = $2
	*(($3 = $2) + [108]) = $0
	*($3 + [96]) = *($1)
	*($3 + [100]) = *($1 + [4])
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	CALL $353(($3 + [8]), $2, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($2)
	
.LABEL $label$5
	*($3 + [4]) = ($3 + [96])
	*($3) = ($3 + [108])
	CALL $354($3, ($3 + [8]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$6 }
	CALL $418(*(($3 + [88])))
	
.LABEL $label$6
	*([0] + [4]) = ($3 + [112])
	return [1]
}

void .FUNC $35 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_64 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	*(($9 = (($11 + [64]) + [8]))) = *(($5 + [8]))
	*(($10 = (($11 + [48]) + [8]))) = *(($6 + [8]))
	*($11 + [64]) = *($5)
	*($11 + [48]) = *($6)
	CALL $437(($11 + [32]), $8)
	*((($11 + [16]) + [8])) = *($9)
	*(($11 + [8])) = *($10)
	*($11 + [16]) = *($11 + [64])
	*($11) = *($11 + [48])
	CALL $350($0, $1, $2, $3, $4, ($11 + [16]), $11, $7, ($11 + [32]))
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $418(*($11 + [40]))
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [80])
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1024])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC $280 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4983115765975810048, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [1056])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $297($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)4983115765975810048, $5))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [1056])
	
.LABEL $label$4
	*(($2 + [32])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1024])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC $31 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	float_64 $8
	int_32 $9
	int_32 $10
	float_64 $11
	int_32 $12
	float_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	int_32 $25
	int_64 $26
	int_32 $27
	int_32 $28
	int_32 $29
	$29 = (*([0] + [4]) - [224])
	*([0] + [4]) = $29
	CALL require_auth(*($0))
	$15 = *(($0 + [192]))
	$14 = *(($0 + [196]))
	if ( ((int_32)$14 == (int_32)$15) ){ goto $label$1 }
	$27 = ($14 + [-24])
	$10 = ([0] - $15)
	
.LOOP $label$2:
	if ( (int_64)(*(*($27)) == 0) ){ goto $label$1 }
	$14 = $27
	$28 = ($27 + [-24])
	$27 = $28
	if ( ((int_32)($28 + $10) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [168])
	if ( ((int_32)$14 == (int_32)$15) ){ goto $label$4 }
	$3 = *(($14 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [32]) == (int_32)$2), [1056])
	goto $label$3 
	
.LABEL $label$4
	$3 = [0]
	$27 = CALL db_find_i64(*(($0 + [168])), *(($0 + [176])), (int_64)-6215726805501446784, (int_64)0)
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $357($2, $27)
	CALL eosio_assert(((int_32)*($3 + [32]) == (int_32)$2), [1056])
	
.LABEL $label$3
	$4 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($4, [4288])
	CALL eosio_assert(((int_32)uint_32(*($3 + [8]) >> [31]) ^ (int_32)[1]), [4320])
	$27 = *($3 + [8])
	if ( ((uint_32)$27 > (uint_32)[3]) ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$16
	CALL eosio_assert(((uint_32)*($3 + [28]) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$16() / (uint_64)(int_64)1000000))), [4352])
	CALL prints([4368])
	CALL prints([4384])
	$26 = (int_64)0
	$20 = (int_64)59
	$27 = [4400]
	$21 = (int_64)0
	
.LOOP $label$17:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$18 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$28 = ($28 + [165])
	goto $label$19 
	
.LABEL $label$20
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$18
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$17 }
	$5 = *($0)
	$26 = (int_64)0
	$20 = (int_64)59
	$27 = [4400]
	$23 = (int_64)0
	
.LOOP $label$21:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$22 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$28 = ($28 + [165])
	goto $label$23 
	
.LABEL $label$24
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$22
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$23 = ((int_64)$22 | (int_64)$23)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$21 }
	$26 = (int_64)0
	$22 = (int_64)59
	$27 = [4416]
	$24 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$26 > (uint_64)(int_64)8) ){ goto $label$30 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$28 = ($28 + [165])
	goto $label$28 
	
.LABEL $label$30
	$20 = (int_64)0
	if ( ((uint_64)$26 <= (uint_64)(int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$20 = (int_64)((int_64)(CASTING uint_64)(uint_32 $28) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$20 = ((int_64)((int_64)$20 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$26
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$24 = ((int_64)$20 | (int_64)$24)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$25 }
	*($29 + [96]) = [1]
	*($29 + [40]) = $24
	*($29 + [32]) = $23
	*(($27 = CALL $417([16]))) = $21
	*($27 + [8]) = $5
	*(($28 = ($29 + [64]))) = [0]
	$14 = ($27 + [16])
	*(($29 + [56])) = $14
	*(($29 + [52])) = $14
	*($29 + [48]) = $27
	*($29 + [60]) = [0]
	*(($29 + [68])) = [0]
	CALL $96(($29 + [60]), [4])
	$27 = *($29 + [60])
	CALL eosio_assert(((int_32)(*($28) - $27) > (int_32)[3]), [1232])
	CALL memcpy($27, ($29 + [96]), [4])
	CALL $109(($29 + [160]), ($29 + [32]))
	$27 = *($29 + [160])
	CALL send_inline($27, (*($29 + [164]) - $27))
	$27 = *($29 + [160])
	if ( ($27 == 0) ){ goto $label$31 }
	*($29 + [164]) = $27
	CALL $418($27)
	
.LABEL $label$31
	$27 = *($29 + [60])
	if ( ($27 == 0) ){ goto $label$32 }
	*(($29 + [64])) = $27
	CALL $418($27)
	
.LABEL $label$32
	$27 = *($29 + [48])
	if ( ($27 == 0) ){ goto $label$33 }
	*(($29 + [52])) = $27
	CALL $418($27)
	
.LABEL $label$33
	CALL prints([4432])
	CALL eosio_assert($4, [1120])
	CALL $358($2, $3, (int_64)0, ($29 + [32]))
	CALL prints([4448])
	$15 = ($0 + [208])
	$27 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)-6215726815275210864, (int_64)0)
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$34 }
	$28 = CALL $359($15, $27)
	
.LOOP $label$35:
	CALL eosio_assert([1], [2400])
	CALL eosio_assert([1], [1680])
	$27 = [0]
	$14 = CALL db_next_i64(*($28 + [52]), ($29 + [32]))
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$36 }
	$27 = CALL $359($15, $14)
	
.LABEL $label$36
	CALL $360($15, $28)
	$28 = $27
	if ( $27 ){ goto $label$35 }
	
.LABEL $label$34
	CALL prints([4464])
	$28 = ($0 + [128])
	$27 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)-4057297639048043008, (int_64)0)
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$10 }
	$27 = CALL $91($28, $27)
	*($29 + [204]) = $27
	*($29 + [200]) = $28
	$12 = ($0 + [288])
	$3 = (($29 + [32]) + [32])
	$7 = (($29 + [16]) | [1])
	$6 = (($29 + [16]) | [1])
	$2 = (($29 + [160]) + [8])
	$10 = ($29 + [184])
	$25 = (($29 + [160]) + [28])
	$9 = (($29 + [32]) + [16])
	$17 = ($9 + [4])
	$19 = ($29 + [72])
	$18 = ($29 + [116])
	
.LOOP $label$37:
	CALL $361(($27 + [16]), [1])
	$14 = *($29 + [204])
	$23 = *($14 + [8])
	$20 = (int_64)59
	$27 = [4480]
	$26 = (int_64)0
	$21 = (int_64)0
	
.LOOP $label$38:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$39 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$28 = ($28 + [165])
	goto $label$40 
	
.LABEL $label$41
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$39
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$38 }
	*($2) = $21
	*((($29 + [160]) + [16])) = (int_64)-1
	*($10) = (int_64)0
	*((($29 + [160]) + [32])) = [0]
	$26 = *($14 + [16])
	*($29 + [160]) = $23
	$27 = CALL db_find_i64($23, $21, (int_64)3607749779137757184, (uint_64)$26 >> (uint_64)(int_64)8)
	if ( ((int_32)$27) < (int_32)[0]) ){ goto $label$42 }
	$27 = CALL $362(($29 + [160]), $27)
	CALL eosio_assert(((int_32)*($27 + [16]) == (int_32)($29 + [160])), [1056])
	*(($14 = (($29 + [144]) + [8]))) = *(($27 + [8]))
	$26 = *($27)
	*($29 + [144]) = $26
	$26 = (Rounds 0)(CALL floor((CASTING float_64)(int_64 ((int_64)$26 / (int_64)2))))
	*($29 + [144]) = $26
	if ( ((int_64)$26 < (int_64)1) ){ goto $label$42 }
	CALL prints([4496])
	$26 = (int_64)0
	$20 = (int_64)59
	$27 = [4512]
	$4 = *($29 + [204])
	$21 = (int_64)0
	
.LOOP $label$43:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$44 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$28 = ($28 + [165])
	goto $label$45 
	
.LABEL $label$46
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$44
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$43 }
	$24 = *($4 + [8])
	if ( ((int_64)$24 != (int_64)$21) ){ goto $label$54 }
	$26 = (int_64)0
	$20 = (int_64)59
	$27 = [4480]
	$23 = (int_64)0
	
.LOOP $label$55:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$56 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$58 }
	$28 = ($28 + [165])
	goto $label$57 
	
.LABEL $label$58
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$57
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$56
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$23 = ((int_64)$22 | (int_64)$23)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$55 }
	*((($29 + [80]) + [8])) = *($0)
	*($29 + [80]) = $23
	$26 = (int_64)0
	$22 = (int_64)59
	$27 = [4528]
	$23 = (int_64)0
	
.LOOP $label$59:
	if ( ((uint_64)$26 > (uint_64)(int_64)8) ){ goto $label$64 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$63 }
	$28 = ($28 + [165])
	goto $label$62 
	
.LABEL $label$64
	$20 = (int_64)0
	if ( ((uint_64)$26 <= (uint_64)(int_64)11) ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$63
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$62
	$20 = (int_64)((int_64)(CASTING uint_64)(uint_32 $28) << (int_64)56) >> (int_64)56)
	
.LABEL $label$61
	$20 = ((int_64)((int_64)$20 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$60
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$23 = ((int_64)$20 | (int_64)$23)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$59 }
	$26 = (int_64)0
	$20 = (int_64)59
	$27 = [4480]
	$24 = (int_64)0
	
.LOOP $label$65:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$66 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$68 }
	$28 = ($28 + [165])
	goto $label$67 
	
.LABEL $label$68
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$67
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$66
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$24 = ((int_64)$22 | (int_64)$24)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$65 }
	*(($28 = (($29 + [16]) + [8]))) = [0]
	*($29 + [16]) = (int_64)0
	$27 = CALL strlen([4544])
	if ( ((uint_32)$27 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$27 >= (uint_32)[11]) ){ goto $label$53 }
	*($29 + [16]) = ($27 << [1])
	$4 = $6
	if ( $27 ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$26 = (int_64)0
	$20 = (int_64)59
	$27 = [4480]
	$21 = (int_64)0
	
.LOOP $label$69:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$70 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$72 }
	$28 = ($28 + [165])
	goto $label$71 
	
.LABEL $label$72
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$71
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$70
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$69 }
	*((($29 + [80]) + [8])) = *($0)
	*($29 + [80]) = $21
	$26 = (int_64)0
	$22 = (int_64)59
	$27 = [2000]
	$21 = (int_64)0
	
.LOOP $label$73:
	if ( ((uint_64)$26 > (uint_64)(int_64)7) ){ goto $label$78 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$77 }
	$28 = ($28 + [165])
	goto $label$76 
	
.LABEL $label$78
	$20 = (int_64)0
	if ( ((uint_64)$26 <= (uint_64)(int_64)11) ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$77
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$76
	$20 = (int_64)((int_64)(CASTING uint_64)(uint_32 $28) << (int_64)56) >> (int_64)56)
	
.LABEL $label$75
	$20 = ((int_64)((int_64)$20 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$74
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$21 = ((int_64)$20 | (int_64)$21)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$73 }
	$26 = (int_64)0
	$20 = (int_64)59
	$27 = [4480]
	$23 = (int_64)0
	
.LOOP $label$79:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$80 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$82 }
	$28 = ($28 + [165])
	goto $label$81 
	
.LABEL $label$82
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$81
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$80
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$23 = ((int_64)$22 | (int_64)$23)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$79 }
	*(($28 = (($29 + [16]) + [8]))) = [0]
	*($29 + [16]) = (int_64)0
	$27 = CALL strlen([4544])
	if ( ((uint_32)$27 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$27 >= (uint_32)[11]) ){ goto $label$50 }
	*($29 + [16]) = ($27 << [1])
	$4 = $7
	if ( $27 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$53
	$16 = (($27 + [16]) & [-16])
	$4 = CALL $417($16)
	*($28) = $4
	*($29 + [16]) = ($16 | [1])
	*($29 + [20]) = $27
	
.LABEL $label$52
	CALL memcpy($4, [4544], $27)
	
.LABEL $label$51
	*(($4 + $27)) = [0]
	*((($29 + [32]) + [8])) = *($0)
	*($17) = *($29 + [148])
	*($29 + [32]) = $24
	*($9) = *($29 + [144])
	*(($9 + [12])) = *((($29 + [144]) + [12]))
	*(($9 + [8])) = *($14)
	*(($3 + [8])) = *($28)
	*($3) = *($29 + [16])
	*($29 + [16]) = [0]
	*($29 + [20]) = [0]
	*($28) = [0]
	CALL $109(($29 + [208]), CALL $363(($29 + [96]), ($29 + [80]), $21, $23, ($29 + [32])))
	$27 = *($29 + [208])
	CALL send_inline($27, (*($29 + [212]) - $27))
	$27 = *($29 + [208])
	if ( ($27 == 0) ){ goto $label$83 }
	*($29 + [212]) = $27
	CALL $418($27)
	
.LABEL $label$83
	$27 = *((($29 + [96]) + [28]))
	if ( ($27 == 0) ){ goto $label$84 }
	*((($29 + [96]) + [32])) = $27
	CALL $418($27)
	
.LABEL $label$84
	$27 = *((($29 + [96]) + [16]))
	if ( ($27 == 0) ){ goto $label$85 }
	*($18) = $27
	CALL $418($27)
	
.LABEL $label$85
	if ( ((*($3) & [1]) == 0) ){ goto $label$86 }
	CALL $418(*($19))
	
.LABEL $label$86
	if ( ((*($29 + [16]) & [1]) == 0) ){ goto $label$47 }
	CALL $418(*($28))
	goto $label$47 
	
.LABEL $label$50
	$16 = (($27 + [16]) & [-16])
	$4 = CALL $417($16)
	*($28) = $4
	*($29 + [16]) = ($16 | [1])
	*($29 + [20]) = $27
	
.LABEL $label$49
	CALL memcpy($4, [4544], $27)
	
.LABEL $label$48
	*(($4 + $27)) = [0]
	*((($29 + [32]) + [8])) = *($0)
	*($17) = *($29 + [148])
	*($29 + [32]) = $23
	*($9) = *($29 + [144])
	*(($9 + [12])) = *((($29 + [144]) + [12]))
	*(($9 + [8])) = *($14)
	*(($3 + [8])) = *($28)
	*($3) = *($29 + [16])
	*($29 + [16]) = [0]
	*($29 + [20]) = [0]
	*($28) = [0]
	CALL $109(($29 + [208]), CALL $363(($29 + [96]), ($29 + [80]), $24, $21, ($29 + [32])))
	$27 = *($29 + [208])
	CALL send_inline($27, (*($29 + [212]) - $27))
	$27 = *($29 + [208])
	if ( ($27 == 0) ){ goto $label$87 }
	*($29 + [212]) = $27
	CALL $418($27)
	
.LABEL $label$87
	$27 = *((($29 + [96]) + [28]))
	if ( ($27 == 0) ){ goto $label$88 }
	*((($29 + [96]) + [32])) = $27
	CALL $418($27)
	
.LABEL $label$88
	$27 = *((($29 + [96]) + [16]))
	if ( ($27 == 0) ){ goto $label$89 }
	*($18) = $27
	CALL $418($27)
	
.LABEL $label$89
	if ( ((*($3) & [1]) == 0) ){ goto $label$90 }
	CALL $418(*($19))
	
.LABEL $label$90
	if ( ((*($29 + [16]) & [1]) == 0) ){ goto $label$47 }
	CALL $418(*($28))
	
.LABEL $label$47
	CALL prints([4560])
	$26 = *($0)
	*($29 + [32]) = $0
	*(($27 = (($29 + [32]) + [8]))) = ($29 + [144])
	*($29 + [36]) = ($29 + [200])
	CALL $364(($29 + [96]), $15, $26, ($29 + [32]))
	CALL prints([4592])
	$26 = *($0)
	*($29 + [32]) = $0
	*($27) = ($29 + [144])
	*($29 + [36]) = ($29 + [200])
	CALL $365(($29 + [96]), $12, $26, ($29 + [32]))
	
.LABEL $label$42
	$27 = [0]
	CALL eosio_assert(((int_32)*($29 + [204]) != (int_32)[0]), [1680])
	$28 = CALL db_next_i64(*(*($29 + [204]) + [52]), ($29 + [32]))
	if ( ((int_32)$28 < (int_32)[0]) ){ goto $label$91 }
	$27 = CALL $91(*($29 + [200]), $28)
	
.LABEL $label$91
	*($29 + [204]) = $27
	$14 = *($10)
	if ( ($14 == 0) ){ goto $label$92 }
	$27 = *($25)
	if ( ((int_32)$27 == (int_32)$14) ){ goto $label$94 }
	
.LOOP $label$95:
	$27 = ($27 + [-24])
	$28 = *($27)
	*($27) = [0]
	if ( ($28 == 0) ){ goto $label$96 }
	CALL $418($28)
	
.LABEL $label$96
	if ( ((int_32)$14 != (int_32)$27) ){ goto $label$95 }
	$27 = *($10)
	goto $label$93 
	
.LABEL $label$94
	$27 = $14
	
.LABEL $label$93
	*($25) = $14
	CALL $418($27)
	$27 = *($29 + [204])
	
.LABEL $label$92
	if ( $27 ){ goto $label$37 }
	goto $label$5 
	
.LABEL $label$15
	CALL eosio_assert([0], [4832])
	goto $label$5 
	
.LABEL $label$14
	CALL prints([4624])
	$14 = ($0 + [248])
	$28 = [0]
	$27 = [0]
	$0 = CALL db_lowerbound_i64(*($0 + [248]), *(($0 + [256])), (int_64)-6215726809340706816, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$97 }
	$27 = CALL $366($14, $0)
	
.LABEL $label$97
	
.LOOP $label$98:
	if ( ($27 == 0) ){ goto $label$9 }
	CALL printui(*($27))
	CALL eosio_assert([1], [2400])
	CALL eosio_assert([1], [1680])
	$28 = ($28 + [1])
	$0 = [0]
	$10 = CALL db_next_i64(*($27 + [52]), ($29 + [32]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$99 }
	$0 = CALL $366($14, $10)
	
.LABEL $label$99
	CALL $367($14, $27)
	$27 = $0
	if ( ((uint_32)$28 <= (uint_32)[29]) ){ goto $label$98 }
	goto $label$5 
	
.LABEL $label$13
	CALL prints([4656])
	$26 = (int_64)0
	$20 = (int_64)59
	$27 = [4400]
	$21 = (int_64)0
	
.LOOP $label$100:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$101 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$103 }
	$28 = ($28 + [165])
	goto $label$102 
	
.LABEL $label$103
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$102
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$101
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$100 }
	$26 = (int_64)0
	$20 = (int_64)59
	$27 = [4400]
	$23 = (int_64)0
	
.LOOP $label$104:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$105 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$107 }
	$28 = ($28 + [165])
	goto $label$106 
	
.LABEL $label$107
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$106
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$105
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$23 = ((int_64)$22 | (int_64)$23)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$104 }
	*(($29 + [64])) = [0]
	*($29 + [40]) = $23
	*($29 + [32]) = $21
	*($29 + [48]) = (int_64)-1
	$26 = (int_64)0
	*($29 + [56]) = (int_64)0
	$20 = (int_64)59
	$27 = [4400]
	$21 = (int_64)0
	
.LOOP $label$108:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$109 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$111 }
	$28 = ($28 + [165])
	goto $label$110 
	
.LABEL $label$111
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$110
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$109
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$108 }
	$26 = (int_64)0
	$20 = (int_64)59
	$27 = [4400]
	$23 = (int_64)0
	
.LOOP $label$112:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$113 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$115 }
	$28 = ($28 + [165])
	goto $label$114 
	
.LABEL $label$115
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$114
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$113
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$23 = ((int_64)$22 | (int_64)$23)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$112 }
	*(($29 + [192])) = [0]
	*($29 + [176]) = (int_64)-1
	*($29 + [184]) = (int_64)0
	*($29 + [168]) = $23
	*($29 + [160]) = $21
	$27 = [0]
	$28 = CALL db_find_i64($21, $23, (int_64)-4157495357179166720, (int_64)1)
	if ( ((int_32)$28 < (int_32)[0]) ){ goto $label$116 }
	$27 = CALL $369(($29 + [160]), $28)
	CALL eosio_assert(((int_32)*($27 + [40]) == (int_32)($29 + [160])), [1056])
	
.LABEL $label$116
	CALL eosio_assert(((int_32)$27 != (int_32)[0]), [4688])
	$23 = *($27 + [8])
	if ( (int_64)($23 == 0) ){ goto $label$8 }
	$27 = CALL db_lowerbound_i64(*($29 + [32]), *((($29 + [32]) + [8])), (int_64)-4157658851255844864, ((int_64)*($3 + [16]) + (int_64)1))
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$8 }
	$27 = CALL $370(($29 + [32]), $27)
	*($29 + [84]) = $27
	$10 = ($0 + [248])
	$9 = ($0 + [208])
	*($29 + [80]) = ($29 + [32])
	$8 = (CASTING float_64)(uint_64 $23)
	$12 = ($0 + [216])
	$15 = ($29 + [156])
	$25 = [0]
	
.LOOP $label$117:
	$26 = *($27 + [8])
	CALL printn(*($27))
	CALL prints([4704])
	CALL printui($26)
	CALL prints([4736])
	CALL printui($23)
	CALL prints([4768])
	$27 = CALL db_lowerbound_i64(*($9), *($12), (int_64)-6215726815275210864, (int_64)0)
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$119 }
	$11 = ((float_64)(CASTING float_64)(uint_64 $26) / (float_64)$8)
	$27 = CALL $359($9, $27)
	*($29 + [212]) = $27
	*($29 + [208]) = $9
	
.LOOP $label$120:
	CALL __fixunsdfti($29, ((float_64)$11 * (float_64)CALL $fimport$8(*($27 + [32]), *(($27 + [40])))))
	$20 = *(($29 + [8]))
	*($29 + [104]) = $20
	$22 = *($29)
	*($29 + [96]) = $22
	$26 = *($27 + [16])
	$21 = ((int_64)$26 & (int_64)255)
	CALL eosio_assert((uint_64)($21 <= (int_64)11), [4784])
	$13 = CALL pow((float_64)10, (CASTING float_64)(uint_64 (int_64))((int_64)10 - $21)))
	*(($14 = (($29 + [144]) + [8]))) = $26
	$20 = (Rounds 0)(((float_64)CALL __floatuntidf($22, $20) / (float_64)$13))
	*($29 + [144]) = $20
	CALL eosio_assert((uint_64)(((int_64)$20 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1760])
	$26 = (uint_64)$26 >> (uint_64)(int_64)8)
	$27 = [0]
	
.LOOP $label$123:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$122 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$124 }
	
.LOOP $label$125:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$122 }
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$125 }
	
.LABEL $label$124
	$28 = [1]
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$123 }
	goto $label$121 
	
.LABEL $label$122
	$28 = [0]
	
.LABEL $label$121
	CALL eosio_assert($28, [1824])
	CALL $371(($29 + [144]))
	$20 = *($29 + [104])
	$26 = *($29 + [96])
	if ( (int_64)(((int_64)$26 | (int_64)$20) == 0) ){ goto $label$126 }
	$27 = *($29 + [212])
	CALL $372($0, *(*($29 + [84])), *($27 + [16]), *(($27 + [24])), $26, $20)
	$26 = *($0)
	*($29 + [144]) = $0
	*($14) = ($29 + [208])
	*($15) = ($29 + [96])
	*($29 + [148]) = ($29 + [80])
	CALL $373(($29 + [16]), $10, $26, ($29 + [144]))
	
.LABEL $label$126
	CALL eosio_assert(((int_32)*($29 + [212]) != (int_32)[0]), [1680])
	$27 = CALL db_next_i64(*(*($29 + [212]) + [52]), ($29 + [144]))
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$127 }
	$27 = CALL $359(*($29 + [208]), $27)
	*($29 + [212]) = $27
	goto $label$120 
	
.LABEL $label$127
	*($29 + [212]) = [0]
	goto $label$118 
	
.LABEL $label$119
	*($29 + [212]) = [0]
	*($29 + [208]) = $9
	
.LABEL $label$118
	$25 = ($25 + [1])
	*($29 + [96]) = ($29 + [80])
	CALL eosio_assert($4, [1120])
	CALL $374($2, $3, (int_64)0, ($29 + [96]))
	$27 = [0]
	CALL eosio_assert(((int_32)*($29 + [84]) != (int_32)[0]), [1680])
	$28 = CALL db_next_i64(*(*($29 + [84]) + [28]), ($29 + [96]))
	if ( ((int_32)$28 < (int_32)[0]) ){ goto $label$128 }
	$27 = CALL $370(*($29 + [80]), $28)
	
.LABEL $label$128
	*($29 + [84]) = $27
	if ( ((uint_32)$25 > (uint_32)[7]) ){ goto $label$7 }
	if ( $27 ){ goto $label$117 }
	goto $label$7 
	
.LABEL $label$12
	CALL $419(($29 + [16]))
	
.LABEL $label$11
	CALL $419(($29 + [16]))
	
.LABEL $label$10
	*($29 + [204]) = [0]
	*($29 + [200]) = $28
	goto $label$5 
	
.LABEL $label$9
	if ( $28 ){ goto $label$5 }
	CALL eosio_assert($4, [1120])
	CALL $368($2, $3, (int_64)0, ($29 + [32]))
	goto $label$5 
	
.LABEL $label$8
	CALL eosio_assert($4, [1120])
	$26 = (int_64)0
	CALL $375($2, $3, (int_64)0, ($29 + [96]))
	CALL prints([4816])
	$20 = (int_64)59
	$27 = [4400]
	$21 = (int_64)0
	
.LOOP $label$129:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$130 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$132 }
	$28 = ($28 + [165])
	goto $label$131 
	
.LABEL $label$132
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$131
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$130
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$21 = ((int_64)$22 | (int_64)$21)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$129 }
	$5 = *($0)
	$26 = (int_64)0
	$20 = (int_64)59
	$27 = [4400]
	$23 = (int_64)0
	
.LOOP $label$133:
	$22 = (int_64)0
	if ( ((uint_64)$26 > (uint_64)(int_64)11) ){ goto $label$134 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$136 }
	$28 = ($28 + [165])
	goto $label$135 
	
.LABEL $label$136
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$135
	$22 = ((int_64)(CASTING uint_64)(uint_32 ($28 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$134
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$23 = ((int_64)$22 | (int_64)$23)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$133 }
	$26 = (int_64)0
	$22 = (int_64)59
	$27 = [4416]
	$24 = (int_64)0
	
.LOOP $label$137:
	if ( ((uint_64)$26 > (uint_64)(int_64)8) ){ goto $label$142 }
	$28 = *($27)
	if ( ((uint_32)(($28 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$141 }
	$28 = ($28 + [165])
	goto $label$140 
	
.LABEL $label$142
	$20 = (int_64)0
	if ( ((uint_64)$26 <= (uint_64)(int_64)11) ){ goto $label$139 }
	goto $label$138 
	
.LABEL $label$141
	$28 = ( ($28 + [208]) ? [0] : ((($28 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$140
	$20 = (int_64)((int_64)(CASTING uint_64)(uint_32 $28) << (int_64)56) >> (int_64)56)
	
.LABEL $label$139
	$20 = ((int_64)((int_64)$20 & (int_64)31) << (int_64)((int_64)$22 & (int_64)4294967295))
	
.LABEL $label$138
	$27 = ($27 + [1])
	$26 = ((int_64)$26 + (int_64)1)
	$24 = ((int_64)$20 | (int_64)$24)
	$22 = ((int_64)$22 + (int_64)-5)
	if ( ((int_64)$22 != (int_64)-6) ){ goto $label$137 }
	*($29 + [80]) = [0]
	*($29 + [104]) = $24
	*($29 + [96]) = $23
	*(($27 = CALL $417([16]))) = $21
	*($27 + [8]) = $5
	*(($28 = ($29 + [128]))) = [0]
	$0 = ($27 + [16])
	*(($29 + [120])) = $0
	*(($29 + [116])) = $0
	*($29 + [112]) = $27
	*($29 + [124]) = [0]
	*(($29 + [132])) = [0]
	CALL $96(($29 + [124]), [4])
	$27 = *($29 + [124])
	CALL eosio_assert(((int_32)(*($28) - $27) > (int_32)[3]), [1232])
	CALL memcpy($27, ($29 + [80]), [4])
	CALL $109(($29 + [144]), ($29 + [96]))
	$27 = *($29 + [144])
	CALL send_inline($27, (*($29 + [148]) - $27))
	$27 = *($29 + [144])
	if ( ($27 == 0) ){ goto $label$143 }
	*($29 + [148]) = $27
	CALL $418($27)
	
.LABEL $label$143
	$27 = *($29 + [124])
	if ( ($27 == 0) ){ goto $label$144 }
	*(($29 + [128])) = $27
	CALL $418($27)
	
.LABEL $label$144
	$27 = *($29 + [112])
	if ( ($27 == 0) ){ goto $label$7 }
	*(($29 + [116])) = $27
	CALL $418($27)
	
.LABEL $label$7
	$0 = *($29 + [184])
	if ( ($0 == 0) ){ goto $label$145 }
	$14 = ($29 + [188])
	$27 = *($14)
	if ( ((int_32)$27 == (int_32)$0) ){ goto $label$147 }
	
.LOOP $label$148:
	$27 = ($27 + [-24])
	$28 = *($27)
	*($27) = [0]
	if ( ($28 == 0) ){ goto $label$149 }
	CALL $418($28)
	
.LABEL $label$149
	if ( ((int_32)$0 != (int_32)$27) ){ goto $label$148 }
	$27 = *(($29 + [184]))
	goto $label$146 
	
.LABEL $label$147
	$27 = $0
	
.LABEL $label$146
	*($14) = $0
	CALL $418($27)
	
.LABEL $label$145
	$0 = *($29 + [56])
	if ( ($0 == 0) ){ goto $label$5 }
	$14 = ($29 + [60])
	$27 = *($14)
	if ( ((int_32)$27 == (int_32)$0) ){ goto $label$151 }
	
.LOOP $label$152:
	$27 = ($27 + [-24])
	$28 = *($27)
	*($27) = [0]
	if ( ($28 == 0) ){ goto $label$153 }
	CALL $418($28)
	
.LABEL $label$153
	if ( ((int_32)$0 != (int_32)$27) ){ goto $label$152 }
	$27 = *(($29 + [56]))
	goto $label$150 
	
.LABEL $label$151
	$27 = $0
	
.LABEL $label$150
	*($14) = $0
	CALL $418($27)
	goto $label$5 
	
.LABEL $label$6
	$14 = ($0 + [288])
	$28 = [0]
	$27 = [0]
	$0 = CALL db_lowerbound_i64(*($0 + [288]), *(($0 + [296])), (int_64)-6215726811582152704, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$154 }
	$27 = CALL $376($14, $0)
	
.LABEL $label$154
	
.LOOP $label$156:
	if ( ($27 == 0) ){ goto $label$155 }
	if ( ((uint_32)*($27 + [48]) > (uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [-864000])) ){ goto $label$155 }
	CALL eosio_assert([1], [2400])
	CALL eosio_assert([1], [1680])
	$28 = ($28 + [1])
	$0 = [0]
	$10 = CALL db_next_i64(*($27 + [68]), ($29 + [32]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$157 }
	$0 = CALL $376($14, $10)
	
.LABEL $label$157
	CALL $377($14, $27)
	$27 = $0
	if ( ((uint_32)$28 <= (uint_32)[29]) ){ goto $label$156 }
	goto $label$5 
	
.LABEL $label$155
	CALL eosio_assert($4, [1120])
	CALL $378($2, $3, (int_64)0, ($29 + [32]))
	
.LABEL $label$5
	*([0] + [4]) = ($29 + [224])
	$27
	(unreachable)
	(unreachable)
}

int_32 .FUNC $281 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$7 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1424])
	if ( ($4 <= [513]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$5
	CALL db_get_i64($1, $6, $4)
	*($8 + [36]) = $6
	*($8 + [32]) = $6
	$3 = ($6 + $4)
	*($8 + [40]) = $3
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($6)
	$3 = *(($8 + [40]))
	$6 = *($8 + [36])
	
.LABEL $label$7
	*(($7 = CALL $417([32])) + [16]) = [0]
	*($7 + [8 align=4]) = (int_64)0
	*($7 + [20]) = $0
	CALL eosio_assert(((uint_32)($3 - $6) > (uint_32)[7]), [1024])
	CALL memcpy($7, $6, [8])
	*($8 + [36]) = ($6 + [8])
	CALL $325(($8 + [32]), ($7 + [8]))
	*($7 + [24]) = $1
	*($8 + [24]) = $7
	$5 = *($7)
	*($8 + [16]) = $5
	$4 = *($7 + [24])
	*($8 + [12]) = $4
	$1 = ($0 + [28])
	$6 = *($1)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($6 + [8]) = $5
	*($6 + [16]) = $4
	*($8 + [24]) = [0]
	*($6) = $7
	*($1) = ($6 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $313(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$3 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$0 = *($3 + [8])
	if ( ($0 == 0) ){ goto $label$10 }
	$2 = ($3 + [12])
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$12 }
	$1 = ([0] - $0)
	$6 = ($6 + [-16])
	
.LOOP $label$13:
	$4 = *($6)
	if ( ($4 == 0) ){ goto $label$14 }
	*(($6 + [4])) = $4
	CALL $418($4)
	
.LABEL $label$14
	$6 = ($6 + [-48])
	if ( ((int_32)($6 + $1) != (int_32)[-16]) ){ goto $label$13 }
	$6 = *(($3 + [8]))
	goto $label$11 
	
.LABEL $label$12
	$6 = $0
	
.LABEL $label$11
	*($2) = $0
	CALL $418($6)
	
.LABEL $label$10
	CALL $418($3)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $7
}