(data (i32.const 4) "\10h\00\00")
(data (i32.const 16) "transfer\00")
(data (i32.const 32) "eosio.token\00")
(data (i32.const 48) "Transfer EOS must go through eosio.token...\00")
(data (i32.const 96) "Transfer code does not match the contract in whitelist.\00")
(data (i32.const 160) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 224) "cannot pass end iterator to erase\00")
(data (i32.const 272) "cannot increment end iterator\00")
(data (i32.const 304) "object passed to erase is not in multi_index\00")
(data (i32.const 352) "cannot erase objects in table of another contract\00")
(data (i32.const 416) "attempt to remove object that was not in multi_index\00")
(data (i32.const 480) "error reading iterator\00")
(data (i32.const 512) "read\00")
(data (i32.const 528) "get\00")
(data (i32.const 544) "cannot pass end iterator to modify\00")
(data (i32.const 592) "cannot create objects in table of another contract\00")
(data (i32.const 656) "write\00")
(data (i32.const 672) "object passed to modify is not in multi_index\00")
(data (i32.const 720) "cannot modify objects in table of another contract\00")
(data (i32.const 784) "updater cannot change primary key when modifying an object\00")
(data (i32.const 848) "kyubeydex.bp\00")
(data (i32.const 864) "Account does not match\00")
(data (i32.const 896) "Trade id is not found\00")
(data (i32.const 928) "active\00")
(data (i32.const 944) "trade cancel successed\00")
(data (i32.const 976) "invalid symbol name\00")
(data (i32.const 1008) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1072) "trade cancel successed.\00")
(data (i32.const 1104) "trade cancel successed..\00")
(data (i32.const 1136) "invalid token transfer\00")
(data (i32.const 1168) "must bet a positive amount\00")
(data (i32.const 1200) "Ask must be non-EOS\00")
(data (i32.const 1232) "Ask must be EOS\00")
(data (i32.const 1248) "sellmatch\00")
(data (i32.const 1264) "Ask must be EOS..\00")
(data (i32.const 1296) "Ask mod bid must be 0\00")
(data (i32.const 1328) "Bid must be non-EOS\00")
(data (i32.const 1360) "next primary key in table is at autoincrement limit\00")
(data (i32.const 1424) "sellreceipt\00")
(data (i32.const 1440) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 1504) "cannot decrement iterator at beginning of table\00")
(data (i32.const 1552) "buymatch\00")
(data (i32.const 1568) "Ask must be non-EOS...\00")
(data (i32.const 1600) "Bid mod ask must be 0!!!\00")
(data (i32.const 1632) "Bid must be EOS\00")
(data (i32.const 1648) "Ask must be valid\00")
(data (i32.const 1680) "Bid must be EOS.\00")
(data (i32.const 1712) "buyreceipt\00")
(data (i32.const 1728) "singleton does not exist\00")
(data (i32.const 10160) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_end_i64" (func $fimport$4 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$7 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$8 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$9 (param i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$10 (param i32)))
(import "env" "db_idx64_store" (func $fimport$11 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$12 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$13 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$15 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$16 (param i32)))
(import "env" "db_store_i64" (func $fimport$17 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$18 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$19 (param i32 i32)))
(import "env" "eosio_exit" (func $fimport$20 (param i32)))
(import "env" "memcpy" (func $fimport$21 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$22 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$23 (param i64)))
(import "env" "require_auth2" (func $fimport$24 (param i64 i64)))
(import "env" "send_inline" (func $fimport$25 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN6pomelo5applyEyy" (func $5))
(export "_ZN6pomelo10onTransferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $8))
(export "_ZN6pomelo5cleanENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $9))
(export "_ZN6pomelo9cancelbuyEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEy" (func $11))
(export "_ZN6pomelo10cancelsellEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEy" (func $13))
(export "_ZN6pomelo12setwhitelistENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEy" (func $14))
(export "_ZN6pomelo11rmwhitelistENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $16))
(export "_ZN6pomelo27get_contract_name_by_symbolENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $30))
(export "_ZN6pomelo5splitENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEc" (func $47))
(export "_ZN6pomelo3buyEyN5eosio5assetES1_" (func $48))
(export "_ZN6pomelo4sellEyN5eosio5assetES1_" (func $49))
(export "_ZN6pomelo27publish_sellorder_if_neededEyN5eosio5assetES1_" (func $54))
(export "_ZN6pomelo26publish_buyorder_if_neededEyN5eosio5assetES1_" (func $60))
(export "_ZN6pomelo16assert_whitelistEN5eosio11symbol_typeEy" (func $66))
(export "apply" (func $67))
(export "_ZN6pomelo19my_string_to_symbolEhPKc" (func $68))
(export "_ZN6pomelo27get_contract_name_by_symbolEN5eosio11symbol_typeE" (func $69))
(export "_ZN6pomelo16assert_whitelistENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEy" (func $70))
(export "_ZN6pomelo19is_valid_unit_priceEyy" (func $71))
(export "_ZN6pomelo16string_to_amountENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $72))
(export "_ZN6pomelo8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $73))
(export "malloc" (func $74))
(export "free" (func $77))
(export "memcmp" (func $86))
(export "strlen" (func $87))
(table $0 8 8 anyfunc)
(elem (i32.const 0) $88 $11 $14 $9 $18 $17 $13 $16)



int_32 .FUNC $38 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1008])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [976])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [1008])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [976])
	return $0
}

void .FUNC _ZN6pomelo4sellEyN5eosio5assetES1_ (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	int_32 $20
	int_64 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_64 $35
	int_64 $36
	int_64 $37
	int_64 $38
	int_64 $39
	int_32 $40
	$40 = (*([0] + [4]) - [336])
	*([0] + [4]) = $40
	$36 = *($2 + [8])
	CALL eosio_assert(((int_64)$36 != (int_64)1397703940), [1328])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)1397703940), [1264])
	$35 = *($2)
	$38 = ((int_64)*($3) * (int_64)100000000)
	CALL eosio_assert((int_64)(((uint_64)$38 % (uint_64)$35) == 0), [1296])
	*((($40 + [280]) + [32])) = [0]
	*($40 + [288]) = (uint_64)$36 >> (uint_64)(int_64)8)
	*($40 + [296]) = (int_64)-1
	*($40 + [304]) = (int_64)0
	*($40 + [280]) = *($0)
	*($40 + [316]) = [0]
	*($40 + [272]) = ($40 + [280])
	*($40 + [192]) = (int_64)0
	$4 = ((uint_64)$38 / (uint_64)$35)
	CALL $55(($40 + [264]), ($40 + [272]), ($40 + [192]))
	if ( (*($40 + [268]) == 0) ){ goto $label$4 }
	$14 = (($40 + [72]) | [1])
	$13 = (($40 + [72]) | [1])
	$12 = (($40 + [192]) + [40])
	$11 = (($40 + [192]) + [24])
	$10 = (($40 + [88]) + [28])
	$9 = ($40 + [256])
	$8 = ($40 + [248])
	$7 = (($40 + [192]) + [16])
	$6 = (($40 + [192]) + [8])
	$5 = (($40 + [192]) + [60])
	$34 = *($40 + [268])
	$27 = ($40 + [124])
	$29 = ($40 + [164])
	$15 = (($40 + [88]) + [32])
	$32 = ($15 + [4])
	
.LOOP $label$5:
	if ( (uint_64)(*($34 + [48]) <= $4) ){ goto $label$4 }
	$16 = *(( ($34 + [32]) ? $2 : ((int_64)*($2) > (int_64)*($34 + [32])) ))
	$36 = *($34 + [48])
	CALL eosio_assert(((int_32)$34 != (int_32)[0]), [544])
	$22 = *($40 + [272])
	CALL eosio_assert(((int_32)*($34 + [60]) == (int_32)$22), [672])
	CALL eosio_assert(((int_64)*($22) == (int_64)CALL $fimport$2()), [720])
	$17 = ((uint_64)((int_64)$36 * (int_64)$16) / (uint_64)(int_64)100000000)
	*($34 + [16]) = (int_64))(*($34 + [16]) - $17)
	*($34 + [32]) = (int_64))(*($34 + [32]) - $16)
	$19 = ($34 + [48])
	*($40 + [320]) = (int_64))((int_64)0 - *($19))
	$36 = *($34)
	CALL eosio_assert([1], [784])
	*(($23 = (($40 + [88]) + [8]))) = $5
	*($40 + [92]) = ($40 + [192])
	*($40 + [88]) = ($40 + [192])
	CALL $50(($40 + [88]), $34)
	CALL db_update_i64(*($34 + [64]), (int_64)0, ($40 + [192]), [60])
	if ( (uint_64)($36 <= *($22 + [16])) ){ goto $label$6 }
	*(($22 + [16])) = ( (int_64)-2 ? ((int_64)$36 + (int_64)1) : ((uint_64)$36 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($40 + [152]) = (int_64))((int_64)0 - *($19))
	if ( (CALL memcmp(($40 + [320]), ($40 + [152]), [8]) == 0) ){ goto $label$7 }
	$19 = *($34 + [68])
	if ( ((int_32)$19 > (int_32)[-1]) ){ goto $label$8 }
	$19 = CALL db_idx64_find_primary(*($22), *($22 + [8]), (int_64)4520852774451150848, ($40 + [136]), $36)
	*(($34 + [68])) = $19
	
.LABEL $label$8
	CALL db_idx64_update($19, (int_64)0, ($40 + [152]))
	
.LABEL $label$7
	*($2) = (int_64))(*($2) - $16)
	*($3) = (int_64))(*($3) - ((uint_64)((int_64)$16 * (int_64)$4) / (uint_64)(int_64)100000000))
	$24 = ($2 + [8])
	$38 = *($24)
	*($6) = (uint_64)$38 >> (uint_64)(int_64)8)
	*($7) = (int_64)-1
	*($11) = (int_64)0
	*(($25 = (($40 + [192]) + [32]))) = [0]
	*($40 + [192]) = *($0)
	$18 = CALL $7(($40 + [192]))
	$19 = *($11)
	if ( ($19 == 0) ){ goto $label$9 }
	$26 = (($40 + [192]) + [28])
	$34 = *($26)
	if ( ((int_32)$34 == (int_32)$19) ){ goto $label$11 }
	
.LOOP $label$12:
	$34 = ($34 + [-24])
	$22 = *($34)
	*($34) = [0]
	if ( ($22 == 0) ){ goto $label$13 }
	CALL $79($22)
	
.LABEL $label$13
	if ( ((int_32)$19 != (int_32)$34) ){ goto $label$12 }
	$38 = *($24)
	$34 = *($11)
	goto $label$10 
	
.LABEL $label$11
	$34 = $19
	
.LABEL $label$10
	*($26) = $19
	CALL $79($34)
	
.LABEL $label$9
	CALL $51(($40 + [192]))
	*($7) = $1
	$34 = *($40 + [268])
	*($6) = *($34 + [8])
	*($40 + [192]) = *($34)
	$20 = (uint_64)(((int_64)$16 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)
	CALL eosio_assert($20, [1008])
	$36 = (uint_64)$38 >> (uint_64)(int_64)8)
	$34 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $36) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$36 = (uint_64)$36 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$36) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$36 = (uint_64)$36 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$36) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$34 = ($34 + [1])
	if ( ((int_32)$34 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$22 = [1]
	$34 = ($34 + [1])
	if ( ((int_32)$34 < (int_32)[7]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$22 = [0]
	
.LABEL $label$14
	CALL eosio_assert($22, [976])
	*($25) = $38
	*($11) = $16
	CALL eosio_assert([1], [1008])
	$36 = (int_64)5459781
	$34 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $36) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$36 = (uint_64)$36 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$36) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$36 = (uint_64)$36 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$36) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$34 = ($34 + [1])
	if ( ((int_32)$34 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$22 = [1]
	$34 = ($34 + [1])
	if ( ((int_32)$34 < (int_32)[7]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$22 = [0]
	
.LABEL $label$19
	CALL eosio_assert($22, [976])
	*((($40 + [192]) + [48])) = (int_64)1397703940
	*($12) = $17
	*($8) = *(*($40 + [268]) + [48])
	*($9) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$21 = *($0)
	$36 = (int_64)0
	$35 = (int_64)59
	$34 = [928]
	$37 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$36 > (uint_64)(int_64)5) ){ goto $label$29 }
	$22 = *($34)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$22 = ($22 + [165])
	goto $label$27 
	
.LABEL $label$29
	$38 = (int_64)0
	if ( ((uint_64)$36 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$38 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$38 = ((int_64)((int_64)$38 & (int_64)31) << (int_64)((int_64)$35 & (int_64)4294967295))
	
.LABEL $label$25
	$34 = ($34 + [1])
	$36 = ((int_64)$36 + (int_64)1)
	$37 = ((int_64)$38 | (int_64)$37)
	$35 = ((int_64)$35 + (int_64)-5)
	if ( ((int_64)$35 != (int_64)-6) ){ goto $label$24 }
	$36 = (int_64)0
	$35 = (int_64)59
	$34 = [1248]
	$39 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$36 > (uint_64)(int_64)8) ){ goto $label$35 }
	$22 = *($34)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$22 = ($22 + [165])
	goto $label$33 
	
.LABEL $label$35
	$38 = (int_64)0
	if ( ((uint_64)$36 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$38 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$38 = ((int_64)((int_64)$38 & (int_64)31) << (int_64)((int_64)$35 & (int_64)4294967295))
	
.LABEL $label$31
	$34 = ($34 + [1])
	$36 = ((int_64)$36 + (int_64)1)
	$39 = ((int_64)$38 | (int_64)$39)
	$35 = ((int_64)$35 + (int_64)-5)
	if ( ((int_64)$35 != (int_64)-6) ){ goto $label$30 }
	*($23) = $39
	*(($25 = (($40 + [88]) + [16]))) = (int_64)0
	*(($26 = (($40 + [88]) + [24]))) = [0]
	*($40 + [88]) = $21
	$34 = CALL $78([16])
	*($25) = $34
	*($34) = $21
	*($34 + [8]) = $37
	*($10) = [0]
	*($15) = [0]
	$34 = ($34 + [16])
	*($26) = $34
	*(($22 = (($40 + [88]) + [20]))) = $34
	*($27) = [0]
	CALL $25($10, [68])
	$34 = *($10)
	*(($28 = (($40 + [136]) + [8]))) = *($15)
	*($40 + [140]) = $34
	*($40 + [136]) = $34
	*($40 + [320]) = ($40 + [136])
	*((($40 + [152]) + [8])) = $7
	*($29) = $11
	*(($30 = (($40 + [152]) + [16]))) = $12
	*(($31 = (($40 + [152]) + [20]))) = $8
	*((($40 + [152]) + [24])) = $9
	*($40 + [156]) = $6
	*($40 + [152]) = ($40 + [192])
	CALL $52(($40 + [152]), ($40 + [320]))
	CALL $32(($40 + [152]), ($40 + [88]))
	$34 = *($40 + [152])
	CALL send_inline($34, (*($40 + [156]) - $34))
	$34 = *($40 + [152])
	if ( ($34 == 0) ){ goto $label$36 }
	*($40 + [156]) = $34
	CALL $79($34)
	
.LABEL $label$36
	$34 = *($10)
	if ( ($34 == 0) ){ goto $label$37 }
	*($15) = $34
	CALL $79($34)
	
.LABEL $label$37
	$34 = *($25)
	if ( ($34 == 0) ){ goto $label$38 }
	*($22) = $34
	CALL $79($34)
	
.LABEL $label$38
	$39 = *($0)
	$36 = (int_64)0
	$35 = (int_64)59
	$34 = [928]
	$37 = (int_64)0
	
.LOOP $label$39:
	if ( ((uint_64)$36 > (uint_64)(int_64)5) ){ goto $label$44 }
	$22 = *($34)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$22 = ($22 + [165])
	goto $label$42 
	
.LABEL $label$44
	$38 = (int_64)0
	if ( ((uint_64)$36 <= (uint_64)(int_64)11) ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$43
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$38 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$41
	$38 = ((int_64)((int_64)$38 & (int_64)31) << (int_64)((int_64)$35 & (int_64)4294967295))
	
.LABEL $label$40
	$34 = ($34 + [1])
	$36 = ((int_64)$36 + (int_64)1)
	$37 = ((int_64)$38 | (int_64)$37)
	$35 = ((int_64)$35 + (int_64)-5)
	if ( ((int_64)$35 != (int_64)-6) ){ goto $label$39 }
	*($28) = $37
	*($40 + [136]) = $39
	$36 = (int_64)0
	$35 = (int_64)59
	$34 = [32]
	$37 = (int_64)0
	
.LOOP $label$45:
	if ( ((uint_64)$36 > (uint_64)(int_64)10) ){ goto $label$50 }
	$22 = *($34)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$49 }
	$22 = ($22 + [165])
	goto $label$48 
	
.LABEL $label$50
	$38 = (int_64)0
	if ( ((int_64)$36 == (int_64)11) ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$49
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$48
	$38 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$47
	$38 = ((int_64)((int_64)$38 & (int_64)31) << (int_64)((int_64)$35 & (int_64)4294967295))
	
.LABEL $label$46
	$34 = ($34 + [1])
	$35 = ((int_64)$35 + (int_64)-5)
	$37 = ((int_64)$38 | (int_64)$37)
	$36 = ((int_64)$36 + (int_64)1)
	if ( ((int_64)$36 != (int_64)13) ){ goto $label$45 }
	$36 = (int_64)0
	$35 = (int_64)59
	$34 = [16]
	$39 = (int_64)0
	
.LOOP $label$51:
	if ( ((uint_64)$36 > (uint_64)(int_64)7) ){ goto $label$56 }
	$22 = *($34)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$55 }
	$22 = ($22 + [165])
	goto $label$54 
	
.LABEL $label$56
	$38 = (int_64)0
	if ( ((uint_64)$36 <= (uint_64)(int_64)11) ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$55
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$54
	$38 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$53
	$38 = ((int_64)((int_64)$38 & (int_64)31) << (int_64)((int_64)$35 & (int_64)4294967295))
	
.LABEL $label$52
	$34 = ($34 + [1])
	$36 = ((int_64)$36 + (int_64)1)
	$39 = ((int_64)$38 | (int_64)$39)
	$35 = ((int_64)$35 + (int_64)-5)
	if ( ((int_64)$35 != (int_64)-6) ){ goto $label$51 }
	CALL eosio_assert([1], [1008])
	$36 = (int_64)5459781
	$34 = [0]
	
.LOOP $label$59:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $36) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$58 }
	$36 = (uint_64)$36 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$36) & (int_64)255) != (int_64)0) ){ goto $label$60 }
	
.LOOP $label$61:
	$36 = (uint_64)$36 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$36) & (int_64)255) != (int_64)0) ){ goto $label$58 }
	$34 = ($34 + [1])
	if ( ((int_32)$34 < (int_32)[7]) ){ goto $label$61 }
	
.LABEL $label$60
	$22 = [1]
	$34 = ($34 + [1])
	if ( ((int_32)$34 < (int_32)[7]) ){ goto $label$59 }
	goto $label$57 
	
.LABEL $label$58
	$22 = [0]
	
.LABEL $label$57
	CALL eosio_assert($22, [976])
	*(($19 = (($40 + [72]) + [8]))) = [0]
	*($40 + [72]) = (int_64)0
	$34 = CALL strlen([16])
	if ( ((uint_32)$34 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$34 >= (uint_32)[11]) ){ goto $label$64 }
	*($40 + [72]) = ($34 << [1])
	$22 = $13
	if ( $34 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$64
	$33 = (($34 + [16]) & [-16])
	$22 = CALL $78($33)
	*($19) = $22
	*($40 + [72]) = ($33 | [1])
	*($40 + [76]) = $34
	
.LABEL $label$63
	CALL memcpy($22, [16], $34)
	
.LABEL $label$62
	*(($22 + $34)) = [0]
	*($23) = $1
	*($25) = $17
	*($26) = (int_64)1397703940
	*($32) = *($40 + [76])
	*(($15 + [8])) = *($19)
	*($40 + [88]) = *($0)
	*($15) = *($40 + [72])
	*($40 + [72]) = [0]
	*($40 + [76]) = [0]
	*($19) = [0]
	CALL $32(($40 + [320]), CALL $31(($40 + [152]), ($40 + [136]), $37, $39, ($40 + [88])))
	$34 = *($40 + [320])
	CALL send_inline($34, (*($40 + [324]) - $34))
	$34 = *($40 + [320])
	if ( ($34 == 0) ){ goto $label$65 }
	*($40 + [324]) = $34
	CALL $79($34)
	
.LABEL $label$65
	$33 = (($40 + [152]) + [28])
	$34 = *($33)
	if ( ($34 == 0) ){ goto $label$66 }
	*((($40 + [152]) + [32])) = $34
	CALL $79($34)
	
.LABEL $label$66
	$34 = *($30)
	if ( ($34 == 0) ){ goto $label$67 }
	*($31) = $34
	CALL $79($34)
	
.LABEL $label$67
	if ( ((*($15) & [1]) == 0) ){ goto $label$68 }
	CALL $79(*((($40 + [88]) + [40])))
	
.LABEL $label$68
	if ( ((*($40 + [72]) & [1]) == 0) ){ goto $label$69 }
	CALL $79(*($19))
	
.LABEL $label$69
	$39 = *($0)
	$36 = (int_64)0
	$35 = (int_64)59
	$34 = [928]
	$37 = (int_64)0
	
.LOOP $label$70:
	if ( ((uint_64)$36 > (uint_64)(int_64)5) ){ goto $label$75 }
	$22 = *($34)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$74 }
	$22 = ($22 + [165])
	goto $label$73 
	
.LABEL $label$75
	$38 = (int_64)0
	if ( ((uint_64)$36 <= (uint_64)(int_64)11) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$74
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$73
	$38 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$72
	$38 = ((int_64)((int_64)$38 & (int_64)31) << (int_64)((int_64)$35 & (int_64)4294967295))
	
.LABEL $label$71
	$34 = ($34 + [1])
	$36 = ((int_64)$36 + (int_64)1)
	$37 = ((int_64)$38 | (int_64)$37)
	$35 = ((int_64)$35 + (int_64)-5)
	if ( ((int_64)$35 != (int_64)-6) ){ goto $label$70 }
	*($28) = $37
	*($40 + [136]) = $39
	$36 = (int_64)0
	$35 = (int_64)59
	$34 = [16]
	$37 = (int_64)0
	
.LOOP $label$76:
	if ( ((uint_64)$36 > (uint_64)(int_64)7) ){ goto $label$81 }
	$22 = *($34)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$80 }
	$22 = ($22 + [165])
	goto $label$79 
	
.LABEL $label$81
	$38 = (int_64)0
	if ( ((uint_64)$36 <= (uint_64)(int_64)11) ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$80
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$79
	$38 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$78
	$38 = ((int_64)((int_64)$38 & (int_64)31) << (int_64)((int_64)$35 & (int_64)4294967295))
	
.LABEL $label$77
	$34 = ($34 + [1])
	$36 = ((int_64)$36 + (int_64)1)
	$37 = ((int_64)$38 | (int_64)$37)
	$35 = ((int_64)$35 + (int_64)-5)
	if ( ((int_64)$35 != (int_64)-6) ){ goto $label$76 }
	$38 = *($24)
	$28 = *($40 + [268])
	CALL eosio_assert($20, [1008])
	$36 = (uint_64)$38 >> (uint_64)(int_64)8)
	$34 = [0]
	
.LOOP $label$84:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $36) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$83 }
	$36 = (uint_64)$36 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$36) & (int_64)255) != (int_64)0) ){ goto $label$85 }
	
.LOOP $label$86:
	$36 = (uint_64)$36 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$36) & (int_64)255) != (int_64)0) ){ goto $label$83 }
	$34 = ($34 + [1])
	if ( ((int_32)$34 < (int_32)[7]) ){ goto $label$86 }
	
.LABEL $label$85
	$22 = [1]
	$34 = ($34 + [1])
	if ( ((int_32)$34 < (int_32)[7]) ){ goto $label$84 }
	goto $label$82 
	
.LABEL $label$83
	$22 = [0]
	
.LABEL $label$82
	CALL eosio_assert($22, [976])
	*($19) = [0]
	*($40 + [72]) = (int_64)0
	$34 = CALL strlen([16])
	if ( ((uint_32)$34 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$34 >= (uint_32)[11]) ){ goto $label$89 }
	*($40 + [72]) = ($34 << [1])
	$22 = $14
	if ( $34 ){ goto $label$88 }
	goto $label$87 
	
.LABEL $label$89
	$24 = (($34 + [16]) & [-16])
	$22 = CALL $78($24)
	*($19) = $22
	*($40 + [72]) = ($24 | [1])
	*($40 + [76]) = $34
	
.LABEL $label$88
	CALL memcpy($22, [16], $34)
	
.LABEL $label$87
	*(($22 + $34)) = [0]
	*($23) = *(($28 + [8]))
	*($26) = $38
	*($25) = $16
	*($32) = *($40 + [76 align=4])
	*($40 + [88]) = *($0)
	*($15) = *($40 + [72])
	*($40 + [72]) = [0]
	*($40 + [76]) = [0]
	*($19) = [0]
	CALL $32(($40 + [320]), CALL $31(($40 + [152]), ($40 + [136]), $18, $37, ($40 + [88])))
	$34 = *($40 + [320])
	CALL send_inline($34, (*($40 + [324]) - $34))
	$34 = *($40 + [320])
	if ( ($34 == 0) ){ goto $label$90 }
	*($40 + [324]) = $34
	CALL $79($34)
	
.LABEL $label$90
	$34 = *($33)
	if ( ($34 == 0) ){ goto $label$91 }
	*((($40 + [152]) + [32])) = $34
	CALL $79($34)
	
.LABEL $label$91
	$34 = *($30)
	if ( ($34 == 0) ){ goto $label$92 }
	*($31) = $34
	CALL $79($34)
	
.LABEL $label$92
	if ( ((*($15) & [1]) == 0) ){ goto $label$93 }
	CALL $79(*((($40 + [88]) + [40])))
	
.LABEL $label$93
	if ( ((*($40 + [72]) & [1]) == 0) ){ goto $label$94 }
	CALL $79(*($19))
	
.LABEL $label$94
	$34 = *($40 + [268])
	if ( (int_64)(*($34 + [32]) == 0) ){ goto $label$95 }
	if ( ((int_64)*($34 + [16]) != (int_64)0) ){ goto $label$3 }
	
.LABEL $label$95
	$36 = *($40 + [264])
	*($40 + [88]) = $36
	$34 = (CASTING uint_32)(uint_64 (uint_64)$36 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$34) != (int_32)[0]), [224])
	CALL $53(($40 + [88]))
	CALL $43(*($40 + [272]), $34)
	$36 = *($40 + [88])
	*($40 + [264]) = $36
	if ( (int_64)(*($2) == 0) ){ goto $label$3 }
	if ( (int_64)(*($3) == 0) ){ goto $label$3 }
	$34 = (CASTING uint_32)(uint_64 (uint_64)$36 >> (uint_64)(int_64)32)
	if ( $34) ){ goto $label$5 }
	
.LABEL $label$4
	*(($34 = (($40 + [56]) + [8]))) = *(($2 + [8]))
	*(($22 = (($40 + [40]) + [8]))) = *(($3 + [8]))
	*($40 + [56]) = *($2)
	*($40 + [40]) = *($3)
	*((($40 + [24]) + [8])) = *($34)
	*($40 + [24]) = *($40 + [56])
	*((($40 + [8]) + [8])) = *($22)
	*($40 + [8]) = *($40 + [40])
	CALL _ZN6pomelo27publish_sellorder_if_neededEyN5eosio5assetES1_($0, $1, ($40 + [24]), ($40 + [8]))
	
.LABEL $label$3
	$19 = *($40 + [304])
	if ( ($19 == 0) ){ goto $label$96 }
	$15 = ($40 + [308])
	$34 = *($15)
	if ( ((int_32)$34 == (int_32)$19) ){ goto $label$98 }
	
.LOOP $label$99:
	$34 = ($34 + [-24])
	$22 = *($34)
	*($34) = [0]
	if ( ($22 == 0) ){ goto $label$100 }
	CALL $79($22)
	
.LABEL $label$100
	if ( ((int_32)$19 != (int_32)$34) ){ goto $label$99 }
	$34 = *(($40 + [304]))
	goto $label$97 
	
.LABEL $label$98
	$34 = $19
	
.LABEL $label$97
	*($15) = $19
	CALL $79($34)
	
.LABEL $label$96
	*([0] + [4]) = ($40 + [336])
	return (unreachable)
	
.LABEL $label$2
	CALL $80(($40 + [72]))
	
.LABEL $label$1
	CALL $80(($40 + [72]))
	(unreachable)
}

void .FUNC _ZN6pomelo3buyEyN5eosio5assetES1_ (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	int_32 $20
	int_64 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_64 $36
	int_64 $37
	int_64 $38
	int_64 $39
	int_64 $40
	int_32 $41
	$41 = (*([0] + [4]) - [336])
	*([0] + [4]) = $41
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)1397703940), [1632])
	$37 = *($3 + [8])
	CALL eosio_assert(((int_64)$37 != (int_64)1397703940), [1568])
	$36 = *($3)
	$39 = ((int_64)*($2) * (int_64)100000000)
	CALL eosio_assert((int_64)(((uint_64)$39 % (uint_64)$36) == 0), [1600])
	*((($41 + [280]) + [32])) = [0]
	*($41 + [288]) = (uint_64)$37 >> (uint_64)(int_64)8)
	*($41 + [296]) = (int_64)-1
	*($41 + [304]) = (int_64)0
	*($41 + [280]) = *($0)
	*($41 + [316]) = [0]
	*($41 + [272]) = ($41 + [280])
	*($41 + [192]) = (int_64)0
	$4 = ((uint_64)$39 / (uint_64)$36)
	CALL $61(($41 + [264]), ($41 + [272]), ($41 + [192]))
	if ( (*($41 + [268]) == 0) ){ goto $label$4 }
	$14 = (($41 + [72]) | [1])
	$13 = (($41 + [72]) | [1])
	$12 = (($41 + [88]) + [28])
	$11 = ($41 + [256])
	$10 = ($41 + [248])
	$9 = (($41 + [192]) + [40])
	$8 = (($41 + [192]) + [24])
	$7 = (($41 + [192]) + [16])
	$6 = (($41 + [192]) + [8])
	$5 = (($41 + [192]) + [60])
	$35 = *($41 + [268])
	$28 = ($41 + [124])
	$30 = ($41 + [164])
	$15 = (($41 + [88]) + [32])
	$34 = ($15 + [4])
	
.LOOP $label$5:
	if ( ((uint_64)*($35 + [48]) > (uint_64)$4) ){ goto $label$4 }
	$16 = *(( ($35 + [16]) ? $3 : ((int_64)*($3) > (int_64)*($35 + [16])) ))
	$37 = *($35 + [48])
	CALL eosio_assert(((int_32)$35 != (int_32)[0]), [544])
	$22 = *($41 + [272])
	CALL eosio_assert(((int_32)*($35 + [60]) == (int_32)$22), [672])
	CALL eosio_assert(((int_64)*($22) == (int_64)CALL $fimport$2()), [720])
	*($35 + [16]) = (int_64))(*($35 + [16]) - $16)
	$17 = ((uint_64)((int_64)$37 * (int_64)$16) / (uint_64)(int_64)100000000)
	*($35 + [32]) = (int_64))(*($35 + [32]) - $17)
	$19 = ($35 + [48])
	*($41 + [320]) = *($19)
	$37 = *($35)
	CALL eosio_assert([1], [784])
	*(($24 = (($41 + [88]) + [8]))) = $5
	*($41 + [92]) = ($41 + [192])
	*($41 + [88]) = ($41 + [192])
	CALL $58(($41 + [88]), $35)
	CALL db_update_i64(*($35 + [64]), (int_64)0, ($41 + [192]), [60])
	if ( (uint_64)($37 <= *($22 + [16])) ){ goto $label$6 }
	*(($22 + [16])) = ( (int_64)-2 ? ((int_64)$37 + (int_64)1) : ((uint_64)$37 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($41 + [152]) = *($19)
	if ( (CALL memcmp(($41 + [320]), ($41 + [152]), [8]) == 0) ){ goto $label$7 }
	$19 = *($35 + [68])
	if ( ((int_32)$19 > (int_32)[-1]) ){ goto $label$8 }
	$19 = CALL db_idx64_find_primary(*($22), *($22 + [8]), (int_64)-4421661421696712704, ($41 + [136]), $37)
	*(($35 + [68])) = $19
	
.LABEL $label$8
	CALL db_idx64_update($19, (int_64)0, ($41 + [152]))
	
.LABEL $label$7
	*($2) = (int_64))(*($2) - $17)
	*($3) = (int_64))(*($3) - ((uint_64)((int_64)$17 * (int_64)100000000) / (uint_64)$4))
	$25 = ($3 + [8])
	*($6) = (uint_64)*($25) >> (uint_64)(int_64)8)
	*($7) = (int_64)-1
	*($8) = (int_64)0
	*(($26 = (($41 + [192]) + [32]))) = [0]
	*($41 + [192]) = *($0)
	$18 = CALL $7(($41 + [192]))
	$19 = *($8)
	if ( ($19 == 0) ){ goto $label$9 }
	$27 = (($41 + [192]) + [28])
	$35 = *($27)
	if ( ((int_32)$35 == (int_32)$19) ){ goto $label$11 }
	
.LOOP $label$12:
	$35 = ($35 + [-24])
	$22 = *($35)
	*($35) = [0]
	if ( ($22 == 0) ){ goto $label$13 }
	CALL $79($22)
	
.LABEL $label$13
	if ( ((int_32)$19 != (int_32)$35) ){ goto $label$12 }
	$35 = *($8)
	goto $label$10 
	
.LABEL $label$11
	$35 = $19
	
.LABEL $label$10
	*($27) = $19
	CALL $79($35)
	
.LABEL $label$9
	*($6) = $1
	$35 = *($41 + [268])
	*($7) = *($35 + [8])
	$37 = *($35)
	*($26) = (int_64)1397703940
	*($41 + [192]) = $37
	*($8) = $17
	CALL eosio_assert([1], [1008])
	$37 = (uint_64)*($26) >> (uint_64)(int_64)8)
	$35 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $37) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$37 = (uint_64)$37 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$37) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$37 = (uint_64)$37 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$37) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$35 = ($35 + [1])
	if ( ((int_32)$35 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$22 = [1]
	$35 = ($35 + [1])
	if ( ((int_32)$35 < (int_32)[7]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$22 = [0]
	
.LABEL $label$14
	CALL eosio_assert($22, [976])
	*($9) = $16
	*(($35 = (($41 + [192]) + [48]))) = *($25)
	$20 = (uint_64)(((int_64)$16 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)
	CALL eosio_assert($20, [1008])
	$37 = (uint_64)*($35) >> (uint_64)(int_64)8)
	$35 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $37) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$37 = (uint_64)$37 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$37) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$37 = (uint_64)$37 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$37) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$35 = ($35 + [1])
	if ( ((int_32)$35 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$22 = [1]
	$35 = ($35 + [1])
	if ( ((int_32)$35 < (int_32)[7]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$22 = [0]
	
.LABEL $label$19
	CALL eosio_assert($22, [976])
	*($10) = *(*($41 + [268]) + [48])
	*($11) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$21 = *($0)
	$37 = (int_64)0
	$36 = (int_64)59
	$35 = [928]
	$38 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$37 > (uint_64)(int_64)5) ){ goto $label$29 }
	$22 = *($35)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$22 = ($22 + [165])
	goto $label$27 
	
.LABEL $label$29
	$39 = (int_64)0
	if ( ((uint_64)$37 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$39 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$39 = ((int_64)((int_64)$39 & (int_64)31) << (int_64)((int_64)$36 & (int_64)4294967295))
	
.LABEL $label$25
	$35 = ($35 + [1])
	$37 = ((int_64)$37 + (int_64)1)
	$38 = ((int_64)$39 | (int_64)$38)
	$36 = ((int_64)$36 + (int_64)-5)
	if ( ((int_64)$36 != (int_64)-6) ){ goto $label$24 }
	$37 = (int_64)0
	$36 = (int_64)59
	$35 = [1552]
	$40 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$37 > (uint_64)(int_64)7) ){ goto $label$35 }
	$22 = *($35)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$22 = ($22 + [165])
	goto $label$33 
	
.LABEL $label$35
	$39 = (int_64)0
	if ( ((uint_64)$37 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$39 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$39 = ((int_64)((int_64)$39 & (int_64)31) << (int_64)((int_64)$36 & (int_64)4294967295))
	
.LABEL $label$31
	$35 = ($35 + [1])
	$37 = ((int_64)$37 + (int_64)1)
	$40 = ((int_64)$39 | (int_64)$40)
	$36 = ((int_64)$36 + (int_64)-5)
	if ( ((int_64)$36 != (int_64)-6) ){ goto $label$30 }
	*($24) = $40
	*(($26 = (($41 + [88]) + [16]))) = (int_64)0
	*(($27 = (($41 + [88]) + [24]))) = [0]
	*($41 + [88]) = $21
	$35 = CALL $78([16])
	*($26) = $35
	*($35) = $21
	*($35 + [8]) = $38
	*($12) = [0]
	*($15) = [0]
	$35 = ($35 + [16])
	*($27) = $35
	*(($22 = (($41 + [88]) + [20]))) = $35
	*($28) = [0]
	CALL $25($12, [68])
	$35 = *($12)
	*(($29 = (($41 + [136]) + [8]))) = *($15)
	*($41 + [140]) = $35
	*($41 + [136]) = $35
	*($41 + [320]) = ($41 + [136])
	*((($41 + [152]) + [8])) = $7
	*($30) = $8
	*(($31 = (($41 + [152]) + [16]))) = $9
	*(($32 = (($41 + [152]) + [20]))) = $10
	*((($41 + [152]) + [24])) = $11
	*($41 + [156]) = $6
	*($41 + [152]) = ($41 + [192])
	CALL $52(($41 + [152]), ($41 + [320]))
	CALL $32(($41 + [152]), ($41 + [88]))
	$35 = *($41 + [152])
	CALL send_inline($35, (*($41 + [156]) - $35))
	$35 = *($41 + [152])
	if ( ($35 == 0) ){ goto $label$36 }
	*($41 + [156]) = $35
	CALL $79($35)
	
.LABEL $label$36
	$35 = *($12)
	if ( ($35 == 0) ){ goto $label$37 }
	*($15) = $35
	CALL $79($35)
	
.LABEL $label$37
	$35 = *($26)
	if ( ($35 == 0) ){ goto $label$38 }
	*($22) = $35
	CALL $79($35)
	
.LABEL $label$38
	$40 = *($0)
	$37 = (int_64)0
	$36 = (int_64)59
	$35 = [928]
	$38 = (int_64)0
	
.LOOP $label$39:
	if ( ((uint_64)$37 > (uint_64)(int_64)5) ){ goto $label$44 }
	$22 = *($35)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$22 = ($22 + [165])
	goto $label$42 
	
.LABEL $label$44
	$39 = (int_64)0
	if ( ((uint_64)$37 <= (uint_64)(int_64)11) ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$43
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$39 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$41
	$39 = ((int_64)((int_64)$39 & (int_64)31) << (int_64)((int_64)$36 & (int_64)4294967295))
	
.LABEL $label$40
	$35 = ($35 + [1])
	$37 = ((int_64)$37 + (int_64)1)
	$38 = ((int_64)$39 | (int_64)$38)
	$36 = ((int_64)$36 + (int_64)-5)
	if ( ((int_64)$36 != (int_64)-6) ){ goto $label$39 }
	*($29) = $38
	*($41 + [136]) = $40
	$37 = (int_64)0
	$36 = (int_64)59
	$35 = [32]
	$38 = (int_64)0
	
.LOOP $label$45:
	if ( ((uint_64)$37 > (uint_64)(int_64)10) ){ goto $label$50 }
	$22 = *($35)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$49 }
	$22 = ($22 + [165])
	goto $label$48 
	
.LABEL $label$50
	$39 = (int_64)0
	if ( ((int_64)$37 == (int_64)11) ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$49
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$48
	$39 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$47
	$39 = ((int_64)((int_64)$39 & (int_64)31) << (int_64)((int_64)$36 & (int_64)4294967295))
	
.LABEL $label$46
	$35 = ($35 + [1])
	$36 = ((int_64)$36 + (int_64)-5)
	$38 = ((int_64)$39 | (int_64)$38)
	$37 = ((int_64)$37 + (int_64)1)
	if ( ((int_64)$37 != (int_64)13) ){ goto $label$45 }
	$37 = (int_64)0
	$36 = (int_64)59
	$35 = [16]
	$40 = (int_64)0
	
.LOOP $label$51:
	if ( ((uint_64)$37 > (uint_64)(int_64)7) ){ goto $label$56 }
	$22 = *($35)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$55 }
	$22 = ($22 + [165])
	goto $label$54 
	
.LABEL $label$56
	$39 = (int_64)0
	if ( ((uint_64)$37 <= (uint_64)(int_64)11) ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$55
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$54
	$39 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$53
	$39 = ((int_64)((int_64)$39 & (int_64)31) << (int_64)((int_64)$36 & (int_64)4294967295))
	
.LABEL $label$52
	$35 = ($35 + [1])
	$37 = ((int_64)$37 + (int_64)1)
	$40 = ((int_64)$39 | (int_64)$40)
	$36 = ((int_64)$36 + (int_64)-5)
	if ( ((int_64)$36 != (int_64)-6) ){ goto $label$51 }
	$23 = *($41 + [268])
	CALL eosio_assert([1], [1008])
	$37 = (int_64)5459781
	$35 = [0]
	
.LOOP $label$59:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $37) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$58 }
	$37 = (uint_64)$37 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$37) & (int_64)255) != (int_64)0) ){ goto $label$60 }
	
.LOOP $label$61:
	$37 = (uint_64)$37 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$37) & (int_64)255) != (int_64)0) ){ goto $label$58 }
	$35 = ($35 + [1])
	if ( ((int_32)$35 < (int_32)[7]) ){ goto $label$61 }
	
.LABEL $label$60
	$22 = [1]
	$35 = ($35 + [1])
	if ( ((int_32)$35 < (int_32)[7]) ){ goto $label$59 }
	goto $label$57 
	
.LABEL $label$58
	$22 = [0]
	
.LABEL $label$57
	CALL eosio_assert($22, [976])
	*(($19 = (($41 + [72]) + [8]))) = [0]
	*($41 + [72]) = (int_64)0
	$35 = CALL strlen([16])
	if ( ((uint_32)$35 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$35 >= (uint_32)[11]) ){ goto $label$64 }
	*($41 + [72]) = ($35 << [1])
	$22 = $13
	if ( $35 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$64
	$33 = (($35 + [16]) & [-16])
	$22 = CALL $78($33)
	*($19) = $22
	*($41 + [72]) = ($33 | [1])
	*($41 + [76]) = $35
	
.LABEL $label$63
	CALL memcpy($22, [16], $35)
	
.LABEL $label$62
	*(($22 + $35)) = [0]
	*($24) = *(($23 + [8]))
	*($27) = (int_64)1397703940
	*($26) = $17
	*($34) = *($41 + [76 align=4])
	*($41 + [88]) = *($0)
	*($15) = *($41 + [72])
	*($41 + [72]) = [0]
	*($41 + [76]) = [0]
	*($19) = [0]
	CALL $32(($41 + [320]), CALL $31(($41 + [152]), ($41 + [136]), $38, $40, ($41 + [88])))
	$35 = *($41 + [320])
	CALL send_inline($35, (*($41 + [324]) - $35))
	$35 = *($41 + [320])
	if ( ($35 == 0) ){ goto $label$65 }
	*($41 + [324]) = $35
	CALL $79($35)
	
.LABEL $label$65
	$23 = (($41 + [152]) + [28])
	$35 = *($23)
	if ( ($35 == 0) ){ goto $label$66 }
	*((($41 + [152]) + [32])) = $35
	CALL $79($35)
	
.LABEL $label$66
	$35 = *($31)
	if ( ($35 == 0) ){ goto $label$67 }
	*($32) = $35
	CALL $79($35)
	
.LABEL $label$67
	if ( ((*($15) & [1]) == 0) ){ goto $label$68 }
	CALL $79(*((($41 + [88]) + [40])))
	
.LABEL $label$68
	if ( ((*($41 + [72]) & [1]) == 0) ){ goto $label$69 }
	CALL $79(*($19))
	
.LABEL $label$69
	$40 = *($0)
	$37 = (int_64)0
	$36 = (int_64)59
	$35 = [928]
	$38 = (int_64)0
	
.LOOP $label$70:
	if ( ((uint_64)$37 > (uint_64)(int_64)5) ){ goto $label$75 }
	$22 = *($35)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$74 }
	$22 = ($22 + [165])
	goto $label$73 
	
.LABEL $label$75
	$39 = (int_64)0
	if ( ((uint_64)$37 <= (uint_64)(int_64)11) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$74
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$73
	$39 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$72
	$39 = ((int_64)((int_64)$39 & (int_64)31) << (int_64)((int_64)$36 & (int_64)4294967295))
	
.LABEL $label$71
	$35 = ($35 + [1])
	$37 = ((int_64)$37 + (int_64)1)
	$38 = ((int_64)$39 | (int_64)$38)
	$36 = ((int_64)$36 + (int_64)-5)
	if ( ((int_64)$36 != (int_64)-6) ){ goto $label$70 }
	*($29) = $38
	*($41 + [136]) = $40
	$37 = (int_64)0
	$36 = (int_64)59
	$35 = [16]
	$38 = (int_64)0
	
.LOOP $label$76:
	if ( ((uint_64)$37 > (uint_64)(int_64)7) ){ goto $label$81 }
	$22 = *($35)
	if ( ((uint_32)(($22 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$80 }
	$22 = ($22 + [165])
	goto $label$79 
	
.LABEL $label$81
	$39 = (int_64)0
	if ( ((uint_64)$37 <= (uint_64)(int_64)11) ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$80
	$22 = ( ($22 + [208]) ? [0] : ((($22 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$79
	$39 = (int_64)((int_64)(CASTING uint_64)(uint_32 $22) << (int_64)56) >> (int_64)56)
	
.LABEL $label$78
	$39 = ((int_64)((int_64)$39 & (int_64)31) << (int_64)((int_64)$36 & (int_64)4294967295))
	
.LABEL $label$77
	$35 = ($35 + [1])
	$37 = ((int_64)$37 + (int_64)1)
	$38 = ((int_64)$39 | (int_64)$38)
	$36 = ((int_64)$36 + (int_64)-5)
	if ( ((int_64)$36 != (int_64)-6) ){ goto $label$76 }
	$39 = *($25)
	CALL eosio_assert($20, [1008])
	$37 = (uint_64)$39 >> (uint_64)(int_64)8)
	$35 = [0]
	
.LOOP $label$84:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $37) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$83 }
	$37 = (uint_64)$37 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$37) & (int_64)255) != (int_64)0) ){ goto $label$85 }
	
.LOOP $label$86:
	$37 = (uint_64)$37 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$37) & (int_64)255) != (int_64)0) ){ goto $label$83 }
	$35 = ($35 + [1])
	if ( ((int_32)$35 < (int_32)[7]) ){ goto $label$86 }
	
.LABEL $label$85
	$22 = [1]
	$35 = ($35 + [1])
	if ( ((int_32)$35 < (int_32)[7]) ){ goto $label$84 }
	goto $label$82 
	
.LABEL $label$83
	$22 = [0]
	
.LABEL $label$82
	CALL eosio_assert($22, [976])
	*($19) = [0]
	*($41 + [72]) = (int_64)0
	$35 = CALL strlen([16])
	if ( ((uint_32)$35 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$35 >= (uint_32)[11]) ){ goto $label$89 }
	*($41 + [72]) = ($35 << [1])
	$22 = $14
	if ( $35 ){ goto $label$88 }
	goto $label$87 
	
.LABEL $label$89
	$25 = (($35 + [16]) & [-16])
	$22 = CALL $78($25)
	*($19) = $22
	*($41 + [72]) = ($25 | [1])
	*($41 + [76]) = $35
	
.LABEL $label$88
	CALL memcpy($22, [16], $35)
	
.LABEL $label$87
	*(($22 + $35)) = [0]
	*($24) = $1
	*($26) = $16
	*($27) = $39
	*($34) = *($41 + [76])
	*(($15 + [8])) = *($19)
	*($41 + [88]) = *($0)
	*($15) = *($41 + [72])
	*($41 + [72]) = [0]
	*($41 + [76]) = [0]
	*($19) = [0]
	CALL $32(($41 + [320]), CALL $31(($41 + [152]), ($41 + [136]), $18, $38, ($41 + [88])))
	$35 = *($41 + [320])
	CALL send_inline($35, (*($41 + [324]) - $35))
	$35 = *($41 + [320])
	if ( ($35 == 0) ){ goto $label$90 }
	*($41 + [324]) = $35
	CALL $79($35)
	
.LABEL $label$90
	$35 = *($23)
	if ( ($35 == 0) ){ goto $label$91 }
	*((($41 + [152]) + [32])) = $35
	CALL $79($35)
	
.LABEL $label$91
	$35 = *($31)
	if ( ($35 == 0) ){ goto $label$92 }
	*($32) = $35
	CALL $79($35)
	
.LABEL $label$92
	if ( ((*($15) & [1]) == 0) ){ goto $label$93 }
	CALL $79(*((($41 + [88]) + [40])))
	
.LABEL $label$93
	if ( ((*($41 + [72]) & [1]) == 0) ){ goto $label$94 }
	CALL $79(*($19))
	
.LABEL $label$94
	$35 = *($41 + [268])
	if ( (int_64)(*($35 + [32]) == 0) ){ goto $label$95 }
	if ( ((int_64)*($35 + [16]) != (int_64)0) ){ goto $label$3 }
	
.LABEL $label$95
	$37 = *($41 + [264])
	*($41 + [88]) = $37
	$35 = (CASTING uint_32)(uint_64 (uint_64)$37 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$35) != (int_32)[0]), [224])
	CALL $59(($41 + [88]))
	CALL $33(*($41 + [272]), $35)
	$37 = *($41 + [88])
	*($41 + [264]) = $37
	if ( (int_64)(*($2) == 0) ){ goto $label$3 }
	if ( (int_64)(*($3) == 0) ){ goto $label$3 }
	$35 = (CASTING uint_32)(uint_64 (uint_64)$37 >> (uint_64)(int_64)32)
	if ( $35) ){ goto $label$5 }
	
.LABEL $label$4
	*(($35 = (($41 + [56]) + [8]))) = *(($2 + [8]))
	*(($22 = (($41 + [40]) + [8]))) = *(($3 + [8]))
	*($41 + [56]) = *($2)
	*($41 + [40]) = *($3)
	*((($41 + [24]) + [8])) = *($35)
	*($41 + [24]) = *($41 + [56])
	*((($41 + [8]) + [8])) = *($22)
	*($41 + [8]) = *($41 + [40])
	CALL _ZN6pomelo26publish_buyorder_if_neededEyN5eosio5assetES1_($0, $1, ($41 + [24]), ($41 + [8]))
	
.LABEL $label$3
	$19 = *($41 + [304])
	if ( ($19 == 0) ){ goto $label$96 }
	$15 = ($41 + [308])
	$35 = *($15)
	if ( ((int_32)$35 == (int_32)$19) ){ goto $label$98 }
	
.LOOP $label$99:
	$35 = ($35 + [-24])
	$22 = *($35)
	*($35) = [0]
	if ( ($22 == 0) ){ goto $label$100 }
	CALL $79($22)
	
.LABEL $label$100
	if ( ((int_32)$19 != (int_32)$35) ){ goto $label$99 }
	$35 = *(($41 + [304]))
	goto $label$97 
	
.LABEL $label$98
	$35 = $19
	
.LABEL $label$97
	*($15) = $19
	CALL $79($35)
	
.LABEL $label$96
	*([0] + [4]) = ($41 + [336])
	return (unreachable)
	
.LABEL $label$2
	CALL $80(($41 + [72]))
	
.LABEL $label$1
	CALL $80(($41 + [72]))
	(unreachable)
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [60]) == (int_32)$0), [304])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [352])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [416])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $79($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $79($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [64]))
	$7 = *($1 + [68])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4520852774451150848, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [480])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $78([72])
	$4 = CALL $44($6)
	*($6 + [60]) = $0
	CALL $45(($8 + [32]), $4)
	*($6 + [68]) = [-1]
	*($6 + [64]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [64])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $46(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $79($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	$2 = *($1)
	CALL $85($5, ($1 + [8]))
	$3 = *($1 + [24])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $85(($5 + [16]), $5)
	CALL void $0((int_32 $2), (int_64 ($5 + [16])), (int_32 $3), (int_64 $1))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $79(*($5 + [24]))
	
.LABEL $label$2
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	CALL $79(*($5 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $40 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $78(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $84($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $79($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $79($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN6pomelo5splitENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEc (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($10 + [8]) = [0]
	*($10) = (int_64)0
	$4 = ($2 + [1])
	$6 = ($3 & [255])
	$7 = ($0 + [8])
	$8 = ($0 + [4])
	$3 = [0]
	
.LOOP $label$2:
	$9 = *($2)
	$5 = ($9 & [1])
	if ( $5 ){ goto $label$4 }
	if ( ($3 <= uint_32($9 >> [1])) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	if ( ((uint_32)$3 >= (uint_32)*(($2 + [4]))) ){ goto $label$1 }
	
.LABEL $label$3
	$9 = $4
	if ( ($5 == 0) ){ goto $label$5 }
	$9 = *(($2 + [8]))
	
.LABEL $label$5
	if ( ((int_32)*(($9 + $3)) != (int_32)$6) ){ goto $label$8 }
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)*($7)) ){ goto $label$7 }
	CALL $85($5, $10)
	*($8) = (*($8) + [12])
	goto $label$6 
	
.LABEL $label$8
	$9 = $4
	if ( ($5 == 0) ){ goto $label$9 }
	$9 = *(($2 + [8]))
	
.LABEL $label$9
	CALL $82($10, *(($9 + $3)))
	$3 = ($3 + [1])
	goto $label$2 
	
.LABEL $label$7
	CALL $64($0, $10)
	
.LABEL $label$6
	if ( (*($10) & [1]) ){ goto $label$10 }
	*($10) = [0]
	$3 = ($3 + [1])
	goto $label$2 
	
.LABEL $label$10
	*(*(($10 + [8]))) = [0]
	*($10 + [4]) = [0]
	$3 = ($3 + [1])
	goto $label$2 
	
.LABEL $label$1
	$3 = *($10)
	if ( (( *($10 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ) == 0) ){ goto $label$11 }
	$3 = ($0 + [4])
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)*(($0 + [8]))) ){ goto $label$12 }
	CALL $85($5, $10)
	*($3) = (*($3) + [12])
	goto $label$11 
	
.LABEL $label$12
	CALL $64($0, $10)
	
.LABEL $label$11
	if ( ((*($10) & [1]) == 0) ){ goto $label$13 }
	CALL $79(*(($10 + [8])))
	
.LABEL $label$13
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $46 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $78(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $84($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $79($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $79($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [512])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [512])
	CALL memcpy(($1 + [56]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $44 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1008])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [976])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [1008])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [976])
	return $0
}

void .FUNC _ZN6pomelo10onTransferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [176])
	*([0] + [4]) = $11
	if ( ((int_64)*($0) != (int_64)$2) ){ goto $label$1 }
	CALL require_auth($1)
	$7 = [0]
	$9 = *($3)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$2 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$7 = [0]
	
.LABEL $label$2
	CALL eosio_assert($7, [1136])
	CALL eosio_assert(((int_64)$9 > (int_64)0), [1168])
	CALL $85(($11 + [144]), $4)
	CALL _ZN6pomelo5splitENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEc(($11 + [160]), $8, ($11 + [144]), [32])
	if ( ((*($11 + [144]) & [1]) == 0) ){ goto $label$7 }
	CALL $79(*($11 + [152]))
	
.LABEL $label$7
	if ( ((int_32)(*($11 + [164]) - *($11 + [160])) != (int_32)[24]) ){ goto $label$9 }
	CALL eosio_assert([1], [1008])
	$2 = (int_64)5462355
	$8 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$7 = [0]
	
.LABEL $label$10
	CALL eosio_assert($7, [976])
	CALL $85(($11 + [128]), *($11 + [160]))
	$8 = *($11 + [128])
	$5 = ($8 & [1])
	if ( $5 ){ goto $label$20 }
	$7 = uint_32($8 >> [1])
	if ( ($7 == 0) ){ goto $label$18 }
	$8 = (($11 + [128]) | [1])
	$6 = (int_64)0
	
.LOOP $label$21:
	$4 = *($8)
	if ( ((uint_32)(($4 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$22 }
	$6 = ((int_64)((int_64)((int_64)$6 * (int_64)10) + (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)) + (int_64)-48)
	
.LABEL $label$22
	$8 = ($8 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$7 = *($11 + [132])
	if ( ($7 == 0) ){ goto $label$17 }
	$8 = *(($11 + [136]))
	$6 = (int_64)0
	
.LOOP $label$23:
	$4 = *($8)
	if ( ((uint_32)(($4 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$24 }
	$6 = ((int_64)((int_64)((int_64)$6 * (int_64)10) + (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)) + (int_64)-48)
	
.LABEL $label$24
	$8 = ($8 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$23 }
	
.LABEL $label$19
	if ( $5 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$6 = (int_64)0
	goto $label$15 
	
.LABEL $label$17
	$6 = (int_64)0
	
.LABEL $label$16
	CALL $79(*(($11 + [136])))
	
.LABEL $label$15
	$8 = *($11 + [160])
	if ( (*($8 + [12]) & [1]) ){ goto $label$26 }
	$7 = (($8 + [12]) + [1])
	goto $label$25 
	
.LABEL $label$26
	$7 = *(($8 + [20]))
	
.LABEL $label$25
	$8 = [-1]
	
.LOOP $label$27:
	$4 = ($7 + $8)
	$5 = ($8 + [1])
	$8 = $5
	if ( *(($4 + [1])) ){ goto $label$27 }
	if ( ($5 == 0) ){ goto $label$29 }
	$9 = (CASTING uint_64)(uint_32 $5)
	$10 = (int_64)0
	$2 = (int_64)8
	
.LOOP $label$30:
	$8 = *($7)
	if ( ((uint_32)(($8 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$10 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$2 & (int_64)4294967288)) | (int_64)$10)
	
.LABEL $label$31
	$7 = ($7 + [1])
	$2 = ((int_64)$2 + (int_64)8)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)($9 == 0) == 0) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$29
	$10 = (int_64)0
	
.LABEL $label$28
	$2 = ((int_64)$10 | (int_64)4)
	if ( ((int_64)*($3 + [8]) != (int_64)1397703940) ){ goto $label$32 }
	CALL eosio_assert(((int_64)$2 != (int_64)1397703940), [1200])
	*(($8 = (($11 + [112]) + [8]))) = *(($3 + [8]))
	*($11 + [104]) = $2
	$2 = *($3)
	*((($11 + [16]) + [8])) = *($8)
	*($11 + [112]) = $2
	*($11 + [96]) = $6
	*($11 + [16]) = *($11 + [112])
	*(($11 + [8])) = *($11 + [104])
	*($11) = *($11 + [96])
	CALL _ZN6pomelo3buyEyN5eosio5assetES1_($0, $1, ($11 + [16]), $11)
	$4 = *($11 + [160])
	if ( $4 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$32
	CALL eosio_assert(((int_64)$2 == (int_64)1397703940), [1232])
	*(($8 = (($11 + [80]) + [8]))) = *(($3 + [8]))
	*($11 + [72]) = $2
	$2 = *($3)
	*((($11 + [48]) + [8])) = *($8)
	*($11 + [80]) = $2
	*($11 + [64]) = $6
	*($11 + [48]) = *($11 + [80])
	*((($11 + [32]) + [8])) = *($11 + [72])
	*($11 + [32]) = *($11 + [64])
	CALL _ZN6pomelo4sellEyN5eosio5assetES1_($0, $1, ($11 + [48]), ($11 + [32]))
	
.LABEL $label$9
	$4 = *($11 + [160])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$8
	$8 = *($11 + [164])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$34 }
	$7 = ([0] - $4)
	$8 = ($8 + [-12])
	
.LOOP $label$35:
	if ( ((*($8) & [1]) == 0) ){ goto $label$36 }
	CALL $79(*(($8 + [8])))
	
.LABEL $label$36
	$8 = ($8 + [-12])
	if ( ((int_32)($8 + $7) != (int_32)[-12]) ){ goto $label$35 }
	$8 = *($11 + [160])
	goto $label$33 
	
.LABEL $label$34
	$8 = $4
	
.LABEL $label$33
	*($11 + [164]) = $4
	CALL $79($8)
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [176])
}

void .FUNC _ZN6pomelo5cleanENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [224])
	*([0] + [4]) = $20
	CALL require_auth(*($0))
	$15 = *($0)
	if ( (*($1) & [1]) ){ goto $label$2 }
	$2 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($1 + [8])
	
.LABEL $label$1
	$12 = [-1]
	
.LOOP $label$3:
	$5 = ($2 + $12)
	$19 = ($12 + [1])
	$12 = $19
	if ( *(($5 + [1])) ){ goto $label$3 }
	$14 = (int_64)0
	if ( ($19 == 0) ){ goto $label$4 }
	$13 = (CASTING uint_64)(uint_32 $19)
	$16 = (int_64)0
	$14 = (int_64)8
	
.LOOP $label$5:
	$16 = ((int_64)((int_64)*($2) << (int_64)((int_64)$14 & (int_64)4294967288)) | (int_64)$16)
	$2 = ($2 + [1])
	$14 = ((int_64)$14 + (int_64)8)
	$13 = ((int_64)$13 + (int_64)-1)
	if ( ((int_64)($13 == 0) == 0) ){ goto $label$5 }
	$14 = (uint_64)$16 >> (uint_64)(int_64)8)
	
.LABEL $label$4
	*((($20 + [168]) + [32])) = [0]
	*($20 + [184]) = (int_64)-1
	*($20 + [204]) = [0]
	*($20 + [176]) = $14
	*($20 + [168]) = $15
	*($20 + [192]) = (int_64)0
	$12 = CALL db_lowerbound_i64($15, $14, (int_64)4520852774451150848, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$8 }
	$3 = (($20 + [80]) + [32])
	$19 = (($20 + [80]) + [16])
	$11 = (($20 + [208]) | [1])
	$6 = (($20 + [168]) + [8])
	$8 = ($20 + [156])
	$7 = ($20 + [120])
	$10 = ($20 + [148])
	
.LOOP $label$9:
	CALL $42(($20 + [168]), $12)
	$5 = [0]
	$12 = CALL db_lowerbound_i64(*($20 + [168]), *($6), (int_64)4520852774451150848, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$10 }
	$5 = CALL $42(($20 + [168]), $12)
	
.LABEL $label$10
	$17 = *($0)
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [928]
	$15 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$16 }
	$2 = *($12)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$2 = ($2 + [165])
	goto $label$14 
	
.LABEL $label$16
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$12
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$11 }
	*((($20 + [40]) + [8])) = $15
	*($20 + [40]) = $17
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [32]
	$15 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$14 > (uint_64)(int_64)10) ){ goto $label$22 }
	$2 = *($12)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$2 = ($2 + [165])
	goto $label$20 
	
.LABEL $label$22
	$16 = (int_64)0
	if ( ((int_64)$14 == (int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$18
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$15 = ((int_64)$16 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)1)
	if ( ((int_64)$14 != (int_64)13) ){ goto $label$17 }
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [16]
	$17 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$14 > (uint_64)(int_64)7) ){ goto $label$28 }
	$2 = *($12)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$2 = ($2 + [165])
	goto $label$26 
	
.LABEL $label$28
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$24
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$16 | (int_64)$17)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$23 }
	*(($4 = (($20 + [208]) + [8]))) = [0]
	*($20 + [208]) = (int_64)0
	$12 = CALL strlen([1072])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$7 }
	$2 = ($5 + [16])
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$31 }
	*($20 + [208]) = ($12 << [1])
	$18 = $11
	if ( $12 ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	$9 = (($12 + [16]) & [-16])
	$18 = CALL $78($9)
	*($4) = $18
	*($20 + [208]) = ($9 | [1])
	*($20 + [212]) = $12
	
.LABEL $label$30
	CALL memcpy($18, [1072], $12)
	
.LABEL $label$29
	*(($18 + $12)) = [0]
	*((($20 + [80]) + [8])) = *(($5 + [8]))
	*(($19 + [8])) = *(($2 + [8]))
	*(($19 + [4])) = *(($2 + [4]))
	*($19) = *($2)
	*(($19 + [12])) = *(($2 + [12]))
	*($20 + [80]) = *($0)
	*(($3 + [4])) = *($20 + [212 align=4])
	*($3) = *($20 + [208])
	*($20 + [208]) = [0]
	*($20 + [212]) = [0]
	*($4) = [0]
	CALL $32(($20 + [24]), CALL $31(($20 + [128]), ($20 + [40]), $15, $17, ($20 + [80])))
	$12 = *($20 + [24])
	CALL send_inline($12, (*($20 + [28]) - $12))
	$12 = *($20 + [24])
	if ( ($12 == 0) ){ goto $label$32 }
	*($20 + [28]) = $12
	CALL $79($12)
	
.LABEL $label$32
	$12 = *($8)
	if ( ($12 == 0) ){ goto $label$33 }
	*((($20 + [128]) + [32])) = $12
	CALL $79($12)
	
.LABEL $label$33
	$12 = *((($20 + [128]) + [16]))
	if ( ($12 == 0) ){ goto $label$34 }
	*($10) = $12
	CALL $79($12)
	
.LABEL $label$34
	if ( ((*($3) & [1]) == 0) ){ goto $label$35 }
	CALL $79(*($7))
	
.LABEL $label$35
	if ( ((*($20 + [208]) & [1]) == 0) ){ goto $label$36 }
	CALL $79(*($4))
	
.LABEL $label$36
	$12 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($12, [224])
	CALL eosio_assert($12, [272])
	$12 = CALL db_next_i64(*($5 + [64]), ($20 + [80]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$37 }
	CALL $42(($20 + [168]), $12)
	
.LABEL $label$37
	CALL $43(($20 + [168]), $5)
	$12 = CALL db_lowerbound_i64(*($20 + [168]), *($6), (int_64)4520852774451150848, (int_64)0)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$9 }
	
.LABEL $label$8
	$15 = *($0)
	if ( (*($1) & [1]) ){ goto $label$39 }
	$2 = ($1 + [1])
	goto $label$38 
	
.LABEL $label$39
	$2 = *($1 + [8])
	
.LABEL $label$38
	$12 = [-1]
	
.LOOP $label$40:
	$5 = ($2 + $12)
	$19 = ($12 + [1])
	$12 = $19
	if ( *(($5 + [1])) ){ goto $label$40 }
	$14 = (int_64)0
	if ( ($19 == 0) ){ goto $label$41 }
	$13 = (CASTING uint_64)(uint_32 $19)
	$16 = (int_64)0
	$14 = (int_64)8
	
.LOOP $label$42:
	$16 = ((int_64)((int_64)*($2) << (int_64)((int_64)$14 & (int_64)4294967288)) | (int_64)$16)
	$2 = ($2 + [1])
	$14 = ((int_64)$14 + (int_64)8)
	$13 = ((int_64)$13 + (int_64)-1)
	if ( ((int_64)($13 == 0) == 0) ){ goto $label$42 }
	$14 = (uint_64)$16 >> (uint_64)(int_64)8)
	
.LABEL $label$41
	*((($20 + [128]) + [32])) = [0]
	*($20 + [144]) = (int_64)-1
	*($20 + [164]) = [0]
	*($20 + [136]) = $14
	*($20 + [128]) = $15
	*($20 + [152]) = (int_64)0
	$12 = CALL db_lowerbound_i64($15, $14, (int_64)-4421661421696712704, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$43 }
	$4 = (($20 + [80]) + [32])
	$3 = (($20 + [80]) + [16])
	$7 = (($20 + [8]) | [1])
	$6 = (($20 + [128]) + [8])
	$10 = (($20 + [40]) + [28])
	$1 = ($20 + [120])
	$11 = ($20 + [60])
	
.LOOP $label$44:
	CALL $29(($20 + [128]), $12)
	$19 = [0]
	$12 = CALL db_lowerbound_i64(*($20 + [128]), *($6), (int_64)-4421661421696712704, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$45 }
	$19 = CALL $29(($20 + [128]), $12)
	
.LABEL $label$45
	$17 = *($0)
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [928]
	$15 = (int_64)0
	
.LOOP $label$46:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$51 }
	$2 = *($12)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$50 }
	$2 = ($2 + [165])
	goto $label$49 
	
.LABEL $label$51
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$50
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$49
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$48
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$47
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$46 }
	*((($20 + [24]) + [8])) = $15
	*($20 + [24]) = $17
	*(($8 = (($20 + [80]) + [8]))) = (uint_64)*(($19 + [24])) >> (uint_64)(int_64)8)
	*($3) = (int_64)-1
	*(($18 = (($20 + [80]) + [24]))) = (int_64)0
	*($4) = [0]
	*($20 + [80]) = $17
	$17 = CALL $7(($20 + [80]))
	$5 = *($18)
	if ( ($5 == 0) ){ goto $label$52 }
	$9 = (($20 + [80]) + [28])
	$12 = *($9)
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$54 }
	
.LOOP $label$55:
	$12 = ($12 + [-24])
	$2 = *($12)
	*($12) = [0]
	if ( ($2 == 0) ){ goto $label$56 }
	CALL $79($2)
	
.LABEL $label$56
	if ( ((int_32)$5 != (int_32)$12) ){ goto $label$55 }
	$12 = *($18)
	goto $label$53 
	
.LABEL $label$54
	$12 = $5
	
.LABEL $label$53
	*($9) = $5
	CALL $79($12)
	
.LABEL $label$52
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [16]
	$15 = (int_64)0
	
.LOOP $label$57:
	if ( ((uint_64)$14 > (uint_64)(int_64)7) ){ goto $label$62 }
	$2 = *($12)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$2 = ($2 + [165])
	goto $label$60 
	
.LABEL $label$62
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$59
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$58
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$57 }
	*(($5 = (($20 + [8]) + [8]))) = [0]
	*($20 + [8]) = (int_64)0
	$12 = CALL strlen([1104])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$6 }
	$2 = ($19 + [16])
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$65 }
	*($20 + [8]) = ($12 << [1])
	$18 = $7
	if ( $12 ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$65
	$9 = (($12 + [16]) & [-16])
	$18 = CALL $78($9)
	*($5) = $18
	*($20 + [8]) = ($9 | [1])
	*($20 + [12]) = $12
	
.LABEL $label$64
	CALL memcpy($18, [1104], $12)
	
.LABEL $label$63
	*(($18 + $12)) = [0]
	*($8) = *(($19 + [8]))
	*(($3 + [8])) = *(($2 + [8]))
	*(($3 + [4])) = *(($2 + [4]))
	*($3) = *($2)
	*(($3 + [12])) = *(($2 + [12]))
	*($20 + [80]) = *($0)
	*(($4 + [4])) = *($20 + [12 align=4])
	*($4) = *($20 + [8])
	*($20 + [8]) = [0]
	*($20 + [12]) = [0]
	*($5) = [0]
	CALL $32(($20 + [208]), CALL $31(($20 + [40]), ($20 + [24]), $17, $15, ($20 + [80])))
	$12 = *($20 + [208])
	CALL send_inline($12, (*($20 + [212]) - $12))
	$12 = *($20 + [208])
	if ( ($12 == 0) ){ goto $label$66 }
	*($20 + [212]) = $12
	CALL $79($12)
	
.LABEL $label$66
	$12 = *($10)
	if ( ($12 == 0) ){ goto $label$67 }
	*((($20 + [40]) + [32])) = $12
	CALL $79($12)
	
.LABEL $label$67
	$12 = *((($20 + [40]) + [16]))
	if ( ($12 == 0) ){ goto $label$68 }
	*($11) = $12
	CALL $79($12)
	
.LABEL $label$68
	if ( ((*($4) & [1]) == 0) ){ goto $label$69 }
	CALL $79(*($1))
	
.LABEL $label$69
	if ( ((*($20 + [8]) & [1]) == 0) ){ goto $label$70 }
	CALL $79(*($5))
	
.LABEL $label$70
	$12 = ((int_32)$19 != (int_32)[0])
	CALL eosio_assert($12, [224])
	CALL eosio_assert($12, [272])
	$12 = CALL db_next_i64(*($19 + [64]), ($20 + [80]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$71 }
	CALL $29(($20 + [128]), $12)
	
.LABEL $label$71
	CALL $33(($20 + [128]), $19)
	$12 = CALL db_lowerbound_i64(*($20 + [128]), *($6), (int_64)-4421661421696712704, (int_64)0)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$44 }
	
.LABEL $label$43
	$5 = *($20 + [152])
	if ( ($5 == 0) ){ goto $label$72 }
	$19 = ($20 + [156])
	$12 = *($19)
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$74 }
	
.LOOP $label$75:
	$12 = ($12 + [-24])
	$2 = *($12)
	*($12) = [0]
	if ( ($2 == 0) ){ goto $label$76 }
	CALL $79($2)
	
.LABEL $label$76
	if ( ((int_32)$5 != (int_32)$12) ){ goto $label$75 }
	$12 = *(($20 + [152]))
	goto $label$73 
	
.LABEL $label$74
	$12 = $5
	
.LABEL $label$73
	*($19) = $5
	CALL $79($12)
	
.LABEL $label$72
	$5 = *($20 + [192])
	if ( ($5 == 0) ){ goto $label$77 }
	$19 = ($20 + [196])
	$12 = *($19)
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$79 }
	
.LOOP $label$80:
	$12 = ($12 + [-24])
	$2 = *($12)
	*($12) = [0]
	if ( ($2 == 0) ){ goto $label$81 }
	CALL $79($2)
	
.LABEL $label$81
	if ( ((int_32)$5 != (int_32)$12) ){ goto $label$80 }
	$12 = *(($20 + [192]))
	goto $label$78 
	
.LABEL $label$79
	$12 = $5
	
.LABEL $label$78
	*($19) = $5
	CALL $79($12)
	
.LABEL $label$77
	*([0] + [4]) = ($20 + [224])
	return (unreachable)
	
.LABEL $label$7
	CALL $80(($20 + [208]))
	
.LABEL $label$6
	CALL $80(($20 + [8]))
	(unreachable)
}

void .FUNC $6 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [1008])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [976])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($2 + $1)
	CALL $65($6, $0)
	*([0] + [4]) = ($6 + [16])
}

int_64 .FUNC $7 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = *(($0 + [28]))
	if ( ((int_32)$2 == (int_32)*($0 + [24])) ){ goto $label$2 }
	$2 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)$0), [160])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	$1 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-2063328927043551232, (int_64)-2063328927043551232)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $19($0, $1)
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)$0), [160])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [1728])
	return *($2)
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _ZN6pomelo5applyEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [256])
	*([0] + [4]) = $12
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [16]
	$10 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$6 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$10 != (int_64)$2) ){ goto $label$19 }
	CALL $6(($12 + [168]))
	$5 = ($12 + [184])
	$9 = *(($12 + [192]))
	if ( ((int_64)$9 != (int_64)1397703940) ){ goto $label$18 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [32]
	$10 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$9 > (uint_64)(int_64)10) ){ goto $label$25 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$3 = ($3 + [165])
	goto $label$23 
	
.LABEL $label$25
	$11 = (int_64)0
	if ( ((int_64)$9 == (int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$21
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)1)
	if ( ((int_64)$9 != (int_64)13) ){ goto $label$20 }
	CALL eosio_assert(((int_64)$10 == (int_64)$1), [48])
	goto $label$12 
	
.LABEL $label$19
	if ( ((int_64)*($0) != (int_64)$1) ){ goto $label$7 }
	if ( ((int_64)$2 <= (int_64)3626157926424510463) ){ goto $label$17 }
	if ( ((int_64)$2 > (int_64)4730614998765420543) ){ goto $label$16 }
	if ( ((int_64)$2 == (int_64)3626157926424510464) ){ goto $label$11 }
	if ( ((int_64)$2 != (int_64)4730614989913587712) ){ goto $label$7 }
	*($12 + [124]) = [0]
	*($12 + [120]) = [1]
	*($12 + [32 align=4]) = *($12 + [120])
	CALL $12($0, ($12 + [32]))
	goto $label$7 
	
.LABEL $label$18
	*(($12 + [248])) = [0]
	*($12 + [232]) = (int_64)-1
	*($12 + [240]) = (int_64)0
	*($12 + [216]) = *($0)
	*($12 + [224]) = (uint_64)$9 >> (uint_64)(int_64)8)
	$9 = CALL $7(($12 + [216]))
	$4 = *($12 + [240])
	if ( ($4 == 0) ){ goto $label$13 }
	$6 = ($12 + [244])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$15 }
	
.LOOP $label$26:
	$7 = ($7 + [-24])
	$3 = *($7)
	*($7) = [0]
	if ( ($3 == 0) ){ goto $label$27 }
	CALL $79($3)
	
.LABEL $label$27
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$26 }
	$7 = *(($12 + [240]))
	goto $label$14 
	
.LABEL $label$17
	if ( ((int_64)$2 == (int_64)-8279611178955571200) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)-4847888168705969664) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)-4416968302345342576) ){ goto $label$7 }
	*($12 + [108]) = [0]
	*($12 + [104]) = [2]
	*($12 + [48 align=4]) = *($12 + [104])
	CALL $15($0, ($12 + [48]))
	goto $label$7 
	
.LABEL $label$16
	if ( ((int_64)$2 == (int_64)4730614998765420544) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)4923676291099525120) ){ goto $label$7 }
	*($12 + [132]) = [0]
	*($12 + [128]) = [3]
	*($12 + [24 align=4]) = *($12 + [128])
	CALL $10($0, ($12 + [24]))
	goto $label$7 
	
.LABEL $label$15
	$7 = $4
	
.LABEL $label$14
	*($6) = $4
	CALL $79($7)
	
.LABEL $label$13
	CALL eosio_assert(((int_64)$9 == (int_64)$1), [96])
	
.LABEL $label$12
	$9 = *($12 + [176])
	*((($12 + [152]) + [12])) = *(($5 + [12]))
	*(($7 = (($12 + [152]) + [8]))) = *(($5 + [8]))
	$11 = *($12 + [168])
	*($12 + [152]) = *($5)
	*($12 + [156]) = *(($5 + [4]))
	$3 = ($12 + [200])
	CALL $85(($12 + [136]), $3)
	*((($12 + [8]) + [8])) = *($7)
	*($12 + [8]) = *($12 + [152])
	CALL _ZN6pomelo10onTransferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $11, $9, ($12 + [8]), ($12 + [136]))
	if ( ((*($12 + [136]) & [1]) == 0) ){ goto $label$28 }
	CALL $79(*($12 + [144]))
	
.LABEL $label$28
	if ( ((*($3) & [1]) == 0) ){ goto $label$7 }
	CALL $79(*(($12 + [208])))
	goto $label$7 
	
.LABEL $label$11
	*($12 + [84]) = [0]
	*($12 + [80]) = [4]
	*($12 + [72 align=4]) = *($12 + [80])
	CALL $10($0, ($12 + [72]))
	goto $label$7 
	
.LABEL $label$10
	*($12 + [92]) = [0]
	*($12 + [88]) = [5]
	*($12 + [64 align=4]) = *($12 + [88])
	CALL $10($0, ($12 + [64]))
	goto $label$7 
	
.LABEL $label$9
	*($12 + [116]) = [0]
	*($12 + [112]) = [6]
	*($12 + [40 align=4]) = *($12 + [112])
	CALL $12($0, ($12 + [40]))
	goto $label$7 
	
.LABEL $label$8
	*($12 + [100]) = [0]
	*($12 + [96]) = [7]
	*($12 + [56 align=4]) = *($12 + [96])
	CALL $10($0, ($12 + [56]))
	
.LABEL $label$7
	*([0] + [4]) = ($12 + [256])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN6pomelo12setwhitelistENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	CALL require_auth(*($0))
	*($8 + [40]) = $2
	$3 = *($0)
	if ( (*($1) & [1]) ){ goto $label$2 }
	$0 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$0 = *($1 + [8])
	
.LABEL $label$1
	$1 = [-1]
	
.LOOP $label$3:
	$5 = ($0 + $1)
	$4 = ($1 + [1])
	$1 = $4
	if ( *(($5 + [1])) ){ goto $label$3 }
	$2 = (int_64)0
	if ( ($4 == 0) ){ goto $label$4 }
	$6 = (CASTING uint_64)(uint_32 $4)
	$7 = (int_64)0
	$2 = (int_64)8
	
.LOOP $label$5:
	$7 = ((int_64)((int_64)*($0) << (int_64)((int_64)$2 & (int_64)4294967288)) | (int_64)$7)
	$0 = ($0 + [1])
	$2 = ((int_64)$2 + (int_64)8)
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)($6 == 0) == 0) ){ goto $label$5 }
	$2 = (uint_64)$7 >> (uint_64)(int_64)8)
	
.LABEL $label$4
	*(($8 + [32])) = [0]
	*($8 + [8]) = $2
	*($8) = $3
	*($8 + [16]) = (int_64)-1
	*($8 + [24]) = (int_64)0
	CALL $26($8, ($8 + [40]), $3)
	$5 = *($8 + [24])
	if ( ($5 == 0) ){ goto $label$6 }
	$4 = ($8 + [28])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $79($0)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$9 }
	$1 = *(($8 + [24]))
	goto $label$7 
	
.LABEL $label$8
	$1 = $5
	
.LABEL $label$7
	*($4) = $5
	CALL $79($1)
	
.LABEL $label$6
	*([0] + [4]) = ($8 + [48])
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*($2 + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [52]) = $1
	*($2 + [48]) = $1
	*($2 + [56]) = ($1 + $0)
	CALL $22(($2 + [48]), ($2 + [8]))
	CALL eosio_assert(((uint_32)(*($2 + [56]) - *($2 + [52])) > (uint_32)[7]), [512])
	CALL memcpy(($2 + [24]), *($2 + [52]), [8])
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $23(($2 + [48]), ($2 + [8]))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $79(*(($2 + [16])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [64])
	return [1]
}

void .FUNC _ZN6pomelo11rmwhitelistENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	CALL require_auth(*($0))
	$2 = *($0)
	if ( (*($1) & [1]) ){ goto $label$2 }
	$0 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$0 = *($1 + [8])
	
.LABEL $label$1
	$1 = [-1]
	
.LOOP $label$3:
	$4 = ($0 + $1)
	$3 = ($1 + [1])
	$1 = $3
	if ( *(($4 + [1])) ){ goto $label$3 }
	$5 = (int_64)0
	if ( ($3 == 0) ){ goto $label$4 }
	$6 = (CASTING uint_64)(uint_32 $3)
	$7 = (int_64)0
	$5 = (int_64)8
	
.LOOP $label$5:
	$7 = ((int_64)((int_64)*($0) << (int_64)((int_64)$5 & (int_64)4294967288)) | (int_64)$7)
	$0 = ($0 + [1])
	$5 = ((int_64)$5 + (int_64)8)
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)($6 == 0) == 0) ){ goto $label$5 }
	$5 = (uint_64)$7 >> (uint_64)(int_64)8)
	
.LABEL $label$4
	*(($8 + [32])) = [0]
	*($8 + [16]) = (int_64)-1
	*($8 + [24]) = (int_64)0
	*($8 + [8]) = $5
	*($8) = $2
	$1 = CALL db_find_i64($2, $5, (int_64)-2063328927043551232, (int_64)-2063328927043551232)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$6 }
	$1 = CALL $19($8, $1)
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$8), [160])
	CALL eosio_assert([1], [224])
	CALL eosio_assert([1], [272])
	$0 = CALL db_next_i64(*($1 + [12]), ($8 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$7 }
	CALL $19($8, $0)
	
.LABEL $label$7
	CALL $20($8, $1)
	
.LABEL $label$6
	$4 = *($8 + [24])
	if ( ($4 == 0) ){ goto $label$8 }
	$3 = ($8 + [28])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$12 }
	CALL $79($0)
	
.LABEL $label$12
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$11 }
	$1 = *(($8 + [24]))
	goto $label$9 
	
.LABEL $label$10
	$1 = $4
	
.LABEL $label$9
	*($3) = $4
	CALL $79($1)
	
.LABEL $label$8
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $17 (int_32 $0, int_32 $1)
{
}

int_32 .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	*($5) = (int_64)0
	*($5 + [36]) = $1
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + $3)
	CALL $22(($5 + [32]), $5)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	CALL $85(($5 + [16]), $5)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL $85(($5 + [32]), ($5 + [16]))
	CALL void $1((int_32 ($5 + [32])), (int_32 $4))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $79(*($5 + [40]))
	
.LABEL $label$6
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$7 }
	CALL $79(*($5 + [24]))
	
.LABEL $label$7
	if ( ((*($5) & [1]) == 0) ){ goto $label$8 }
	CALL $79(*(($5 + [8])))
	
.LABEL $label$8
	*([0] + [4]) = ($5 + [48])
	return [1]
}

void .FUNC _ZN6pomelo9cancelbuyEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [176])
	*([0] + [4]) = $13
	CALL require_auth($1)
	$11 = *($0)
	if ( (*($2) & [1]) ){ goto $label$2 }
	$8 = ($2 + [1])
	goto $label$1 
	
.LABEL $label$2
	$8 = *($2 + [8])
	
.LABEL $label$1
	$2 = [-1]
	
.LOOP $label$3:
	$6 = ($8 + $2)
	$4 = ($2 + [1])
	$2 = $4
	if ( *(($6 + [1])) ){ goto $label$3 }
	$10 = (int_64)0
	if ( ($4 == 0) ){ goto $label$4 }
	$9 = (CASTING uint_64)(uint_32 $4)
	$12 = (int_64)0
	$10 = (int_64)8
	
.LOOP $label$5:
	$12 = ((int_64)((int_64)*($8) << (int_64)((int_64)$10 & (int_64)4294967288)) | (int_64)$12)
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)8)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)($9 == 0) == 0) ){ goto $label$5 }
	$10 = (uint_64)$12 >> (uint_64)(int_64)8)
	
.LABEL $label$4
	*(($13 + [152])) = [0]
	*($13 + [136]) = (int_64)-1
	*($13 + [144]) = (int_64)0
	*($13 + [156]) = [0]
	*($13 + [128]) = $10
	*($13 + [120]) = $11
	$6 = [0]
	$2 = CALL db_find_i64($11, $10, (int_64)4520852774451150848, $3)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	$6 = CALL $42(($13 + [120]), $2)
	CALL eosio_assert(((int_32)*($6 + [60]) == (int_32)($13 + [120])), [160])
	
.LABEL $label$6
	$5 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($5, [896])
	$2 = [1]
	if ( ((int_64)*($6 + [8]) == (int_64)$1) ){ goto $label$7 }
	$10 = (int_64)0
	$12 = (int_64)59
	$2 = [848]
	$11 = (int_64)0
	
.LOOP $label$8:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$9 }
	$8 = *($2)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$8 = ($8 + [165])
	goto $label$10 
	
.LABEL $label$11
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$9
	$2 = ($2 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$9 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$8 }
	$2 = ((int_64)$11 == (int_64)$1)
	
.LABEL $label$7
	CALL eosio_assert($2, [864])
	$1 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$2 = [928]
	$11 = (int_64)0
	
.LOOP $label$12:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$17 }
	$8 = *($2)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$8 = ($8 + [165])
	goto $label$15 
	
.LABEL $label$17
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$14
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$13
	$2 = ($2 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$12 }
	*($13 + [72]) = $11
	*($13 + [64]) = $1
	$10 = (int_64)0
	$9 = (int_64)59
	$2 = [32]
	$11 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$23 }
	$8 = *($2)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$8 = ($8 + [165])
	goto $label$21 
	
.LABEL $label$23
	$12 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$19
	$2 = ($2 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$18 }
	$10 = (int_64)0
	$9 = (int_64)59
	$2 = [16]
	$1 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$29 }
	$8 = *($2)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$8 = ($8 + [165])
	goto $label$27 
	
.LABEL $label$29
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$25
	$2 = ($2 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$1 = ((int_64)$12 | (int_64)$1)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$24 }
	*(($13 + [8])) = [0]
	*($13) = (int_64)0
	$2 = CALL strlen([944])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$30 }
	$8 = ($6 + [16])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$33 }
	*($13) = ($2 << [1])
	$4 = ($13 | [1])
	if ( $2 ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	$7 = (($2 + [16]) & [-16])
	$4 = CALL $78($7)
	*($13) = ($7 | [1])
	*($13 + [8]) = $4
	*($13 + [4]) = $2
	
.LABEL $label$32
	CALL memcpy($4, [944], $2)
	
.LABEL $label$31
	*(($4 + $2)) = [0]
	$10 = *(($6 + [8]))
	*(($13 + [40])) = *(($8 + [8]))
	*(($13 + [36])) = *(($8 + [4]))
	*(($13 + [44])) = *(($8 + [12]))
	*($13 + [16]) = *($0)
	*($13 + [24]) = $10
	*($13 + [32]) = *($8)
	*(($13 + [52])) = *($13 + [4 align=4])
	*($13 + [48]) = *($13)
	*($13) = [0]
	*($13 + [4]) = [0]
	*(($13 + [8])) = [0]
	$2 = CALL $31(($13 + [80]), ($13 + [64]), $11, $1, ($13 + [16]))
	CALL $32(($13 + [160]), $2)
	$8 = *($13 + [160])
	CALL send_inline($8, (*($13 + [164]) - $8))
	$8 = *($13 + [160])
	if ( ($8 == 0) ){ goto $label$34 }
	*($13 + [164]) = $8
	CALL $79($8)
	
.LABEL $label$34
	$8 = *($2 + [28])
	if ( ($8 == 0) ){ goto $label$35 }
	*(($2 + [32])) = $8
	CALL $79($8)
	
.LABEL $label$35
	$8 = *($2 + [16])
	if ( ($8 == 0) ){ goto $label$36 }
	*(($2 + [20])) = $8
	CALL $79($8)
	
.LABEL $label$36
	if ( ((*(($13 + [48])) & [1]) == 0) ){ goto $label$37 }
	CALL $79(*(($13 + [56])))
	
.LABEL $label$37
	if ( ((*($13) & [1]) == 0) ){ goto $label$38 }
	CALL $79(*(($13 + [8])))
	
.LABEL $label$38
	CALL eosio_assert($5, [224])
	CALL eosio_assert($5, [272])
	$2 = CALL db_next_i64(*($6 + [64]), ($13 + [16]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$39 }
	CALL $42(($13 + [120]), $2)
	
.LABEL $label$39
	CALL $43(($13 + [120]), $6)
	$6 = *($13 + [144])
	if ( ($6 == 0) ){ goto $label$40 }
	$4 = ($13 + [148])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$42 }
	
.LOOP $label$43:
	$2 = ($2 + [-24])
	$8 = *($2)
	*($2) = [0]
	if ( ($8 == 0) ){ goto $label$44 }
	CALL $79($8)
	
.LABEL $label$44
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$43 }
	$2 = *(($13 + [144]))
	goto $label$41 
	
.LABEL $label$42
	$2 = $6
	
.LABEL $label$41
	*($4) = $6
	CALL $79($2)
	
.LABEL $label$40
	*([0] + [4]) = ($13 + [176])
	return (unreachable)
	
.LABEL $label$30
	CALL $80($13)
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [16])) = [0]
	*($2) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [56]) = ($1 + $0)
	*($2 + [48]) = $1
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [512])
	CALL memcpy($2, $1, [8])
	*($2 + [52]) = ($1 + [8])
	CALL $22(($2 + [48]), ($2 + [8]))
	CALL eosio_assert(((uint_32)(*($2 + [56]) - *($2 + [52])) > (uint_32)[7]), [512])
	CALL memcpy(($2 + [24]), *($2 + [52]), [8])
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $41(($2 + [48]), $2)
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $79(*(($2 + [16])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [64])
	return [1]
}

void .FUNC _ZN6pomelo10cancelsellEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [192])
	*([0] + [4]) = $12
	CALL require_auth($1)
	$10 = *($0)
	if ( (*($2) & [1]) ){ goto $label$2 }
	$7 = ($2 + [1])
	goto $label$1 
	
.LABEL $label$2
	$7 = *($2 + [8])
	
.LABEL $label$1
	$6 = [-1]
	
.LOOP $label$3:
	$5 = ($7 + $6)
	$4 = ($6 + [1])
	$6 = $4
	if ( *(($5 + [1])) ){ goto $label$3 }
	$9 = (int_64)0
	if ( ($4 == 0) ){ goto $label$4 }
	$8 = (CASTING uint_64)(uint_32 $4)
	$11 = (int_64)0
	$9 = (int_64)8
	
.LOOP $label$5:
	$11 = ((int_64)((int_64)*($7) << (int_64)((int_64)$9 & (int_64)4294967288)) | (int_64)$11)
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)8)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)($8 == 0) == 0) ){ goto $label$5 }
	$9 = (uint_64)$11 >> (uint_64)(int_64)8)
	
.LABEL $label$4
	$5 = [0]
	*(($12 + [168])) = [0]
	*($12 + [152]) = (int_64)-1
	*($12 + [160]) = (int_64)0
	*($12 + [172]) = [0]
	*($12 + [144]) = $9
	*($12 + [136]) = $10
	$6 = CALL db_find_i64($10, $9, (int_64)-4421661421696712704, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$5 = CALL $29(($12 + [136]), $6)
	CALL eosio_assert(((int_32)*($5 + [60]) == (int_32)($12 + [136])), [160])
	
.LABEL $label$6
	$6 = [1]
	if ( ((int_64)*($5 + [8]) == (int_64)$1) ){ goto $label$7 }
	$9 = (int_64)0
	$11 = (int_64)59
	$6 = [848]
	$10 = (int_64)0
	
.LOOP $label$8:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$9 }
	$7 = *($6)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$7 = ($7 + [165])
	goto $label$10 
	
.LABEL $label$11
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$8 }
	$6 = ((int_64)$10 == (int_64)$1)
	
.LABEL $label$7
	CALL eosio_assert($6, [864])
	CALL eosio_assert(((int_64)*($5) == (int_64)$3), [896])
	$1 = *($0)
	$9 = (int_64)0
	$8 = (int_64)59
	$6 = [928]
	$10 = (int_64)0
	
.LOOP $label$12:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$17 }
	$7 = *($6)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$7 = ($7 + [165])
	goto $label$15 
	
.LABEL $label$17
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$14
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$13
	$6 = ($6 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$12 }
	*($12 + [88]) = $10
	*($12 + [80]) = $1
	CALL $85(($12 + [64]), $2)
	$1 = CALL _ZN6pomelo27get_contract_name_by_symbolENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, ($12 + [64]))
	$9 = (int_64)0
	$8 = (int_64)59
	$6 = [16]
	$10 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$23 }
	$7 = *($6)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$7 = ($7 + [165])
	goto $label$21 
	
.LABEL $label$23
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$19
	$6 = ($6 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$18 }
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$6 = CALL strlen([944])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$24 }
	$7 = ($5 + [16])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$27 }
	*($12) = ($6 << [1])
	$4 = ($12 | [1])
	if ( $6 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$2 = (($6 + [16]) & [-16])
	$4 = CALL $78($2)
	*($12) = ($2 | [1])
	*($12 + [8]) = $4
	*($12 + [4]) = $6
	
.LABEL $label$26
	CALL memcpy($4, [944], $6)
	
.LABEL $label$25
	*(($4 + $6)) = [0]
	$9 = *(($5 + [8]))
	*(($12 + [40])) = *(($7 + [8]))
	*(($12 + [36])) = *(($7 + [4]))
	*(($12 + [44])) = *(($7 + [12]))
	*($12 + [16]) = *($0)
	*($12 + [24]) = $9
	*($12 + [32]) = *($7)
	*(($12 + [52])) = *($12 + [4 align=4])
	*($12 + [48]) = *($12)
	*($12) = [0]
	*($12 + [4]) = [0]
	*(($12 + [8])) = [0]
	$6 = CALL $31(($12 + [96]), ($12 + [80]), $1, $10, ($12 + [16]))
	CALL $32(($12 + [176]), $6)
	$7 = *($12 + [176])
	CALL send_inline($7, (*($12 + [180]) - $7))
	$7 = *($12 + [176])
	if ( ($7 == 0) ){ goto $label$28 }
	*($12 + [180]) = $7
	CALL $79($7)
	
.LABEL $label$28
	$7 = *($6 + [28])
	if ( ($7 == 0) ){ goto $label$29 }
	*(($6 + [32])) = $7
	CALL $79($7)
	
.LABEL $label$29
	$7 = *($6 + [16])
	if ( ($7 == 0) ){ goto $label$30 }
	*(($6 + [20])) = $7
	CALL $79($7)
	
.LABEL $label$30
	if ( ((*(($12 + [48])) & [1]) == 0) ){ goto $label$31 }
	CALL $79(*(($12 + [56])))
	
.LABEL $label$31
	if ( ((*($12) & [1]) == 0) ){ goto $label$32 }
	CALL $79(*(($12 + [8])))
	
.LABEL $label$32
	if ( ((*($12 + [64]) & [1]) == 0) ){ goto $label$33 }
	CALL $79(*($12 + [72]))
	
.LABEL $label$33
	$6 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($6, [224])
	CALL eosio_assert($6, [272])
	$6 = CALL db_next_i64(*($5 + [64]), ($12 + [16]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$34 }
	CALL $29(($12 + [136]), $6)
	
.LABEL $label$34
	CALL $33(($12 + [136]), $5)
	$5 = *($12 + [160])
	if ( ($5 == 0) ){ goto $label$35 }
	$4 = ($12 + [164])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$37 }
	
.LOOP $label$38:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$39 }
	CALL $79($7)
	
.LABEL $label$39
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$38 }
	$6 = *(($12 + [160]))
	goto $label$36 
	
.LABEL $label$37
	$6 = $5
	
.LABEL $label$36
	*($4) = $5
	CALL $79($6)
	
.LABEL $label$35
	*([0] + [4]) = ($12 + [192])
	return (unreachable)
	
.LABEL $label$24
	CALL $80($12)
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $76($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [10160])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC $18 (int_32 $0, int_32 $1)
{
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [480])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $78([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [512])
	CALL memcpy($5, $6, [8])
	*($5 + [12]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)-2063328927043551232
	$6 = *($5 + [12])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)-2063328927043551232
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $21(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $79($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $59 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = [0]
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [272])
	$8 = *($0 + [4])
	$6 = *($8 + [68])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$1 }
	$6 = *(*($0))
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-4421661421696712704, ($9 + [8]), *($8))
	*(*(($0 + [4])) + [68]) = $6
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($6, ($9 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$3 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [60]) == (int_32)$2), [160])
	goto $label$5 
	
.LABEL $label$6
	$7 = CALL $29($2, CALL $fimport$5(*($2), *($2 + [8]), (int_64)-4421661421696712704, $3))
	CALL eosio_assert(((int_32)*($7 + [60]) == (int_32)$2), [160])
	
.LABEL $label$5
	*($7 + [68]) = $1
	
.LABEL $label$2
	*(($0 + [4])) = $7
	*([0] + [4]) = ($9 + [16])
	return $0
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [656])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $51 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [24]) = (int_64)0
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	CALL eosio_assert([1], [1008])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [976])
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [1008])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [976])
	return $0
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [656])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [656])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [656])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [656])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [656])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [656])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [656])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [656])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [656])
	CALL memcpy(*($2 + [4]), $0, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

int_32 .FUNC $53 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = [0]
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [272])
	$8 = *($0 + [4])
	$6 = *($8 + [68])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$1 }
	$6 = *(*($0))
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)4520852774451150848, ($9 + [8]), *($8))
	*(*(($0 + [4])) + [68]) = $6
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($6, ($9 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$3 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [60]) == (int_32)$2), [160])
	goto $label$5 
	
.LABEL $label$6
	$7 = CALL $42($2, CALL $fimport$5(*($2), *($2 + [8]), (int_64)4520852774451150848, $3))
	CALL eosio_assert(((int_32)*($7 + [60]) == (int_32)$2), [160])
	
.LABEL $label$5
	*($7 + [68]) = $1
	
.LABEL $label$2
	*(($0 + [4])) = $7
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC _ZN6pomelo27publish_sellorder_if_neededEyN5eosio5assetES1_ (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [128])
	*([0] + [4]) = $8
	*($8 + [80]) = $1
	$4 = *($2 + [8])
	CALL eosio_assert(((int_64)$4 != (int_64)1397703940), [1328])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)1397703940), [1232])
	if ( ((int_64)*($3) < (int_64)1) ){ goto $label$1 }
	*(($5 = ($8 + [72]))) = [0]
	*($8 + [56]) = (int_64)-1
	$1 = (int_64)0
	*($8 + [64]) = (int_64)0
	$6 = *($0)
	*($8 + [40]) = $6
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	*($8 + [48]) = $4)
	*($8 + [76]) = [0]
	$7 = CALL db_lowerbound_i64($6, $4, (int_64)-4421661421696712704, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	CALL $29(($8 + [40]), $7)
	*($8 + [12]) = [0]
	*($8 + [8]) = ($8 + [40])
	$1 = *(*(CALL $56(($8 + [8])) + [4]))
	$1 = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($7 = ($8 + [56]))) = $1
	CALL eosio_assert((uint_64)($1 <= (int_64)-2), [1360])
	*($8 + [32]) = *($7)
	$1 = *($0)
	*($8 + [16]) = $3
	*($8 + [20]) = $2
	*($8 + [24]) = $0
	*($8 + [12]) = ($8 + [80])
	*($8 + [8]) = ($8 + [32])
	*($8 + [120]) = $1
	CALL eosio_assert(((int_64)*($8 + [40]) == (int_64)CALL $fimport$2()), [592])
	*($8 + [100]) = ($8 + [8])
	*($8 + [96]) = ($8 + [40])
	*($8 + [104]) = ($8 + [120])
	$3 = CALL $78([72])
	CALL $38($3)
	*($3 + [60]) = ($8 + [40])
	CALL $57(($8 + [96]), $3)
	*($8 + [112]) = $3
	$1 = *($3)
	*($8 + [96]) = $1
	$2 = *($3 + [64])
	*($8 + [92]) = $2
	$7 = ($8 + [68])
	$0 = *($7)
	if ( ((uint_32)$0 >= (uint_32)*($5)) ){ goto $label$4 }
	*($0 + [8]) = $1
	*($0 + [16]) = $2
	*($8 + [112]) = [0]
	*($0) = $3
	*($7) = ($0 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $40(($8 + [64]), ($8 + [112]), ($8 + [96]), ($8 + [92]))
	
.LABEL $label$3
	$3 = *($8 + [112])
	*($8 + [112]) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $79($3)
	
.LABEL $label$5
	$2 = *($8 + [64])
	if ( ($2 == 0) ){ goto $label$1 }
	$5 = ($8 + [68])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	CALL $79($0)
	
.LABEL $label$9
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$8 }
	$3 = *(($8 + [64]))
	goto $label$6 
	
.LABEL $label$7
	$3 = $2
	
.LABEL $label$6
	*($5) = $2
	CALL $79($3)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [128])
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [656])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [656])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [656])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $56 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [64]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1504])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-4421661421696712704)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1440])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1440])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $29(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [64])
	$12 = $13
	*([0] + [4]) = $13
	$6 = *($0 + [4])
	*($1) = *(*($6))
	*($1 + [8]) = *(*($6 + [4]))
	$2 = *($0)
	$4 = *($6 + [16])
	$5 = *($6 + [8])
	*($1 + [32]) = *($5)
	*(($1 + [40])) = *(($5 + [8]))
	$5 = *($6 + [12])
	*($1 + [16]) = *($5)
	*(($1 + [24])) = *(($5 + [8]))
	*($1 + [48]) = ((uint_64)((int_64)*(*($6 + [8])) * (int_64)100000000) / (uint_64)*(*($6 + [12])))
	*($1 + [56]) = CALL current_time()
	$3 = *($4)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [928]
	$9 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$6 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1424]
	$11 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$12 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$4 = ($4 + [165])
	goto $label$10 
	
.LABEL $label$12
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$8
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$7 }
	*($12 + [16]) = $11
	*($12 + [8]) = $3
	*(($6 = CALL $78([16]))) = $3
	*($6 + [8]) = $9
	*(($4 = ($12 + [40]))) = [0]
	$5 = ($6 + [16])
	*(($12 + [32])) = $5
	*(($12 + [28])) = $5
	*($12 + [24]) = $6
	*($12 + [36]) = [0]
	*(($12 + [44])) = [0]
	CALL $25(($12 + [36]), [60])
	$6 = *($4)
	$4 = *($12 + [36])
	*($12 + [52]) = $4
	*($12 + [48]) = $4
	*($12 + [56]) = $6
	CALL $58(($12 + [48]), $1)
	CALL $32(($12 + [48]), ($12 + [8]))
	$6 = *($12 + [48])
	CALL send_inline($6, (*($12 + [52]) - $6))
	$6 = *($12 + [48])
	if ( ($6 == 0) ){ goto $label$13 }
	*($12 + [52]) = $6
	CALL $79($6)
	
.LABEL $label$13
	$6 = *($12 + [36])
	if ( ($6 == 0) ){ goto $label$14 }
	*(($12 + [40])) = $6
	CALL $79($6)
	
.LABEL $label$14
	$6 = *($12 + [24])
	if ( ($6 == 0) ){ goto $label$15 }
	*(($12 + [28])) = $6
	CALL $79($6)
	
.LABEL $label$15
	$4 = $13
	$6 = ($4 + [-64])
	*([0] + [4]) = $6
	*($12 + [12]) = $6
	*($12 + [8]) = $6
	*($12 + [16]) = ($4 + [-4])
	CALL $58(($12 + [8]), $1)
	$8 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($2 + [8]), (int_64)-4421661421696712704, *(*($0 + [8])), $8, $6, [60])
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$16 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$8 = *(($2 + [8]))
	$10 = *(*(($0 + [8])))
	$7 = *($1)
	*($12 + [48]) = *(($1 + [48]))
	*($1 + [68]) = CALL db_idx64_store($8, (int_64)-4421661421696712704, $10, $7, ($12 + [48]))
	*([0] + [4]) = ($12 + [64])
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [656])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [656])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [480])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $78([72])
	$4 = CALL $38($6)
	*($6 + [60]) = $0
	CALL $39(($8 + [32]), $4)
	*($6 + [68]) = [-1]
	*($6 + [64]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [64])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $40(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $79($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $28 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [592])
	*(($4 = CALL $78([24])) + [8]) = $1
	*($4) = *(*($3))
	CALL eosio_assert([1], [656])
	CALL memcpy(($7 + [16]), $4, [8])
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)-2063328927043551232, $2, (int_64)-2063328927043551232, ($7 + [16]), [8])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-2063328927043551232) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-2063328927043551231
	
.LABEL $label$1
	*($7 + [8]) = $4
	*($7 + [16]) = (int_64)-2063328927043551232
	$5 = *($4 + [12])
	*($7 + [4]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)-2063328927043551232
	*($3 + [16]) = $5
	*($7 + [8]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $21(($1 + [24]), ($7 + [8]), ($7 + [16]), ($7 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($7 + [8])
	*($7 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $79($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4520852774451150848, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [60]) == (int_32)$4), [160])
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$8 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)4520852774451150848, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$2 = CALL $42($4, $8)
	CALL eosio_assert(((int_32)*($2 + [60]) == (int_32)$4), [160])
	
.LABEL $label$4
	*($2 + [68]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $78(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $84($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $79($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $79($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [304])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [352])
	$6 = ($0 + [28])
	$5 = *($6)
	CALL eosio_assert(((int_32)$5 != (int_32)*($0 + [24])), [416])
	$4 = ($5 + [-24])
	$6 = *($6)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$2 = ([0] - $6)
	
.LOOP $label$4:
	$6 = ($4 + [24])
	$3 = *($6)
	*($6) = [0]
	$5 = *($4)
	*($4) = $3
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $79($5)
	
.LABEL $label$5
	*(($4 + [16])) = *(($4 + [40]))
	*(($4 + [8])) = *(($4 + [32]))
	$4 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$4 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = $4
	
.LABEL $label$2
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $79($4)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$1
	*(($0 + [28])) = $6
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	CALL $85($4, $1)
	$2 = *($1 + [16])
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$1 = (*(*($0)) + int_32($3 >> [1]))
	$0 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL $85(($4 + [16]), $4)
	CALL void $1((int_32 ($4 + [16])), (int_32 $2), (int_64 $0))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $79(*($4 + [24]))
	
.LABEL $label$2
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	CALL $79(*($4 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [32])
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $24($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $81($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $78($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $81($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $79($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $80($7)
	return (unreachable)
}

void .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $78($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $84($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $79($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [528])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $25($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [512])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $27 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [672])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [720])
	*($1) = *(*($3))
	CALL eosio_assert([1], [784])
	CALL eosio_assert([1], [656])
	CALL memcpy($4, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $4, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-2063328927043551232) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)-2063328927043551231
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $26 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [160])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-2063328927043551232, (int_64)-2063328927043551232)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $19($0, $3)
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [160])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [544])
	CALL $27($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $28($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_64 .FUNC _ZN6pomelo27get_contract_name_by_symbolEN5eosio11symbol_typeE (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	*($5 + [8]) = *($0)
	*($5 + [16]) = (uint_64)$1 >> (uint_64)(int_64)8)
	$1 = CALL $7(($5 + [8]))
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $79($3)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($5 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $2
	
.LABEL $label$2
	*($4) = $2
	CALL $79($0)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
	return $1
}

int_64 .FUNC _ZN6pomelo19my_string_to_symbolEhPKc (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$5 = [-1]
	
.LOOP $label$1:
	$4 = ($2 + $5)
	$3 = ($5 + [1])
	$5 = $3
	if ( *(($4 + [1])) ){ goto $label$1 }
	if ( ($3 == 0) ){ goto $label$2 }
	$6 = (CASTING uint_64)(uint_32 $3)
	$8 = (int_64)0
	$7 = (int_64)8
	
.LOOP $label$3:
	$8 = ((int_64)((int_64)*($2) << (int_64)((int_64)$7 & (int_64)4294967288)) | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)8)
	$2 = ($2 + [1])
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)($6 == 0) == 0) ){ goto $label$3 }
	return (uint_64)$8 >> (uint_64)(int_64)8)
	
.LABEL $label$2
	return (int_64)0
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $22($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [512])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$2 = ((int_32)(*($0 + [4]) - $6) / (int_32)[12])
	$4 = ($2 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[12])
	if ( ((uint_32)$6 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($6 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $78(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $84($0)
	
.LABEL $label$1
	$6 = ($4 + ((int_32)$2 * (int_32)[12]))
	CALL $85($6, $1)
	$2 = ($4 + ((int_32)$5 * (int_32)[12]))
	$3 = ($6 + [12])
	$5 = *($0)
	$4 = *(($0 + [4]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	$1 = ([0] - $5)
	$5 = ($4 + [-12])
	
.LOOP $label$7:
	*(($6 + [-12])) = *($5)
	$4 = ($5 + [8])
	*(($6 + [-4])) = *($4)
	*($5) = [0]
	*(($5 + [4])) = [0]
	*($4) = [0]
	$6 = ($6 + [-12])
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $5
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$8 }
	$6 = ([0] - $4)
	$5 = ($5 + [-12])
	
.LOOP $label$9:
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL $79(*(($5 + [8])))
	
.LABEL $label$10
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $6) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $79($4)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	*($3 + [8]) = $0
	CALL _ZN6pomelo5applyEyy(($3 + [8]), $1, $2)
	CALL eosio_exit([0])
	(unreachable)
}

void .FUNC _ZN6pomelo16assert_whitelistEN5eosio11symbol_typeEy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	*($6 + [8]) = *($0)
	*($6 + [16]) = (uint_64)$1 >> (uint_64)(int_64)8)
	$1 = CALL $7(($6 + [8]))
	$3 = *($6 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $79($4)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($6 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $3
	
.LABEL $label$2
	*($5) = $3
	CALL $79($0)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$1 == (int_64)$2), [96])
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-4421661421696712704, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [60]) == (int_32)$4), [160])
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$8 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-4421661421696712704, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$2 = CALL $29($4, $8)
	CALL eosio_assert(((int_32)*($2 + [60]) == (int_32)$4), [160])
	
.LABEL $label$4
	*($2 + [68]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN6pomelo26publish_buyorder_if_neededEyN5eosio5assetES1_ (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	*($9 + [80]) = $1
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)1397703940), [1680])
	$5 = *($3 + [8])
	$6 = [0]
	$4 = *($3)
	if ( ((uint_64)((int_64)$4 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$1 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1648])
	CALL eosio_assert(((int_64)$5 != (int_64)1397703940), [1200])
	$1 = (int_64)0
	if ( ((int_64)$4 <= (int_64)0) ){ goto $label$6 }
	*(($7 = ($9 + [72]))) = [0]
	*($9 + [56]) = (int_64)-1
	*($9 + [64]) = (int_64)0
	$4 = *($0)
	*($9 + [40]) = $4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	*($9 + [48]) = $5)
	*($9 + [76]) = [0]
	$8 = CALL db_lowerbound_i64($4, $5, (int_64)4520852774451150848, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$7 }
	CALL $42(($9 + [40]), $8)
	*($9 + [12]) = [0]
	*($9 + [8]) = ($9 + [40])
	$1 = *(*(CALL $62(($9 + [8])) + [4]))
	$1 = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*(($8 = ($9 + [56]))) = $1
	CALL eosio_assert((uint_64)($1 <= (int_64)-2), [1360])
	*($9 + [32]) = *($8)
	$1 = *($0)
	*($9 + [16]) = $3
	*($9 + [20]) = $2
	*($9 + [24]) = $0
	*($9 + [12]) = ($9 + [80])
	*($9 + [8]) = ($9 + [32])
	*($9 + [120]) = $1
	CALL eosio_assert(((int_64)*($9 + [40]) == (int_64)CALL $fimport$2()), [592])
	*($9 + [100]) = ($9 + [8])
	*($9 + [96]) = ($9 + [40])
	*($9 + [104]) = ($9 + [120])
	$8 = CALL $78([72])
	CALL $44($8)
	*($8 + [60]) = ($9 + [40])
	CALL $63(($9 + [96]), $8)
	*($9 + [112]) = $8
	$1 = *($8)
	*($9 + [96]) = $1
	$3 = *($8 + [64])
	*($9 + [92]) = $3
	$0 = ($9 + [68])
	$6 = *($0)
	if ( ((uint_32)$6 >= (uint_32)*($7)) ){ goto $label$9 }
	*($6 + [8]) = $1
	*($6 + [16]) = $3
	*($9 + [112]) = [0]
	*($6) = $8
	*($0) = ($6 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $46(($9 + [64]), ($9 + [112]), ($9 + [96]), ($9 + [92]))
	
.LABEL $label$8
	$8 = *($9 + [112])
	*($9 + [112]) = [0]
	if ( ($8 == 0) ){ goto $label$10 }
	CALL $79($8)
	
.LABEL $label$10
	$3 = *($9 + [64])
	if ( ($3 == 0) ){ goto $label$6 }
	$0 = ($9 + [68])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$12 }
	
.LOOP $label$13:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $79($6)
	
.LABEL $label$14
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$13 }
	$8 = *(($9 + [64]))
	goto $label$11 
	
.LABEL $label$12
	$8 = $3
	
.LABEL $label$11
	*($0) = $3
	CALL $79($8)
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [128])
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [64])
	$12 = $13
	*([0] + [4]) = $13
	$6 = *($0 + [4])
	*($1) = *(*($6))
	*($1 + [8]) = *(*($6 + [4]))
	$2 = *($0)
	$4 = *($6 + [16])
	$5 = *($6 + [8])
	*($1 + [32]) = *($5)
	*(($1 + [40])) = *(($5 + [8]))
	$5 = *($6 + [12])
	*($1 + [16]) = *($5)
	*(($1 + [24])) = *(($5 + [8]))
	*($1 + [48]) = ((uint_64)((int_64)*(*($6 + [12])) * (int_64)100000000) / (uint_64)*(*($6 + [8])))
	*($1 + [56]) = CALL current_time()
	$3 = *($4)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [928]
	$9 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$6 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1712]
	$11 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$8 > (uint_64)(int_64)9) ){ goto $label$12 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$4 = ($4 + [165])
	goto $label$10 
	
.LABEL $label$12
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$8
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$7 }
	*($12 + [16]) = $11
	*($12 + [8]) = $3
	*(($6 = CALL $78([16]))) = $3
	*($6 + [8]) = $9
	*(($4 = ($12 + [40]))) = [0]
	$5 = ($6 + [16])
	*(($12 + [32])) = $5
	*(($12 + [28])) = $5
	*($12 + [24]) = $6
	*($12 + [36]) = [0]
	*(($12 + [44])) = [0]
	CALL $25(($12 + [36]), [60])
	$6 = *($4)
	$4 = *($12 + [36])
	*($12 + [52]) = $4
	*($12 + [48]) = $4
	*($12 + [56]) = $6
	CALL $50(($12 + [48]), $1)
	CALL $32(($12 + [48]), ($12 + [8]))
	$6 = *($12 + [48])
	CALL send_inline($6, (*($12 + [52]) - $6))
	$6 = *($12 + [48])
	if ( ($6 == 0) ){ goto $label$13 }
	*($12 + [52]) = $6
	CALL $79($6)
	
.LABEL $label$13
	$6 = *($12 + [36])
	if ( ($6 == 0) ){ goto $label$14 }
	*(($12 + [40])) = $6
	CALL $79($6)
	
.LABEL $label$14
	$6 = *($12 + [24])
	if ( ($6 == 0) ){ goto $label$15 }
	*(($12 + [28])) = $6
	CALL $79($6)
	
.LABEL $label$15
	$4 = $13
	$6 = ($4 + [-64])
	*([0] + [4]) = $6
	*($12 + [12]) = $6
	*($12 + [8]) = $6
	*($12 + [16]) = ($4 + [-4])
	CALL $50(($12 + [8]), $1)
	$8 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($2 + [8]), (int_64)4520852774451150848, *(*($0 + [8])), $8, $6, [60])
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$16 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$8 = *(($2 + [8]))
	$10 = *(*(($0 + [8])))
	$7 = *($1)
	*($12 + [48]) = (int_64))((int_64)0 - *(($1 + [48])))
	*($1 + [68]) = CALL db_idx64_store($8, (int_64)4520852774451150848, $10, $7, ($12 + [48]))
	*([0] + [4]) = ($12 + [64])
}

int_32 .FUNC $62 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [64]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1504])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)4520852774451150848)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1440])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1440])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $42(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $88 ()
{
	(unreachable)
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $78($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $84 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $83 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $78($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $79($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = *($0)
	$2 = ($4 & [1])
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ((*($0) & [-2]) + [-1])
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [10]
	$4 = uint_32($4 >> [1])
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $83($0, $3, [1], $3, $3, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($4 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($4 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $4)) + [1]) = [0]
	*($0) = $1
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $78(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $79($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $80 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_64 .FUNC _ZN6pomelo16string_to_amountENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$4 = *($1)
	if ( ($4 & [1]) ){ goto $label$4 }
	$4 = uint_32($4 >> [1])
	if ( ($4 == 0) ){ goto $label$2 }
	$1 = ($1 + [1])
	$5 = (int_64)0
	
.LOOP $label$5:
	$3 = *($1)
	if ( ((uint_32)(($3 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$6 }
	$5 = ((int_64)((int_64)((int_64)$5 * (int_64)10) + (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)) + (int_64)-48)
	
.LABEL $label$6
	$1 = ($1 + [1])
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$4 = *($1 + [4])
	if ( ($4 == 0) ){ goto $label$1 }
	$2 = ($1 + [8])
	$3 = *($2)
	$5 = (int_64)0
	$1 = [0]
	
.LOOP $label$7:
	if ( ((int_32)*(($3 + $1)) < (int_32)[48]) ){ goto $label$8 }
	if ( ((int_32)*((*($2) + $1)) > (int_32)[57]) ){ goto $label$8 }
	$5 = ((int_64)((int_64)((int_64)$5 * (int_64)10) + (int_64)*((*($2) + $1))) + (int_64)-48)
	
.LABEL $label$8
	$1 = ($1 + [1])
	if ( ($1 <= $4) ){ goto $label$7 }
	
.LABEL $label$3
	return $5
	
.LABEL $label$2
	return (int_64)0
	
.LABEL $label$1
	return (int_64)0
}

void .FUNC _ZN6pomelo8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
}

void .FUNC _ZN6pomelo16assert_whitelistENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL $85($4, $1)
	$3 = CALL _ZN6pomelo27get_contract_name_by_symbolENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	CALL $79(*($4 + [8]))
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)$2), [96])
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC _ZN6pomelo19is_valid_unit_priceEyy (int_32 $0, int_64 $1, int_64 $2)
{
	return (int_64)(((uint_64)((int_64)$1 * (int_64)100000000) % (uint_64)$2) == 0)
}

int_32 .FUNC $76 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10246]) == 0) ){ goto $label$2 }
	$7 = *([0] + [10248])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [10246]) = [1]
	$7 = ($7 << [16])
	*([0] + [10248]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10248])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [10248]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [10246]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [10246]) = [1]
	$3 = ($3 << [16])
	*([0] + [10248]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10248])
	
.LABEL $label$8
	*([0] + [10248]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [10140])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [9948]
	$1 = (((int_32)$2 * (int_32)[12]) + [9948])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $75([1756], $0)
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [512])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [512])
	CALL memcpy(($1 + [56]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [656])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [656])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [656])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [656])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $37(*($1), ($0 + [32]))
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [656])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [656])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $78 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10252])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $79 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $25($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [656])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [656])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $35(CALL $34($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [60]) == (int_32)$0), [304])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [352])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [416])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $79($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $79($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [64]))
	$7 = *($1 + [68])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4421661421696712704, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_64 .FUNC _ZN6pomelo27get_contract_name_by_symbolENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$2 = *($0)
	if ( (*($1) & [1]) ){ goto $label$2 }
	$0 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$0 = *($1 + [8])
	
.LABEL $label$1
	$1 = [-1]
	
.LOOP $label$3:
	$4 = ($0 + $1)
	$3 = ($1 + [1])
	$1 = $3
	if ( *(($4 + [1])) ){ goto $label$3 }
	$5 = (int_64)0
	if ( ($3 == 0) ){ goto $label$4 }
	$6 = (CASTING uint_64)(uint_32 $3)
	$7 = (int_64)0
	$5 = (int_64)8
	
.LOOP $label$5:
	$7 = ((int_64)((int_64)*($0) << (int_64)((int_64)$5 & (int_64)4294967288)) | (int_64)$7)
	$0 = ($0 + [1])
	$5 = ((int_64)$5 + (int_64)8)
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)($6 == 0) == 0) ){ goto $label$5 }
	$5 = (uint_64)$7 >> (uint_64)(int_64)8)
	
.LABEL $label$4
	*(($8 + [40])) = [0]
	*($8 + [16]) = $5
	*($8 + [8]) = $2
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$5 = CALL $7(($8 + [8]))
	$4 = *($8 + [32])
	if ( ($4 == 0) ){ goto $label$6 }
	$3 = ($8 + [36])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $79($0)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$9 }
	$1 = *(($8 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$1 = $4
	
.LABEL $label$7
	*($3) = $4
	CALL $79($1)
	
.LABEL $label$6
	*([0] + [4]) = ($8 + [48])
	return $5
}

int_32 .FUNC $31 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $78([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $25($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $36(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}