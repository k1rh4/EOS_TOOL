(data (i32.const 8509) "failed to allocate pages\00**\00")
(data (i32.const 8544) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 8624) "%u\00max_origtrxs_table_records must in range [500,2000]\00")
(data (i32.const 8679) " \00")
(data (i32.const 8681) "transction contains more then one action\00")
(data (i32.const 8722) "0123456789abcdef\00")
(data (i32.const 8739) "peerchain_name can not be empty\00")
(data (i32.const 8771) "peerchain_info has more than 256 bytes\00")
(data (i32.const 8810) "peerchain_ibc_token_contract can not be empty\00")
(data (i32.const 8856) "thischain_ibc_chain_contract account does not exist\00")
(data (i32.const 8908) "thischain_free_account does not exist\00")
(data (i32.const 8946) "max_original_trxs_per_block must in range [1,10]\00")
(data (i32.const 8995) "cache_cashtrxs_table_records must in range [1000,2000]\00")
(data (i32.const 9050) "peerchain not registered\00")
(data (i32.const 9075) "active\00")
(data (i32.const 9082) "unkown config item\00")
(data (i32.const 9101) "original_contract account does not exist\00")
(data (i32.const 9142) "administrator account does not exist\00")
(data (i32.const 9179) "orig_token_symbol invalid\00")
(data (i32.const 9205) "peg_token_symbol invalid\00")
(data (i32.const 9230) "precision mismatch\00")
(data (i32.const 9249) "invalid max_accept\00")
(data (i32.const 9268) "max_accept must be positive\00")
(data (i32.const 9296) "invalid asset\00")
(data (i32.const 9310) "organization has more than 256 bytes\00")
(data (i32.const 9347) "website has more than 256 bytes\00")
(data (i32.const 9379) "invalid service_fee_mode\00")
(data (i32.const 9404) "invalid service_fee_ratio\00")
(data (i32.const 9430) "service_fee_fixed.amount * 5 <= min_once_transfer.amount assert failed\00")
(data (i32.const 9501) "failed_fee.amount * 10 <= min_once_transfer.amount assert failed\00")
(data (i32.const 9566) "token contract already exist\00")
(data (i32.const 9595) "invalid symbol\00")
(data (i32.const 9610) "max_accept\00")
(data (i32.const 9621) "max_accept.amount should not less then accept.amount\00")
(data (i32.const 9674) "min_once_transfer\00")
(data (i32.const 9692) "min_once_transfer invalid\00")
(data (i32.const 9718) "max_once_transfer\00")
(data (i32.const 9736) "max_once_transfer invalid\00")
(data (i32.const 9762) "max_daily_transfer\00")
(data (i32.const 9781) "max_daily_transfer must be greater then max_once_transfer\00")
(data (i32.const 9839) "value string has more than 256 bytes\00")
(data (i32.const 9876) "organization\00")
(data (i32.const 9889) "website\00")
(data (i32.const 9897) "max_tfs_per_minute\00")
(data (i32.const 9916) "max_tfs_per_minute\'s value must in range [1,500]\00")
(data (i32.const 9965) "mode can only be fixed or ratio\00")
(data (i32.const 9997) "service_fee_fixed invalid\00")
(data (i32.const 10023) "service_fee_ratio invalid\00")
(data (i32.const 10049) "kind must be \"success\" or \"failed\"\00")
(data (i32.const 10084) "invalid max_supply\00")
(data (i32.const 10103) "max_supply must be positive\00")
(data (i32.const 10131) "peerchain_contract can not be empty\00")
(data (i32.const 10167) "failed_fee.amount * 10 <= min_once_withdraw.amount assert failed\00")
(data (i32.const 10232) "max_supply\00")
(data (i32.const 10243) "max_supply.amount should not less then supply.amount\00")
(data (i32.const 10296) "min_once_withdraw\00")
(data (i32.const 10314) "min_once_withdraw invalid\00")
(data (i32.const 10340) "max_once_withdraw\00")
(data (i32.const 10358) "max_once_withdraw invalid\00")
(data (i32.const 10384) "max_daily_withdraw\00")
(data (i32.const 10403) "max_daily_withdraw.amount must be greater then max_once_withdraw.amount\00")
(data (i32.const 10475) "max_wds_per_minute\00")
(data (i32.const 10494) "max_wds_per_minute\'s value must in range [1,500]\00")
(data (i32.const 10543) "{receiver}@{chain} {user-defined string}\00")
(data (i32.const 10584) "@\00")
(data (i32.const 10586) "memo format error, didn\'t find charactor \'@\' in memo, correct format: \00")
(data (i32.const 10658) "memo format error, receiver not provided, correct format: \00")
(data (i32.const 10717) "memo format error, chain not provided, correct format: \00")
(data (i32.const 10773) "to is not this contract\00")
(data (i32.const 10797) "local\00")
(data (i32.const 10803) "global not active\00")
(data (i32.const 10821) "receiver not provide\00")
(data (i32.const 10842) "peer chain is not active\00")
(data (i32.const 10867) "not active\00")
(data (i32.const 10878) "symbol does not match\00")
(data (i32.const 10900) "quantity less then min_once_transfer\00")
(data (i32.const 10937) "quantity greater then max_once_transfer\00")
(data (i32.const 10977) "max transactions per minute exceed\00")
(data (i32.const 11012) "max daily transfer exceed\00")
(data (i32.const 11038) "unable to find key\00")
(data (i32.const 11057) "max_original_trxs_per_block exceed\00")
(data (i32.const 11092) "acpt.accept.amount <= acpt.max_accept.amount assert failed\00")
(data (i32.const 11151) "cannot transfer to self\00")
(data (i32.const 11175) "memo has more than 512 bytes\00")
(data (i32.const 11204) "to account does not exist\00")
(data (i32.const 11230) "symbol(token) not registered\00")
(data (i32.const 11259) "invalid quantity\00")
(data (i32.const 11276) "must transfer positive quantity\00")
(data (i32.const 11308) "symbol precision mismatch\00")
(data (i32.const 11334) "peerchain_name must be \00")
(data (i32.const 11358) "overdrawn balance\00")
(data (i32.const 11376) "max daily withdraw exceed\00")
(data (i32.const 11402) "merkle_path can not be empty\00")
(data (i32.const 11431) "merkle path validate failed\00")
(data (i32.const 11459) "digest not in merkle tree\00")
(data (i32.const 11485) "invalid symbol name\00")
(data (i32.const 11505) "memo has more than 256 bytes\00")
(data (i32.const 11534) "seq_num not valid\00")
(data (i32.const 11552) "orig_trx_block_num error\00")
(data (i32.const 11577) "orig_trx_id already exist\00")
(data (i32.const 11603) "trx_receipt.status must be executed\00")
(data (i32.const 11639) "transfer transaction contains more then one action\00")
(data (i32.const 11690) "transaction id mismatch\00")
(data (i32.const 11714) "from_chain not registered\00")
(data (i32.const 11740) "transfer to account not correct\00")
(data (i32.const 11772) "quantity not equal to quantity within packed transaction\00")
(data (i32.const 11829) "to not equal to receiver\ef\bc\8cwhich provided in memo string\00")
(data (i32.const 11886) "peer chain name in orignal trx must be this chain\'s name\00")
(data (i32.const 11943) "orig_trx_block_num <= anchor_block_num assert failed\00")
(data (i32.const 11996) "orig_trx_block_header.block_num() must equal to orig_trx_block_num\00")
(data (i32.const 12063) "transaction_mroot check failed\00")
(data (i32.const 12094) "from_chain must equal to st.peerchain_name\00")
(data (i32.const 12137) " action.account not correct\00")
(data (i32.const 12165) "must issue positive quantity\00")
(data (i32.const 12194) "quantity exceeds available supply\00")
(data (i32.const 12228) " | from peerchain trx_id:\00")
(data (i32.const 12254) "(\00")
(data (i32.const 12256) ") --ibc-issue--> thischain \00")
(data (i32.const 12284) ")\00")
(data (i32.const 12286) "quantity exceeds available accept\00")
(data (i32.const 12320) "chain assets not found\00")
(data (i32.const 12343) "have no enough chain asset to withdraw\00")
(data (i32.const 12382) "internal error, service_fee_ratio config error\00")
(data (i32.const 12429) ") --ibc-withdraw--> thischain \00")
(data (i32.const 12460) "cash transaction contains more then one action\00")
(data (i32.const 12507) "cash_trx_id mismatch\00")
(data (i32.const 12528) "orig_trx_id mismatch\00")
(data (i32.const 12549) "seq_num derived from cash_trx_packed_trx_receipt error\00")
(data (i32.const 12604) "cash_trx_block_num <= anchor_block_num assert failed\00")
(data (i32.const 12657) "cash_trx_block_header.block_num() must equal to cash_trx_block_num\00")
(data (i32.const 12724) "trx_id not exist\00")
(data (i32.const 12741) "(block_time_slot + 25 < last_confirmed_orig_trx_block_time_slot) is false\00")
(data (i32.const 12815) "rollback transaction: \00")
(data (i32.const 12838) "peerchain not found\00")
(data (i32.const 12858) "(block_time_slot + min_distance < _gmutable.last_confirmed_orig_trx_block_time_slot) is false\00")
(data (i32.const 12952) "no transacton\00")
(data (i32.const 12966) "trx_id not found\00")
(data (i32.const 12983) "_gstate.active == false, nothing to do\00")
(data (i32.const 13022) "_gstate.active == true, nothing to do\00")
(data (i32.const 13060) "no balance object found\00")
(data (i32.const 13084) "symbol does not exist\00")
(data (i32.const 13106) "Balance row already deleted or never existed. Action won\'t have any effect.\00")
(data (i32.const 13182) "Cannot close because the balance is not zero.\00")
(data (i32.const 13228) "already empty\00")
(data (i32.const 13242) "force initialization complete\00")
(data (i32.const 13272) "force initialization not complete\00")
(data (i32.const 13306) "token of contract does not support\00")
(data (i32.const 13341) "token with symbol does not support\00")
(data (i32.const 13376) "token with symbol does not exist\00")
(data (i32.const 13409) "orig_trx_id not exist\00")
(data (i32.const 13431) "trx_id not exit in origtrxs table\00")
(data (i32.const 13465) "transfer\00")
(data (i32.const 13474) "write\00")
(data (i32.const 13480) "string is too long to be a valid name\00")
(data (i32.const 13518) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 13585) "character is not in allowed character set for names\00")
(data (i32.const 13637) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 13696) "\845\00\00")
(data (i32.const 13700) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 13733) "_chaindb of scpoe: \00")
(data (i32.const 13753) " not exist\00")
(data (i32.const 13764) "block \00")
(data (i32.const 13771) " is not anchor block\00")
(data (i32.const 13792) "checksum256 not equal\00")
(data (i32.const 13814) "error reading iterator\00")
(data (i32.const 13837) "read\00")
(data (i32.const 13842) "get\00")
(data (i32.const 13846) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 13897) "provided transaction_mroot not correct\00")
(data (i32.const 13936) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 13985) "%lld%s%s %s\00")
(data (i32.const 13997) ".\00")
(data (i32.const 14000) "\1e\00\00\00\1f\00\00\00")
(data (i32.const 14008) "cannot decrement end iterator when the index is empty\00")
(data (i32.const 14062) "cannot decrement iterator at beginning of index\00")
(data (i32.const 14110) "unexpected error in fixed_bytes constructor\00")
(data (i32.const 14154) "singleton does not exist\00")
(data (i32.const 14179) "cannot pass end iterator to modify\00")
(data (i32.const 14214) "object passed to modify is not in multi_index\00")
(data (i32.const 14260) "cannot modify objects in table of another contract\00")
(data (i32.const 14311) "updater cannot change primary key when modifying an object\00")
(data (i32.const 14370) "cannot create objects in table of another contract\00")
(data (i32.const 14421) "cannot pass end iterator to erase\00")
(data (i32.const 14455) "cannot increment end iterator\00")
(data (i32.const 14485) "object passed to erase is not in multi_index\00")
(data (i32.const 14530) "cannot erase objects in table of another contract\00")
(data (i32.const 14580) "attempt to remove object that was not in multi_index\00")
(data (i32.const 14633) "attempt to add asset with different symbol\00")
(data (i32.const 14676) "addition underflow\00")
(data (i32.const 14695) "addition overflow\00")
(data (i32.const 14713) "attempt to subtract asset with different symbol\00")
(data (i32.const 14761) "subtraction underflow\00")
(data (i32.const 14783) "subtraction overflow\00")
(data (i32.const 14804) "invalid variant index\00")
(data (i32.const 14826) "next primary key in table is at autoincrement limit\00")
(data (i32.const 14878) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 14932) "cannot decrement iterator at beginning of table\00")
(data (i32.const 0) "\88:\00\00")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "memcpy" (func $fimport$1 (param i32 i32 i32) (result i32)))
(import "env" "sha256" (func $fimport$2 (param i32 i32 i32)))
(import "env" "abort" (func $fimport$3))
(import "env" "memset" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$6 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$7 (param i32 i32)))
(import "env" "__multf3" (func $fimport$8 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$9 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$11 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$12 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$13 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$14 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$15 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$16 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$17 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$19 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$20 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$21 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$22 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$23 (param i64 i64) (result i32)))
(import "env" "transaction_size" (func $fimport$24 (result i32)))
(import "env" "read_transaction" (func $fimport$25 (param i32 i32) (result i32)))
(import "env" "current_time" (func $fimport$26 (result i64)))
(import "env" "db_find_i64" (func $fimport$27 (param i64 i64 i64 i64) (result i32)))
(import "env" "require_auth" (func $fimport$28 (param i64)))
(import "env" "is_account" (func $fimport$29 (param i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$30 (param i32 i32) (result i32)))
(import "env" "current_receiver" (func $fimport$31 (result i64)))
(import "env" "db_store_i64" (func $fimport$32 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$33 (param i32 i64 i32 i32)))
(import "env" "db_idx64_find_primary" (func $fimport$34 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$35 (param i32 i64 i32)))
(import "env" "db_idx64_store" (func $fimport$36 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "__ashlti3" (func $fimport$37 (param i32 i64 i64 i32)))
(import "env" "db_idx256_store" (func $fimport$38 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "require_recipient" (func $fimport$39 (param i64)))
(import "env" "has_auth" (func $fimport$40 (param i64) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$41 (param i64 i64 i64 i64) (result i32)))
(import "env" "send_inline" (func $fimport$42 (param i32 i32)))
(import "env" "prints" (func $fimport$43 (param i32)))
(import "env" "db_remove_i64" (func $fimport$44 (param i32)))
(import "env" "db_previous_i64" (func $fimport$45 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$46 (param i64 i64 i64) (result i32)))
(import "env" "action_data_size" (func $fimport$47 (result i32)))
(import "env" "read_action_data" (func $fimport$48 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$49 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$50 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_previous" (func $fimport$51 (param i32 i32) (result i32)))
(import "env" "db_idx64_end" (func $fimport$52 (param i64 i64 i64) (result i32)))
(import "env" "db_idx256_lowerbound" (func $fimport$53 (param i64 i64 i64 i32 i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$54 (param i32)))
(import "env" "db_idx256_find_primary" (func $fimport$55 (param i64 i64 i64 i32 i32 i64) (result i32)))
(import "env" "db_idx256_remove" (func $fimport$56 (param i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$57 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx256_next" (func $fimport$58 (param i32 i32) (result i32)))
(export "apply" (func $225))
(table $0 32 32 anyfunc)
(elem (i32.const 1) $22 $24 $120 $90 $214 $76 $115 $92 $194 $207 $138 $72 $221 $94 $219 $215 $217 $62 $107 $203 $80 $216 $156 $63 $97 $113 $117 $87 $210 $320 $321)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 14980))
(global $global$2 i32 (i32.const 14980))


int_32 .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [13480])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [13585])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [13518])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [13585])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $120 (int_32 $0)
{
	if ( ((*([0] + [8496]) & [1]) == 0) ){ goto $label$1 }
	CALL $11(*([0] + [8504]))
	
.LABEL $label$1
}

void .FUNC $126 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($4 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($4 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$5 = *($1)
	$6 = *($2)
	if ( ((int_64)*($6 + [8]) == (int_64)*(($1 + [264]))) ){ goto $label$3 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$3
	$7 = ((int_64)*($2) + (int_64)*($6))
	*(($2 = ($1 + [256]))) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [14676])
	if ( ((int_64)*($2) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [14695])
	if ( ((int_64)$5 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [14311])
	
.LABEL $label$4
	$6 = (($4 + [16]) + [8])
	$2 = *($1 + [100])
	$8 = ( *(($1 + [104])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($8 + [253])
	$7 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [100])
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	$9 = *($1 + [112])
	$9 = ( *(($1 + [116])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$2 = ($9 + $2)
	$7 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [112])
	
.LOOP $label$10:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$10 }
	if ( ($2 <= [513]) ){ goto $label$12 }
	$3 = CALL $2($2)
	goto $label$11 
	
.LABEL $label$12
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$11
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [32]) = $4
	*($4 + [72]) = $8
	*($4 + [76]) = $9
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [32])
	*($4 + [56]) = ($1 + [48])
	*($4 + [60]) = ($1 + [64])
	*($4 + [64]) = ($1 + [80])
	*($4 + [68]) = ($1 + [96])
	*($4 + [80]) = ($1 + [128])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [144])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [168])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [200])
	*($4 + [108]) = ($1 + [208])
	*($4 + [112]) = ($1 + [224])
	*($4 + [120]) = ($1 + [240])
	*($4 + [116]) = ($1 + [232])
	CALL $86(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [300]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$13 }
	CALL $4($3)
	
.LABEL $label$13
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$14 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	*($4 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$15 }
	$3 = ($1 + [304])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$16 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($4 + [32]), $5)
	*($3) = $2
	
.LABEL $label$16
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$15
	*($4 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($6, ($4 + [40]), [8]) == 0) ){ goto $label$17 }
	$1 = ($1 + [308])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$18 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($4 + [32]), $5)
	*($1) = $2
	
.LABEL $label$18
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$17
	$global$0 = ($4 + [128])
}

int_32 .FUNC $189 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*(($6 + [356])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13846])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4849507793113186304, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $188($0, $5)
	if ( ((int_32)*($6 + [356]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13846])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

int_32 .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13814])
	
.LABEL $label$5
	$5 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $4)
	*(($2 = CALL $9([368])) + [56]) = (int_64)0
	*($2 + [48]) = [0]
	*($2 + [180]) = [0]
	*($2 + [196]) = [0]
	*($2 + [200 align=4]) = (int_64)0
	*($2 + [208]) = [0]
	*($2 + [296 align=4]) = (int_64)0
	*($2 + [304]) = [0]
	*($2 + [312]) = (int_64)0
	*($2 + [354]) = [0]
	*($2 + [356]) = $0
	CALL $310(($3 + [32]), $2)
	*($2 + [360]) = $1
	*($3 + [24]) = $2
	$7 = *($2)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $7
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $2
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $311(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($5)
	
.LABEL $label$7
	$6 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($6 == 0) ){ goto $label$10 }
	$5 = *($6 + [296])
	if ( ($5 == 0) ){ goto $label$11 }
	*(($6 + [300])) = $5
	CALL $11($5)
	
.LABEL $label$11
	$0 = *(($6 + [200]))
	if ( ($0 == 0) ){ goto $label$12 }
	$8 = ($6 + [204])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = ($5 + [-16])
	$4 = *(($5 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($5 + [-8])) = $4
	CALL $11($4)
	
.LABEL $label$16
	$5 = $1
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$15 }
	$5 = *(($6 + [200]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $0
	
.LABEL $label$13
	*($8) = $0
	CALL $11($5)
	
.LABEL $label$12
	if ( (*(($6 + [196])) == 0) ){ goto $label$17 }
	$5 = *(($6 + [184]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($6 + [188])) = $5
	CALL $11($5)
	
.LABEL $label$17
	CALL $11($6)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $2
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [2])
	$4 = (*($3) + [2])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [32])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [32])
	$4 = (*($3) + [32])
	*($3) = $4
	$3 = ($1 + [64])
	if ( ((int_32)(*($6) - $4) > (int_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [13474])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [32])
	$4 = (*($3) + [32])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [96])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [13474])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [32])
	$4 = (*($3) + [32])
	*($3) = $4
	$3 = ($1 + [128])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [13474])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $3, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [15]) = *(($1 + [148]))
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [13474])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	if ( (*($2 + [15]) == 0) ){ goto $label$9 }
	$3 = ($1 + [132])
	$5 = ($1 + [136])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [13474])
	$4 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($4, $3, [4])
	*(($3 = ($0 + [4]))) = (*($3) + [4])
	CALL $323($0, $5)
	
.LABEL $label$9
	$0 = CALL $324($0, ($1 + [152]))
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	if ( (*(($1 + [148])) == 0) ){ goto $label$2 }
	$4 = *(($1 + [136]))
	$3 = *(($1 + [140]))
	$5 = (CASTING uint_64)(uint_32 ((int_32)($3 - $4) / (int_32)[48]))
	$6 = [119]
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$4:
	$6 = ($6 + [41])
	$5 = *($4 + [8])
	
.LOOP $label$5:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	$4 = ($4 + [48])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [115]
	
.LABEL $label$1
	$4 = *($1 + [152])
	$7 = *(($1 + [156]))
	$5 = (CASTING uint_64)(uint_32 int_32(($7 - $4) >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$8:
	$8 = *($4 + [4])
	$3 = *(($4 + [8]))
	$6 = ((($6 + $3) + [2]) - $8)
	$5 = (CASTING uint_64)(uint_32 ($3 - $8))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$9 }
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $46($0, $6)
	$4 = *(($0 + [4]))
	$6 = *($0)
	goto $label$10 
	
.LABEL $label$11
	$4 = [0]
	$6 = [0]
	
.LABEL $label$10
	*($2 + [4]) = $6
	*($2) = $6
	*($2 + [8]) = $4
	CALL $49($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $264 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $27(($2 + [32]), ($1 + [8]))
	*(($5 = (($2 + [16]) + [8]))) = *(($1 + [32]))
	*($2 + [16]) = *($1 + [24])
	*((($2 + [48]) + [8])) = *($5)
	*($2 + [48]) = *($2 + [16])
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*($0) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$5 = CALL $27(($2 + [80]), $4)
	$6 = *((($2 + [48]) + [8]))
	*((($2 + [64]) + [8])) = $6
	*(($2 + [8])) = $6
	$6 = *($2 + [48])
	*($2) = $6
	*($2 + [64]) = $6
	CALL void $0((int_32 $3), (int_64 $5), (int_32 $2), (int_32 $1))
	if ( (*($2 + [80]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($5 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $265 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy(($2 + [8]), $5, [8])
	*($3) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	CALL $257(*($1), ($4 + [8]))
	$0 = ($4 + [24])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$1 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $1, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $266 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $27($2, ($1 + [8]))
	$5 = *($1 + [24])
	$1 = *($0 + [4])
	$6 = *($1 + [4])
	$0 = (*($0) + int_32($6 >> [1]))
	$1 = *($1)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$6 = CALL $27(($2 + [16]), $4)
	CALL void $0((int_32 $3), (int_64 $6), (int_32 $5), (int_64 $1))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($6 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $267 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy(($2 + [8]), $5, [8])
	*($3) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	CALL $257(*($1), ($0 + [8]))
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$1 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [7]), $1, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*(($0 + [20])) = ((int_32)*($2 + [7]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $43 (int_32 $0)
{
}

void .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $33(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $25(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8624], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $33(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $33(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

int_32 .FUNC $41 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $1(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

int_32 .FUNC $40 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$3 }
	$5 = uint_32($3 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $4 ){ goto $label$6 }
	$6 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $4 ? $2 : ($4 <= $2) )
	$4 = ($5 - $1)
	$4 = ($4 - $2)
	if ( ($4 == 0) ){ goto $label$7 }
	$1 = ($6 + $1)
	CALL memmove($1, ($1 + $2), $4)
	$3 = *($0)
	
.LABEL $label$7
	$2 = ($5 - $2)
	if ( ($3 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($6 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $47 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [160])
	$global$0 = $3
	$4 = [0]
	$5 = [0]
	if ( (int_64)(*($1 + [16]) == 0) ){ goto $label$1 }
	$5 = ((int_32)*($1 + [4]) != (int_32)*($1))
	
.LABEL $label$1
	CALL eosio_assert($5, [8534])
	$6 = *(($1 + [16]))
	if ( (int_64)($6 == 0) ){ goto $label$2 }
	$6 = ((int_64)$6 + (int_64)-1)
	$6 = ((int_64)(uint_64)$6 >> (uint_64)(int_64)1) | (int_64)$6
	$6 = ((int_64)(uint_64)$6) >> (uint_64)(int_64)2
	$6 = ((int_64)(uint_64)$6 | (int_64)$6)
	$6 = ((int_64)(uint_64)$6 >> (uint_64)(int_64)4) | (int_64)$6
	$6 = ((int_64)(uint_64)$6) >> (uint_64)(int_64)8
	$6 = ((int_64)((int_64)(uint_64)$6 | (int_64)$6)) >> (uint_64)(int_64)16
	$4 = ( [64] ? [63] : (int_64)($6 | (int_64)$6)) >> (uint_64)(int_64)32
	$4 = ( ($4 | (int_64)$6) + (int_64)1)
	$4 = ( $4 == 0) 
	$4 = ( $4) + [-32]
	$4 = ( $4 ? $4 : (CASTING uint_32)(uint_64 $6) )
	$4 = (( $4 ? ($4 + [-16]) : (int_64)(((int_64)$6 & (int_64)281470681808895) == 0) )) ? ($4 + [-8]) : (int_64)(((int_64)$6 & (int_64)71777214294589695) == 0) )) ? ($4 + [-4]) : (int_64)(((int_64)$6 & (int_64)1085102592571150095) == 0) )) ? ($4 + [-2]) : (int_64)(((int_64)$6 & (int_64)3689348814741910323) == 0) ) + (int_64)(((int_64)$6 & (int_64)6148914691236517205) == 0))
	
.LABEL $label$2
	$5 = *($2)
	CALL eosio_assert((((uint_32)$5 <= (uint_32)$4) & ((int_32)$5 != (int_32)[0])), [8534])
	$5 = *($2)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$3 }
	$1 = *($1 + [4])
	*($0) = *(($1 + [-32]))
	*(($0 + [8])) = *(($1 + [-24]))
	*(($0 + [16])) = *(($1 + [-16]))
	*(($0 + [24])) = *(($1 + [-8]))
	$global$0 = ($3 + [160])
	return 
	
.LABEL $label$3
	if ( ((int_32)$4 < (int_32)[2]) ){ goto $label$5 }
	$6 = *(($1 + [16]))
	$1 = *($1)
	$2 = ($4 + [1])
	$4 = ($5 + [-1])
	
.LOOP $label$6:
	if ( ((int_64)(((int_64)$6 & (int_64)1) == 0) == 0) ){ goto $label$8 }
	*((($3 + [128]) + [24])) = (int_64)0
	*((($3 + [128]) + [16])) = (int_64)0
	*((($3 + [64]) + [16])) = (int_64)0
	*((($3 + [64]) + [24])) = (int_64)0
	*($3 + [136]) = (int_64)0
	*($3 + [64]) = (int_64)0
	*($3 + [128]) = (int_64)0
	*($3 + [72]) = (int_64)0
	if ( $4 ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	*((($3 + [64]) + [24])) = *(($1 + [24]))
	*((($3 + [64]) + [16])) = *(($1 + [16]))
	*($3 + [64]) = *($1)
	*($3 + [72]) = *(($1 + [8]))
	$1 = ($1 + [32])
	if ( ($4 == 0) ){ goto $label$4 }
	
.LABEL $label$7
	$4 = ($4 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)1)
	$2 = ($2 + [-1])
	if ( ((int_32)$2 > (int_32)[2]) ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert([0], [8534])
	*(($0 + [24])) = (int_64)0
	*(($0 + [16])) = (int_64)0
	*(($0 + [8])) = (int_64)0
	*($0) = (int_64)0
	$global$0 = ($3 + [160])
	return 
	
.LABEL $label$4
	*(($1 = ($3 + [24]))) = (int_64)0
	*(($4 = ($3 + [16]))) = (int_64)0
	$5 = (($3 + [64]) + [24])
	*(($2 = (($3 + [32]) + [24]))) = *($5)
	$8 = (($3 + [64]) + [16])
	*(($7 = (($3 + [32]) + [16]))) = *($8)
	*($3 + [40]) = *($3 + [72])
	*($3 + [32]) = *($3 + [64])
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	*((($3 + [128]) + [24])) = *($1)
	*((($3 + [128]) + [16])) = *($4)
	*((($3 + [96]) + [16])) = *($7)
	*((($3 + [96]) + [24])) = *($2)
	*($3 + [136]) = *($3 + [8])
	*($3 + [128]) = *($3)
	*($3 + [96]) = *($3 + [32])
	*($3 + [104]) = *($3 + [40])
	CALL eosio_assert(((int_32)CALL $1(($3 + [96]), ($3 + [128]), [32]) != (int_32)[0]), [8534])
	*(($0 + [24])) = *($5)
	*(($0 + [16])) = *($8)
	*(($0 + [8])) = *($3 + [72])
	*($0) = *($3 + [64])
	$global$0 = ($3 + [160])
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $9($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $45($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $11($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $45 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $44 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	CALL $19([8220])
	$3 = *([0] + [8228])
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *([0] + [8232])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$3 = [8236]
	*([0] + [8228]) = [8236]
	$4 = *([0] + [8232])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = CALL $3([260], [1])
	if ( ($3 == 0) ){ goto $label$1 }
	$4 = [0]
	*($3) = *([0] + [8228])
	*([0] + [8228]) = $3
	*([0] + [8232]) = [0]
	
.LABEL $label$2
	*([0] + [8232]) = ($4 + [1])
	*((($3 = ($3 + ($4 << [2]))) + [132])) = $1
	*(($3 + [4])) = $0
	CALL $20([8220])
	return [0]
	
.LABEL $label$1
	CALL $20([8220])
	return [-1]
}

void .FUNC $167 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$5 = ($global$0 - [96])
	$global$0 = $5
	$6 = *($3)
	$7 = [37]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	*($5 + [88]) = [0]
	*($5 + [80]) = (int_64)0
	CALL $46(($5 + [80]), $7)
	$3 = *($3)
	$8 = *($5 + [84])
	$7 = *($5 + [80])
	$6 = *(($4 + [8]))
	$2 = *($2)
	$1 = *($1)
	$9 = *(($4 + [24]))
	*(($5 + [24])) = $9
	$10 = *($4)
	$11 = *(($4 + [16]))
	*(($5 + [16])) = $11
	*((($5 + [32]) + [24])) = $9
	*((($5 + [32]) + [16])) = $11
	*($5 + [68]) = $7
	*($5 + [64]) = $7
	*($5 + [72]) = $8
	*($5 + [8]) = $6
	*($5) = $10
	*($5 + [32]) = $10
	*($5 + [40]) = $6
	CALL $304(($5 + [64]), $1, $2, $3, $5)
	$7 = *($5 + [80])
	CALL sha256($7, (*($5 + [84]) - $7), $0)
	$7 = *($5 + [80])
	if ( ($7 == 0) ){ goto $label$2 }
	*($5 + [84]) = $7
	CALL $11($7)
	
.LABEL $label$2
	$global$0 = ($5 + [96])
}

void .FUNC $166 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	$4 = ($global$0 - [128])
	$global$0 = $4
	$5 = [0]
	*($4 + [104]) = [0]
	*($4 + [96]) = (int_64)0
	$6 = (*($2 + [4]) - *($2))
	if ( ($6 == 0) ){ goto $label$8 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$4 }
	$7 = CALL $9($6)
	*(($4 + [104])) = ($7 + $6)
	*($4 + [96]) = $7
	*($4 + [100]) = $7
	$8 = *($2)
	$6 = (*(($2 + [4])) - $8)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($7, $8, $6)
	$8 = ($7 + $6)
	*($4 + [100]) = $8
	goto $label$6 
	
.LABEL $label$8
	$8 = [0]
	$7 = [0]
	*($4 + [120]) = [0]
	*($4 + [112]) = (int_64)0
	$6 = ([0] - [0])
	if ( $6 ){ goto $label$5 }
	goto $label$2 
	
.LABEL $label$7
	$8 = $7
	
.LABEL $label$6
	*($4 + [120]) = [0]
	*($4 + [112]) = (int_64)0
	$6 = ($8 - $7)
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$5
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$5 = CALL $9($6)
	*(($4 + [120])) = ($5 + $6)
	*($4 + [112]) = $5
	*($4 + [116]) = $5
	$6 = ($8 - $7)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $7, $6)
	$8 = ($5 + $6)
	*($4 + [116]) = $8
	goto $label$1 
	
.LABEL $label$9
	$8 = $5
	goto $label$1 
	
.LABEL $label$4
	CALL $45(($4 + [96]))
	
.LABEL $label$3
	CALL $45(($4 + [112]))
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	$6 = (($5 + [-33]) - $8)
	$9 = (CASTING uint_64)(uint_32 ($8 - $5))
	
.LOOP $label$10:
	$6 = ($6 + [-1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$10 }
	if ( ($5 == 0) ){ goto $label$11 }
	*($4 + [116]) = $5
	CALL $11($5)
	
.LABEL $label$11
	if ( ($7 == 0) ){ goto $label$12 }
	*($4 + [100]) = $7
	CALL $11($7)
	
.LABEL $label$12
	*($4 + [120]) = [0]
	*($4 + [112]) = (int_64)0
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $46(($4 + [112]), ([0] - $6))
	$5 = *($4 + [116])
	$6 = *($4 + [112])
	goto $label$13 
	
.LABEL $label$14
	$5 = [0]
	$6 = [0]
	
.LABEL $label$13
	*($4 + [84]) = $6
	*($4 + [80]) = $6
	*($4 + [88]) = $5
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = [0]
	$7 = *($1)
	$6 = (*(($2 + [4])) - *($2))
	if ( ($6 == 0) ){ goto $label$16 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$15 }
	$5 = CALL $9($6)
	*(($4 + [72])) = ($5 + $6)
	*($4 + [64]) = $5
	*($4 + [68]) = $5
	$2 = *($2)
	$6 = (*(($2 + [4])) - $2)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$16 }
	CALL memcpy($5, $2, $6)
	*($4 + [68]) = (*($4 + [68]) + $6)
	
.LABEL $label$16
	$10 = *(($3 + [24]))
	*((($4 + [32]) + [24])) = $10
	$11 = *(($3 + [16]))
	*((($4 + [32]) + [16])) = $11
	$9 = *(($3 + [8]))
	$12 = *($3)
	*(($4 + [16])) = $11
	*(($4 + [24])) = $10
	*($4 + [32]) = $12
	*($4 + [40]) = $9
	*($4) = $12
	*($4 + [8]) = $9
	CALL $306(($4 + [80]), ($7 & [255]), ($4 + [64]), $4)
	$6 = *($4 + [64])
	if ( ($6 == 0) ){ goto $label$17 }
	*($4 + [68]) = $6
	CALL $11($6)
	
.LABEL $label$17
	$6 = *($4 + [112])
	CALL sha256($6, (*($4 + [116]) - $6), $0)
	$6 = *($4 + [112])
	if ( ($6 == 0) ){ goto $label$18 }
	*($4 + [116]) = $6
	CALL $11($6)
	
.LABEL $label$18
	$global$0 = ($4 + [128])
	return (unreachable)
	
.LABEL $label$15
	CALL $45(($4 + [64]))
	(unreachable)
	(unreachable)
}

void .FUNC $165 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$3 = ($global$0 - [96])
	$global$0 = $3
	$4 = [0]
	*($3 + [72]) = [0]
	*($3 + [64]) = (int_64)0
	$5 = (*($1 + [4]) - *($1))
	$6 = ((int_32)$5 / (int_32)[66])
	if ( ($5 == 0) ){ goto $label$8 }
	if ( ((uint_32)$6 >= (uint_32)[65075263]) ){ goto $label$5 }
	$7 = CALL $9($5)
	*(($3 + [72])) = ($7 + ((int_32)$6 * (int_32)[66]))
	*($3 + [64]) = $7
	*($3 + [68]) = $7
	$6 = *($1)
	$5 = (*(($1 + [4])) - $6)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($7, $6, $5)
	$6 = ($7 + ((int_32)((uint_32)$5 / (uint_32)[66]) * (int_32)[66]))
	*($3 + [68]) = $6
	$8 = $7
	goto $label$6 
	
.LABEL $label$8
	$7 = [0]
	$8 = [0]
	$6 = [0]
	goto $label$6 
	
.LABEL $label$7
	$8 = $7
	$6 = $7
	
.LABEL $label$6
	*($3 + [56]) = [0]
	*($3 + [48]) = (int_64)0
	$5 = (*($2 + [4]) - *($2))
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL $9($5)
	*(($3 + [56])) = ($9 + $5)
	*($3 + [48]) = $9
	*($3 + [52]) = $9
	$4 = *($2)
	$5 = (*(($2 + [4])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$11 }
	CALL memcpy($9, $4, $5)
	$4 = ($9 + $5)
	*($3 + [52]) = $4
	goto $label$10 
	
.LABEL $label$12
	$9 = [0]
	$10 = [0]
	goto $label$9 
	
.LABEL $label$11
	$4 = $9
	
.LABEL $label$10
	$10 = $9
	
.LABEL $label$9
	$11 = ($6 - $8)
	$12 = (CASTING uint_64)(uint_32 ((int_32)$11 / (int_32)[66]))
	$5 = [0]
	
.LOOP $label$13:
	$5 = ($5 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$13 }
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$14 }
	$5 = ((((int_32)((uint_32)($11 + [-66]) / (uint_32)[66]) * (int_32)[66]) + $5) + [66])
	
.LABEL $label$14
	$6 = [0]
	*($3 + [88]) = [0]
	*($3 + [80]) = (int_64)0
	$8 = [0]
	$10 = ($4 - $10)
	if ( ($10 == 0) ){ goto $label$15 }
	if ( ((int_32)$10 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = CALL $9($10)
	*(($3 + [88])) = ($6 + $10)
	*($3 + [80]) = $6
	*($3 + [84]) = $6
	$8 = ($4 - $9)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$16 }
	CALL memcpy($6, $9, $8)
	$8 = ($6 + $8)
	*($3 + [84]) = $8
	goto $label$15 
	
.LABEL $label$16
	$8 = $6
	
.LABEL $label$15
	$5 = (($6 - $8) - $5)
	$12 = (CASTING uint_64)(uint_32 ($8 - $6))
	
.LOOP $label$17:
	$5 = ($5 + [-1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$17 }
	if ( ($6 == 0) ){ goto $label$18 }
	*($3 + [84]) = $6
	CALL $11($6)
	
.LABEL $label$18
	if ( ($9 == 0) ){ goto $label$19 }
	*($3 + [52]) = $9
	CALL $11($9)
	
.LABEL $label$19
	if ( ($7 == 0) ){ goto $label$20 }
	*($3 + [68]) = $7
	CALL $11($7)
	
.LABEL $label$20
	*($3 + [88]) = [0]
	*($3 + [80]) = (int_64)0
	if ( ($5 == 0) ){ goto $label$22 }
	CALL $46(($3 + [80]), ([0] - $5))
	$6 = *($3 + [84])
	$5 = *($3 + [80])
	goto $label$21 
	
.LABEL $label$22
	$6 = [0]
	$5 = [0]
	
.LABEL $label$21
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = $6
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = [0]
	$5 = (*(($1 + [4])) - *($1))
	$6 = ((int_32)$5 / (int_32)[66])
	if ( ($5 == 0) ){ goto $label$23 }
	if ( ((uint_32)$6 >= (uint_32)[65075263]) ){ goto $label$2 }
	$5 = CALL $9($5)
	*(($3 + [24])) = ($5 + ((int_32)$6 * (int_32)[66]))
	*($3 + [16]) = $5
	*($3 + [20]) = $5
	$1 = *($1)
	$6 = (*(($1 + [4])) - $1)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$23 }
	CALL memcpy($5, $1, $6)
	*($3 + [20]) = (*($3 + [20]) + ((int_32)((uint_32)$6 / (uint_32)[66]) * (int_32)[66]))
	
.LABEL $label$23
	*($3 + [8]) = [0]
	*($3) = (int_64)0
	$5 = (*(($2 + [4])) - *($2))
	if ( ($5 == 0) ){ goto $label$24 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL $9($5)
	*(($3 + [8])) = ($6 + $5)
	*($3) = $6
	*($3 + [4]) = $6
	$2 = *($2)
	$5 = (*(($2 + [4])) - $2)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$24 }
	CALL memcpy($6, $2, $5)
	*($3 + [4]) = (*($3 + [4]) + $5)
	
.LABEL $label$24
	CALL $305(($3 + [32]), ($3 + [16]), $3)
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$25 }
	*($3 + [4]) = $5
	CALL $11($5)
	
.LABEL $label$25
	$5 = *($3 + [16])
	if ( ($5 == 0) ){ goto $label$26 }
	*($3 + [20]) = $5
	CALL $11($5)
	
.LABEL $label$26
	$5 = *($3 + [80])
	CALL sha256($5, (*($3 + [84]) - $5), $0)
	$5 = *($3 + [80])
	if ( ($5 == 0) ){ goto $label$27 }
	*($3 + [84]) = $5
	CALL $11($5)
	
.LABEL $label$27
	$global$0 = ($3 + [96])
	return (unreachable)
	
.LABEL $label$5
	CALL $45(($3 + [64]))
	
.LABEL $label$4
	CALL $45(($3 + [48]))
	
.LABEL $label$3
	CALL $45(($3 + [80]))
	
.LABEL $label$2
	CALL $45(($3 + [16]))
	
.LABEL $label$1
	CALL $45($3)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [24])) = *($2 + [8])
	*($3) = (*($3) + [8])
	$0 = CALL $257($0, ($1 + [32]))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $163 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0) = *($1)
	$2 = *(($1 + [8]))
	*(($0 + [20])) = (int_64)0
	*(($0 + [8])) = $2
	*($0 + [16]) = [0]
	$3 = (*(($1 + [20])) - *($1 + [16]))
	if ( ($3 == 0) ){ goto $label$3 }
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$2 }
	$3 = CALL $9($3)
	*(($0 + [16])) = $3
	*(($0 + [24])) = ($3 + ($4 << [4]))
	*(($4 = ($0 + [20]))) = $3
	$5 = *(($1 + [16]))
	$6 = (*(($1 + [20])) - $5)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $5, $6)
	*($4) = (*($4) + $6)
	
.LABEL $label$3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$3 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$4 = CALL $9($3)
	*(($0 + [28])) = $4
	*(($0 + [36])) = ($4 + $3)
	*(($3 = ($0 + [32]))) = $4
	$6 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $6)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($4, $6, $1)
	*($3) = (*($3) + $1)
	
.LABEL $label$4
	return $0
	
.LABEL $label$2
	CALL $45(($0 + [16]))
	
.LABEL $label$1
	CALL $45(($0 + [28]))
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0) = (int_64)0
	*($0 + [8]) = [0]
	$2 = (*($1 + [4]) - *($1))
	$3 = ((int_32)$2 / (int_32)[66])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[65075263]) ){ goto $label$3 }
	$2 = CALL $9($2)
	*(($4 = ($0 + [4]))) = $2
	*(($0 + [8])) = ($2 + ((int_32)$3 * (int_32)[66]))
	*($0) = $2
	$5 = *($1)
	$3 = (*(($1 + [4])) - $5)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($2, $5, $3)
	*($4) = (*($4) + ((int_32)((uint_32)$3 / (uint_32)[66]) * (int_32)[66]))
	
.LABEL $label$4
	*(($0 + [20])) = (int_64)0
	*($0 + [16]) = [0]
	*($0 + [12]) = *($1 + [12])
	$2 = (*(($1 + [20])) - *($1 + [16]))
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $9($2)
	*(($0 + [16])) = $3
	*(($0 + [24])) = ($3 + $2)
	*(($2 = ($0 + [20]))) = $3
	$5 = *(($1 + [16]))
	$4 = (*(($1 + [20])) - $5)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($3, $5, $4)
	*($2) = (*($2) + $4)
	
.LABEL $label$5
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$2 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$1 }
	$3 = CALL $9($2)
	*(($0 + [28])) = $3
	*(($0 + [36])) = ($3 + $2)
	*(($2 = ($0 + [32]))) = $3
	$4 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $4)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($3, $4, $1)
	*($2) = (*($2) + $1)
	
.LABEL $label$6
	return $0
	
.LABEL $label$3
	CALL $45($0)
	
.LABEL $label$2
	CALL $45(($0 + [16]))
	
.LABEL $label$1
	CALL $45(($0 + [28]))
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [13842])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$9 = ($3 + [1])
	*($6) = $9
	$3 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $3)))
	$7 = ($3 + [7])
	$3 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$3 = (CASTING uint_32)(uint_64 $4)
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $339($0, $1, $3)
	$global$0 = ($2 + [48])
	return $0
	
.LABEL $label$3
	if ( ((uint_32)(*(($0 + [8])) - $9) > (uint_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$9 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $9, [32])
	*(($3 = ($0 + [4]))) = (*($3) + [32])
	$3 = *($1 + [48])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$5 }
	if ( $3 ){ goto $label$6 }
	*($1) = *($2)
	*(($1 + [8])) = *($2 + [8])
	*(($1 + [24])) = *(($2 + [24]))
	*(($1 + [16])) = *(($2 + [16]))
	$global$0 = ($2 + [48])
	return $0
	
.LABEL $label$6
	*($2 + [40]) = *([0] + [14000])
	CALL void ($2 + [32])((int_32 $1), (int_32 *((($2 + [40]) + ($3 << [2])))))
	
.LABEL $label$5
	*($1) = *($2)
	*(($1 + [8])) = *($2 + [8])
	*(($1 + [48])) = [0]
	*(($1 + [24])) = *(($2 + [24]))
	*(($1 + [16])) = *(($2 + [16]))
	$global$0 = ($2 + [48])
	return $0
}

int_32 .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = *($0 + [4])
	if ( ((int_32)*($0 + [8]) != (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [1])
	$2 = (*($3) + [1])
	*(($3 = ($0 + [4]))) = $2
	$4 = ($1 + [4])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $2) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$2 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $2, [4])
	$2 = (*($3) + [4])
	*($3) = $2
	$6 = (int_64)0
	$7 = [0]
	
.LOOP $label$3:
	if ( ($2 <= *($5)) ){ goto $label$4 }
	CALL eosio_assert([0], [13842])
	$2 = *($3)
	
.LABEL $label$4
	$4 = *($2)
	$2 = ($2 + [1])
	*($3) = $2
	$7 = ($7 & [255])
	$6 = ((int_64)$6 | (int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)))
	$7 = ($7 + [7])
	$2 = $2
	if ( ($4 & [128]) ){ goto $label$3 }
	*($1 + [8]) = $6
	return $0
}

void .FUNC $67 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $45($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [16])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $11($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $169 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [576])
	$global$0 = $4
	*(($4 + [504])) = [0]
	*($4 + [488]) = (int_64)-1
	$5 = *($0)
	*($4 + [472]) = $5
	*($4 + [480]) = $5
	*($4 + [496]) = (int_64)0
	$6 = [0]
	$7 = CALL db_lowerbound_i64($5, $5, (int_64)4849507793113186304, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $188(($4 + [472]), $7)
	
.LABEL $label$1
	*(($4 + [520])) = [0]
	*($4 + [512]) = (int_64)0
	$7 = CALL $17([13733])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$10 }
	*($4 + [512]) = ($7 << [1])
	$8 = (($4 + [512]) | [1])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$9 = (($7 + [16]) & [-16])
	$8 = CALL $9($9)
	*($4 + [512]) = ($9 | [1])
	*($4 + [520]) = $8
	*($4 + [516]) = $7
	
.LABEL $label$9
	CALL memcpy($8, [13733], $7)
	
.LABEL $label$8
	$9 = ((int_32)$6 != (int_32)[0])
	$6 = [0]
	*(($8 + $7)) = [0]
	$5 = *($0)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$14 }
	$8 = *([0] + [13696])
	
.LOOP $label$16:
	*((($4 + [80]) + ($7 = $6))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$6 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$15 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$16 }
	
.LABEL $label$15
	*(($4 + [464])) = [0]
	*($4 + [456]) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$13 }
	*($4 + [456]) = ($6 << [1])
	$8 = (($4 + [456]) | [1])
	goto $label$12 
	
.LABEL $label$14
	*(($4 + [464])) = [0]
	*($4 + [456]) = (int_64)0
	*($4 + [456]) = [0]
	$7 = (($4 + [456]) | [1])
	$6 = $7
	goto $label$11 
	
.LABEL $label$13
	$0 = (($6 + [16]) & [-16])
	$8 = CALL $9($0)
	*($4 + [456]) = ($0 | [1])
	*($4 + [464]) = $8
	*($4 + [460]) = $6
	
.LABEL $label$12
	$0 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$17:
	*(($8 + $7)) = *((($4 + [80]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$17 }
	$6 = ($8 + $6)
	$7 = (($4 + [456]) | [1])
	
.LABEL $label$11
	*($6) = [0]
	$6 = *($4 + [456])
	$8 = ($6 & [1])
	$7 = CALL $37(($4 + [512]), ( *($4 + [464]) ? $7 : $8 ), ( *($4 + [460]) ? uint_32($6 >> [1]) : $8 ))
	$6 = ($7 + [8])
	*((($4 + [544]) + [8])) = *($6)
	*($4 + [544]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	$7 = CALL $35(($4 + [544]), [13753])
	$8 = ($7 + [8])
	*(($6 = (($4 + [80]) + [8]))) = *($8)
	*($4 + [80]) = *($7)
	*($7) = (int_64)0
	*($8) = [0]
	CALL eosio_assert($9, ( *($6) ? (($4 + [80]) | [1]) : (*($4 + [80]) & [1]) ))
	if ( (*($4 + [80]) & [1]) ){ goto $label$19 }
	if ( (*($4 + [544]) & [1]) ){ goto $label$18 }
	goto $label$6 
	
.LABEL $label$19
	CALL $11(*($6))
	if ( ((*($4 + [544]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$18
	CALL $11(*($4 + [552]))
	$7 = [1]
	if ( ((*($4 + [456]) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	CALL $26(($4 + [512]))
	
.LABEL $label$6
	$7 = [1]
	if ( (*($4 + [456]) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($4 + [512]) & $7) == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	CALL $11(*(($4 + [464])))
	if ( ((*($4 + [512]) & $7) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [520]))
	
.LABEL $label$2
	$7 = CALL $189(($4 + [472]), *($1), [11038])
	*((($4 + [80]) + [40])) = *(($7 + [40]))
	*((($4 + [80]) + [32])) = *(($7 + [32]))
	*((($4 + [80]) + [24])) = *(($7 + [24]))
	*((($4 + [80]) + [16])) = *(($7 + [16]))
	*($4 + [80]) = *($7)
	*($4 + [88]) = *(($7 + [8]))
	CALL $190((($4 + [80]) + [48]), ($7 + [48]))
	CALL memcpy((($4 + [80]) + [212]), ($7 + [212]), [66])
	$5 = *($7 + [288])
	*((($4 + [80]) + [300])) = (int_64)0
	*($4 + [376]) = [0]
	*($4 + [368]) = $5
	$8 = ($4 + [376])
	$6 = (*(($7 + [300])) - *($7 + [296]))
	if ( ($6 == 0) ){ goto $label$26 }
	$0 = int_32($6 >> [5])
	if ( ((uint_32)$0 >= (uint_32)[134217728]) ){ goto $label$25 }
	$6 = CALL $9($6)
	*((($4 + [80]) + [296])) = $6
	*(($4 + [384])) = ($6 + ($0 << [5]))
	*(($0 = (($4 + [80]) + [300]))) = $6
	$10 = *(($7 + [296]))
	$9 = (*(($7 + [300])) - $10)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$26 }
	CALL memcpy($6, $10, $9)
	*($0) = (*($0) + $9)
	
.LABEL $label$26
	*((($4 + [80]) + [312])) = *(($7 + [312]))
	*((($4 + [80]) + [328])) = *(($7 + [328]))
	*((($4 + [80]) + [336])) = *(($7 + [336]))
	*((($4 + [80]) + [344])) = *(($7 + [344]))
	*((($4 + [80]) + [352])) = *(($7 + [352]))
	*($4 + [434]) = *(($7 + [354]))
	*($4 + [400]) = *($7 + [320])
	$0 = *($4 + [434])
	*((($4 + [456]) + [8])) = [0]
	*($4 + [456]) = (int_64)0
	$7 = CALL $17([13764])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$27 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$30 }
	*($4 + [456]) = ($7 << [1])
	$6 = (($4 + [456]) | [1])
	if ( $7 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$9 = (($7 + [16]) & [-16])
	$6 = CALL $9($9)
	*($4 + [456]) = ($9 | [1])
	*($4 + [464]) = $6
	*($4 + [460]) = $7
	
.LABEL $label$29
	CALL memcpy($6, [13764], $7)
	
.LABEL $label$28
	*(($6 + $7)) = [0]
	CALL $42(($4 + [64]), *($1))
	$7 = *($4 + [64])
	$6 = ($7 & [1])
	$7 = CALL $37(($4 + [456]), ( *($4 + [72]) ? (($4 + [64]) | [1]) : $6 ), ( *($4 + [68]) ? uint_32($7 >> [1]) : $6 ))
	$6 = ($7 + [8])
	*((($4 + [512]) + [8])) = *($6)
	*($4 + [512]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	$7 = CALL $35(($4 + [512]), [13771])
	$1 = ($7 + [8])
	*(($6 = (($4 + [544]) + [8]))) = *($1)
	*($4 + [544]) = *($7)
	*($7) = (int_64)0
	*($1) = [0]
	CALL eosio_assert($0, ( *($6) ? (($4 + [544]) | [1]) : (*($4 + [544]) & [1]) ))
	if ( (*($4 + [544]) & [1]) ){ goto $label$32 }
	if ( (*($4 + [512]) & [1]) ){ goto $label$31 }
	goto $label$24 
	
.LABEL $label$32
	CALL $11(*($6))
	if ( ((*($4 + [512]) & [1]) == 0) ){ goto $label$24 }
	
.LABEL $label$31
	CALL $11(*($4 + [520]))
	$7 = [1]
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$27
	CALL $26(($4 + [456]))
	
.LABEL $label$25
	CALL $45($8)
	
.LABEL $label$24
	$7 = [1]
	if ( (*($4 + [64]) & [1]) ){ goto $label$22 }
	
.LABEL $label$23
	if ( ((*($4 + [456]) & $7) == 0) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$22
	CALL $11(*(($4 + [72])))
	if ( ((*($4 + [456]) & $7) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	CALL $11(*($4 + [464]))
	
.LABEL $label$20
	CALL $47(($4 + [32]), $8, $2)
	*(($7 = ($4 + [24]))) = *(($3 + [24]))
	*(($6 = ($4 + [16]))) = *(($3 + [16]))
	*($4 + [8]) = *(($3 + [8]))
	*($4) = *($3)
	*((($4 + [544]) + [24])) = *($7)
	*((($4 + [544]) + [16])) = *($6)
	*((($4 + [512]) + [16])) = *((($4 + [32]) + [16]))
	*((($4 + [512]) + [24])) = *((($4 + [32]) + [24]))
	*($4 + [552]) = *($4 + [8])
	*($4 + [544]) = *($4)
	*($4 + [512]) = *($4 + [32])
	*($4 + [520]) = *($4 + [40])
	CALL eosio_assert((CALL $1(($4 + [512]), ($4 + [544]), [32]) == 0), [13792])
	$7 = *($4 + [376])
	if ( ($7 == 0) ){ goto $label$33 }
	*(($4 + [380])) = $7
	CALL $11($7)
	
.LABEL $label$33
	$0 = *(($4 + [280]))
	if ( ($0 == 0) ){ goto $label$34 }
	$3 = ($4 + [284])
	$7 = *($3)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$36 }
	
.LOOP $label$37:
	$6 = ($7 + [-16])
	$8 = *(($7 + [-12]))
	if ( ($8 == 0) ){ goto $label$38 }
	*(($7 + [-8])) = $8
	CALL $11($8)
	
.LABEL $label$38
	$7 = $6
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$37 }
	$7 = *(($4 + [280]))
	goto $label$35 
	
.LABEL $label$36
	$7 = $0
	
.LABEL $label$35
	*($3) = $0
	CALL $11($7)
	
.LABEL $label$34
	if ( (*(($4 + [276])) == 0) ){ goto $label$39 }
	$7 = *(($4 + [264]))
	if ( ($7 == 0) ){ goto $label$39 }
	*(($4 + [268])) = $7
	CALL $11($7)
	
.LABEL $label$39
	CALL $191(($4 + [496]))
	$global$0 = ($4 + [576])
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	CALL $54(CALL $313($0, ($1 + [132])), ($1 + [152]))
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [2])
	$3 = (*($2) + [2])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [32])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($4, $3, [32])
	$3 = (*($2) + [32])
	*($2) = $3
	$2 = ($1 + [64])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $3, [32])
	$3 = (*($2) + [32])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [96])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($4, $3, [32])
	$3 = (*($2) + [32])
	*($2) = $3
	$2 = ($1 + [128])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $3, [4])
	return *(($2 = ($0 + [4]))) = (*($2) + [4])
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	CALL $29(($1 + [8]), *($4 + [4]))
	*($1 + [24]) = *(*($4 + [8]))
	*($1 + [48]) = *(*($4 + [20]))
	*($1 + [32]) = *(*($4 + [12]))
	*($1 + [52]) = *(*($4 + [24]))
	*($1 + [40]) = *(*($4 + [16]))
	*($1 + [56]) = *(*($4 + [28]))
	*($1 + [60]) = *(*($4 + [32]))
	$4 = *($1 + [8])
	$6 = ( *(($1 + [12])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($6 + [45])
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	CALL $75($3, $1)
	$7 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($5 + [8]), (int_64)-6154885545578332160, *(*($0 + [8])), $7, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$7 >= (uint_64)*($5 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $4($2)
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [16])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [14370])
	
.LABEL $label$1
	*(($5 = CALL $9([32])) + [8]) = [1]
	*($5) = (int_64)0
	*($5 + [16]) = $1
	$3 = *($3)
	*($5) = *($3)
	*($5 + [8]) = *(($3 + [8]))
	CALL memcpy(($4 + [16]), $5, [8])
	*($4 + [8]) = *($5 + [8])
	CALL memcpy((($4 + [16]) | [8]), ($4 + [8]), [1])
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)7235159550150574080, $2, (int_64)7235159550150574080, ($4 + [16]), [9])
	*($5 + [20]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)7235159550150574080) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)7235159550150574081
	
.LABEL $label$2
	*($4 + [8]) = $5
	*($4 + [16]) = (int_64)7235159550150574080
	*($4 + [4]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)7235159550150574080
	*($3 + [16]) = $6
	*($4 + [8]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $329(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $11($5)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

void .FUNC $60 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($6 = ($1 + [8]))) = *(($3 + [8]))
	$3 = $4
	$4 = ($3 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [15]) = *($6)
	CALL memcpy(($3 + [-8]), ($5 + [15]), [1])
	CALL db_update_i64(*($1 + [20]), $2, $4, [9])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7235159550150574080) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)7235159550150574081
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $63 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_64 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	int_32 $11
	$10 = ($global$0 - [128])
	$global$0 = $10
	*($10 + [32]) = $3
	*($10 + [40]) = $1
	*($10 + [24]) = $4
	*($10 + [16]) = $5
	*($10 + [12]) = $6
	*($10 + [8]) = $7
	*($10 + [4]) = $8
	*($10 + [3]) = $9
	CALL require_auth(*($0))
	CALL eosio_assert(((int_64)$1 != (int_64)0), [8739])
	$9 = *($2)
	if ( ($9 & [1]) ){ goto $label$2 }
	$9 = uint_32($9 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$9 = *($2 + [4])
	
.LABEL $label$1
	CALL eosio_assert(($9 <= [256]), [8771])
	CALL eosio_assert(((int_64)$3 != (int_64)0), [8810])
	CALL eosio_assert(CALL $fimport$29($4), [8856])
	CALL eosio_assert(CALL $fimport$29($5), [8908])
	CALL eosio_assert((($6 + [-1]) <= [10]), [8946])
	CALL eosio_assert((($7 + [-500]) <= [1501]), [8627])
	CALL eosio_assert((($8 + [-1000]) <= [1001]), [8995])
	$11 = ($0 + [88])
	$7 = *(($0 + [116]))
	$9 = *(($0 + [112]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$7:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$6 }
	$7 = $8
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$5 }
	if ( ((int_32)*($6 + [64]) == (int_32)$11) ){ goto $label$8 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$8
	if ( $6 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = CALL db_find_i64(*($11), *(($0 + [96])), (int_64)-6154885545578332160, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $64($11, $8)
	if ( ((int_32)*($6 + [64]) == (int_32)$11) ){ goto $label$4 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$4
	$8 = CALL db_next_i64(*($6 + [68]), ($10 + [48]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$9 }
	CALL $64($11, $8)
	
.LABEL $label$9
	CALL $65($11, $6)
	
.LABEL $label$3
	$1 = *($0)
	*($10 + [52]) = $2
	*($10 + [48]) = ($10 + [40])
	*($10 + [56]) = ($10 + [32])
	*($10 + [60]) = ($10 + [24])
	*($10 + [64]) = ($10 + [16])
	*($10 + [68]) = ($10 + [12])
	*($10 + [72]) = ($10 + [8])
	*($10 + [76]) = ($10 + [4])
	*($10 + [80]) = ($10 + [3])
	*($10 + [120]) = $1
	if ( ((int_64)*(($0 + [88])) == (int_64)CALL current_receiver()) ){ goto $label$10 }
	CALL eosio_assert([0], [14370])
	
.LABEL $label$10
	*($10 + [96]) = $11
	*($10 + [100]) = ($10 + [48])
	*($10 + [104]) = ($10 + [120])
	*(($8 = CALL $9([80]))) = (int_64)0
	*($8 + [8 align=4]) = (int_64)0
	*($8 + [16]) = [0]
	*($8 + [24]) = (int_64)0
	*($8 + [32]) = (int_64)0
	*($8 + [40]) = (int_64)0
	*($8 + [48]) = (int_64)0
	*($8 + [56]) = [0]
	*($8 + [60]) = [1]
	*($8 + [64]) = $11
	CALL $66(($10 + [96]), $8)
	*($10 + [112]) = $8
	$1 = *($8)
	*($10 + [96]) = $1
	$6 = *($8 + [68])
	*($10 + [92]) = $6
	$9 = ($0 + [116])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [120]))) ){ goto $label$13 }
	*($7 + [8]) = $1
	*($7 + [16]) = $6
	*($10 + [112]) = [0]
	*($7) = $8
	*($9) = ($7 + [24])
	$8 = *($10 + [112])
	*($10 + [112]) = [0]
	if ( ($8 == 0) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	CALL $67(($0 + [112]), ($10 + [112]), ($10 + [96]), ($10 + [92]))
	$8 = *($10 + [112])
	*($10 + [112]) = [0]
	if ( ($8 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$14 }
	CALL $11(*(($8 + [16])))
	
.LABEL $label$14
	CALL $11($8)
	
.LABEL $label$11
	$11 = ($0 + [128])
	$1 = *($10 + [40])
	$7 = *(($0 + [156]))
	$9 = *(($0 + [152]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$17 }
	
.LOOP $label$19:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$18 }
	$7 = $8
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$17 }
	if ( ((int_32)*($6 + [40]) == (int_32)$11) ){ goto $label$16 }
	CALL eosio_assert([0], [13846])
	goto $label$16 
	
.LABEL $label$17
	$8 = CALL db_find_i64(*($11), *(($0 + [136])), (int_64)-6154885545578430464, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$15 }
	$6 = CALL $68($11, $8)
	if ( ((int_32)*($6 + [40]) == (int_32)$11) ){ goto $label$16 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$16
	$8 = CALL db_next_i64(*($6 + [44]), ($10 + [48]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$20 }
	CALL $68($11, $8)
	
.LABEL $label$20
	CALL $69($11, $6)
	
.LABEL $label$15
	$5 = *($0)
	if ( ((int_64)*(($0 + [128])) == (int_64)CALL current_receiver()) ){ goto $label$21 }
	CALL eosio_assert([0], [14370])
	
.LABEL $label$21
	*(($8 = CALL $9([56])) + [40]) = $11
	*($8 + [8]) = (int_64)0
	*($8 + [16]) = (int_64)0
	*($8 + [24]) = [0]
	*($8 + [32]) = (int_64)1
	*($8) = *($10 + [40])
	*($10 + [104]) = (($10 + [48]) + [36])
	*($10 + [100]) = ($10 + [48])
	*($10 + [96]) = ($10 + [48])
	CALL $70(($10 + [96]), $8)
	$1 = *($8)
	$6 = CALL db_store_i64(*(($0 + [136])), (int_64)-6154885545578430464, $5, $1, ($10 + [48]), [36])
	*($8 + [44]) = $6
	$7 = ($0 + [144])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$22 }
	*($7) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	*($10 + [96]) = $8
	$1 = *($8)
	*($10 + [48]) = $1
	*($10 + [120]) = $6
	$9 = ($0 + [156])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [160]))) ){ goto $label$25 }
	*($7 + [8]) = $1
	*($7 + [16]) = $6
	*($10 + [96]) = [0]
	*($7) = $8
	*($9) = ($7 + [24])
	$8 = *($10 + [96])
	*($10 + [96]) = [0]
	if ( $8 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL $71(($0 + [152]), ($10 + [96]), ($10 + [48]), ($10 + [120]))
	$8 = *($10 + [96])
	*($10 + [96]) = [0]
	if ( ($8 == 0) ){ goto $label$23 }
	
.LABEL $label$24
	CALL $11($8)
	
.LABEL $label$23
	$global$0 = ($10 + [128])
}

int_32 .FUNC $241 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [352])
	$global$0 = $3
	*(($4 = $3) + [344]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [320])) = [0]
	*(($4 + [336])) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [292]) = $2
	*($4 + [288]) = $2
	*($4 + [296]) = ($2 + $5)
	*($4 + [16]) = ($4 + [288])
	*($4 + [40]) = ($4 + [304])
	CALL $263(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [296])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [288])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $56(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [344])
	CALL $264(($4 + [16]), ($4 + [304]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $58($3)
	if ( ((*($4 + [312]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [320])))
	
.LABEL $label$5
	$global$0 = ($4 + [352])
	return [1]
}

void .FUNC $87 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = CALL $81($0, $1)
	$6 = *($3)
	if ( ($6 & [1]) ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($3 + [4])
	
.LABEL $label$1
	CALL eosio_assert(($6 <= [256]), [9839])
	CALL require_auth(*($5 + [128]))
	$6 = *($2)
	$7 = CALL $17([9876])
	if ( ((int_32)$7 != (int_32)( *($2 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$5 }
	if ( (CALL $41($2, [0], [-1], [9876], $7) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$6 = *($2)
	$7 = CALL $17([9889])
	if ( ((int_32)$7 != (int_32)( *(($2 + [4])) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$6 }
	if ( (CALL $41($2, [0], [-1], [9889], $7) == 0) ){ goto $label$3 }
	
.LABEL $label$6
	CALL eosio_assert([0], [9082])
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$4
	$1 = *(($5 + [128]))
	*($4 + [8]) = $3
	CALL $88(($0 + [168]), $5, $1, ($4 + [8]))
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$3
	$1 = *(($5 + [128]))
	*($4) = $3
	CALL $89(($0 + [168]), $5, $1, $4)
	$global$0 = ($4 + [16])
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14485])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14530])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [14580])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [44]))
}

int_32 .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13814])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [32]) = (int_64)1
	*($5 + [40]) = $0
	CALL $332(($3 + [32]), $5)
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $71(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $248 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [352])
	$global$0 = $3
	*(($4 = $3) + [344]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $2($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*(($4 + [328])) = (int_64)0
	*(($4 + [336])) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [300]) = $3
	*($4 + [296]) = $3
	*($4 + [304]) = ($3 + $2)
	$5 = $3
	if ( ((uint_32)$2 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$5 = *($4 + [300])
	
.LABEL $label$5
	CALL memcpy(($4 + [312]), $5, [8])
	*($4 + [300]) = ($5 + [8])
	CALL $257(($4 + [296]), (($4 + [312]) + [8]))
	CALL $257(($4 + [296]), ($4 + [332]))
	$5 = *((($4 + [296]) + [8]))
	*((($4 + [32]) + [8])) = $5
	*((($4 + [8]) + [8])) = $5
	$6 = *($4 + [296])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$5 = CALL $56(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $5
	*($4 + [28]) = ($4 + [344])
	CALL $258(($4 + [24]), ($4 + [312]))
	if ( ($2 <= [513]) ){ goto $label$6 }
	CALL $4($3)
	
.LABEL $label$6
	CALL $58($5)
	if ( ((*($4 + [332]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($4 + [340])))
	
.LABEL $label$7
	if ( ((*($4 + [320]) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*(($4 + [328])))
	
.LABEL $label$8
	$global$0 = ($4 + [352])
	return [1]
}

void .FUNC $249 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	CALL $257(*($1), ($4 + [8]))
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $349(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $246 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [352])
	$global$0 = $3
	*(($4 = $3) + [344]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [328])) = [0]
	*($4 + [312]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [300]) = $2
	*($4 + [296]) = $2
	*($4 + [304]) = ($2 + $5)
	*($4 + [24]) = ($4 + [296])
	*($4 + [48]) = ($4 + [312])
	CALL $265(($4 + [48]), ($4 + [24]))
	$3 = *($4 + [304])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [296])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $56(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [344])
	CALL $266(($4 + [24]), ($4 + [312]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $58($3)
	if ( ((*($4 + [320]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [328])))
	
.LABEL $label$5
	$global$0 = ($4 + [352])
	return [1]
}

int_32 .FUNC $247 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [384])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [328]))) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [300]) = $2
	*($4 + [296]) = $2
	*($4 + [304]) = ($2 + $7)
	*($4 + [368]) = ($4 + [296])
	*($4 + [48]) = ($4 + [312])
	CALL $269(($4 + [48]), ($4 + [368]))
	$8 = *($4 + [304])
	*((($4 + [32]) + [8])) = $8
	*((($4 + [16]) + [8])) = $8
	$9 = *($4 + [296])
	*($4 + [16]) = $9
	*($4 + [32]) = $9
	$8 = CALL $56(($4 + [48]), $0, $1, ($4 + [16]))
	*(($10 = (($4 + [336]) + [8]))) = *($3)
	*($4 + [336]) = *($4 + [320])
	$0 = *($4 + [312])
	*((($4 + [352]) + [8])) = *($10)
	*($4 + [352]) = *($4 + [336])
	$3 = (($4 + [48]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$1 = *((($4 + [352]) + [8]))
	*((($4 + [368]) + [8])) = $1
	*(($4 + [8])) = $1
	$1 = *($4 + [352])
	*($4) = $1
	*($4 + [368]) = $1
	CALL void $3((int_32 $0), (int_64 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $4($2)
	
.LABEL $label$6
	CALL $58($8)
	$global$0 = ($4 + [384])
	return [1]
}

int_32 .FUNC $244 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [384])
	$global$0 = $3
	*(($4 = $3) + [376]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [328])) = [0]
	*($4 + [312]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [368]) = [0]
	*($4 + [372]) = [0]
	*($4 + [300]) = $2
	*($4 + [296]) = $2
	*($4 + [304]) = ($2 + $5)
	*($4 + [24]) = ($4 + [296])
	*($4 + [48]) = ($4 + [312])
	CALL $249(($4 + [48]), ($4 + [24]))
	$3 = *($4 + [304])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [296])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $56(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [376])
	CALL $250(($4 + [24]), ($4 + [312]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $58($3)
	if ( ((*($4 + [320]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [328])))
	
.LABEL $label$5
	$global$0 = ($4 + [384])
	return [1]
}

int_32 .FUNC $245 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$3 = ($global$0 - [752])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [416]))) = (int_64)0
	*(($8 = ($4 + [432]))) = (int_64)0
	*(($9 = ($4 + [448]))) = (int_64)0
	*(($10 = ($4 + [464]))) = (int_64)0
	*(($11 = ($4 + [496]))) = (int_64)0
	*($4 + [384]) = (int_64)0
	*($4 + [376]) = (int_64)0
	*($4 + [392]) = (int_64)0
	*($4 + [400]) = (int_64)0
	*($4 + [408]) = (int_64)0
	*($4 + [424]) = (int_64)0
	*($4 + [440]) = (int_64)0
	*($4 + [456]) = (int_64)0
	*($4 + [472]) = [0]
	*($4 + [480]) = (int_64)0
	*($4 + [488]) = (int_64)0
	*($4 + [504]) = [0]
	*($4 + [364]) = $2
	*($4 + [360]) = $2
	*($4 + [368]) = ($2 + $7)
	*($4 + [736]) = ($4 + [360])
	*($4 + [112]) = ($4 + [376])
	CALL $262(($4 + [112]), ($4 + [736]))
	$12 = *($4 + [368])
	*((($4 + [96]) + [8])) = $12
	*((($4 + [80]) + [8])) = $12
	$13 = *($4 + [360])
	*($4 + [80]) = $13
	*($4 + [96]) = $13
	$12 = CALL $56(($4 + [112]), $0, $1, ($4 + [80]))
	*(($14 = (($4 + [576]) + [8]))) = *($3)
	*(($3 = (($4 + [560]) + [8]))) = *($8)
	*(($8 = (($4 + [544]) + [8]))) = *($9)
	*(($9 = (($4 + [528]) + [8]))) = *($10)
	*($4 + [576]) = *($4 + [408])
	*($4 + [560]) = *($4 + [424])
	*($4 + [544]) = *($4 + [440])
	*($4 + [528]) = *($4 + [456])
	$0 = *($4 + [400])
	$1 = *($4 + [392])
	$13 = *($4 + [384])
	$15 = *($4 + [376])
	*(($10 = (($4 + [512]) + [8]))) = *($11)
	*($4 + [512]) = *($4 + [488])
	$16 = *($4 + [480])
	$11 = *($4 + [472])
	$17 = *($4 + [504])
	*((($4 + [656]) + [8])) = *($10)
	*((($4 + [640]) + [8])) = *($9)
	*((($4 + [624]) + [8])) = *($8)
	*((($4 + [608]) + [8])) = *($3)
	*((($4 + [592]) + [8])) = *($14)
	*($4 + [656]) = *($4 + [512])
	*($4 + [640]) = *($4 + [528])
	*($4 + [624]) = *($4 + [544])
	*($4 + [608]) = *($4 + [560])
	*($4 + [592]) = *($4 + [576])
	$3 = (($4 + [112]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	*(($5 = (($4 + [736]) + [8]))) = *((($4 + [592]) + [8]))
	*(($8 = (($4 + [720]) + [8]))) = *((($4 + [608]) + [8]))
	*(($9 = (($4 + [704]) + [8]))) = *((($4 + [624]) + [8]))
	*(($10 = (($4 + [688]) + [8]))) = *((($4 + [640]) + [8]))
	*(($14 = (($4 + [672]) + [8]))) = *((($4 + [656]) + [8]))
	*($4 + [736]) = *($4 + [592])
	*($4 + [720]) = *($4 + [608])
	*($4 + [704]) = *($4 + [624])
	*($4 + [688]) = *($4 + [640])
	*($4 + [672]) = *($4 + [656])
	*((($4 + [64]) + [8])) = *($5)
	*((($4 + [48]) + [8])) = *($8)
	*((($4 + [32]) + [8])) = *($9)
	*((($4 + [16]) + [8])) = *($10)
	*(($4 + [8])) = *($14)
	*($4 + [64]) = *($4 + [736])
	*($4 + [48]) = *($4 + [720])
	*($4 + [32]) = *($4 + [704])
	*($4 + [16]) = *($4 + [688])
	*($4) = *($4 + [672])
	CALL void $3((int_32 $15), (int_64 $13), (int_64 $1), (int_64 $0), (int_64 ($4 + [64])), (int_32 ($4 + [48])), (int_32 ($4 + [32])), (int_32 ($4 + [16])), (int_32 $11), (int_32 $16), (int_64 $4), (int_32 ((int_32)($17 & [255]) != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $4($2)
	
.LABEL $label$5
	CALL $58($12)
	$global$0 = ($4 + [752])
	return [1]
}

int_32 .FUNC $242 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [352])
	$global$0 = $3
	*(($4 = $3) + [344]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [320])) = [0]
	*(($4 + [336])) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [292]) = $2
	*($4 + [288]) = $2
	*($4 + [296]) = ($2 + $5)
	*($4 + [16]) = ($4 + [288])
	*($4 + [40]) = ($4 + [304])
	CALL $255(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [296])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [288])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $56(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [344])
	CALL $256(($4 + [16]), ($4 + [304]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $58($3)
	if ( ((*($4 + [312]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [320])))
	
.LABEL $label$5
	$global$0 = ($4 + [352])
	return [1]
}

int_32 .FUNC $243 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [464])
	$global$0 = $3
	*(($4 = $3) + [456]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [344])) = (int_64)0
	*(($4 + [336])) = (int_64)0
	*(($4 + [328])) = (int_64)0
	*(($4 + [360])) = (int_64)0
	*(($4 + [368])) = (int_64)0
	*(($4 + [384])) = (int_64)0
	*(($4 + [400])) = (int_64)0
	*(($4 + [424])) = (int_64)0
	*(($4 + [440])) = [0]
	*($4 + [312]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [376]) = (int_64)0
	*($4 + [392]) = (int_64)0
	*($4 + [408]) = (int_64)0
	*($4 + [416]) = (int_64)0
	*($4 + [432]) = (int_64)0
	*($4 + [292]) = $2
	*($4 + [288]) = $2
	*($4 + [296]) = ($2 + $5)
	*($4 + [16]) = ($4 + [288])
	*($4 + [40]) = ($4 + [304])
	CALL $272(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [296])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [288])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $56(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [456])
	CALL $273(($4 + [16]), ($4 + [304]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $58($3)
	if ( ((*($4 + [432]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [440])))
	
.LABEL $label$5
	$2 = *(($4 + [392]))
	if ( ($2 == 0) ){ goto $label$6 }
	*(($4 + [396])) = $2
	CALL $11($2)
	
.LABEL $label$6
	$2 = *(($4 + [380]))
	if ( ($2 == 0) ){ goto $label$7 }
	*(($4 + [384])) = $2
	CALL $11($2)
	
.LABEL $label$7
	$2 = *(($4 + [364]))
	if ( ($2 == 0) ){ goto $label$8 }
	*(($4 + [368])) = $2
	CALL $11($2)
	
.LABEL $label$8
	$2 = *(($4 + [352]))
	if ( ($2 == 0) ){ goto $label$9 }
	*(($4 + [356])) = $2
	CALL $11($2)
	
.LABEL $label$9
	$global$0 = ($4 + [464])
	return [1]
}

int_32 .FUNC $240 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [304])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [296]) = [0]
	*($4 + [288]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$4
	$3 = ($2 + $7)
	CALL memcpy(($4 + [288]), $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$5
	CALL memcpy(($4 + [40]), $8, [1])
	*(($8 = (($4 + [288]) + [8]))) = ((int_32)*($4 + [40]) != (int_32)[0])
	*((($4 + [8]) + [8])) = $3
	*($4 + [24]) = $2
	*($4 + [28]) = ($2 + [9])
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$9 = CALL $56(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$8 = *($8)
	$0 = *($4 + [288])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 ((int_32)($8 & [255]) != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $4($2)
	
.LABEL $label$7
	CALL $58($9)
	$global$0 = ($4 + [304])
	return [1]
}

void .FUNC $62 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL require_auth(*($0))
	*(($0 + [80])) = $2
	*($0 + [72]) = $1
}

void .FUNC $84 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($4 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($4 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$2 = *($2)
	*($1 + [64]) = *($2)
	*(($1 + [72])) = *(($2 + [8]))
	$2 = *($1 + [100])
	$5 = ( *(($1 + [104])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [253])
	$6 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [100])
	$7 = ($1 + [64])
	$8 = *($1)
	$9 = (($4 + [16]) + [8])
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$10 = *($1 + [112])
	$10 = ( *(($1 + [116])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$2 = ($10 + $2)
	$6 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [112])
	
.LOOP $label$4:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$6 }
	$3 = CALL $2($2)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [32]) = $4
	*($4 + [60]) = $7
	*($4 + [72]) = $5
	*($4 + [76]) = $10
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [32])
	*($4 + [56]) = ($1 + [48])
	*($4 + [64]) = ($1 + [80])
	*($4 + [68]) = ($1 + [96])
	*($4 + [80]) = ($1 + [128])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [144])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [168])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [200])
	*($4 + [108]) = ($1 + [208])
	*($4 + [112]) = ($1 + [224])
	*($4 + [120]) = ($1 + [240])
	*($4 + [116]) = ($1 + [232])
	CALL $86(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [300]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$7 }
	CALL $4($3)
	
.LABEL $label$7
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($4 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$9 }
	$3 = ($1 + [304])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$10 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($4 + [32]), $8)
	*($3) = $2
	
.LABEL $label$10
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$9
	*($4 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($9, ($4 + [40]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [308])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$12 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($4 + [32]), $8)
	*($1) = $2
	
.LABEL $label$12
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$11
	$global$0 = ($4 + [128])
}

void .FUNC $199 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [56]) = (int_64)0
	*((($3 + [16]) + [24])) = *(($2 + [24]))
	*((($3 + [16]) + [16])) = *(($2 + [16]))
	*($3 + [24]) = *(($2 + [8]))
	*($3 + [16]) = *($2)
	$4 = *($1)
	$5 = CALL db_idx256_lowerbound(*($4), *($4 + [8]), (int_64)-6495091301338316799, ($3 + [16]), [2], ($3 + [56]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = *($3 + [56])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	
.LOOP $label$7:
	$4 = ($9 + [-24])
	$10 = *($4)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$6 }
	$9 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	if ( ((int_32)*($10 + [80]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [13846])
	*(($10 + [92])) = $5
	if ( $10 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$10 = CALL $206($7, CALL $fimport$27(*($7), *($7 + [8]), (int_64)-6495091301338316800, $6))
	if ( ((int_32)*($10 + [80]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$4
	*(($10 + [92])) = $5
	if ( ($10 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = [16]
	$5 = ($10 + [16])
	$6 = (int_64)0
	$8 = ($3 + [16])
	$9 = [0]
	$11 = (int_64)0
	
.LOOP $label$9:
	$7 = ($5 + $9)
	if ( ($4 <= [2]) ){ goto $label$10 }
	$6 = ((int_64)$6 | (int_64)*($7))
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)(uint_64)$6 >> (uint_64)(int_64)56))
	$4 = ($4 + [-1])
	$6 = ((int_64)$6 << (int_64)8)
	$9 = ($9 + [1])
	if ( ((int_32)$9 != (int_32)[32]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$11 }
	CALL eosio_assert([0], [14110])
	
.LABEL $label$11
	*($8 + [8]) = $11
	*($8) = ((int_64)$6 | (int_64)*($7))
	$4 = [16]
	$8 = ($8 + [16])
	$6 = (int_64)0
	$11 = (int_64)0
	$9 = ($9 + [1])
	if ( ((int_32)$9 != (int_32)[32]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$4 == (int_32)[16]) ){ goto $label$12 }
	if ( ($4 <= [2]) ){ goto $label$13 }
	CALL __ashlti3($3, $6, $11, (($4 << [3]) + [-8]))
	$11 = *(($3 + [8]))
	$6 = *($3)
	
.LABEL $label$13
	*($8) = $6
	*($8 + [8]) = $11
	
.LABEL $label$12
	if ( ((int_64)(((int_64)((int_64)*($2) ^ (int_64)*($3 + [16])) | (int_64)((int_64)*(($2 + [8])) ^ (int_64)*($3 + [24]))) == 0) == 0) ){ goto $label$2 }
	$4 = ( $10 ? [0] : (int_64)(((int_64)((int_64)*($2 + [16]) ^ (int_64)*($3 + [32])) | (int_64)((int_64)*(($2 + [24])) ^ (int_64)*((($3 + [16]) + [24])))) == 0) )
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [64])
}

void .FUNC $83 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($4 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($4 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$2 = *($2)
	*($1 + [48]) = *($2)
	*(($1 + [56])) = *(($2 + [8]))
	$2 = *($1 + [100])
	$5 = ( *(($1 + [104])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [253])
	$6 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [100])
	$7 = ($1 + [48])
	$8 = *($1)
	$9 = (($4 + [16]) + [8])
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$10 = *($1 + [112])
	$10 = ( *(($1 + [116])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$2 = ($10 + $2)
	$6 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [112])
	
.LOOP $label$4:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$6 }
	$3 = CALL $2($2)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [32]) = $4
	*($4 + [56]) = $7
	*($4 + [72]) = $5
	*($4 + [76]) = $10
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [32])
	*($4 + [60]) = ($1 + [64])
	*($4 + [64]) = ($1 + [80])
	*($4 + [68]) = ($1 + [96])
	*($4 + [80]) = ($1 + [128])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [144])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [168])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [200])
	*($4 + [108]) = ($1 + [208])
	*($4 + [112]) = ($1 + [224])
	*($4 + [120]) = ($1 + [240])
	*($4 + [116]) = ($1 + [232])
	CALL $86(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [300]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$7 }
	CALL $4($3)
	
.LABEL $label$7
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($4 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$9 }
	$3 = ($1 + [304])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$10 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($4 + [32]), $8)
	*($3) = $2
	
.LABEL $label$10
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$9
	*($4 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($9, ($4 + [40]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [308])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$12 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($4 + [32]), $8)
	*($1) = $2
	
.LABEL $label$12
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$11
	$global$0 = ($4 + [128])
}

void .FUNC $82 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$5 = ($1 + [40])
	*($4 + [16]) = (uint_64)*($5) >> (uint_64)(int_64)8)
	*($4 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$2 = *($2)
	*(($6 = ($1 + [32]))) = *($2)
	*($5) = *(($2 + [8]))
	$2 = *($1 + [100])
	$5 = ( *(($1 + [104])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [253])
	$7 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [100])
	$8 = *($1)
	$9 = (($4 + [16]) + [8])
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	$10 = *($1 + [112])
	$10 = ( *(($1 + [116])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$2 = ($10 + $2)
	$7 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [112])
	
.LOOP $label$4:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$6 }
	$3 = CALL $2($2)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [32]) = $4
	*($4 + [52]) = $6
	*($4 + [72]) = $5
	*($4 + [76]) = $10
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [56]) = ($1 + [48])
	*($4 + [60]) = ($1 + [64])
	*($4 + [64]) = ($1 + [80])
	*($4 + [68]) = ($1 + [96])
	*($4 + [80]) = ($1 + [128])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [144])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [168])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [200])
	*($4 + [108]) = ($1 + [208])
	*($4 + [112]) = ($1 + [224])
	*($4 + [120]) = ($1 + [240])
	*($4 + [116]) = ($1 + [232])
	CALL $86(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [300]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$7 }
	CALL $4($3)
	
.LABEL $label$7
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($4 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$9 }
	$3 = ($1 + [304])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$10 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($4 + [32]), $8)
	*($3) = $2
	
.LABEL $label$10
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$9
	*($4 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($9, ($4 + [40]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [308])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$12 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($4 + [32]), $8)
	*($1) = $2
	
.LABEL $label$12
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$11
	$global$0 = ($4 + [128])
}

void .FUNC $149 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($4 + [24]) = (uint_64)*(($1 + [112])) >> (uint_64)(int_64)8)
	$6 = *($1 + [8])
	$5 = *($2)
	if ( ((int_64)*($5 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14713])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($5)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14761])
	$7 = *($1)
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14783])
	
.LABEL $label$5
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [168]))) ){ goto $label$6 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$6
	$8 = ((int_64)*($1 + [160]) + (int_64)*($2))
	*($1 + [160]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [14676])
	$8 = *(($1 + [160]))
	
.LABEL $label$7
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [14695])
	
.LABEL $label$8
	*($1 + [176]) = ((int_64)*($1 + [176]) + (int_64)1)
	$5 = ($1 + [176])
	if ( ((int_64)$7 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$9 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$9
	$3 = $3
	$2 = ($3 + [-240])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-11])
	*($4 + [32]) = ($4 + [8])
	*($4 + [96]) = $5
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [16])
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [96])
	*($4 + [72]) = ($1 + [104])
	$3 = ($1 + [112])
	*($4 + [76]) = $3
	*($4 + [80]) = ($1 + [120])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [152])
	*($4 + [92]) = ($1 + [160])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [192])
	CALL $112(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $2, [229])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$10
	*($4 + [40]) = (uint_64)*($3) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$11 }
	$2 = ($1 + [256])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$12 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $7)
	*($2) = $1
	
.LABEL $label$12
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$11
	$global$0 = ($4 + [112])
}

int_32 .FUNC $81 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($0 + [168])
	$4 = *(($0 + [196]))
	$3 = *(($0 + [192]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [296]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [13846])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($2), *(($0 + [176])), (int_64)3607571210637934592, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $77($2, $5)
	if ( ((int_32)*($6 + [296]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [13846])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], [13306])
	
.LABEL $label$1
	return $6
}

void .FUNC $145 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$5 = ($1 + [112])
	*($4 + [24]) = (uint_64)*($5) >> (uint_64)(int_64)8)
	*(($1 + [224])) = *(*($2))
	$2 = *($2 + [4])
	*(($1 + [240])) = *(($2 + [8]))
	*(($1 + [232])) = *($2)
	$6 = *($1 + [8])
	$3 = $3
	$2 = ($3 + [-240])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-11])
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = ($1 + [16])
	*($4 + [40]) = $1
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [96])
	*($4 + [72]) = ($1 + [104])
	*($4 + [76]) = $5
	*($4 + [80]) = ($1 + [120])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [152])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [176])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [192])
	CALL $112(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $2, [229])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( (uint_64)($6) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$3
	*($4 + [40]) = (uint_64)*($5) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$2 = ($1 + [256])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $6)
	*($2) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	$global$0 = ($4 + [112])
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13814])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([80]))) = (int_64)0
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [16]) = [0]
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = [0]
	*($5 + [60]) = [1]
	*($5 + [64]) = $0
	CALL $330(($3 + [32]), $5)
	*($5 + [68]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $67(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [16])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($1 + [24]) = (*($1 + [24]) + [1])
	$4 = *($1)
	$5 = $2
	$2 = ($5 + [-48])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($5 + [-12])
	CALL $70($3, $1)
	CALL db_update_i64(*($1 + [44]), (int_64)0, $2, [36])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $146 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($4 + [24]) = (uint_64)*(($1 + [112])) >> (uint_64)(int_64)8)
	$5 = *($1 + [8])
	$6 = *($2)
	if ( ((int_64)*($6 + [8]) == (int_64)*(($1 + [240]))) ){ goto $label$3 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$3
	$7 = ((int_64)*($2) + (int_64)*($6))
	*(($2 = ($1 + [232]))) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14676])
	$7 = *($2)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14695])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-240])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-11])
	*($4 + [32]) = ($4 + [8])
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [16])
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [96])
	*($4 + [72]) = ($1 + [104])
	$2 = ($1 + [112])
	*($4 + [76]) = $2
	*($4 + [80]) = ($1 + [120])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [152])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [176])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [192])
	CALL $112(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $3, [229])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	*($4 + [40]) = (uint_64)*($2) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$8 }
	$3 = ($1 + [256])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $5)
	*($3) = $1
	
.LABEL $label$9
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$8
	$global$0 = ($4 + [112])
}

void .FUNC $141 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	$6 = ($global$0 - [224])
	$global$0 = $6
	CALL require_auth($1)
	CALL eosio_assert(*(($0 + [80])), [10803])
	$7 = ($0 + [208])
	$8 = CALL $102($7, (uint_64)*($4 + [8]) >> (uint_64)(int_64)8), [13376]
	CALL eosio_assert(*($8) + [184]), [10867])
	$9 = *($8 + [96])
	*(($6 + [216])) = [0]
	*($6 + [208]) = (int_64)0
	$10 = CALL $17([11334])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$7 }
	*($6 + [208]) = ($10 << [1])
	$11 = (($6 + [208]) | [1])
	if ( $10 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$12 = (($10 + [16]) & [-16])
	$11 = CALL $9($12)
	*($6 + [208]) = ($12 | [1])
	*($6 + [216]) = $11
	*($6 + [212]) = $10
	
.LABEL $label$6
	CALL memcpy($11, [11334], $10)
	
.LABEL $label$5
	$13 = ((int_64)$9 == (int_64)$2)
	$12 = [0]
	*(($11 + $10)) = [0]
	$9 = *(($8 + [96]))
	if ( ((int_64)$9 == (int_64)0) ){ goto $label$11 }
	$11 = *([0] + [13696])
	
.LOOP $label$13:
	*((($6 + [128]) + ($10 = $12))) = *(($11 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$9 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$10 == (int_32)[12]) )))))
	$12 = ($10 + [1])
	if ( ((uint_32)$10 > (uint_32)[11]) ){ goto $label$12 }
	$9 = ((int_64)$9 << (int_64)5)
	if ( ((int_64)$9 != (int_64)0) ){ goto $label$13 }
	
.LABEL $label$12
	*(($6 + [200])) = [0]
	*($6 + [192]) = (int_64)0
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$10 }
	*($6 + [192]) = ($12 << [1])
	$11 = (($6 + [192]) | [1])
	goto $label$9 
	
.LABEL $label$11
	*(($6 + [200])) = [0]
	*($6 + [192]) = (int_64)0
	*($6 + [192]) = [0]
	$10 = (($6 + [192]) | [1])
	$12 = $10
	goto $label$8 
	
.LABEL $label$10
	$14 = (($12 + [16]) & [-16])
	$11 = CALL $9($14)
	*($6 + [192]) = ($14 | [1])
	*($6 + [200]) = $11
	*($6 + [196]) = $12
	
.LABEL $label$9
	$14 = ($10 + [1])
	$10 = [0]
	
.LOOP $label$14:
	*(($11 + $10)) = *((($6 + [128]) + $10))
	$10 = ($10 + [1])
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$14 }
	$12 = ($11 + $12)
	$10 = (($6 + [192]) | [1])
	
.LABEL $label$8
	*($12) = [0]
	$11 = *($6 + [192])
	$14 = ($11 & [1])
	$10 = CALL $37(($6 + [208]), ( *($6 + [200]) ? $10 : $14 ), ( *($6 + [196]) ? uint_32($11 >> [1]) : $14 ))
	$11 = ($10 + [8])
	*(($12 = (($6 + [128]) + [8]))) = *($11)
	*($6 + [128]) = *($10)
	*($10) = (int_64)0
	*($11) = [0]
	CALL eosio_assert($13, ( *($12) ? (($6 + [128]) | [1]) : (*($6 + [128]) & [1]) ))
	if ( (*($6 + [128]) & [1]) ){ goto $label$16 }
	if ( (*($6 + [192]) & [1]) ){ goto $label$15 }
	goto $label$3 
	
.LABEL $label$16
	CALL $11(*($12))
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$15
	CALL $11(*(($6 + [200])))
	if ( (*($6 + [208]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL $26(($6 + [208]))
	
.LABEL $label$3
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $11(*($6 + [216]))
	
.LABEL $label$1
	$15 = *(($4 + [8]))
	CALL eosio_assert(((int_64)$15 == (int_64)*($8 + [8])), [10878])
	$9 = *($4)
	CALL eosio_assert(((int_64)$9 >= (int_64)*($8 + [32])), [10900])
	CALL eosio_assert(((int_64)$9 <= (int_64)*($8 + [48])), [10937])
	$16 = *($0)
	*(($6 + [160])) = [0]
	*($6 + [136]) = $1
	*($6 + [128]) = $16
	*($6 + [144]) = (int_64)-1
	*($6 + [152]) = (int_64)0
	$15 = *(CALL $142(($6 + [128]), (uint_64)$15 >> (uint_64)(int_64)8), [11038]))
	$11 = *($6 + [152])
	if ( ($11 == 0) ){ goto $label$17 }
	$14 = ($6 + [156])
	$10 = *($14)
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$19 }
	
.LOOP $label$20:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$21 }
	CALL $11($12)
	
.LABEL $label$21
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$20 }
	$10 = *(($6 + [152]))
	goto $label$18 
	
.LABEL $label$19
	$10 = $11
	
.LABEL $label$18
	*($14) = $11
	CALL $11($10)
	$9 = *($4)
	
.LABEL $label$17
	CALL eosio_assert(((int_64)$9 <= (int_64)$15), [11358])
	$9 = CALL current_time()
	$10 = *($8 + [192])
	$12 = (CASTING uint_32)(uint_64 ((uint_64)$9 / (uint_64)(int_64)1000000))
	*($6 + [208]) = $12
	$11 = *($8 + [80])
	$11 = ( $11 ? [100] : $11 )
	if ( ((uint_32)($10 + [60]) >= (uint_32)$12) ){ goto $label$23 }
	*($6 + [128]) = ($6 + [208])
	CALL $143($7, $8, ($6 + [128]))
	goto $label$22 
	
.LABEL $label$23
	CALL $144($7, $8)
	
.LABEL $label$22
	CALL eosio_assert(((uint_32)*(($8 + [196])) <= (uint_32)$11), [10977])
	if ( (int_64)(*($8 + [64]) == 0) ){ goto $label$24 }
	if ( ((uint_32)*($6 + [208]) <= (uint_32)(*(($8 + [224])) + [86400])) ){ goto $label$26 }
	*($6 + [132]) = $4
	*($6 + [128]) = ($6 + [208])
	CALL $145($7, $8, ($6 + [128]))
	goto $label$25 
	
.LABEL $label$26
	*($6 + [128]) = $4
	CALL $146($7, $8, ($6 + [128]))
	
.LABEL $label$25
	if ( ((int_64)*(($8 + [240])) == (int_64)*(($8 + [72]))) ){ goto $label$27 }
	CALL eosio_assert([0], [13637])
	
.LABEL $label$27
	CALL eosio_assert(((int_64)*(($8 + [232])) <= (int_64)*(($8 + [64]))), [11376])
	
.LABEL $label$24
	$10 = CALL $73(($0 + [88]), $2, [11038])
	*($6 + [128]) = *($10)
	$12 = CALL $27((($6 + [128]) + [8]), ($10 + [8]))
	*((($6 + [128]) + [53])) = *(($10 + [53]))
	*((($6 + [128]) + [48])) = *(($10 + [48]))
	*((($6 + [128]) + [40])) = *(($10 + [40]))
	*((($6 + [128]) + [32])) = *(($10 + [32]))
	*($6 + [152]) = *($10 + [24])
	$11 = ($0 + [128])
	$10 = CALL $127($11, $2, [11038])
	$9 = CALL current_time()
	if ( ((int_32)*($10 + [20]) != (int_32)(CASTING uint_32)(uint_64 ((uint_64)((int_64)((uint_64)$9 / (uint_64)(int_64)1000) + (int_64)-946684800000) / (uint_64)(int_64)500))) ){ goto $label$29 }
	CALL $147($11, $10)
	CALL eosio_assert(((uint_32)*($10 + [24]) <= (uint_32)*($6 + [176])), [11057])
	goto $label$28 
	
.LABEL $label$29
	CALL $148($11, $10)
	
.LABEL $label$28
	*($6 + [192]) = $4
	CALL $149($7, $8, ($6 + [192]))
	$10 = ($4 + [8])
	$15 = *($10)
	*((($6 + [112]) + [8])) = $15
	$9 = *($4)
	*((($6 + [48]) + [8])) = $15
	*($6 + [48]) = $9
	*($6 + [112]) = $9
	CALL $139($0, $1, ($6 + [48]))
	$16 = *($10)
	*((($6 + [96]) + [8])) = $16
	$9 = *($0)
	$15 = *($4)
	*((($6 + [32]) + [8])) = $16
	*($6 + [96]) = $15
	*($6 + [32]) = $15
	CALL $140($0, $9, ($6 + [32]), $9)
	$9 = *($10)
	$15 = *($0)
	$16 = *($4)
	*(($6 + [8])) = $1
	*(($6 + [16])) = $16
	*(($6 + [24])) = $9
	*((($6 + [64]) + [24])) = $9
	*($6 + [72]) = $1
	*($6 + [64]) = $15
	*($6) = $15
	*($6 + [80]) = $16
	CALL $134($0, $2, $6)
	CALL $101($0, (uint_64)*($10) >> (uint_64)(int_64)8))
	if ( ((*($12) & [1]) == 0) ){ goto $label$30 }
	CALL $11(*((($6 + [128]) + [16])))
	
.LABEL $label$30
	$global$0 = ($6 + [224])
	(unreachable)
}

void .FUNC $140 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	$5 = *($0)
	*($4) = $5
	$6 = *($2 + [8])
	*($4 + [8]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $151($4, $0)
	if ( ((int_32)*($0 + [16]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$4
	*($4 + [48]) = $2
	CALL $152($4, $0, ($4 + [48]))
	$7 = *($4 + [24])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)$5 == (int_64)CALL current_receiver()) ){ goto $label$5 }
	CALL eosio_assert([0], [14370])
	
.LABEL $label$5
	*(($0 = CALL $9([32])) + [16]) = $4
	*($0 + [8]) = *(($2 + [8]))
	*($0) = *($2)
	CALL memcpy(($4 + [48]), $0, [8])
	*($4 + [72]) = *($0 + [8])
	CALL memcpy((($4 + [48]) | [8]), ($4 + [72]), [8])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*(($4 + [8])), (int_64)3607749779137757184, $3, $1), ($4 + [48]), [16]
	*($0 + [20]) = $7)
	$2 = ($4 + [16])
	if ( (uint_64)($1 <= *($2)) ){ goto $label$6 }
	*($2) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$6
	*($4 + [72]) = $0
	$1 = (uint_64)*(($0 + [8])) >> (uint_64)(int_64)8
	*($4 + [48]) = $1)
	*($4 + [44]) = $7
	$8 = ($4 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($4 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $1
	*($2 + [16]) = $7
	*($4 + [72]) = [0]
	*($2) = $0
	*($8) = ($2 + [24])
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $153(($4 + [24]), ($4 + [72]), ($4 + [48]), ($4 + [44]))
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11($0)
	
.LABEL $label$7
	$7 = *($4 + [24])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($4 + [28])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $11($2)
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($4 + [24]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $7
	
.LABEL $label$10
	*($8) = $7
	CALL $11($0)
	
.LABEL $label$1
	$global$0 = ($4 + [80])
}

void .FUNC $143 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$5 = ($1 + [112])
	*($4 + [24]) = (uint_64)*($5) >> (uint_64)(int_64)8)
	*($1 + [192]) = *(*($2))
	*(($1 + [196])) = [1]
	$6 = *($1 + [8])
	$2 = $3
	$3 = ($2 + [-240])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-11])
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = ($1 + [16])
	*($4 + [40]) = $1
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [96])
	*($4 + [72]) = ($1 + [104])
	*($4 + [76]) = $5
	*($4 + [80]) = ($1 + [120])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [152])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [176])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [192])
	CALL $112(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $3, [229])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( (uint_64)($6) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$3
	*($4 + [40]) = (uint_64)*($5) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$3 = ($1 + [256])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	$global$0 = ($4 + [112])
}

int_32 .FUNC $142 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13846])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $151($0, $5)
	if ( ((int_32)*($6 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13846])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $278 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [384])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [372]) = $2
	*($3 + [368]) = $2
	*($3 + [376]) = ($2 + $4)
	*($3 + [360]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$5
	CALL memcpy(($3 + [360]), $2, [8])
	*($3 + [372]) = (*($3 + [372]) + [8])
	*($3 + [352]) = [0]
	*($3 + [344]) = (int_64)0
	CALL $257(($3 + [368]), ($3 + [344]))
	*($3 + [336]) = (int_64)0
	$2 = *($3 + [372])
	$4 = (($3 + [368]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$6
	CALL memcpy(($3 + [336]), $2, [8])
	$2 = (*($3 + [372]) + [8])
	*($3 + [372]) = $2
	*($3 + [328]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$7
	CALL memcpy(($3 + [328]), $2, [8])
	$2 = (*($3 + [372]) + [8])
	*($3 + [372]) = $2
	*($3 + [320]) = (int_64)0
	$4 = (($3 + [368]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$8
	CALL memcpy(($3 + [320]), $2, [8])
	$2 = (*($3 + [372]) + [8])
	*($3 + [372]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$9
	CALL memcpy(($3 + [316]), $2, [4])
	$2 = (*($3 + [372]) + [4])
	*($3 + [372]) = $2
	$4 = ($3 + [376])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$10
	CALL memcpy(($3 + [312]), $2, [4])
	$2 = (*($3 + [372]) + [4])
	*($3 + [372]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[3]) ){ goto $label$11 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$11
	CALL memcpy(($3 + [308]), $2, [4])
	$2 = (*($3 + [372]) + [4])
	*($3 + [372]) = $2
	$4 = (($3 + [368]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$12 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$12
	CALL memcpy(($3 + [56]), $2, [1])
	*($3 + [372]) = (*($3 + [372]) + [1])
	$5 = *($3 + [56])
	$2 = *($4)
	*((($3 + [40]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$6 = *($3 + [368])
	*($3 + [8]) = $6
	*($3 + [40]) = $6
	$2 = CALL $27(($3 + [24]), ($3 + [344]))
	$4 = CALL $56(($3 + [56]), $0, $1, ($3 + [8]))
	CALL $63($4, *($3 + [360]), $2, *($3 + [336]), *($3 + [328]), *($3 + [320]), *($3 + [316]), *($3 + [312]), *($3 + [308]), ((int_32)$5 != (int_32)[0]))
	if ( (*($2) & [1]) ){ goto $label$15 }
	CALL $58($4)
	if ( (*($3 + [344]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $11(*($2 + [8]))
	CALL $58($4)
	if ( ((*($3 + [344]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $11(*(($3 + [352])))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$13
	$global$0 = ($3 + [384])
}

void .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$4 = *($1)
	$5 = CALL current_time()
	*($1 + [24]) = [1]
	*($1 + [20]) = ((uint_64)((int_64)((uint_64)$5 / (uint_64)(int_64)1000) + (int_64)-946684800000) / (uint_64)(int_64)500)
	if ( ((int_64)$4 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$3
	$6 = $2
	$2 = ($6 + [-48])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($6 + [-12])
	CALL $70($3, $1)
	CALL db_update_i64(*($1 + [44]), (int_64)0, $2, [36])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($3 + [16])
}

int_32 .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [112])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13814])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([264])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [120]) = (int_64)0
	*($5 + [128]) = (int_64)0
	*($5 + [136]) = (int_64)0
	*($5 + [144]) = (int_64)0
	*($5 + [160]) = (int_64)0
	*($5 + [208]) = (int_64)0
	*($5 + [168]) = (int_64)0
	*($5 + [216]) = (int_64)0
	*($5 + [232]) = (int_64)0
	*($5 + [240]) = (int_64)0
	*($5 + [248]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [16])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [64])
	*($3 + [60]) = ($5 + [80])
	*($3 + [64]) = ($5 + [88])
	*($3 + [68]) = ($5 + [96])
	*($3 + [72]) = ($5 + [104])
	*($3 + [76]) = ($5 + [112])
	*($3 + [80]) = ($5 + [120])
	*($3 + [84]) = ($5 + [136])
	*($3 + [88]) = ($5 + [152])
	*($3 + [92]) = ($5 + [160])
	*($3 + [96]) = ($5 + [176])
	*($3 + [100]) = ($5 + [184])
	*($3 + [104]) = ($5 + [192])
	CALL $336(($3 + [40]), ($3 + [32]))
	*($5 + [256]) = [-1]
	*($5 + [252]) = $1
	*($3 + [32]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [40]) = $7)
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $100(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [112])
	return $5
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *(*($4) + [8])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = *($0)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$5 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [11485])
	
.LABEL $label$1
	*($1 + [8]) = $5
	*($1) = (int_64)0
	$8 = *($4)
	*($1 + [16]) = *($8)
	*(($1 + [24])) = *(($8 + [8]))
	$8 = *($4 + [4])
	*($1 + [32]) = *($8)
	*(($1 + [40])) = *(($8 + [8]))
	$8 = *($4 + [8])
	*($1 + [48]) = *($8)
	*(($1 + [56])) = *(($8 + [8]))
	$8 = *($4 + [12])
	*($1 + [64]) = *($8)
	*(($1 + [72])) = *(($8 + [8]))
	*($1 + [80]) = *(*($4 + [16]))
	*($1 + [88]) = *(*($4 + [20]))
	*($1 + [96]) = *(*($4 + [24]))
	*($1 + [104]) = *(*($4 + [28]))
	*($1 + [112]) = *(*($4 + [32]))
	$8 = *($4 + [36])
	*($1 + [120]) = *($8)
	*(($1 + [128])) = *(($8 + [8]))
	$12 = ($1 + [120])
	$13 = ($1 + [80])
	$14 = ($1 + [64])
	$15 = ($1 + [48])
	$16 = ($1 + [32])
	$17 = ($1 + [16])
	$5 = *(*($4) + [8])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$6 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$6 = $9
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$10 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [11485])
	
.LABEL $label$6
	*($1 + [136]) = (int_64)0
	*(($1 + [144])) = $5
	*($1 + [152]) = (int_64)0
	$18 = ($1 + [152])
	$5 = *(*($4) + [8])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$6 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$6 = $9
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$15 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [11485])
	
.LABEL $label$11
	*($1 + [160]) = (int_64)0
	*(($1 + [168])) = $5
	*($1 + [176]) = (int_64)0
	*($1 + [184]) = *(*($4 + [40]))
	$10 = $2
	$8 = ($10 + [-240])
	$global$0 = $8
	*($3 + [4]) = $8
	*($3) = $8
	*($3 + [8]) = ($10 + [-11])
	*($3 + [16]) = $3
	*($3 + [28]) = $17
	*($3 + [24]) = $1
	*($3 + [32]) = $16
	*($3 + [36]) = $15
	*($3 + [40]) = $14
	*($3 + [44]) = $13
	*($3 + [48]) = ($1 + [88])
	*($3 + [52]) = ($1 + [96])
	*($3 + [56]) = ($1 + [104])
	$10 = ($1 + [112])
	*($3 + [60]) = $10
	*($3 + [64]) = $12
	*($3 + [68]) = ($1 + [136])
	*($3 + [72]) = $18
	*($3 + [76]) = ($1 + [160])
	*($3 + [80]) = ($1 + [176])
	*($3 + [84]) = ($1 + [184])
	*($3 + [88]) = ($1 + [192])
	CALL $112(($3 + [24]), ($3 + [16]))
	$11 = ($1 + [8])
	$6 = (uint_64)*($11) >> (uint_64)(int_64)8
	*($1 + [252]) = CALL db_store_i64(*($7 + [8]), (int_64)-4157495357179166720, *(*($0 + [8])), $6), $8, [229])
	if ( (uint_64)($6 <= *($7 + [16])) ){ goto $label$16 }
	*(($7 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$16
	$6 = *(($7 + [8]))
	$9 = *(*(($0 + [8])))
	$5 = *($11)
	*($3 + [24]) = (uint_64)*($10) >> (uint_64)(int_64)8)
	*($1 + [256]) = CALL db_idx64_store($6, (int_64)-4157495357179166720, $9, (uint_64)$5 >> (uint_64)(int_64)8), ($3 + [24]))
	$global$0 = ($3 + [96])
}

int_32 .FUNC $239 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$3 = ($global$0 - [336])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [312]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [292]) = $2
	*($4 + [288]) = $2
	*($4 + [296]) = ($2 + $7)
	*($4 + [328]) = ($4 + [288])
	*($4 + [40]) = ($4 + [304])
	CALL $277(($4 + [40]), ($4 + [328]))
	$3 = *($4 + [296])
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$8 = *($4 + [288])
	*($4 + [8]) = $8
	*($4 + [24]) = $8
	$9 = CALL $56(($4 + [40]), $0, $1, ($4 + [8]))
	$0 = *($4 + [320])
	$1 = *($4 + [304])
	*($4 + [328]) = *($4 + [312])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $1), (int_64 ($4 + [328])), (int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $4($2)
	
.LABEL $label$6
	CALL $58($9)
	$global$0 = ($4 + [336])
	return [1]
}

int_32 .FUNC $238 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [288])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	$3 = ($2 + $7)
	*(($4 + [16])) = $3
	*($4 + [28]) = $2
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $56(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $4($2)
	
.LABEL $label$6
	CALL $58($8)
	$global$0 = ($4 + [288])
	return [1]
}

void .FUNC $94 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, float_64 $5)
{
	int_32 $6
	int_32 $7
	$6 = ($global$0 - [32])
	$global$0 = $6
	*($6 + [16]) = $5
	*($6 + [24]) = $3
	CALL require_auth(*($0))
	$7 = CALL $81($0, $1)
	if ( ((int_64)$3 != (int_64)6609776272782393344) ){ goto $label$2 }
	CALL eosio_assert([1], [9965])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert(((int_64)$3 == (int_64)-5065729345117487104), [9965])
	
.LABEL $label$1
	$3 = *($4)
	CALL eosio_assert((((int_64)*($4 + [8]) == (int_64)*(($7 + [24]))) & ((int_64)$3 > (int_64)-1)), [9997])
	CALL eosio_assert((((float_64)$5 >= (float_64)(float_64)0) & ((float_64)$5 <= (float_64)(float_64)0.05)), [10023])
	if ( ((int_64)$2 == (int_64)6457340685082165248) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)-4138661397305229312) ){ goto $label$3 }
	CALL eosio_assert(((int_64)((int_64)$3 * (int_64)5) <= (int_64)*($7 + [48])), [9430])
	$3 = *($0)
	*($6 + [4]) = $4
	*($6) = ($6 + [24])
	*($6 + [8]) = ($6 + [16])
	CALL $95(($0 + [168]), $7, $3, $6)
	$global$0 = ($6 + [32])
	return 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)((int_64)$3 * (int_64)10) <= (int_64)*($7 + [48])), [9501])
	$3 = *($0)
	*($6) = $4
	CALL $96(($0 + [168]), $7, $3, $6)
	$global$0 = ($6 + [32])
	return 
	
.LABEL $label$3
	CALL eosio_assert([0], [10049])
	$global$0 = ($6 + [32])
}

int_32 .FUNC $236 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	float_64 $11
	int_64 $12
	$3 = ($global$0 - [416])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [352]))) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [308]) = $2
	*($4 + [304]) = $2
	*($4 + [312]) = ($2 + $7)
	*($4 + [400]) = ($4 + [304])
	*($4 + [56]) = ($4 + [320])
	CALL $261(($4 + [56]), ($4 + [400]))
	$8 = *($4 + [312])
	*((($4 + [40]) + [8])) = $8
	*((($4 + [24]) + [8])) = $8
	$9 = *($4 + [304])
	*($4 + [24]) = $9
	*($4 + [40]) = $9
	$8 = CALL $56(($4 + [56]), $0, $1, ($4 + [24]))
	*(($10 = (($4 + [368]) + [8]))) = *($3)
	*($4 + [368]) = *($4 + [344])
	$0 = *($4 + [336])
	$1 = *($4 + [328])
	$9 = *($4 + [320])
	$11 = *($4 + [360])
	*((($4 + [384]) + [8])) = *($10)
	*($4 + [384]) = *($4 + [368])
	$3 = (($4 + [56]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$12 = *((($4 + [384]) + [8]))
	*((($4 + [400]) + [8])) = $12
	*((($4 + [8]) + [8])) = $12
	$12 = *($4 + [384])
	*($4 + [8]) = $12
	*($4 + [400]) = $12
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 ($4 + [8])), (int_32 $11), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $4($2)
	
.LABEL $label$6
	CALL $58($8)
	$global$0 = ($4 + [416])
	return [1]
}

void .FUNC $96 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($5 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($5 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$3 = *($3)
	*($1 + [168]) = *($3)
	*(($1 + [176])) = *(($3 + [8]))
	$3 = *($1 + [100])
	$6 = ( *(($1 + [104])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [253])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [100])
	$8 = ($1 + [168])
	$9 = *($1)
	$10 = (($5 + [16]) + [8])
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	$11 = *($1 + [112])
	$11 = ( *(($1 + [116])) ? uint_32($11 >> [1]) : ($11 & [1]) )
	$3 = ($11 + $3)
	$7 = (CASTING uint_64)(uint_32 $11)
	$11 = ($1 + [112])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $2($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [32]) = $5
	*($5 + [72]) = $6
	*($5 + [76]) = $11
	*($5 + [96]) = $8
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	*($5 + [52]) = ($1 + [32])
	*($5 + [56]) = ($1 + [48])
	*($5 + [60]) = ($1 + [64])
	*($5 + [64]) = ($1 + [80])
	*($5 + [68]) = ($1 + [96])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [136])
	*($5 + [88]) = ($1 + [144])
	*($5 + [92]) = ($1 + [160])
	*($5 + [100]) = ($1 + [184])
	*($5 + [104]) = ($1 + [200])
	*($5 + [108]) = ($1 + [208])
	*($5 + [112]) = ($1 + [224])
	*($5 + [120]) = ($1 + [240])
	*($5 + [116]) = ($1 + [232])
	CALL $86(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [300]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL $4($4)
	
.LABEL $label$7
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($5 + [16]), ($5 + [40]), [8]) == 0) ){ goto $label$9 }
	$4 = ($1 + [304])
	$3 = *($4)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$10 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($5 + [32]), $9)
	*($4) = $3
	
.LABEL $label$10
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$9
	*($5 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($10, ($5 + [40]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [308])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$12 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($5 + [32]), $9)
	*($1) = $3
	
.LABEL $label$12
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$11
	$global$0 = ($5 + [128])
}

int_32 .FUNC $234 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [368])
	$global$0 = $3
	*(($4 = $3) + [360]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [336])) = (int_64)0
	*(($4 + [352])) = [0]
	*($4 + [320]) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [300]) = $2
	*($4 + [296]) = $2
	*($4 + [304]) = ($2 + $5)
	*($4 + [24]) = ($4 + [296])
	*($4 + [48]) = ($4 + [312])
	CALL $270(($4 + [48]), ($4 + [24]))
	$3 = *($4 + [304])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [296])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $56(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [360])
	CALL $271(($4 + [24]), ($4 + [312]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $58($3)
	if ( ((*($4 + [344]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [352])))
	
.LABEL $label$5
	$global$0 = ($4 + [368])
	return [1]
}

int_32 .FUNC $233 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [464])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [360])) = (int_64)0
	*(($4 + [352])) = (int_64)0
	*(($4 + [344])) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [320]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$5
	$8 = ($2 + $7)
	$3 = ($4 + [336])
	CALL memcpy(($4 + [320]), $2, [8])
	$9 = ($2 + [8])
	if ( ((uint_32)($7 + [-8]) > (uint_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$6
	CALL memcpy($3, $9, [32])
	*((($4 + [40]) + [8])) = $8
	*($4 + [56]) = $2
	*($4 + [60]) = ($2 + [40])
	*($4 + [64]) = $8
	*($4 + [40]) = *($4 + [56])
	$8 = CALL $56(($4 + [72]), $0, $1, ($4 + [40]))
	*(($9 = (($4 + [368]) + [16]))) = *(($3 + [16]))
	*(($10 = (($4 + [368]) + [24]))) = *(($3 + [24]))
	*($4 + [368]) = *($3)
	*($4 + [376]) = *(($3 + [8]))
	$0 = *($4 + [320])
	*((($4 + [400]) + [24])) = *($10)
	*((($4 + [400]) + [16])) = *($9)
	*($4 + [408]) = *($4 + [376])
	*($4 + [400]) = *($4 + [368])
	$3 = (($4 + [72]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	$1 = *((($4 + [400]) + [24]))
	*((($4 + [432]) + [24])) = $1
	$11 = *((($4 + [400]) + [16]))
	*((($4 + [432]) + [16])) = $11
	*(($4 + [16])) = $11
	*(($4 + [24])) = $1
	$1 = *($4 + [408])
	*($4 + [440]) = $1
	$11 = *($4 + [400])
	*($4) = $11
	*($4 + [432]) = $11
	*($4 + [8]) = $1
	CALL void $3((int_32 $0), (int_64 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $4($2)
	
.LABEL $label$8
	CALL $58($8)
	$global$0 = ($4 + [464])
	return [1]
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($5 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($5 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	*($1 + [96]) = *(*($3))
	$3 = *($1 + [100])
	$6 = ( *(($1 + [104])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [253])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [100])
	$8 = ($1 + [96])
	$9 = *($1)
	$10 = (($5 + [16]) + [8])
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	$11 = *($1 + [112])
	$11 = ( *(($1 + [116])) ? uint_32($11 >> [1]) : ($11 & [1]) )
	$3 = ($11 + $3)
	$7 = (CASTING uint_64)(uint_32 $11)
	$11 = ($1 + [112])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $2($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [32]) = $5
	*($5 + [68]) = $8
	*($5 + [72]) = $6
	*($5 + [76]) = $11
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	*($5 + [52]) = ($1 + [32])
	*($5 + [56]) = ($1 + [48])
	*($5 + [60]) = ($1 + [64])
	*($5 + [64]) = ($1 + [80])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [136])
	*($5 + [88]) = ($1 + [144])
	*($5 + [92]) = ($1 + [160])
	*($5 + [96]) = ($1 + [168])
	*($5 + [100]) = ($1 + [184])
	*($5 + [104]) = ($1 + [200])
	*($5 + [108]) = ($1 + [208])
	*($5 + [112]) = ($1 + [224])
	*($5 + [120]) = ($1 + [240])
	*($5 + [116]) = ($1 + [232])
	CALL $86(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [300]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL $4($4)
	
.LABEL $label$7
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($5 + [16]), ($5 + [40]), [8]) == 0) ){ goto $label$9 }
	$4 = ($1 + [304])
	$3 = *($4)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$10 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($5 + [32]), $9)
	*($4) = $3
	
.LABEL $label$10
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$9
	*($5 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($10, ($5 + [40]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [308])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$12 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($5 + [32]), $9)
	*($1) = $3
	
.LABEL $label$12
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$11
	$global$0 = ($5 + [128])
}

void .FUNC $92 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [15]) = $3
	$5 = CALL $81($0, $1)
	CALL require_auth(*($5 + [128]))
	$3 = *($2)
	$6 = CALL $17([9075])
	if ( ((int_32)$6 != (int_32)( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )) ){ goto $label$2 }
	if ( (CALL $41($2, [0], [-1], [9075], $6) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9082])
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$1
	$1 = *(($5 + [128]))
	*($4 + [8]) = ($4 + [15])
	CALL $93(($0 + [168]), $5, $1, ($4 + [8]))
	$global$0 = ($4 + [16])
}

int_32 .FUNC $230 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [336])
	$global$0 = $3
	*(($4 = $3) + [328]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [320])) = [0]
	*($4 + [304]) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [324]) = [0]
	*($4 + [292]) = $2
	*($4 + [288]) = $2
	*($4 + [296]) = ($2 + $5)
	*($4 + [16]) = ($4 + [288])
	*($4 + [40]) = ($4 + [304])
	CALL $267(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [296])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [288])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $56(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [328])
	CALL $268(($4 + [16]), ($4 + [304]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $58($3)
	if ( ((*($4 + [312]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [320])))
	
.LABEL $label$5
	$global$0 = ($4 + [336])
	return [1]
}

void .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*(($4 = ($1 + [196]))) = (*($4) + [1])
	$4 = ($1 + [112])
	*($3 + [24]) = (uint_64)*($4) >> (uint_64)(int_64)8)
	$5 = *($1 + [8])
	$6 = $2
	$2 = ($6 + [-240])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($6 + [-11])
	*($3 + [32]) = ($3 + [8])
	*($3 + [44]) = ($1 + [16])
	*($3 + [40]) = $1
	*($3 + [48]) = ($1 + [32])
	*($3 + [52]) = ($1 + [48])
	*($3 + [56]) = ($1 + [64])
	*($3 + [60]) = ($1 + [80])
	*($3 + [64]) = ($1 + [88])
	*($3 + [68]) = ($1 + [96])
	*($3 + [72]) = ($1 + [104])
	*($3 + [76]) = $4
	*($3 + [80]) = ($1 + [120])
	*($3 + [84]) = ($1 + [136])
	*($3 + [88]) = ($1 + [152])
	*($3 + [92]) = ($1 + [160])
	*($3 + [96]) = ($1 + [176])
	*($3 + [100]) = ($1 + [184])
	*($3 + [104]) = ($1 + [192])
	CALL $112(($3 + [40]), ($3 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $2, [229])
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( (uint_64)($5) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$3
	*($3 + [40]) = (uint_64)*($4) >> (uint_64)(int_64)8)
	if ( (CALL $1(($3 + [24]), ($3 + [40]), [8]) == 0) ){ goto $label$4 }
	$2 = ($1 + [256])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($3 + [32]), $5)
	*($2) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [40]))
	
.LABEL $label$4
	$global$0 = ($3 + [112])
}

int_32 .FUNC $192 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $308(CALL $319($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $260 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $27($2, ($1 + [8]))
	$5 = *($1 + [24])
	$1 = *($0 + [4])
	$6 = *($1 + [4])
	$0 = (*($0) + int_32($6 >> [1]))
	$1 = *($1)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$6 = CALL $27(($2 + [16]), $4)
	CALL void $0((int_32 $3), (int_64 $6), (int_32 $5), (int_64 $1))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($6 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $261 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [32])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($0 + [40])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$4 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $4, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $262 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($0 + [16]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $5, [8])
	*($0 + [24]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	*($2 + [8]) = $0
	CALL $353(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $303 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [296]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [296]), $2, [8])
	*($3 + [288]) = (int_64)0
	*($3 + [40]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$6
	CALL memcpy(($3 + [40]), $6, [8])
	*($3 + [288]) = *($3 + [40])
	*((($3 + [8]) + [8])) = $5
	*($3 + [24]) = $2
	*($3 + [28]) = ($2 + [16])
	*($3 + [32]) = $5
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $56(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $219($2, *($3 + [296]), ($3 + [288]))
	CALL $58($2)
	$global$0 = ($3 + [304])
}

void .FUNC $302 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [296]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$5
	CALL memcpy(($3 + [296]), $2, [8])
	*($3 + [288]) = (int_64)0
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [32]), $5, [8])
	*($3 + [288]) = *($3 + [32])
	*($3 + [280]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$7
	CALL memcpy(($3 + [280]), $5, [8])
	*(($3 + [8])) = $4
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [24])
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $56(($3 + [32]), $0, $1, $3)
	CALL $217($2, *($3 + [296]), ($3 + [288]), *($3 + [280]))
	CALL $58($2)
	$global$0 = ($3 + [304])
}

void .FUNC $301 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [288])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [16])) = $4
	*($3 + [28]) = $2
	*($3 + [24]) = $2
	*($3 + [32]) = $4
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $56(($3 + [40]), $0, $1, ($3 + [8]))
	CALL require_auth(*($2))
	$4 = ($2 + [80])
	CALL eosio_assert(((int_32)*($4) ^ (int_32)[1]), [13022])
	*($4) = [1]
	CALL $58($2)
	$global$0 = ($3 + [288])
}

void .FUNC $263 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy(($2 + [8]), $5, [8])
	*($3) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	CALL $257(*($1), ($0 + [8]))
	$5 = ($0 + [24])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$1 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($4 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$1 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $1, [8])
	*(($0 + [32])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $307 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_32 $41
	int_32 $42
	int_32 $43
	int_32 $44
	int_32 $45
	int_32 $46
	int_32 $47
	int_32 $48
	int_32 $49
	int_32 $50
	int_32 $51
	int_32 $52
	int_32 $53
	$2 = ($global$0 - [272])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[66]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [8]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$6 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	$7 = ($2 + [76])
	$8 = ($2 + [80])
	$5 = ($2 + [88])
	$1 = ($2 + [84])
	$9 = ($2 + [92])
	$10 = ($2 + [96])
	$11 = ($2 + [100])
	$12 = ($2 + [104])
	$13 = ($2 + [108])
	$14 = ($2 + [112])
	$15 = ($2 + [116])
	$16 = ($2 + [120])
	$17 = ($2 + [124])
	$18 = ($2 + [128])
	$19 = ($2 + [132])
	$20 = ($2 + [136])
	$21 = ($2 + [140])
	$22 = ($2 + [144])
	$23 = ($2 + [148])
	$24 = ($2 + [152])
	$25 = ($2 + [156])
	$26 = ($2 + [164])
	$27 = ($2 + [160])
	$28 = ($2 + [168])
	$29 = ($2 + [172])
	$30 = ($2 + [176])
	$31 = ($2 + [180])
	$32 = ($2 + [184])
	$33 = ($2 + [188])
	$34 = ($2 + [192])
	$35 = ($2 + [196])
	$36 = ($2 + [200])
	$37 = ($2 + [204])
	$38 = ($2 + [208])
	$39 = ($2 + [212])
	$40 = ($2 + [216])
	$41 = ($2 + [220])
	$42 = ($2 + [224])
	$43 = ($2 + [228])
	$44 = ($2 + [232])
	$45 = ($2 + [240])
	$46 = ($2 + [236])
	$47 = ($2 + [244])
	$48 = ($2 + [248])
	$49 = ($2 + [252])
	$50 = ($2 + [256])
	$51 = ($2 + [260])
	$52 = ($2 + [264])
	$53 = ($2 + [268])
	
.LOOP $label$4:
	*($2) = $0
	*($2 + [8]) = $4
	*((($2 + [8]) + [8])) = ($4 + [2])
	*((($2 + [8]) + [12])) = ($4 + [3])
	*((($2 + [8]) + [16])) = ($4 + [4])
	*((($2 + [8]) + [20])) = ($4 + [5])
	*((($2 + [8]) + [24])) = ($4 + [6])
	*((($2 + [8]) + [28])) = ($4 + [7])
	*((($2 + [8]) + [32])) = ($4 + [8])
	*((($2 + [8]) + [36])) = ($4 + [9])
	*((($2 + [8]) + [40])) = ($4 + [10])
	*((($2 + [8]) + [44])) = ($4 + [11])
	*((($2 + [8]) + [48])) = ($4 + [12])
	*((($2 + [8]) + [52])) = ($4 + [13])
	*((($2 + [8]) + [56])) = ($4 + [14])
	*((($2 + [8]) + [60])) = ($4 + [15])
	*((($2 + [8]) + [64])) = ($4 + [16])
	*($7) = ($4 + [17])
	*($8) = ($4 + [18])
	*($2 + [12]) = ($4 + [1])
	*($5) = ($4 + [20])
	*($1) = ($4 + [19])
	*($9) = ($4 + [21])
	*($10) = ($4 + [22])
	*($11) = ($4 + [23])
	*($12) = ($4 + [24])
	*($13) = ($4 + [25])
	*($14) = ($4 + [26])
	*($15) = ($4 + [27])
	*($16) = ($4 + [28])
	*($17) = ($4 + [29])
	*($18) = ($4 + [30])
	*($19) = ($4 + [31])
	*($20) = ($4 + [32])
	*($21) = ($4 + [33])
	*($22) = ($4 + [34])
	*($23) = ($4 + [35])
	*($24) = ($4 + [36])
	*($25) = ($4 + [37])
	*($26) = ($4 + [39])
	*($27) = ($4 + [38])
	*($28) = ($4 + [40])
	*($29) = ($4 + [41])
	*($30) = ($4 + [42])
	*($31) = ($4 + [43])
	*($32) = ($4 + [44])
	*($33) = ($4 + [45])
	*($34) = ($4 + [46])
	*($35) = ($4 + [47])
	*($36) = ($4 + [48])
	*($37) = ($4 + [49])
	*($38) = ($4 + [50])
	*($39) = ($4 + [51])
	*($40) = ($4 + [52])
	*($41) = ($4 + [53])
	*($42) = ($4 + [54])
	*($43) = ($4 + [55])
	*($44) = ($4 + [56])
	*($45) = ($4 + [58])
	*($46) = ($4 + [57])
	*($47) = ($4 + [59])
	*($48) = ($4 + [60])
	*($49) = ($4 + [61])
	*($50) = ($4 + [62])
	*($51) = ($4 + [63])
	*($52) = ($4 + [64])
	*($53) = ($4 + [65])
	CALL $309(($2 + [8]), $2)
	$4 = ($4 + [66])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [272])
	return $0
}

void .FUNC $306 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [144])
	$global$0 = $4
	*($4 + [47]) = $1
	$1 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$1 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, ($4 + [47]), [1])
	*(($1 = ($0 + [4]))) = (*($1) + [1])
	*($4 + [32]) = (int_64)0
	*($4 + [40]) = [0]
	$5 = (*($2 + [4]) - *($2))
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = CALL $9($5)
	*(($4 + [40])) = ($6 + $5)
	*($4 + [32]) = $6
	*($4 + [36]) = $6
	$5 = *($2)
	$2 = (*(($2 + [4])) - $5)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $5, $2)
	*($4 + [36]) = (*($4 + [36]) + $2)
	
.LABEL $label$3
	*(($2 = ($4 + [24]))) = *(($3 + [24]))
	*(($5 = ($4 + [16]))) = *(($3 + [16]))
	*($4) = *($3)
	*($4 + [8]) = *(($3 + [8]))
	*(($3 = (($4 + [48]) + [24]))) = *($2)
	*(($2 = (($4 + [48]) + [16]))) = *($5)
	*($4 + [56]) = *($4 + [8])
	*($4 + [48]) = *($4)
	CALL $308($0, ($4 + [32]))
	*(($5 = (($4 + [80]) + [24]))) = *($3)
	*(($3 = (($4 + [80]) + [16]))) = *($2)
	*($4 + [88]) = *($4 + [56])
	*($4 + [80]) = *($4 + [48])
	*((($4 + [112]) + [24])) = *($5)
	*((($4 + [112]) + [16])) = *($3)
	*($4 + [120]) = *($4 + [88])
	*($4 + [112]) = *($4 + [80])
	$3 = *($1)
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, ($4 + [112]), [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
	$0 = *($4 + [32])
	if ( ($0 == 0) ){ goto $label$5 }
	*($4 + [36]) = $0
	CALL $11($0)
	
.LABEL $label$5
	$global$0 = ($4 + [144])
	return (unreachable)
	
.LABEL $label$2
	CALL $45(($4 + [32]))
}

void .FUNC $305 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	CALL $307($0, $1)
	*($3 + [8]) = [0]
	*($3) = (int_64)0
	$1 = (*($2 + [4]) - *($2))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$1 }
	$4 = CALL $9($1)
	*(($3 + [8])) = ($4 + $1)
	*($3) = $4
	*($3 + [4]) = $4
	$1 = *($2)
	$2 = (*(($2 + [4])) - $1)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($4, $1, $2)
	*($3 + [4]) = ($4 + $2)
	
.LABEL $label$2
	CALL $308($0, $3)
	$2 = *($3)
	if ( ($2 == 0) ){ goto $label$3 }
	*($3 + [4]) = $2
	CALL $11($2)
	
.LABEL $label$3
	$global$0 = ($3 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $45($3)
}

void .FUNC $304 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [224])
	$global$0 = $5
	*($5 + [47]) = $1
	$1 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$1 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, ($5 + [47]), [1])
	*(($6 = ($5 + [16]))) = *(($4 + [16]))
	*(($7 = ($5 + [24]))) = *(($4 + [24]))
	$8 = (*($1) + [1])
	*(($1 = ($0 + [4]))) = $8
	*($5) = *($4)
	*($5 + [8]) = *(($4 + [8]))
	*(($4 = (($5 + [48]) + [24]))) = *($7)
	*(($7 = (($5 + [48]) + [16]))) = *($6)
	*($5 + [124]) = $2
	*($5 + [56]) = *($5 + [8])
	*($5 + [48]) = *($5)
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $8) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$8 = *($1)
	
.LABEL $label$2
	CALL memcpy($8, ($5 + [124]), [4])
	*(($8 = (($5 + [80]) + [16]))) = *($7)
	*(($2 = (($5 + [80]) + [24]))) = *($4)
	$4 = (*($1) + [4])
	*($1) = $4
	*($5 + [80]) = *($5 + [48])
	*($5 + [88]) = *($5 + [56])
	*((($5 + [128]) + [24])) = *($2)
	*((($5 + [128]) + [16])) = *($8)
	*($5 + [136]) = *($5 + [88])
	*($5 + [128]) = *($5 + [80])
	$9 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$3:
	$8 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$2 = ((int_64)$9) != (int_64)0
	*($5 + [192]) = (($2) << [7]) | ($8 & [127]))
	if ( ((int_32)(*($6) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$4 = *($1)
	
.LABEL $label$4
	CALL memcpy($4, ($5 + [192]), [1])
	$4 = (*($1) + [1])
	*($1) = $4
	if ( $2 ){ goto $label$3 }
	*(($1 = (($5 + [160]) + [24]))) = *((($5 + [128]) + [24]))
	*(($8 = (($5 + [160]) + [16]))) = *((($5 + [128]) + [16]))
	*($5 + [168]) = *($5 + [136])
	*($5 + [160]) = *($5 + [128])
	*((($5 + [192]) + [24])) = *($1)
	*((($5 + [192]) + [16])) = *($8)
	*($5 + [200]) = *($5 + [168])
	*($5 + [192]) = *($5 + [160])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [13474])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($5 + [192]), [32])
	*(($4 = ($0 + [4]))) = (*($4) + [32])
	$global$0 = ($5 + [224])
}

void .FUNC $309 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [36])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$10 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$10
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [44])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$12
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$13
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [52])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$14
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [56])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$15 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$15
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [60])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$16 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$16
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [64])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$17 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$17
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [68])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$18 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$18
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [72])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$19 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$19
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [76])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$20 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$20
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [80])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$21 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$21
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [84])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$22 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$22
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [88])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$23 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$23
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [92])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$24 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$24
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [96])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$25 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$25
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [100])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$26 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$26
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [104])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$27 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$27
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [108])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$28 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$28
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [112])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$29 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$29
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [116])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$30 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$30
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [120])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$31 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$31
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [124])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$32 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$32
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [128])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$33 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$33
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [132])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$34 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$34
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [136])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$35 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$35
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [140])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$36 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$36
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [144])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$37 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$37
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [148])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$38 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$38
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [152])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$39 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$39
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [156])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$40 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$40
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [160])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$41 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$41
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [164])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$42 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$42
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [168])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$43 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$43
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [172])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$44 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$44
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [176])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$45 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$45
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [180])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$46 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$46
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [184])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$47 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$47
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [188])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$48 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$48
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [192])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$49 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$49
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [196])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$50 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$50
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [200])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$51 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$51
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [204])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$52 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$52
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [208])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$53 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$53
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [212])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$54 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$54
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [216])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$55 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$55
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [220])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$56 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$56
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [224])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$57 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$57
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [228])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$58 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$58
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [232])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$59 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$59
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [236])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$60 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$60
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [240])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$61 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$61
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [244])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$62 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$62
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [248])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$63 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$63
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [252])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$64 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$64
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [256])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$65 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$65
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [260])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$66 }
	CALL eosio_assert([0], [13474])
	$1 = *(($0 + [4]))
	
.LABEL $label$66
	CALL memcpy($1, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

int_32 .FUNC $308 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $282 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [384])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [372]) = $2
	*($3 + [368]) = $2
	*($3 + [376]) = ($2 + $4)
	*($3 + [360]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$5
	CALL memcpy(($3 + [360]), $2, [8])
	*($3 + [372]) = ($2 + [8])
	*($3 + [352]) = [0]
	*($3 + [344]) = (int_64)0
	CALL $257(($3 + [368]), ($3 + [344]))
	*($3 + [336]) = (int_64)0
	*($3 + [328]) = (int_64)0
	$2 = *($3 + [372])
	$4 = (($3 + [368]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$6
	CALL memcpy(($3 + [328]), $2, [8])
	$2 = (*($3 + [372]) + [8])
	*($3 + [372]) = $2
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$7
	CALL memcpy(($3 + [80]), $2, [8])
	*(($5 = (($3 + [328]) + [8]))) = *($3 + [80])
	*($3 + [372]) = (*($3 + [372]) + [8])
	$2 = *((($3 + [368]) + [8]))
	*((($3 + [64]) + [8])) = $2
	*((($3 + [16]) + [8])) = $2
	$6 = *($3 + [368])
	*($3 + [16]) = $6
	*($3 + [64]) = $6
	$4 = CALL $56(($3 + [80]), $0, $1, ($3 + [16]))
	$0 = *($3 + [360])
	$2 = CALL $27(($3 + [48]), ($3 + [344]))
	$1 = *($5)
	*((($3 + [32]) + [8])) = $1
	*(($3 + [8])) = $1
	$1 = *($3 + [328])
	*($3) = $1
	*($3 + [32]) = $1
	CALL $80($4, $0, $2, $3)
	if ( (*($2) & [1]) ){ goto $label$10 }
	CALL $58($4)
	if ( (*($3 + [344]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $11(*($2 + [8]))
	CALL $58($4)
	if ( ((*($3 + [344]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11(*(($3 + [352])))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [384])
}

void .FUNC $268 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $27($2, ($1 + [8]))
	$5 = *($1 + [20])
	$1 = *($0 + [4])
	$6 = *($1 + [4])
	$0 = (*($0) + int_32($6 >> [1]))
	$1 = *($1)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$6 = CALL $27(($2 + [16]), $4)
	CALL void $0((int_32 $3), (int_64 $6), (int_32 ((int_32)($5 & [255]) != (int_32)[0])), (int_32 $1))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($6 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$4 = *($1)
	$5 = CALL current_time()
	*($1 + [24]) = [1]
	*($1 + [20]) = ((uint_64)((int_64)((uint_64)$5 / (uint_64)(int_64)1000) + (int_64)-946684800000) / (uint_64)(int_64)500)
	if ( ((int_64)$4 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$3
	$6 = $2
	$2 = ($6 + [-48])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($6 + [-12])
	CALL $70($3, $1)
	CALL db_update_i64(*($1 + [44]), (int_64)0, $2, [36])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($3 + [16])
}

void .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($1 + [24]) = (*($1 + [24]) + [1])
	$4 = *($1)
	$5 = $2
	$2 = ($5 + [-48])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($5 + [-12])
	CALL $70($3, $1)
	CALL db_update_i64(*($1 + [44]), (int_64)0, $2, [36])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $286 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [360]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$5
	CALL memcpy(($3 + [360]), $2, [8])
	*($3 + [352]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$6
	CALL memcpy(($3 + [352]), $5, [8])
	*($3 + [344]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$7
	CALL memcpy(($3 + [344]), $5, [8])
	*($3 + [336]) = (int_64)0
	*($3 + [328]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$8
	CALL memcpy(($3 + [328]), $5, [8])
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$9
	$4 = ($2 + $4)
	CALL memcpy(($3 + [72]), $5, [8])
	*(($5 = (($3 + [328]) + [8]))) = *($3 + [72])
	$7 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$10
	CALL memcpy(($3 + [320]), $7, [8])
	*((($3 + [24]) + [8])) = $4
	*($3 + [56]) = $2
	*($3 + [60]) = ($2 + [48])
	*($3 + [64]) = $4
	*($3 + [24]) = *($3 + [56])
	$2 = CALL $56(($3 + [72]), $0, $1, ($3 + [24]))
	$0 = *($5)
	*((($3 + [40]) + [8])) = $0
	*((($3 + [8]) + [8])) = $0
	$0 = *($3 + [328])
	*($3 + [40]) = $0
	*($3 + [8]) = $0
	CALL $94($2, *($3 + [360]), *($3 + [352]), *($3 + [344]), ($3 + [8]), *($3 + [320]))
	CALL $58($2)
	$global$0 = ($3 + [368])
}

void .FUNC $287 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$2 = ($global$0 - [560])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [552]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$5
	CALL memcpy(($3 + [552]), $2, [8])
	*($3 + [544]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$6
	CALL memcpy(($3 + [544]), $5, [8])
	*($3 + [200]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$7
	CALL memcpy(($3 + [200]), $5, [8])
	$7 = *($3 + [200])
	*($3 + [200]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$8
	CALL memcpy(($3 + [200]), $5, [8])
	$8 = *($3 + [200])
	*($3 + [536]) = (int_64)0
	*($3 + [528]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$9
	CALL memcpy(($3 + [528]), $5, [8])
	*($3 + [200]) = (int_64)0
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$10
	CALL memcpy(($3 + [200]), $5, [8])
	*((($3 + [528]) + [8])) = *($3 + [200])
	*($3 + [520]) = (int_64)0
	*($3 + [512]) = (int_64)0
	$5 = ($2 + [48])
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$11 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$11
	CALL memcpy(($3 + [512]), $5, [8])
	*($3 + [200]) = (int_64)0
	$5 = ($2 + [56])
	if ( ((int_32)$6 != (int_32)[56]) ){ goto $label$12 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$12
	CALL memcpy(($3 + [200]), $5, [8])
	*((($3 + [512]) + [8])) = *($3 + [200])
	*($3 + [504]) = (int_64)0
	*($3 + [496]) = (int_64)0
	$5 = ($2 + [64])
	if ( ((int_32)$6 != (int_32)[64]) ){ goto $label$13 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$13
	CALL memcpy(($3 + [496]), $5, [8])
	*($3 + [200]) = (int_64)0
	$5 = ($2 + [72])
	if ( ((int_32)$6 != (int_32)[72]) ){ goto $label$14 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$14
	CALL memcpy(($3 + [200]), $5, [8])
	*((($3 + [496]) + [8])) = *($3 + [200])
	*($3 + [488]) = (int_64)0
	*($3 + [480]) = (int_64)0
	$5 = ($2 + [80])
	if ( ((int_32)$6 != (int_32)[80]) ){ goto $label$15 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$15
	CALL memcpy(($3 + [480]), $5, [8])
	*($3 + [200]) = (int_64)0
	$5 = ($2 + [88])
	if ( ((int_32)$6 != (int_32)[88]) ){ goto $label$16 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$16
	CALL memcpy(($3 + [200]), $5, [8])
	*((($3 + [480]) + [8])) = *($3 + [200])
	$6 = ($2 + [96])
	if ( ((int_32)($4 & [-4]) != (int_32)[96]) ){ goto $label$17 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$17
	CALL memcpy(($3 + [476]), $6, [4])
	*($3 + [464]) = (int_64)0
	$6 = ($2 + [100])
	if ( ((uint_32)($4 + [-100]) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$18
	CALL memcpy(($3 + [464]), $6, [8])
	*($3 + [456]) = (int_64)0
	*($3 + [448]) = (int_64)0
	$6 = ($2 + [108])
	if ( ((uint_32)($4 + [-108]) > (uint_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$19
	CALL memcpy(($3 + [448]), $6, [8])
	*($3 + [200]) = (int_64)0
	$5 = ($2 + [116])
	if ( ((uint_32)($4 + [-116]) > (uint_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$20
	$6 = ($2 + $4)
	CALL memcpy(($3 + [200]), $5, [8])
	*(($5 = (($3 + [448]) + [8]))) = *($3 + [200])
	$9 = ($2 + [124])
	if ( ((int_32)$4 != (int_32)[124]) ){ goto $label$21 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$21
	CALL memcpy(($3 + [200]), $9, [1])
	$4 = *($3 + [200])
	*((($3 + [88]) + [8])) = $6
	*($3 + [184]) = $2
	*($3 + [188]) = ($2 + [125])
	*($3 + [192]) = $6
	*($3 + [88]) = *($3 + [184])
	$2 = CALL $56(($3 + [200]), $0, $1, ($3 + [88]))
	*(($6 = (($3 + [168]) + [8]))) = *((($3 + [528]) + [8]))
	*(($9 = (($3 + [152]) + [8]))) = *((($3 + [512]) + [8]))
	*(($10 = (($3 + [136]) + [8]))) = *((($3 + [496]) + [8]))
	*(($11 = (($3 + [120]) + [8]))) = *((($3 + [480]) + [8]))
	*($3 + [168]) = *($3 + [528])
	*($3 + [152]) = *($3 + [512])
	*($3 + [136]) = *($3 + [496])
	*($3 + [120]) = *($3 + [480])
	$0 = *($3 + [544])
	$1 = *($3 + [552])
	*(($12 = (($3 + [104]) + [8]))) = *($5)
	*((($3 + [72]) + [8])) = *($6)
	*((($3 + [56]) + [8])) = *($9)
	*((($3 + [40]) + [8])) = *($10)
	*($3 + [104]) = *($3 + [448])
	*($3 + [72]) = *($3 + [168])
	*($3 + [56]) = *($3 + [152])
	*($3 + [40]) = *($3 + [136])
	$13 = *($3 + [464])
	$6 = *($3 + [476])
	*((($3 + [24]) + [8])) = *($11)
	*((($3 + [8]) + [8])) = *($12)
	*($3 + [24]) = *($3 + [120])
	*($3 + [8]) = *($3 + [104])
	CALL $97($2, $1, $0, $7, $8, ($3 + [72]), ($3 + [56]), ($3 + [40]), ($3 + [24]), $6, $13, ($3 + [8]), ((int_32)$4 != (int_32)[0]))
	CALL $58($2)
	$global$0 = ($3 + [560])
}

void .FUNC $284 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [352])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [340]) = $2
	*($3 + [336]) = $2
	*($3 + [344]) = ($2 + $4)
	*($3 + [328]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [340])
	
.LABEL $label$5
	CALL memcpy(($3 + [328]), $2, [8])
	*($3 + [340]) = ($2 + [8])
	*($3 + [320]) = [0]
	*($3 + [312]) = (int_64)0
	CALL $257(($3 + [336]), ($3 + [312]))
	$2 = *($3 + [340])
	$4 = (($3 + [336]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [340])
	
.LABEL $label$6
	CALL memcpy(($3 + [304]), $2, [8])
	*($3 + [340]) = (*($3 + [340]) + [8])
	$2 = *($4)
	*((($3 + [40]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [336])
	*($3 + [8]) = $5
	*($3 + [40]) = $5
	$2 = CALL $27(($3 + [24]), ($3 + [312]))
	$4 = CALL $56(($3 + [56]), $0, $1, ($3 + [8]))
	CALL $90($4, *($3 + [328]), $2, *($3 + [304]))
	if ( (*($2) & [1]) ){ goto $label$9 }
	CALL $58($4)
	if ( (*($3 + [312]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $11(*($2 + [8]))
	CALL $58($4)
	if ( ((*($3 + [312]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11(*(($3 + [320])))
	$global$0 = ($3 + [352])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [352])
}

void .FUNC $285 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [324]) = $2
	*($3 + [320]) = $2
	*($3 + [328]) = ($2 + $4)
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [324])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	*($3 + [324]) = ($2 + [8])
	*($3 + [304]) = [0]
	*($3 + [296]) = (int_64)0
	CALL $257(($3 + [320]), ($3 + [296]))
	$2 = *($3 + [324])
	$4 = (($3 + [320]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [324])
	
.LABEL $label$6
	CALL memcpy(($3 + [48]), $2, [1])
	*($3 + [324]) = (*($3 + [324]) + [1])
	$5 = *($3 + [48])
	$2 = *($4)
	*((($3 + [32]) + [8])) = $2
	*(($3 + [8])) = $2
	$6 = *($3 + [320])
	*($3) = $6
	*($3 + [32]) = $6
	$2 = CALL $27(($3 + [16]), ($3 + [296]))
	$4 = CALL $56(($3 + [48]), $0, $1, $3)
	CALL $92($4, *($3 + [312]), $2, ((int_32)$5 != (int_32)[0]))
	if ( (*($2) & [1]) ){ goto $label$9 }
	CALL $58($4)
	if ( (*($3 + [296]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $11(*($2 + [8]))
	CALL $58($4)
	if ( ((*($3 + [296]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11(*(($3 + [304])))
	$global$0 = ($3 + [336])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [336])
}

void .FUNC $123 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($1 + [240]) = *(*($2))
	*(($1 + [244])) = [1]
	*($4 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($4 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$2 = *($1 + [100])
	$5 = ( *(($1 + [104])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [253])
	$6 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [100])
	$7 = *($1)
	$8 = (($4 + [16]) + [8])
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$9 = *($1 + [112])
	$9 = ( *(($1 + [116])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$2 = ($9 + $2)
	$6 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [112])
	
.LOOP $label$4:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$6 }
	$3 = CALL $2($2)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [32]) = $4
	*($4 + [72]) = $5
	*($4 + [76]) = $9
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [32])
	*($4 + [56]) = ($1 + [48])
	*($4 + [60]) = ($1 + [64])
	*($4 + [64]) = ($1 + [80])
	*($4 + [68]) = ($1 + [96])
	*($4 + [80]) = ($1 + [128])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [144])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [168])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [200])
	*($4 + [108]) = ($1 + [208])
	*($4 + [112]) = ($1 + [224])
	*($4 + [120]) = ($1 + [240])
	*($4 + [116]) = ($1 + [232])
	CALL $86(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [300]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$7 }
	CALL $4($3)
	
.LABEL $label$7
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($4 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$9 }
	$3 = ($1 + [304])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$10 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($4 + [32]), $7)
	*($3) = $2
	
.LABEL $label$10
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$9
	*($4 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($8, ($4 + [40]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [308])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$12 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($4 + [32]), $7)
	*($1) = $2
	
.LABEL $label$12
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$11
	$global$0 = ($4 + [128])
}

void .FUNC $122 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$6 = ($global$0 - [256])
	$global$0 = $6
	CALL eosio_assert(((int_64)*($0) == (int_64)$3), [10773])
	$7 = *($5)
	if ( ($7 & [1]) ){ goto $label$3 }
	$8 = uint_32($7 >> [1])
	$9 = ($5 + [1])
	$7 = CALL $17([10797])
	if ( ($7 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$8 = *($5 + [4])
	$9 = *($5 + [8])
	$7 = CALL $17([10797])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ((int_32)$8 < (int_32)$7) ){ goto $label$4 }
	$10 = ($9 + $8)
	$11 = $9
	
.LOOP $label$5:
	$8 = (($8 - $7) + [1])
	if ( ($8 == 0) ){ goto $label$4 }
	$8 = CALL $18($11, [108], $8)
	if ( ($8 == 0) ){ goto $label$4 }
	if ( (CALL $1($8, [10797], $7) == 0) ){ goto $label$6 }
	$11 = ($8 + [1])
	$8 = ($10 - $11)
	if ( ((int_32)$8 >= (int_32)$7) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$4 }
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$1 }
	
.LABEL $label$4
	CALL eosio_assert(*(($0 + [80])), [10803])
	CALL $119(($6 + [184]), $5)
	CALL eosio_assert(((int_64)*($6 + [184]) != (int_64)0), [10821])
	$7 = CALL $73(($0 + [88]), *($6 + [192]), [9050])
	*($6 + [120]) = *($7)
	$5 = CALL $27((($6 + [120]) + [8]), ($7 + [8]))
	*((($6 + [120]) + [53])) = *(($7 + [53]))
	*((($6 + [120]) + [48])) = *(($7 + [48]))
	*((($6 + [120]) + [40])) = *(($7 + [40]))
	*((($6 + [120]) + [32])) = *(($7 + [32]))
	*($6 + [144]) = *($7 + [24])
	CALL eosio_assert(*($6 + [180]), [10842])
	$7 = CALL $81($0, $1)
	CALL eosio_assert(*($7 + [232]), [10867])
	CALL eosio_assert(((int_64)*($4 + [8]) == (int_64)*(($7 + [24]))), [10878])
	CALL eosio_assert(((int_64)*($4) >= (int_64)*($7 + [48])), [10900])
	CALL eosio_assert(((int_64)*($4) <= (int_64)*($7 + [64])), [10937])
	$3 = CALL current_time()
	$11 = *($7 + [240])
	$10 = (CASTING uint_32)(uint_64 ((uint_64)$3 / (uint_64)(int_64)1000000))
	*($6 + [116]) = $10
	$8 = ($0 + [168])
	$9 = *($7 + [96])
	$9 = ( $9 ? [100] : $9 )
	if ( ((uint_32)($11 + [60]) >= (uint_32)$10) ){ goto $label$8 }
	*($6 + [72]) = ($6 + [116])
	CALL $123($8, $7, ($6 + [72]))
	goto $label$7 
	
.LABEL $label$8
	CALL $124($8, $7)
	
.LABEL $label$7
	CALL eosio_assert(((uint_32)*(($7 + [244])) <= (uint_32)$9), [10977])
	if ( (int_64)(*($7 + [80]) == 0) ){ goto $label$9 }
	if ( ((uint_32)*($6 + [116]) <= (uint_32)(*(($7 + [248])) + [86400])) ){ goto $label$11 }
	*($6 + [76]) = $4
	*($6 + [72]) = ($6 + [116])
	CALL $125($8, $7, ($6 + [72]))
	goto $label$10 
	
.LABEL $label$11
	*($6 + [72]) = $4
	CALL $126($8, $7, ($6 + [72]))
	
.LABEL $label$10
	if ( ((int_64)*(($7 + [264])) == (int_64)*(($7 + [88]))) ){ goto $label$12 }
	CALL eosio_assert([0], [13637])
	
.LABEL $label$12
	CALL eosio_assert(((int_64)*(($7 + [256])) <= (int_64)*(($7 + [80]))), [11012])
	
.LABEL $label$9
	$10 = ($0 + [128])
	$11 = CALL $127($10, *(($6 + [192])), [11038])
	$3 = CALL current_time()
	if ( ((int_32)*($11 + [20]) != (int_32)(CASTING uint_32)(uint_64 ((uint_64)((int_64)((uint_64)$3 / (uint_64)(int_64)1000) + (int_64)-946684800000) / (uint_64)(int_64)500))) ){ goto $label$14 }
	CALL $128($10, $11)
	CALL eosio_assert(((uint_32)*($11 + [24]) <= (uint_32)*($6 + [168])), [11057])
	goto $label$13 
	
.LABEL $label$14
	CALL $129($10, $11)
	
.LABEL $label$13
	*(($6 + [104])) = [0]
	*($6 + [88]) = (int_64)-1
	*($6 + [96]) = (int_64)0
	$3 = *($0)
	*($6 + [72]) = $3
	$12 = *((($6 + [184]) + [8]))
	*($6 + [80]) = $12
	$11 = CALL db_find_i64($3, $12, (int_64)4849507751108702208, (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8)
	if ( ((int_32)$11) < (int_32)[0]) ){ goto $label$16 }
	$11 = CALL $130(($6 + [72]), $11)
	if ( ((int_32)*($11 + [16]) == (int_32)($6 + [72])) ){ goto $label$17 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$17
	*($6 + [224]) = $4
	CALL $131(($6 + [72]), $11, ($6 + [224]))
	goto $label$15 
	
.LABEL $label$16
	$12 = *($0)
	if ( ((int_64)$3 == (int_64)CALL current_receiver()) ){ goto $label$18 }
	CALL eosio_assert([0], [14370])
	
.LABEL $label$18
	*(($11 = CALL $9([32])) + [16]) = ($6 + [72])
	*($11 + [8]) = *(($4 + [8]))
	*($11) = *($4)
	CALL memcpy(($6 + [224]), $11, [8])
	*($6 + [248]) = *($11 + [8])
	CALL memcpy((($6 + [224]) | [8]), ($6 + [248]), [8])
	$3 = (uint_64)*($11 + [8]) >> (uint_64)(int_64)8
	$9 = CALL db_store_i64(*((($6 + [72]) + [8])), (int_64)4849507751108702208, $12, $3), ($6 + [224]), [16]
	*($11 + [20]) = $9)
	$10 = (($6 + [72]) + [16])
	if ( (uint_64)($3 <= *($10)) ){ goto $label$19 }
	*($10) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$19
	*($6 + [248]) = $11
	$3 = (uint_64)*(($11 + [8])) >> (uint_64)(int_64)8
	*($6 + [224]) = $3)
	*($6 + [220]) = $9
	$13 = ($6 + [100])
	$10 = *($13)
	if ( ((uint_32)$10 >= (uint_32)*((($6 + [72]) + [32]))) ){ goto $label$21 }
	*($10 + [8]) = $3
	*($10 + [16]) = $9
	*($6 + [248]) = [0]
	*($10) = $11
	*($13) = ($10 + [24])
	$11 = *($6 + [248])
	*($6 + [248]) = [0]
	if ( $11 ){ goto $label$20 }
	goto $label$15 
	
.LABEL $label$21
	CALL $132(($6 + [96]), ($6 + [248]), ($6 + [224]), ($6 + [220]))
	$11 = *($6 + [248])
	*($6 + [248]) = [0]
	if ( ($11 == 0) ){ goto $label$15 }
	
.LABEL $label$20
	CALL $11($11)
	
.LABEL $label$15
	*($6 + [224]) = $4
	CALL $133($8, $7, ($6 + [224]))
	CALL eosio_assert(((int_64)*($7 + [16]) <= (int_64)*($7 + [32])), [11092])
	$3 = *(($4 + [8]))
	$12 = *($4)
	*((($6 + [8]) + [8])) = $2
	*(($6 + [24])) = $12
	*((($6 + [8]) + [24])) = $3
	*((($6 + [40]) + [24])) = $3
	*($6 + [40]) = $1
	*($6 + [48]) = $2
	*($6 + [8]) = $1
	*($6 + [56]) = $12
	CALL $134($0, *((($6 + [184]) + [8])), ($6 + [8]))
	$0 = *($6 + [96])
	if ( ($0 == 0) ){ goto $label$22 }
	$4 = ($6 + [100])
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$24 }
	
.LOOP $label$25:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$26 }
	CALL $11($8)
	
.LABEL $label$26
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$25 }
	$7 = *(($6 + [96]))
	goto $label$23 
	
.LABEL $label$24
	$7 = $0
	
.LABEL $label$23
	*($4) = $0
	CALL $11($7)
	
.LABEL $label$22
	if ( ((*($5) & [1]) == 0) ){ goto $label$27 }
	CALL $11(*(($6 + [136])))
	
.LABEL $label$27
	if ( ((*($6 + [200]) & [1]) == 0) ){ goto $label$1 }
	CALL $11(*(($6 + [208])))
	
.LABEL $label$1
	$global$0 = ($6 + [256])
}

void .FUNC $288 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [384])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [372]) = $2
	*($3 + [368]) = $2
	*($3 + [376]) = ($2 + $4)
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [372]) = ($2 + [8])
	$5 = *($3 + [88])
	*($3 + [360]) = [0]
	*($3 + [352]) = (int_64)0
	CALL $257(($3 + [368]), ($3 + [352]))
	*($3 + [344]) = (int_64)0
	*($3 + [336]) = (int_64)0
	$2 = *($3 + [372])
	$4 = (($3 + [368]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$6
	CALL memcpy(($3 + [336]), $2, [8])
	$2 = (*($3 + [372]) + [8])
	*($3 + [372]) = $2
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [372])
	
.LABEL $label$7
	CALL memcpy(($3 + [88]), $2, [8])
	*(($6 = (($3 + [336]) + [8]))) = *($3 + [88])
	*($3 + [372]) = (*($3 + [372]) + [8])
	$2 = *((($3 + [368]) + [8]))
	*((($3 + [72]) + [8])) = $2
	*((($3 + [24]) + [8])) = $2
	$7 = *($3 + [368])
	*($3 + [24]) = $7
	*($3 + [72]) = $7
	$4 = CALL $56(($3 + [88]), $0, $1, ($3 + [24]))
	$2 = CALL $27(($3 + [56]), ($3 + [352]))
	$0 = *($6)
	*((($3 + [40]) + [8])) = $0
	*((($3 + [8]) + [8])) = $0
	$0 = *($3 + [336])
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	CALL $107($4, $5, $2, ($3 + [8]))
	if ( (*($2) & [1]) ){ goto $label$10 }
	CALL $58($4)
	if ( (*($3 + [352]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $11(*($2 + [8]))
	CALL $58($4)
	if ( ((*($3 + [352]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11(*(($3 + [360])))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [384])
}

void .FUNC $289 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [324]) = $2
	*($3 + [320]) = $2
	*($3 + [328]) = ($2 + $4)
	*($3 + [48]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [324])
	
.LABEL $label$5
	CALL memcpy(($3 + [48]), $2, [8])
	*($3 + [324]) = ($2 + [8])
	$5 = *($3 + [48])
	*($3 + [312]) = [0]
	*($3 + [304]) = (int_64)0
	CALL $257(($3 + [320]), ($3 + [304]))
	$2 = *($3 + [324])
	$4 = (($3 + [320]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [324])
	
.LABEL $label$6
	CALL memcpy(($3 + [296]), $2, [8])
	*($3 + [324]) = (*($3 + [324]) + [8])
	$2 = *($4)
	*((($3 + [32]) + [8])) = $2
	*(($3 + [8])) = $2
	$6 = *($3 + [320])
	*($3) = $6
	*($3 + [32]) = $6
	$2 = CALL $27(($3 + [16]), ($3 + [304]))
	$4 = CALL $56(($3 + [48]), $0, $1, $3)
	CALL $113($4, $5, $2, *($3 + [296]))
	if ( (*($2) & [1]) ){ goto $label$9 }
	CALL $58($4)
	if ( (*($3 + [304]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $11(*($2 + [8]))
	CALL $58($4)
	if ( ((*($3 + [304]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11(*(($3 + [312])))
	$global$0 = ($3 + [336])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [336])
}

int_32 .FUNC $127 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13846])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6154885545578430464, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $68($0, $5)
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13846])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

int_32 .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13814])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([160])) + [56]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80 align=4]) = (int_64)0
	*($5 + [88]) = [0]
	*($5 + [136]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [96])
	*($3 + [60]) = ($5 + [128])
	CALL $322(($3 + [40]), ($3 + [32]))
	*($5 + [140]) = $1
	*($5 + [144 align=4]) = (int_64)-1
	*($5 + [152]) = [-1]
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $182(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*(($1 + [80])) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [88])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $125 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*(($1 + [248])) = *(*($2))
	*($4 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($4 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$2 = *($2 + [4])
	*(($1 + [264])) = *(($2 + [8]))
	*(($1 + [256])) = *($2)
	$2 = *($1 + [100])
	$5 = ( *(($1 + [104])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [253])
	$6 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [100])
	$7 = *($1)
	$8 = (($4 + [16]) + [8])
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$9 = *($1 + [112])
	$9 = ( *(($1 + [116])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$2 = ($9 + $2)
	$6 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [112])
	
.LOOP $label$4:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$6 }
	$3 = CALL $2($2)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [32]) = $4
	*($4 + [72]) = $5
	*($4 + [76]) = $9
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [32])
	*($4 + [56]) = ($1 + [48])
	*($4 + [60]) = ($1 + [64])
	*($4 + [64]) = ($1 + [80])
	*($4 + [68]) = ($1 + [96])
	*($4 + [80]) = ($1 + [128])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [144])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [168])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [200])
	*($4 + [108]) = ($1 + [208])
	*($4 + [112]) = ($1 + [224])
	*($4 + [120]) = ($1 + [240])
	*($4 + [116]) = ($1 + [232])
	CALL $86(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [300]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$7 }
	CALL $4($3)
	
.LABEL $label$7
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($4 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$9 }
	$3 = ($1 + [304])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$10 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($4 + [32]), $7)
	*($3) = $2
	
.LABEL $label$10
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$9
	*($4 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($8, ($4 + [40]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [308])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$12 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($4 + [32]), $7)
	*($1) = $2
	
.LABEL $label$12
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$11
	$global$0 = ($4 + [128])
}

void .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*(($4 = ($1 + [244]))) = (*($4) + [1])
	*($3 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($3 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$4 = *($1 + [100])
	$5 = ( *(($1 + [104])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($5 + [253])
	$6 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [100])
	$7 = *($1)
	$8 = (($3 + [16]) + [8])
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$9 = *($1 + [112])
	$9 = ( *(($1 + [116])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$4 = ($9 + $4)
	$6 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [112])
	
.LOOP $label$4:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	if ( ($4 <= [513]) ){ goto $label$6 }
	$2 = CALL $2($4)
	goto $label$5 
	
.LABEL $label$6
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$5
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	*($3 + [32]) = $3
	*($3 + [72]) = $5
	*($3 + [76]) = $9
	*($3 + [40]) = $1
	*($3 + [44]) = ($1 + [8])
	*($3 + [48]) = ($1 + [16])
	*($3 + [52]) = ($1 + [32])
	*($3 + [56]) = ($1 + [48])
	*($3 + [60]) = ($1 + [64])
	*($3 + [64]) = ($1 + [80])
	*($3 + [68]) = ($1 + [96])
	*($3 + [80]) = ($1 + [128])
	*($3 + [84]) = ($1 + [136])
	*($3 + [88]) = ($1 + [144])
	*($3 + [92]) = ($1 + [160])
	*($3 + [96]) = ($1 + [168])
	*($3 + [100]) = ($1 + [184])
	*($3 + [104]) = ($1 + [200])
	*($3 + [108]) = ($1 + [208])
	*($3 + [112]) = ($1 + [224])
	*($3 + [120]) = ($1 + [240])
	*($3 + [116]) = ($1 + [232])
	CALL $86(($3 + [40]), ($3 + [32]))
	CALL db_update_i64(*($1 + [300]), (int_64)0, $2, $4)
	if ( ($4 <= [513]) ){ goto $label$7 }
	CALL $4($2)
	
.LABEL $label$7
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($3 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($3 + [16]), ($3 + [40]), [8]) == 0) ){ goto $label$9 }
	$2 = ($1 + [304])
	$4 = *($2)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$10 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($3 + [32]), $7)
	*($2) = $4
	
.LABEL $label$10
	CALL db_idx64_update($4, (int_64)0, ($3 + [40]))
	
.LABEL $label$9
	*($3 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($8, ($3 + [40]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [308])
	$4 = *($1)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$12 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($3 + [32]), $7)
	*($1) = $4
	
.LABEL $label$12
	CALL db_idx64_update($4, (int_64)0, ($3 + [40]))
	
.LABEL $label$11
	$global$0 = ($3 + [128])
}

void .FUNC $182 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $45($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*(($1 + [80])) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [88])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $11($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $185 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)4733526061789216770, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [136]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [13846])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $183($7, CALL $fimport$27(*($7), *($7 + [8]), (int_64)4733526061789216768, $6))
	if ( ((int_32)*($4 + [136]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$2
	*(($4 + [152])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $184 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [140]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [14932])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)4733526061789216768)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [14878])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [14878])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $183(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $187 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [56]) = (int_64)0
	*((($3 + [16]) + [24])) = *(($2 + [24]))
	*((($3 + [16]) + [16])) = *(($2 + [16]))
	*($3 + [24]) = *(($2 + [8]))
	*($3 + [16]) = *($2)
	$4 = *($1)
	$5 = CALL db_idx256_lowerbound(*($4), *($4 + [8]), (int_64)4733526061789216769, ($3 + [16]), [2], ($3 + [56]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = *($3 + [56])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	
.LOOP $label$7:
	$4 = ($9 + [-24])
	$10 = *($4)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$6 }
	$9 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	if ( ((int_32)*($10 + [136]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [13846])
	*(($10 + [148])) = $5
	if ( $10 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$10 = CALL $183($7, CALL $fimport$27(*($7), *($7 + [8]), (int_64)4733526061789216768, $6))
	if ( ((int_32)*($10 + [136]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$4
	*(($10 + [148])) = $5
	if ( ($10 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($10 + [96])
	$6 = (int_64)0
	$4 = [16]
	$8 = ($3 + [16])
	$9 = [0]
	$11 = (int_64)0
	
.LOOP $label$9:
	$7 = ($5 + $9)
	if ( ($4 <= [2]) ){ goto $label$10 }
	$6 = ((int_64)$6 | (int_64)*($7))
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)(uint_64)$6 >> (uint_64)(int_64)56))
	$4 = ($4 + [-1])
	$6 = ((int_64)$6 << (int_64)8)
	$9 = ($9 + [1])
	if ( ((int_32)$9 != (int_32)[32]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$11 }
	CALL eosio_assert([0], [14110])
	
.LABEL $label$11
	*($8 + [8]) = $11
	*($8) = ((int_64)$6 | (int_64)*($7))
	$4 = [16]
	$8 = ($8 + [16])
	$6 = (int_64)0
	$11 = (int_64)0
	$9 = ($9 + [1])
	if ( ((int_32)$9 != (int_32)[32]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$4 == (int_32)[16]) ){ goto $label$12 }
	if ( ($4 <= [2]) ){ goto $label$13 }
	CALL __ashlti3($3, $6, $11, (($4 << [3]) + [-8]))
	$11 = *(($3 + [8]))
	$6 = *($3)
	
.LABEL $label$13
	*($8) = $6
	*($8 + [8]) = $11
	
.LABEL $label$12
	if ( ((int_64)(((int_64)((int_64)*($2) ^ (int_64)*($3 + [16])) | (int_64)((int_64)*(($2 + [8])) ^ (int_64)*($3 + [24]))) == 0) == 0) ){ goto $label$2 }
	$4 = ( $10 ? [0] : (int_64)(((int_64)((int_64)*($2 + [16]) ^ (int_64)*($3 + [32])) | (int_64)((int_64)*(($2 + [24])) ^ (int_64)*((($3 + [16]) + [24])))) == 0) )
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [64])
}

int_32 .FUNC $186 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	*($1 + [8]) = (int_64)0
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$3 = *(($2 + [152]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$3 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)4733526061789216770, $1, *($2))
	*((*(($0 + [4])) + [152])) = $3
	
.LABEL $label$3
	$4 = CALL db_idx64_previous($3, ($1 + [8]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [14062])
	goto $label$1 
	
.LABEL $label$2
	$2 = *(*($0))
	$2 = CALL db_idx64_end(*($2), *($2 + [8]), (int_64)4733526061789216770)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$4 }
	CALL eosio_assert([0], [14008])
	
.LABEL $label$4
	$4 = CALL db_idx64_previous($2, ($1 + [8]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [14008])
	
.LABEL $label$1
	$5 = *($1 + [8])
	$3 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$8:
	$2 = ($3 + [-24])
	$8 = *($2)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$7 }
	$3 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	if ( ((int_32)*($8 + [136]) == (int_32)$6) ){ goto $label$5 }
	CALL eosio_assert([0], [13846])
	goto $label$5 
	
.LABEL $label$6
	$8 = [0]
	$2 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)4733526061789216768, $5)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $183($6, $2)
	if ( ((int_32)*($8 + [136]) == (int_32)$6) ){ goto $label$5 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$5
	*(($0 + [4])) = $8
	*(($8 + [152])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $354 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [96])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$5 = *($0)
	$3 = ($5 + [104])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [112])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [120])) = *($2 + [8])
	*($0) = (*($0) + [8])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$4 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [7]), $4, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	*(($5 + [128])) = ((int_32)*($2 + [7]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $355 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $276(*($1), (*($0) + [60]))
	$0 = *($0)
	$3 = ($0 + [72])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	CALL $279(*($1), ($0 + [76]))
	CALL $276(*($1), ($0 + [88]))
	*($2 + [8]) = $0
	CALL $356(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $356 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [100])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$5 = *($0)
	$3 = ($5 + [104])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [112])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [120])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $257(*($1), ($5 + [128]))
	$global$0 = ($2 + [16])
}

void .FUNC $357 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [72])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0)
	CALL $279(*($1), ($3 + [76]))
	CALL $276(*($1), ($3 + [88]))
	$2 = ($3 + [100])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$0 = ($3 + [112])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [32])
	*(($1 = ($1 + [4]))) = (*($1) + [32])
}

void .FUNC $350 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [40])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*(($3 + [48])) = *($2 + [8])
	*($6) = (*($6) + [8])
	$5 = *($0)
	$0 = ($5 + [56])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$4 = *(($6 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($6 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [64])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$0 = ($5 + [72])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$4 = *(($6 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($6 + [8])) - $0) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$0 = *($4)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [80])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$0 = ($5 + [88])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$4 = *(($6 + [4]))
	
.LABEL $label$7
	CALL memcpy($0, $4, [4])
	*(($6 = ($6 + [4]))) = (*($6) + [4])
	*($2 + [8]) = $5
	CALL $351(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $351 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $257(*($1), (*($0) + [92]))
	$0 = *($0)
	CALL $257(*($1), ($0 + [104]))
	$3 = ($0 + [120])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [128])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	*($2 + [8]) = $0
	CALL $352(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $352 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [136])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*(($3 + [144])) = *($2 + [8])
	*($6) = (*($6) + [8])
	$6 = *($0)
	$0 = ($6 + [152])
	$4 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$4 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	*(($5 = ($5 + [4]))) = (*($5) + [8])
	$0 = ($6 + [160])
	$4 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$4 = *(($5 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $4, [8])
	$4 = (*($4) + [8])
	*(($4 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$4 = *(($5 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $4, [8])
	*(($6 + [168])) = *($2 + [8])
	*(($5 = ($5 + [4]))) = (*($5) + [8])
	$1 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)*($5 + [8]) != (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$1 = *(($5 + [4]))
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $1, [1])
	*(($5 = ($5 + [4]))) = (*($5) + [1])
	*(($6 + [176])) = ((int_32)*($2 + [8]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $353 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [32])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*(($3 + [40])) = *($2 + [8])
	*($6) = (*($6) + [8])
	$5 = *($0)
	$0 = ($5 + [48])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$4 = *(($6 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($6 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [56])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$0 = ($5 + [64])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$4 = *(($6 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($6 + [8])) - $0) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$0 = *($4)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [72])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$0 = ($5 + [80])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$4 = *(($6 + [4]))
	
.LABEL $label$7
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($6 + [8])) - $0) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$0 = *($4)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [88])) = *($2 + [8])
	*($4) = (*($4) + [8])
	*($2 + [8]) = $5
	CALL $354(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $30($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $310 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [272])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [16])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [32])
	*($3) = (*($3) + [32])
	CALL $168($0, ($1 + [48]))
	*($2) = $0
	*($2 + [12]) = ($1 + [213])
	*($2 + [8]) = ($1 + [212])
	*($2 + [16]) = ($1 + [214])
	*($2 + [20]) = ($1 + [215])
	*($2 + [24]) = ($1 + [216])
	*($2 + [28]) = ($1 + [217])
	*($2 + [32]) = ($1 + [218])
	*($2 + [36]) = ($1 + [219])
	*($2 + [40]) = ($1 + [220])
	*($2 + [44]) = ($1 + [221])
	*($2 + [48]) = ($1 + [222])
	*($2 + [52]) = ($1 + [223])
	*($2 + [56]) = ($1 + [224])
	*($2 + [60]) = ($1 + [225])
	*($2 + [64]) = ($1 + [226])
	*($2 + [68]) = ($1 + [227])
	*($2 + [72]) = ($1 + [228])
	*($2 + [76]) = ($1 + [229])
	*($2 + [80]) = ($1 + [230])
	*($2 + [88]) = ($1 + [232])
	*($2 + [84]) = ($1 + [231])
	*($2 + [92]) = ($1 + [233])
	*($2 + [96]) = ($1 + [234])
	*($2 + [100]) = ($1 + [235])
	*($2 + [104]) = ($1 + [236])
	*($2 + [108]) = ($1 + [237])
	*($2 + [112]) = ($1 + [238])
	*($2 + [116]) = ($1 + [239])
	*($2 + [120]) = ($1 + [240])
	*($2 + [124]) = ($1 + [241])
	*($2 + [128]) = ($1 + [242])
	*($2 + [132]) = ($1 + [243])
	*($2 + [136]) = ($1 + [244])
	*($2 + [140]) = ($1 + [245])
	*($2 + [144]) = ($1 + [246])
	*($2 + [148]) = ($1 + [247])
	*($2 + [152]) = ($1 + [248])
	*($2 + [156]) = ($1 + [249])
	*($2 + [164]) = ($1 + [251])
	*($2 + [160]) = ($1 + [250])
	*($2 + [168]) = ($1 + [252])
	*($2 + [172]) = ($1 + [253])
	*($2 + [176]) = ($1 + [254])
	*($2 + [180]) = ($1 + [255])
	*($2 + [184]) = ($1 + [256])
	*($2 + [188]) = ($1 + [257])
	*($2 + [192]) = ($1 + [258])
	*($2 + [196]) = ($1 + [259])
	*($2 + [200]) = ($1 + [260])
	*($2 + [204]) = ($1 + [261])
	*($2 + [208]) = ($1 + [262])
	*($2 + [212]) = ($1 + [263])
	*($2 + [216]) = ($1 + [264])
	*($2 + [220]) = ($1 + [265])
	*($2 + [224]) = ($1 + [266])
	*($2 + [228]) = ($1 + [267])
	*($2 + [232]) = ($1 + [268])
	*($2 + [240]) = ($1 + [270])
	*($2 + [236]) = ($1 + [269])
	*($2 + [244]) = ($1 + [271])
	*($2 + [248]) = ($1 + [272])
	*($2 + [252]) = ($1 + [273])
	*($2 + [256]) = ($1 + [274])
	*($2 + [260]) = ($1 + [275])
	*($2 + [264]) = ($1 + [276])
	*($2 + [268]) = ($1 + [277])
	CALL $312(($2 + [8]), $2)
	$4 = ($1 + [288])
	$3 = *($3)
	if ( ((uint_32)(*($6) - $3) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [292])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [4])
	*($3) = (*($3) + [4])
	$4 = ($1 + [312])
	$3 = *($0 + [4])
	$0 = CALL $276($0, ($1 + [296]))
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [320])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[33]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [34])
	$4 = (*($3) + [34])
	*($3) = $4
	if ( ((int_32)*($6) != (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $4, [1])
	*(($3 = ($0 + [4]))) = (*($3) + [1])
	*(($1 + [354])) = ((int_32)*($2 + [8]) != (int_32)[0])
	$global$0 = ($2 + [272])
	return $0
}

void .FUNC $311 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL $9(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $45($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $318(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

int_32 .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [1] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $23($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $23($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $23($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $23($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [8544]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $23($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $23($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $23($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

void .FUNC $20 (int_32 $0)
{
	*($0) = [0]
}

int_32 .FUNC $23 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

int_32 .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $21([2], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

void .FUNC $24 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $9($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $26 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $329 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $45($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $328 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [4])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($2 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $9(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $45($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [4]))
	$3 = ($2 + ($3 << [4]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [4]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $11($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $193 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [136]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14485])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14530])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [14580])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*(($6 + [80])) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($6 + [88])))
	
.LABEL $label$13
	CALL $11($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*(($9 + [80])) & [1]) == 0) ){ goto $label$16 }
	CALL $11(*(($9 + [88])))
	
.LABEL $label$16
	CALL $11($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [140])))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $346(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]))
	$global$0 = ($2 + [16])
}

void .FUNC $321 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *($1 + [28])
	if ( ($2 == 0) ){ goto $label$1 }
	*(($1 + [32])) = $2
	CALL $11($2)
	
.LABEL $label$1
	$2 = *($1 + [16])
	if ( ($2 == 0) ){ goto $label$2 }
	*(($1 + [20])) = $2
	CALL $11($2)
	
.LABEL $label$2
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$3 }
	*($1 + [4]) = $2
	CALL $11($2)
	
.LABEL $label$3
}

void .FUNC $320 (int_32 $0, int_32 $1)
{
}

int_32 .FUNC $323 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[48]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$9 = *($1)
	if ( ((int_32)$9 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13474])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $9, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$3 = *($9 + [8])
	
.LOOP $label$6:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [13474])
	$4 = *($6)
	
.LABEL $label$7
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$6 }
	$7 = ($9 + [12])
	if ( ((int_32)(*($5) - $4) > (int_32)[32]) ){ goto $label$8 }
	CALL eosio_assert([0], [13474])
	$4 = *($6)
	
.LABEL $label$8
	CALL memcpy($4, $7, [33])
	$4 = (*($6) + [33])
	*($6) = $4
	$9 = ($9 + [48])
	if ( ((int_32)$9 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $322 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $164(*($1), *($0 + [12]))
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $325 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$4 }
	$4 = *($0)
	$3 = ((int_32)($3 - $4) / (int_32)[40])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$2 = ((int_32)($2 - $4) / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$5 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$5
	$2 = CALL $9(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$4
	$6 = $3
	$2 = $1
	
.LOOP $label$6:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	*(($6 + [16])) = (int_64)0
	*(($6 + [24])) = (int_64)0
	*(($6 + [32])) = (int_64)0
	$6 = ($6 + [40])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$6 }
	*(($0 + [4])) = ($3 + ((int_32)$1 * (int_32)[40]))
	return (unreachable)
	
.LABEL $label$3
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $45($0)
	
.LABEL $label$1
	$7 = ($2 + ((int_32)$6 * (int_32)[40]))
	$8 = ($2 + ((int_32)$3 * (int_32)[40]))
	$6 = $8
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	*(($6 + [16])) = (int_64)0
	*(($6 + [24])) = (int_64)0
	*(($6 + [32])) = (int_64)0
	$6 = ($6 + [40])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	$9 = ($8 + ((int_32)$1 * (int_32)[40]))
	$6 = *($0)
	$10 = *(($0 + [4]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$9 }
	$11 = ($6 - $10)
	$1 = [0]
	
.LOOP $label$10:
	$2 = ($10 + $1)
	*((($6 = ($8 + $1)) + [-32])) = *(($2 + [-32]))
	*(($6 + [-40])) = *(($2 + [-40]))
	*(($3 = ($6 + [-24]))) = (int_64)0
	*(($4 = ($6 + [-16]))) = [0]
	$5 = ($2 + [-24])
	*($3) = *($5)
	$3 = ($2 + [-16])
	*($4) = *($3)
	*($3) = [0]
	*(($3 = ($6 + [-12]))) = (int_64)0
	*(($6 = ($6 + [-4]))) = [0]
	$4 = ($2 + [-12])
	*($3) = *($4)
	*($5) = (int_64)0
	$2 = ($2 + [-4])
	*($6) = *($2)
	*($2) = [0]
	*($4) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$10 }
	$8 = ($8 + $1)
	$6 = *(($0 + [4]))
	$3 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$3 = $6
	
.LABEL $label$8
	*($0) = $8
	*(($0 + [4])) = $9
	*(($0 + [8])) = $7
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = *(($6 + [-12]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($6 + [-8])) = $2
	CALL $11($2)
	
.LABEL $label$13
	$2 = ($6 + [-40])
	$1 = *(($6 + [-24]))
	if ( ($1 == 0) ){ goto $label$14 }
	*(($6 + [-20])) = $1
	CALL $11($1)
	
.LABEL $label$14
	$6 = $2
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($3 == 0) ){ goto $label$15 }
	CALL $11($3)
	
.LABEL $label$15
}

int_32 .FUNC $324 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [13474])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $308($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

int_32 .FUNC $327 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [13842])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$4 = *($1 + [4])
	$6 = int_32(($4 - $7) >> [4])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $328($1, ($2 - $6))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$4 = ($7 + ($2 << [4]))
	*(($1 + [4])) = $4
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = ($0 + [4])
	$6 = *($2)
	$5 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($5) - $6) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$6 = *($2)
	
.LABEL $label$8
	CALL memcpy($7, $6, [8])
	$6 = (*($2) + [8])
	*($2) = $6
	if ( ((uint_32)(*($5) - $6) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13837])
	$6 = *($2)
	
.LABEL $label$9
	CALL memcpy(($7 + [8]), $6, [8])
	$6 = (*($2) + [8])
	*($2) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $326 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $279(CALL $327($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $101 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [128])
	$global$0 = $2
	$3 = CALL $102(($0 + [208]), $1, [13376])
	*(($2 + [40])) = [0]
	*($2 + [16]) = $1
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$4 = *($0)
	*($2 + [8]) = $4
	$5 = CALL db_find_i64($4, $1, (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $103(($2 + [8]), $5)
	if ( ((int_32)*($5 + [40]) == (int_32)($2 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$4
	*($2 + [48]) = $3
	CALL $104(($2 + [8]), $5, ($2 + [48]))
	$3 = *($2 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = *($0)
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$5 }
	CALL eosio_assert([0], [14370])
	
.LABEL $label$5
	*(($5 = CALL $9([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = ($2 + [8])
	*($5 + [8]) = *(($3 + [8]))
	*($5) = *($3)
	*($5 + [24]) = *(($3 + [24]))
	*($5 + [16]) = *($3 + [16])
	*($5 + [32]) = *($0)
	*($2 + [96]) = (($2 + [48]) + [40])
	*($2 + [92]) = ($2 + [48])
	*($2 + [88]) = ($2 + [48])
	*($2 + [104]) = ($2 + [88])
	*($2 + [116]) = ($5 + [16])
	*($2 + [112]) = $5
	*($2 + [120]) = ($5 + [32])
	CALL $105(($2 + [112]), ($2 + [104]))
	$1 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	$3 = CALL db_store_i64(*((($2 + [8]) + [8])), (int_64)-4157508551318700032, $6, $1), ($2 + [48]), [40]
	*($5 + [44]) = $3)
	$0 = (($2 + [8]) + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$6 }
	*($0) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$6
	*($2 + [112]) = $5
	$1 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($2 + [48]) = $1)
	*($2 + [88]) = $3
	$7 = ($2 + [36])
	$0 = *($7)
	if ( ((uint_32)$0 >= (uint_32)*((($2 + [8]) + [32]))) ){ goto $label$9 }
	*($0 + [8]) = $1
	*($0 + [16]) = $3
	*($2 + [112]) = [0]
	*($0) = $5
	*($7) = ($0 + [24])
	$5 = *($2 + [112])
	*($2 + [112]) = [0]
	if ( $5 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $106(($2 + [32]), ($2 + [112]), ($2 + [48]), ($2 + [88]))
	$5 = *($2 + [112])
	*($2 + [112]) = [0]
	if ( ($5 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11($5)
	
.LABEL $label$7
	$3 = *($2 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 + [36])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$11 }
	
.LOOP $label$12:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	CALL $11($0)
	
.LABEL $label$13
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$12 }
	$5 = *(($2 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$5 = $3
	
.LABEL $label$10
	*($7) = $3
	CALL $11($5)
	
.LABEL $label$1
	$global$0 = ($2 + [128])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $45($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13814])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $9([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	CALL $348(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $106(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $102 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13846])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157495357179166720, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $98($0, $5)
	if ( ((int_32)*($6 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13846])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $104 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$5 = *($2)
	*($1) = *($5)
	$6 = *($1 + [8])
	$7 = *(($5 + [8]))
	*($1 + [8]) = $7
	$2 = *($2)
	*($1 + [16]) = *($2 + [16])
	*(($1 + [24])) = *(($2 + [24]))
	$5 = ($1 + [16])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)$6) == (int_64)(uint_64)$7 >> (uint_64)(int_64)8)) ){ goto $label$3 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-48])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $5
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [32])
	CALL $105(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $2, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $107 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = ($0 + [208])
	$6 = CALL $102($5, $1, [13376])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($6 + [8])), [9595])
	CALL require_auth(*($6 + [88]))
	$8 = *($2)
	$7 = CALL $17([10232])
	if ( ((int_32)$7 != (int_32)( *($2 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$5 }
	if ( (CALL $41($2, [0], [-1], [10232], $7) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$0 = *($2)
	$8 = ($2 + [4])
	$7 = CALL $17([10296])
	if ( ((int_32)$7 != (int_32)( *($8) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$6 }
	if ( (CALL $41($2, [0], [-1], [10296], $7) == 0) ){ goto $label$3 }
	
.LABEL $label$6
	$0 = *($2)
	$7 = CALL $17([10340])
	if ( ((int_32)$7 != (int_32)( *($8) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$7 }
	if ( (CALL $41($2, [0], [-1], [10340], $7) == 0) ){ goto $label$2 }
	
.LABEL $label$7
	$0 = *($2)
	$8 = CALL $17([10384])
	if ( ((int_32)$8 != (int_32)( *(($2 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$8 }
	if ( (CALL $41($2, [0], [-1], [10384], $8) == 0) ){ goto $label$1 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9082])
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($3) >= (int_64)*($6)), [10243])
	*($4 + [8]) = $3
	CALL $108($5, $6, ($4 + [8]))
	CALL $101($0, (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8))
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$3
	$1 = *($3)
	CALL eosio_assert((((int_64)$1 > (int_64)0) & ((int_64)$1 < (int_64)*($6 + [48]))), [10314])
	*($4 + [8]) = $3
	CALL $109($5, $6, ($4 + [8]))
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$2
	$1 = *($3)
	CALL eosio_assert((((int_64)*($6 + [32]) < (int_64)$1) & ((int_64)$1 < (int_64)*($6 + [64]))), [10358])
	*($4 + [8]) = $3
	CALL $110($5, $6, ($4 + [8]))
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($3) > (int_64)*($6 + [48])), [10403])
	*($4 + [8]) = $3
	CALL $111($5, $6, ($4 + [8]))
	$global$0 = ($4 + [16])
}

int_32 .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL $9($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $109 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$5 = *($2)
	*(($1 + [40])) = *(($5 + [8]))
	$2 = ($1 + [112])
	*($4 + [24]) = (uint_64)*($2) >> (uint_64)(int_64)8)
	*($1 + [32]) = *($5)
	$6 = *($1 + [8])
	$5 = $3
	$3 = ($5 + [-240])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($5 + [-11])
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = ($1 + [16])
	*($4 + [40]) = $1
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [96])
	*($4 + [72]) = ($1 + [104])
	*($4 + [76]) = $2
	*($4 + [80]) = ($1 + [120])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [152])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [176])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [192])
	CALL $112(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $3, [229])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( (uint_64)($6) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$3
	*($4 + [40]) = (uint_64)*($2) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$3 = ($1 + [256])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	$global$0 = ($4 + [112])
}

void .FUNC $108 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$5 = *($2)
	*(($1 + [24])) = *(($5 + [8]))
	$2 = ($1 + [112])
	*($4 + [24]) = (uint_64)*($2) >> (uint_64)(int_64)8)
	*($1 + [16]) = *($5)
	$6 = *($1 + [8])
	$5 = $3
	$3 = ($5 + [-240])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($5 + [-11])
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = ($1 + [16])
	*($4 + [40]) = $1
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [96])
	*($4 + [72]) = ($1 + [104])
	*($4 + [76]) = $2
	*($4 + [80]) = ($1 + [120])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [152])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [176])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [192])
	CALL $112(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $3, [229])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( (uint_64)($6) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$3
	*($4 + [40]) = (uint_64)*($2) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$3 = ($1 + [256])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	$global$0 = ($4 + [112])
}

int_32 .FUNC $318 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$1 = ($1 + [-24])
	*($3) = $1
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$1 = *($4 + [296])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($4 + [300])) = $1
	CALL $11($1)
	
.LABEL $label$4
	$5 = ($4 + [200])
	$6 = *($5)
	if ( ($6 == 0) ){ goto $label$5 }
	$7 = ($4 + [204])
	$1 = *($7)
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	$8 = ($1 + [-16])
	$9 = *(($1 + [-12]))
	if ( ($9 == 0) ){ goto $label$9 }
	*(($1 + [-8])) = $9
	CALL $11($9)
	
.LABEL $label$9
	$1 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$8 }
	$1 = *($5)
	goto $label$6 
	
.LABEL $label$7
	$1 = $6
	
.LABEL $label$6
	*($7) = $6
	CALL $11($1)
	
.LABEL $label$5
	if ( (*(($4 + [196])) == 0) ){ goto $label$10 }
	$1 = *(($4 + [184]))
	if ( ($1 == 0) ){ goto $label$10 }
	*(($4 + [188])) = $1
	CALL $11($1)
	
.LABEL $label$10
	CALL $11($4)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $11($1)
	
.LABEL $label$11
	return $0
}

int_32 .FUNC $319 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13474])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13474])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $215 (int_32 $0)
{
	CALL require_auth(*($0))
	$0 = ($0 + [80])
	CALL eosio_assert(*($0), [12983])
	*($0) = [0]
}

void .FUNC $214 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [112])
	$global$0 = $3
	CALL require_auth(*($0))
	CALL eosio_assert(((int_32)*($2 + [4]) != (int_32)*($2)), [12952])
	*((($3 + [64]) + [32])) = [0]
	*($3 + [72]) = $1
	*($3 + [80]) = (int_64)-1
	*($3 + [88]) = (int_64)0
	*($3 + [100]) = [0]
	*($3 + [64]) = *($0)
	$5 = *($2 + [4])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$6 = ($3 + [8])
	
.LOOP $label$2:
	*($3 + [56]) = ($3 + [64])
	$1 = (int_64)0
	$0 = [0]
	$7 = ($3 + [16])
	$2 = [16]
	$8 = (int_64)0
	
.LOOP $label$4:
	$9 = ($4 + $0)
	if ( ($2 <= [2]) ){ goto $label$5 }
	$1 = ((int_64)$1 | (int_64)*($9))
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)(uint_64)$1 >> (uint_64)(int_64)56))
	$2 = ($2 + [-1])
	$1 = ((int_64)$1 << (int_64)8)
	$0 = ($0 + [1])
	if ( ((int_32)$0 != (int_32)[32]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [14110])
	
.LABEL $label$6
	$10 = *($9)
	*($7 + [8]) = $8
	*($7) = ((int_64)$1 | (int_64)$10)
	$2 = [16]
	$7 = ($7 + [16])
	$1 = (int_64)0
	$8 = (int_64)0
	$0 = ($0 + [1])
	if ( ((int_32)$0 != (int_32)[32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$2 == (int_32)[16]) ){ goto $label$7 }
	if ( ($2 <= [2]) ){ goto $label$8 }
	CALL __ashlti3($3, $1, $8, (($2 << [3]) + [-8]))
	$8 = *($6)
	$1 = *($3)
	
.LABEL $label$8
	*($7) = $1
	*($7 + [8]) = $8
	
.LABEL $label$7
	CALL $199(($3 + [104]), ($3 + [56]), ($3 + [16]))
	$2 = *($3 + [108])
	if ( $2 ){ goto $label$9 }
	CALL eosio_assert([0], [12966])
	$2 = *($3 + [108])
	
.LABEL $label$9
	CALL $202(($3 + [64]), $2)
	$4 = ($4 + [32])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$2 }
	$7 = *($3 + [88])
	if ( ($7 == 0) ){ goto $label$1 }
	$9 = ($3 + [92])
	$2 = *($9)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	CALL $11($0)
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$12 }
	$2 = *(($3 + [88]))
	goto $label$10 
	
.LABEL $label$11
	$2 = $7
	
.LABEL $label$10
	*($9) = $7
	CALL $11($2)
	
.LABEL $label$1
	$global$0 = ($3 + [112])
}

void .FUNC $217 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL require_auth($3)
	$5 = *($2)
	$2 = CALL $102(($0 + [208]), $5, [13084])
	*(($4 + [48])) = [0]
	*($4 + [32]) = (int_64)-1
	*($4 + [40]) = (int_64)0
	$6 = *($0)
	*($4 + [16]) = $6
	*($4 + [24]) = $1
	$0 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, $5)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	if ( ((int_32)*(CALL $151(($4 + [16]), $0) + [16]) == (int_32)($4 + [16])) ){ goto $label$3 }
	CALL eosio_assert([0], [13846])
	$7 = *($4 + [40])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	*($4 + [8]) = $2
	*($4 + [88]) = $3
	if ( ((int_64)$6 == (int_64)CALL current_receiver()) ){ goto $label$5 }
	CALL eosio_assert([0], [14370])
	
.LABEL $label$5
	*($4 + [68]) = ($4 + [8])
	*($4 + [64]) = ($4 + [16])
	*($4 + [72]) = ($4 + [88])
	*(($0 = CALL $9([32])) + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = ($4 + [16])
	CALL $218(($4 + [64]), $0)
	*($4 + [80]) = $0
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8
	*($4 + [64]) = $1)
	$7 = *($0 + [20])
	*($4 + [60]) = $7
	$8 = ($4 + [44])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*((($4 + [16]) + [32]))) ){ goto $label$7 }
	*($2 + [8]) = $1
	*($2 + [16]) = $7
	*($4 + [80]) = [0]
	*($2) = $0
	*($8) = ($2 + [24])
	$0 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( $0 ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$7
	CALL $153(($4 + [40]), ($4 + [80]), ($4 + [64]), ($4 + [60]))
	$0 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	
.LABEL $label$6
	CALL $11($0)
	
.LABEL $label$3
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($4 + [44])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($4 + [40]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $7
	
.LABEL $label$8
	*($8) = $7
	CALL $11($0)
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $216 (int_32 $0)
{
	CALL require_auth(*($0))
	$0 = ($0 + [80])
	CALL eosio_assert(((int_32)*($0) ^ (int_32)[1]), [13022])
	*($0) = [1]
}

void .FUNC $211 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($4 + [24]) = (uint_64)*(($1 + [112])) >> (uint_64)(int_64)8)
	$6 = *($1 + [8])
	$5 = *($2)
	if ( ((int_64)*(($5 + [24])) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($5 + [16]))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14676])
	$7 = *($1)
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14695])
	
.LABEL $label$5
	$5 = *($2)
	if ( ((int_64)*(($5 + [24])) == (int_64)*(($1 + [24]))) ){ goto $label$6 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$6
	$7 = ((int_64)*($1 + [16]) + (int_64)*($5 + [16]))
	*($1 + [16]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [14676])
	$7 = *(($1 + [16]))
	
.LABEL $label$7
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [14695])
	
.LABEL $label$8
	$2 = *($2)
	if ( ((int_64)*(($2 + [24])) == (int_64)*(($1 + [168]))) ){ goto $label$9 }
	CALL eosio_assert([0], [14713])
	
.LABEL $label$9
	$8 = (int_64)
	*($1 + [160]) = $8(*($1 + [160]) - *($2 + [16])))
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [14761])
	$8 = *(($1 + [160]))
	
.LABEL $label$10
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [14783])
	
.LABEL $label$11
	*($1 + [176]) = ((int_64)*($1 + [176]) + (int_64)-1)
	$5 = ($1 + [176])
	if ( ((int_64)$7 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$12 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$12
	$3 = $3
	$2 = ($3 + [-240])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-11])
	*($4 + [32]) = ($4 + [8])
	*($4 + [96]) = $5
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [16])
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [96])
	*($4 + [72]) = ($1 + [104])
	$3 = ($1 + [112])
	*($4 + [76]) = $3
	*($4 + [80]) = ($1 + [120])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [152])
	*($4 + [92]) = ($1 + [160])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [192])
	CALL $112(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $2, [229])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$13
	*($4 + [40]) = (uint_64)*($3) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$14 }
	$2 = ($1 + [256])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$15 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $7)
	*($2) = $1
	
.LABEL $label$15
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$14
	$global$0 = ($4 + [112])
}

void .FUNC $210 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_32 $22
	$3 = ($global$0 - [288])
	$global$0 = $3
	CALL require_auth(*($0))
	CALL eosio_assert(((int_32)*($2 + [4]) != (int_32)*($2)), [12952])
	*((($3 + [232]) + [32])) = [0]
	*($3 + [240]) = $1
	*($3 + [248]) = (int_64)-1
	*($3 + [256]) = (int_64)0
	*($3 + [268]) = [0]
	*($3 + [232]) = *($0)
	$5 = *($2 + [4])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$6 = ($0 + [168])
	$7 = ($0 + [208])
	$8 = ($3 + [84])
	$9 = (($3 + [96]) + [32])
	$10 = (($3 + [96]) + [16])
	$11 = (($3 + [192]) + [16])
	$12 = (($3 + [192]) + [24])
	$13 = (($3 + [192]) + [8])
	$14 = ($3 + [76])
	$15 = ($3 + [136])
	
.LOOP $label$2:
	*($3 + [224]) = ($3 + [232])
	$1 = (int_64)0
	$17 = [0]
	$19 = ($3 + [96])
	$2 = [16]
	$20 = (int_64)0
	
.LOOP $label$4:
	$16 = ($4 + $17)
	if ( ($2 <= [2]) ){ goto $label$5 }
	$1 = ((int_64)$1 | (int_64)*($16))
	$20 = ((int_64)((int_64)$20 << (int_64)8) | (int_64)(uint_64)$1 >> (uint_64)(int_64)56))
	$2 = ($2 + [-1])
	$1 = ((int_64)$1 << (int_64)8)
	$17 = ($17 + [1])
	if ( ((int_32)$17 != (int_32)[32]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [14110])
	
.LABEL $label$6
	$21 = *($16)
	*($19 + [8]) = $20
	*($19) = ((int_64)$1 | (int_64)$21)
	$2 = [16]
	$19 = ($19 + [16])
	$1 = (int_64)0
	$20 = (int_64)0
	$17 = ($17 + [1])
	if ( ((int_32)$17 != (int_32)[32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$2 == (int_32)[16]) ){ goto $label$7 }
	if ( ($2 <= [2]) ){ goto $label$8 }
	CALL __ashlti3($3, $1, $20, (($2 << [3]) + [-8]))
	$20 = *(($3 + [8]))
	$1 = *($3)
	
.LABEL $label$8
	*($19) = $1
	*($19 + [8]) = $20
	
.LABEL $label$7
	CALL $199(($3 + [56]), ($3 + [224]), ($3 + [96]))
	$19 = *($3 + [60])
	if ( $19 ){ goto $label$9 }
	CALL eosio_assert([0], [12966])
	$19 = *($3 + [60])
	
.LABEL $label$9
	*($12) = *(($19 + [72]))
	*($11) = *(($19 + [64]))
	*($13) = *(($19 + [56]))
	$1 = *($19 + [48])
	*($3 + [192]) = $1
	if ( ((int_64)$1 != (int_64)*($0)) ){ goto $label$14 }
	$16 = CALL $102($7, (uint_64)*($12) >> (uint_64)(int_64)8), [13376])
	*($3 + [96]) = ($3 + [192])
	CALL $211($7, $16, ($3 + [96]))
	if ( ((int_64)*($13) == (int_64)*($0)) ){ goto $label$11 }
	*(($17 = (($3 + [16]) + [24]))) = *(($4 + [24]))
	*(($18 = (($3 + [16]) + [16]))) = *(($4 + [16]))
	*($3 + [24]) = *(($4 + [8]))
	*($3 + [16]) = *($4)
	$2 = [0]
	*(($22 = (($3 + [56]) + [8]))) = [0]
	*((($3 + [96]) + [24])) = *($17)
	*($10) = *($18)
	*($3 + [56]) = (int_64)0
	*($3 + [104]) = *($3 + [24])
	*($3 + [96]) = *($3 + [16])
	
.LOOP $label$15:
	$17 = *((($3 + [96]) + $2))
	CALL $36(($3 + [56]), *((uint_32($17 >> [4]) + [8722])))
	CALL $36(($3 + [56]), *((($17 & [15]) + [8722])))
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$15 }
	$2 = CALL $39(($3 + [56]), [0], [12815])
	$17 = ($2 + [8])
	*(($18 = (($3 + [176]) + [8]))) = *($17)
	*($3 + [176]) = *($2)
	*($2) = (int_64)0
	*($17) = [0]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$16 }
	CALL $11(*($22))
	
.LABEL $label$16
	*((($3 + [96]) + [8])) = *($13)
	*($10) = *($11)
	*(($10 + [8])) = *(($11 + [8]))
	*($3 + [96]) = *($0)
	CALL $27($9, ($3 + [176]))
	*($22) = (int_64)-3617168760277827584
	*(($17 = (($3 + [56]) + [16]))) = (int_64)0
	*(($22 = (($3 + [56]) + [24]))) = [0]
	$1 = *($0)
	*($3 + [56]) = $1
	$2 = CALL $9([16])
	*($17) = $2
	*($2) = $1
	*($2 + [8]) = (int_64)3617214756542218240
	*($8) = (int_64)0
	*((($3 + [56]) + [36])) = [0]
	$2 = ($2 + [16])
	*($22) = $2
	*($14) = $2
	$2 = *($9)
	$22 = ( *((($3 + [96]) + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($22 + [32])
	$1 = (CASTING uint_64)(uint_32 $22)
	
.LOOP $label$17:
	$2 = ($2 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$17 }
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $46($8, $2)
	$22 = *((($3 + [56]) + [32]))
	$2 = *($8)
	goto $label$12 
	
.LABEL $label$14
	$16 = CALL $81($0, $1)
	*($3 + [96]) = ($3 + [192])
	CALL $212($6, $16, ($3 + [96]))
	if ( ((int_64)*($13) == (int_64)*($0)) ){ goto $label$10 }
	*(($17 = (($3 + [144]) + [24]))) = *(($4 + [24]))
	*(($18 = (($3 + [144]) + [16]))) = *(($4 + [16]))
	*($3 + [152]) = *(($4 + [8]))
	*($3 + [144]) = *($4)
	$2 = [0]
	*(($22 = (($3 + [56]) + [8]))) = [0]
	*((($3 + [96]) + [24])) = *($17)
	*($10) = *($18)
	*($3 + [56]) = (int_64)0
	*($3 + [104]) = *($3 + [152])
	*($3 + [96]) = *($3 + [144])
	
.LOOP $label$18:
	$17 = *((($3 + [96]) + $2))
	CALL $36(($3 + [56]), *((uint_32($17 >> [4]) + [8722])))
	CALL $36(($3 + [56]), *((($17 & [15]) + [8722])))
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$18 }
	$2 = CALL $39(($3 + [56]), [0], [12815])
	$17 = ($2 + [8])
	*(($18 = (($3 + [176]) + [8]))) = *($17)
	*($3 + [176]) = *($2)
	*($2) = (int_64)0
	*($17) = [0]
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$19 }
	CALL $11(*($22))
	
.LABEL $label$19
	*((($3 + [96]) + [8])) = *($13)
	*($10) = *($11)
	*(($10 + [8])) = *(($11 + [8]))
	*($3 + [96]) = *($0)
	CALL $27($9, ($3 + [176]))
	$1 = *($16)
	*($22) = (int_64)-3617168760277827584
	*(($17 = (($3 + [56]) + [16]))) = (int_64)0
	*(($16 = (($3 + [56]) + [24]))) = [0]
	*($3 + [56]) = $1
	$1 = *($0)
	$2 = CALL $9([16])
	*($17) = $2
	*($2) = $1
	*($2 + [8]) = (int_64)3617214756542218240
	*($8) = (int_64)0
	*((($3 + [56]) + [36])) = [0]
	$2 = ($2 + [16])
	*($16) = $2
	*($14) = $2
	$2 = *($9)
	$16 = ( *((($3 + [96]) + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($16 + [32])
	$1 = (CASTING uint_64)(uint_32 $16)
	
.LOOP $label$20:
	$2 = ($2 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$20 }
	if ( $2 ){ goto $label$22 }
	$16 = [0]
	$2 = [0]
	goto $label$21 
	
.LABEL $label$22
	CALL $46($8, $2)
	$16 = *((($3 + [56]) + [32]))
	$2 = *($8)
	
.LABEL $label$21
	*((($3 + [272]) + [8])) = $16
	*($3 + [276]) = $2
	*($3 + [272]) = $2
	CALL $178(($3 + [272]), ($3 + [96]))
	CALL $179(($3 + [56]))
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$23 }
	*((($3 + [56]) + [32])) = $2
	CALL $11($2)
	
.LABEL $label$23
	$2 = *($17)
	if ( ($2 == 0) ){ goto $label$24 }
	*($14) = $2
	CALL $11($2)
	
.LABEL $label$24
	if ( ((*($9) & [1]) == 0) ){ goto $label$25 }
	CALL $11(*($15))
	
.LABEL $label$25
	if ( ((*($3 + [176]) & [1]) == 0) ){ goto $label$10 }
	CALL $11(*($18))
	goto $label$10 
	
.LABEL $label$13
	$22 = [0]
	$2 = [0]
	
.LABEL $label$12
	*((($3 + [272]) + [8])) = $22
	*($3 + [276]) = $2
	*($3 + [272]) = $2
	CALL $178(($3 + [272]), ($3 + [96]))
	CALL $179(($3 + [56]))
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$26 }
	*((($3 + [56]) + [32])) = $2
	CALL $11($2)
	
.LABEL $label$26
	$2 = *($17)
	if ( ($2 == 0) ){ goto $label$27 }
	*($14) = $2
	CALL $11($2)
	
.LABEL $label$27
	if ( ((*($9) & [1]) == 0) ){ goto $label$28 }
	CALL $11(*($15))
	
.LABEL $label$28
	if ( ((*($3 + [176]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*($18))
	
.LABEL $label$11
	CALL $101($0, (uint_64)*($16 + [8]) >> (uint_64)(int_64)8))
	
.LABEL $label$10
	CALL $202(($3 + [232]), $19)
	$4 = ($4 + [32])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$2 }
	$19 = *($3 + [256])
	if ( ($19 == 0) ){ goto $label$1 }
	$16 = ($3 + [260])
	$2 = *($16)
	if ( ((int_32)$2 == (int_32)$19) ){ goto $label$30 }
	
.LOOP $label$31:
	$2 = ($2 + [-24])
	$17 = *($2)
	*($2) = [0]
	if ( ($17 == 0) ){ goto $label$32 }
	CALL $11($17)
	
.LABEL $label$32
	if ( ((int_32)$19 != (int_32)$2) ){ goto $label$31 }
	$2 = *(($3 + [256]))
	goto $label$29 
	
.LABEL $label$30
	$2 = $19
	
.LABEL $label$29
	*($16) = $19
	CALL $11($2)
	
.LABEL $label$1
	$global$0 = ($3 + [288])
}

void .FUNC $213 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [32])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4 + [4])
	$6 = *($5 + [88])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = *($4)
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-6495091301338316800, $3, *($5))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($6)
	
.LABEL $label$1
	$6 = *($0)
	$4 = *($6 + [4])
	$0 = *(($4 + [92]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = *($6)
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	$0 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)-6495091301338316799, $3, [2], *($4))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx256_remove($0)
	
.LABEL $label$3
	$global$0 = ($3 + [32])
}

void .FUNC $223 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14485])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14530])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [14580])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [52]))
}

int_32 .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [32])
	*(($3 = ($0 + [4]))) = (*($3) + [32])
	$4 = ($1 + [72])
	$3 = *($0 + [4])
	$0 = CALL $276(CALL $279($0, ($1 + [48])), ($1 + [60]))
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $3, [4])
	*(($3 = ($0 + [4]))) = (*($3) + [4])
	$4 = ($1 + [100])
	$3 = *($0 + [4])
	$0 = CALL $276(CALL $279($0, ($1 + [76])), ($1 + [88]))
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [104])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [112])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [120])) = *($2 + [8])
	*($3) = (*($3) + [8])
	$1 = CALL $257($0, ($1 + [128]))
	$global$0 = ($2 + [16])
	return $1
}

void .FUNC $197 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$3 = ($global$0 - [112])
	$global$0 = $3
	*((($3 + [72]) + [32])) = [0]
	*($3 + [80]) = $1
	*($3 + [88]) = (int_64)-1
	$4 = (int_64)0
	*($3 + [96]) = (int_64)0
	*($3 + [108]) = [0]
	*($3 + [72]) = *($0)
	*($3 + [64]) = ($3 + [72])
	$5 = [16]
	$6 = ($3 + [16])
	$7 = [0]
	$8 = (int_64)0
	
.LOOP $label$2:
	$9 = ($2 + $7)
	if ( ($5 <= [2]) ){ goto $label$3 }
	$4 = ((int_64)$4 | (int_64)*($9))
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)(uint_64)$4 >> (uint_64)(int_64)56))
	$5 = ($5 + [-1])
	$4 = ((int_64)$4 << (int_64)8)
	$7 = ($7 + [1])
	if ( ((int_32)$7 != (int_32)[32]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [14110])
	
.LABEL $label$4
	*($6 + [8]) = $8
	*($6) = ((int_64)$4 | (int_64)*($9))
	$5 = [16]
	$6 = ($6 + [16])
	$4 = (int_64)0
	$8 = (int_64)0
	$7 = ($7 + [1])
	if ( ((int_32)$7 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)[16]) ){ goto $label$5 }
	if ( ($5 <= [2]) ){ goto $label$6 }
	CALL __ashlti3($3, $4, $8, (($5 << [3]) + [-8]))
	$8 = *(($3 + [8]))
	$4 = *($3)
	
.LABEL $label$6
	*($6) = $4
	*($6 + [8]) = $8
	
.LABEL $label$5
	CALL $199(($3 + [56]), ($3 + [64]), ($3 + [16]))
	CALL eosio_assert(((int_32)*($3 + [60]) != (int_32)[0]), [13431])
	$5 = ($0 + [128])
	$7 = CALL $127($5, $1, [11038])
	*($3 + [16]) = ($3 + [56])
	CALL $200($5, $7, ($3 + [16]))
	$4 = *($3 + [56])
	*($3 + [16]) = $4
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $5) ){ goto $label$7 }
	CALL eosio_assert([0], [14421])
	$5 = *($3 + [20])
	
.LABEL $label$7
	CALL $201(($3 + [16]))
	CALL $202(*($3 + [64]), $5)
	$6 = *($3 + [96])
	if ( ($6 == 0) ){ goto $label$8 }
	$9 = ($3 + [100])
	$5 = *($9)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$11:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $11($7)
	
.LABEL $label$12
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$11 }
	$5 = *(($3 + [96]))
	goto $label$9 
	
.LABEL $label$10
	$5 = $6
	
.LABEL $label$9
	*($9) = $6
	CALL $11($5)
	
.LABEL $label$8
	$global$0 = ($3 + [112])
}

void .FUNC $194 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	$10 = ($global$0 - [1088])
	$global$0 = $10
	$11 = *(($9 + [8]))
	$12 = *($1)
	$13 = *(($9 + [24]))
	*((($10 + [112]) + [24])) = $13
	$14 = *($9)
	$15 = *(($9 + [16]))
	*((($10 + [112]) + [16])) = $15
	*((($10 + [960]) + [24])) = $13
	*((($10 + [960]) + [16])) = $15
	*($10 + [960]) = $14
	*($10 + [120]) = $11
	*($10 + [112]) = $14
	*($10 + [968]) = $11
	CALL $195(($10 + [992]), $0, $12, ($10 + [112]))
	*((($10 + [880]) + [40])) = (int_64)0
	*((($10 + [880]) + [32])) = (int_64)0
	*((($10 + [880]) + [24])) = (int_64)0
	*(($16 = (($10 + [880]) + [64]))) = [0]
	*($10 + [888]) = [0]
	*($10 + [896]) = (int_64)0
	$17 = *($3 + [4])
	$3 = *($3)
	*($10 + [228]) = $3
	*($10 + [224]) = $3
	*($10 + [232]) = $17
	CALL $160(($10 + [224]), ($10 + [880]))
	$18 = (($10 + [880]) + [16])
	CALL $161(($10 + [224]), $18)
	CALL eosio_assert((*($10 + [880]) == 0), [11603])
	if ( ((int_32)*($16) != (int_32)[1]) ){ goto $label$1 }
	$16 = CALL $162(($10 + [840]), $18)
	$17 = ($16 + [32])
	$19 = *($17)
	$3 = *($16 + [28])
	$11 = CALL current_time()
	*(($10 + [804])) = (int_64)0
	*(($10 + [820])) = (int_64)0
	*((($10 + [776]) + [52])) = (int_64)0
	*($10 + [788]) = [0]
	*($10 + [792]) = [0]
	*($10 + [796 align=4]) = (int_64)0
	*($10 + [812 align=4]) = (int_64)0
	*($10 + [776]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($10 + [228]) = $3
	*($10 + [224]) = $3
	*($10 + [232]) = $19
	CALL $52(($10 + [224]), ($10 + [776]))
	CALL $54(CALL $53(CALL $53(($10 + [224]), (($10 + [776]) + [24])), ($10 + [812])), ($10 + [824]))
	CALL eosio_assert(((int_32)(*((($10 + [776]) + [40])) - *($10 + [812])) == (int_32)[40]), [12460])
	$3 = *($16 + [28])
	CALL sha256($3, (*($17) - $3), ($10 + [224]))
	CALL eosio_assert((CALL $1($2, ($10 + [224]), [32]) == 0), [12507])
	*(($10 + [680])) = (int_64)0
	*((($10 + [624]) + [64])) = (int_64)0
	*(($10 + [708])) = (int_64)0
	*(($10 + [716])) = (int_64)0
	*(($10 + [744])) = (int_64)0
	*(($10 + [760])) = [0]
	*($10 + [632]) = (int_64)0
	*($10 + [672]) = (int_64)0
	*($10 + [700 align=4]) = (int_64)0
	*($10 + [728]) = (int_64)0
	*($10 + [736]) = (int_64)0
	*($10 + [752]) = (int_64)0
	$3 = *($10 + [812])
	$2 = *(($3 + [32]))
	$3 = *($3 + [28])
	*($10 + [228]) = $3
	*($10 + [224]) = $3
	*($10 + [232]) = $2
	CALL $196(($10 + [224]), ($10 + [624]))
	*((($10 + [544]) + [40])) = (int_64)0
	*((($10 + [544]) + [32])) = (int_64)0
	*((($10 + [544]) + [24])) = (int_64)0
	*(($3 = (($10 + [544]) + [64]))) = [0]
	*($10 + [552]) = [0]
	*($10 + [560]) = (int_64)0
	$2 = *((($10 + [624]) + [52]))
	$17 = *($10 + [672])
	*($10 + [228]) = $17
	*($10 + [224]) = $17
	*($10 + [232]) = $2
	CALL $160(($10 + [224]), ($10 + [544]))
	$19 = (($10 + [544]) + [16])
	CALL $161(($10 + [224]), $19)
	CALL eosio_assert((*($10 + [544]) == 0), [11603])
	if ( ((int_32)*($3) != (int_32)[1]) ){ goto $label$1 }
	$2 = CALL $162(($10 + [504]), $19)
	$3 = *($2 + [28])
	CALL sha256($3, (*(($2 + [32])) - $3), ($10 + [224]))
	CALL eosio_assert((CALL $1($9, ($10 + [224]), [32]) == 0), [12528])
	$20 = ($0 + [128])
	$17 = CALL $127($20, *($1), [11714])
	CALL eosio_assert(((int_64)*($10 + [624]) == (int_64)((int_64)*($17 + [8]) + (int_64)1)), [12549])
	if ( ((int_32)*(($10 + [944])) != (int_32)[1]) ){ goto $label$1 }
	CALL $165(($10 + [224]), (($10 + [880]) + [16]), (($10 + [880]) + [32]))
	CALL $166(($10 + [400]), ($10 + [908]), ($10 + [924]), ($10 + [224]))
	CALL $167(($10 + [464]), ($10 + [880]), (($10 + [880]) | [4]), (($10 + [880]) | [8]), ($10 + [400]))
	*((($10 + [80]) + [24])) = *((($10 + [464]) + [24]))
	*((($10 + [80]) + [16])) = *((($10 + [464]) + [16]))
	*($10 + [88]) = *($10 + [472])
	*($10 + [80]) = *($10 + [464])
	CALL $154($10, $4, ($10 + [80]))
	$3 = CALL $73(($0 + [88]), *($1), [11714])
	*($10 + [400]) = *($3)
	$21 = CALL $27((($10 + [400]) + [8]), ($3 + [8]))
	*((($10 + [400]) + [53])) = *(($3 + [53]))
	*((($10 + [400]) + [48])) = *(($3 + [48]))
	*((($10 + [400]) + [40])) = *(($3 + [40]))
	*((($10 + [400]) + [32])) = *(($3 + [32]))
	*($10 + [424]) = *($3 + [24])
	CALL eosio_assert(((uint_32)*($5) <= (uint_32)*($8)), [12604])
	if ( ((uint_32)*($5) >= (uint_32)*($8)) ){ goto $label$7 }
	*(($10 + [372])) = [0]
	*(($10 + [384])) = [0]
	*($10 + [224]) = [0]
	*($10 + [232]) = (int_64)0
	*($10 + [356]) = [0]
	*($10 + [376]) = (int_64)0
	$3 = *($6 + [4])
	$6 = *($6)
	*($10 + [1028]) = $6
	*($10 + [1024]) = $6
	*($10 + [1032]) = $3
	CALL $168(($10 + [1024]), ($10 + [224]))
	$3 = *($10 + [256])
	CALL eosio_assert(((int_32)(((($3 << [24]) | (($3 << [8]) & [16711680])) | ((uint_32($3 >> [8]) & [65280]) | uint_32($3 >> [24]))) + [1]) == (int_32)*($5)), [12657])
	CALL eosio_assert((CALL $1((*($4 + [4]) + [-32]), ($10 + [288]), [32]) == 0), [12063])
	CALL $48(($10 + [1064]), ($10 + [224]))
	$3 = *($10 + [1064])
	CALL sha256($3, (*($10 + [1068]) - $3), ($10 + [1024]))
	$3 = *($10 + [1064])
	if ( ($3 == 0) ){ goto $label$8 }
	*($10 + [1068]) = $3
	CALL $11($3)
	
.LABEL $label$8
	*(($3 = (($10 + [1064]) + [8]))) = *((($10 + [1024]) + [16]))
	*(($5 = (($10 + [1064]) + [16]))) = *((($10 + [1024]) + [24]))
	*($10 + [1064]) = *($10 + [1032])
	$11 = *($10 + [1024])
	*(($4 = (($10 + [192]) + [16]))) = *($3)
	*(($6 = (($10 + [192]) + [24]))) = *($5)
	*($10 + [200]) = *($10 + [1064])
	$3 = *((($10 + [224]) + [32]))
	$3 = (((($3 << [24]) | (($3 << [8]) & [16711680])) | ((uint_32($3 >> [8]) & [65280]) | uint_32($3 >> [24]))) + [1])
	*($10 + [192]) = ((int_64)((int_64)$11 & (int_64)-4294967296) | (int_64)(CASTING uint_64)(uint_32 ((($3 << [24]) | (($3 << [8]) & [16711680])) | ((uint_32($3 >> [8]) & [65280]) | uint_32($3 >> [24])))))
	*((($10 + [48]) + [24])) = *($6)
	*((($10 + [48]) + [16])) = *($4)
	*($10 + [56]) = *($10 + [200])
	*($10 + [48]) = *($10 + [192])
	CALL $154($10, $7, ($10 + [48]))
	$3 = *($7 + [4])
	$5 = ($3 - *($7))
	*($10 + [1024]) = ( [1] ? (int_32($5 >> [5]) + [-1]) : ((int_32)$5 == (int_32)[32]) )
	CALL $169((($10 + [400]) + [32]), $8, ($10 + [1024]), ($3 + [-32]))
	$4 = *($10 + [376])
	if ( ($4 == 0) ){ goto $label$4 }
	$7 = ($10 + [380])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$9:
	$8 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $5
	CALL $11($5)
	
.LABEL $label$10
	$3 = $8
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$9 }
	$3 = *(($10 + [376]))
	goto $label$5 
	
.LABEL $label$7
	CALL $170(($10 + [432]), $8, (*($4 + [4]) + [-32]))
	$11 = *($10 + [992])
	if ( ((int_64)$11 == (int_64)*($0)) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$3 = $4
	
.LABEL $label$5
	*($7) = $4
	CALL $11($3)
	
.LABEL $label$4
	if ( (*(($10 + [372])) == 0) ){ goto $label$11 }
	$3 = *(($10 + [360]))
	if ( ($3 == 0) ){ goto $label$11 }
	*(($10 + [364])) = $3
	CALL $11($3)
	
.LABEL $label$11
	$11 = *($10 + [992])
	if ( ((int_64)$11 != (int_64)*($0)) ){ goto $label$2 }
	
.LABEL $label$3
	$14 = *(($10 + [1016]))
	*((($10 + [176]) + [8])) = $14
	*((($10 + [32]) + [8])) = $14
	$14 = *($10 + [1008])
	*($10 + [32]) = $14
	*($10 + [176]) = $14
	CALL $139($0, $11, ($10 + [32]))
	
.LABEL $label$2
	$11 = *(($9 + [8]))
	$14 = *(($9 + [24]))
	$13 = *($1)
	$12 = *($9)
	$15 = *(($9 + [16]))
	*(($10 + [16])) = $15
	*((($10 + [144]) + [24])) = $14
	*((($10 + [144]) + [16])) = $15
	*(($10 + [24])) = $14
	*($10 + [144]) = $12
	*($10 + [152]) = $11
	*($10) = $12
	*($10 + [8]) = $11
	CALL $197($0, $13, $10)
	CALL $198($20, $17)
	if ( ((*($21) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*((($10 + [400]) + [16])))
	
.LABEL $label$12
	$3 = *(($2 + [28]))
	if ( ($3 == 0) ){ goto $label$13 }
	*(($2 + [32])) = $3
	CALL $11($3)
	
.LABEL $label$13
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$14 }
	*(($2 + [20])) = $3
	CALL $11($3)
	
.LABEL $label$14
	$3 = *($2)
	if ( ($3 == 0) ){ goto $label$15 }
	*($2 + [4]) = $3
	CALL $11($3)
	
.LABEL $label$15
	$3 = *(($10 + [608]))
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$16 }
	*($10 + [224]) = *([0] + [14000])
	CALL void ($10 + [400])((int_32 $19), (int_32 *((($10 + [224]) + ($3 << [2])))))
	
.LABEL $label$16
	if ( ((*($10 + [752]) & [1]) == 0) ){ goto $label$17 }
	CALL $11(*(($10 + [760])))
	
.LABEL $label$17
	$3 = *(($10 + [712]))
	if ( ($3 == 0) ){ goto $label$18 }
	*(($10 + [716])) = $3
	CALL $11($3)
	
.LABEL $label$18
	$3 = *(($10 + [700]))
	if ( ($3 == 0) ){ goto $label$19 }
	*(($10 + [704])) = $3
	CALL $11($3)
	
.LABEL $label$19
	$3 = *(($10 + [684]))
	if ( ($3 == 0) ){ goto $label$20 }
	*(($10 + [688])) = $3
	CALL $11($3)
	
.LABEL $label$20
	$3 = *(($10 + [672]))
	if ( ($3 == 0) ){ goto $label$21 }
	*(($10 + [676])) = $3
	CALL $11($3)
	
.LABEL $label$21
	CALL $55(($10 + [776]))
	$3 = *(($16 + [28]))
	if ( ($3 == 0) ){ goto $label$22 }
	*(($16 + [32])) = $3
	CALL $11($3)
	
.LABEL $label$22
	$3 = *($16 + [16])
	if ( ($3 == 0) ){ goto $label$23 }
	*(($16 + [20])) = $3
	CALL $11($3)
	
.LABEL $label$23
	$3 = *($16)
	if ( ($3 == 0) ){ goto $label$24 }
	*($16 + [4]) = $3
	CALL $11($3)
	
.LABEL $label$24
	$3 = *(($10 + [944]))
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$25 }
	*($10 + [224]) = *([0] + [14000])
	CALL void ($10 + [624])((int_32 $18), (int_32 *((($10 + [224]) + ($3 << [2])))))
	
.LABEL $label$25
	$global$0 = ($10 + [1088])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $195 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [112])
	$global$0 = $4
	*((($4 + [72]) + [32])) = [0]
	*($4 + [80]) = $2
	*($4 + [88]) = (int_64)-1
	$2 = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [108]) = [0]
	*($4 + [72]) = *($1)
	*($4 + [64]) = ($4 + [72])
	$1 = [16]
	$5 = ($4 + [16])
	$6 = [0]
	$7 = (int_64)0
	
.LOOP $label$2:
	$8 = ($3 + $6)
	if ( ($1 <= [2]) ){ goto $label$3 }
	$2 = ((int_64)$2 | (int_64)*($8))
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)(uint_64)$2 >> (uint_64)(int_64)56))
	$1 = ($1 + [-1])
	$2 = ((int_64)$2 << (int_64)8)
	$6 = ($6 + [1])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [14110])
	
.LABEL $label$4
	*($5 + [8]) = $7
	*($5) = ((int_64)$2 | (int_64)*($8))
	$1 = [16]
	$5 = ($5 + [16])
	$2 = (int_64)0
	$7 = (int_64)0
	$6 = ($6 + [1])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$1 == (int_32)[16]) ){ goto $label$5 }
	if ( ($1 <= [2]) ){ goto $label$6 }
	CALL __ashlti3($4, $2, $7, (($1 << [3]) + [-8]))
	$7 = *(($4 + [8]))
	$2 = *($4)
	
.LABEL $label$6
	*($5) = $2
	*($5 + [8]) = $7
	
.LABEL $label$5
	CALL $199(($4 + [56]), ($4 + [64]), ($4 + [16]))
	CALL eosio_assert(((int_32)*($4 + [60]) != (int_32)[0]), [13409])
	$1 = *($4 + [60])
	*($0) = *($1 + [48])
	*(($0 + [8])) = *(($1 + [56]))
	*(($0 + [16])) = *(($1 + [64]))
	*(($0 + [24])) = *(($1 + [72]))
	$5 = *($4 + [96])
	if ( ($5 == 0) ){ goto $label$7 }
	$8 = ($4 + [100])
	$1 = *($8)
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = ($1 + [-24])
	$6 = *($1)
	*($1) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $11($6)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$10 }
	$1 = *(($4 + [96]))
	goto $label$8 
	
.LABEL $label$9
	$1 = $5
	
.LABEL $label$8
	*($8) = $5
	CALL $11($1)
	
.LABEL $label$7
	$global$0 = ($4 + [112])
}

void .FUNC $219 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth($1)
	*(($3 + [32])) = [0]
	*($3 + [8]) = $1
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	$4 = *($0)
	*($3) = $4
	$0 = [0]
	$2 = CALL db_find_i64($4, $1, (int_64)3607749779137757184, *($2))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $151($3, $2)
	if ( ((int_32)*($0 + [16]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [13106])
	CALL eosio_assert((int_64)(*($0) == 0), [13182])
	if ( $0 ){ goto $label$2 }
	CALL eosio_assert([0], [14421])
	CALL eosio_assert([0], [14455])
	
.LABEL $label$2
	$2 = CALL db_next_i64(*($0 + [20]), ($3 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	CALL $151($3, $2)
	
.LABEL $label$3
	CALL $220($3, $0)
	$5 = *($3 + [24])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($3 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $11($2)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($3 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $11($0)
	
.LABEL $label$4
	$global$0 = ($3 + [48])
}

void .FUNC $218 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *((*(*($0 + [4])) + [8]))
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	$6 = *($0)
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $8
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$5 }
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [11485])
	
.LABEL $label$1
	*($1 + [8]) = $4
	*($1) = (int_64)0
	$9 = $2
	$7 = ($9 + [-16])
	$global$0 = $7
	CALL memcpy($7, $1, [8])
	*($3 + [8]) = *($1 + [8])
	CALL memcpy(($9 + [-8]), ($3 + [8]), [8])
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($1 + [20]) = CALL db_store_i64(*($6 + [8]), (int_64)3607749779137757184, *(*($0 + [8])), $5), $7, [16])
	if ( (uint_64)($5 <= *($6 + [16])) ){ goto $label$6 }
	*(($6 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$6
	$global$0 = ($3 + [16])
}

int_32 .FUNC $190 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	*((($2 = CALL memcpy($0, $1, [132])) + [148])) = [0]
	*($2 + [132]) = [0]
	if ( (*(($1 + [148])) == 0) ){ goto $label$2 }
	*(($3 = ($2 + [136]))) = [0]
	*(($2 + [140])) = (int_64)0
	*(($2 + [132])) = *($1 + [132])
	$0 = (*(($1 + [140])) - *(($1 + [136])))
	$4 = ((int_32)$0 / (int_32)[48])
	if ( ($0 == 0) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[89478486]) ){ goto $label$1 }
	$0 = CALL $9($0)
	*(($2 + [136])) = $0
	*(($2 + [144])) = ($0 + ((int_32)$4 * (int_32)[48]))
	*(($4 = ($2 + [140]))) = $0
	$5 = *(($1 + [136]))
	$3 = (*(($1 + [140])) - $5)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($0, $5, $3)
	*($4) = (*($4) + ((int_32)((uint_32)$3 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$3
	*(($2 + [148])) = [1]
	
.LABEL $label$2
	*($2 + [152 align=4]) = (int_64)0
	*(($2 + [160])) = [0]
	$0 = (*(($1 + [156])) - *($1 + [152]))
	if ( ($0 == 0) ){ goto $label$6 }
	$4 = int_32($0 >> [4])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$4 }
	$0 = CALL $9($0)
	*(($6 = ($2 + [156]))) = $0
	*(($2 + [160])) = ($0 + ($4 << [4]))
	*(($2 + [152])) = $0
	$7 = *(($1 + [156]))
	$4 = *(($1 + [152]))
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	*($0 + [4]) = [0]
	*(($3 = ($0 + [8]))) = (int_64)0
	*($0) = *($4)
	$9 = ($4 + [4])
	$8 = ($4 + [8])
	$1 = (*($8) - *($9))
	if ( ($1 == 0) ){ goto $label$8 }
	$10 = ($0 + [4])
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $9($1)
	*($10) = $5
	*(($0 + [12])) = ($5 + $1)
	*($3) = $5
	$1 = *($9)
	$0 = (*($8) - $1)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($5, $1, $0)
	*($3) = (*($3) + $0)
	
.LABEL $label$8
	$0 = (*($6) + [16])
	*($6) = $0
	$4 = ($4 + [16])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$6
	return $2
	
.LABEL $label$5
	CALL $45($10)
	
.LABEL $label$4
	CALL $45(($2 + [152]))
	
.LABEL $label$1
	CALL $45($3)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $191 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	$4 = *($3 + [296])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($3 + [300])) = $4
	CALL $11($4)
	
.LABEL $label$6
	$5 = ($3 + [200])
	$6 = *($5)
	if ( ($6 == 0) ){ goto $label$7 }
	$7 = ($3 + [204])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$8 = ($4 + [-16])
	$9 = *(($4 + [-12]))
	if ( ($9 == 0) ){ goto $label$11 }
	*(($4 + [-8])) = $9
	CALL $11($9)
	
.LABEL $label$11
	$4 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$10 }
	$4 = *($5)
	goto $label$8 
	
.LABEL $label$9
	$4 = $6
	
.LABEL $label$8
	*($7) = $6
	CALL $11($4)
	
.LABEL $label$7
	if ( (*(($3 + [196])) == 0) ){ goto $label$12 }
	$4 = *(($3 + [184]))
	if ( ($4 == 0) ){ goto $label$12 }
	*(($3 + [188])) = $4
	CALL $11($4)
	
.LABEL $label$12
	CALL $11($3)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$4 }
	$4 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $11($4)
	
.LABEL $label$1
	return $0
}

void .FUNC $174 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($4 + [24]) = (uint_64)*(($1 + [112])) >> (uint_64)(int_64)8)
	$6 = *($1 + [8])
	$5 = *($2)
	if ( ((int_64)*($5 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($5))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14676])
	$7 = *($1)
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14695])
	
.LABEL $label$5
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [144]))) ){ goto $label$6 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$6
	$8 = ((int_64)*($1 + [136]) + (int_64)*($2))
	*($1 + [136]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [14676])
	$8 = *(($1 + [136]))
	
.LABEL $label$7
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [14695])
	
.LABEL $label$8
	*($1 + [152]) = ((int_64)*($1 + [152]) + (int_64)1)
	$5 = ($1 + [152])
	if ( ((int_64)$7 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$9 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$9
	$3 = $3
	$2 = ($3 + [-240])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-11])
	*($4 + [32]) = ($4 + [8])
	*($4 + [88]) = $5
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [16])
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [96])
	*($4 + [72]) = ($1 + [104])
	$3 = ($1 + [112])
	*($4 + [76]) = $3
	*($4 + [80]) = ($1 + [120])
	*($4 + [84]) = ($1 + [136])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [176])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [192])
	CALL $112(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $2, [229])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$10
	*($4 + [40]) = (uint_64)*($3) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$11 }
	$2 = ($1 + [256])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$12 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $7)
	*($2) = $1
	
.LABEL $label$12
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$11
	$global$0 = ($4 + [112])
}

void .FUNC $175 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL $17($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1)
	$7 = *($1 + [8])
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($5 + [16]) & [-16])
	$5 = CALL $9($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($5, ( $7 ? ($1 + [1]) : ($6 & [1]) ), $3)
	
.LABEL $label$2
	*(($5 + $3)) = [0]
	CALL $37($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $26($0)
}

void .FUNC $176 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [8])
	$5 = (CASTING uint_32)(uint_64 $4)
	$6 = ((int_64)$4 & (int_64)255)
	$7 = (int_64)($6 == 0)
	if ( $7 ){ goto $label$2 }
	$8 = ((int_64)$6 + (int_64)1)
	$9 = (int_64)1
	
.LOOP $label$3:
	$9 = ((int_64)$9 * (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)1
	
.LABEL $label$1
	$5 = ($5 & [255])
	$10 = ($2 - (($5 + [16]) & [496]))
	$2 = $10
	$global$0 = $2
	*(($11 = ($10 + $5))) = [0]
	$12 = *($1)
	if ( $7 ){ goto $label$4 }
	$8 = ((int_64)( (int_64)-1 ? (int_64)1 : ((int_64)$12 < (int_64)0) ) * (int_64)((int_64)$12 % (int_64)$9))
	$6 = ((int_64)$6 + (int_64)1)
	$1 = ($11 + [-1])
	
.LOOP $label$5:
	$13 = ((int_64)$8 / (int_64)10)
	*($1) = ((CASTING uint_32)(uint_64 (int_64))($8 - ((int_64)$13 * (int_64)10))) + [48])
	$1 = ($1 + [-1])
	$8 = $13
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)$6 > (int_64)1) ){ goto $label$5 }
	
.LABEL $label$4
	$11 = ($2 - (($5 + [47]) & [496]))
	$global$0 = $11
	$14 = ( [13997] ? [10657] : *($10) )
	$9 = ((int_64)$12 / (int_64)$9)
	$15 = ($5 + [32])
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( (int_64)($8) == 0) ){ goto $label$9 }
	$5 = [0]
	
.LOOP $label$11:
	*((($3 + [41]) + ($1 = $5))) = $8
	$5 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$11 }
	
.LABEL $label$10
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [24]) = ($5 << [1])
	$2 = (($3 + [24]) | [1])
	goto $label$7 
	
.LABEL $label$9
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	*($3 + [24]) = [0]
	$1 = (($3 + [24]) | [1])
	$5 = $1
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$2 = CALL $9($7)
	*($3 + [24]) = ($7 | [1])
	*($3 + [32]) = $2
	*($3 + [28]) = $5
	
.LABEL $label$7
	$7 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$12:
	*(($2 + $1)) = *((($3 + [41]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$12 }
	$5 = ($2 + $5)
	$1 = (($3 + [24]) | [1])
	
.LABEL $label$6
	*($5) = [0]
	*(($3 + [16])) = ( *($3 + [32]) ? $1 : (*($3 + [24]) & [1]) )
	*($3 + [12]) = $10
	*($3 + [8]) = $14
	*($3) = $9
	CALL $25($11, $15, [13985], $3)
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($3 + [32])))
	
.LABEL $label$13
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL $17($11)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$17 }
	*($0) = ($1 << [1])
	$5 = ($0 + [1])
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$2 = (($1 + [16]) & [-16])
	$5 = CALL $9($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $1
	
.LABEL $label$16
	CALL memcpy($5, $11, $1)
	
.LABEL $label$15
	*(($5 + $1)) = [0]
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$14
	CALL $26($0)
}

void .FUNC $177 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($4 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($4 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$5 = *($1)
	$6 = *($2)
	if ( ((int_64)*($6 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [14713])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [16]) = $7(*($1 + [16]) - *($6)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14761])
	$7 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14783])
	
.LABEL $label$5
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [216]))) ){ goto $label$6 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$6
	$7 = ((int_64)*($1 + [208]) + (int_64)*($2))
	*($1 + [208]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [14676])
	$7 = *(($1 + [208]))
	
.LABEL $label$7
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [14695])
	
.LABEL $label$8
	*($1 + [224]) = ((int_64)*($1 + [224]) + (int_64)1)
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$9
	$6 = (($4 + [16]) + [8])
	$8 = ($1 + [224])
	$2 = *($1 + [100])
	$9 = ( *(($1 + [104])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($9 + [253])
	$7 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [100])
	
.LOOP $label$10:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$10 }
	$10 = *($1 + [112])
	$10 = ( *(($1 + [116])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$2 = ($10 + $2)
	$7 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [112])
	
.LOOP $label$11:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$11 }
	if ( ($2 <= [513]) ){ goto $label$13 }
	$3 = CALL $2($2)
	goto $label$12 
	
.LABEL $label$13
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$12
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [32]) = $4
	*($4 + [72]) = $9
	*($4 + [76]) = $10
	*($4 + [112]) = $8
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [32])
	*($4 + [56]) = ($1 + [48])
	*($4 + [60]) = ($1 + [64])
	*($4 + [64]) = ($1 + [80])
	*($4 + [68]) = ($1 + [96])
	*($4 + [80]) = ($1 + [128])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [144])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [168])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [200])
	*($4 + [108]) = ($1 + [208])
	*($4 + [120]) = ($1 + [240])
	*($4 + [116]) = ($1 + [232])
	CALL $86(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [300]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$14 }
	CALL $4($3)
	
.LABEL $label$14
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*($4 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$16 }
	$3 = ($1 + [304])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($4 + [32]), $5)
	*($3) = $2
	
.LABEL $label$17
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$16
	*($4 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($6, ($4 + [40]), [8]) == 0) ){ goto $label$18 }
	$1 = ($1 + [308])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($4 + [32]), $5)
	*($1) = $2
	
.LABEL $label$19
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$18
	$global$0 = ($4 + [128])
}

void .FUNC $170 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [576])
	$global$0 = $3
	*(($3 + [504])) = [0]
	*($3 + [488]) = (int_64)-1
	$4 = *($0)
	*($3 + [472]) = $4
	*($3 + [480]) = $4
	*($3 + [496]) = (int_64)0
	$5 = [0]
	$6 = CALL db_lowerbound_i64($4, $4, (int_64)4849507793113186304, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $188(($3 + [472]), $6)
	
.LABEL $label$1
	*(($3 + [520])) = [0]
	*($3 + [512]) = (int_64)0
	$6 = CALL $17([13733])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$10 }
	*($3 + [512]) = ($6 << [1])
	$7 = (($3 + [512]) | [1])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$8 = (($6 + [16]) & [-16])
	$7 = CALL $9($8)
	*($3 + [512]) = ($8 | [1])
	*($3 + [520]) = $7
	*($3 + [516]) = $6
	
.LABEL $label$9
	CALL memcpy($7, [13733], $6)
	
.LABEL $label$8
	$8 = ((int_32)$5 != (int_32)[0])
	$5 = [0]
	*(($7 + $6)) = [0]
	$4 = *($0)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$14 }
	$7 = *([0] + [13696])
	
.LOOP $label$16:
	*((($3 + [80]) + ($6 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$5 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$15 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$16 }
	
.LABEL $label$15
	*(($3 + [464])) = [0]
	*($3 + [456]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$13 }
	*($3 + [456]) = ($5 << [1])
	$7 = (($3 + [456]) | [1])
	goto $label$12 
	
.LABEL $label$14
	*(($3 + [464])) = [0]
	*($3 + [456]) = (int_64)0
	*($3 + [456]) = [0]
	$6 = (($3 + [456]) | [1])
	$5 = $6
	goto $label$11 
	
.LABEL $label$13
	$0 = (($5 + [16]) & [-16])
	$7 = CALL $9($0)
	*($3 + [456]) = ($0 | [1])
	*($3 + [464]) = $7
	*($3 + [460]) = $5
	
.LABEL $label$12
	$0 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$17:
	*(($7 + $6)) = *((($3 + [80]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$17 }
	$5 = ($7 + $5)
	$6 = (($3 + [456]) | [1])
	
.LABEL $label$11
	*($5) = [0]
	$5 = *($3 + [456])
	$7 = ($5 & [1])
	$6 = CALL $37(($3 + [512]), ( *($3 + [464]) ? $6 : $7 ), ( *($3 + [460]) ? uint_32($5 >> [1]) : $7 ))
	$5 = ($6 + [8])
	*((($3 + [544]) + [8])) = *($5)
	*($3 + [544]) = *($6)
	*($6) = (int_64)0
	*($5) = [0]
	$6 = CALL $35(($3 + [544]), [13753])
	$7 = ($6 + [8])
	*(($5 = (($3 + [80]) + [8]))) = *($7)
	*($3 + [80]) = *($6)
	*($6) = (int_64)0
	*($7) = [0]
	CALL eosio_assert($8, ( *($5) ? (($3 + [80]) | [1]) : (*($3 + [80]) & [1]) ))
	if ( (*($3 + [80]) & [1]) ){ goto $label$19 }
	if ( (*($3 + [544]) & [1]) ){ goto $label$18 }
	goto $label$6 
	
.LABEL $label$19
	CALL $11(*($5))
	if ( ((*($3 + [544]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$18
	CALL $11(*($3 + [552]))
	$6 = [1]
	if ( ((*($3 + [456]) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	CALL $26(($3 + [512]))
	
.LABEL $label$6
	$6 = [1]
	if ( (*($3 + [456]) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($3 + [512]) & $6) == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	CALL $11(*(($3 + [464])))
	if ( ((*($3 + [512]) & $6) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($3 + [520]))
	
.LABEL $label$2
	$6 = CALL $189(($3 + [472]), *($1), [11038])
	*((($3 + [80]) + [40])) = *(($6 + [40]))
	*((($3 + [80]) + [32])) = *(($6 + [32]))
	*((($3 + [80]) + [24])) = *(($6 + [24]))
	*((($3 + [80]) + [16])) = *(($6 + [16]))
	*($3 + [80]) = *($6)
	*($3 + [88]) = *(($6 + [8]))
	CALL $190((($3 + [80]) + [48]), ($6 + [48]))
	CALL memcpy((($3 + [80]) + [212]), ($6 + [212]), [66])
	$4 = *($6 + [288])
	*((($3 + [80]) + [300])) = (int_64)0
	*($3 + [376]) = [0]
	*($3 + [368]) = $4
	$5 = (*(($6 + [300])) - *($6 + [296]))
	if ( ($5 == 0) ){ goto $label$26 }
	$7 = int_32($5 >> [5])
	if ( ((uint_32)$7 >= (uint_32)[134217728]) ){ goto $label$25 }
	$5 = CALL $9($5)
	*((($3 + [80]) + [296])) = $5
	*(($3 + [384])) = ($5 + ($7 << [5]))
	*(($7 = (($3 + [80]) + [300]))) = $5
	$8 = *(($6 + [296]))
	$0 = (*(($6 + [300])) - $8)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$26 }
	CALL memcpy($5, $8, $0)
	*($7) = (*($7) + $0)
	
.LABEL $label$26
	*((($3 + [80]) + [312])) = *(($6 + [312]))
	*((($3 + [80]) + [328])) = *(($6 + [328]))
	*((($3 + [80]) + [336])) = *(($6 + [336]))
	*((($3 + [80]) + [344])) = *(($6 + [344]))
	*((($3 + [80]) + [352])) = *(($6 + [352]))
	*($3 + [434]) = *(($6 + [354]))
	*($3 + [400]) = *($6 + [320])
	$7 = *($3 + [434])
	*((($3 + [456]) + [8])) = [0]
	*($3 + [456]) = (int_64)0
	$6 = CALL $17([13764])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$27 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$30 }
	*($3 + [456]) = ($6 << [1])
	$5 = (($3 + [456]) | [1])
	if ( $6 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$0 = (($6 + [16]) & [-16])
	$5 = CALL $9($0)
	*($3 + [456]) = ($0 | [1])
	*($3 + [464]) = $5
	*($3 + [460]) = $6
	
.LABEL $label$29
	CALL memcpy($5, [13764], $6)
	
.LABEL $label$28
	*(($5 + $6)) = [0]
	CALL $42(($3 + [64]), *($1))
	$6 = *($3 + [64])
	$5 = ($6 & [1])
	$6 = CALL $37(($3 + [456]), ( *($3 + [72]) ? (($3 + [64]) | [1]) : $5 ), ( *($3 + [68]) ? uint_32($6 >> [1]) : $5 ))
	$5 = ($6 + [8])
	*((($3 + [512]) + [8])) = *($5)
	*($3 + [512]) = *($6)
	*($6) = (int_64)0
	*($5) = [0]
	$6 = CALL $35(($3 + [512]), [13771])
	$0 = ($6 + [8])
	*(($5 = (($3 + [544]) + [8]))) = *($0)
	*($3 + [544]) = *($6)
	*($6) = (int_64)0
	*($0) = [0]
	CALL eosio_assert($7, ( *($5) ? (($3 + [544]) | [1]) : (*($3 + [544]) & [1]) ))
	if ( (*($3 + [544]) & [1]) ){ goto $label$32 }
	if ( (*($3 + [512]) & [1]) ){ goto $label$31 }
	goto $label$24 
	
.LABEL $label$32
	CALL $11(*($5))
	if ( ((*($3 + [512]) & [1]) == 0) ){ goto $label$24 }
	
.LABEL $label$31
	CALL $11(*($3 + [520]))
	$6 = [1]
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$27
	CALL $26(($3 + [456]))
	
.LABEL $label$25
	CALL $45(($3 + [376]))
	
.LABEL $label$24
	$6 = [1]
	if ( (*($3 + [64]) & [1]) ){ goto $label$22 }
	
.LABEL $label$23
	if ( ((*($3 + [456]) & $6) == 0) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$22
	CALL $11(*(($3 + [72])))
	if ( ((*($3 + [456]) & $6) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	CALL $11(*($3 + [464]))
	
.LABEL $label$20
	*(($6 = (($3 + [32]) + [24]))) = *(($3 + [216]))
	*(($5 = (($3 + [32]) + [16]))) = *(($3 + [208]))
	*(($7 = ($3 + [16]))) = *(($2 + [16]))
	*(($0 = ($3 + [24]))) = *(($2 + [24]))
	*($3 + [40]) = *(($3 + [200]))
	*($3 + [32]) = *(($3 + [192]))
	*($3) = *($2)
	*($3 + [8]) = *(($2 + [8]))
	*((($3 + [544]) + [24])) = *($0)
	*((($3 + [544]) + [16])) = *($7)
	*((($3 + [512]) + [16])) = *($5)
	*((($3 + [512]) + [24])) = *($6)
	*($3 + [552]) = *($3 + [8])
	*($3 + [544]) = *($3)
	*($3 + [512]) = *($3 + [32])
	*($3 + [520]) = *($3 + [40])
	CALL eosio_assert((CALL $1(($3 + [512]), ($3 + [544]), [32]) == 0), [13897])
	$6 = *($3 + [376])
	if ( ($6 == 0) ){ goto $label$33 }
	*(($3 + [380])) = $6
	CALL $11($6)
	
.LABEL $label$33
	$0 = *(($3 + [280]))
	if ( ($0 == 0) ){ goto $label$34 }
	$2 = ($3 + [284])
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$36 }
	
.LOOP $label$37:
	$5 = ($6 + [-16])
	$7 = *(($6 + [-12]))
	if ( ($7 == 0) ){ goto $label$38 }
	*(($6 + [-8])) = $7
	CALL $11($7)
	
.LABEL $label$38
	$6 = $5
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$37 }
	$6 = *(($3 + [280]))
	goto $label$35 
	
.LABEL $label$36
	$6 = $0
	
.LABEL $label$35
	*($2) = $0
	CALL $11($6)
	
.LABEL $label$34
	if ( (*(($3 + [276])) == 0) ){ goto $label$39 }
	$6 = *(($3 + [264]))
	if ( ($6 == 0) ){ goto $label$39 }
	*(($3 + [268])) = $6
	CALL $11($6)
	
.LABEL $label$39
	CALL $191(($3 + [496]))
	$global$0 = ($3 + [576])
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $171 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)3607571210637934593, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [296]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [13846])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $77($7, CALL $fimport$27(*($7), *($7 + [8]), (int_64)3607571210637934592, $6))
	if ( ((int_32)*($4 + [296]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$2
	*(($4 + [308])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $172 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = *($1)
	$5 = CALL db_idx64_lowerbound(*($4), *($4 + [8]), (int_64)-4157495357179166720, $3, ($3 + [8]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	
.LOOP $label$7:
	$4 = ($9 + [-24])
	$10 = *($4)
	if ( ((int_64)(uint_64)*($10 + [8]) >> (uint_64)(int_64)8) == (int_64)$6) ){ goto $label$6 }
	$9 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	if ( ((int_32)*($10 + [248]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [13846])
	*(($10 + [256])) = $5
	if ( $10 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$10 = CALL $98($7, CALL $fimport$27(*($7), *($7 + [8]), (int_64)-4157495357179166720, $6))
	if ( ((int_32)*($10 + [248]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$4
	*(($10 + [256])) = $5
	if ( ($10 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0) = $1
	if ( ((int_64)*($2) != (int_64)(uint_64)*($10 + [112]) >> (uint_64)(int_64)8)) ){ goto $label$1 }
	*(($0 + [4])) = $10
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$2
	*($0 + [4]) = [0]
	*($0) = $1
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*(($0 + [4])) = [0]
	$global$0 = ($3 + [16])
}

void .FUNC $173 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [14713])
	
.LABEL $label$3
	$6 = (int_64)
	*($1) = $6(*($1) - *($2)))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14761])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14783])
	
.LABEL $label$5
	$2 = ($1 + [8])
	if ( ((int_64)$5 == (int_64)(uint_64)*($2) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$6
	$7 = $3
	$3 = ($7 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	*($4 + [8]) = *($2)
	CALL memcpy(($7 + [-8]), ($4 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $3, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [16])
}

int_32 .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	*($3) = (*($3) + [8])
	$0 = CALL $331($0, ($1 + [32]))
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $179 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $46($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $192(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $11($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

int_32 .FUNC $237 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [304])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [288]) = (int_64)0
	*($4 + [280]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$5
	$3 = ($2 + $7)
	CALL memcpy(($4 + [280]), $2, [8])
	*($4 + [32]) = (int_64)0
	$8 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$6
	CALL memcpy(($4 + [32]), $8, [8])
	*(($8 = (($4 + [280]) + [8]))) = *($4 + [32])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [16])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$9 = CALL $56(($4 + [32]), $0, $1, $4)
	$0 = *($4 + [280])
	*($4 + [296]) = *($8)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $0), (int_64 ($4 + [296])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $4($2)
	
.LABEL $label$8
	CALL $58($9)
	$global$0 = ($4 + [304])
	return [1]
}

void .FUNC $95 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($5 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($5 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	*($1 + [136]) = *(*($3))
	$6 = *($3 + [4])
	*(($1 + [152])) = *(($6 + [8]))
	*($1 + [144]) = *($6)
	*($1 + [160]) = *(*($3 + [8]))
	$7 = *($1)
	$3 = *($1 + [100])
	$6 = ( *(($1 + [104])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [253])
	$8 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [100])
	$9 = ($1 + [160])
	$10 = ($1 + [144])
	$11 = (($5 + [16]) + [8])
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	$12 = *($1 + [112])
	$12 = ( *(($1 + [116])) ? uint_32($12 >> [1]) : ($12 & [1]) )
	$3 = ($12 + $3)
	$8 = (CASTING uint_64)(uint_32 $12)
	$12 = ($1 + [112])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $2($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [32]) = $5
	*($5 + [72]) = $6
	*($5 + [76]) = $12
	*($5 + [88]) = $10
	*($5 + [92]) = $9
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	*($5 + [52]) = ($1 + [32])
	*($5 + [56]) = ($1 + [48])
	*($5 + [60]) = ($1 + [64])
	*($5 + [64]) = ($1 + [80])
	*($5 + [68]) = ($1 + [96])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [136])
	*($5 + [96]) = ($1 + [168])
	*($5 + [100]) = ($1 + [184])
	*($5 + [104]) = ($1 + [200])
	*($5 + [108]) = ($1 + [208])
	*($5 + [112]) = ($1 + [224])
	*($5 + [120]) = ($1 + [240])
	*($5 + [116]) = ($1 + [232])
	CALL $86(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [300]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL $4($4)
	
.LABEL $label$7
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($5 + [16]), ($5 + [40]), [8]) == 0) ){ goto $label$9 }
	$4 = ($1 + [304])
	$3 = *($4)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$10 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($5 + [32]), $7)
	*($4) = $3
	
.LABEL $label$10
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$9
	*($5 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($11, ($5 + [40]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [308])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$12 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($5 + [32]), $7)
	*($1) = $3
	
.LABEL $label$12
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$11
	$global$0 = ($5 + [128])
}

int_32 .FUNC $235 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [288])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [280]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$5
	CALL memcpy(($4 + [280]), $2, [8])
	*(($4 + [8])) = $3
	*($4 + [20]) = ($2 + [8])
	*($4 + [16]) = $2
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $56(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($4 + [280])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $4($2)
	
.LABEL $label$7
	CALL $58($8)
	$global$0 = ($4 + [288])
	return [1]
}

void .FUNC $97 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_64 $10, int_32 $11, int_32 $12)
{
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_32 $18
	int_32 $19
	$13 = ($global$0 - [128])
	$global$0 = $13
	*($13 + [72]) = $2
	*($13 + [80]) = $1
	*($13 + [64]) = $3
	*($13 + [52]) = $9
	*($13 + [51]) = $12
	*($13 + [56]) = $10
	CALL require_auth(*($0))
	CALL eosio_assert(CALL $fimport$29($10), [9142])
	$10 = (uint_64)$3 >> (uint_64)(int_64)8)
	$12 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$14 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$10 = $14
	$9 = [1]
	$15 = $12
	$12 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$10 = $14
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$9 = ((int_32)$12 < (int_32)[6])
	$15 = ($12 + [1])
	$12 = $15
	if ( $9 ){ goto $label$5 }
	$9 = [1]
	$12 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [9179])
	$10 = (uint_64)$4 >> (uint_64)(int_64)8)
	$12 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$14 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$10 = $14
	$9 = [1]
	$15 = $12
	$12 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$10 = $14
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$9 = ((int_32)$12 < (int_32)[6])
	$15 = ($12 + [1])
	$12 = $15
	if ( $9 ){ goto $label$10 }
	$9 = [1]
	$12 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$9 = [0]
	
.LABEL $label$6
	CALL eosio_assert($9, [9205])
	CALL eosio_assert(((int_32)((CASTING uint_32)(uint_64 $3) & [255]) == (int_32)((CASTING uint_32)(uint_64 $4) & [255])), [9230])
	$3 = *($5 + [8])
	$16 = [0]
	$9 = [0]
	$17 = *($5)
	if ( ((uint_64)((int_64)$17 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$10 = (uint_64)$3 >> (uint_64)(int_64)8)
	$12 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$14 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$10 = $14
	$9 = [1]
	$15 = $12
	$12 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$10 = $14
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$9 = ((int_32)$12 < (int_32)[6])
	$15 = ($12 + [1])
	$12 = $15
	if ( $9 ){ goto $label$15 }
	$9 = [1]
	$12 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$9 = [0]
	
.LABEL $label$11
	CALL eosio_assert($9, [10084])
	CALL eosio_assert(((int_64)$17 > (int_64)0), [10103])
	if ( ((int_64)$3 != (int_64)$4) ){ goto $label$16 }
	if ( ((int_64)*($6 + [8]) != (int_64)$4) ){ goto $label$16 }
	if ( ((int_64)*($7 + [8]) != (int_64)$4) ){ goto $label$16 }
	if ( ((int_64)*($8 + [8]) != (int_64)$4) ){ goto $label$16 }
	if ( ((int_64)*($11 + [8]) != (int_64)$4) ){ goto $label$16 }
	$10 = *($6)
	if ( ((int_64)$10 < (int_64)1) ){ goto $label$16 }
	$14 = *($7)
	if ( ((int_64)$14 <= (int_64)$10) ){ goto $label$16 }
	if ( ((int_64)*($8) <= (int_64)$14) ){ goto $label$16 }
	$16 = ((int_32)(CASTING uint_32)(uint_64 (uint_64)*($11) >> (uint_64)(int_64)63)) ^ (int_32)[1])
	
.LABEL $label$16
	CALL eosio_assert($16, [9296])
	CALL eosio_assert(((int_64)$1 != (int_64)0), [8739])
	$18 = ($0 + [88])
	$9 = *(($0 + [116]))
	$16 = *(($0 + [112]))
	if ( ((int_32)$16 == (int_32)$9) ){ goto $label$18 }
	
.LOOP $label$20:
	$12 = ($9 + [-24])
	$15 = *($12)
	if ( ((int_64)*($15) == (int_64)$1) ){ goto $label$19 }
	$9 = $12
	if ( ((int_32)$16 != (int_32)$12) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	if ( ((int_32)$16 == (int_32)$9) ){ goto $label$18 }
	if ( ((int_32)*($15 + [64]) == (int_32)$18) ){ goto $label$17 }
	CALL eosio_assert([0], [13846])
	goto $label$17 
	
.LABEL $label$18
	$15 = [0]
	$12 = CALL db_find_i64(*($18), *(($0 + [96])), (int_64)-6154885545578332160, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$17 }
	$15 = CALL $64($18, $12)
	if ( ((int_32)*($15 + [64]) == (int_32)$18) ){ goto $label$17 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$17
	$19 = [0]
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [9050])
	CALL eosio_assert(((int_64)$2 != (int_64)0), [10131])
	CALL eosio_assert(((int_64)((int_64)*($11) * (int_64)10) <= (int_64)*($6)), [10167])
	$18 = ($0 + [208])
	$10 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8)
	$9 = *(($0 + [236]))
	$15 = *(($0 + [232]))
	if ( ((int_32)$15 == (int_32)$9) ){ goto $label$22 }
	
.LOOP $label$24:
	$12 = ($9 + [-24])
	$16 = *($12)
	if ( ((int_64)(uint_64)*($16 + [8]) >> (uint_64)(int_64)8) == (int_64)$10) ){ goto $label$23 }
	$9 = $12
	if ( ((int_32)$15 != (int_32)$12) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	if ( ((int_32)$15 == (int_32)$9) ){ goto $label$22 }
	if ( ((int_32)*($16 + [248]) == (int_32)$18) ){ goto $label$25 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$25
	$19 = $16
	goto $label$21 
	
.LABEL $label$22
	$12 = CALL db_find_i64(*($18), *(($0 + [216])), (int_64)-4157495357179166720, $10)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$21 }
	$19 = CALL $98($18, $12)
	if ( ((int_32)*($19 + [248]) == (int_32)$18) ){ goto $label$21 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$21
	CALL eosio_assert(($19 == 0), [9566])
	$10 = *($0)
	*($13 + [4]) = $6
	*($13) = $5
	*($13 + [8]) = $7
	*($13 + [12]) = $8
	*($13 + [36]) = $11
	*($13 + [16]) = ($13 + [52])
	*($13 + [20]) = ($13 + [56])
	*($13 + [24]) = ($13 + [80])
	*($13 + [28]) = ($13 + [72])
	*($13 + [32]) = ($13 + [64])
	*($13 + [40]) = ($13 + [51])
	*($13 + [120]) = $10
	if ( ((int_64)*(($0 + [208])) == (int_64)CALL current_receiver()) ){ goto $label$26 }
	CALL eosio_assert([0], [14370])
	
.LABEL $label$26
	*($13 + [96]) = $18
	*($13 + [100]) = $13
	*($13 + [104]) = ($13 + [120])
	*(($12 = CALL $9([264])) + [8]) = (int_64)0
	*($12) = (int_64)0
	*($12 + [16]) = (int_64)0
	*($12 + [24]) = (int_64)0
	*($12 + [32]) = (int_64)0
	*($12 + [40]) = (int_64)0
	*($12 + [48]) = (int_64)0
	*($12 + [56]) = (int_64)0
	*($12 + [64]) = (int_64)0
	*($12 + [72]) = (int_64)0
	*($12 + [88]) = (int_64)0
	*($12 + [96]) = (int_64)0
	*($12 + [104]) = (int_64)0
	*($12 + [112]) = (int_64)0
	*($12 + [120]) = (int_64)0
	*($12 + [128]) = (int_64)0
	*($12 + [136]) = (int_64)0
	*($12 + [144]) = (int_64)0
	*($12 + [160]) = (int_64)0
	*($12 + [208]) = (int_64)0
	*($12 + [168]) = (int_64)0
	*($12 + [216]) = (int_64)0
	*($12 + [232]) = (int_64)0
	*($12 + [240]) = (int_64)0
	*($12 + [248]) = $18
	CALL $99(($13 + [96]), $12)
	*($13 + [112]) = $12
	$10 = (uint_64)*($12 + [8]) >> (uint_64)(int_64)8
	*($13 + [96]) = $10)
	$15 = *($12 + [252])
	*($13 + [92]) = $15
	$16 = ($0 + [236])
	$9 = *($16)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [240]))) ){ goto $label$29 }
	*($9 + [8]) = $10
	*($9 + [16]) = $15
	*($13 + [112]) = [0]
	*($9) = $12
	*($16) = ($9 + [24])
	$12 = *($13 + [112])
	*($13 + [112]) = [0]
	if ( $12 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL $100(($0 + [232]), ($13 + [112]), ($13 + [96]), ($13 + [92]))
	$12 = *($13 + [112])
	*($13 + [112]) = [0]
	if ( ($12 == 0) ){ goto $label$27 }
	
.LABEL $label$28
	CALL $11($12)
	
.LABEL $label$27
	CALL $101($0, (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8))
	$global$0 = ($13 + [128])
}

void .FUNC $90 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [8]) = $3
	$5 = CALL $81($0, $1)
	CALL require_auth(*($0))
	$7 = *($2)
	$6 = CALL $17([9897])
	if ( ((int_32)$6 != (int_32)( *($2 + [4]) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$2 }
	if ( (CALL $41($2, [0], [-1], [9897], $6) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9082])
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$1
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)-1) <= (int_64)500), [9916])
	$3 = *($0)
	*($4) = ($4 + [8])
	CALL $91(($0 + [168]), $5, $3, $4)
	$global$0 = ($4 + [16])
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [8]) = *(*($0 + [4]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13474])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13474])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13474])
	$3 = *($5)
	
.LABEL $label$10
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [13474])
	$3 = *($5)
	
.LABEL $label$12
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$13 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	CALL $331(*($1), *($0 + [32]))
	CALL $331(*($1), *($0 + [36]))
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$17
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [52])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$18
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$19
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [13474])
	$3 = *($5)
	
.LABEL $label$20
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [60])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$21
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [13474])
	$3 = *($5)
	
.LABEL $label$22
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$23
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [68])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$24 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$24
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$25 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$25
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [72])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$26 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$26
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [8]) = *(*($0 + [76]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$27 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$27
	CALL memcpy($5, ($2 + [8]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$0 = *($0 + [80])
	*($2) = *($1)
	*($2 + [12]) = ($0 + [4])
	*($2 + [8]) = $0
	*($2 + [16]) = ($0 + [8])
	*($2 + [20]) = ($0 + [16])
	*($2 + [24]) = ($0 + [32])
	*($2 + [28]) = ($0 + [40])
	CALL $335(($2 + [8]), $2)
	$global$0 = ($2 + [32])
}

int_32 .FUNC $232 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [464])
	$global$0 = $3
	*(($4 = $3) + [456]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $2($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*(($4 + [344])) = (int_64)0
	*(($4 + [336])) = (int_64)0
	*(($4 + [328])) = (int_64)0
	*(($4 + [360])) = (int_64)0
	*(($4 + [368])) = (int_64)0
	*(($4 + [384])) = (int_64)0
	*(($4 + [400])) = (int_64)0
	*(($4 + [440])) = (int_64)0
	*(($4 + [432])) = (int_64)0
	*(($4 + [424])) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [376]) = (int_64)0
	*($4 + [392]) = (int_64)0
	*($4 + [416]) = (int_64)0
	*($4 + [292]) = $3
	*($4 + [288]) = $3
	*($4 + [296]) = ($3 + $2)
	*($4 + [16]) = ($4 + [288])
	*($4 + [40]) = ($4 + [304])
	CALL $274(($4 + [40]), ($4 + [16]))
	$5 = *($4 + [296])
	*((($4 + [24]) + [8])) = $5
	*(($4 + [8])) = $5
	$6 = *($4 + [288])
	*($4) = $6
	*($4 + [24]) = $6
	$5 = CALL $56(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $5
	*($4 + [20]) = ($4 + [456])
	CALL $275(($4 + [16]), ($4 + [304]))
	if ( ($2 <= [513]) ){ goto $label$5 }
	CALL $4($3)
	
.LABEL $label$5
	CALL $58($5)
	$3 = *(($4 + [392]))
	if ( ($3 == 0) ){ goto $label$6 }
	*(($4 + [396])) = $3
	CALL $11($3)
	
.LABEL $label$6
	$3 = *(($4 + [380]))
	if ( ($3 == 0) ){ goto $label$7 }
	*(($4 + [384])) = $3
	CALL $11($3)
	
.LABEL $label$7
	$3 = *(($4 + [364]))
	if ( ($3 == 0) ){ goto $label$8 }
	*(($4 + [368])) = $3
	CALL $11($3)
	
.LABEL $label$8
	$3 = *(($4 + [352]))
	if ( ($3 == 0) ){ goto $label$9 }
	*(($4 + [356])) = $3
	CALL $11($3)
	
.LABEL $label$9
	$global$0 = ($4 + [464])
	return [1]
}

int_32 .FUNC $231 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [336])
	$global$0 = $3
	*(($4 = $3) + [328]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [320])) = [0]
	*($4 + [304]) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [324]) = [0]
	*($4 + [292]) = $2
	*($4 + [288]) = $2
	*($4 + [296]) = ($2 + $5)
	*($4 + [16]) = ($4 + [288])
	*($4 + [40]) = ($4 + [304])
	CALL $251(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [296])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [288])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $56(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [328])
	CALL $252(($4 + [16]), ($4 + [304]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $58($3)
	if ( ((*($4 + [312]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [320])))
	
.LABEL $label$5
	$global$0 = ($4 + [336])
	return [1]
}

void .FUNC $93 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($1 + [232]) = *(*($3))
	*($5 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($5 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$3 = *($1 + [100])
	$6 = ( *(($1 + [104])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [253])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [100])
	$8 = ($1 + [232])
	$9 = *($1)
	$10 = (($5 + [16]) + [8])
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	$11 = *($1 + [112])
	$11 = ( *(($1 + [116])) ? uint_32($11 >> [1]) : ($11 & [1]) )
	$3 = ($11 + $3)
	$7 = (CASTING uint_64)(uint_32 $11)
	$11 = ($1 + [112])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $2($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [32]) = $5
	*($5 + [72]) = $6
	*($5 + [76]) = $11
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	*($5 + [52]) = ($1 + [32])
	*($5 + [56]) = ($1 + [48])
	*($5 + [60]) = ($1 + [64])
	*($5 + [64]) = ($1 + [80])
	*($5 + [68]) = ($1 + [96])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [136])
	*($5 + [88]) = ($1 + [144])
	*($5 + [92]) = ($1 + [160])
	*($5 + [96]) = ($1 + [168])
	*($5 + [100]) = ($1 + [184])
	*($5 + [104]) = ($1 + [200])
	*($5 + [108]) = ($1 + [208])
	*($5 + [112]) = ($1 + [224])
	*($5 + [120]) = ($1 + [240])
	*($5 + [116]) = $8
	CALL $86(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [300]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL $4($4)
	
.LABEL $label$7
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($5 + [16]), ($5 + [40]), [8]) == 0) ){ goto $label$9 }
	$4 = ($1 + [304])
	$3 = *($4)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$10 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($5 + [32]), $9)
	*($4) = $3
	
.LABEL $label$10
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$9
	*($5 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($10, ($5 + [40]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [308])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$12 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($5 + [32]), $9)
	*($1) = $3
	
.LABEL $label$12
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$11
	$global$0 = ($5 + [128])
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14485])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14530])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [14580])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($5 + [16])))
	
.LABEL $label$13
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$16 }
	CALL $11(*(($8 + [16])))
	
.LABEL $label$16
	CALL $11($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [68]))
}

void .FUNC $85 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($4 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($4 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$2 = *($2)
	*($1 + [80]) = *($2)
	*(($1 + [88])) = *(($2 + [8]))
	$2 = *($1 + [100])
	$5 = ( *(($1 + [104])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [253])
	$6 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [100])
	$7 = ($1 + [80])
	$8 = *($1)
	$9 = (($4 + [16]) + [8])
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$10 = *($1 + [112])
	$10 = ( *(($1 + [116])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$2 = ($10 + $2)
	$6 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [112])
	
.LOOP $label$4:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$6 }
	$3 = CALL $2($2)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [32]) = $4
	*($4 + [64]) = $7
	*($4 + [72]) = $5
	*($4 + [76]) = $10
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [32])
	*($4 + [56]) = ($1 + [48])
	*($4 + [60]) = ($1 + [64])
	*($4 + [68]) = ($1 + [96])
	*($4 + [80]) = ($1 + [128])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [144])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [168])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [200])
	*($4 + [108]) = ($1 + [208])
	*($4 + [112]) = ($1 + [224])
	*($4 + [120]) = ($1 + [240])
	*($4 + [116]) = ($1 + [232])
	CALL $86(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [300]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$7 }
	CALL $4($3)
	
.LABEL $label$7
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($4 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$9 }
	$3 = ($1 + [304])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$10 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($4 + [32]), $8)
	*($3) = $2
	
.LABEL $label$10
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$9
	*($4 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($9, ($4 + [40]), [8]) == 0) ){ goto $label$11 }
	$1 = ($1 + [308])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$12 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($4 + [32]), $8)
	*($1) = $2
	
.LABEL $label$12
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$11
	$global$0 = ($4 + [128])
}

int_32 .FUNC $58 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $59(($0 + [32]), ($0 + [72]), *($0))
	$1 = *(($0 + [232]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [236])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $11($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [232]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$1
	$1 = *(($0 + [192]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [196])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($3 + [120])))
	
.LABEL $label$11
	if ( ((*($3 + [100]) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($3 + [108])))
	
.LABEL $label$12
	CALL $11($3)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [192]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$6
	$1 = *(($0 + [152]))
	if ( ($1 == 0) ){ goto $label$13 }
	$2 = ($0 + [156])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$17 }
	CALL $11($4)
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$16 }
	$3 = *(($0 + [152]))
	goto $label$14 
	
.LABEL $label$15
	$3 = $1
	
.LABEL $label$14
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$13
	$1 = *(($0 + [112]))
	if ( ($1 == 0) ){ goto $label$18 }
	$2 = ($0 + [116])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$20 }
	
.LOOP $label$21:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$22 }
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$23 }
	CALL $11(*(($4 + [16])))
	
.LABEL $label$23
	CALL $11($4)
	
.LABEL $label$22
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$21 }
	$3 = *(($0 + [112]))
	goto $label$19 
	
.LABEL $label$20
	$3 = $1
	
.LABEL $label$19
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$18
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$24 }
	$2 = ($0 + [60])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$26 }
	
.LOOP $label$27:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$28 }
	CALL $11($4)
	
.LABEL $label$28
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$27 }
	$3 = *(($0 + [56]))
	goto $label$25 
	
.LABEL $label$26
	$3 = $1
	
.LABEL $label$25
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$24
	return $0
}

void .FUNC $59 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [16]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $57($0, $4)
	if ( ((int_32)*($4 + [16]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$2
	*($3) = $1
	CALL $60($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $61($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $271 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $27(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $27(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $270 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $257(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $277 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $5, [8])
	*($0 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($0 + [16])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$1 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $1, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $276 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [13842])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [5])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $294($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [5]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[31]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [32])
	$2 = (*($6) + [32])
	*($6) = $2
	$7 = ($7 + [32])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $275 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [208])
	$global$0 = $2
	*(($2 + [112])) = *(($1 + [32]))
	*((($2 + [96]) + [24])) = *(($1 + [40]))
	*($2 + [80]) = (int_64)0
	*($2 + [88]) = [0]
	*($2 + [96]) = *($1 + [16])
	*($2 + [104]) = *(($1 + [24]))
	$3 = *($1)
	$4 = (*(($1 + [52])) - *($1 + [48]))
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$4 }
	$5 = CALL $9($4)
	*(($2 + [88])) = ($5 + $4)
	*($2 + [80]) = $5
	*($2 + [84]) = $5
	$6 = *(($1 + [48]))
	$4 = (*(($1 + [52])) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($5, $6, $4)
	*($2 + [84]) = ($5 + $4)
	
.LABEL $label$5
	*($2 + [72]) = [0]
	*($2 + [64]) = (int_64)0
	$4 = (*(($1 + [64])) - *($1 + [60]))
	if ( ($4 == 0) ){ goto $label$6 }
	$5 = int_32($4 >> [5])
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$3 }
	$4 = CALL $9($4)
	*(($2 + [72])) = ($4 + ($5 << [5]))
	*($2 + [64]) = $4
	*($2 + [68]) = $4
	$6 = *(($1 + [60]))
	$5 = (*(($1 + [64])) - $6)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($4, $6, $5)
	*($2 + [68]) = ($4 + $5)
	
.LABEL $label$6
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = [0]
	$6 = *($1 + [72])
	$4 = (*(($1 + [80])) - *($1 + [76]))
	if ( ($4 == 0) ){ goto $label$7 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL $9($4)
	*(($2 + [56])) = ($5 + $4)
	*($2 + [48]) = $5
	*($2 + [52]) = $5
	$7 = *(($1 + [76]))
	$4 = (*(($1 + [80])) - $7)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($5, $7, $4)
	*($2 + [52]) = ($5 + $4)
	
.LABEL $label$7
	*($2 + [40]) = [0]
	*($2 + [32]) = (int_64)0
	$4 = (*(($1 + [92])) - *($1 + [88]))
	if ( ($4 == 0) ){ goto $label$8 }
	$5 = int_32($4 >> [5])
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$1 }
	$4 = CALL $9($4)
	*(($2 + [40])) = ($4 + ($5 << [5]))
	*($2 + [32]) = $4
	*($2 + [36]) = $4
	$7 = *(($1 + [88]))
	$5 = (*(($1 + [92])) - $7)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($4, $7, $5)
	*($2 + [36]) = ($4 + $5)
	
.LABEL $label$8
	*(($4 = ($2 + [16]))) = *(($1 + [128]))
	*(($5 = ($2 + [24]))) = *(($1 + [136]))
	*($2) = *($1 + [112])
	*($2 + [8]) = *(($1 + [120]))
	$1 = *($1 + [100])
	*((($2 + [160]) + [24])) = *($5)
	*((($2 + [160]) + [16])) = *($4)
	*((($2 + [128]) + [24])) = *((($2 + [96]) + [24]))
	*((($2 + [128]) + [16])) = *((($2 + [96]) + [16]))
	*($2 + [200]) = $3
	*($2 + [168]) = *($2 + [8])
	*($2 + [160]) = *($2)
	*($2 + [136]) = *($2 + [104])
	*($2 + [128]) = *($2 + [96])
	*($2 + [196]) = $6
	*($2 + [192]) = $1
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*($0) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$9 }
	$1 = *((*($0) + $1))
	
.LABEL $label$9
	CALL void $0((int_32 ($2 + [200])), (int_32 ($2 + [128])), (int_32 ($2 + [80])), (int_32 ($2 + [64])), (int_32 ($2 + [196])), (int_32 ($2 + [48])), (int_32 ($2 + [32])), (int_32 ($2 + [192])), (int_32 ($2 + [160])), (int_32 $1))
	$1 = *($2 + [32])
	if ( ($1 == 0) ){ goto $label$10 }
	*($2 + [36]) = $1
	CALL $11($1)
	
.LABEL $label$10
	$1 = *($2 + [48])
	if ( ($1 == 0) ){ goto $label$11 }
	*($2 + [52]) = $1
	CALL $11($1)
	
.LABEL $label$11
	$1 = *($2 + [64])
	if ( ($1 == 0) ){ goto $label$12 }
	*($2 + [68]) = $1
	CALL $11($1)
	
.LABEL $label$12
	$1 = *($2 + [80])
	if ( ($1 == 0) ){ goto $label$13 }
	*($2 + [84]) = $1
	CALL $11($1)
	
.LABEL $label$13
	$global$0 = ($2 + [208])
	return (unreachable)
	
.LABEL $label$4
	CALL $45(($2 + [80]))
	
.LABEL $label$3
	CALL $45(($2 + [64]))
	
.LABEL $label$2
	CALL $45(($2 + [48]))
	
.LABEL $label$1
	CALL $45(($2 + [32]))
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $274 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
	CALL $279(*($1), ($4 + [48]))
	CALL $276(*($1), ($4 + [60]))
	*($2 + [8]) = $4
	CALL $357(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $50 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($1 & [1])
	$1 = *($0)
	$2 = ( *($0 + [4]) ? uint_32($1 >> [1]) : $1 )
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ($0 + [1])
	$4 = ( *($0 + [8]) ? $3 : $1 )
	$1 = $4
	$5 = CALL $17([8679])
	if ( ($5 == 0) ){ goto $label$3 }
	$1 = $4
	
.LOOP $label$4:
	if ( (CALL $18([8679], *($1), $5) == 0) ){ goto $label$3 }
	$6 = [-1]
	$1 = ($1 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$6 = ($1 - $4)
	
.LABEL $label$2
	$2 = [0]
	CALL $40($0, [0], $6)
	$6 = ($1 & [1])
	$1 = *($0)
	$1 = ( *(($0 + [4])) ? uint_32($1 >> [1]) : $6 )
	$6 = ( *(($0 + [8])) ? $3 : $6 )
	$5 = CALL $17([8679])
	if ( ($5 == 0) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($6 + $1)
	$1 = ($1 + [-1])
	if ( CALL $18([8679], *(($2 + [-1])), $5) ){ goto $label$9 }
	$1 = ($6 + $1)
	goto $label$7 
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$5 }
	$1 = (($6 + $1) + [-1])
	
.LABEL $label$7
	$2 = (([1] - $6) + $1)
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	
.LABEL $label$5
	CALL $40($0, $2, [-1])
	
.LABEL $label$1
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = [0]
	*($2 + [72]) = [0]
	*($2 + [64]) = (int_64)0
	$4 = CALL transaction_size()
	if ( ($4 == 0) ){ goto $label$1 }
	CALL $46(($2 + [64]), $4)
	$3 = *($2 + [64])
	
.LABEL $label$1
	CALL read_transaction($3, $4)
	CALL sha256(*($2 + [64]), $4, $0)
	if ( ($1 == 0) ){ goto $label$2 }
	$3 = *($2 + [64])
	$5 = CALL current_time()
	*(($2 + [28])) = (int_64)0
	*(($2 + [44])) = (int_64)0
	*(($2 + [52])) = (int_64)0
	*($2 + [12]) = [0]
	*($2 + [16]) = [0]
	*($2 + [20 align=4]) = (int_64)0
	*($2 + [36 align=4]) = (int_64)0
	*($2) = ((CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000)) + [60])
	*($2 + [84]) = $3
	*($2 + [80]) = $3
	*($2 + [88]) = ($3 + $4)
	CALL $52(($2 + [80]), $2)
	CALL $54(CALL $53(CALL $53(($2 + [80]), ($2 + [24])), ($2 + [36])), ($2 + [48]))
	CALL eosio_assert(((int_32)(*(($2 + [40])) - *($2 + [36])) == (int_32)[40]), [8681])
	CALL $55($2)
	
.LABEL $label$2
	$4 = *($2 + [64])
	if ( ($4 == 0) ){ goto $label$3 }
	*($2 + [68]) = $4
	CALL $11($4)
	
.LABEL $label$3
	$global$0 = ($2 + [96])
}

int_32 .FUNC $279 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [13842])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $46($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [13842])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$5 = *($1)
	$7 = *($1 + [4])
	$6 = ((int_32)($7 - $5) / (int_32)[40])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $325($1, ($2 - $6))
	$7 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($5 + ((int_32)$2 * (int_32)[40]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = *(($7 + [-12]))
	if ( ($2 == 0) ){ goto $label$9 }
	*(($7 + [-8])) = $2
	CALL $11($2)
	
.LABEL $label$9
	$2 = ($7 + [-40])
	$6 = *(($7 + [-24]))
	if ( ($6 == 0) ){ goto $label$10 }
	*(($7 + [-20])) = $6
	CALL $11($6)
	
.LABEL $label$10
	$7 = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $5
	$7 = $5
	
.LABEL $label$6
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$11:
	CALL $326($0, $2)
	$2 = ($2 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [13842])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$6 = *($1)
	$5 = *($1 + [4])
	$7 = int_32(($5 - $6) >> [4])
	if ( ((uint_32)$7 >= (uint_32)$2) ){ goto $label$5 }
	CALL $314($1, ($2 - $7))
	$5 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$7 <= (uint_32)$2) ){ goto $label$6 }
	$6 = ($6 + ($2 << [4]))
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($5 + [-16])
	$7 = *(($5 + [-12]))
	if ( ($7 == 0) ){ goto $label$9 }
	*(($5 + [-8])) = $7
	CALL $11($7)
	
.LABEL $label$9
	$5 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $6
	$5 = $6
	
.LABEL $label$6
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($0 + [4])
	$4 = ($0 + [8])
	
.LOOP $label$10:
	$6 = *($7)
	if ( ((uint_32)(*($4) - $6) > (uint_32)[1]) ){ goto $label$11 }
	CALL eosio_assert([0], [13837])
	$6 = *($7)
	
.LABEL $label$11
	CALL memcpy($2, $6, [2])
	*($7) = (*($7) + [2])
	CALL $279($0, ($2 + [4]))
	$2 = ($2 + [16])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$10 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $55 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $11($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $11($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $11($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $11($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $11($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $56 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($5 = ($4 + [8]))) = *(($3 + [8]))
	*($4) = *($3)
	*($0) = $1
	*($0 + [8]) = $2
	$3 = *($5)
	*((($4 + [16]) + [8])) = $3
	$2 = *($4)
	*($0 + [16]) = $2
	*(($0 + [24])) = $3
	*($4 + [16]) = $2
	*(($0 + [40])) = $1
	*($0 + [32]) = $1
	*(($0 + [48])) = (int_64)-1
	$2 = (int_64)0
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = [0]
	*($0 + [72]) = (int_64)0
	$3 = [1]
	*(($6 = ($0 + [80]))) = [1]
	*($0 + [88]) = $1
	*(($0 + [96])) = $1
	*(($0 + [104])) = (int_64)-1
	*(($0 + [112])) = (int_64)0
	*(($0 + [120])) = [0]
	*($0 + [128]) = $1
	*(($0 + [136])) = $1
	*(($0 + [144])) = (int_64)-1
	*(($0 + [152])) = (int_64)0
	*(($0 + [160])) = [0]
	*($0 + [168]) = $1
	*(($0 + [184])) = (int_64)-1
	*(($0 + [176])) = $1
	*(($0 + [192])) = (int_64)0
	*(($0 + [200])) = [0]
	*(($0 + [204])) = [0]
	*($0 + [208]) = $1
	*(($0 + [216])) = $1
	*(($0 + [224])) = (int_64)-1
	*(($0 + [232])) = (int_64)0
	*(($0 + [240])) = [0]
	*(($0 + [244])) = [0]
	$5 = CALL db_find_i64($1, $1, (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$3 = ($0 + [32])
	if ( ((int_32)*(CALL $57($3, $5) + [16]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$3
	$5 = *(($0 + [60]))
	if ( ((int_32)$5 == (int_32)*(($0 + [56]))) ){ goto $label$5 }
	$5 = *(($5 + [-24]))
	if ( ((int_32)*($5 + [16]) == (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$6
	if ( $5 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$5
	$5 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $57($3, $5)
	if ( ((int_32)*($5 + [16]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$4
	$3 = *($5 + [8])
	$2 = *($5)
	
.LABEL $label$2
	*($6) = $3
	*(($0 + [72])) = $2
	$global$0 = ($4 + [32])
	return $0
	
.LABEL $label$1
	CALL eosio_assert([0], [14154])
	return (unreachable)
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13814])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([32])) + [8]) = [1]
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	$7 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$8
	CALL memcpy(($3 + [16]), $7, [1])
	*(($5 + [8])) = ((int_32)*($3 + [16]) != (int_32)[0])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)7235159550150574080
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = (int_64)7235159550150574080
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $329(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $4($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $11($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $152 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14676])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14695])
	
.LABEL $label$5
	$2 = ($1 + [8])
	if ( ((int_64)$5 == (int_64)(uint_64)*($2) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$6
	$7 = $3
	$3 = ($7 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	*($4 + [8]) = *($2)
	CALL memcpy(($7 + [-8]), ($4 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $3, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [16])
}

void .FUNC $153 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $45($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $150 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14713])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14761])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14783])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

int_32 .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13814])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $153(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $4($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $11($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $156 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12)
{
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_32 $23
	int_32 $24
	int_32 $25
	float_64 $26
	$13 = ($global$0 - [1168])
	$global$0 = $13
	CALL eosio_assert(*(($0 + [80])), [10803])
	$14 = [0]
	$15 = (uint_64)*($11 + [8]) >> (uint_64)(int_64)8
	$16 = $15)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$17 = (uint_64)$16 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$16 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$16 = $17
	$18 = [1]
	$19 = $14
	$14 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$16 = $17
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$16 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8)
	$18 = ((int_32)$14 < (int_32)[6])
	$19 = ($14 + [1])
	$14 = $19
	if ( $18 ){ goto $label$5 }
	$18 = [1]
	$14 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$18 = [0]
	
.LABEL $label$1
	CALL eosio_assert($18, [11485])
	$14 = *($12)
	CALL eosio_assert((( *($12 + [4]) ? uint_32($14 >> [1]) : ($14 & [1]) ) <= [257]), [11505])
	CALL eosio_assert(((int_64)*($1) == (int_64)((int_64)CALL $157($0, *($2)) + (int_64)1)), [11534])
	$16 = *($6)
	CALL eosio_assert(((uint_64)CALL $158($0, *($2)) <= (uint_64)$16), [11552])
	$16 = *(($3 + [8]))
	$20 = *($2)
	$21 = *(($3 + [24]))
	*((($13 + [80]) + [24])) = $21
	$17 = *($3)
	$22 = *(($3 + [16]))
	*((($13 + [80]) + [16])) = $22
	*((($13 + [1120]) + [24])) = $21
	*((($13 + [1120]) + [16])) = $22
	*($13 + [88]) = $16
	*($13 + [80]) = $17
	*($13 + [1120]) = $17
	*($13 + [1128]) = $16
	CALL eosio_assert(((int_32)CALL $159($0, $20, ($13 + [80])) ^ (int_32)[1]), [11577])
	*((($13 + [1040]) + [40])) = (int_64)0
	*((($13 + [1040]) + [32])) = (int_64)0
	*((($13 + [1040]) + [24])) = (int_64)0
	*(($14 = ($13 + [1104]))) = [0]
	*($13 + [1048]) = [0]
	*($13 + [1056]) = (int_64)0
	$18 = *($4 + [4])
	$19 = *($4)
	*($13 + [548]) = $19
	*($13 + [544]) = $19
	*($13 + [552]) = $18
	CALL $160(($13 + [544]), ($13 + [1040]))
	$23 = (($13 + [1040]) + [16])
	CALL $161(($13 + [544]), $23)
	CALL eosio_assert((*($13 + [1040]) == 0), [11603])
	if ( ((int_32)*($14) != (int_32)[1]) ){ goto $label$65 }
	$4 = CALL $162(($13 + [1000]), $23)
	$18 = ($4 + [32])
	$19 = *($18)
	$14 = *($4 + [28])
	$16 = CALL current_time()
	*(($13 + [964])) = (int_64)0
	*(($13 + [980])) = (int_64)0
	*(($13 + [988])) = (int_64)0
	*($13 + [948]) = [0]
	*($13 + [952]) = [0]
	*($13 + [956 align=4]) = (int_64)0
	*($13 + [972 align=4]) = (int_64)0
	*($13 + [936]) = ((CASTING uint_32)(uint_64 ((uint_64)$16 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [548]) = $14
	*($13 + [544]) = $14
	*($13 + [552]) = $19
	CALL $52(($13 + [544]), ($13 + [936]))
	CALL $54(CALL $53(CALL $53(($13 + [544]), (($13 + [936]) + [24])), ($13 + [972])), (($13 + [936]) + [48]))
	CALL eosio_assert(((int_32)(*((($13 + [936]) + [40])) - *($13 + [972])) == (int_32)[40]), [11639])
	$14 = *($4 + [28])
	CALL sha256($14, (*($18) - $14), ($13 + [544]))
	CALL eosio_assert((CALL $1($3, ($13 + [544]), [32]) == 0), [11690])
	$24 = CALL $163(($13 + [896]), *($13 + [972]))
	*(($18 = (($13 + [848]) + [24]))) = (int_64)0
	*((($13 + [848]) + [40])) = [0]
	*($13 + [848]) = (int_64)0
	*($13 + [856]) = (int_64)0
	*($13 + [864]) = (int_64)0
	*($13 + [880]) = (int_64)0
	$14 = *(($24 + [32]))
	$19 = *($24 + [28])
	*($13 + [548]) = $19
	*($13 + [544]) = $19
	*($13 + [552]) = $14
	CALL $164(($13 + [544]), ($13 + [848]))
	$14 = CALL $73(($0 + [88]), *($2), [11714])
	*($13 + [784]) = *($14)
	$25 = CALL $27((($13 + [784]) + [8]), ($14 + [8]))
	*((($13 + [784]) + [53])) = *(($14 + [53]))
	*((($13 + [784]) + [48])) = *(($14 + [48]))
	*((($13 + [784]) + [40])) = *(($14 + [40]))
	*((($13 + [784]) + [32])) = *(($14 + [32]))
	$16 = *($14 + [24])
	*($13 + [808]) = $16
	CALL eosio_assert(((int_64)$16 == (int_64)*($13 + [856])), [11740])
	if ( ((int_64)*($18) == (int_64)*(($11 + [8]))) ){ goto $label$66 }
	CALL eosio_assert([0], [13637])
	
.LABEL $label$66
	CALL eosio_assert(((int_64)*((($13 + [848]) + [16])) == (int_64)*($11)), [11772])
	CALL $119(($13 + [752]), (($13 + [848]) + [32]))
	CALL eosio_assert(((int_64)*($10) == (int_64)*($13 + [752])), [11829])
	CALL eosio_assert(CALL $fimport$29(*($10)), [11204])
	CALL eosio_assert(((int_64)*($13 + [760]) == (int_64)*($0 + [72])), [11886])
	if ( ((int_32)*(($13 + [1104])) != (int_32)[1]) ){ goto $label$65 }
	CALL $165(($13 + [544]), (($13 + [1040]) + [16]), (($13 + [1040]) + [32]))
	CALL $166(($13 + [208]), ($13 + [1068]), ($13 + [1084]), ($13 + [544]))
	CALL $167(($13 + [720]), ($13 + [1040]), (($13 + [1040]) | [4]), (($13 + [1040]) | [8]), ($13 + [208]))
	*((($13 + [48]) + [24])) = *((($13 + [720]) + [24]))
	*((($13 + [48]) + [16])) = *((($13 + [720]) + [16]))
	*($13 + [56]) = *($13 + [728])
	*($13 + [48]) = *($13 + [720])
	CALL $154($13, $5, ($13 + [48]))
	CALL eosio_assert(((uint_32)*($6) <= (uint_32)*($9)), [11943])
	if ( ((uint_32)*($6) >= (uint_32)*($9)) ){ goto $label$71 }
	*(($13 + [692])) = [0]
	*(($13 + [704])) = [0]
	*($13 + [544]) = [0]
	*($13 + [552]) = (int_64)0
	*($13 + [676]) = [0]
	*($13 + [696]) = (int_64)0
	$14 = *($7 + [4])
	$18 = *($7)
	*($13 + [212]) = $18
	*($13 + [208]) = $18
	*($13 + [216]) = $14
	CALL $168(($13 + [208]), ($13 + [544]))
	$14 = *($13 + [576])
	CALL eosio_assert(((int_32)(((($14 << [24]) | (($14 << [8]) & [16711680])) | ((uint_32($14 >> [8]) & [65280]) | uint_32($14 >> [24]))) + [1]) == (int_32)*($6)), [11996])
	CALL eosio_assert((CALL $1((*($5 + [4]) + [-32]), ($13 + [608]), [32]) == 0), [12063])
	CALL $48(($13 + [120]), ($13 + [544]))
	$14 = *($13 + [120])
	CALL sha256($14, (*($13 + [124]) - $14), ($13 + [208]))
	$14 = *($13 + [120])
	if ( ($14 == 0) ){ goto $label$72 }
	*($13 + [124]) = $14
	CALL $11($14)
	
.LABEL $label$72
	*(($14 = (($13 + [120]) + [8]))) = *((($13 + [208]) + [16]))
	*(($18 = (($13 + [120]) + [16]))) = *((($13 + [208]) + [24]))
	*($13 + [120]) = *($13 + [216])
	$16 = *($13 + [208])
	*(($19 = (($13 + [512]) + [16]))) = *($14)
	*(($5 = (($13 + [512]) + [24]))) = *($18)
	*($13 + [520]) = *($13 + [120])
	$14 = *((($13 + [544]) + [32]))
	$14 = (((($14 << [24]) | (($14 << [8]) & [16711680])) | ((uint_32($14 >> [8]) & [65280]) | uint_32($14 >> [24]))) + [1])
	*($13 + [512]) = ((int_64)((int_64)$16 & (int_64)-4294967296) | (int_64)(CASTING uint_64)(uint_32 ((($14 << [24]) | (($14 << [8]) & [16711680])) | ((uint_32($14 >> [8]) & [65280]) | uint_32($14 >> [24])))))
	*((($13 + [16]) + [24])) = *($5)
	*((($13 + [16]) + [16])) = *($19)
	*($13 + [24]) = *($13 + [520])
	*($13 + [16]) = *($13 + [512])
	CALL $154($13, $8, ($13 + [16]))
	$14 = *($8 + [4])
	$18 = ($14 - *($8))
	*($13 + [208]) = ( [1] ? (int_32($18 >> [5]) + [-1]) : ((int_32)$18 == (int_32)[32]) )
	CALL $169((($13 + [784]) + [32]), $9, ($13 + [208]), ($14 + [-32]))
	$9 = *($13 + [696])
	if ( ($9 == 0) ){ goto $label$68 }
	$5 = ($13 + [700])
	$14 = *($5)
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$70 }
	
.LOOP $label$73:
	$18 = ($14 + [-16])
	$19 = *(($14 + [-12]))
	if ( ($19 == 0) ){ goto $label$74 }
	*(($14 + [-8])) = $19
	CALL $11($19)
	
.LABEL $label$74
	$14 = $18
	if ( ((int_32)$9 != (int_32)$18) ){ goto $label$73 }
	$14 = *(($13 + [696]))
	goto $label$69 
	
.LABEL $label$71
	CALL $170(($13 + [816]), $9, (*($5 + [4]) + [-32]))
	goto $label$67 
	
.LABEL $label$70
	$14 = $9
	
.LABEL $label$69
	*($5) = $9
	CALL $11($14)
	
.LABEL $label$68
	if ( (*(($13 + [692])) == 0) ){ goto $label$67 }
	$14 = *(($13 + [680]))
	if ( ($14 == 0) ){ goto $label$67 }
	*(($13 + [684])) = $14
	CALL $11($14)
	
.LABEL $label$67
	*($13 + [504]) = (int_64)0
	*($13 + [496]) = (int_64)0
	if ( ((int_64)*($24) != (int_64)*(($13 + [808]))) ){ goto $label$86 }
	$16 = *(($11 + [8]))
	$9 = ($0 + [168])
	*($13 + [120]) = $9
	*($13 + [208]) = (uint_64)$16 >> (uint_64)(int_64)8)
	CALL $171(($13 + [544]), ($13 + [120]), ($13 + [208]))
	$5 = *($13 + [548])
	if ( ($5 == 0) ){ goto $label$88 }
	if ( ((int_64)*($13 + [208]) == (int_64)(uint_64)*($5 + [8]) >> (uint_64)(int_64)8)) ){ goto $label$87 }
	
.LABEL $label$88
	$5 = [0]
	CALL eosio_assert([0], [13341])
	
.LABEL $label$87
	CALL eosio_assert(*($5 + [232]), [10867])
	$18 = [0]
	if ( ((uint_64)((int_64)*($11) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$84 }
	$16 = (uint_64)*(($11 + [8])) >> (uint_64)(int_64)8)
	$14 = [0]
	
.LOOP $label$89:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$85 }
	$17 = (uint_64)$16 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$16 & (int_64)65280) == (int_64)0) ){ goto $label$90 }
	$16 = $17
	$18 = [1]
	$19 = $14
	$14 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$89 }
	goto $label$84 
	
.LABEL $label$90
	$16 = $17
	
.LOOP $label$91:
	if ( ((int_64)((int_64)$16 & (int_64)65280) != (int_64)0) ){ goto $label$85 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8)
	$18 = ((int_32)$14 < (int_32)[6])
	$19 = ($14 + [1])
	$14 = $19
	if ( $18 ){ goto $label$91 }
	$18 = [1]
	$14 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$89 }
	goto $label$84 
	
.LABEL $label$86
	$5 = ($0 + [208])
	*($13 + [120]) = $5
	*($13 + [208]) = $15
	CALL $172(($13 + [544]), ($13 + [120]), ($13 + [208]))
	$9 = *($13 + [548])
	if ( $9 ){ goto $label$92 }
	CALL eosio_assert([0], [13341])
	$9 = *($13 + [548])
	
.LABEL $label$92
	CALL eosio_assert(*($9 + [184]), [10867])
	CALL eosio_assert(((int_64)*($9 + [96]) == (int_64)*($2)), [12094])
	CALL eosio_assert(((int_64)*($9 + [104]) == (int_64)*($24)), [12137])
	$18 = [0]
	if ( ((uint_64)((int_64)*($11) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$82 }
	$16 = (uint_64)*(($11 + [8])) >> (uint_64)(int_64)8)
	$14 = [0]
	
.LOOP $label$93:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$83 }
	$17 = (uint_64)$16 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$16 & (int_64)65280) == (int_64)0) ){ goto $label$94 }
	$16 = $17
	$18 = [1]
	$19 = $14
	$14 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$93 }
	goto $label$82 
	
.LABEL $label$94
	$16 = $17
	
.LOOP $label$95:
	if ( ((int_64)((int_64)$16 & (int_64)65280) != (int_64)0) ){ goto $label$83 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8)
	$18 = ((int_32)$14 < (int_32)[6])
	$19 = ($14 + [1])
	$14 = $19
	if ( $18 ){ goto $label$95 }
	$18 = [1]
	$14 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$93 }
	goto $label$82 
	
.LABEL $label$85
	$18 = [0]
	
.LABEL $label$84
	CALL eosio_assert($18, [11259])
	CALL eosio_assert(((int_64)*($11) > (int_64)0), [12165])
	$14 = ($5 + [24])
	CALL eosio_assert(((int_32)*(($11 + [8])) == (int_32)*($14)), [11308])
	CALL eosio_assert(((int_64)*($11) <= (int_64)*($5 + [16])), [12286])
	$20 = *($14)
	$21 = *($11)
	if ( (uint_64)(((int_64)$21 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$96 }
	CALL eosio_assert([0], [13936])
	
.LABEL $label$96
	$16 = (uint_64)$20 >> (uint_64)(int_64)8)
	$14 = [0]
	
.LOOP $label$99:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$98 }
	$17 = (uint_64)$16 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$16 & (int_64)65280) == (int_64)0) ){ goto $label$100 }
	$16 = $17
	$18 = $14
	$14 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[6]) ){ goto $label$99 }
	goto $label$97 
	
.LABEL $label$100
	$16 = $17
	
.LOOP $label$101:
	if ( ((int_64)((int_64)$16 & (int_64)65280) != (int_64)0) ){ goto $label$98 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8)
	$18 = ((int_32)$14 < (int_32)[6])
	$19 = ($14 + [1])
	$14 = $19
	if ( $18 ){ goto $label$101 }
	$14 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$99 }
	goto $label$97 
	
.LABEL $label$98
	CALL eosio_assert([0], [11485])
	
.LABEL $label$97
	*(($13 + [504])) = $20
	*($13 + [496]) = $21
	*(($13 + [240])) = [0]
	$16 = *($0)
	*($13 + [208]) = $16
	*($13 + [224]) = (int_64)-1
	*($13 + [232]) = (int_64)0
	$17 = *($2)
	*($13 + [216]) = $17
	$14 = [0]
	$18 = CALL db_find_i64($16, $17, (int_64)4849507751108702208, (uint_64)*(($5 + [24])) >> (uint_64)(int_64)8)
	if ( ((int_32)$18) < (int_32)[0]) ){ goto $label$102 }
	$14 = CALL $130(($13 + [208]), $18)
	if ( ((int_32)*($14 + [16]) == (int_32)($13 + [208])) ){ goto $label$102 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$102
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [12320])
	CALL eosio_assert(((int_64)*($14) >= (int_64)*($13 + [496])), [12343])
	*($13 + [544]) = ($13 + [496])
	if ( $14 ){ goto $label$103 }
	CALL eosio_assert([0], [14179])
	
.LABEL $label$103
	CALL $173(($13 + [208]), $14, ($13 + [544]))
	$16 = (int_64)0
	if ( ((int_64)*($10) == (int_64)*($13 + [824])) ){ goto $label$75 }
	if ( ((int_64)*($5 + [136]) != (int_64)6609776272782393344) ){ goto $label$81 }
	$16 = *($5 + [144])
	goto $label$75 
	
.LABEL $label$83
	$18 = [0]
	
.LABEL $label$82
	CALL eosio_assert($18, [11259])
	CALL eosio_assert(((int_64)*($11) > (int_64)0), [12165])
	CALL eosio_assert(((int_32)*(($11 + [8])) == (int_32)*($9 + [8])), [11308])
	CALL eosio_assert(((int_64)*($11) <= (int_64))(*($9 + [16]) - *($9))), [12194])
	$20 = *($9 + [8])
	$21 = *($11)
	if ( (uint_64)(((int_64)$21 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$104 }
	CALL eosio_assert([0], [13936])
	
.LABEL $label$104
	$16 = (uint_64)$20 >> (uint_64)(int_64)8)
	$14 = [0]
	
.LOOP $label$107:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$106 }
	$17 = (uint_64)$16 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$16 & (int_64)65280) == (int_64)0) ){ goto $label$108 }
	$16 = $17
	$18 = $14
	$14 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[6]) ){ goto $label$107 }
	goto $label$105 
	
.LABEL $label$108
	$16 = $17
	
.LOOP $label$109:
	if ( ((int_64)((int_64)$16 & (int_64)65280) != (int_64)0) ){ goto $label$106 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8)
	$18 = ((int_32)$14 < (int_32)[6])
	$19 = ($14 + [1])
	$14 = $19
	if ( $18 ){ goto $label$109 }
	$14 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$107 }
	goto $label$105 
	
.LABEL $label$106
	CALL eosio_assert([0], [11485])
	
.LABEL $label$105
	*(($14 = (($13 + [496]) + [8]))) = $20
	*($13 + [496]) = $21
	*($13 + [544]) = ($13 + [496])
	CALL $174($5, $9, ($13 + [544]))
	$17 = *($14)
	*((($13 + [480]) + [8])) = $17
	$16 = *($0)
	*(($13 + [8])) = $17
	$17 = *($13 + [496])
	*($13 + [480]) = $17
	*($13) = $17
	CALL $140($0, $16, $13, $16)
	if ( ((int_64)*($10) == (int_64)*($0)) ){ goto $label$7 }
	$14 = (($13 + [752]) + [16])
	if ( ((*($13 + [768]) & [1]) == 0) ){ goto $label$110 }
	if ( (*(($13 + [772])) <= [257]) ){ goto $label$110 }
	CALL $33($14, [256], [0])
	
.LABEL $label$110
	CALL $175(($13 + [368]), $14, [12228])
	*(($14 = (($13 + [320]) + [24]))) = *(($3 + [24]))
	*(($18 = (($13 + [320]) + [16]))) = *(($3 + [16]))
	*($13 + [328]) = *(($3 + [8]))
	*($13 + [320]) = *($3)
	*((($13 + [544]) + [24])) = *($14)
	*((($13 + [544]) + [16])) = *($18)
	*($13 + [352]) = (int_64)0
	$14 = [0]
	*($13 + [360]) = [0]
	*($13 + [552]) = *($13 + [328])
	*($13 + [544]) = *($13 + [320])
	
.LOOP $label$111:
	$18 = *((($13 + [544]) + $14))
	CALL $36(($13 + [352]), *((uint_32($18 >> [4]) + [8722])))
	CALL $36(($13 + [352]), *((($18 & [15]) + [8722])))
	$14 = ($14 + [1])
	if ( ((int_32)$14 != (int_32)[32]) ){ goto $label$111 }
	$14 = *($13 + [352])
	$18 = ($14 & [1])
	$14 = CALL $37(($13 + [368]), ( *((($13 + [352]) + [8])) ? (($13 + [352]) | [1]) : $18 ), ( *($13 + [356]) ? uint_32($14 >> [1]) : $18 ))
	$19 = ($14 + [8])
	*((($13 + [384]) + [8])) = *($19)
	*($13 + [384]) = *($14)
	*($14) = (int_64)0
	$18 = [0]
	*($19) = [0]
	$14 = CALL $35(($13 + [384]), [8679])
	$19 = ($14 + [8])
	*((($13 + [400]) + [8])) = *($19)
	*($13 + [400]) = *($14)
	*($14) = (int_64)0
	*($19) = [0]
	$16 = *($13 + [848])
	if ( ((int_64)$16 == (int_64)0) ){ goto $label$80 }
	$19 = *([0] + [13696])
	
.LOOP $label$113:
	*((($13 + [544]) + ($14 = $18))) = *(($19 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$16 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$14 == (int_32)[12]) )))))
	$18 = ($14 + [1])
	if ( ((uint_32)$14 > (uint_32)[11]) ){ goto $label$112 }
	$16 = ((int_64)$16 << (int_64)5)
	if ( ((int_64)$16 != (int_64)0) ){ goto $label$113 }
	
.LABEL $label$112
	*(($13 + [312])) = [0]
	*($13 + [304]) = (int_64)0
	if ( ((uint_32)$18 >= (uint_32)[11]) ){ goto $label$79 }
	*($13 + [304]) = ($18 << [1])
	$19 = (($13 + [304]) | [1])
	goto $label$78 
	
.LABEL $label$81
	$26 = ((float_64)*($5 + [160]) * (float_64)(CASTING float_64)(int_64 *($13 + [496])))
	if ( ((float_64)(float_64)|$26| < (float_64)(float_64)9223372036854775808) ){ goto $label$76 }
	$16 = (int_64)-9223372036854775808
	goto $label$75 
	
.LABEL $label$80
	*((($13 + [304]) + [8])) = [0]
	*($13 + [304]) = (int_64)0
	*($13 + [304]) = [0]
	$14 = (($13 + [304]) | [1])
	$19 = $14
	goto $label$77 
	
.LABEL $label$79
	$5 = (($18 + [16]) & [-16])
	$19 = CALL $9($5)
	*($13 + [304]) = ($5 | [1])
	*($13 + [312]) = $19
	*($13 + [308]) = $18
	
.LABEL $label$78
	$5 = ($14 + [1])
	$14 = [0]
	
.LOOP $label$114:
	*(($19 + $14)) = *((($13 + [544]) + $14))
	$14 = ($14 + [1])
	if ( ((int_32)$5 != (int_32)$14) ){ goto $label$114 }
	$19 = ($19 + $18)
	$14 = (($13 + [304]) | [1])
	
.LABEL $label$77
	$18 = [0]
	*($19) = [0]
	$19 = *($13 + [304])
	$5 = ($19 & [1])
	$14 = CALL $37(($13 + [400]), ( *($13 + [312]) ? $14 : $5 ), ( *($13 + [308]) ? uint_32($19 >> [1]) : $5 ))
	$19 = ($14 + [8])
	*((($13 + [416]) + [8])) = *($19)
	*($13 + [416]) = *($14)
	*($14) = (int_64)0
	*($19) = [0]
	$14 = CALL $35(($13 + [416]), [12254])
	$19 = ($14 + [8])
	*((($13 + [432]) + [8])) = *($19)
	*($13 + [432]) = *($14)
	*($14) = (int_64)0
	*($19) = [0]
	CALL $176(($13 + [288]), $11)
	$14 = *($13 + [288])
	$19 = ($14 & [1])
	$14 = CALL $37(($13 + [432]), ( *($13 + [296]) ? (($13 + [288]) | [1]) : $19 ), ( *($13 + [292]) ? uint_32($14 >> [1]) : $19 ))
	$19 = ($14 + [8])
	*((($13 + [448]) + [8])) = *($19)
	*($13 + [448]) = *($14)
	*($14) = (int_64)0
	*($19) = [0]
	$14 = CALL $35(($13 + [448]), [12256])
	$19 = ($14 + [8])
	*((($13 + [464]) + [8])) = *($19)
	*($13 + [464]) = *($14)
	*($14) = (int_64)0
	*($19) = [0]
	$16 = *($10)
	if ( ((int_64)$16 == (int_64)0) ){ goto $label$118 }
	$19 = *([0] + [13696])
	
.LOOP $label$120:
	*((($13 + [544]) + ($14 = $18))) = *(($19 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$16 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$14 == (int_32)[12]) )))))
	$18 = ($14 + [1])
	if ( ((uint_32)$14 > (uint_32)[11]) ){ goto $label$119 }
	$16 = ((int_64)$16 << (int_64)5)
	if ( ((int_64)$16 != (int_64)0) ){ goto $label$120 }
	
.LABEL $label$119
	*(($13 + [280])) = [0]
	*($13 + [272]) = (int_64)0
	if ( ((uint_32)$18 >= (uint_32)[11]) ){ goto $label$117 }
	*($13 + [272]) = ($18 << [1])
	$19 = (($13 + [272]) | [1])
	goto $label$116 
	
.LABEL $label$118
	*((($13 + [272]) + [8])) = [0]
	*($13 + [272]) = (int_64)0
	*($13 + [272]) = [0]
	$14 = (($13 + [272]) | [1])
	$18 = $14
	goto $label$115 
	
.LABEL $label$117
	$11 = (($18 + [16]) & [-16])
	$19 = CALL $9($11)
	*($13 + [272]) = ($11 | [1])
	*($13 + [280]) = $19
	*($13 + [276]) = $18
	
.LABEL $label$116
	$11 = ($14 + [1])
	$14 = [0]
	
.LOOP $label$121:
	*(($19 + $14)) = *((($13 + [544]) + $14))
	$14 = ($14 + [1])
	if ( ((int_32)$11 != (int_32)$14) ){ goto $label$121 }
	$18 = ($19 + $18)
	$14 = (($13 + [272]) | [1])
	
.LABEL $label$115
	*($18) = [0]
	$18 = *($13 + [272])
	$19 = ($18 & [1])
	$14 = CALL $37(($13 + [464]), ( *($13 + [280]) ? $14 : $19 ), ( *($13 + [276]) ? uint_32($18 >> [1]) : $19 ))
	$18 = ($14 + [8])
	*((($13 + [120]) + [8])) = *($18)
	*($13 + [120]) = *($14)
	*($14) = (int_64)0
	*($18) = [0]
	$14 = CALL $35(($13 + [120]), [12254])
	$18 = ($14 + [8])
	*((($13 + [208]) + [8])) = *($18)
	*($13 + [208]) = *($14)
	*($14) = (int_64)0
	*($18) = [0]
	CALL $176(($13 + [256]), ($13 + [496]))
	$14 = *($13 + [256])
	$18 = ($14 & [1])
	$14 = CALL $37(($13 + [208]), ( *($13 + [264]) ? (($13 + [256]) | [1]) : $18 ), ( *($13 + [260]) ? uint_32($14 >> [1]) : $18 ))
	$18 = ($14 + [8])
	*((($13 + [544]) + [8])) = *($18)
	*($13 + [544]) = *($14)
	*($14) = (int_64)0
	*($18) = [0]
	$14 = CALL $35(($13 + [544]), [12284])
	$18 = ($14 + [8])
	*((($13 + [1152]) + [8])) = *($18)
	*($13 + [1152]) = *($14)
	*($14) = (int_64)0
	*($18) = [0]
	if ( (*($13 + [544]) & [1]) ){ goto $label$123 }
	if ( (*($13 + [256]) & [1]) ){ goto $label$122 }
	goto $label$34 
	
.LABEL $label$123
	CALL $11(*($13 + [552]))
	if ( ((*($13 + [256]) & [1]) == 0) ){ goto $label$34 }
	
.LABEL $label$122
	CALL $11(*(($13 + [264])))
	$14 = [1]
	if ( ((*($13 + [208]) & [1]) == 0) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$76
	$16 = (Rounds 0)($26)
	
.LABEL $label$75
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$16 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [12382])
	$17 = *($13 + [496])
	$16 = ( (int_64))($17 - $16) ? (int_64)1 : ((int_64)$17 > (int_64)$16) 
	*($13 + [496]) = $16)
	CALL eosio_assert(((int_64)$16 > (int_64)0), [12165])
	*($13 + [544]) = ($13 + [496])
	CALL $177($9, $5, ($13 + [544]))
	if ( ((int_64)*($10) == (int_64)*($0)) ){ goto $label$35 }
	$14 = (($13 + [752]) + [16])
	$18 = *($13 + [768])
	if ( (( *(($13 + [772])) ? uint_32($18 >> [1]) : ($18 & [1]) ) <= [71]) ){ goto $label$124 }
	CALL $33($14, [70], [0])
	
.LABEL $label$124
	CALL $175(($13 + [352]), $14, [12228])
	*(($14 = (($13 + [176]) + [24]))) = *(($3 + [24]))
	*(($18 = (($13 + [176]) + [16]))) = *(($3 + [16]))
	*($13 + [184]) = *(($3 + [8]))
	*($13 + [176]) = *($3)
	*((($13 + [544]) + [24])) = *($14)
	*((($13 + [544]) + [16])) = *($18)
	*($13 + [304]) = (int_64)0
	$14 = [0]
	*($13 + [312]) = [0]
	*($13 + [552]) = *($13 + [184])
	*($13 + [544]) = *($13 + [176])
	
.LOOP $label$125:
	$18 = *((($13 + [544]) + $14))
	CALL $36(($13 + [304]), *((uint_32($18 >> [4]) + [8722])))
	CALL $36(($13 + [304]), *((($18 & [15]) + [8722])))
	$14 = ($14 + [1])
	if ( ((int_32)$14 != (int_32)[32]) ){ goto $label$125 }
	$14 = *($13 + [304])
	$18 = ($14 & [1])
	$14 = CALL $37(($13 + [352]), ( *((($13 + [304]) + [8])) ? (($13 + [304]) | [1]) : $18 ), ( *($13 + [308]) ? uint_32($14 >> [1]) : $18 ))
	$19 = ($14 + [8])
	*((($13 + [368]) + [8])) = *($19)
	*($13 + [368]) = *($14)
	*($14) = (int_64)0
	$18 = [0]
	*($19) = [0]
	$14 = CALL $35(($13 + [368]), [8679])
	$19 = ($14 + [8])
	*((($13 + [384]) + [8])) = *($19)
	*($13 + [384]) = *($14)
	*($14) = (int_64)0
	*($19) = [0]
	$16 = *($13 + [848])
	if ( ((int_64)$16 == (int_64)0) ){ goto $label$129 }
	$19 = *([0] + [13696])
	
.LOOP $label$131:
	*((($13 + [544]) + ($14 = $18))) = *(($19 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$16 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$14 == (int_32)[12]) )))))
	$18 = ($14 + [1])
	if ( ((uint_32)$14 > (uint_32)[11]) ){ goto $label$130 }
	$16 = ((int_64)$16 << (int_64)5)
	if ( ((int_64)$16 != (int_64)0) ){ goto $label$131 }
	
.LABEL $label$130
	*(($13 + [296])) = [0]
	*($13 + [288]) = (int_64)0
	if ( ((uint_32)$18 >= (uint_32)[11]) ){ goto $label$128 }
	*($13 + [288]) = ($18 << [1])
	$19 = (($13 + [288]) | [1])
	goto $label$127 
	
.LABEL $label$129
	*((($13 + [288]) + [8])) = [0]
	*($13 + [288]) = (int_64)0
	*($13 + [288]) = [0]
	$14 = (($13 + [288]) | [1])
	$19 = $14
	goto $label$126 
	
.LABEL $label$128
	$9 = (($18 + [16]) & [-16])
	$19 = CALL $9($9)
	*($13 + [288]) = ($9 | [1])
	*($13 + [296]) = $19
	*($13 + [292]) = $18
	
.LABEL $label$127
	$9 = ($14 + [1])
	$14 = [0]
	
.LOOP $label$132:
	*(($19 + $14)) = *((($13 + [544]) + $14))
	$14 = ($14 + [1])
	if ( ((int_32)$9 != (int_32)$14) ){ goto $label$132 }
	$19 = ($19 + $18)
	$14 = (($13 + [288]) | [1])
	
.LABEL $label$126
	$18 = [0]
	*($19) = [0]
	$19 = *($13 + [288])
	$9 = ($19 & [1])
	$14 = CALL $37(($13 + [384]), ( *($13 + [296]) ? $14 : $9 ), ( *($13 + [292]) ? uint_32($19 >> [1]) : $9 ))
	$19 = ($14 + [8])
	*((($13 + [400]) + [8])) = *($19)
	*($13 + [400]) = *($14)
	*($14) = (int_64)0
	*($19) = [0]
	$14 = CALL $35(($13 + [400]), [12254])
	$19 = ($14 + [8])
	*((($13 + [416]) + [8])) = *($19)
	*($13 + [416]) = *($14)
	*($14) = (int_64)0
	*($19) = [0]
	CALL $176(($13 + [272]), $11)
	$14 = *($13 + [272])
	$19 = ($14 & [1])
	$14 = CALL $37(($13 + [416]), ( *($13 + [280]) ? (($13 + [272]) | [1]) : $19 ), ( *($13 + [276]) ? uint_32($14 >> [1]) : $19 ))
	$19 = ($14 + [8])
	*((($13 + [432]) + [8])) = *($19)
	*($13 + [432]) = *($14)
	*($14) = (int_64)0
	*($19) = [0]
	$14 = CALL $35(($13 + [432]), [12429])
	$19 = ($14 + [8])
	*((($13 + [448]) + [8])) = *($19)
	*($13 + [448]) = *($14)
	*($14) = (int_64)0
	*($19) = [0]
	$16 = *($10)
	if ( ((int_64)$16 == (int_64)0) ){ goto $label$136 }
	$19 = *([0] + [13696])
	
.LOOP $label$138:
	*((($13 + [544]) + ($14 = $18))) = *(($19 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$16 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$14 == (int_32)[12]) )))))
	$18 = ($14 + [1])
	if ( ((uint_32)$14 > (uint_32)[11]) ){ goto $label$137 }
	$16 = ((int_64)$16 << (int_64)5)
	if ( ((int_64)$16 != (int_64)0) ){ goto $label$138 }
	
.LABEL $label$137
	*(($13 + [264])) = [0]
	*($13 + [256]) = (int_64)0
	if ( ((uint_32)$18 >= (uint_32)[11]) ){ goto $label$135 }
	*($13 + [256]) = ($18 << [1])
	$19 = (($13 + [256]) | [1])
	goto $label$134 
	
.LABEL $label$136
	*((($13 + [256]) + [8])) = [0]
	*($13 + [256]) = (int_64)0
	*($13 + [256]) = [0]
	$14 = (($13 + [256]) | [1])
	$18 = $14
	goto $label$133 
	
.LABEL $label$135
	$11 = (($18 + [16]) & [-16])
	$19 = CALL $9($11)
	*($13 + [256]) = ($11 | [1])
	*($13 + [264]) = $19
	*($13 + [260]) = $18
	
.LABEL $label$134
	$11 = ($14 + [1])
	$14 = [0]
	
.LOOP $label$139:
	*(($19 + $14)) = *((($13 + [544]) + $14))
	$14 = ($14 + [1])
	if ( ((int_32)$11 != (int_32)$14) ){ goto $label$139 }
	$18 = ($19 + $18)
	$14 = (($13 + [256]) | [1])
	
.LABEL $label$133
	*($18) = [0]
	$18 = *($13 + [256])
	$19 = ($18 & [1])
	$14 = CALL $37(($13 + [448]), ( *($13 + [264]) ? $14 : $19 ), ( *($13 + [260]) ? uint_32($18 >> [1]) : $19 ))
	$18 = ($14 + [8])
	*((($13 + [1152]) + [8])) = *($18)
	*($13 + [1152]) = *($14)
	*($14) = (int_64)0
	*($18) = [0]
	$14 = CALL $35(($13 + [1152]), [12254])
	$18 = ($14 + [8])
	*((($13 + [120]) + [8])) = *($18)
	*($13 + [120]) = *($14)
	*($14) = (int_64)0
	*($18) = [0]
	CALL $176(($13 + [160]), ($13 + [496]))
	$14 = *($13 + [160])
	$18 = ($14 & [1])
	$14 = CALL $37(($13 + [120]), ( *($13 + [168]) ? (($13 + [160]) | [1]) : $18 ), ( *($13 + [164]) ? uint_32($14 >> [1]) : $18 ))
	$18 = ($14 + [8])
	*((($13 + [544]) + [8])) = *($18)
	*($13 + [544]) = *($14)
	*($14) = (int_64)0
	*($18) = [0]
	$14 = CALL $35(($13 + [544]), [12284])
	$18 = ($14 + [8])
	*((($13 + [464]) + [8])) = *($18)
	*($13 + [464]) = *($14)
	*($14) = (int_64)0
	*($18) = [0]
	if ( (*($13 + [544]) & [1]) ){ goto $label$141 }
	if ( (*($13 + [160]) & [1]) ){ goto $label$140 }
	goto $label$64 
	
.LABEL $label$141
	CALL $11(*($13 + [552]))
	if ( ((*($13 + [160]) & [1]) == 0) ){ goto $label$64 }
	
.LABEL $label$140
	CALL $11(*(($13 + [168])))
	$14 = [1]
	if ( ((*($13 + [120]) & [1]) == 0) ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$65
	CALL abort()
	
.LABEL $label$64
	$14 = [1]
	if ( (*($13 + [120]) & [1]) ){ goto $label$62 }
	
.LABEL $label$63
	if ( (*($13 + [1152]) & $14) ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$62
	CALL $11(*($13 + [128]))
	if ( ((*($13 + [1152]) & $14) == 0) ){ goto $label$60 }
	
.LABEL $label$61
	CALL $11(*($13 + [1160]))
	$14 = [1]
	if ( ((*($13 + [256]) & [1]) == 0) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$60
	$14 = [1]
	if ( (*($13 + [256]) & [1]) ){ goto $label$58 }
	
.LABEL $label$59
	if ( (*($13 + [448]) & $14) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$58
	CALL $11(*(($13 + [264])))
	if ( ((*($13 + [448]) & $14) == 0) ){ goto $label$56 }
	
.LABEL $label$57
	CALL $11(*($13 + [456]))
	$14 = [1]
	if ( ((*($13 + [432]) & [1]) == 0) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	$14 = [1]
	if ( (*($13 + [432]) & [1]) ){ goto $label$54 }
	
.LABEL $label$55
	if ( (*($13 + [272]) & $14) ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$54
	CALL $11(*($13 + [440]))
	if ( ((*($13 + [272]) & $14) == 0) ){ goto $label$52 }
	
.LABEL $label$53
	CALL $11(*(($13 + [280])))
	$14 = [1]
	if ( ((*($13 + [416]) & [1]) == 0) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	$14 = [1]
	if ( (*($13 + [416]) & [1]) ){ goto $label$50 }
	
.LABEL $label$51
	if ( (*($13 + [400]) & $14) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	CALL $11(*($13 + [424]))
	if ( ((*($13 + [400]) & $14) == 0) ){ goto $label$48 }
	
.LABEL $label$49
	CALL $11(*($13 + [408]))
	$14 = [1]
	if ( ((*($13 + [288]) & [1]) == 0) ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$48
	$14 = [1]
	if ( (*($13 + [288]) & [1]) ){ goto $label$46 }
	
.LABEL $label$47
	if ( (*($13 + [384]) & $14) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$46
	CALL $11(*(($13 + [296])))
	if ( ((*($13 + [384]) & $14) == 0) ){ goto $label$44 }
	
.LABEL $label$45
	CALL $11(*($13 + [392]))
	$14 = [1]
	if ( ((*($13 + [368]) & [1]) == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	$14 = [1]
	if ( (*($13 + [368]) & [1]) ){ goto $label$42 }
	
.LABEL $label$43
	if ( (*($13 + [304]) & $14) ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$42
	CALL $11(*($13 + [376]))
	if ( ((*($13 + [304]) & $14) == 0) ){ goto $label$40 }
	
.LABEL $label$41
	CALL $11(*(($13 + [312])))
	$14 = [1]
	if ( ((*($13 + [352]) & [1]) == 0) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$14 = [1]
	if ( (*($13 + [352]) & [1]) ){ goto $label$38 }
	
.LABEL $label$39
	if ( ((*($13 + [464]) & $14) == 0) ){ goto $label$36 }
	goto $label$37 
	
.LABEL $label$38
	CALL $11(*($13 + [360]))
	if ( ((*($13 + [464]) & $14) == 0) ){ goto $label$36 }
	
.LABEL $label$37
	if ( (*($13 + [468]) <= [251]) ){ goto $label$36 }
	CALL $33(($13 + [464]), [250], [0])
	
.LABEL $label$36
	*((($13 + [544]) + [24])) = *(($13 + [504]))
	*($13 + [544]) = *($0)
	*($13 + [552]) = *($10)
	*($13 + [560]) = *($13 + [496])
	$18 = CALL $27((($13 + [544]) + [32]), ($13 + [464]))
	$16 = *($5)
	*(($19 = (($13 + [120]) + [24]))) = [0]
	*($13 + [120]) = $16
	*($13 + [128]) = (int_64)-3617168760277827584
	*($13 + [136]) = (int_64)0
	$16 = *($0)
	*(($14 = CALL $9([16]))) = $16
	*($14 + [8]) = (int_64)3617214756542218240
	*((($13 + [120]) + [36])) = [0]
	$11 = ($14 + [16])
	*($19) = $11
	*(($13 + [140])) = $11
	*($13 + [136]) = $14
	*($13 + [148 align=4]) = (int_64)0
	$14 = *($18)
	$19 = ( *((($13 + [544]) + [36])) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$14 = ($19 + [32])
	$16 = (CASTING uint_64)(uint_32 $19)
	$19 = ($13 + [148])
	
.LOOP $label$142:
	$14 = ($14 + [1])
	$16 = (uint_64)$16 >> (uint_64)(int_64)7
	if ( ((int_64)$16) != (int_64)0) ){ goto $label$142 }
	if ( ($14 == 0) ){ goto $label$144 }
	CALL $46($19, $14)
	$19 = *(($13 + [152]))
	$14 = *(($13 + [148]))
	goto $label$143 
	
.LABEL $label$144
	$19 = [0]
	$14 = [0]
	
.LABEL $label$143
	*($13 + [1156]) = $14
	*($13 + [1152]) = $14
	*($13 + [1160]) = $19
	CALL $178(($13 + [1152]), ($13 + [544]))
	CALL $179(($13 + [120]))
	$14 = *($13 + [148])
	if ( ($14 == 0) ){ goto $label$145 }
	*(($13 + [152])) = $14
	CALL $11($14)
	
.LABEL $label$145
	$14 = *($13 + [136])
	if ( ($14 == 0) ){ goto $label$146 }
	*(($13 + [140])) = $14
	CALL $11($14)
	
.LABEL $label$146
	if ( ((*($18) & [1]) == 0) ){ goto $label$147 }
	CALL $11(*(($13 + [584])))
	
.LABEL $label$147
	if ( ((*($13 + [464]) & [1]) == 0) ){ goto $label$35 }
	CALL $11(*($13 + [472]))
	
.LABEL $label$35
	$19 = *($13 + [232])
	if ( ($19 == 0) ){ goto $label$6 }
	$11 = ($13 + [236])
	$14 = *($11)
	if ( ((int_32)$14 == (int_32)$19) ){ goto $label$149 }
	
.LOOP $label$150:
	$14 = ($14 + [-24])
	$18 = *($14)
	*($14) = [0]
	if ( ($18 == 0) ){ goto $label$151 }
	CALL $11($18)
	
.LABEL $label$151
	if ( ((int_32)$19 != (int_32)$14) ){ goto $label$150 }
	$14 = *(($13 + [232]))
	goto $label$148 
	
.LABEL $label$149
	$14 = $19
	
.LABEL $label$148
	*($11) = $19
	CALL $11($14)
	goto $label$6 
	
.LABEL $label$34
	$14 = [1]
	if ( (*($13 + [208]) & [1]) ){ goto $label$32 }
	
.LABEL $label$33
	if ( (*($13 + [120]) & $14) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	CALL $11(*($13 + [216]))
	if ( ((*($13 + [120]) & $14) == 0) ){ goto $label$30 }
	
.LABEL $label$31
	CALL $11(*($13 + [128]))
	$14 = [1]
	if ( ((*($13 + [272]) & [1]) == 0) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$14 = [1]
	if ( (*($13 + [272]) & [1]) ){ goto $label$28 }
	
.LABEL $label$29
	if ( (*($13 + [464]) & $14) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL $11(*(($13 + [280])))
	if ( ((*($13 + [464]) & $14) == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL $11(*($13 + [472]))
	$14 = [1]
	if ( ((*($13 + [448]) & [1]) == 0) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$14 = [1]
	if ( (*($13 + [448]) & [1]) ){ goto $label$24 }
	
.LABEL $label$25
	if ( (*($13 + [288]) & $14) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	CALL $11(*($13 + [456]))
	if ( ((*($13 + [288]) & $14) == 0) ){ goto $label$22 }
	
.LABEL $label$23
	CALL $11(*(($13 + [296])))
	$14 = [1]
	if ( ((*($13 + [432]) & [1]) == 0) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$14 = [1]
	if ( (*($13 + [432]) & [1]) ){ goto $label$20 }
	
.LABEL $label$21
	if ( (*($13 + [416]) & $14) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL $11(*($13 + [440]))
	if ( ((*($13 + [416]) & $14) == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL $11(*($13 + [424]))
	$14 = [1]
	if ( ((*($13 + [304]) & [1]) == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$14 = [1]
	if ( (*($13 + [304]) & [1]) ){ goto $label$16 }
	
.LABEL $label$17
	if ( (*($13 + [400]) & $14) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $11(*(($13 + [312])))
	if ( ((*($13 + [400]) & $14) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $11(*($13 + [408]))
	$14 = [1]
	if ( ((*($13 + [384]) & [1]) == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$14 = [1]
	if ( (*($13 + [384]) & [1]) ){ goto $label$12 }
	
.LABEL $label$13
	if ( (*($13 + [352]) & $14) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $11(*($13 + [392]))
	if ( ((*($13 + [352]) & $14) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $11(*(($13 + [360])))
	$18 = [1]
	if ( (*($13 + [368]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$18 = [1]
	if ( ((*($13 + [368]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11(*($13 + [376]))
	
.LABEL $label$8
	*((($13 + [544]) + [24])) = *(($13 + [504]))
	*($13 + [544]) = *($0)
	*($13 + [552]) = *($10)
	*($13 + [560]) = *($13 + [496])
	$19 = CALL $27((($13 + [544]) + [32]), ($13 + [1152]))
	*(($11 = (($13 + [208]) + [24]))) = [0]
	*($13 + [216]) = (int_64)-3617168760277827584
	*($13 + [224]) = (int_64)0
	$16 = *($0)
	*($13 + [208]) = $16
	*(($14 = CALL $9([16]))) = $16
	*($14 + [8]) = (int_64)3617214756542218240
	*((($13 + [208]) + [36])) = [0]
	$5 = ($14 + [16])
	*($11) = $5
	*(($13 + [228])) = $5
	*($13 + [224]) = $14
	*($13 + [236 align=4]) = (int_64)0
	$14 = *($19)
	$11 = ( *((($13 + [544]) + [36])) ? uint_32($14 >> $18) : ($14 & $18) )
	$14 = ($11 + [32])
	$16 = (CASTING uint_64)(uint_32 $11)
	$11 = ($13 + [236])
	
.LOOP $label$152:
	$14 = ($14 + $18)
	$16 = (uint_64)$16 >> (uint_64)(int_64)7
	if ( ((int_64)$16) != (int_64)0) ){ goto $label$152 }
	if ( ($14 == 0) ){ goto $label$154 }
	CALL $46($11, $14)
	$18 = *(($13 + [240]))
	$14 = *(($13 + [236]))
	goto $label$153 
	
.LABEL $label$154
	$18 = [0]
	$14 = [0]
	
.LABEL $label$153
	*($13 + [124]) = $14
	*($13 + [120]) = $14
	*($13 + [128]) = $18
	CALL $178(($13 + [120]), ($13 + [544]))
	CALL $179(($13 + [208]))
	$14 = *($13 + [236])
	if ( ($14 == 0) ){ goto $label$155 }
	*(($13 + [240])) = $14
	CALL $11($14)
	
.LABEL $label$155
	$14 = *($13 + [224])
	if ( ($14 == 0) ){ goto $label$156 }
	*(($13 + [228])) = $14
	CALL $11($14)
	
.LABEL $label$156
	if ( ((*($19) & [1]) == 0) ){ goto $label$157 }
	CALL $11(*(($13 + [584])))
	
.LABEL $label$157
	if ( ((*($13 + [1152]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*($13 + [1160]))
	
.LABEL $label$7
	CALL $101($0, (uint_64)*(($9 + [8])) >> (uint_64)(int_64)8))
	
.LABEL $label$6
	CALL $180($0, *($2))
	*(($19 = ($13 + [576]))) = [0]
	*(($13 + [582])) = [0]
	*($13 + [560]) = (int_64)-1
	*($13 + [568]) = (int_64)0
	*($13 + [580]) = [0]
	$16 = *($0)
	*($13 + [544]) = $16
	*($13 + [552]) = *($2)
	*($13 + [212]) = $0
	*($13 + [208]) = $1
	*($13 + [216]) = $10
	*($13 + [224]) = $12
	*($13 + [228]) = $3
	*($13 + [232]) = $6
	*($13 + [220]) = ($13 + [496])
	*($13 + [1152]) = $16
	if ( ((int_64)$16 == (int_64)CALL current_receiver()) ){ goto $label$158 }
	CALL eosio_assert([0], [14370])
	
.LABEL $label$158
	*($13 + [124]) = ($13 + [208])
	*($13 + [120]) = ($13 + [544])
	*($13 + [128]) = ($13 + [1152])
	*(($14 = CALL $9([160])) + [56]) = (int_64)0
	*($14 + [48]) = (int_64)0
	*($14 + [64]) = (int_64)0
	*($14 + [72]) = (int_64)0
	*($14 + [80 align=4]) = (int_64)0
	*($14 + [88]) = [0]
	*($14 + [136]) = ($13 + [544])
	CALL $181(($13 + [120]), $14)
	*($13 + [464]) = $14
	$16 = *($14)
	*($13 + [120]) = $16
	$0 = *($14 + [140])
	*($13 + [448]) = $0
	$11 = ($13 + [572])
	$18 = *($11)
	if ( ((uint_32)$18 >= (uint_32)*($19)) ){ goto $label$161 }
	*($18 + [8]) = $16
	*($18 + [16]) = $0
	*($13 + [464]) = [0]
	*($18) = $14
	*($11) = ($18 + [24])
	$14 = *($13 + [464])
	*($13 + [464]) = [0]
	if ( $14 ){ goto $label$160 }
	goto $label$159 
	
.LABEL $label$161
	CALL $182(($13 + [568]), ($13 + [464]), ($13 + [120]), ($13 + [448]))
	$14 = *($13 + [464])
	*($13 + [464]) = [0]
	if ( ($14 == 0) ){ goto $label$159 }
	
.LABEL $label$160
	if ( ((*(($14 + [80])) & [1]) == 0) ){ goto $label$162 }
	CALL $11(*(($14 + [88])))
	
.LABEL $label$162
	CALL $11($14)
	
.LABEL $label$159
	$19 = *($13 + [568])
	if ( ($19 == 0) ){ goto $label$163 }
	$0 = ($13 + [572])
	$14 = *($0)
	if ( ((int_32)$14 == (int_32)$19) ){ goto $label$165 }
	
.LOOP $label$166:
	$14 = ($14 + [-24])
	$18 = *($14)
	*($14) = [0]
	if ( ($18 == 0) ){ goto $label$167 }
	if ( ((*(($18 + [80])) & [1]) == 0) ){ goto $label$168 }
	CALL $11(*(($18 + [88])))
	
.LABEL $label$168
	CALL $11($18)
	
.LABEL $label$167
	if ( ((int_32)$19 != (int_32)$14) ){ goto $label$166 }
	$14 = *(($13 + [568]))
	goto $label$164 
	
.LABEL $label$165
	$14 = $19
	
.LABEL $label$164
	*($0) = $19
	CALL $11($14)
	
.LABEL $label$163
	if ( ((*($13 + [768]) & [1]) == 0) ){ goto $label$169 }
	CALL $11(*(($13 + [776])))
	
.LABEL $label$169
	if ( ((*($25) & [1]) == 0) ){ goto $label$170 }
	CALL $11(*(($13 + [800])))
	
.LABEL $label$170
	if ( ((*(($13 + [880])) & [1]) == 0) ){ goto $label$171 }
	CALL $11(*(($13 + [888])))
	
.LABEL $label$171
	$14 = *(($24 + [28]))
	if ( ($14 == 0) ){ goto $label$172 }
	*(($24 + [32])) = $14
	CALL $11($14)
	
.LABEL $label$172
	$14 = *($24 + [16])
	if ( ($14 == 0) ){ goto $label$173 }
	*(($24 + [20])) = $14
	CALL $11($14)
	
.LABEL $label$173
	CALL $55(($13 + [936]))
	$14 = *(($4 + [28]))
	if ( ($14 == 0) ){ goto $label$174 }
	*(($4 + [32])) = $14
	CALL $11($14)
	
.LABEL $label$174
	$14 = *($4 + [16])
	if ( ($14 == 0) ){ goto $label$175 }
	*(($4 + [20])) = $14
	CALL $11($14)
	
.LABEL $label$175
	$14 = *($4)
	if ( ($14 == 0) ){ goto $label$176 }
	*($4 + [4]) = $14
	CALL $11($14)
	
.LABEL $label$176
	$14 = *(($13 + [1104]))
	if ( ((int_32)$14 == (int_32)[-1]) ){ goto $label$177 }
	*($13 + [544]) = *([0] + [14000])
	CALL void ($13 + [784])((int_32 $23), (int_32 *((($13 + [544]) + ($14 << [2])))))
	
.LABEL $label$177
	$global$0 = ($13 + [1168])
	(unreachable)
}

int_64 .FUNC $157 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($2 + [32])) = [0]
	*(($2 + [38])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [36]) = [0]
	$4 = *($0)
	*($2) = $4
	*($2 + [8]) = $1
	$0 = CALL db_lowerbound_i64($4, $1, (int_64)4733526061789216768, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	CALL $183($2, $0)
	*($2 + [40]) = (CASTING uint_64)(uint_32 $2)
	$3 = *(*(CALL $184(($2 + [40])) + [4]))
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = ($2 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$5 }
	if ( ((*(($7 + [80])) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($7 + [88])))
	
.LABEL $label$6
	CALL $11($7)
	
.LABEL $label$5
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($2 + [24]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $5
	
.LABEL $label$2
	*($6) = $5
	CALL $11($0)
	
.LABEL $label$1
	$global$0 = ($2 + [48])
	return $3
}

void .FUNC $154 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$3 = ($global$0 - [448])
	$global$0 = $3
	CALL eosio_assert(((int_32)*($1 + [4]) != (int_32)*($1)), [11402])
	$4 = *($1)
	if ( ((int_32)(*($1 + [4]) - $4) != (int_32)[32]) ){ goto $label$1 }
	*(($5 = (($3 + [384]) + [16]))) = *(($2 + [16]))
	*(($6 = (($3 + [384]) + [24]))) = *(($2 + [24]))
	*($3 + [384]) = *($2)
	*(($7 = (($3 + [352]) + [16]))) = *(($4 + [16]))
	*($3 + [392]) = *(($2 + [8]))
	*(($2 = (($3 + [352]) + [24]))) = *(($4 + [24]))
	*($3 + [352]) = *($4)
	*($3 + [360]) = *(($4 + [8]))
	*((($3 + [128]) + [24])) = *($2)
	*((($3 + [128]) + [16])) = *($7)
	*((($3 + [416]) + [16])) = *($5)
	*((($3 + [416]) + [24])) = *($6)
	*($3 + [136]) = *($3 + [360])
	*($3 + [128]) = *($3 + [352])
	*($3 + [416]) = *($3 + [384])
	*($3 + [424]) = *($3 + [392])
	CALL eosio_assert((CALL $1(($3 + [416]), ($3 + [128]), [32]) == 0), [11431])
	$global$0 = ($3 + [448])
	return 
	
.LABEL $label$1
	$8 = ($2 + [16])
	*(($6 = (($3 + [320]) + [16]))) = *($8)
	$9 = ($2 + [24])
	*(($7 = (($3 + [320]) + [24]))) = *($9)
	*($3 + [320]) = *($2)
	*(($10 = (($3 + [288]) + [16]))) = *(($4 + [16]))
	$11 = ($2 + [8])
	*($3 + [328]) = *($11)
	*(($12 = (($3 + [288]) + [24]))) = *(($4 + [24]))
	*($3 + [288]) = *($4)
	*($3 + [296]) = *(($4 + [8]))
	*(($5 = (($3 + [128]) + [24]))) = *($12)
	*(($12 = (($3 + [128]) + [16]))) = *($10)
	*(($4 = (($3 + [416]) + [16]))) = *($6)
	*(($10 = (($3 + [416]) + [24]))) = *($7)
	*($3 + [136]) = *($3 + [296])
	*($3 + [128]) = *($3 + [288])
	*($3 + [416]) = *($3 + [320])
	*($3 + [424]) = *($3 + [328])
	if ( (CALL $1(($3 + [416]), ($3 + [128]), [32]) == 0) ){ goto $label$3 }
	*(($7 = (($3 + [256]) + [24]))) = *($9)
	*(($9 = (($3 + [256]) + [16]))) = *($8)
	$6 = *($1)
	*(($8 = (($3 + [224]) + [16]))) = *(($6 + [48]))
	*(($13 = (($3 + [224]) + [24]))) = *(($6 + [56]))
	*($3 + [256]) = *($2)
	*($3 + [264]) = *($11)
	*($3 + [224]) = *($6 + [32])
	*($3 + [232]) = *(($6 + [40]))
	*($5) = *($13)
	*($12) = *($8)
	*($4) = *($9)
	*($10) = *($7)
	*($3 + [136]) = *($3 + [232])
	*($3 + [128]) = *($3 + [224])
	*($3 + [416]) = *($3 + [256])
	*($3 + [424]) = *($3 + [264])
	$2 = (CALL $1(($3 + [416]), ($3 + [128]), [32]) == 0)
	goto $label$2 
	
.LABEL $label$3
	$2 = [1]
	
.LABEL $label$2
	CALL eosio_assert($2, [11459])
	$2 = *($1)
	*(($6 = (($3 + [416]) + [8]))) = *(($2 + [9]))
	*($4) = *(($2 + [17]))
	*(($7 = (($3 + [416]) + [23]))) = *(($2 + [24]))
	*($3 + [416]) = *($2 + [1 align=1])
	$10 = *($2)
	*(($12 = (($3 + [192]) + [8]))) = *(($2 + [41]))
	*(($8 = (($3 + [192]) + [16]))) = *(($2 + [49]))
	*(($9 = (($3 + [192]) + [23]))) = *(($2 + [56]))
	*((($3 + [128]) + [17])) = *($4)
	*($5) = *($7)
	*($3 + [128]) = ($10 & [127])
	*($3 + [192]) = *(($2 + [33]))
	*($3 + [129 align=1]) = *($3 + [416])
	*($3 + [137 align=1]) = *($6)
	$2 = *($2 + [32])
	*((($3 + [128]) + [56])) = *($9)
	*((($3 + [128]) + [49])) = *($8)
	*((($3 + [128]) + [41])) = *($12)
	*(($4 = (($3 + [128]) + [33]))) = *($3 + [192])
	*($3 + [160]) = ($2 | [128])
	CALL $155(($3 + [192]), ($3 + [128]))
	$2 = *($1)
	$9 = ($1 + [4])
	$10 = *($9)
	if ( ((int_32)($10 - $2) == (int_32)[96]) ){ goto $label$4 }
	$5 = (($3 + [128]) | [1])
	$6 = (($3 + [192]) | [1])
	$7 = [64]
	$12 = [0]
	
.LOOP $label$5:
	$2 = ($2 + $7)
	$10 = *($2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$7 }
	*((($3 + [96]) + [23])) = *(($2 + [24]))
	*((($3 + [96]) + [16])) = *(($2 + [17]))
	*((($3 + [96]) + [8])) = *(($2 + [9]))
	*($3 + [96]) = *(($2 + [1]))
	*(($2 = (($3 + [128]) + [23]))) = *(($6 + [23]))
	*(($8 = (($3 + [128]) + [16]))) = *(($6 + [16]))
	$14 = *(($6 + [8]))
	*((($3 + [128]) + [8])) = $14
	*((($3 + [64]) + [8])) = $14
	*((($3 + [64]) + [16])) = *($8)
	*((($3 + [64]) + [23])) = *($2)
	$14 = *($6)
	*($3 + [128]) = $14
	*($3 + [64]) = $14
	$2 = (*($3 + [192]) | [-128])
	goto $label$6 
	
.LABEL $label$7
	*(($8 = (($3 + [128]) + [23]))) = *(($6 + [23]))
	*(($11 = (($3 + [128]) + [16]))) = *(($6 + [16]))
	$14 = *(($6 + [8]))
	*((($3 + [128]) + [8])) = $14
	*((($3 + [96]) + [8])) = $14
	*((($3 + [96]) + [16])) = *($11)
	*((($3 + [96]) + [23])) = *($8)
	$14 = *($6)
	*($3 + [128]) = $14
	*($3 + [96]) = $14
	$8 = *($3 + [192])
	*((($3 + [64]) + [23])) = *(($2 + [24]))
	*((($3 + [64]) + [16])) = *(($2 + [17]))
	*((($3 + [64]) + [8])) = *(($2 + [9]))
	*($3 + [64]) = *(($2 + [1]))
	$2 = $10
	$10 = ($8 & [127])
	
.LABEL $label$6
	*((($3 + [128]) + [32])) = $2
	*($5) = *($3 + [96])
	*(($5 + [8])) = *((($3 + [96]) + [8]))
	*(($5 + [16])) = *((($3 + [96]) + [16]))
	*(($5 + [23])) = *((($3 + [96]) + [23]))
	*($4) = *($3 + [64])
	*(($4 + [8])) = *((($3 + [64]) + [8]))
	*(($4 + [16])) = *((($3 + [64]) + [16]))
	*(($4 + [23])) = *((($3 + [64]) + [23]))
	*($3 + [128]) = $10
	CALL $155(($3 + [416]), ($3 + [128]))
	*((($3 + [192]) + [24])) = *((($3 + [416]) + [24]))
	*((($3 + [192]) + [16])) = *((($3 + [416]) + [16]))
	*($3 + [200]) = *($3 + [424])
	*($3 + [192]) = *($3 + [416])
	$7 = ($7 + [32])
	$2 = *($1)
	$10 = *($9)
	$12 = ($12 + [1])
	if ( ($12 <= (int_32(($10 - $2) >> [5]) + [-3])) ){ goto $label$5 }
	
.LABEL $label$4
	*(($2 = (($3 + [32]) + [16]))) = *((($3 + [192]) + [16]))
	*(($4 = (($3 + [32]) + [24]))) = *((($3 + [192]) + [24]))
	*($3 + [32]) = *($3 + [192])
	*(($5 = ($3 + [16]))) = *(($10 + [-16]))
	*($3 + [40]) = *($3 + [200])
	*(($6 = ($3 + [24]))) = *(($10 + [-8]))
	*($3) = *(($10 + [-32]))
	*($3 + [8]) = *(($10 + [-24]))
	*((($3 + [128]) + [24])) = *($6)
	*((($3 + [128]) + [16])) = *($5)
	*((($3 + [416]) + [16])) = *($2)
	*((($3 + [416]) + [24])) = *($4)
	*($3 + [136]) = *($3 + [8])
	*($3 + [128]) = *($3)
	*($3 + [416]) = *($3 + [32])
	*($3 + [424]) = *($3 + [40])
	CALL eosio_assert((CALL $1(($3 + [416]), ($3 + [128]), [32]) == 0), [11431])
	$global$0 = ($3 + [448])
}

void .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [144])
	$global$0 = $2
	*($2 + [72]) = [0]
	*($2 + [64]) = (int_64)0
	CALL $46(($2 + [64]), [64])
	*(($3 = ($2 + [16]))) = *(($1 + [16]))
	*(($4 = ($2 + [24]))) = *(($1 + [24]))
	*(($5 = ($2 + [32]))) = *(($1 + [32]))
	*(($6 = ($2 + [40]))) = *(($1 + [40]))
	*(($7 = ($2 + [48]))) = *(($1 + [48]))
	*(($8 = ($2 + [56]))) = *(($1 + [56]))
	*($2) = *($1)
	*($2 + [8]) = *(($1 + [8]))
	$9 = *($2 + [68])
	$1 = *($2 + [64])
	*((($2 + [80]) + [56])) = *($8)
	*((($2 + [80]) + [48])) = *($7)
	*((($2 + [80]) + [40])) = *($6)
	*(($6 = (($2 + [80]) + [32]))) = *($5)
	*((($2 + [80]) + [24])) = *($4)
	*((($2 + [80]) + [16])) = *($3)
	*($2 + [88]) = *($2 + [8])
	*($2 + [80]) = *($2)
	$3 = ($9 - $1)
	if ( ((int_32)$3 > (int_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	
.LABEL $label$1
	CALL memcpy($1, ($2 + [80]), [32])
	$1 = ($1 + [32])
	if ( ((int_32)($3 + [-32]) > (int_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	
.LABEL $label$2
	CALL memcpy($1, $6, [32])
	$1 = *($2 + [64])
	CALL sha256($1, (*($2 + [68]) - $1), $0)
	$1 = *($2 + [64])
	if ( ($1 == 0) ){ goto $label$3 }
	*($2 + [68]) = $1
	CALL $11($1)
	
.LABEL $label$3
	$global$0 = ($2 + [144])
}

int_64 .FUNC $158 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [64])
	$global$0 = $2
	*(($2 + [48])) = [0]
	*(($2 + [54])) = [0]
	*($2 + [24]) = $1
	*($2 + [32]) = (int_64)-1
	$1 = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [52]) = [0]
	*($2 + [16]) = *($0)
	*($2 + [8]) = ($2 + [16])
	*($2 + [56]) = (int_64)0
	CALL $185($2, ($2 + [8]), ($2 + [56]))
	if ( (*($2 + [4]) == 0) ){ goto $label$1 }
	*($2 + [56]) = (CASTING uint_64)(uint_32 ($2 + [8]))
	$1 = *(*(CALL $186(($2 + [56])) + [4]) + [128])
	
.LABEL $label$1
	$3 = *($2 + [40])
	if ( ($3 == 0) ){ goto $label$2 }
	$4 = ($2 + [44])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$6 }
	if ( ((*(($5 + [80])) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($5 + [88])))
	
.LABEL $label$7
	CALL $11($5)
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($2 + [40]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $3
	
.LABEL $label$3
	*($4) = $3
	CALL $11($0)
	
.LABEL $label$2
	$global$0 = ($2 + [64])
	return $1
}

int_32 .FUNC $159 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [112])
	$global$0 = $3
	*((($3 + [72]) + [32])) = [0]
	*(($3 + [110])) = [0]
	*($3 + [80]) = $1
	*($3 + [88]) = (int_64)-1
	$1 = (int_64)0
	*($3 + [96]) = (int_64)0
	*($3 + [108]) = [0]
	*($3 + [72]) = *($0)
	*($3 + [64]) = ($3 + [72])
	$0 = [16]
	$4 = ($3 + [16])
	$5 = [0]
	$6 = (int_64)0
	
.LOOP $label$2:
	$7 = ($2 + $5)
	if ( ($0 <= [2]) ){ goto $label$3 }
	$1 = ((int_64)$1 | (int_64)*($7))
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)(uint_64)$1 >> (uint_64)(int_64)56))
	$0 = ($0 + [-1])
	$1 = ((int_64)$1 << (int_64)8)
	$5 = ($5 + [1])
	if ( ((int_32)$5 != (int_32)[32]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)$0 == (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [14110])
	
.LABEL $label$4
	*($4 + [8]) = $6
	*($4) = ((int_64)$1 | (int_64)*($7))
	$0 = [16]
	$4 = ($4 + [16])
	$1 = (int_64)0
	$6 = (int_64)0
	$5 = ($5 + [1])
	if ( ((int_32)$5 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$0 == (int_32)[16]) ){ goto $label$5 }
	if ( ($0 <= [2]) ){ goto $label$6 }
	CALL __ashlti3($3, $1, $6, (($0 << [3]) + [-8]))
	$6 = *(($3 + [8]))
	$1 = *($3)
	
.LABEL $label$6
	*($4) = $1
	*($4 + [8]) = $6
	
.LABEL $label$5
	CALL $187(($3 + [56]), ($3 + [64]), ($3 + [16]))
	$7 = *($3 + [60])
	$4 = *($3 + [96])
	if ( ($4 == 0) ){ goto $label$7 }
	$2 = ($3 + [100])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((*(($5 + [80])) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($5 + [88])))
	
.LABEL $label$12
	CALL $11($5)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($3 + [96]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($2) = $4
	CALL $11($0)
	
.LABEL $label$7
	$global$0 = ($3 + [112])
	return ((int_32)$7 != (int_32)[0])
}

void .FUNC $273 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [208])
	$global$0 = $2
	*(($2 + [112])) = *(($1 + [32]))
	*((($2 + [96]) + [24])) = *(($1 + [40]))
	*($2 + [80]) = (int_64)0
	*($2 + [88]) = [0]
	*($2 + [96]) = *($1 + [16])
	*($2 + [104]) = *(($1 + [24]))
	$3 = *($1 + [8])
	$4 = *($1)
	$5 = (*(($1 + [52])) - *($1 + [48]))
	if ( ($5 == 0) ){ goto $label$5 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$4 }
	$6 = CALL $9($5)
	*(($2 + [88])) = ($6 + $5)
	*($2 + [80]) = $6
	*($2 + [84]) = $6
	$7 = *(($1 + [48]))
	$5 = (*(($1 + [52])) - $7)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($6, $7, $5)
	*($2 + [84]) = ($6 + $5)
	
.LABEL $label$5
	*($2 + [72]) = [0]
	*($2 + [64]) = (int_64)0
	$5 = (*(($1 + [64])) - *($1 + [60]))
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = int_32($5 >> [5])
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$3 }
	$5 = CALL $9($5)
	*(($2 + [72])) = ($5 + ($6 << [5]))
	*($2 + [64]) = $5
	*($2 + [68]) = $5
	$7 = *(($1 + [60]))
	$6 = (*(($1 + [64])) - $7)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($5, $7, $6)
	*($2 + [68]) = ($5 + $6)
	
.LABEL $label$6
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = [0]
	$7 = *($1 + [72])
	$5 = (*(($1 + [80])) - *($1 + [76]))
	if ( ($5 == 0) ){ goto $label$7 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = CALL $9($5)
	*(($2 + [56])) = ($6 + $5)
	*($2 + [48]) = $6
	*($2 + [52]) = $6
	$8 = *(($1 + [76]))
	$5 = (*(($1 + [80])) - $8)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($6, $8, $5)
	*($2 + [52]) = ($6 + $5)
	
.LABEL $label$7
	*($2 + [40]) = [0]
	*($2 + [32]) = (int_64)0
	$5 = (*(($1 + [92])) - *($1 + [88]))
	if ( ($5 == 0) ){ goto $label$8 }
	$6 = int_32($5 >> [5])
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$1 }
	$5 = CALL $9($5)
	*(($2 + [40])) = ($5 + ($6 << [5]))
	*($2 + [32]) = $5
	*($2 + [36]) = $5
	$8 = *(($1 + [88]))
	$6 = (*(($1 + [92])) - $8)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($5, $8, $6)
	*($2 + [36]) = ($5 + $6)
	
.LABEL $label$8
	*(($5 = (($2 + [16]) + [8]))) = *(($1 + [120]))
	*($2 + [16]) = *($1 + [112])
	$6 = *($1 + [100])
	$9 = *($1 + [104])
	$1 = CALL $27($2, ($1 + [128]))
	*((($2 + [160]) + [8])) = *($5)
	*((($2 + [128]) + [24])) = *((($2 + [96]) + [24]))
	*((($2 + [128]) + [16])) = *((($2 + [96]) + [16]))
	*($2 + [200]) = $3
	*($2 + [192]) = $9
	*($2 + [184]) = $4
	*($2 + [180]) = $7
	*($2 + [176]) = $6
	*($2 + [160]) = *($2 + [16])
	*($2 + [136]) = *($2 + [104])
	*($2 + [128]) = *($2 + [96])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$5 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$9 }
	$0 = *((*($5) + $0))
	
.LABEL $label$9
	CALL void $5((int_32 ($2 + [184])), (int_32 ($2 + [200])), (int_32 ($2 + [128])), (int_32 ($2 + [80])), (int_32 ($2 + [64])), (int_32 ($2 + [180])), (int_32 ($2 + [48])), (int_32 ($2 + [32])), (int_32 ($2 + [176])), (int_32 ($2 + [192])), (int_32 ($2 + [160])), (int_32 $1), (int_32 $0))
	if ( ((*($1) & [1]) == 0) ){ goto $label$10 }
	CALL $11(*($1 + [8]))
	
.LABEL $label$10
	$1 = *($2 + [32])
	if ( ($1 == 0) ){ goto $label$11 }
	*($2 + [36]) = $1
	CALL $11($1)
	
.LABEL $label$11
	$1 = *($2 + [48])
	if ( ($1 == 0) ){ goto $label$12 }
	*($2 + [52]) = $1
	CALL $11($1)
	
.LABEL $label$12
	$1 = *($2 + [64])
	if ( ($1 == 0) ){ goto $label$13 }
	*($2 + [68]) = $1
	CALL $11($1)
	
.LABEL $label$13
	$1 = *($2 + [80])
	if ( ($1 == 0) ){ goto $label$14 }
	*($2 + [84]) = $1
	CALL $11($1)
	
.LABEL $label$14
	$global$0 = ($2 + [208])
	return (unreachable)
	
.LABEL $label$4
	CALL $45(($2 + [80]))
	
.LABEL $label$3
	CALL $45(($2 + [64]))
	
.LABEL $label$2
	CALL $45(($2 + [48]))
	
.LABEL $label$1
	CALL $45(($2 + [32]))
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $272 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
	CALL $279(*($1), ($4 + [48]))
	*($2 + [8]) = $4
	CALL $355(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $106 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $45($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $344 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [24])) = *($2 + [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $228 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [352])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [312])) = [0]
	*($4 + [296]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [284]) = $2
	*($4 + [280]) = $2
	*($4 + [288]) = ($2 + $7)
	$3 = $2
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$3 = *($4 + [284])
	
.LABEL $label$4
	CALL memcpy(($4 + [296]), $3, [8])
	*($4 + [284]) = ($3 + [8])
	CALL $276(($4 + [280]), (($4 + [296]) + [8]))
	$3 = *((($4 + [280]) + [8]))
	*((($4 + [16]) + [8])) = $3
	*(($4 + [8])) = $3
	$8 = *($4 + [280])
	*($4) = $8
	*($4 + [16]) = $8
	$9 = CALL $56(($4 + [32]), $0, $1, $4)
	*($4 + [320]) = (int_64)0
	$3 = [0]
	*($4 + [328]) = [0]
	$0 = *($4 + [296])
	$10 = (*(($4 + [308])) - *($4 + [304]))
	if ( ($10 == 0) ){ goto $label$7 }
	$11 = int_32($10 >> [5])
	if ( ((uint_32)$11 >= (uint_32)[134217728]) ){ goto $label$6 }
	$3 = CALL $9($10)
	*((($4 + [320]) + [8])) = ($3 + ($11 << [5]))
	*($4 + [320]) = $3
	*($4 + [324]) = $3
	$11 = *((($4 + [296]) + [8]))
	$10 = (*(($4 + [308])) - $11)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($3, $11, $10)
	$3 = (*($4 + [324]) + $10)
	*($4 + [324]) = $3
	
.LABEL $label$7
	$10 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$8 }
	$6 = *((*($10) + $6))
	
.LABEL $label$8
	*($4 + [344]) = [0]
	*($4 + [336]) = (int_64)0
	$3 = ($3 - *($4 + [320]))
	if ( ($3 == 0) ){ goto $label$9 }
	$5 = int_32($3 >> [5])
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$5 }
	$3 = CALL $9($3)
	*(($4 + [344])) = ($3 + ($5 << [5]))
	*($4 + [336]) = $3
	*($4 + [340]) = $3
	$11 = *($4 + [320])
	$5 = (*($4 + [324]) - $11)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($3, $11, $5)
	*($4 + [340]) = ($3 + $5)
	
.LABEL $label$9
	CALL void $10((int_32 $0), (int_64 ($4 + [336])), (int_32 $6))
	$3 = *($4 + [336])
	if ( ($3 == 0) ){ goto $label$10 }
	*($4 + [340]) = $3
	CALL $11($3)
	
.LABEL $label$10
	$3 = *($4 + [320])
	if ( ($3 == 0) ){ goto $label$11 }
	*($4 + [324]) = $3
	CALL $11($3)
	
.LABEL $label$11
	if ( ($7 <= [513]) ){ goto $label$12 }
	CALL $4($2)
	
.LABEL $label$12
	CALL $58($9)
	$2 = *(($4 + [304]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($4 + [308])) = $2
	CALL $11($2)
	
.LABEL $label$13
	$global$0 = ($4 + [352])
	return [1]
	
.LABEL $label$6
	CALL $45(($4 + [320]))
	
.LABEL $label$5
	CALL $45(($4 + [336]))
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $229 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [496])
	$global$0 = $3
	*(($4 = $3) + [488]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [336])) = (int_64)0
	*(($4 + [352])) = (int_64)0
	*(($4 + [368])) = (int_64)0
	*(($4 + [384])) = (int_64)0
	*(($4 + [400])) = (int_64)0
	*(($4 + [416])) = [0]
	*($4 + [312]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [376]) = (int_64)0
	*($4 + [392]) = (int_64)0
	*($4 + [408]) = (int_64)0
	*($4 + [424]) = (int_64)0
	*($4 + [432]) = (int_64)0
	*($4 + [440]) = (int_64)0
	*(($4 + [448])) = (int_64)0
	*(($4 + [472])) = (int_64)0
	*($4 + [456]) = (int_64)0
	*($4 + [464]) = (int_64)0
	*($4 + [480]) = [0]
	*($4 + [292]) = $2
	*($4 + [288]) = $2
	*($4 + [296]) = ($2 + $5)
	*($4 + [16]) = ($4 + [288])
	*($4 + [40]) = ($4 + [304])
	CALL $253(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [296])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [288])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $56(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [488])
	CALL $254(($4 + [16]), ($4 + [304]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $58($3)
	if ( ((*($4 + [408]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [416])))
	
.LABEL $label$5
	if ( ((*($4 + [396]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($4 + [404])))
	
.LABEL $label$6
	$global$0 = ($4 + [496])
	return [1]
}

void .FUNC $89 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($5 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($5 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$6 = *($1)
	$7 = ($1 + [112])
	CALL $29($7, *($3))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$3
	$8 = (($5 + [16]) + [8])
	$3 = *($1 + [100])
	$9 = ( *(($1 + [104])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($9 + [253])
	$10 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [100])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$4 }
	$11 = *(($1 + [112]))
	$11 = ( *(($1 + [116])) ? uint_32($11 >> [1]) : ($11 & [1]) )
	$3 = ($11 + $3)
	$10 = (CASTING uint_64)(uint_32 $11)
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $2($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [32]) = $5
	*($5 + [72]) = $9
	*($5 + [76]) = $7
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	*($5 + [52]) = ($1 + [32])
	*($5 + [56]) = ($1 + [48])
	*($5 + [60]) = ($1 + [64])
	*($5 + [64]) = ($1 + [80])
	*($5 + [68]) = ($1 + [96])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [136])
	*($5 + [88]) = ($1 + [144])
	*($5 + [92]) = ($1 + [160])
	*($5 + [96]) = ($1 + [168])
	*($5 + [100]) = ($1 + [184])
	*($5 + [104]) = ($1 + [200])
	*($5 + [108]) = ($1 + [208])
	*($5 + [112]) = ($1 + [224])
	*($5 + [120]) = ($1 + [240])
	*($5 + [116]) = ($1 + [232])
	CALL $86(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [300]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL $4($4)
	
.LABEL $label$8
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($5 + [16]), ($5 + [40]), [8]) == 0) ){ goto $label$10 }
	$4 = ($1 + [304])
	$3 = *($4)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$11 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($5 + [32]), $6)
	*($4) = $3
	
.LABEL $label$11
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$10
	*($5 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($8, ($5 + [40]), [8]) == 0) ){ goto $label$12 }
	$1 = ($1 + [308])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$13 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($5 + [32]), $6)
	*($1) = $3
	
.LABEL $label$13
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$12
	$global$0 = ($5 + [128])
}

void .FUNC $88 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($5 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($5 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$6 = *($1)
	$7 = ($1 + [100])
	CALL $29($7, *($3))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$3
	$8 = (($5 + [16]) + [8])
	$3 = *($7)
	$9 = ( *(($1 + [104])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($9 + [253])
	$10 = (CASTING uint_64)(uint_32 $9)
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$4 }
	$9 = *($1 + [112])
	$9 = ( *(($1 + [116])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$3 = ($9 + $3)
	$10 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [112])
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $2($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [32]) = $5
	*($5 + [72]) = $7
	*($5 + [76]) = $9
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	*($5 + [52]) = ($1 + [32])
	*($5 + [56]) = ($1 + [48])
	*($5 + [60]) = ($1 + [64])
	*($5 + [64]) = ($1 + [80])
	*($5 + [68]) = ($1 + [96])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [136])
	*($5 + [88]) = ($1 + [144])
	*($5 + [92]) = ($1 + [160])
	*($5 + [96]) = ($1 + [168])
	*($5 + [100]) = ($1 + [184])
	*($5 + [104]) = ($1 + [200])
	*($5 + [108]) = ($1 + [208])
	*($5 + [112]) = ($1 + [224])
	*($5 + [120]) = ($1 + [240])
	*($5 + [116]) = ($1 + [232])
	CALL $86(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [300]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL $4($4)
	
.LABEL $label$8
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($5 + [16]), ($5 + [40]), [8]) == 0) ){ goto $label$10 }
	$4 = ($1 + [304])
	$3 = *($4)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$11 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($5 + [32]), $6)
	*($4) = $3
	
.LABEL $label$11
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$10
	*($5 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($8, ($5 + [40]), [8]) == 0) ){ goto $label$12 }
	$1 = ($1 + [308])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$13 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($5 + [32]), $6)
	*($1) = $3
	
.LABEL $label$13
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$12
	$global$0 = ($5 + [128])
}

void .FUNC $224 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	*($1 + [16]) = (int_64)0
	*($1 + [24]) = [0]
	*($1 + [32]) = (int_64)1
	$4 = *($1)
	$5 = $2
	$2 = ($5 + [-48])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($5 + [-12])
	CALL $70($3, $1)
	CALL db_update_i64(*($1 + [44]), (int_64)0, $2, [36])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [816])
	$global$0 = $3
	CALL $0()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$27 }
	if ( ((int_64)$2 > (int_64)-4417247484950609921) ){ goto $label$26 }
	if ( ((int_64)$2 <= (int_64)-4817985628236939265) ){ goto $label$25 }
	if ( ((int_64)$2 <= (int_64)-4417357958945275905) ){ goto $label$23 }
	if ( ((int_64)$2 > (int_64)-4417357958719094785) ){ goto $label$19 }
	if ( ((int_64)$2 == (int_64)-4417357958945275904) ){ goto $label$17 }
	if ( ((int_64)$2 != (int_64)-4417357958889979904) ){ goto $label$1 }
	*($3 + [764]) = [0]
	*($3 + [760]) = [4]
	*($3 + [56]) = *($3 + [760])
	CALL $226($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$27
	*($3 + [600]) = [13465]
	*($3 + [604]) = CALL $17([13465])
	*($3 + [248]) = *($3 + [600])
	CALL $121(($3 + [304]), ($3 + [248]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	CALL $227(($3 + [552]))
	if ( ((int_64)*($3 + [560]) != (int_64)$0) ){ goto $label$28 }
	if ( ((int_64)*($3 + [568]) < (int_64)1) ){ goto $label$28 }
	$4 = *($3 + [584])
	if ( (( *(($3 + [588])) ? uint_32($4 >> [1]) : ($4 & [1]) ) == 0) ){ goto $label$28 }
	*((($3 + [232]) + [8])) = [0]
	*($3 + [296]) = [0]
	*($3 + [232]) = (int_64)0
	*($3 + [288]) = (int_64)0
	$5 = CALL $56(($3 + [304]), $0, $1, ($3 + [232]))
	$4 = ($3 + [568])
	*(($6 = (($3 + [272]) + [8]))) = *(($4 + [8]))
	*($3 + [272]) = *($4)
	$2 = *((($3 + [552]) + [8]))
	$0 = *($3 + [552])
	$4 = CALL $27(($3 + [256]), ($3 + [584]))
	*((($3 + [216]) + [8])) = *($6)
	*($3 + [216]) = *($3 + [272])
	CALL $122($5, $1, $0, $2, ($3 + [216]), $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$29 }
	CALL $11(*($4 + [8]))
	
.LABEL $label$29
	CALL $58($5)
	
.LABEL $label$28
	if ( ((*($3 + [584]) & [1]) == 0) ){ goto $label$1 }
	CALL $11(*(($3 + [592])))
	goto $label$1 
	
.LABEL $label$26
	if ( ((int_64)$2 <= (int_64)-3106564272771563521) ){ goto $label$24 }
	if ( ((int_64)$2 <= (int_64)4929617502180212735) ){ goto $label$22 }
	if ( ((int_64)$2 > (int_64)6498492797832921087) ){ goto $label$18 }
	if ( ((int_64)$2 == (int_64)4929617502180212736) ){ goto $label$16 }
	if ( ((int_64)$2 != (int_64)6498459369675291136) ){ goto $label$1 }
	*($3 + [652]) = [0]
	*($3 + [648]) = [5]
	*($3 + [168]) = *($3 + [648])
	CALL $228($1, $1, ($3 + [168]))
	goto $label$1 
	
.LABEL $label$25
	if ( ((int_64)$2 > (int_64)-5000872268442002129) ){ goto $label$21 }
	if ( ((int_64)$2 == (int_64)-8281834640038166528) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)-6533262907872903168) ){ goto $label$14 }
	if ( ((int_64)$2 != (int_64)-5001137060402948816) ){ goto $label$1 }
	*($3 + [788]) = [0]
	*($3 + [784]) = [6]
	*($3 + [32]) = *($3 + [784])
	CALL $229($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$24
	if ( ((int_64)$2 > (int_64)-4417093137025466369) ){ goto $label$20 }
	if ( ((int_64)$2 == (int_64)-4417247484950609920) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)-4417093141236895232) ){ goto $label$12 }
	if ( ((int_64)$2 != (int_64)-4417093140769128448) ){ goto $label$1 }
	*($3 + [716]) = [0]
	*($3 + [712]) = [7]
	*($3 + [104]) = *($3 + [712])
	CALL $230($1, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$23
	if ( ((int_64)$2 == (int_64)-4817985628236939264) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)-4417357959021587056) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)-4417357959006969344) ){ goto $label$1 }
	*($3 + [756]) = [0]
	*($3 + [752]) = [8]
	*($3 + [64]) = *($3 + [752])
	CALL $231($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$22
	if ( ((int_64)$2 == (int_64)-3106564272771563520) ){ goto $label$9 }
	if ( ((int_64)$2 == (int_64)4733511906784968704) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)4733516658821686272) ){ goto $label$1 }
	*($3 + [684]) = [0]
	*($3 + [680]) = [9]
	*($3 + [136]) = *($3 + [680])
	CALL $232($1, $1, ($3 + [136]))
	goto $label$1 
	
.LABEL $label$21
	if ( ((int_64)$2 == (int_64)-5000872268442002128) ){ goto $label$7 }
	if ( ((int_64)$2 == (int_64)-5000872232805554688) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)-4848913219135619072) ){ goto $label$1 }
	*($3 + [668]) = [0]
	*($3 + [664]) = [10]
	*($3 + [152]) = *($3 + [664])
	CALL $233($1, $1, ($3 + [152]))
	goto $label$1 
	
.LABEL $label$20
	if ( ((int_64)$2 == (int_64)-4417093137025466368) ){ goto $label$5 }
	if ( ((int_64)$2 == (int_64)-4417093131177389056) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*($3 + [700]) = [0]
	*($3 + [696]) = [11]
	*($3 + [120]) = *($3 + [696])
	CALL $234($1, $1, ($3 + [120]))
	goto $label$1 
	
.LABEL $label$19
	if ( ((int_64)$2 == (int_64)-4417357958719094784) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-4417320289264916208) ){ goto $label$1 }
	*($3 + [796]) = [0]
	*($3 + [792]) = [12]
	*($3 + [24]) = *($3 + [792])
	CALL $231($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$18
	if ( ((int_64)$2 == (int_64)6498492797832921088) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)6714450580469186560) ){ goto $label$1 }
	*($3 + [628]) = [0]
	*($3 + [624]) = [13]
	*($3 + [192]) = *($3 + [624])
	CALL $235($1, $1, ($3 + [192]))
	goto $label$1 
	
.LABEL $label$17
	*($3 + [748]) = [0]
	*($3 + [744]) = [14]
	*($3 + [72]) = *($3 + [744])
	CALL $236($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$16
	*($3 + [612]) = [0]
	*($3 + [608]) = [15]
	*($3 + [208]) = *($3 + [608])
	CALL $237($1, $1, ($3 + [208]))
	goto $label$1 
	
.LABEL $label$15
	*($3 + [644]) = [0]
	*($3 + [640]) = [16]
	*($3 + [176]) = *($3 + [640])
	CALL $238($1, $1, ($3 + [176]))
	goto $label$1 
	
.LABEL $label$14
	*($3 + [620]) = [0]
	*($3 + [616]) = [17]
	*($3 + [200]) = *($3 + [616])
	CALL $239($1, $1, ($3 + [200]))
	goto $label$1 
	
.LABEL $label$13
	*($3 + [812]) = [0]
	*($3 + [808]) = [18]
	*($3 + [8]) = *($3 + [808])
	CALL $240($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$12
	*($3 + [732]) = [0]
	*($3 + [728]) = [19]
	*($3 + [88]) = *($3 + [728])
	CALL $241($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$11
	*($3 + [676]) = [0]
	*($3 + [672]) = [20]
	*($3 + [144]) = *($3 + [672])
	CALL $233($1, $1, ($3 + [144]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [780]) = [0]
	*($3 + [776]) = [21]
	*($3 + [40]) = *($3 + [776])
	CALL $242($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [636]) = [0]
	*($3 + [632]) = [22]
	*($3 + [184]) = *($3 + [632])
	CALL $238($1, $1, ($3 + [184]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [692]) = [0]
	*($3 + [688]) = [23]
	*($3 + [128]) = *($3 + [688])
	CALL $243($1, $1, ($3 + [128]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [804]) = [0]
	*($3 + [800]) = [24]
	*($3 + [16]) = *($3 + [800])
	CALL $244($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [740]) = [0]
	*($3 + [736]) = [25]
	*($3 + [80]) = *($3 + [736])
	CALL $245($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [724]) = [0]
	*($3 + [720]) = [26]
	*($3 + [96]) = *($3 + [720])
	CALL $246($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [708]) = [0]
	*($3 + [704]) = [27]
	*($3 + [112]) = *($3 + [704])
	CALL $247($1, $1, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [772]) = [0]
	*($3 + [768]) = [28]
	*($3 + [48]) = *($3 + [768])
	CALL $248($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [660]) = [0]
	*($3 + [656]) = [29]
	*($3 + [160]) = *($3 + [656])
	CALL $228($1, $1, ($3 + [160]))
	
.LABEL $label$1
	CALL $43([0])
	$global$0 = ($3 + [816])
}

int_32 .FUNC $226 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [352])
	$global$0 = $3
	*(($4 = $3) + [344]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [328])) = [0]
	*($4 + [312]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [300]) = $2
	*($4 + [296]) = $2
	*($4 + [304]) = ($2 + $5)
	*($4 + [24]) = ($4 + [296])
	*($4 + [48]) = ($4 + [312])
	CALL $259(($4 + [48]), ($4 + [24]))
	$3 = *($4 + [304])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [296])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $56(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [344])
	CALL $260(($4 + [24]), ($4 + [312]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $58($3)
	if ( ((*($4 + [320]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [328])))
	
.LABEL $label$5
	$global$0 = ($4 + [352])
	return [1]
}

void .FUNC $227 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$2 = $1
	$global$0 = $1
	$3 = CALL action_data_size()
	if ( ($3 <= [513]) ){ goto $label$2 }
	$1 = CALL $2($3)
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 - (($3 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$1
	CALL read_action_data($1, $3)
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*(($0 + [40])) = [0]
	*($2 + [4]) = $1
	*($2) = $1
	*($2 + [8]) = ($1 + $3)
	CALL $164($2, $0)
	$global$0 = ($2 + [16])
}

void .FUNC $220 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14485])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14530])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [14580])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $221 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [128])
	$global$0 = $2
	CALL require_auth(*($0))
	*((($2 + [80]) + [32])) = [0]
	*($2 + [88]) = $1
	*($2 + [96]) = (int_64)-1
	*($2 + [104]) = (int_64)0
	*($2 + [116]) = [0]
	$3 = *($0)
	*($2 + [80]) = $3
	*((($2 + [40]) + [32])) = [0]
	*(($2 + [78])) = [0]
	*($2 + [48]) = $1
	*($2 + [40]) = $3
	*($2 + [56]) = (int_64)-1
	*($2 + [64]) = (int_64)0
	*($2 + [76]) = [0]
	*(($2 + [32])) = [0]
	*($2 + [8]) = $1
	*($2) = $3
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $1, (int_64)-6495091301338316800, (int_64)0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $206(($2 + [80]), $4)
	CALL eosio_assert([1], [13228])
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL db_lowerbound_i64($3, $1, (int_64)4733526061789216768, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL $183(($2 + [40]), $4)
	CALL eosio_assert([1], [13228])
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	$5 = CALL db_lowerbound_i64($3, $1, (int_64)-4858352806483984384, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $222($2, $5)
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [13228])
	
.LABEL $label$1
	$4 = [0]
	$6 = (($2 + [80]) + [8])
	$5 = CALL db_lowerbound_i64(*($2 + [80]), *($6), (int_64)-6495091301338316800, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$7 = [1]
	
.LOOP $label$6:
	CALL $206(($2 + [80]), $5)
	$4 = $7
	if ( ((uint_32)($4 + [-1]) > (uint_32)[199]) ){ goto $label$5 }
	$5 = CALL db_lowerbound_i64(*($2 + [80]), *($6), (int_64)-6495091301338316800, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	$5 = CALL $206(($2 + [80]), $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = [0]
	CALL eosio_assert([0], [14421])
	CALL eosio_assert([0], [14455])
	
.LABEL $label$7
	$7 = CALL db_next_i64(*($5 + [84]), ($2 + [120]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	CALL $206(($2 + [80]), $7)
	
.LABEL $label$9
	CALL $202(($2 + [80]), $5)
	$7 = ($4 + [1])
	$5 = CALL db_lowerbound_i64(*($2 + [80]), *($6), (int_64)-6495091301338316800, (int_64)0)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	
.LABEL $label$5
	$5 = CALL db_lowerbound_i64(*($2 + [40]), *((($2 + [40]) + [8])), (int_64)4733526061789216768, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$10 }
	$7 = ($2 + [48])
	
.LOOP $label$12:
	CALL $183(($2 + [40]), $5)
	$6 = $4
	if ( ((uint_32)$6 > (uint_32)[199]) ){ goto $label$11 }
	$4 = CALL db_lowerbound_i64(*($2 + [40]), *($7), (int_64)4733526061789216768, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$14 }
	$5 = CALL $183(($2 + [40]), $4)
	goto $label$13 
	
.LABEL $label$14
	$5 = [0]
	CALL eosio_assert([0], [14421])
	CALL eosio_assert([0], [14455])
	
.LABEL $label$13
	$4 = CALL db_next_i64(*($5 + [140]), ($2 + [120]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$15 }
	CALL $183(($2 + [40]), $4)
	
.LABEL $label$15
	$4 = ($6 + [1])
	CALL $193(($2 + [40]), $5)
	$5 = CALL db_lowerbound_i64(*($2 + [40]), *($7), (int_64)4733526061789216768, (int_64)0)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$12 }
	
.LABEL $label$11
	$4 = ($6 + [1])
	
.LABEL $label$10
	$7 = ($2 + [8])
	$5 = CALL db_lowerbound_i64(*($2), *($7), (int_64)-4858352806483984384, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$16 }
	$6 = ($4 + [-1])
	
.LOOP $label$17:
	CALL $222($2, $5)
	$6 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[199]) ){ goto $label$16 }
	$4 = CALL db_lowerbound_i64(*($2), *($7), (int_64)-4858352806483984384, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$19 }
	$4 = CALL $222($2, $4)
	goto $label$18 
	
.LABEL $label$19
	$4 = [0]
	CALL eosio_assert([0], [14421])
	CALL eosio_assert([0], [14455])
	
.LABEL $label$18
	$5 = CALL db_next_i64(*($4 + [52]), ($2 + [120]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$20 }
	CALL $222($2, $5)
	
.LABEL $label$20
	CALL $223($2, $4)
	$5 = CALL db_lowerbound_i64(*($2), *($7), (int_64)-4858352806483984384, (int_64)0)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$17 }
	
.LABEL $label$16
	$8 = ($0 + [128])
	$5 = *(($0 + [156]))
	$7 = *(($0 + [152]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$23 }
	
.LOOP $label$25:
	$4 = ($5 + [-24])
	$6 = *($4)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$24 }
	$5 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$23 }
	if ( ((int_32)*($6 + [40]) == (int_32)$8) ){ goto $label$22 }
	CALL eosio_assert([0], [13846])
	goto $label$22 
	
.LABEL $label$23
	$4 = CALL db_find_i64(*($8), *(($0 + [136])), (int_64)-6154885545578430464, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$21 }
	$6 = CALL $68($8, $4)
	if ( ((int_32)*($6 + [40]) == (int_32)$8) ){ goto $label$22 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$22
	CALL $224($8, $6)
	
.LABEL $label$21
	$4 = CALL db_lowerbound_i64(*($2 + [80]), *((($2 + [80]) + [8])), (int_64)-6495091301338316800, (int_64)0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$28 }
	CALL $206(($2 + [80]), $4)
	CALL prints([13272])
	$6 = *($2 + [24])
	if ( $6 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$4 = CALL db_lowerbound_i64(*($2 + [40]), *((($2 + [40]) + [8])), (int_64)4733526061789216768, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$29 }
	CALL $183(($2 + [40]), $4)
	CALL prints([13272])
	$6 = *($2 + [24])
	if ( $6 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$4 = CALL db_lowerbound_i64(*($2), *(($2 + [8])), (int_64)-4858352806483984384, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$30 }
	CALL $222($2, $4)
	CALL prints([13272])
	$6 = *($2 + [24])
	if ( $6 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$30
	CALL prints([13242])
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$26 }
	
.LABEL $label$27
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$32 }
	
.LOOP $label$33:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$34 }
	CALL $11($5)
	
.LABEL $label$34
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$33 }
	$4 = *(($2 + [24]))
	goto $label$31 
	
.LABEL $label$32
	$4 = $6
	
.LABEL $label$31
	*($7) = $6
	CALL $11($4)
	
.LABEL $label$26
	$6 = *($2 + [64])
	if ( ($6 == 0) ){ goto $label$35 }
	$7 = ($2 + [68])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$37 }
	
.LOOP $label$38:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$39 }
	if ( ((*(($5 + [80])) & [1]) == 0) ){ goto $label$40 }
	CALL $11(*(($5 + [88])))
	
.LABEL $label$40
	CALL $11($5)
	
.LABEL $label$39
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$38 }
	$4 = *(($2 + [64]))
	goto $label$36 
	
.LABEL $label$37
	$4 = $6
	
.LABEL $label$36
	*($7) = $6
	CALL $11($4)
	
.LABEL $label$35
	$6 = *($2 + [104])
	if ( ($6 == 0) ){ goto $label$41 }
	$7 = ($2 + [108])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$43 }
	
.LOOP $label$44:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$45 }
	CALL $11($5)
	
.LABEL $label$45
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$44 }
	$4 = *(($2 + [104]))
	goto $label$42 
	
.LABEL $label$43
	$4 = $6
	
.LABEL $label$42
	*($7) = $6
	CALL $11($4)
	
.LABEL $label$41
	$global$0 = ($2 + [128])
}

int_32 .FUNC $222 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13814])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([64])) + [48]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$7
	$7 = ($5 + [16])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((uint_32)($4 + [-8]) > (uint_32)[31]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$8
	CALL memcpy($7, $8, [32])
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $209(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $4($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $11($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $80 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = CALL $81($0, $1)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($5 + [24]))), [9595])
	CALL require_auth(*($5 + [128]))
	$7 = *($2)
	$6 = CALL $17([9610])
	if ( ((int_32)$6 != (int_32)( *($2 + [4]) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$5 }
	if ( (CALL $41($2, [0], [-1], [9610], $6) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = *($2)
	$6 = ($2 + [4])
	$8 = CALL $17([9674])
	if ( ((int_32)$8 != (int_32)( *($6) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$6 }
	if ( (CALL $41($2, [0], [-1], [9674], $8) == 0) ){ goto $label$3 }
	
.LABEL $label$6
	$7 = *($2)
	$8 = CALL $17([9718])
	if ( ((int_32)$8 != (int_32)( *($6) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$7 }
	if ( (CALL $41($2, [0], [-1], [9718], $8) == 0) ){ goto $label$2 }
	
.LABEL $label$7
	$7 = *($2)
	$6 = CALL $17([9762])
	if ( ((int_32)$6 != (int_32)( *(($2 + [4])) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$8 }
	if ( (CALL $41($2, [0], [-1], [9762], $6) == 0) ){ goto $label$1 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9082])
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($3) >= (int_64)*($5 + [16])), [9621])
	*($4 + [8]) = $3
	CALL $82(($0 + [168]), $5, ($4 + [8]))
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$3
	$1 = *($3)
	CALL eosio_assert((((int_64)$1 > (int_64)0) & ((int_64)$1 < (int_64)*($5 + [64]))), [9692])
	*($4 + [8]) = $3
	CALL $83(($0 + [168]), $5, ($4 + [8]))
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$2
	$1 = *($3)
	CALL eosio_assert((((int_64)*($5 + [48]) < (int_64)$1) & ((int_64)$1 < (int_64)*($5 + [80]))), [9736])
	*($4 + [8]) = $3
	CALL $84(($0 + [168]), $5, ($4 + [8]))
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($3) > (int_64)*($5 + [64])), [9781])
	*($4 + [8]) = $3
	CALL $85(($0 + [168]), $5, ($4 + [8]))
	$global$0 = ($4 + [16])
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [4])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [2])
	$3 = (*($2) + [2])
	*($2) = $3
	$2 = ($1 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [4])
	$2 = (*($6) + [4])
	*(($6 = ($0 + [4]))) = $2
	$7 = (int_64)0
	$8 = ($0 + [8])
	$5 = [0]
	
.LOOP $label$4:
	if ( ($2 <= *($8)) ){ goto $label$5 }
	CALL eosio_assert([0], [13842])
	$2 = *($6)
	
.LABEL $label$5
	$3 = *($2)
	$4 = ($2 + [1])
	*($6) = $4
	$2 = ($5 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($3 & [127]) << $2)))
	$5 = ($2 + [7])
	$2 = $4
	if ( ($3 & [128]) ){ goto $label$4 }
	*($1 + [12]) = $7
	$2 = ($1 + [16])
	$6 = ($0 + [8])
	if ( ((int_32)*($6) != (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$4 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [1])
	$2 = (*($5) + [1])
	*(($5 = ($0 + [4]))) = $2
	$7 = (int_64)0
	$4 = [0]
	
.LOOP $label$7:
	if ( ($2 <= *($6)) ){ goto $label$8 }
	CALL eosio_assert([0], [13842])
	$2 = *($5)
	
.LABEL $label$8
	$3 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$4 = ($4 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($3 & [127]) << $4)))
	$4 = ($4 + [7])
	$2 = $2
	if ( ($3 & [128]) ){ goto $label$7 }
	*($1 + [20]) = $7
	return $0
}

void .FUNC $72 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [15]) = $3
	CALL require_auth(*($0))
	$5 = ($0 + [88])
	$6 = CALL $73($5, $1, [9050])
	$0 = *($2)
	$3 = CALL $17([9075])
	if ( ((int_32)$3 != (int_32)( *($2 + [4]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$2 }
	if ( (CALL $41($2, [0], [-1], [9075], $3) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9082])
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$1
	*($4 + [8]) = ($4 + [15])
	CALL $74($5, $6, ($4 + [8]))
	$global$0 = ($4 + [16])
}

int_32 .FUNC $73 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13846])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6154885545578332160, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $64($0, $5)
	if ( ((int_32)*($6 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13846])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((int_32)(*($5) - $3) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [20])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($3, $4, [4])
	$3 = (*($2) + [4])
	*($2) = $3
	$2 = ($1 + [24])
	if ( ((int_32)(*($5) - $3) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [13474])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $2, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [32])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13474])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($3, $1, [8])
	*($2) = (*($2) + [8])
	return $0
}

void .FUNC $71 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $45($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $76 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_64 $11, int_64 $12, int_32 $13, float_64 $14, int_32 $15, int_32 $16)
{
	int_32 $17
	int_64 $18
	int_32 $19
	int_32 $20
	int_64 $21
	int_32 $22
	$17 = ($global$0 - [176])
	$global$0 = $17
	*($17 + [120]) = $2
	*($17 + [128]) = $1
	*($17 + [112]) = $3
	*($17 + [96]) = $12
	*($17 + [92]) = $8
	*($17 + [80]) = $14
	*($17 + [79]) = $16
	*($17 + [104]) = $11
	CALL require_auth(*($0))
	CALL eosio_assert(CALL $fimport$29($1), [9101])
	CALL eosio_assert(CALL $fimport$29($11), [9142])
	$11 = (uint_64)$2 >> (uint_64)(int_64)8)
	$16 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$18 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$11 = $18
	$8 = [1]
	$19 = $16
	$16 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$11 = $18
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$8 = ((int_32)$16 < (int_32)[6])
	$19 = ($16 + [1])
	$16 = $19
	if ( $8 ){ goto $label$5 }
	$8 = [1]
	$16 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [9179])
	$11 = (uint_64)$3 >> (uint_64)(int_64)8)
	$16 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$18 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$11 = $18
	$8 = [1]
	$19 = $16
	$16 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$11 = $18
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$8 = ((int_32)$16 < (int_32)[6])
	$19 = ($16 + [1])
	$16 = $19
	if ( $8 ){ goto $label$10 }
	$8 = [1]
	$16 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	
.LABEL $label$6
	CALL eosio_assert($8, [9205])
	CALL eosio_assert(((int_32)((CASTING uint_32)(uint_64 $2) & [255]) == (int_32)((CASTING uint_32)(uint_64 $3) & [255])), [9230])
	$3 = *($4 + [8])
	$20 = [0]
	$8 = [0]
	$21 = *($4)
	if ( ((uint_64)((int_64)$21 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$11 = (uint_64)$3 >> (uint_64)(int_64)8)
	$16 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$18 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$11 = $18
	$8 = [1]
	$19 = $16
	$16 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$11 = $18
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$8 = ((int_32)$16 < (int_32)[6])
	$19 = ($16 + [1])
	$16 = $19
	if ( $8 ){ goto $label$15 }
	$8 = [1]
	$16 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$8 = [0]
	
.LABEL $label$11
	CALL eosio_assert($8, [9249])
	CALL eosio_assert(((int_64)$21 > (int_64)0), [9268])
	if ( ((int_64)$3 != (int_64)$2) ){ goto $label$16 }
	if ( ((int_64)*($5 + [8]) != (int_64)$2) ){ goto $label$16 }
	if ( ((int_64)*($6 + [8]) != (int_64)$2) ){ goto $label$16 }
	if ( ((int_64)*($7 + [8]) != (int_64)$2) ){ goto $label$16 }
	if ( ((int_64)*($13 + [8]) != (int_64)$2) ){ goto $label$16 }
	if ( ((int_64)*($15 + [8]) != (int_64)$2) ){ goto $label$16 }
	$11 = *($5)
	if ( ((int_64)$11 < (int_64)1) ){ goto $label$16 }
	$18 = *($6)
	if ( ((int_64)$18 <= (int_64)$11) ){ goto $label$16 }
	if ( ((int_64)*($7) <= (int_64)$18) ){ goto $label$16 }
	if ( ((int_64)*($13) < (int_64)0) ){ goto $label$16 }
	$20 = ((int_32)(CASTING uint_32)(uint_64 (uint_64)*($15) >> (uint_64)(int_64)63)) ^ (int_32)[1])
	
.LABEL $label$16
	CALL eosio_assert($20, [9296])
	$16 = *($9)
	if ( ($16 & [1]) ){ goto $label$18 }
	$16 = uint_32($16 >> [1])
	goto $label$17 
	
.LABEL $label$18
	$16 = *($9 + [4])
	
.LABEL $label$17
	CALL eosio_assert(($16 <= [256]), [9310])
	$16 = *($10)
	if ( ($16 & [1]) ){ goto $label$20 }
	$16 = uint_32($16 >> [1])
	goto $label$19 
	
.LABEL $label$20
	$16 = *($10 + [4])
	
.LABEL $label$19
	CALL eosio_assert(($16 <= [256]), [9347])
	if ( ((int_64)$12 != (int_64)6609776272782393344) ){ goto $label$22 }
	CALL eosio_assert([1], [9379])
	goto $label$21 
	
.LABEL $label$22
	CALL eosio_assert(((int_64)$12 == (int_64)-5065729345117487104), [9379])
	
.LABEL $label$21
	CALL eosio_assert((((float_64)$14 >= (float_64)(float_64)0) & ((float_64)$14 <= (float_64)(float_64)0.05)), [9404])
	$11 = *($5)
	CALL eosio_assert(((int_64)((int_64)*($13) * (int_64)5) <= (int_64)$11), [9430])
	CALL eosio_assert(((int_64)((int_64)*($15) * (int_64)10) <= (int_64)$11), [9501])
	$22 = ($0 + [168])
	$8 = *(($0 + [196]))
	$20 = *(($0 + [192]))
	if ( ((int_32)$20 == (int_32)$8) ){ goto $label$24 }
	
.LOOP $label$26:
	$16 = ($8 + [-24])
	$19 = *($16)
	if ( ((int_64)*($19) == (int_64)$1) ){ goto $label$25 }
	$8 = $16
	if ( ((int_32)$20 != (int_32)$16) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	if ( ((int_32)$20 == (int_32)$8) ){ goto $label$24 }
	if ( ((int_32)*($19 + [296]) == (int_32)$22) ){ goto $label$23 }
	CALL eosio_assert([0], [13846])
	goto $label$23 
	
.LABEL $label$24
	$19 = [0]
	$16 = CALL db_find_i64(*($22), *(($0 + [176])), (int_64)3607571210637934592, $1)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$23 }
	$19 = CALL $77($22, $16)
	if ( ((int_32)*($19 + [296]) == (int_32)$22) ){ goto $label$23 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$23
	CALL eosio_assert(($19 == 0), [9566])
	$11 = *($0)
	*($17 + [20]) = $4
	*($17 + [24]) = $5
	*($17 + [28]) = $6
	*($17 + [32]) = $7
	*($17 + [40]) = $9
	*($17 + [44]) = $10
	*($17 + [56]) = $13
	*($17 + [64]) = $15
	*($17 + [12]) = ($17 + [112])
	*($17 + [8]) = ($17 + [128])
	*($17 + [16]) = ($17 + [120])
	*($17 + [36]) = ($17 + [92])
	*($17 + [48]) = ($17 + [104])
	*($17 + [52]) = ($17 + [96])
	*($17 + [60]) = ($17 + [80])
	*($17 + [68]) = ($17 + [79])
	*($17 + [168]) = $11
	if ( ((int_64)*(($0 + [168])) == (int_64)CALL current_receiver()) ){ goto $label$27 }
	CALL eosio_assert([0], [14370])
	
.LABEL $label$27
	*($17 + [144]) = $22
	*($17 + [148]) = ($17 + [8])
	*($17 + [152]) = ($17 + [168])
	*(($16 = CALL $9([312])) + [8]) = (int_64)0
	*($16) = (int_64)0
	*($16 + [16]) = (int_64)0
	*($16 + [24]) = (int_64)0
	*($16 + [32]) = (int_64)0
	*($16 + [40]) = (int_64)0
	*($16 + [48]) = (int_64)0
	*($16 + [56]) = (int_64)0
	*($16 + [64]) = (int_64)0
	*($16 + [72]) = (int_64)0
	*($16 + [80]) = (int_64)0
	*($16 + [88]) = (int_64)0
	*($16 + [100 align=4]) = (int_64)0
	*($16 + [108 align=4]) = (int_64)0
	*($16 + [116 align=4]) = (int_64)0
	*($16 + [128]) = (int_64)0
	*($16 + [136]) = (int_64)0
	*($16 + [144]) = (int_64)0
	*($16 + [168]) = (int_64)0
	*($16 + [152]) = (int_64)0
	*($16 + [176]) = (int_64)0
	*($16 + [184]) = (int_64)0
	*($16 + [192]) = (int_64)0
	*($16 + [208]) = (int_64)0
	*($16 + [216]) = (int_64)0
	*($16 + [256]) = (int_64)0
	*($16 + [264]) = (int_64)0
	*($16 + [280]) = (int_64)0
	*($16 + [288]) = (int_64)0
	*($16 + [296]) = $22
	CALL $78(($17 + [144]), $16)
	*($17 + [160]) = $16
	$11 = *($16)
	*($17 + [144]) = $11
	$19 = *($16 + [300])
	*($17 + [140]) = $19
	$20 = ($0 + [196])
	$8 = *($20)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [200]))) ){ goto $label$30 }
	*($8 + [8]) = $11
	*($8 + [16]) = $19
	*($17 + [160]) = [0]
	*($8) = $16
	*($20) = ($8 + [24])
	$16 = *($17 + [160])
	*($17 + [160]) = [0]
	if ( ($16 == 0) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	CALL $79(($0 + [192]), ($17 + [160]), ($17 + [144]), ($17 + [140]))
	$16 = *($17 + [160])
	*($17 + [160]) = [0]
	if ( $16 ){ goto $label$28 }
	
.LABEL $label$29
	$global$0 = ($17 + [176])
	return 
	
.LABEL $label$28
	if ( ((*($16 + [112]) & [1]) == 0) ){ goto $label$31 }
	CALL $11(*(($16 + [120])))
	
.LABEL $label$31
	if ( ((*($16 + [100]) & [1]) == 0) ){ goto $label$32 }
	CALL $11(*(($16 + [108])))
	
.LABEL $label$32
	CALL $11($16)
	$global$0 = ($17 + [176])
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [128])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13814])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([312])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [100 align=4]) = (int_64)0
	*($5 + [108 align=4]) = (int_64)0
	*($5 + [116 align=4]) = (int_64)0
	*($5 + [128]) = (int_64)0
	*($5 + [136]) = (int_64)0
	*($5 + [144]) = (int_64)0
	*($5 + [168]) = (int_64)0
	*($5 + [152]) = (int_64)0
	*($5 + [176]) = (int_64)0
	*($5 + [184]) = (int_64)0
	*($5 + [192]) = (int_64)0
	*($5 + [208]) = (int_64)0
	*($5 + [216]) = (int_64)0
	*($5 + [256]) = (int_64)0
	*($5 + [264]) = (int_64)0
	*($5 + [280]) = (int_64)0
	*($5 + [288]) = (int_64)0
	*($5 + [296]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [64])
	*($3 + [64]) = ($5 + [80])
	*($3 + [68]) = ($5 + [96])
	*($3 + [72]) = ($5 + [100])
	*($3 + [76]) = ($5 + [112])
	*($3 + [80]) = ($5 + [128])
	*($3 + [84]) = ($5 + [136])
	*($3 + [88]) = ($5 + [144])
	*($3 + [92]) = ($5 + [160])
	*($3 + [96]) = ($5 + [168])
	*($3 + [100]) = ($5 + [184])
	*($3 + [104]) = ($5 + [200])
	*($3 + [108]) = ($5 + [208])
	*($3 + [112]) = ($5 + [224])
	*($3 + [120]) = ($5 + [240])
	*($3 + [116]) = ($5 + [232])
	CALL $333(($3 + [40]), ($3 + [32]))
	*($5 + [300]) = $1
	*($5 + [304 align=4]) = (int_64)-1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $79(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [112]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [120])))
	
.LABEL $label$11
	if ( ((*($1 + [100]) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($1 + [108])))
	
.LABEL $label$12
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [128])
	return $5
}

void .FUNC $74 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($1 + [60]) = *(*($2))
	$2 = *($1 + [8])
	$5 = ( *(($1 + [12])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [45])
	$6 = (CASTING uint_64)(uint_32 $5)
	$7 = *($1)
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($2 <= [513]) ){ goto $label$5 }
	$3 = CALL $2($2)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	CALL $75($4, $1)
	CALL db_update_i64(*($1 + [68]), (int_64)0, $3, $2)
	if ( ((uint_32)$2 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $4($3)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$6
	$global$0 = ($4 + [16])
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$4 = ($1 + [24])
	$3 = *($0 + [4])
	$0 = CALL $331($0, ($1 + [8]))
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$3 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $3
	$4 = ($1 + [32])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [13474])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [52])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [13474])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [4])
	$4 = (*($3) + [4])
	*($3) = $4
	$3 = ($1 + [56])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [13474])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $3, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [15]) = *($1 + [60])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [13474])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, ($2 + [15]), [1])
	*($3) = (*($3) + [1])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$5 = *(*($4 + [8]))
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = *($0)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$5 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [11485])
	
.LABEL $label$1
	*($1 + [16]) = (int_64)0
	*(($1 + [24])) = $5
	$8 = *($4 + [12])
	*($1 + [32]) = *($8)
	*(($1 + [40])) = *(($8 + [8]))
	$8 = *($4 + [16])
	*($1 + [48]) = *($8)
	*(($1 + [56])) = *(($8 + [8]))
	$8 = *($4 + [20])
	*($1 + [64]) = *($8)
	*(($1 + [72])) = *(($8 + [8]))
	$8 = *($4 + [24])
	*($1 + [80]) = *($8)
	*(($1 + [88])) = *(($8 + [8]))
	*($1 + [96]) = *(*($4 + [28]))
	$12 = ($1 + [100])
	CALL $29($12, *($4 + [32]))
	$13 = ($1 + [112])
	CALL $29($13, *($4 + [36]))
	*($1 + [128]) = *(*($4 + [40]))
	*($1 + [136]) = *(*($4 + [44]))
	$8 = *($4 + [48])
	*(($1 + [152])) = *(($8 + [8]))
	*($1 + [144]) = *($8)
	*($1 + [160]) = *(*($4 + [52]))
	$8 = *($4 + [56])
	*(($1 + [176])) = *(($8 + [8]))
	*($1 + [168]) = *($8)
	$14 = ($1 + [168])
	$15 = ($1 + [160])
	$16 = ($1 + [144])
	$17 = ($1 + [96])
	$18 = ($1 + [80])
	$19 = ($1 + [64])
	$20 = ($1 + [48])
	$21 = ($1 + [32])
	$5 = *(*($4 + [12]) + [8])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$6 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$6 = $9
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$10 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [11485])
	
.LABEL $label$6
	*($1 + [184]) = (int_64)0
	*(($1 + [192])) = $5
	*($1 + [200]) = (int_64)0
	$22 = ($1 + [200])
	$5 = *(*(($4 + [12])) + [8])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$6 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$6 = $9
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$15 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [11485])
	
.LABEL $label$11
	*($1 + [208]) = (int_64)0
	*(($1 + [216])) = $5
	*($1 + [224]) = (int_64)0
	*($1 + [232]) = *(*($4 + [60]))
	$8 = *(($1 + [100]))
	$10 = ( *(($1 + [104])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($10 + [253])
	$6 = (CASTING uint_64)(uint_32 $10)
	$11 = ($1 + [232])
	$4 = ($1 + [224])
	
.LOOP $label$16:
	$8 = ($8 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$16 }
	$10 = *(($1 + [112]))
	$10 = ( *(($1 + [116])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$8 = ($10 + $8)
	$6 = (CASTING uint_64)(uint_32 $10)
	
.LOOP $label$17:
	$8 = ($8 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$17 }
	if ( ($8 <= [513]) ){ goto $label$19 }
	$10 = CALL $2($8)
	goto $label$18 
	
.LABEL $label$19
	$10 = ($2 - (($8 + [15]) & [-16]))
	$global$0 = $10
	
.LABEL $label$18
	*($3 + [4]) = $10
	*($3) = $10
	*($3 + [8]) = ($10 + $8)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = $21
	*($3 + [40]) = $20
	*($3 + [44]) = $19
	*($3 + [48]) = $18
	*($3 + [52]) = $17
	*($3 + [56]) = $12
	*($3 + [60]) = $13
	*($3 + [64]) = ($1 + [128])
	*($3 + [68]) = ($1 + [136])
	*($3 + [72]) = $16
	*($3 + [76]) = $15
	*($3 + [80]) = $14
	*($3 + [84]) = ($1 + [184])
	*($3 + [88]) = $22
	*($3 + [92]) = ($1 + [208])
	*($3 + [96]) = $4
	*($3 + [104]) = ($1 + [240])
	*($3 + [100]) = $11
	CALL $86(($3 + [24]), ($3 + [16]))
	$6 = *($1)
	*($1 + [300]) = CALL db_store_i64(*($7 + [8]), (int_64)3607571210637934592, *(*($0 + [8])), $6, $10, $8)
	if ( ($8 <= [513]) ){ goto $label$20 }
	CALL $4($10)
	
.LABEL $label$20
	if ( (uint_64)($6 <= *($7 + [16])) ){ goto $label$21 }
	*(($7 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$21
	$8 = ($7 + [8])
	$6 = *($8)
	$10 = *(($0 + [8]))
	$9 = *($10)
	$5 = *($1)
	*($3 + [24]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($1 + [304]) = CALL db_idx64_store($6, (int_64)3607571210637934592, $9, $5, ($3 + [24]))
	$6 = *($10)
	$9 = *($8)
	$5 = *($1)
	*($3 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	*(($1 + [308])) = CALL db_idx64_store($9, (int_64)3607571210637934593, $6, $5, ($3 + [24]))
	$global$0 = ($3 + [112])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $45($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [112]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [120])))
	
.LABEL $label$11
	if ( ((*($1 + [100]) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($1 + [108])))
	
.LABEL $label$12
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $11($2)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $259 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $257(*($1), ($3 + [8]))
	$0 = ($3 + [24])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$3 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $258 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $27(($2 + [16]), ($1 + [8]))
	$1 = CALL $27($2, ($1 + [20]))
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$6 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($6) + $0))
	
.LABEL $label$1
	$7 = CALL $27(($2 + [32]), $1)
	$5 = CALL $27(($2 + [48]), $4)
	CALL void $6((int_32 $3), (int_64 $5), (int_32 $7), (int_32 $0))
	if ( (*($2 + [32]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [48]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $11(*($7 + [8]))
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $11(*($5 + [8]))
	$0 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$0 = [1]
	if ( (*($1) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($4) & $0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($1 + [8]))
	if ( ((*($4) & $0) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [8]))
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [64])
}

void .FUNC $312 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$9 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [36])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$10 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$10
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$11 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$11
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [44])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$12 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$12
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$13 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$13
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [52])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$14 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$14
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [56])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$15 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$15
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [60])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$16 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$16
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [64])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$17 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$17
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [68])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$18 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$18
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [72])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$19 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$19
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [76])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$20 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$20
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [80])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$21 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$21
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [84])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$22 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$22
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [88])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$23 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$23
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [92])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$24 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$24
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [96])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$25 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$25
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [100])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$26 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$26
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [104])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$27 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$27
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [108])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$28 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$28
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [112])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$29 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$29
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [116])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$30 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$30
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [120])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$31 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$31
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [124])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$32 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$32
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [128])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$33 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$33
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [132])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$34 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$34
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [136])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$35 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$35
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [140])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$36 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$36
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [144])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$37 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$37
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [148])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$38 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$38
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [152])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$39 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$39
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [156])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$40 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$40
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [160])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$41 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$41
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [164])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$42 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$42
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [168])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$43 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$43
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [172])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$44 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$44
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [176])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$45 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$45
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [180])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$46 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$46
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [184])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$47 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$47
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [188])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$48 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$48
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [192])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$49 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$49
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [196])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$50 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$50
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [200])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$51 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$51
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [204])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$52 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$52
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [208])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$53 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$53
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [212])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$54 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$54
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [216])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$55 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$55
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [220])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$56 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$56
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [224])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$57 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$57
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [228])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$58 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$58
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [232])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$59 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$59
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [236])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$60 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$60
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [240])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$61 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$61
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [244])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$62 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$62
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [248])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$63 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$63
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [252])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$64 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$64
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [256])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$65 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$65
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [260])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$66 }
	CALL eosio_assert([0], [13837])
	$1 = *(($0 + [4]))
	
.LABEL $label$66
	CALL memcpy($3, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

int_32 .FUNC $313 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [31]) = [0]
	$3 = *($0 + [4])
	if ( ((int_32)*($0 + [8]) != (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy(($2 + [31]), $3, [1])
	$3 = (*($3) + [1])
	*(($3 = ($0 + [4]))) = $3
	if ( (*($2 + [31]) == 0) ){ goto $label$2 }
	*(($2 + [20])) = [0]
	*($2 + [12 align=4]) = (int_64)0
	$4 = (($2 + [8]) | [4])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $3, [4])
	*(($3 = ($0 + [4]))) = (*($3) + [4])
	CALL $315($0, $4)
	if ( (*($1 + [16]) == 0) ){ goto $label$5 }
	*($1) = *($2 + [8])
	if ( ((int_32)$1 == (int_32)($2 + [8])) ){ goto $label$6 }
	CALL $316(($1 + [4]), *($2 + [12]), *(($2 + [16])))
	
.LABEL $label$6
	$1 = *($2 + [12])
	if ( ($1 == 0) ){ goto $label$2 }
	goto $label$4 
	
.LABEL $label$5
	*($1) = *($2 + [8])
	*($1 + [4 align=4]) = (int_64)0
	*(($1 + [12])) = [0]
	$3 = (*(($2 + [16])) - *($2 + [12]))
	$4 = ((int_32)$3 / (int_32)[48])
	if ( ($3 == 0) ){ goto $label$8 }
	if ( ((uint_32)$4 >= (uint_32)[89478486]) ){ goto $label$7 }
	$3 = CALL $9($3)
	*(($1 + [4])) = $3
	*(($5 = ($1 + [8]))) = $3
	*(($1 + [12])) = ($3 + ((int_32)$4 * (int_32)[48]))
	$6 = *($2 + [12])
	$4 = (*((($2 + [8]) + [8])) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($3, $6, $4)
	*($5) = (*($5) + ((int_32)((uint_32)$4 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$8
	*(($1 + [16])) = [1]
	$1 = *($2 + [12])
	if ( $1 ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$7
	CALL $45(($1 + [4]))
	
.LABEL $label$4
	*(($2 + [16])) = $1
	CALL $11($1)
	
.LABEL $label$2
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $314 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [4])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($2 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $9(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $45($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$8 = ($7 + ($6 << [4]))
	$9 = ($7 + ($3 << [4]))
	$6 = $9
	$2 = $1
	
.LOOP $label$8:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$10 = ($9 + ($1 << [4]))
	$6 = *($0)
	$11 = ($0 + [4])
	$12 = *($11)
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$10 }
	$13 = (($3 + [-1]) - uint_32((($12 + [-16]) - $6) >> [4]))
	$14 = ($6 - $12)
	$6 = [0]
	
.LOOP $label$11:
	*(($3 = (($2 = ($9 + $6)) + [-12]))) = (int_64)0
	*(($4 = ($2 + [-4]))) = [0]
	$1 = ($12 + $6)
	$5 = ($1 + [-12])
	*($3) = *($5)
	$3 = ($1 + [-4])
	*($4) = *($3)
	*(($2 + [-16])) = *(($1 + [-16]))
	*($3) = [0]
	*($5) = (int_64)0
	$6 = ($6 + [-16])
	if ( ((int_32)$14 != (int_32)$6) ){ goto $label$11 }
	$9 = ($7 + ($13 << [4]))
	$6 = *(($0 + [4]))
	$3 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$3 = $6
	
.LABEL $label$9
	*($0) = $9
	*($11) = $10
	*(($0 + [8])) = $8
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$12 }
	
.LOOP $label$13:
	$2 = ($6 + [-16])
	$1 = *(($6 + [-12]))
	if ( ($1 == 0) ){ goto $label$14 }
	*(($6 + [-8])) = $1
	CALL $11($1)
	
.LABEL $label$14
	$6 = $2
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($3 == 0) ){ goto $label$15 }
	CALL $11($3)
	
.LABEL $label$15
	(unreachable)
}

int_32 .FUNC $315 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [13842])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$9 = *($1)
	$8 = *($1 + [4])
	$7 = ((int_32)($8 - $9) / (int_32)[48])
	if ( ((uint_32)$7 >= (uint_32)$2) ){ goto $label$5 }
	CALL $317($1, ($2 - $7))
	$8 = *(($1 + [4]))
	$9 = *($1)
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$7 <= (uint_32)$2) ){ goto $label$6 }
	$8 = ($9 + ((int_32)$2 * (int_32)[48]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = ($0 + [4])
	$2 = *($4)
	$1 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($1) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$2 = *($4)
	
.LABEL $label$8
	CALL memcpy($9, $2, [8])
	$2 = (*($4) + [8])
	*($4) = $2
	$5 = [0]
	$3 = (int_64)0
	
.LOOP $label$9:
	if ( ($2 <= *($1)) ){ goto $label$10 }
	CALL eosio_assert([0], [13842])
	$2 = *($4)
	
.LABEL $label$10
	$7 = *($2)
	$6 = ($2 + [1])
	*($4) = $6
	$2 = ($5 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$5 = ($2 + [7])
	$2 = $6
	if ( ($7 & [128]) ){ goto $label$9 }
	*($9 + [8]) = $3
	$2 = ($9 + [12])
	if ( ((uint_32)(*($1) - $6) > (uint_32)[32]) ){ goto $label$11 }
	CALL eosio_assert([0], [13837])
	$6 = *($4)
	
.LABEL $label$11
	CALL memcpy($2, $6, [33])
	$2 = (*($4) + [33])
	*($4) = $2
	$9 = ($9 + [48])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $316 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = ((int_32)$3 / (int_32)[48])
	if ( ((uint_32)$4 <= (uint_32)((int_32)($5 - $6) / (int_32)[48])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL $11($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[89478486]) ){ goto $label$1 }
	$6 = [89478485]
	$2 = ((int_32)$5 / (int_32)[48])
	if ( ((uint_32)$2 > (uint_32)[44739241]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	
.LABEL $label$6
	$4 = ((int_32)$6 * (int_32)[48])
	$6 = CALL $9($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + ((int_32)((uint_32)$3 / (uint_32)[48]) * (int_32)[48]))
	goto $label$3 
	
.LABEL $label$4
	$3 = ((int_32)(*($0 + [4]) - $6) / (int_32)[48])
	$7 = ( ($1 + ((int_32)$3 * (int_32)[48])) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$5 = ($7 - $1)
	$8 = ((int_32)$5 / (int_32)[48])
	if ( ($5 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $5)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + ((int_32)((uint_32)$1 / (uint_32)[48]) * (int_32)[48]))
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + ((int_32)$8 * (int_32)[48]))
	return (unreachable)
	
.LABEL $label$1
	CALL $45($0)
}

void .FUNC $317 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[48]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($3 - $4) / (int_32)[48])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[89478486]) ){ goto $label$3 }
	$3 = [89478485]
	$2 = ((int_32)($2 - $4) / (int_32)[48])
	if ( ((uint_32)$2 > (uint_32)[44739241]) ){ goto $label$6 }
	$3 = ($2 << [1])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$4 = CALL $9(((int_32)$3 * (int_32)[48]))
	goto $label$2 
	
.LABEL $label$5
	$2 = ($0 + [4])
	
.LOOP $label$7:
	*(($0 = ($3 + [8]))) = (int_64)0
	*($3) = (int_64)0
	*(($3 + [40])) = (int_64)0
	*(($3 + [32])) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*($0) = [0]
	$3 = (*($2) + [48])
	*($2) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$3 = [0]
	$4 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $45($0)
	
.LABEL $label$2
	$7 = ($4 + ((int_32)$3 * (int_32)[48]))
	$5 = ($4 + ((int_32)$5 * (int_32)[48]))
	$3 = $5
	
.LOOP $label$8:
	*(($2 = ($3 + [8]))) = (int_64)0
	*($3) = (int_64)0
	*(($3 + [40])) = (int_64)0
	*(($3 + [32])) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*($2) = [0]
	$3 = ($3 + [48])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($4 + ((int_32)$6 * (int_32)[48]))
	$3 = *($0)
	$6 = ($0 + [4])
	$1 = (*($6) - $3)
	$2 = ($5 + ((int_32)((int_32)$1 / (int_32)[-48]) * (int_32)[48]))
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($3 == 0) ){ goto $label$1 }
	CALL $11($3)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $251 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	CALL $257(*($1), ($0 + [8]))
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$4 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [15]), $4, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	*(($0 + [20])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $250 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $27($2, ($1 + [8]))
	$5 = *($1 + [60])
	$6 = *($1 + [56])
	$7 = *($1 + [52])
	$8 = *($1 + [48])
	$9 = *($1 + [40])
	$10 = *($1 + [32])
	$11 = *($1 + [24])
	$1 = *($0 + [4])
	$12 = *($1 + [4])
	$0 = (*($0) + int_32($12 >> [1]))
	$1 = *($1)
	if ( (($12 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$12 = CALL $27(($2 + [16]), $4)
	CALL void $0((int_32 $3), (int_64 $12), (int_32 $11), (int_64 $10), (int_64 $9), (int_64 $8), (int_32 $7), (int_32 $6), (int_32 ((int_32)($5 & [255]) != (int_32)[0])), (int_32 $1))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($12 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $253 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$0 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $5, [8])
	*($4 + [8]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($4 + [16]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*(($4 + [32])) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $350(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $252 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $27($2, ($1 + [8]))
	$5 = *($1 + [20])
	$1 = *($0 + [4])
	$6 = *($1 + [4])
	$0 = (*($0) + int_32($6 >> [1]))
	$1 = *($1)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$6 = CALL $27(($2 + [16]), $4)
	CALL void $0((int_32 $3), (int_64 $6), (int_32 ((int_32)($5 & [255]) != (int_32)[0])), (int_32 $1))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($6 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $255 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	CALL $257(*($1), ($0 + [8]))
	$5 = ($0 + [24])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$4 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $4, [8])
	*(($0 + [32])) = *($2 + [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $254 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$2 = ($global$0 - [448])
	$global$0 = $2
	*(($3 = (($2 + [208]) + [8]))) = *(($1 + [32]))
	*(($4 = (($2 + [192]) + [8]))) = *(($1 + [48]))
	*(($5 = (($2 + [176]) + [8]))) = *(($1 + [64]))
	*(($6 = (($2 + [160]) + [8]))) = *(($1 + [80]))
	*($2 + [208]) = *($1 + [24])
	*($2 + [192]) = *($1 + [40])
	*($2 + [176]) = *($1 + [56])
	*($2 + [160]) = *($1 + [72])
	$7 = *($1 + [16])
	$8 = *($1 + [8])
	$9 = *($1)
	$10 = *($1 + [88])
	$11 = CALL $27(($2 + [144]), ($1 + [92]))
	$12 = CALL $27(($2 + [128]), ($1 + [104]))
	*(($13 = (($2 + [112]) + [8]))) = *(($1 + [144]))
	*(($14 = (($2 + [96]) + [8]))) = *(($1 + [168]))
	*($2 + [112]) = *($1 + [136])
	*($2 + [96]) = *($1 + [160])
	$15 = *($1 + [128])
	$16 = *($1 + [120])
	$17 = *($1 + [152])
	$18 = *($1 + [176])
	*((($2 + [304]) + [8])) = *($14)
	*((($2 + [288]) + [8])) = *($13)
	*((($2 + [272]) + [8])) = *($6)
	*((($2 + [256]) + [8])) = *($5)
	*((($2 + [240]) + [8])) = *($4)
	*($2 + [304]) = *($2 + [96])
	*($2 + [288]) = *($2 + [112])
	*($2 + [272]) = *($2 + [160])
	*($2 + [256]) = *($2 + [176])
	*($2 + [240]) = *($2 + [192])
	*((($2 + [224]) + [8])) = *($3)
	*($2 + [224]) = *($2 + [208])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*($0) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($5 = (($2 + [432]) + [8]))) = *((($2 + [224]) + [8]))
	*(($6 = (($2 + [416]) + [8]))) = *((($2 + [240]) + [8]))
	*(($13 = (($2 + [400]) + [8]))) = *((($2 + [256]) + [8]))
	*(($14 = (($2 + [384]) + [8]))) = *((($2 + [272]) + [8]))
	*($2 + [432]) = *($2 + [224])
	*($2 + [416]) = *($2 + [240])
	*($2 + [400]) = *($2 + [256])
	*($2 + [384]) = *($2 + [272])
	$3 = CALL $27(($2 + [368]), $11)
	$4 = CALL $27(($2 + [352]), $12)
	*(($19 = (($2 + [336]) + [8]))) = *((($2 + [288]) + [8]))
	*(($20 = (($2 + [320]) + [8]))) = *((($2 + [304]) + [8]))
	*((($2 + [80]) + [8])) = *($5)
	*((($2 + [64]) + [8])) = *($6)
	*((($2 + [48]) + [8])) = *($13)
	*($2 + [336]) = *($2 + [288])
	*($2 + [320]) = *($2 + [304])
	*($2 + [80]) = *($2 + [432])
	*($2 + [64]) = *($2 + [416])
	*($2 + [48]) = *($2 + [400])
	*((($2 + [32]) + [8])) = *($14)
	*((($2 + [16]) + [8])) = *($19)
	*(($2 + [8])) = *($20)
	*($2 + [32]) = *($2 + [384])
	*($2 + [16]) = *($2 + [336])
	*($2) = *($2 + [320])
	CALL void $0((int_32 $9), (int_64 $8), (int_64 $7), (int_64 ($2 + [80])), (int_32 ($2 + [64])), (int_32 ($2 + [48])), (int_32 ($2 + [32])), (int_32 $10), (int_32 $3), (int_32 $4), (int_32 $16), (int_64 $15), (int_64 ($2 + [16])), (int_32 $17), (int_64 $2), (int_32 ((int_32)($18 & [255]) != (int_32)[0])), (int_32 $1))
	if ( (*($2 + [352]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [368]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $11(*($4 + [8]))
	if ( ((*($2 + [368]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $11(*($3 + [8]))
	$1 = [1]
	if ( ((*($12) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$1 = [1]
	if ( (*($12) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($11) & $1) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($12 + [8]))
	if ( ((*($11) & $1) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($11 + [8]))
	$global$0 = ($2 + [448])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [448])
}

int_32 .FUNC $257 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $279($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $9($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $31($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $31($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $26($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $11($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $256 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $27(($2 + [32]), ($1 + [8]))
	*(($5 = (($2 + [16]) + [8]))) = *(($1 + [32]))
	*($2 + [16]) = *($1 + [24])
	*((($2 + [48]) + [8])) = *($5)
	*($2 + [48]) = *($2 + [16])
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*($0) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$5 = CALL $27(($2 + [80]), $4)
	$6 = *((($2 + [48]) + [8]))
	*((($2 + [64]) + [8])) = $6
	*(($2 + [8])) = $6
	$6 = *($2 + [48])
	*($2) = $6
	*($2 + [64]) = $6
	CALL void $0((int_32 $3), (int_64 $5), (int_32 $2), (int_32 $1))
	if ( (*($2 + [80]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($5 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$4 = *($0)
	$5 = *($3 + [4])
	*($1 + [8]) = ((int_64)((uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000) + (int_64)-946684800000) / (uint_64)(int_64)500) & (int_64)4294967295)
	$6 = $2
	CALL $51(($6 + [32]), [1])
	$7 = (($6 + [32]) + [24])
	*(($1 + [40])) = *($7)
	*(($1 + [32])) = *((($6 + [32]) + [16]))
	*(($1 + [24])) = *($6 + [40])
	*($1 + [16]) = *($6 + [32])
	*($6 + [32]) = *($5)
	*($6 + [40]) = *(*($3 + [8]))
	$5 = *($3 + [12])
	*($7) = *(($5 + [8]))
	*($6 + [48]) = *($5)
	$5 = CALL $27((($6 + [32]) + [32]), *($3 + [16]))
	*(($1 + [72])) = *($7)
	*(($1 + [64])) = *($6 + [48])
	*(($1 + [56])) = *($6 + [40])
	*($1 + [48]) = *($6 + [32])
	$7 = ($1 + [80])
	if ( (*($7) & [1]) ){ goto $label$2 }
	*($7) = [0]
	goto $label$1 
	
.LABEL $label$2
	*(*(($1 + [88]))) = [0]
	*(($1 + [84])) = [0]
	
.LABEL $label$1
	$8 = ($1 + [48])
	$9 = ($1 + [16])
	$10 = ($1 + [8])
	CALL $31($7, [0])
	*(($7 + [8])) = *(($5 + [8]))
	*($7) = *($5)
	$7 = *($3 + [20])
	*(($1 + [120])) = *(($7 + [24]))
	*(($1 + [112])) = *(($7 + [16]))
	*(($1 + [104])) = *(($7 + [8]))
	*($1 + [96]) = *($7)
	*($1 + [128]) = *(*($3 + [24]))
	$3 = *(($1 + [80]))
	$7 = ( *(($1 + [84])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [120])
	$11 = (CASTING uint_64)(uint_32 $7)
	$5 = ($1 + [128])
	$12 = ($1 + [96])
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$3 }
	if ( ($3 <= [513]) ){ goto $label$5 }
	$7 = CALL $2($3)
	goto $label$4 
	
.LABEL $label$5
	$7 = ($2 - (($3 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$4
	*($6 + [20]) = $7
	*($6 + [16]) = $7
	*($6 + [24]) = ($7 + $3)
	*($6 + [88]) = ($6 + [16])
	*($6 + [36]) = $10
	*($6 + [32]) = $1
	*($6 + [40]) = $9
	*($6 + [44]) = $8
	*($6 + [48]) = $12
	*($6 + [52]) = $5
	CALL $342(($6 + [32]), ($6 + [88]))
	$11 = *($1)
	*($1 + [140]) = CALL db_store_i64(*($4 + [8]), (int_64)4733526061789216768, *(*($0 + [8])), $11, $7, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL $4($7)
	
.LABEL $label$6
	if ( (uint_64)($11 <= *($4 + [16])) ){ goto $label$7 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$3 = ($4 + [8])
	$11 = *($3)
	$8 = *(($0 + [8]))
	$13 = *($8)
	$14 = *($1)
	*($6 + [32]) = *(($1 + [8]))
	*($1 + [144]) = CALL db_idx64_store($11, (int_64)4733526061789216768, $13, $14, ($6 + [32]))
	$2 = ($1 + [96])
	$14 = *($8)
	$15 = *($3)
	$16 = *($1)
	$11 = (int_64)0
	$3 = [16]
	$0 = ($6 + [32])
	$7 = [0]
	$13 = (int_64)0
	
.LOOP $label$9:
	$5 = ($2 + $7)
	if ( ($3 <= [2]) ){ goto $label$10 }
	$11 = ((int_64)$11 | (int_64)*($5))
	$13 = ((int_64)((int_64)$13 << (int_64)8) | (int_64)(uint_64)$11 >> (uint_64)(int_64)56))
	$3 = ($3 + [-1])
	$11 = ((int_64)$11 << (int_64)8)
	$7 = ($7 + [1])
	if ( ((int_32)$7 != (int_32)[32]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$11 }
	CALL eosio_assert([0], [14110])
	
.LABEL $label$11
	*($0 + [8]) = $13
	*($0) = ((int_64)$11 | (int_64)*($5))
	$3 = [16]
	$0 = ($0 + [16])
	$11 = (int_64)0
	$13 = (int_64)0
	$7 = ($7 + [1])
	if ( ((int_32)$7 != (int_32)[32]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$3 == (int_32)[16]) ){ goto $label$12 }
	if ( ($3 <= [2]) ){ goto $label$13 }
	CALL __ashlti3($6, $11, $13, (($3 << [3]) + [-8]))
	$13 = *(($6 + [8]))
	$11 = *($6)
	
.LABEL $label$13
	*($0) = $11
	*($0 + [8]) = $13
	
.LABEL $label$12
	*(($1 + [148])) = CALL db_idx256_store($15, (int_64)4733526061789216769, $14, $16, ($6 + [32]), [2])
	$11 = *(($4 + [8]))
	$13 = *($1)
	$14 = *($8)
	*($6 + [32]) = *(($1 + [128]))
	*(($1 + [152])) = CALL db_idx64_store($11, (int_64)4733526061789216770, $14, $13, ($6 + [32]))
	$global$0 = ($6 + [96])
}

void .FUNC $180 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [128])
	$global$0 = $2
	*((($2 + [80]) + [32])) = [0]
	*(($2 + [118])) = [0]
	*($2 + [88]) = $1
	*($2 + [96]) = (int_64)-1
	*($2 + [116]) = [0]
	$3 = *($0)
	*($2 + [80]) = $3
	*($2 + [104]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $1, (int_64)4733526061789216768, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	CALL $183(($2 + [80]), $4)
	*($2 + [76]) = [0]
	*($2 + [72]) = ($2 + [80])
	$3 = *(*(CALL $184(($2 + [72])) + [4]))
	$4 = (($2 + [80]) + [8])
	$5 = *(CALL $183(($2 + [80]), CALL $fimport$41(*($2 + [80]), *($4), (int_64)4733526061789216768, (int_64)0)))
	$0 = CALL $73(($0 + [88]), $1, [11038])
	*($2 + [8]) = *($0)
	$6 = CALL $27((($2 + [8]) + [8]), ($0 + [8]))
	*((($2 + [8]) + [53])) = *(($0 + [53]))
	*((($2 + [8]) + [48])) = *(($0 + [48]))
	*((($2 + [8]) + [40])) = *(($0 + [40]))
	*((($2 + [8]) + [32])) = *(($0 + [32]))
	*($2 + [32]) = *($0 + [24])
	if ( ((uint_32)*($2 + [64]) >= (uint_32)(CASTING uint_32)(uint_64 (int_64))($3 - $5))) ){ goto $label$2 }
	*($2 + [120]) = (CASTING uint_64)(uint_32 ($2 + [80]))
	$1 = *(*(CALL $184(($2 + [120])) + [4]) + [128])
	$7 = [-10]
	
.LOOP $label$3:
	if ( (uint_64)((int_64))($1 - *(CALL $183(($2 + [80]), CALL $fimport$41(*($2 + [80]), *($4), (int_64)4733526061789216768, (int_64)0)) + [128])) <= (int_64)2) ){ goto $label$2 }
	$0 = CALL db_lowerbound_i64(*($2 + [80]), *($4), (int_64)4733526061789216768, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	$0 = CALL $183(($2 + [80]), $0)
	goto $label$4 
	
.LABEL $label$5
	$0 = [0]
	CALL eosio_assert([0], [14421])
	CALL eosio_assert([0], [14455])
	
.LABEL $label$4
	$8 = CALL db_next_i64(*($0 + [140]), ($2 + [120]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	CALL $183(($2 + [80]), $8)
	
.LABEL $label$6
	CALL $193(($2 + [80]), $0)
	$7 = ($7 + [1])
	if ( $7 ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((*($6) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($2 + [24])))
	
.LABEL $label$7
	$7 = *($2 + [104])
	if ( ($7 == 0) ){ goto $label$1 }
	$8 = ($2 + [108])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((*(($4 + [80])) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($4 + [88])))
	
.LABEL $label$12
	CALL $11($4)
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($2 + [104]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $7
	
.LABEL $label$8
	*($8) = $7
	CALL $11($0)
	
.LABEL $label$1
	$global$0 = ($2 + [128])
}

void .FUNC $138 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	$5 = ($global$0 - [208])
	$global$0 = $5
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [11151])
	CALL require_auth($1)
	$6 = *($4)
	if ( ($6 & [1]) ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($4 + [4])
	
.LABEL $label$1
	CALL eosio_assert(($6 <= [513]), [11175])
	if ( ((int_64)*($0) != (int_64)$2) ){ goto $label$4 }
	$6 = *($4)
	if ( ($6 & [1]) ){ goto $label$6 }
	$7 = uint_32($6 >> [1])
	$8 = ($4 + [1])
	$6 = CALL $17([10797])
	if ( ($6 == 0) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$7 = *($4 + [4])
	$8 = *($4 + [8])
	$6 = CALL $17([10797])
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((int_32)$7 < (int_32)$6) ){ goto $label$3 }
	$9 = ($8 + $7)
	$10 = $8
	
.LOOP $label$7:
	$7 = (($7 - $6) + [1])
	if ( ($7 == 0) ){ goto $label$3 }
	$7 = CALL $18($10, [108], $7)
	if ( ($7 == 0) ){ goto $label$3 }
	if ( (CALL $1($7, [10797], $6) == 0) ){ goto $label$8 }
	$10 = ($7 + [1])
	$7 = ($9 - $10)
	if ( ((int_32)$7 >= (int_32)$6) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert(CALL $fimport$29($2), [11204])
	$12 = *($3 + [8])
	$11 = (uint_64)$12 >> (uint_64)(int_64)8
	$10 = CALL $102(($0 + [208]), $11), [11230])
	CALL require_recipient($1)
	CALL require_recipient($2)
	$4 = [0]
	$13 = *($3)
	if ( ((uint_64)((int_64)$13 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$6 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$14 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$11 = $14
	$4 = [1]
	$7 = $6
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$11 = $14
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$4 = ((int_32)$6 < (int_32)[6])
	$7 = ($6 + [1])
	$6 = $7
	if ( $4 ){ goto $label$13 }
	$4 = [1]
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$4 = [0]
	
.LABEL $label$9
	CALL eosio_assert($4, [11259])
	CALL eosio_assert(((int_64)$13 > (int_64)0), [11276])
	CALL eosio_assert(((int_64)$12 == (int_64)*($10 + [8])), [11308])
	$6 = CALL has_auth($2)
	$4 = ($3 + [8])
	$14 = *($4)
	*((($5 + [64]) + [8])) = $14
	$11 = *($3)
	*((($5 + [16]) + [8])) = $14
	*($5 + [16]) = $11
	*($5 + [64]) = $11
	CALL $139($0, $1, ($5 + [16]))
	$14 = *($4)
	*((($5 + [48]) + [8])) = $14
	$11 = *($3)
	*(($5 + [8])) = $14
	*($5) = $11
	*($5 + [48]) = $11
	CALL $140($0, $2, $5, ( $2 ? $1 : $6 ))
	$global$0 = ($5 + [208])
	return 
	
.LABEL $label$3
	CALL $119(($5 + [176]), $4)
	CALL eosio_assert(((int_64)*($5 + [176]) != (int_64)0), [10821])
	$6 = CALL $73(($0 + [88]), *($5 + [184]), [9050])
	*($5 + [112]) = *($6)
	$4 = CALL $27((($5 + [112]) + [8]), ($6 + [8]))
	*((($5 + [112]) + [53])) = *(($6 + [53]))
	*((($5 + [112]) + [48])) = *(($6 + [48]))
	*((($5 + [112]) + [40])) = *(($6 + [40]))
	*((($5 + [112]) + [32])) = *(($6 + [32]))
	*($5 + [136]) = *($6 + [24])
	CALL eosio_assert(*($5 + [172]), [10842])
	*(($7 = (($5 + [96]) + [8]))) = *(($3 + [8]))
	*($5 + [96]) = *($3)
	$11 = *($5 + [184])
	$6 = CALL $27(($5 + [80]), ($5 + [192]))
	*((($5 + [32]) + [8])) = *($7)
	*($5 + [32]) = *($5 + [96])
	CALL $141($0, $1, $11, $11, ($5 + [32]), $6)
	if ( ((*($6) & [1]) == 0) ){ goto $label$14 }
	CALL $11(*($6 + [8]))
	
.LABEL $label$14
	if ( ((*($4) & [1]) == 0) ){ goto $label$15 }
	CALL $11(*(($5 + [128])))
	
.LABEL $label$15
	if ( ((*(($5 + [192])) & [1]) == 0) ){ goto $label$16 }
	CALL $11(*(($5 + [200])))
	
.LABEL $label$16
	$global$0 = ($5 + [208])
}

void .FUNC $139 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [40])) = [0]
	*($3 + [16]) = $1
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	*($3 + [8]) = *($0)
	$0 = CALL $142(($3 + [8]), (uint_64)*($2 + [8]) >> (uint_64)(int_64)8), [13060]
	CALL eosio_assert(((int_64)*($0)) >= (int_64)*($2)), [11358])
	*($3) = $2
	CALL $150(($3 + [8]), $0, $1, $3)
	$4 = *($3 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	$5 = ($3 + [36])
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	CALL $11($0)
	
.LABEL $label$5
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$4 }
	$2 = *(($3 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$2 = $4
	
.LABEL $label$2
	*($5) = $4
	CALL $11($2)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
}

void .FUNC $269 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy(($2 + [8]), $5, [8])
	*($3) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$5 = ($0 + [8])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$1 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($4 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$1 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $1, [8])
	*(($0 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13814])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $132(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $4($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $11($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $131 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14676])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14695])
	
.LABEL $label$5
	$2 = ($1 + [8])
	if ( ((int_64)$5 == (int_64)(uint_64)*($2) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$6
	$7 = $3
	$3 = ($7 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	*($4 + [8]) = *($2)
	CALL memcpy(($7 + [-8]), ($4 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $3, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [16])
}

void .FUNC $132 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $45($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $133 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($4 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($4 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$5 = *($1)
	$6 = *($2)
	if ( ((int_64)*($6 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [16]) + (int_64)*($6))
	*($1 + [16]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14676])
	$7 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14695])
	
.LABEL $label$5
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [192]))) ){ goto $label$6 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$6
	$7 = ((int_64)*($1 + [184]) + (int_64)*($2))
	*($1 + [184]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [14676])
	$7 = *(($1 + [184]))
	
.LABEL $label$7
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [14695])
	
.LABEL $label$8
	*($1 + [200]) = ((int_64)*($1 + [200]) + (int_64)1)
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$9
	$6 = (($4 + [16]) + [8])
	$8 = ($1 + [200])
	$2 = *($1 + [100])
	$9 = ( *(($1 + [104])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($9 + [253])
	$7 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [100])
	
.LOOP $label$10:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$10 }
	$10 = *($1 + [112])
	$10 = ( *(($1 + [116])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$2 = ($10 + $2)
	$7 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [112])
	
.LOOP $label$11:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$11 }
	if ( ($2 <= [513]) ){ goto $label$13 }
	$3 = CALL $2($2)
	goto $label$12 
	
.LABEL $label$13
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$12
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [32]) = $4
	*($4 + [72]) = $9
	*($4 + [76]) = $10
	*($4 + [104]) = $8
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [32])
	*($4 + [56]) = ($1 + [48])
	*($4 + [60]) = ($1 + [64])
	*($4 + [64]) = ($1 + [80])
	*($4 + [68]) = ($1 + [96])
	*($4 + [80]) = ($1 + [128])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [144])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [168])
	*($4 + [100]) = ($1 + [184])
	*($4 + [108]) = ($1 + [208])
	*($4 + [112]) = ($1 + [224])
	*($4 + [120]) = ($1 + [240])
	*($4 + [116]) = ($1 + [232])
	CALL $86(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [300]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$14 }
	CALL $4($3)
	
.LABEL $label$14
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*($4 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$16 }
	$3 = ($1 + [304])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($4 + [32]), $5)
	*($3) = $2
	
.LABEL $label$17
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$16
	*($4 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($6, ($4 + [40]), [8]) == 0) ){ goto $label$18 }
	$1 = ($1 + [308])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($4 + [32]), $5)
	*($1) = $2
	
.LABEL $label$19
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$18
	$global$0 = ($4 + [128])
}

void .FUNC $134 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$3 = ($global$0 - [240])
	$global$0 = $3
	CALL $51(($3 + [64]), [1])
	*((($3 + [24]) + [32])) = [0]
	*($3 + [40]) = (int_64)-1
	*($3 + [48]) = (int_64)0
	*($3 + [60]) = [0]
	$4 = *($0)
	*($3 + [24]) = $4
	*($3 + [32]) = $1
	$5 = ($0 + [128])
	$6 = CALL $127($5, $1, [12838])
	$7 = *($0)
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [14370])
	
.LABEL $label$1
	*(($8 = CALL $9([96])) + [56]) = (int_64)0
	*($8 + [48]) = (int_64)0
	*($8 + [64]) = (int_64)0
	*($8 + [72]) = (int_64)0
	*($8 + [80]) = ($3 + [24])
	*($8) = *($6 + [32])
	$1 = CALL current_time()
	*($8 + [16]) = *($3 + [64])
	*(($8 + [24])) = *($3 + [72])
	$0 = [16]
	*(($8 + [32])) = *((($3 + [64]) + [16]))
	*(($8 + [40])) = *((($3 + [64]) + [24]))
	*($8 + [48]) = *($2)
	*($8 + [56]) = *(($2 + [8]))
	*($8 + [64]) = *(($2 + [16]))
	*($8 + [72]) = *(($2 + [24]))
	*($8 + [8]) = ((int_64)((uint_64)((int_64)((uint_64)$1 / (uint_64)(int_64)1000) + (int_64)-946684800000) / (uint_64)(int_64)500) & (int_64)4294967295)
	*($3 + [184]) = (($3 + [96]) + [80])
	*($3 + [180]) = ($3 + [96])
	*($3 + [176]) = ($3 + [96])
	*($3 + [232]) = ($3 + [176])
	$9 = ($8 + [8])
	*($3 + [196]) = $9
	*($3 + [192]) = $8
	$10 = ($8 + [16])
	*($3 + [200]) = $10
	*($3 + [204]) = ($8 + [48])
	CALL $135(($3 + [192]), ($3 + [232]))
	$1 = *($8)
	$2 = (($3 + [24]) + [8])
	*($8 + [84]) = CALL db_store_i64(*($2), (int_64)-6495091301338316800, $7, $1, ($3 + [96]), [80])
	$11 = (($3 + [24]) + [16])
	if ( (uint_64)($1 <= *($11)) ){ goto $label$2 }
	*($11) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$1 = *($8)
	$4 = *($2)
	*($3 + [192]) = *($9)
	*($8 + [88]) = CALL db_idx64_store($4, (int_64)-6495091301338316800, $7, $1, ($3 + [192]))
	$12 = *($8)
	$13 = *($2)
	$1 = (int_64)0
	$9 = ($3 + [192])
	$2 = [0]
	$4 = (int_64)0
	
.LOOP $label$4:
	$11 = ($10 + $2)
	if ( ($0 <= [2]) ){ goto $label$5 }
	$1 = ((int_64)$1 | (int_64)*($11))
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)(uint_64)$1 >> (uint_64)(int_64)56))
	$0 = ($0 + [-1])
	$1 = ((int_64)$1 << (int_64)8)
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$0 == (int_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [14110])
	
.LABEL $label$6
	*($9 + [8]) = $4
	*($9) = ((int_64)$1 | (int_64)*($11))
	$0 = [16]
	$9 = ($9 + [16])
	$1 = (int_64)0
	$4 = (int_64)0
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$0 == (int_32)[16]) ){ goto $label$7 }
	if ( ($0 <= [2]) ){ goto $label$8 }
	CALL __ashlti3(($3 + [8]), $1, $4, (($0 << [3]) + [-8]))
	$4 = *(($3 + [16]))
	$1 = *($3 + [8])
	
.LABEL $label$8
	*($9) = $1
	*($9 + [8]) = $4
	
.LABEL $label$7
	*($8 + [92]) = CALL db_idx256_store($13, (int_64)-6495091301338316799, $7, $12, ($3 + [192]), [2])
	*($3 + [192]) = $8
	$1 = *($8)
	*($3 + [96]) = $1
	$2 = *(($8 + [84]))
	*($3 + [176]) = $2
	$9 = ($3 + [52])
	$0 = *($9)
	if ( ((uint_32)$0 >= (uint_32)*(($3 + [56]))) ){ goto $label$11 }
	*($0 + [8]) = $1
	*($0 + [16]) = $2
	*($3 + [192]) = [0]
	*($0) = $8
	*($9) = ($0 + [24])
	$0 = *($3 + [192])
	*($3 + [192]) = [0]
	if ( $0 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $136(($3 + [48]), ($3 + [192]), ($3 + [96]), ($3 + [176]))
	$0 = *($3 + [192])
	*($3 + [192]) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $11($0)
	
.LABEL $label$9
	CALL $137($5, $6)
	$9 = *($3 + [48])
	if ( ($9 == 0) ){ goto $label$12 }
	$11 = ($3 + [52])
	$0 = *($11)
	if ( ((int_32)$0 == (int_32)$9) ){ goto $label$14 }
	
.LOOP $label$15:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$16 }
	CALL $11($2)
	
.LABEL $label$16
	if ( ((int_32)$9 != (int_32)$0) ){ goto $label$15 }
	$0 = *(($3 + [48]))
	goto $label$13 
	
.LABEL $label$14
	$0 = $9
	
.LABEL $label$13
	*($11) = $9
	CALL $11($0)
	
.LABEL $label$12
	$global$0 = ($3 + [240])
}

void .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $347(*($1), *($0 + [12]))
}

void .FUNC $136 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $45($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($1 + [32]) = ((int_64)*($1 + [32]) + (int_64)1)
	$4 = *($1)
	$5 = $2
	$2 = ($5 + [-48])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($5 + [-12])
	CALL $70($3, $1)
	CALL db_update_i64(*($1 + [44]), (int_64)0, $2, [36])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $33 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$5 = uint_32($3 >> [1])
	if ( ($5 <= $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($1 - $5)
	if ( ($1 == 0) ){ goto $label$2 }
	if ( $4 ){ goto $label$8 }
	$5 = [10]
	$4 = uint_32($3 >> [1])
	if ( (([10] - $4) <= $1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = *($0 + [4])
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	if ( ((uint_32)($5 - $4) >= (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $34($0, $5, (($4 + $1) - $5), $4, $4, [0], [0])
	$3 = *($0)
	
.LABEL $label$6
	if ( ($3 & [1]) ){ goto $label$10 }
	$3 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$3 = *($0 + [8])
	
.LABEL $label$9
	CALL memset(($3 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$11
	*($0 + [4]) = $1
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	*((($0 + $1) + [1])) = [0]
	*($0) = ($1 << [1])
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*((*($0 + [8]) + $1)) = [0]
	*($0 + [4]) = $1
}

void .FUNC $300 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [288])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	$5 = ($4 + $5)
	*(($3 + [16])) = $5
	*($3 + [28]) = $4
	*($3 + [24]) = $4
	*($3 + [32]) = $5
	*($3 + [8]) = *($3 + [24])
	$4 = CALL $56(($3 + [40]), $0, $1, ($3 + [8]))
	CALL require_auth(*($4))
	$5 = ($4 + [80])
	CALL eosio_assert(*($5), [12983])
	*($5) = [0]
	CALL $58($4)
	$global$0 = ($3 + [288])
}

void .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-4858352806483984384, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $222($6, $8)
	*($3 + [12]) = [0]
	*($3 + [8]) = $6
	$7 = *(*(CALL $345(($3 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [14826])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	$6 = *($5 + [4])
	*($1 + [16]) = *($6)
	*(($1 + [40])) = *(($6 + [24]))
	*(($1 + [32])) = *(($6 + [16]))
	*(($1 + [24])) = *(($6 + [8]))
	$2 = $2
	$6 = ($2 + [-48])
	$global$0 = $6
	CALL memcpy($6, $1, [8])
	CALL memcpy(($2 + [-40]), ($1 + [16]), [32])
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-4858352806483984384, *(*($0 + [8])), $7, $6, [40])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

void .FUNC $209 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $45($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $202 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14485])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14530])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [14580])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $11($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $11($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [84]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $213(($2 + [8]), ($0 + [36]), ($0 + [37]))
	$global$0 = ($2 + [16])
}

void .FUNC $203 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$3 = ($global$0 - [336])
	$global$0 = $3
	*((($3 + [280]) + [32])) = [0]
	*($3 + [288]) = $1
	*($3 + [296]) = (int_64)-1
	$4 = (int_64)0
	*($3 + [304]) = (int_64)0
	*($3 + [316]) = [0]
	*($3 + [280]) = *($0)
	*($3 + [272]) = ($3 + [280])
	$5 = [16]
	$6 = ($3 + [112])
	$7 = [0]
	$8 = (int_64)0
	
.LOOP $label$2:
	$9 = ($2 + $7)
	if ( ($5 <= [2]) ){ goto $label$3 }
	$4 = ((int_64)$4 | (int_64)*($9))
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)(uint_64)$4 >> (uint_64)(int_64)56))
	$5 = ($5 + [-1])
	$4 = ((int_64)$4 << (int_64)8)
	$7 = ($7 + [1])
	if ( ((int_32)$7 != (int_32)[32]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [14110])
	
.LABEL $label$4
	*($6 + [8]) = $8
	*($6) = ((int_64)$4 | (int_64)*($9))
	$5 = [16]
	$6 = ($6 + [16])
	$4 = (int_64)0
	$8 = (int_64)0
	$7 = ($7 + [1])
	if ( ((int_32)$7 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)[16]) ){ goto $label$5 }
	if ( ($5 <= [2]) ){ goto $label$6 }
	CALL __ashlti3(($3 + [8]), $4, $8, (($5 << [3]) + [-8]))
	$8 = *(($3 + [16]))
	$4 = *($3 + [8])
	
.LABEL $label$6
	*($6) = $4
	*($6 + [8]) = $8
	
.LABEL $label$5
	CALL $199(($3 + [264]), ($3 + [272]), ($3 + [112]))
	$5 = [0]
	CALL eosio_assert(((int_32)*($3 + [268]) != (int_32)[0]), [12724])
	CALL eosio_assert((uint_64)(((int_64)*(*($3 + [268]) + [8]) + (int_64)25) <= *(CALL $127(($0 + [128]), $1, [11038]) + [16])), [12741])
	$7 = *($3 + [268])
	*((($3 + [232]) + [8])) = *(($7 + [56]))
	*((($3 + [232]) + [16])) = *(($7 + [64]))
	*((($3 + [232]) + [24])) = *(($7 + [72]))
	*($3 + [232]) = *($7 + [48])
	*(($7 = (($3 + [176]) + [24]))) = *(($2 + [24]))
	*(($6 = (($3 + [176]) + [16]))) = *(($2 + [16]))
	*($3 + [184]) = *(($2 + [8]))
	*($3 + [176]) = *($2)
	*((($3 + [112]) + [24])) = *($7)
	*((($3 + [112]) + [16])) = *($6)
	*($3 + [64]) = (int_64)0
	*($3 + [72]) = [0]
	*($3 + [120]) = *($3 + [184])
	*($3 + [112]) = *($3 + [176])
	
.LOOP $label$7:
	$7 = *((($3 + [112]) + $5))
	CALL $36(($3 + [64]), *((uint_32($7 >> [4]) + [8722])))
	CALL $36(($3 + [64]), *((($7 & [15]) + [8722])))
	$5 = ($5 + [1])
	if ( ((int_32)$5 != (int_32)[32]) ){ goto $label$7 }
	$5 = CALL $39(($3 + [64]), [0], [12815])
	$7 = ($5 + [8])
	*((($3 + [216]) + [8])) = *($7)
	*($3 + [216]) = *($5)
	*($5) = (int_64)0
	*($7) = [0]
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*((($3 + [64]) + [8])))
	
.LABEL $label$8
	CALL prints(( *($3 + [224]) ? (($3 + [216]) | [1]) : (*($3 + [216]) & [1]) ))
	$5 = CALL $73(($0 + [88]), $1, [11038])
	*($3 + [112]) = *($5)
	$2 = CALL $27((($3 + [112]) + [8]), ($5 + [8]))
	*((($3 + [112]) + [53])) = *(($5 + [53]))
	*((($3 + [112]) + [48])) = *(($5 + [48]))
	*((($3 + [112]) + [40])) = *(($5 + [40]))
	*((($3 + [112]) + [32])) = *(($5 + [32]))
	*($3 + [136]) = *($5 + [24])
	$4 = *($3 + [232])
	if ( ((int_64)$4 != (int_64)*($0)) ){ goto $label$19 }
	$7 = ($3 + [256])
	$5 = ($0 + [208])
	$9 = CALL $102($5, (uint_64)*($7) >> (uint_64)(int_64)8), [13376])
	*($3 + [64]) = ($3 + [232])
	CALL $204($5, $9, ($3 + [64]))
	$4 = *($3 + [240])
	if ( ((int_64)$4 == (int_64)*($0)) ){ goto $label$12 }
	$4 = ( (int_64)0 ? *($9 + [120]) : ((int_64)$4 == (int_64)*($3 + [152])) )
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [12382])
	$1 = *($7)
	$8 = *($3 + [248])
	$10 = ( (int_64))($8 - $4) ? (int_64)1 : ((int_64)$8 > (int_64)$4) 
	if ( (uint_64)(((int_64)$10) + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$20 }
	CALL eosio_assert([0], [13936])
	
.LABEL $label$20
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$8 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$4 = $8
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$21 }
	goto $label$17 
	
.LABEL $label$22
	$4 = $8
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$6 = ($5 + [1])
	$5 = $6
	if ( $7 ){ goto $label$23 }
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$21 }
	goto $label$17 
	
.LABEL $label$19
	$9 = CALL $81($0, $4)
	*($3 + [64]) = ($3 + [232])
	CALL $205(($0 + [168]), $9, ($3 + [64]))
	$4 = *($3 + [240])
	if ( ((int_64)$4 == (int_64)*($0)) ){ goto $label$9 }
	$4 = ( (int_64)0 ? *($9 + [168]) : ((int_64)$4 == (int_64)*($3 + [152])) )
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [12382])
	$1 = *((($3 + [232]) + [24]))
	$8 = *($3 + [248])
	$10 = ( (int_64))($8 - $4) ? (int_64)1 : ((int_64)$8 > (int_64)$4) 
	if ( (uint_64)(((int_64)$10) + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$24 }
	CALL eosio_assert([0], [13936])
	
.LABEL $label$24
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$8 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$26 }
	$4 = $8
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$25 }
	goto $label$15 
	
.LABEL $label$26
	$4 = $8
	
.LOOP $label$27:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$16 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$6 = ($5 + [1])
	$5 = $6
	if ( $7 ){ goto $label$27 }
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$25 }
	goto $label$15 
	
.LABEL $label$18
	CALL eosio_assert([0], [11485])
	
.LABEL $label$17
	*((($3 + [64]) + [24])) = $1
	*($3 + [80]) = $10
	*($3 + [64]) = *($0)
	*($3 + [72]) = *(($3 + [240]))
	$7 = CALL $27((($3 + [64]) + [32]), ($3 + [216]))
	*(($6 = (($3 + [24]) + [24]))) = [0]
	*($3 + [32]) = (int_64)-3617168760277827584
	*($3 + [40]) = (int_64)0
	$4 = *($0)
	*($3 + [24]) = $4
	*(($5 = CALL $9([16]))) = $4
	*($5 + [8]) = (int_64)3617214756542218240
	*((($3 + [24]) + [36])) = [0]
	$11 = ($5 + [16])
	*($6) = $11
	*(($3 + [44])) = $11
	*($3 + [40]) = $5
	*($3 + [52 align=4]) = (int_64)0
	$5 = *($7)
	$6 = ( *((($3 + [64]) + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [32])
	$4 = (CASTING uint_64)(uint_32 $6)
	$6 = ($3 + [52])
	
.LOOP $label$28:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$28 }
	if ( ($5 == 0) ){ goto $label$14 }
	CALL $46($6, $5)
	$6 = *(($3 + [56]))
	$5 = *(($3 + [52]))
	goto $label$13 
	
.LABEL $label$16
	CALL eosio_assert([0], [11485])
	
.LABEL $label$15
	*((($3 + [64]) + [24])) = $1
	*($3 + [80]) = $10
	*($3 + [64]) = *($0)
	*($3 + [72]) = *(($3 + [240]))
	$7 = CALL $27((($3 + [64]) + [32]), ($3 + [216]))
	$4 = *($9)
	*(($6 = (($3 + [24]) + [24]))) = [0]
	*($3 + [24]) = $4
	*($3 + [32]) = (int_64)-3617168760277827584
	*($3 + [40]) = (int_64)0
	$4 = *($0)
	*(($5 = CALL $9([16]))) = $4
	*($5 + [8]) = (int_64)3617214756542218240
	*((($3 + [24]) + [36])) = [0]
	$9 = ($5 + [16])
	*($6) = $9
	*(($3 + [44])) = $9
	*($3 + [40]) = $5
	*($3 + [52 align=4]) = (int_64)0
	$5 = *($7)
	$6 = ( *((($3 + [64]) + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [32])
	$4 = (CASTING uint_64)(uint_32 $6)
	$6 = ($3 + [52])
	
.LOOP $label$29:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$29 }
	if ( ($5 == 0) ){ goto $label$11 }
	CALL $46($6, $5)
	$6 = *(($3 + [56]))
	$5 = *(($3 + [52]))
	goto $label$10 
	
.LABEL $label$14
	$6 = [0]
	$5 = [0]
	
.LABEL $label$13
	*($3 + [324]) = $5
	*($3 + [320]) = $5
	*($3 + [328]) = $6
	CALL $178(($3 + [320]), ($3 + [64]))
	CALL $179(($3 + [24]))
	$5 = *($3 + [52])
	if ( ($5 == 0) ){ goto $label$30 }
	*(($3 + [56])) = $5
	CALL $11($5)
	
.LABEL $label$30
	$5 = *($3 + [40])
	if ( ($5 == 0) ){ goto $label$31 }
	*(($3 + [44])) = $5
	CALL $11($5)
	
.LABEL $label$31
	if ( ((*($7) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($3 + [104])))
	
.LABEL $label$12
	CALL $101($0, (uint_64)*($9 + [8]) >> (uint_64)(int_64)8))
	goto $label$9 
	
.LABEL $label$11
	$6 = [0]
	$5 = [0]
	
.LABEL $label$10
	*($3 + [324]) = $5
	*($3 + [320]) = $5
	*($3 + [328]) = $6
	CALL $178(($3 + [320]), ($3 + [64]))
	CALL $179(($3 + [24]))
	$5 = *($3 + [52])
	if ( ($5 == 0) ){ goto $label$32 }
	*(($3 + [56])) = $5
	CALL $11($5)
	
.LABEL $label$32
	$5 = *($3 + [40])
	if ( ($5 == 0) ){ goto $label$33 }
	*(($3 + [44])) = $5
	CALL $11($5)
	
.LABEL $label$33
	if ( ((*($7) & [1]) == 0) ){ goto $label$9 }
	CALL $11(*(($3 + [104])))
	
.LABEL $label$9
	$4 = *(*($3 + [268]))
	$7 = *(($3 + [308]))
	$9 = *(($3 + [304]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$35 }
	
.LOOP $label$37:
	$5 = ($7 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$4) ){ goto $label$36 }
	$7 = $5
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$35 }
	if ( ((int_32)*($6 + [80]) == (int_32)($3 + [280])) ){ goto $label$34 }
	CALL eosio_assert([0], [13846])
	goto $label$34 
	
.LABEL $label$35
	$6 = [0]
	$5 = CALL db_find_i64(*($3 + [280]), *(($3 + [288])), (int_64)-6495091301338316800, $4)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$38 }
	$6 = CALL $206(($3 + [280]), $5)
	if ( ((int_32)*($6 + [80]) == (int_32)($3 + [280])) ){ goto $label$34 }
	CALL eosio_assert([0], [13846])
	goto $label$34 
	
.LABEL $label$38
	CALL eosio_assert([0], [14421])
	CALL eosio_assert([0], [14455])
	
.LABEL $label$34
	$5 = CALL db_next_i64(*($6 + [84]), ($3 + [64]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$39 }
	CALL $206(($3 + [280]), $5)
	
.LABEL $label$39
	CALL $202(($3 + [280]), $6)
	if ( (*($2) & [1]) ){ goto $label$44 }
	if ( (*($3 + [216]) & [1]) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	CALL $11(*(($3 + [128])))
	if ( ((*($3 + [216]) & [1]) == 0) ){ goto $label$42 }
	
.LABEL $label$43
	CALL $11(*(($3 + [224])))
	$6 = *($3 + [304])
	if ( ($6 == 0) ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$42
	$6 = *($3 + [304])
	if ( $6 ){ goto $label$40 }
	
.LABEL $label$41
	$global$0 = ($3 + [336])
	return 
	
.LABEL $label$40
	$9 = ($3 + [308])
	$5 = *($9)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$46 }
	
.LOOP $label$47:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$48 }
	CALL $11($7)
	
.LABEL $label$48
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$47 }
	$5 = *(($3 + [304]))
	goto $label$45 
	
.LABEL $label$46
	$5 = $6
	
.LABEL $label$45
	*($9) = $6
	CALL $11($5)
	$global$0 = ($3 + [336])
}

void .FUNC $200 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($1 + [16]) = *(*(*($2) + [4]) + [8])
	$5 = *($1)
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($2 + [-12])
	CALL $70($4, $1)
	CALL db_update_i64(*($1 + [44]), (int_64)0, $3, [36])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [16])
}

int_32 .FUNC $201 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [32])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [14455])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *(($2 + [92]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)0
	*(($1 + [24])) = (int_64)0
	*($1) = (int_64)0
	*($1 + [8]) = (int_64)0
	$3 = *(*($0))
	$3 = CALL db_idx256_find_primary(*($3), *($3 + [8]), (int_64)-6495091301338316799, $1, [2], *($2))
	*((*(($0 + [4])) + [92])) = $3
	
.LABEL $label$2
	*($1) = (int_64)0
	$4 = CALL db_idx256_next($3, $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$5 = *($1)
	$3 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$7:
	$2 = ($3 + [-24])
	$8 = *($2)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$5 }
	$3 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [32])
	return $0
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	if ( ((int_32)*($8 + [80]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [13846])
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL $206($6, CALL $fimport$27(*($6), *($6 + [8]), (int_64)-6495091301338316800, $5))
	if ( ((int_32)*($8 + [80]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [13846])
	
.LABEL $label$3
	*(($0 + [4])) = $8
	*(($8 + [92])) = $4
	$global$0 = ($1 + [32])
	return $0
}

int_32 .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [13814])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $9([96])) + [56]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [48])
	CALL $343(($3 + [32]), ($3 + [24]))
	*($5 + [84]) = $1
	*($5 + [88 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $136(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $207 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [176])
	$global$0 = $3
	*((($3 + [96]) + [32])) = [0]
	*($3 + [104]) = $1
	*($3 + [112]) = (int_64)-1
	$4 = (int_64)0
	*($3 + [120]) = (int_64)0
	*($3 + [132]) = [0]
	*($3 + [96]) = *($0)
	*($3 + [88]) = ($3 + [96])
	$5 = [16]
	$6 = ($3 + [32])
	$7 = [0]
	$8 = (int_64)0
	
.LOOP $label$2:
	$9 = ($2 + $7)
	if ( ($5 <= [2]) ){ goto $label$3 }
	$4 = ((int_64)$4 | (int_64)*($9))
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)(uint_64)$4 >> (uint_64)(int_64)56))
	$5 = ($5 + [-1])
	$4 = ((int_64)$4 << (int_64)8)
	$7 = ($7 + [1])
	if ( ((int_32)$7 != (int_32)[32]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [14110])
	
.LABEL $label$4
	$10 = *($9)
	*($6 + [8]) = $8
	*($6) = ((int_64)$4 | (int_64)$10)
	$5 = [16]
	$6 = ($6 + [16])
	$4 = (int_64)0
	$8 = (int_64)0
	$7 = ($7 + [1])
	if ( ((int_32)$7 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)[16]) ){ goto $label$5 }
	if ( ($5 <= [2]) ){ goto $label$6 }
	CALL __ashlti3(($3 + [8]), $4, $8, (($5 << [3]) + [-8]))
	$8 = *(($3 + [16]))
	$4 = *($3 + [8])
	
.LABEL $label$6
	*($6) = $4
	*($6 + [8]) = $8
	
.LABEL $label$5
	CALL $199(($3 + [80]), ($3 + [88]), ($3 + [32]))
	CALL eosio_assert(((int_32)*($3 + [84]) != (int_32)[0]), [12724])
	$5 = CALL $127(($0 + [128]), $1, [12838])
	CALL eosio_assert((uint_64)(((int_64)*(*($3 + [84]) + [8]) + (int_64)172800) <= *($5 + [16])), [12858])
	$4 = *(*($3 + [84]))
	$7 = *(($3 + [124]))
	$9 = *(($3 + [120]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$10:
	$5 = ($7 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$4) ){ goto $label$9 }
	$7 = $5
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$8 }
	if ( ((int_32)*($6 + [80]) == (int_32)($3 + [96])) ){ goto $label$7 }
	CALL eosio_assert([0], [13846])
	goto $label$7 
	
.LABEL $label$8
	$5 = CALL db_find_i64(*($3 + [96]), *(($3 + [104])), (int_64)-6495091301338316800, $4)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$11 }
	$6 = CALL $206(($3 + [96]), $5)
	if ( ((int_32)*($6 + [80]) == (int_32)($3 + [96])) ){ goto $label$7 }
	CALL eosio_assert([0], [13846])
	goto $label$7 
	
.LABEL $label$11
	$6 = [0]
	CALL eosio_assert([0], [14421])
	CALL eosio_assert([0], [14455])
	
.LABEL $label$7
	$5 = CALL db_next_i64(*($6 + [84]), ($3 + [32]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$12 }
	CALL $206(($3 + [96]), $5)
	
.LABEL $label$12
	CALL $202(($3 + [96]), $6)
	*(($6 = ($3 + [64]))) = [0]
	*($3 + [40]) = $1
	*($3 + [48]) = (int_64)-1
	*($3 + [56]) = (int_64)0
	$4 = *($0)
	*($3 + [32]) = $4
	*($3 + [28]) = $2
	*($3 + [24]) = ($3 + [32])
	*($3 + [168]) = $4
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$13 }
	CALL eosio_assert([0], [14370])
	
.LABEL $label$13
	*($3 + [148]) = ($3 + [24])
	*($3 + [144]) = ($3 + [32])
	*($3 + [152]) = ($3 + [168])
	*(($5 = CALL $9([64])) + [48]) = ($3 + [32])
	CALL $208(($3 + [144]), $5)
	*($3 + [160]) = $5
	$4 = *($5)
	*($3 + [144]) = $4
	$9 = *($5 + [52])
	*($3 + [140]) = $9
	$2 = ($3 + [60])
	$7 = *($2)
	if ( ((uint_32)$7 >= (uint_32)*($6)) ){ goto $label$16 }
	*($7 + [8]) = $4
	*($7 + [16]) = $9
	*($3 + [160]) = [0]
	*($7) = $5
	*($2) = ($7 + [24])
	$5 = *($3 + [160])
	*($3 + [160]) = [0]
	if ( $5 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $209(($3 + [56]), ($3 + [160]), ($3 + [144]), ($3 + [140]))
	$5 = *($3 + [160])
	*($3 + [160]) = [0]
	if ( ($5 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $11($5)
	
.LABEL $label$14
	$6 = *($3 + [56])
	if ( ($6 == 0) ){ goto $label$17 }
	$9 = ($3 + [60])
	$5 = *($9)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$19 }
	
.LOOP $label$20:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$21 }
	CALL $11($7)
	
.LABEL $label$21
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$20 }
	$5 = *(($3 + [56]))
	goto $label$18 
	
.LABEL $label$19
	$5 = $6
	
.LABEL $label$18
	*($9) = $6
	CALL $11($5)
	
.LABEL $label$17
	$6 = *($3 + [120])
	if ( ($6 == 0) ){ goto $label$22 }
	$9 = ($3 + [124])
	$5 = *($9)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$24 }
	
.LOOP $label$25:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$26 }
	CALL $11($7)
	
.LABEL $label$26
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$25 }
	$5 = *(($3 + [120]))
	goto $label$23 
	
.LABEL $label$24
	$5 = $6
	
.LABEL $label$23
	*($9) = $6
	CALL $11($5)
	
.LABEL $label$22
	$global$0 = ($3 + [176])
}

void .FUNC $204 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($4 + [24]) = (uint_64)*(($1 + [112])) >> (uint_64)(int_64)8)
	$6 = *($1 + [8])
	$5 = *($2)
	if ( ((int_64)*(($5 + [24])) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($5 + [16]))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14676])
	$7 = *($1)
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14695])
	
.LABEL $label$5
	$5 = *($2)
	if ( ((int_64)*(($5 + [24])) == (int_64)*(($1 + [24]))) ){ goto $label$6 }
	CALL eosio_assert([0], [14633])
	
.LABEL $label$6
	$7 = ((int_64)*($1 + [16]) + (int_64)*($5 + [16]))
	*($1 + [16]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [14676])
	$7 = *(($1 + [16]))
	
.LABEL $label$7
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [14695])
	
.LABEL $label$8
	$2 = *($2)
	if ( ((int_64)*(($2 + [24])) == (int_64)*(($1 + [168]))) ){ goto $label$9 }
	CALL eosio_assert([0], [14713])
	
.LABEL $label$9
	$8 = (int_64)
	*($1 + [160]) = $8(*($1 + [160]) - *($2 + [16])))
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [14761])
	$8 = *(($1 + [160]))
	
.LABEL $label$10
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [14783])
	
.LABEL $label$11
	*($1 + [176]) = ((int_64)*($1 + [176]) + (int_64)-1)
	$5 = ($1 + [176])
	if ( ((int_64)$7 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$12 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$12
	$3 = $3
	$2 = ($3 + [-240])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-11])
	*($4 + [32]) = ($4 + [8])
	*($4 + [96]) = $5
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [16])
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [96])
	*($4 + [72]) = ($1 + [104])
	$3 = ($1 + [112])
	*($4 + [76]) = $3
	*($4 + [80]) = ($1 + [120])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [152])
	*($4 + [92]) = ($1 + [160])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [192])
	CALL $112(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $2, [229])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$13
	*($4 + [40]) = (uint_64)*($3) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$14 }
	$2 = ($1 + [256])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$15 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $7)
	*($2) = $1
	
.LABEL $label$15
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$14
	$global$0 = ($4 + [112])
}

void .FUNC $205 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($4 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($4 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$5 = *($1)
	$6 = *($2)
	if ( ((int_64)*(($6 + [24])) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [14713])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [16]) = $7(*($1 + [16]) - *($6 + [16])))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14761])
	$7 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14783])
	
.LABEL $label$5
	$2 = *($2)
	if ( ((int_64)*(($2 + [24])) == (int_64)*(($1 + [192]))) ){ goto $label$6 }
	CALL eosio_assert([0], [14713])
	
.LABEL $label$6
	$7 = (int_64)
	*($1 + [184]) = $7(*($1 + [184]) - *($2 + [16])))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [14761])
	$7 = *(($1 + [184]))
	
.LABEL $label$7
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [14783])
	
.LABEL $label$8
	*($1 + [200]) = ((int_64)*($1 + [200]) + (int_64)-1)
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$9
	$6 = (($4 + [16]) + [8])
	$8 = ($1 + [200])
	$2 = *($1 + [100])
	$9 = ( *(($1 + [104])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($9 + [253])
	$7 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [100])
	
.LOOP $label$10:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$10 }
	$10 = *($1 + [112])
	$10 = ( *(($1 + [116])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$2 = ($10 + $2)
	$7 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [112])
	
.LOOP $label$11:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$11 }
	if ( ($2 <= [513]) ){ goto $label$13 }
	$3 = CALL $2($2)
	goto $label$12 
	
.LABEL $label$13
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$12
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [32]) = $4
	*($4 + [72]) = $9
	*($4 + [76]) = $10
	*($4 + [104]) = $8
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [32])
	*($4 + [56]) = ($1 + [48])
	*($4 + [60]) = ($1 + [64])
	*($4 + [64]) = ($1 + [80])
	*($4 + [68]) = ($1 + [96])
	*($4 + [80]) = ($1 + [128])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [144])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [168])
	*($4 + [100]) = ($1 + [184])
	*($4 + [108]) = ($1 + [208])
	*($4 + [112]) = ($1 + [224])
	*($4 + [120]) = ($1 + [240])
	*($4 + [116]) = ($1 + [232])
	CALL $86(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [300]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$14 }
	CALL $4($3)
	
.LABEL $label$14
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*($4 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$16 }
	$3 = ($1 + [304])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($4 + [32]), $5)
	*($3) = $2
	
.LABEL $label$17
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$16
	*($4 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($6, ($4 + [40]), [8]) == 0) ){ goto $label$18 }
	$1 = ($1 + [308])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($4 + [32]), $5)
	*($1) = $2
	
.LABEL $label$19
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$18
	$global$0 = ($4 + [128])
}

int_32 .FUNC $8 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $6())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $7($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $9 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $2($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $2($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $6 ()
{
	return [8208]
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $2($1)
	
.LABEL $label$2
	*(CALL $6()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $2(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $4($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $4 (int_32 $0)
{
}

void .FUNC $5 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8509])
	return $3
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $3 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = ((int_32)$1 * (int_32)$0)
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = uint_32($1 >> [16])
	$3 = (*([0] + [8204]) + $2)
	*([0] + [8204]) = $3
	$0 = *([0] + [8196])
	$4 = ((($0 + $1) + [7]) & [-8])
	*([0] + [8196]) = $4
	if ( ((uint_32)($3 << [16]) <= (uint_32)$4) ){ goto $label$5 }
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	*([0] + [8204]) = ($3 + [1])
	if ( ((int_32)($2 + [1]) != (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8509])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memset($0, [0], $1)
	return $0
	
.LABEL $label$1
	return [0]
}

void .FUNC $0 ()
{
	CALL $5()
}

int_32 .FUNC $1 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	return CALL $13($0, $1)
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $4($0)
	
.LABEL $label$1
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	CALL $15($0, $1)
}

int_32 .FUNC $17 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $10 (int_32 $0)
{
	return CALL $9($0)
}

void .FUNC $11 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $4($0)
	
.LABEL $label$1
}

void .FUNC $12 (int_32 $0)
{
	CALL $11($0)
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $8(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $8(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $39 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $38($0, $1, $2, CALL $17($2))
}

int_32 .FUNC $18 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

void .FUNC $19 (int_32 $0)
{
	*($0) = [1]
}

void .FUNC $338 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$5 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13474])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $5, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13474])
	$4 = *($1)
	
.LABEL $label$8
	CALL memcpy($4, ($2 + [8]), [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $339 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [64])
	$global$0 = $3
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$7 }
	*(($3 + [32])) = (int_64)0
	*(($3 + [40])) = (int_64)0
	*($3 + [16]) = [0]
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	$4 = ($3 + [20])
	$0 = *($2 + [4])
	$2 = CALL $340($0, ($3 + [8]))
	if ( ((int_32)*($2 + [8]) != (int_32)$0) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$0 = *(($2 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $0, [1])
	*(($0 = ($2 + [4]))) = (*($0) + [1])
	$4 = ($3 + [36])
	$0 = ($3 + [24])
	CALL $279(CALL $279($2, $0), $4)
	$2 = *($1 + [48])
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$5 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$6 }
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$4 }
	*($1 + [4]) = $2
	CALL $11($2)
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$2 = ($1 + [8])
	goto $label$3 
	
.LABEL $label$7
	CALL eosio_assert([0], [14804])
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$6
	*($3 + [56]) = *([0] + [14000])
	CALL void ($3 + [48])((int_32 $1), (int_32 *((($3 + [56]) + ($2 << [2])))))
	
.LABEL $label$5
	*($1) = *($3 + [8])
	$2 = ($3 + [16])
	$5 = *($2)
	*($2) = [0]
	*($1 + [8]) = $5
	*($1 + [12]) = *(($3 + [20]))
	$6 = *($0)
	*($0) = [0]
	*($1 + [16 align=4]) = $6
	$6 = *((($3 + [8]) + [24]))
	*(($3 + [28])) = (int_64)0
	*(($1 + [24])) = $6
	*(($1 + [32])) = *((($3 + [8]) + [32]))
	$2 = (($3 + [8]) + [36])
	$0 = *($2)
	*($2) = [0]
	*($4) = (int_64)0
	*($3 + [8]) = (int_64)0
	*(($1 + [36])) = $0
	*(($1 + [48])) = [1]
	$1 = *(($3 + [24]))
	if ( ($1 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$2 = ($1 + [8])
	
.LABEL $label$3
	*($1) = *($3 + [8])
	$0 = ($3 + [16])
	$4 = *($0)
	*($0) = [0]
	*($2) = $4
	*($1 + [12]) = *(($3 + [20]))
	*($3 + [8]) = (int_64)0
	$2 = *($1 + [16])
	if ( ($2 == 0) ){ goto $label$10 }
	*(($1 + [20])) = $2
	CALL $11($2)
	*(($2 = ($1 + [24]))) = [0]
	*($1 + [16 align=4]) = (int_64)0
	goto $label$9 
	
.LABEL $label$10
	$2 = ($1 + [24])
	
.LABEL $label$9
	$0 = (($3 + [8]) + [16])
	*(($1 + [16])) = *($0)
	$4 = ($3 + [32])
	$5 = *($4)
	*($4) = [0]
	*($2) = $5
	*($0) = (int_64)0
	$2 = *($1 + [28])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($1 + [32])) = $2
	CALL $11($2)
	*(($2 = ($1 + [36]))) = [0]
	*($1 + [28 align=4]) = (int_64)0
	goto $label$11 
	
.LABEL $label$12
	$2 = ($1 + [36])
	
.LABEL $label$11
	$1 = (($3 + [8]) + [28])
	*(($1 + [28])) = *($1)
	$0 = ($3 + [44])
	$4 = *($0)
	*($0) = [0]
	*($2) = $4
	*($1) = (int_64)0
	$1 = *(($3 + [24]))
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*(($3 + [28])) = $1
	CALL $11($1)
	
.LABEL $label$1
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	*($3 + [12]) = $1
	CALL $11($1)
	
.LABEL $label$13
	$global$0 = ($3 + [64])
}

void .FUNC $336 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$6 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$6 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13837])
	$6 = *($5)
	
.LABEL $label$10
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$11 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($6, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [36])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy(($2 + [8]), $5, [8])
	*($6) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($6, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$17
	CALL memcpy(($2 + [8]), $5, [8])
	*($6 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$18
	CALL memcpy($6, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$19
	CALL memcpy(($2 + [8]), $5, [8])
	*($6 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$20
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [52])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$21
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [13837])
	$6 = *($5)
	
.LABEL $label$22
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$23
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [60])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$24 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$24
	CALL memcpy(($2 + [8]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($6) = ((int_32)*($2 + [8]) != (int_32)[0])
	$0 = *($0 + [64])
	*($2) = *($1)
	*($2 + [12]) = ($0 + [4])
	*($2 + [8]) = $0
	*($2 + [16]) = ($0 + [8])
	*($2 + [20]) = ($0 + [16])
	*($2 + [24]) = ($0 + [32])
	*($2 + [28]) = ($0 + [40])
	CALL $337(($2 + [8]), $2)
	$global$0 = ($2 + [32])
}

void .FUNC $337 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$5 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$4 = *($1)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $334 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$5 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$4 = *($1)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $335 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$5 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13474])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $5, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13474])
	$4 = *($1)
	
.LABEL $label$8
	CALL memcpy($4, ($2 + [8]), [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $332 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [20])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($4, $3, [4])
	$3 = (*($2) + [4])
	*($2) = $3
	$2 = ($1 + [24])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $3, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [32])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($1, $3, [8])
	*($2) = (*($2) + [8])
	return $0
}

void .FUNC $333 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $5, [8])
	*($3) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13837])
	$3 = *($5)
	
.LABEL $label$10
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [13837])
	$3 = *($5)
	
.LABEL $label$12
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$13 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	CALL $257(*($1), *($0 + [32]))
	CALL $257(*($1), *($0 + [36]))
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$17
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [52])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$18
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$19
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [13837])
	$3 = *($5)
	
.LABEL $label$20
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [60])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$21
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [13837])
	$3 = *($5)
	
.LABEL $label$22
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$23
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [68])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$24 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$24
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$25 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$25
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [72])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$26 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$26
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [76])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$27 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$27
	CALL memcpy(($2 + [8]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [8]) != (int_32)[0])
	$0 = *($0 + [80])
	*($2) = *($1)
	*($2 + [12]) = ($0 + [4])
	*($2 + [8]) = $0
	*($2 + [16]) = ($0 + [8])
	*($2 + [20]) = ($0 + [16])
	*($2 + [24]) = ($0 + [32])
	*($2 + [28]) = ($0 + [40])
	CALL $334(($2 + [8]), $2)
	$global$0 = ($2 + [32])
}

int_32 .FUNC $330 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$4 = ($1 + [24])
	$3 = *($0 + [4])
	$0 = CALL $257($0, ($1 + [8]))
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $3
	$4 = ($1 + [32])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [52])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [4])
	$4 = (*($3) + [4])
	*($3) = $4
	$3 = ($1 + [56])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	if ( ((int_32)*(($0 + [8])) != (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy(($2 + [15]), $4, [1])
	*($3) = (*($3) + [1])
	*(($1 + [60])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $331 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $116 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$5 = ($1 + [112])
	*($4 + [24]) = (uint_64)*($5) >> (uint_64)(int_64)8)
	*($1 + [184]) = *(*($2))
	$6 = *($1 + [8])
	$2 = $3
	$3 = ($2 + [-240])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-11])
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = ($1 + [16])
	*($4 + [40]) = $1
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [96])
	*($4 + [72]) = ($1 + [104])
	*($4 + [76]) = $5
	*($4 + [80]) = ($1 + [120])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [152])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [176])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [192])
	CALL $112(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $3, [229])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( (uint_64)($6) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$3
	*($4 + [40]) = (uint_64)*($5) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$3 = ($1 + [256])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	$global$0 = ($4 + [112])
}

void .FUNC $117 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = ($0 + [208])
	$0 = CALL $102($4, $1, [13376])
	$1 = *($2)
	CALL eosio_assert((((int_64)*($2 + [8]) == (int_64)*($0 + [8])) & ((int_64)$1 > (int_64)-1)), [9997])
	CALL eosio_assert(((int_64)((int_64)$1 * (int_64)10) <= (int_64)*($0 + [32])), [10167])
	*($3 + [8]) = $2
	CALL $118($4, $0, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $114 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$6 = ($1 + [112])
	*($5 + [24]) = (uint_64)*($6) >> (uint_64)(int_64)8)
	*($1 + [80]) = *(*($3))
	$7 = *($1 + [8])
	$3 = $4
	$4 = ($3 + [-240])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-11])
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = ($1 + [16])
	*($5 + [40]) = $1
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [96])
	*($5 + [72]) = ($1 + [104])
	*($5 + [76]) = $6
	*($5 + [80]) = ($1 + [120])
	*($5 + [84]) = ($1 + [136])
	*($5 + [88]) = ($1 + [152])
	*($5 + [92]) = ($1 + [160])
	*($5 + [96]) = ($1 + [176])
	*($5 + [100]) = ($1 + [184])
	*($5 + [104]) = ($1 + [192])
	CALL $112(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [252]), $2, $4, [229])
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( (uint_64)($7) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$3
	*($5 + [40]) = (uint_64)*($6) >> (uint_64)(int_64)8)
	if ( (CALL $1(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [256])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($5 + [32]), $7)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, $2, ($5 + [40]))
	
.LABEL $label$4
	$global$0 = ($5 + [112])
}

void .FUNC $115 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [15]) = $3
	$5 = ($0 + [208])
	$6 = CALL $102($5, $1, [13376])
	CALL require_auth(*($6 + [88]))
	$0 = *($2)
	$3 = CALL $17([9075])
	if ( ((int_32)$3 != (int_32)( *($2 + [4]) ? uint_32($0 >> [1]) : ($0 & [1]) )) ){ goto $label$2 }
	if ( (CALL $41($2, [0], [-1], [9075], $3) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9082])
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$1
	*($4 + [8]) = ($4 + [15])
	CALL $116($5, $6, ($4 + [8]))
	$global$0 = ($4 + [16])
}

void .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13474])
	$6 = *($5)
	
.LABEL $label$6
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13474])
	$6 = *($5)
	
.LABEL $label$8
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13474])
	$6 = *($5)
	
.LABEL $label$10
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$11 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $6, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [8]) = *(*($0 + [36]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($5, $6, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$17
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$18
	CALL memcpy($5, $6, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$19
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$20
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [52])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$21
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [13474])
	$6 = *($5)
	
.LABEL $label$22
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$23
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [8]) = *(*($0 + [60]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$24 }
	CALL eosio_assert([0], [13474])
	$5 = *(($4 + [4]))
	
.LABEL $label$24
	CALL memcpy($5, ($2 + [8]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$0 = *($0 + [64])
	*($2) = *($1)
	*($2 + [12]) = ($0 + [4])
	*($2 + [8]) = $0
	*($2 + [16]) = ($0 + [8])
	*($2 + [20]) = ($0 + [16])
	*($2 + [24]) = ($0 + [32])
	*($2 + [28]) = ($0 + [40])
	CALL $338(($2 + [8]), $2)
	$global$0 = ($2 + [32])
}

void .FUNC $113 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [8]) = $3
	$5 = ($0 + [208])
	$6 = CALL $102($5, $1, [13376])
	CALL require_auth(*($0))
	$8 = *($2)
	$7 = CALL $17([10475])
	if ( ((int_32)$7 != (int_32)( *($2 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$2 }
	if ( (CALL $41($2, [0], [-1], [10475], $7) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9082])
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$1
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)-1) <= (int_64)500), [10494])
	$3 = *($0)
	*($4) = ($4 + [8])
	CALL $114($5, $6, $3, $4)
	$global$0 = ($4 + [16])
}

void .FUNC $110 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$5 = *($2)
	*(($1 + [56])) = *(($5 + [8]))
	$2 = ($1 + [112])
	*($4 + [24]) = (uint_64)*($2) >> (uint_64)(int_64)8)
	*($1 + [48]) = *($5)
	$6 = *($1 + [8])
	$5 = $3
	$3 = ($5 + [-240])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($5 + [-11])
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = ($1 + [16])
	*($4 + [40]) = $1
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [96])
	*($4 + [72]) = ($1 + [104])
	*($4 + [76]) = $2
	*($4 + [80]) = ($1 + [120])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [152])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [176])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [192])
	CALL $112(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $3, [229])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( (uint_64)($6) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$3
	*($4 + [40]) = (uint_64)*($2) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$3 = ($1 + [256])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	$global$0 = ($4 + [112])
}

void .FUNC $111 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$5 = *($2)
	*(($1 + [72])) = *(($5 + [8]))
	$2 = ($1 + [112])
	*($4 + [24]) = (uint_64)*($2) >> (uint_64)(int_64)8)
	*($1 + [64]) = *($5)
	$6 = *($1 + [8])
	$5 = $3
	$3 = ($5 + [-240])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($5 + [-11])
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = ($1 + [16])
	*($4 + [40]) = $1
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [96])
	*($4 + [72]) = ($1 + [104])
	*($4 + [76]) = $2
	*($4 + [80]) = ($1 + [120])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [152])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [176])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [192])
	CALL $112(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $3, [229])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( (uint_64)($6) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$3
	*($4 + [40]) = (uint_64)*($2) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$3 = ($1 + [256])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	$global$0 = ($4 + [112])
}

void .FUNC $118 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [248]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	$5 = *($2)
	*(($1 + [128])) = *(($5 + [8]))
	$2 = ($1 + [112])
	*($4 + [24]) = (uint_64)*($2) >> (uint_64)(int_64)8)
	*($1 + [120]) = *($5)
	$6 = *($1 + [8])
	$5 = $3
	$3 = ($5 + [-240])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($5 + [-11])
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = ($1 + [16])
	*($4 + [40]) = $1
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [96])
	*($4 + [72]) = ($1 + [104])
	*($4 + [76]) = $2
	*($4 + [80]) = ($1 + [120])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [152])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [176])
	*($4 + [100]) = ($1 + [184])
	*($4 + [104]) = ($1 + [192])
	CALL $112(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $3, [229])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( (uint_64)($6) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$3
	*($4 + [40]) = (uint_64)*($2) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$3 = ($1 + [256])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157495357179166720, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	$global$0 = ($4 + [112])
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$2 = ($global$0 - [128])
	$global$0 = $2
	$3 = [0]
	if ( *([0] + [8508]) ){ goto $label$1 }
	*([0] + [8496 align=4]) = (int_64)0
	*([0] + [8504]) = [0]
	$5 = CALL $17([10543])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$5 }
	*([0] + [8496]) = ($5 << [1])
	$8 = [8497]
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = (($5 + [16]) & [-16])
	$8 = CALL $9($6)
	*([0] + [8496]) = ($6 | [1])
	*([0] + [8504]) = $8
	*([0] + [8500]) = $5
	
.LABEL $label$4
	CALL memcpy($8, [10543], $5)
	
.LABEL $label$3
	*(($8 + $5)) = [0]
	CALL $44([3], [0], [8192])
	*([0] + [8508]) = [1]
	goto $label$1 
	
.LABEL $label$2
	CALL $26([8496])
	
.LABEL $label$1
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = [0]
	$1 = CALL $27(($2 + [112]), $1)
	CALL $50($1)
	$4 = ($1 + [1])
	$5 = *($2 + [112])
	$6 = *($1 + [8])
	$7 = *($1 + [4])
	$8 = CALL $17([10584])
	if ( ($8 == 0) ){ goto $label$6 }
	$5 = ( $7 ? uint_32($5 >> [1]) : $3 )
	$3 = ($5 & [1])
	$9 = ( $6 ? $4 : $3 )
	$6 = ($9 + $5)
	if ( ((int_32)$5 < (int_32)$8) ){ goto $label$8 }
	$3 = $9
	
.LOOP $label$9:
	$5 = (($5 - $8) + [1])
	if ( ($5 == 0) ){ goto $label$8 }
	$5 = CALL $18($3, [64], $5)
	if ( ($5 == 0) ){ goto $label$8 }
	if ( (CALL $1($5, [10584], $8) == 0) ){ goto $label$7 }
	$3 = ($5 + [1])
	$5 = ($6 - $3)
	if ( ((int_32)$5 >= (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$8
	$5 = $6
	
.LABEL $label$7
	$3 = ( [-1] ? ($5 - $9) : ((int_32)$5 == (int_32)$6) )
	
.LABEL $label$6
	*(($2 + [88])) = [0]
	*($2 + [80]) = (int_64)0
	$5 = CALL $17([10586])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$17 }
	$6 = ((int_32)$3 != (int_32)[-1])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$20 }
	*($2 + [80]) = ($5 << [1])
	$8 = (($2 + [80]) | [1])
	if ( $5 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$7 = (($5 + [16]) & [-16])
	$8 = CALL $9($7)
	*($2 + [80]) = ($7 | [1])
	*($2 + [88]) = $8
	*($2 + [84]) = $5
	
.LABEL $label$19
	CALL memcpy($8, [10586], $5)
	
.LABEL $label$18
	*(($8 + $5)) = [0]
	$5 = *([0] + [8496])
	$7 = ($5 & [1])
	$5 = CALL $37(($2 + [80]), ( *([0] + [8504]) ? [8497] : $7 ), ( *([0] + [8500]) ? uint_32($5 >> [1]) : $7 ))
	$7 = ($5 + [8])
	*(($8 = (($2 + [96]) + [8]))) = *($7)
	*($2 + [96]) = *($5)
	*($5) = (int_64)0
	*($7) = [0]
	CALL eosio_assert($6, ( *($8) ? (($2 + [96]) | [1]) : (*($2 + [96]) & [1]) ))
	if ( ((*($2 + [96]) & [1]) == 0) ){ goto $label$21 }
	CALL $11(*($8))
	
.LABEL $label$21
	if ( ((*($2 + [80]) & [1]) == 0) ){ goto $label$22 }
	CALL $11(*($2 + [88]))
	
.LABEL $label$22
	$6 = CALL $28(($2 + [96]), $1, [0], $3, $1)
	CALL $50($6)
	$5 = *($2 + [96])
	$8 = ($5 & [1])
	*($2 + [72]) = ( *($6 + [8]) ? ($6 + [1]) : $8 )
	*($2 + [76]) = ( *($6 + [4]) ? uint_32($5 >> [1]) : $8 )
	*($2 + [16]) = *($2 + [72])
	*($0) = *(CALL $121(($2 + [80]), ($2 + [16])))
	CALL $28(($2 + [80]), $1, ($3 + [1]), [-1], $1)
	if ( (*($2 + [112]) & [1]) ){ goto $label$24 }
	*($4) = [0]
	*($2 + [112]) = [0]
	goto $label$23 
	
.LABEL $label$24
	*(*(($1 + [8]))) = [0]
	*(($1 + [4])) = [0]
	
.LABEL $label$23
	CALL $31($1, [0])
	*((($2 + [112]) + [8])) = *((($2 + [80]) + [8]))
	*($2 + [112]) = *($2 + [80])
	CALL $50($1)
	$8 = *($2 + [112])
	$9 = *(($1 + [8]))
	$7 = *(($1 + [4]))
	$3 = [0]
	$5 = CALL $17([8679])
	if ( ($5 == 0) ){ goto $label$29 }
	$3 = ($8 & [1])
	$8 = ( $7 ? uint_32($8 >> [1]) : $3 )
	if ( ((int_32)$8 < (int_32)$5) ){ goto $label$28 }
	$9 = ( $9 ? $4 : $3 )
	$7 = ($9 + $8)
	$3 = $9
	
.LOOP $label$30:
	$8 = (($8 - $5) + [1])
	if ( ($8 == 0) ){ goto $label$28 }
	$8 = CALL $18($3, [32], $8)
	if ( ($8 == 0) ){ goto $label$28 }
	if ( (CALL $1($8, [8679], $5) == 0) ){ goto $label$31 }
	$3 = ($8 + [1])
	$8 = ($7 - $3)
	if ( ((int_32)$8 >= (int_32)$5) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$31
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$28 }
	$3 = ($8 - $9)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$29
	$8 = *($5)
	$4 = ($8 & [1])
	$5 = CALL $28(($2 + [40]), $1, [0], $3, $1)
	*($2 + [56]) = ( *($5 + [8]) ? ($5 + [1]) : $4 )
	*($2 + [60]) = ( *($5 + [4]) ? uint_32($8 >> [1]) : $4 )
	*($2) = *($2 + [56])
	*(($0 + [8])) = *(CALL $121(($2 + [80]), $2))
	if ( ((*($5) & [1]) == 0) ){ goto $label$32 }
	CALL $11(*(($5 + [8])))
	
.LABEL $label$32
	CALL $28(($2 + [80]), $1, ($3 + [1]), [-1], $1)
	$5 = ($0 + [16])
	if ( (*($0 + [16]) & [1]) ){ goto $label$27 }
	*($5) = [0]
	goto $label$26 
	
.LABEL $label$28
	$5 = *($2 + [112])
	$8 = ($5 & [1])
	*($2 + [64]) = ( *(($1 + [8])) ? $4 : $8 )
	*($2 + [68]) = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $8 )
	*($2 + [8]) = *($2 + [64])
	*(($0 + [8])) = *(CALL $121(($2 + [80]), ($2 + [8])))
	CALL $32(($0 + [16]), [10657])
	goto $label$25 
	
.LABEL $label$27
	*(*(($0 + [24]))) = [0]
	*(($0 + [20])) = [0]
	
.LABEL $label$26
	CALL $31($5, [0])
	*(($5 + [8])) = *((($2 + [80]) + [8]))
	*($5) = *($2 + [80])
	CALL $50($5)
	
.LABEL $label$25
	$10 = *($0)
	*(($2 + [32])) = [0]
	*($2 + [24]) = (int_64)0
	$5 = CALL $17([10658])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$16 }
	$3 = ((int_64)$10 != (int_64)0)
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$35 }
	*($2 + [24]) = ($5 << [1])
	$8 = (($2 + [24]) | [1])
	if ( $5 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	$4 = (($5 + [16]) & [-16])
	$8 = CALL $9($4)
	*($2 + [24]) = ($4 | [1])
	*($2 + [32]) = $8
	*($2 + [28]) = $5
	
.LABEL $label$34
	CALL memcpy($8, [10658], $5)
	
.LABEL $label$33
	*(($8 + $5)) = [0]
	$5 = *([0] + [8496])
	$4 = ($5 & [1])
	$5 = CALL $37(($2 + [24]), ( *([0] + [8504]) ? [8497] : $4 ), ( *([0] + [8500]) ? uint_32($5 >> [1]) : $4 ))
	$4 = ($5 + [8])
	*(($8 = (($2 + [80]) + [8]))) = *($4)
	*($2 + [80]) = *($5)
	*($5) = (int_64)0
	*($4) = [0]
	CALL eosio_assert($3, ( *($8) ? (($2 + [80]) | [1]) : (*($2 + [80]) & [1]) ))
	if ( ((*($2 + [80]) & [1]) == 0) ){ goto $label$36 }
	CALL $11(*($8))
	
.LABEL $label$36
	if ( ((*($2 + [24]) & [1]) == 0) ){ goto $label$37 }
	CALL $11(*($2 + [32]))
	
.LABEL $label$37
	$10 = *(($0 + [8]))
	*((($2 + [24]) + [8])) = [0]
	*($2 + [24]) = (int_64)0
	$0 = CALL $17([10717])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$15 }
	$8 = ((int_64)$10 != (int_64)0)
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$40 }
	*($2 + [24]) = ($0 << [1])
	$5 = (($2 + [24]) | [1])
	if ( $0 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$3 = (($0 + [16]) & [-16])
	$5 = CALL $9($3)
	*($2 + [24]) = ($3 | [1])
	*($2 + [32]) = $5
	*($2 + [28]) = $0
	
.LABEL $label$39
	CALL memcpy($5, [10717], $0)
	
.LABEL $label$38
	*(($5 + $0)) = [0]
	$0 = *([0] + [8496])
	$3 = ($0 & [1])
	$0 = CALL $37(($2 + [24]), ( *([0] + [8504]) ? [8497] : $3 ), ( *([0] + [8500]) ? uint_32($0 >> [1]) : $3 ))
	$3 = ($0 + [8])
	*(($5 = (($2 + [80]) + [8]))) = *($3)
	*($2 + [80]) = *($0)
	*($0) = (int_64)0
	*($3) = [0]
	CALL eosio_assert($8, ( *($5) ? (($2 + [80]) | [1]) : (*($2 + [80]) & [1]) ))
	if ( (*($2 + [80]) & [1]) ){ goto $label$42 }
	if ( (*($2 + [24]) & [1]) ){ goto $label$41 }
	goto $label$14 
	
.LABEL $label$42
	CALL $11(*($5))
	if ( ((*($2 + [24]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$41
	CALL $11(*($2 + [32]))
	$0 = [1]
	if ( ((*($2 + [96]) & [1]) == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$17
	CALL $26(($2 + [80]))
	
.LABEL $label$16
	CALL $26(($2 + [24]))
	
.LABEL $label$15
	CALL $26(($2 + [24]))
	
.LABEL $label$14
	$0 = [1]
	if ( (*($2 + [96]) & [1]) ){ goto $label$12 }
	
.LABEL $label$13
	if ( (*($2 + [112]) & $0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $11(*(($6 + [8])))
	if ( ((*($2 + [112]) & $0) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $11(*(($1 + [8])))
	$global$0 = ($2 + [128])
	return 
	
.LABEL $label$10
	$global$0 = ($2 + [128])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $299 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [324]) = $2
	*($3 + [320]) = $2
	*($3 + [328]) = ($2 + $4)
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [324])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	*($3 + [324]) = ($2 + [8])
	*($3 + [304]) = [0]
	*($3 + [296]) = (int_64)0
	CALL $276(($3 + [320]), ($3 + [296]))
	$2 = *((($3 + [320]) + [8]))
	*((($3 + [32]) + [8])) = $2
	*(($3 + [8])) = $2
	$5 = *($3 + [320])
	*($3) = $5
	*($3 + [32]) = $5
	$2 = CALL $56(($3 + [48]), $0, $1, $3)
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = [0]
	$0 = *($3 + [312])
	$4 = (*($3 + [300]) - *($3 + [296]))
	if ( ($4 == 0) ){ goto $label$7 }
	$6 = int_32($4 >> [5])
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$6 }
	$4 = CALL $9($4)
	*(($3 + [24])) = ($4 + ($6 << [5]))
	*($3 + [16]) = $4
	*($3 + [20]) = $4
	$7 = *($3 + [296])
	$6 = (*($3 + [300]) - $7)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($4, $7, $6)
	*($3 + [20]) = (*($3 + [20]) + $6)
	
.LABEL $label$7
	CALL $214($2, $0, ($3 + [16]))
	$4 = *($3 + [16])
	if ( ($4 == 0) ){ goto $label$8 }
	*($3 + [20]) = $4
	CALL $11($4)
	
.LABEL $label$8
	CALL $58($2)
	$2 = *($3 + [296])
	if ( ($2 == 0) ){ goto $label$9 }
	*($3 + [300]) = $2
	CALL $11($2)
	
.LABEL $label$9
	$global$0 = ($3 + [336])
	return (unreachable)
	
.LABEL $label$6
	CALL $45(($3 + [16]))
}

void .FUNC $298 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [324]) = $2
	*($3 + [320]) = $2
	*($3 + [328]) = ($2 + $4)
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [324])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	*($3 + [324]) = ($2 + [8])
	*($3 + [304]) = [0]
	*($3 + [296]) = (int_64)0
	CALL $276(($3 + [320]), ($3 + [296]))
	$2 = *((($3 + [320]) + [8]))
	*((($3 + [32]) + [8])) = $2
	*(($3 + [8])) = $2
	$5 = *($3 + [320])
	*($3) = $5
	*($3 + [32]) = $5
	$2 = CALL $56(($3 + [48]), $0, $1, $3)
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = [0]
	$0 = *($3 + [312])
	$4 = (*($3 + [300]) - *($3 + [296]))
	if ( ($4 == 0) ){ goto $label$7 }
	$6 = int_32($4 >> [5])
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$6 }
	$4 = CALL $9($4)
	*(($3 + [24])) = ($4 + ($6 << [5]))
	*($3 + [16]) = $4
	*($3 + [20]) = $4
	$7 = *($3 + [296])
	$6 = (*($3 + [300]) - $7)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($4, $7, $6)
	*($3 + [20]) = (*($3 + [20]) + $6)
	
.LABEL $label$7
	CALL $210($2, $0, ($3 + [16]))
	$4 = *($3 + [16])
	if ( ($4 == 0) ){ goto $label$8 }
	*($3 + [20]) = $4
	CALL $11($4)
	
.LABEL $label$8
	CALL $58($2)
	$2 = *($3 + [296])
	if ( ($2 == 0) ){ goto $label$9 }
	*($3 + [300]) = $2
	CALL $11($2)
	
.LABEL $label$9
	$global$0 = ($3 + [336])
	return (unreachable)
	
.LABEL $label$6
	CALL $45(($3 + [16]))
}

void .FUNC $295 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [464])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [452]) = $2
	*($3 + [448]) = $2
	$5 = ($2 + $4)
	*($3 + [456]) = $5
	*($3 + [440]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$5 = *(($3 + [456]))
	$2 = *($3 + [452])
	
.LABEL $label$5
	CALL memcpy(($3 + [440]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [452]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [452])
	
.LABEL $label$6
	CALL memcpy(($3 + [400]), $2, [32])
	*($3 + [452]) = ($2 + [32])
	*($3 + [392]) = [0]
	*($3 + [384]) = (int_64)0
	CALL $279(($3 + [448]), ($3 + [384]))
	*($3 + [376]) = [0]
	*($3 + [368]) = (int_64)0
	CALL $276(($3 + [448]), ($3 + [368]))
	$2 = *($3 + [452])
	if ( ((uint_32)(*((($3 + [448]) + [8])) - $2) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [452])
	
.LABEL $label$7
	CALL memcpy(($3 + [364]), $2, [4])
	*($3 + [452]) = (*($3 + [452]) + [4])
	*($3 + [360]) = [0]
	*($3 + [352]) = (int_64)0
	CALL $279(($3 + [448]), ($3 + [352]))
	*($3 + [344]) = [0]
	*($3 + [336]) = (int_64)0
	CALL $276(($3 + [448]), ($3 + [336]))
	$2 = *($3 + [452])
	$4 = ($3 + [456])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [452])
	
.LABEL $label$8
	CALL memcpy(($3 + [332]), $2, [4])
	$2 = (*($3 + [452]) + [4])
	*($3 + [452]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[31]) ){ goto $label$9 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [452])
	
.LABEL $label$9
	CALL memcpy(($3 + [288]), $2, [32])
	*($3 + [452]) = (*($3 + [452]) + [32])
	$2 = *((($3 + [448]) + [8]))
	*((($3 + [24]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$6 = *($3 + [448])
	*($3 + [8]) = $6
	*($3 + [24]) = $6
	$2 = CALL $56(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $194($2, ($3 + [440]), ($3 + [400]), ($3 + [384]), ($3 + [368]), ($3 + [364]), ($3 + [352]), ($3 + [336]), ($3 + [332]), ($3 + [288]))
	CALL $58($2)
	$2 = *($3 + [336])
	if ( ($2 == 0) ){ goto $label$10 }
	*($3 + [340]) = $2
	CALL $11($2)
	
.LABEL $label$10
	$2 = *($3 + [352])
	if ( ($2 == 0) ){ goto $label$11 }
	*($3 + [356]) = $2
	CALL $11($2)
	
.LABEL $label$11
	$2 = *($3 + [368])
	if ( ($2 == 0) ){ goto $label$12 }
	*($3 + [372]) = $2
	CALL $11($2)
	
.LABEL $label$12
	$2 = *($3 + [384])
	if ( ($2 == 0) ){ goto $label$13 }
	*($3 + [388]) = $2
	CALL $11($2)
	
.LABEL $label$13
	$global$0 = ($3 + [464])
}

void .FUNC $294 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [5]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [5])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$4 }
	$3 = [134217727]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [5]) > (uint_32)[67108862]) ){ goto $label$7 }
	$3 = int_32($2 >> [4])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $9(($3 << [5]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = (*($0) + [32])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $45($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($3 << [5]))
	$5 = ($2 + ($5 << [5]))
	$3 = $5
	
.LOOP $label$9:
	*($3) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = ($3 + [32])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$6 = ($2 + ($6 << [5]))
	$3 = *($0)
	$7 = ($0 + [4])
	$1 = (*($7) - $3)
	$2 = ($5 - $1)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$10
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$1 }
	CALL $11($3)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $297 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [400])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [392]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [392]), $2, [8])
	$6 = ($2 + [8])
	if ( ((uint_32)($4 + [-8]) > (uint_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$6
	CALL memcpy(($3 + [352]), $6, [32])
	*((($3 + [32]) + [8])) = $5
	*($3 + [88]) = $2
	*($3 + [92]) = ($2 + [40])
	*($3 + [96]) = $5
	*($3 + [32]) = *($3 + [88])
	$2 = CALL $56(($3 + [104]), $0, $1, ($3 + [32]))
	$0 = *((($3 + [352]) + [16]))
	*((($3 + [48]) + [16])) = $0
	$1 = *((($3 + [352]) + [24]))
	*((($3 + [48]) + [24])) = $1
	*(($3 + [16])) = $0
	*(($3 + [24])) = $1
	$0 = *($3 + [352])
	*($3 + [48]) = $0
	$1 = *($3 + [360])
	*($3 + [56]) = $1
	*($3) = $0
	*($3 + [8]) = $1
	CALL $207($2, *($3 + [392]), $3)
	CALL $58($2)
	$global$0 = ($3 + [400])
}

void .FUNC $296 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [400])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [392]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [392]), $2, [8])
	$6 = ($2 + [8])
	if ( ((uint_32)($4 + [-8]) > (uint_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$6
	CALL memcpy(($3 + [352]), $6, [32])
	*((($3 + [32]) + [8])) = $5
	*($3 + [88]) = $2
	*($3 + [92]) = ($2 + [40])
	*($3 + [96]) = $5
	*($3 + [32]) = *($3 + [88])
	$2 = CALL $56(($3 + [104]), $0, $1, ($3 + [32]))
	$0 = *((($3 + [352]) + [16]))
	*((($3 + [48]) + [16])) = $0
	$1 = *((($3 + [352]) + [24]))
	*((($3 + [48]) + [24])) = $1
	*(($3 + [16])) = $0
	*(($3 + [24])) = $1
	$0 = *($3 + [352])
	*($3 + [48]) = $0
	$1 = *($3 + [360])
	*($3 + [56]) = $1
	*($3) = $0
	*($3 + [8]) = $1
	CALL $203($2, *($3 + [392]), $3)
	CALL $58($2)
	$global$0 = ($3 + [400])
}

void .FUNC $291 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	*($3 + [48]) = (int_64)0
	$2 = [0]
	$5 = ($3 + [48])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	*($3 + [48]) = (int_64)0
	$6 = ($2 + $4)
	$5 = ($3 + [48])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13837])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$7 = *($3 + [48])
	*($3 + [304]) = (int_64)0
	*($3 + [296]) = (int_64)0
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$6
	CALL memcpy(($3 + [296]), $5, [8])
	*($3 + [48]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	
.LABEL $label$7
	CALL memcpy(($3 + [48]), $5, [8])
	*(($4 = (($3 + [296]) + [8]))) = *($3 + [48])
	*(($3 + [8])) = $6
	*($3 + [32]) = $2
	*($3 + [36]) = ($2 + [24])
	*($3 + [40]) = $6
	*($3) = *($3 + [32])
	$2 = CALL $56(($3 + [48]), $0, $1, $3)
	*(($6 = (($3 + [16]) + [8]))) = *($4)
	*($3 + [16]) = *($3 + [296])
	*(($5 = (($3 + [312]) + [8]))) = *($6)
	*($3 + [312]) = *($3 + [16])
	CALL require_auth(*($2))
	$6 = ($2 + [208])
	$4 = CALL $102($6, $7, [13376])
	$0 = *($3 + [312])
	CALL eosio_assert((((int_64)*($5) == (int_64)*($4 + [8])) & ((int_64)$0 > (int_64)-1)), [9997])
	CALL eosio_assert(((int_64)((int_64)$0 * (int_64)10) <= (int_64)*($4 + [32])), [10167])
	*($3 + [328]) = ($3 + [312])
	CALL $118($6, $4, ($3 + [328]))
	CALL $58($2)
	$global$0 = ($3 + [336])
}

void .FUNC $290 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [324]) = $2
	*($3 + [320]) = $2
	*($3 + [328]) = ($2 + $4)
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [324])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [324]) = ($2 + [8])
	$5 = *($3 + [56])
	*($3 + [312]) = [0]
	*($3 + [304]) = (int_64)0
	CALL $257(($3 + [320]), ($3 + [304]))
	$2 = *($3 + [324])
	$4 = (($3 + [320]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [324])
	
.LABEL $label$6
	CALL memcpy(($3 + [56]), $2, [1])
	*($3 + [324]) = (*($3 + [324]) + [1])
	$6 = *($3 + [56])
	$2 = *($4)
	*((($3 + [40]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$7 = *($3 + [320])
	*($3 + [8]) = $7
	*($3 + [40]) = $7
	$2 = CALL $27(($3 + [24]), ($3 + [304]))
	$4 = CALL $56(($3 + [56]), $0, $1, ($3 + [8]))
	CALL $115($4, $5, $2, ((int_32)$6 != (int_32)[0]))
	if ( (*($2) & [1]) ){ goto $label$9 }
	CALL $58($4)
	if ( (*($3 + [304]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $11(*($2 + [8]))
	CALL $58($4)
	if ( ((*($3 + [304]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11(*(($3 + [312])))
	$global$0 = ($3 + [336])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [336])
}

void .FUNC $293 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [464])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [452]) = $2
	*($3 + [448]) = $2
	*($3 + [456]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [452])
	
.LABEL $label$5
	CALL memcpy(($3 + [440]), $2, [8])
	$2 = (*($3 + [452]) + [8])
	*($3 + [452]) = $2
	*($3 + [432]) = (int_64)0
	$4 = (($3 + [448]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [452])
	
.LABEL $label$6
	CALL memcpy(($3 + [432]), $2, [8])
	$2 = (*($3 + [452]) + [8])
	*($3 + [452]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[31]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [452])
	
.LABEL $label$7
	CALL memcpy(($3 + [400]), $2, [32])
	*($3 + [452]) = (*($3 + [452]) + [32])
	*($3 + [392]) = [0]
	*($3 + [384]) = (int_64)0
	CALL $279(($3 + [448]), ($3 + [384]))
	*($3 + [376]) = [0]
	*($3 + [368]) = (int_64)0
	CALL $276(($3 + [448]), ($3 + [368]))
	$2 = *($3 + [452])
	$4 = ($3 + [456])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [452])
	
.LABEL $label$8
	CALL memcpy(($3 + [364]), $2, [4])
	*($3 + [452]) = (*($3 + [452]) + [4])
	*($3 + [360]) = [0]
	*($3 + [352]) = (int_64)0
	CALL $279(($3 + [448]), ($3 + [352]))
	*($3 + [344]) = [0]
	*($3 + [336]) = (int_64)0
	CALL $276(($3 + [448]), ($3 + [336]))
	$2 = *($3 + [452])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [452])
	
.LABEL $label$9
	CALL memcpy(($3 + [332]), $2, [4])
	$2 = (*($3 + [452]) + [4])
	*($3 + [452]) = $2
	*($3 + [320]) = (int_64)0
	$4 = (($3 + [448]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [452])
	
.LABEL $label$10
	CALL memcpy(($3 + [320]), $2, [8])
	$2 = (*($3 + [452]) + [8])
	*($3 + [452]) = $2
	*($3 + [312]) = (int_64)0
	*($3 + [304]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [452])
	
.LABEL $label$11
	CALL memcpy(($3 + [304]), $2, [8])
	$2 = (*($3 + [452]) + [8])
	*($3 + [452]) = $2
	*($3 + [40]) = (int_64)0
	$4 = (($3 + [448]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [452])
	
.LABEL $label$12
	CALL memcpy(($3 + [40]), $2, [8])
	*((($3 + [304]) + [8])) = *($3 + [40])
	*($3 + [452]) = (*($3 + [452]) + [8])
	*($3 + [296]) = [0]
	*($3 + [288]) = (int_64)0
	CALL $257(($3 + [448]), ($3 + [288]))
	$2 = *($4)
	*((($3 + [24]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [448])
	*($3 + [8]) = $5
	*($3 + [24]) = $5
	$2 = CALL $56(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $156($2, ($3 + [440]), ($3 + [432]), ($3 + [400]), ($3 + [384]), ($3 + [368]), ($3 + [364]), ($3 + [352]), ($3 + [336]), ($3 + [332]), ($3 + [320]), ($3 + [304]), ($3 + [288]))
	CALL $58($2)
	if ( ((*($3 + [288]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($3 + [296])))
	
.LABEL $label$13
	$2 = *($3 + [336])
	if ( ($2 == 0) ){ goto $label$14 }
	*($3 + [340]) = $2
	CALL $11($2)
	
.LABEL $label$14
	$2 = *($3 + [352])
	if ( ($2 == 0) ){ goto $label$15 }
	*($3 + [356]) = $2
	CALL $11($2)
	
.LABEL $label$15
	$2 = *($3 + [368])
	if ( ($2 == 0) ){ goto $label$16 }
	*($3 + [372]) = $2
	CALL $11($2)
	
.LABEL $label$16
	$2 = *($3 + [384])
	if ( ($2 == 0) ){ goto $label$17 }
	*($3 + [388]) = $2
	CALL $11($2)
	
.LABEL $label$17
	$global$0 = ($3 + [464])
}

void .FUNC $292 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [400])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [388]) = $2
	*($3 + [384]) = $2
	$5 = ($2 + $4)
	*($3 + [392]) = $5
	*($3 + [376]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$5 = *(($3 + [392]))
	$2 = *($3 + [388])
	
.LABEL $label$5
	CALL memcpy(($3 + [376]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [388]) = $2
	*($3 + [368]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$5 = *((($3 + [384]) + [8]))
	$2 = *($3 + [388])
	
.LABEL $label$6
	CALL memcpy(($3 + [368]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [388]) = $2
	*($3 + [360]) = (int_64)0
	*($3 + [352]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$5 = *(($3 + [392]))
	$2 = *($3 + [388])
	
.LABEL $label$7
	CALL memcpy(($3 + [352]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [388]) = $2
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [388])
	
.LABEL $label$8
	CALL memcpy(($3 + [88]), $2, [8])
	*(($4 = (($3 + [352]) + [8]))) = *($3 + [88])
	*($3 + [388]) = ($2 + [8])
	*($3 + [344]) = [0]
	*($3 + [336]) = (int_64)0
	CALL $257(($3 + [384]), ($3 + [336]))
	$2 = *((($3 + [384]) + [8]))
	*((($3 + [72]) + [8])) = $2
	*((($3 + [24]) + [8])) = $2
	$6 = *($3 + [384])
	*($3 + [24]) = $6
	*($3 + [72]) = $6
	$5 = CALL $56(($3 + [88]), $0, $1, ($3 + [24]))
	*(($7 = (($3 + [56]) + [8]))) = *($4)
	*($3 + [56]) = *($3 + [352])
	$0 = *($3 + [368])
	$1 = *($3 + [376])
	$2 = CALL $27(($3 + [40]), ($3 + [336]))
	*((($3 + [8]) + [8])) = *($7)
	*($3 + [8]) = *($3 + [56])
	CALL $138($5, $1, $0, ($3 + [8]), $2)
	if ( (*($2) & [1]) ){ goto $label$11 }
	CALL $58($5)
	if ( (*($3 + [336]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $11(*($2 + [8]))
	CALL $58($5)
	if ( ((*($3 + [336]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $11(*(($3 + [344])))
	$global$0 = ($3 + [400])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [400])
}

void .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$4 = *($1)
	$5 = $2
	$2 = ($5 + [-48])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($5 + [-12])
	CALL $70($3, $1)
	CALL db_update_i64(*($1 + [44]), (int_64)0, $2, [36])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $349 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [48])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$3 = ($4 + [52])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$3 = ($4 + [56])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [15]), $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	*(($4 + [60])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $348 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13837])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $347 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $346 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = *($5 + [4])
	$7 = *($6 + [144])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	$7 = *($5)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)4733526061789216768, $4, *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($7)
	
.LABEL $label$1
	$5 = *($0)
	$6 = *($5 + [4])
	$7 = *(($6 + [148]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$4 }
	$7 = *($5)
	*(($4 + [24])) = (int_64)0
	*(($4 + [16])) = (int_64)0
	*($4 + [8]) = (int_64)0
	*($4) = (int_64)0
	$7 = CALL db_idx256_find_primary(*($7), *($7 + [8]), (int_64)4733526061789216769, $4, [2], *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx256_remove($7)
	
.LABEL $label$3
	$7 = *($0)
	$5 = *($7 + [4])
	$0 = *(($5 + [152]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$6 }
	$0 = *($7)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4733526061789216770, $4, *($5))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($0)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

int_32 .FUNC $345 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [52]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [14932])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4858352806483984384)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [14878])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [14878])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $222(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $212 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [296]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14214])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14260])
	
.LABEL $label$2
	*($4 + [16]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	*($4 + [24]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$5 = *($1)
	$6 = *($2)
	if ( ((int_64)*(($6 + [24])) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [14713])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [16]) = $7(*($1 + [16]) - *($6 + [16])))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14761])
	$7 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14783])
	
.LABEL $label$5
	$2 = *($2)
	if ( ((int_64)*(($2 + [24])) == (int_64)*(($1 + [192]))) ){ goto $label$6 }
	CALL eosio_assert([0], [14713])
	
.LABEL $label$6
	$7 = (int_64)
	*($1 + [184]) = $7(*($1 + [184]) - *($2 + [16])))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [14761])
	$7 = *(($1 + [184]))
	
.LABEL $label$7
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [14783])
	
.LABEL $label$8
	*($1 + [200]) = ((int_64)*($1 + [200]) + (int_64)-1)
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [14311])
	
.LABEL $label$9
	$6 = (($4 + [16]) + [8])
	$8 = ($1 + [200])
	$2 = *($1 + [100])
	$9 = ( *(($1 + [104])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($9 + [253])
	$7 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [100])
	
.LOOP $label$10:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$10 }
	$10 = *($1 + [112])
	$10 = ( *(($1 + [116])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$2 = ($10 + $2)
	$7 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [112])
	
.LOOP $label$11:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$11 }
	if ( ($2 <= [513]) ){ goto $label$13 }
	$3 = CALL $2($2)
	goto $label$12 
	
.LABEL $label$13
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$12
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [32]) = $4
	*($4 + [72]) = $9
	*($4 + [76]) = $10
	*($4 + [104]) = $8
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [32])
	*($4 + [56]) = ($1 + [48])
	*($4 + [60]) = ($1 + [64])
	*($4 + [64]) = ($1 + [80])
	*($4 + [68]) = ($1 + [96])
	*($4 + [80]) = ($1 + [128])
	*($4 + [84]) = ($1 + [136])
	*($4 + [88]) = ($1 + [144])
	*($4 + [92]) = ($1 + [160])
	*($4 + [96]) = ($1 + [168])
	*($4 + [100]) = ($1 + [184])
	*($4 + [108]) = ($1 + [208])
	*($4 + [112]) = ($1 + [224])
	*($4 + [120]) = ($1 + [240])
	*($4 + [116]) = ($1 + [232])
	CALL $86(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [300]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$14 }
	CALL $4($3)
	
.LABEL $label$14
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*($4 + [40]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	if ( (CALL $1(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$16 }
	$3 = ($1 + [304])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$17 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934592, ($4 + [32]), $5)
	*($3) = $2
	
.LABEL $label$17
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$16
	*($4 + [40]) = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( (CALL $1($6, ($4 + [40]), [8]) == 0) ){ goto $label$18 }
	$1 = ($1 + [308])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607571210637934593, ($4 + [32]), $5)
	*($1) = $2
	
.LABEL $label$19
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$18
	$global$0 = ($4 + [128])
}

void .FUNC $343 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [13837])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $344(*($1), *($0 + [12]))
}

void .FUNC $342 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $178(*($1), *($0 + [12]))
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [13474])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13474])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $341 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[66]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($3 - $4) / (int_32)[66])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[65075263]) ){ goto $label$3 }
	$3 = [65075262]
	$2 = ((int_32)($2 - $4) / (int_32)[66])
	if ( ((uint_32)$2 > (uint_32)[32537630]) ){ goto $label$6 }
	$3 = ($2 << [1])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $9(((int_32)$3 * (int_32)[66]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	CALL memset($3, [0], [66])
	$3 = (*($0) + [66])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $45($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$3 * (int_32)[66]))
	$5 = ($2 + ((int_32)$5 * (int_32)[66]))
	$3 = $5
	
.LOOP $label$8:
	$3 = (CALL memset($3, [0], [66]) + [66])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$6 = ($2 + ((int_32)$6 * (int_32)[66]))
	$1 = *($0)
	$7 = ($0 + [4])
	$3 = (*($7) - $1)
	$2 = ($5 + ((int_32)((int_32)$3 / (int_32)[-66]) * (int_32)[66]))
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $11($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $340 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_32 $41
	int_32 $42
	int_32 $43
	int_32 $44
	int_32 $45
	int_32 $46
	int_32 $47
	int_32 $48
	int_32 $49
	int_32 $50
	int_32 $51
	int_32 $52
	int_32 $53
	$2 = ($global$0 - [272])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [13842])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = ((int_32)($8 - $3) / (int_32)[66])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $341($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ((int_32)$7 * (int_32)[66]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($2 + [76])
	$6 = ($2 + [80])
	$5 = ($2 + [88])
	$1 = ($2 + [84])
	$9 = ($2 + [92])
	$10 = ($2 + [96])
	$11 = ($2 + [100])
	$12 = ($2 + [104])
	$13 = ($2 + [108])
	$14 = ($2 + [112])
	$15 = ($2 + [116])
	$16 = ($2 + [120])
	$17 = ($2 + [124])
	$18 = ($2 + [128])
	$19 = ($2 + [132])
	$20 = ($2 + [136])
	$21 = ($2 + [140])
	$22 = ($2 + [144])
	$23 = ($2 + [148])
	$24 = ($2 + [152])
	$25 = ($2 + [156])
	$26 = ($2 + [164])
	$27 = ($2 + [160])
	$28 = ($2 + [168])
	$29 = ($2 + [172])
	$30 = ($2 + [176])
	$31 = ($2 + [180])
	$32 = ($2 + [184])
	$33 = ($2 + [188])
	$34 = ($2 + [192])
	$35 = ($2 + [196])
	$36 = ($2 + [200])
	$37 = ($2 + [204])
	$38 = ($2 + [208])
	$39 = ($2 + [212])
	$40 = ($2 + [216])
	$41 = ($2 + [220])
	$42 = ($2 + [224])
	$43 = ($2 + [228])
	$44 = ($2 + [232])
	$45 = ($2 + [240])
	$46 = ($2 + [236])
	$47 = ($2 + [244])
	$48 = ($2 + [248])
	$49 = ($2 + [252])
	$50 = ($2 + [256])
	$51 = ($2 + [260])
	$52 = ($2 + [264])
	$53 = ($2 + [268])
	
.LOOP $label$7:
	*($2) = $0
	*($2 + [8]) = $3
	*((($2 + [8]) + [8])) = ($3 + [2])
	*((($2 + [8]) + [12])) = ($3 + [3])
	*((($2 + [8]) + [16])) = ($3 + [4])
	*((($2 + [8]) + [20])) = ($3 + [5])
	*((($2 + [8]) + [24])) = ($3 + [6])
	*((($2 + [8]) + [28])) = ($3 + [7])
	*((($2 + [8]) + [32])) = ($3 + [8])
	*((($2 + [8]) + [36])) = ($3 + [9])
	*((($2 + [8]) + [40])) = ($3 + [10])
	*((($2 + [8]) + [44])) = ($3 + [11])
	*((($2 + [8]) + [48])) = ($3 + [12])
	*((($2 + [8]) + [52])) = ($3 + [13])
	*((($2 + [8]) + [56])) = ($3 + [14])
	*((($2 + [8]) + [60])) = ($3 + [15])
	*((($2 + [8]) + [64])) = ($3 + [16])
	*($7) = ($3 + [17])
	*($6) = ($3 + [18])
	*($2 + [12]) = ($3 + [1])
	*($5) = ($3 + [20])
	*($1) = ($3 + [19])
	*($9) = ($3 + [21])
	*($10) = ($3 + [22])
	*($11) = ($3 + [23])
	*($12) = ($3 + [24])
	*($13) = ($3 + [25])
	*($14) = ($3 + [26])
	*($15) = ($3 + [27])
	*($16) = ($3 + [28])
	*($17) = ($3 + [29])
	*($18) = ($3 + [30])
	*($19) = ($3 + [31])
	*($20) = ($3 + [32])
	*($21) = ($3 + [33])
	*($22) = ($3 + [34])
	*($23) = ($3 + [35])
	*($24) = ($3 + [36])
	*($25) = ($3 + [37])
	*($26) = ($3 + [39])
	*($27) = ($3 + [38])
	*($28) = ($3 + [40])
	*($29) = ($3 + [41])
	*($30) = ($3 + [42])
	*($31) = ($3 + [43])
	*($32) = ($3 + [44])
	*($33) = ($3 + [45])
	*($34) = ($3 + [46])
	*($35) = ($3 + [47])
	*($36) = ($3 + [48])
	*($37) = ($3 + [49])
	*($38) = ($3 + [50])
	*($39) = ($3 + [51])
	*($40) = ($3 + [52])
	*($41) = ($3 + [53])
	*($42) = ($3 + [54])
	*($43) = ($3 + [55])
	*($44) = ($3 + [56])
	*($45) = ($3 + [58])
	*($46) = ($3 + [57])
	*($47) = ($3 + [59])
	*($48) = ($3 + [60])
	*($49) = ($3 + [61])
	*($50) = ($3 + [62])
	*($51) = ($3 + [63])
	*($52) = ($3 + [64])
	*($53) = ($3 + [65])
	CALL $312(($2 + [8]), $2)
	$3 = ($3 + [66])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [272])
	return $0
}

int_32 .FUNC $38 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0)
	$5 = ($4 & [1])
	if ( $5 ){ goto $label$5 }
	$4 = uint_32($4 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = [10]
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$6
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$10 }
	CALL $30($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	goto $label$9 
	
.LABEL $label$10
	if ( ($3 == 0) ){ goto $label$9 }
	if ( $5 ){ goto $label$8 }
	$5 = ($0 + [1])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$7
	CALL memmove($6, $2, $3)
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL memmove(($6 + $3), $6, $1)
	CALL memmove($6, ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) ), $3)
	
.LABEL $label$1
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($3 << [1])
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$11
	*($0 + [4]) = $3
	*(($5 + $3)) = [0]
	(unreachable)
	return $0
}

void .FUNC $283 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	*($3 + [360]) = ($2 + $4)
	*($3 + [344]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [356]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $257(($3 + [352]), ($3 + [328]))
	*($3 + [320]) = [0]
	*($3 + [312]) = (int_64)0
	CALL $257(($3 + [352]), ($3 + [312]))
	$2 = *((($3 + [352]) + [8]))
	*((($3 + [48]) + [8])) = $2
	*(($3 + [8])) = $2
	$5 = *($3 + [352])
	*($3) = $5
	*($3 + [48]) = $5
	$4 = CALL $27(($3 + [16]), ($3 + [312]))
	$2 = CALL $27(($3 + [32]), ($3 + [328]))
	$6 = CALL $56(($3 + [64]), $0, $1, $3)
	CALL $87($6, *($3 + [344]), $2, $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*($4 + [8]))
	
.LABEL $label$6
	if ( ((*($2) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$7
	CALL $58($6)
	if ( (*($3 + [312]) & [1]) ){ goto $label$10 }
	if ( (*($3 + [328]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $11(*(($3 + [320])))
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11(*(($3 + [336])))
	$global$0 = ($3 + [368])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [368])
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$3 = ($2 & [1])
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = ((*($0) & [-2]) + [-1])
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = [10]
	$2 = uint_32($2 >> [1])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $34($0, $4, [1], $4, $4, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($2 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($2 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $2)) + [1]) = [0]
	*($0) = $1
}

int_32 .FUNC $37 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $30($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $9($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $11($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $17($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $30($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $17($1)
	$3 = [10]
	$4 = *($0)
	$5 = ($4 & [1])
	if ( ($5 == 0) ){ goto $label$1 }
	$3 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$1
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$6 }
	if ( $5 ){ goto $label$5 }
	$5 = uint_32($4 >> [1])
	CALL $30($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$6
	if ( $5 ){ goto $label$4 }
	$3 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = *($0 + [4])
	CALL $30($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$4
	$3 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($3, $1, $2)
	
.LABEL $label$2
	*(($3 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	return $0
}

void .FUNC $280 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [324]) = $2
	*($3 + [320]) = $2
	*($3 + [328]) = ($2 + $4)
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [324])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	*($3 + [324]) = ($2 + [8])
	*($3 + [304]) = [0]
	*($3 + [296]) = (int_64)0
	CALL $257(($3 + [320]), ($3 + [296]))
	$2 = *($3 + [324])
	$4 = (($3 + [320]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [324])
	
.LABEL $label$6
	CALL memcpy(($3 + [48]), $2, [1])
	*($3 + [324]) = (*($3 + [324]) + [1])
	$5 = *($3 + [48])
	$2 = *($4)
	*((($3 + [32]) + [8])) = $2
	*(($3 + [8])) = $2
	$6 = *($3 + [320])
	*($3) = $6
	*($3 + [32]) = $6
	$2 = CALL $27(($3 + [16]), ($3 + [296]))
	$4 = CALL $56(($3 + [48]), $0, $1, $3)
	CALL $72($4, *($3 + [312]), $2, ((int_32)$5 != (int_32)[0]))
	if ( (*($2) & [1]) ){ goto $label$9 }
	CALL $58($4)
	if ( (*($3 + [296]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $11(*($2 + [8]))
	CALL $58($4)
	if ( ((*($3 + [296]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11(*(($3 + [304])))
	$global$0 = ($3 + [336])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [336])
}

void .FUNC $30 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $9($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $11($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $9(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $11($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $281 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	float_64 $18
	$2 = ($global$0 - [688])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [676]) = $2
	*($3 + [672]) = $2
	*($3 + [680]) = ($2 + $4)
	*($3 + [664]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$5
	CALL memcpy(($3 + [664]), $2, [8])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	*($3 + [264]) = (int_64)0
	$4 = (($3 + [672]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$6
	CALL memcpy(($3 + [264]), $2, [8])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	$5 = *($3 + [264])
	*($3 + [264]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$7
	CALL memcpy(($3 + [264]), $2, [8])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	$6 = *($3 + [264])
	*($3 + [656]) = (int_64)0
	*($3 + [648]) = (int_64)0
	$4 = (($3 + [672]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$8
	CALL memcpy(($3 + [648]), $2, [8])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	*($3 + [264]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$9
	CALL memcpy(($3 + [264]), $2, [8])
	*((($3 + [648]) + [8])) = *($3 + [264])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	*($3 + [640]) = (int_64)0
	*($3 + [632]) = (int_64)0
	$4 = (($3 + [672]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$10
	CALL memcpy(($3 + [632]), $2, [8])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	*($3 + [264]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$11
	CALL memcpy(($3 + [264]), $2, [8])
	*((($3 + [632]) + [8])) = *($3 + [264])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	*($3 + [624]) = (int_64)0
	*($3 + [616]) = (int_64)0
	$4 = (($3 + [672]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$12
	CALL memcpy(($3 + [616]), $2, [8])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	*($3 + [264]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$13
	CALL memcpy(($3 + [264]), $2, [8])
	*((($3 + [616]) + [8])) = *($3 + [264])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	*($3 + [608]) = (int_64)0
	*($3 + [600]) = (int_64)0
	$4 = (($3 + [672]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$14
	CALL memcpy(($3 + [600]), $2, [8])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	*($3 + [264]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$15
	CALL memcpy(($3 + [264]), $2, [8])
	*((($3 + [600]) + [8])) = *($3 + [264])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	$4 = (($3 + [672]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[3]) ){ goto $label$16 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$16
	CALL memcpy(($3 + [596]), $2, [4])
	*($3 + [676]) = (*($3 + [676]) + [4])
	*($3 + [592]) = [0]
	*($3 + [584]) = (int_64)0
	CALL $257(($3 + [672]), ($3 + [584]))
	*($3 + [576]) = [0]
	*($3 + [568]) = (int_64)0
	CALL $257(($3 + [672]), ($3 + [568]))
	*($3 + [560]) = (int_64)0
	$2 = *($3 + [676])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$17
	CALL memcpy(($3 + [560]), $2, [8])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	*($3 + [552]) = (int_64)0
	$4 = (($3 + [672]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$18
	CALL memcpy(($3 + [552]), $2, [8])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	*($3 + [544]) = (int_64)0
	*($3 + [536]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$19
	CALL memcpy(($3 + [536]), $2, [8])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	*($3 + [264]) = (int_64)0
	$4 = (($3 + [672]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$20
	CALL memcpy(($3 + [264]), $2, [8])
	*((($3 + [536]) + [8])) = *($3 + [264])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$21
	CALL memcpy(($3 + [528]), $2, [8])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	*($3 + [520]) = (int_64)0
	*($3 + [512]) = (int_64)0
	$4 = (($3 + [672]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$22
	CALL memcpy(($3 + [512]), $2, [8])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	*($3 + [264]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$23
	CALL memcpy(($3 + [264]), $2, [8])
	*(($7 = (($3 + [512]) + [8]))) = *($3 + [264])
	$2 = (*($3 + [676]) + [8])
	*($3 + [676]) = $2
	$4 = (($3 + [672]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$24 }
	CALL eosio_assert([0], [13837])
	$2 = *($3 + [676])
	
.LABEL $label$24
	CALL memcpy(($3 + [264]), $2, [1])
	*($3 + [676]) = (*($3 + [676]) + [1])
	$8 = *($3 + [264])
	$2 = *($4)
	*((($3 + [248]) + [8])) = $2
	*((($3 + [104]) + [8])) = $2
	$9 = *($3 + [672])
	*($3 + [104]) = $9
	*($3 + [248]) = $9
	$10 = CALL $56(($3 + [264]), $0, $1, ($3 + [104]))
	*(($11 = (($3 + [232]) + [8]))) = *((($3 + [648]) + [8]))
	*(($12 = (($3 + [216]) + [8]))) = *((($3 + [632]) + [8]))
	*(($13 = (($3 + [200]) + [8]))) = *((($3 + [616]) + [8]))
	*(($14 = (($3 + [184]) + [8]))) = *((($3 + [600]) + [8]))
	*($3 + [232]) = *($3 + [648])
	*($3 + [216]) = *($3 + [632])
	*($3 + [200]) = *($3 + [616])
	*($3 + [184]) = *($3 + [600])
	$0 = *($3 + [664])
	$15 = *($3 + [596])
	$2 = CALL $27(($3 + [168]), ($3 + [584]))
	$4 = CALL $27(($3 + [152]), ($3 + [568]))
	*(($16 = (($3 + [136]) + [8]))) = *((($3 + [536]) + [8]))
	*(($17 = (($3 + [120]) + [8]))) = *($7)
	*((($3 + [88]) + [8])) = *($11)
	*((($3 + [72]) + [8])) = *($12)
	*($3 + [136]) = *($3 + [536])
	*($3 + [120]) = *($3 + [512])
	*($3 + [88]) = *($3 + [232])
	*($3 + [72]) = *($3 + [216])
	$1 = *($3 + [552])
	$9 = *($3 + [560])
	$18 = *($3 + [528])
	*((($3 + [56]) + [8])) = *($13)
	*((($3 + [40]) + [8])) = *($14)
	*((($3 + [24]) + [8])) = *($16)
	*((($3 + [8]) + [8])) = *($17)
	*($3 + [56]) = *($3 + [200])
	*($3 + [40]) = *($3 + [184])
	*($3 + [24]) = *($3 + [136])
	*($3 + [8]) = *($3 + [120])
	CALL $76($10, $0, $5, $6, ($3 + [88]), ($3 + [72]), ($3 + [56]), ($3 + [40]), $15, $2, $4, $9, $1, ($3 + [24]), $18, ($3 + [8]), ((int_32)$8 != (int_32)[0]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$25 }
	CALL $11(*($4 + [8]))
	
.LABEL $label$25
	if ( ((*($2) & [1]) == 0) ){ goto $label$26 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$26
	CALL $58($10)
	if ( (*($3 + [568]) & [1]) ){ goto $label$29 }
	if ( (*($3 + [584]) & [1]) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL $11(*(($3 + [576])))
	if ( ((*($3 + [584]) & [1]) == 0) ){ goto $label$27 }
	
.LABEL $label$28
	CALL $11(*(($3 + [592])))
	$global$0 = ($3 + [688])
	return 
	
.LABEL $label$27
	$global$0 = ($3 + [688])
}