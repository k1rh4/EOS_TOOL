(data (i32.const 4) "P\91\00\00")
(data (i32.const 12) "\00/hY")
(data (i32.const 16) "\80Q\01\00")
(data (i32.const 20) "\10\0e\00\00")
(data (i32.const 24) "<\00\00\00")
(data (i32.const 32) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 96) "blacklist rejected\00")
(data (i32.const 128) "error reading iterator\00")
(data (i32.const 160) "read\00")
(data (i32.const 176) "mykeyreferal\00")
(data (i32.const 192) "could not find player\00")
(data (i32.const 224) "can not find rule\00")
(data (i32.const 256) "full item inventory\00")
(data (i32.const 288) "cannot create objects in table of another contract\00")
(data (i32.const 352) "cannot pass end iterator to modify\00")
(data (i32.const 400) "object passed to modify is not in multi_index\00")
(data (i32.const 448) "cannot modify objects in table of another contract\00")
(data (i32.const 512) "updater cannot change primary key when modifying an object\00")
(data (i32.const 576) "write\00")
(data (i32.const 592) "get\00")
(data (i32.const 608) "could not find actprop\00")
(data (i32.const 640) "not enough activity prop\00")
(data (i32.const 672) "can not find activity item\00")
(data (i32.const 704) "can not find actprop rule\00")
(data (i32.const 736) "invalid fragment\00")
(data (i32.const 768) "invalid target\00")
(data (i32.const 784) "not enough fragment\00")
(data (i32.const 816) "EOS Dynasty Chest Drop\00")
(data (i32.const 848) "\01\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00")
(data (i32.const 880) "invalid chest\00")
(data (i32.const 896) "invalid chest count\00")
(data (i32.const 928) "not enough chest\00")
(data (i32.const 960) "cannot increment end iterator\00")
(data (i32.const 992) "d\00\00\00\8c\00\00\00\a0\00\00\00\c8\00\00\00,\01\00\00\90\01\00\00\f4\01\00\00X\02\00\00\bc\02\00\00 \03\00\00\84\03\00\00\e8\03\00\00")
(data (i32.const 1040) "\05\00\00\00\n\00\00\00\14\00\00\00\1e\00\00\00(\00\00\002\00\00\00<\00\00\00F\00\00\00P\00\00\00Z\00\00\00d\00\00\00")
(data (i32.const 1088) "eossanguotkt\00")
(data (i32.const 1104) "issue\00")
(data (i32.const 1120) "invalid symbol name\00")
(data (i32.const 1152) "active\00")
(data (i32.const 1168) "eosiotptoken\00")
(data (i32.const 1184) "transfer\00")
(data (i32.const 1200) "mkstaketoken\00")
(data (i32.const 1216) "lichangtoken\00")
(data (i32.const 1232) "newdexissuer\00")
(data (i32.const 1248) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1312) "the number of props reached the limit\00")
(data (i32.const 1360) "check item inventory before open chest\00")
(data (i32.const 1424) ":\00")
(data (i32.const 1440) "0123456789abcdef\00")
(data (i32.const 1472) "wrong op id\00")
(data (i32.const 1488) "material\00")
(data (i32.const 1500) "\00\00\00\00\00\00\00\005\00\00\00")
(data (i32.const 1520) "dividend\00")
(data (i32.const 1536) "hero\00")
(data (i32.const 1552) "mw\00")
(data (i32.const 1568) "item\00")
(data (i32.const 1584) "mat\00")
(data (i32.const 1600) "bmat\00")
(data (i32.const 1616) "ivn\00")
(data (i32.const 1632) "giftpack\00")
(data (i32.const 1648) "compose\00")
(data (i32.const 1664) "eosdynasty\00")
(data (i32.const 1680) "material-sale\00")
(data (i32.const 1696) "shop\00")
(data (i32.const 1712) "auction\00")
(data (i32.const 1728) "onerror\00")
(data (i32.const 1744) "eosio\00")
(data (i32.const 1760) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 1824) "eosio.token\00")
(data (i32.const 1840) "Invalid token transfer\00")
(data (i32.const 1872) "Quantity must be positive\00")
(data (i32.const 1904) "eossanguogrp\00")
(data (i32.const 1920) "eossanguocmt\00")
(data (i32.const 1936) "sign up first!\00")
(data (i32.const 1952) "only accepts KEY for deposits\00")
(data (i32.const 1984) "eossgtktshop\00")
(data (i32.const 2000) "EOS Dynasty Shop Consumption\00")
(data (i32.const 2032) "invalid transfer\00")
(data (i32.const 2064) "can not find goods\00")
(data (i32.const 2096) "invalid purchase count\00")
(data (i32.const 2128) "not enough items\00")
(data (i32.const 2160) "transfer token not accept\00")
(data (i32.const 2192) "item price does not match\00")
(data (i32.const 2224) "cannot pass end iterator to erase\00")
(data (i32.const 2272) "object passed to erase is not in multi_index\00")
(data (i32.const 2320) "cannot erase objects in table of another contract\00")
(data (i32.const 2384) "attempt to remove object that was not in multi_index\00")
(data (i32.const 2448) "invalid purchase param\00")
(data (i32.const 2480) "only accepts TKT for deposits\00")
(data (i32.const 2512) "game is paused\00")
(data (i32.const 2528) "TKT Shop Consumption\00")
(data (i32.const 2560) "invalid bid parameter\00")
(data (i32.const 2592) "need three heroes\00")
(data (i32.const 2624) "can not found player\00")
(data (i32.const 2656) "could not find mat\00")
(data (i32.const 2688) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 2752) "price not match\00")
(data (i32.const 2768) "insufficient inventory\00")
(data (i32.const 2800) "next primary key in table is at autoincrement limit\00")
(data (i32.const 2864) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 2928) "cannot decrement iterator at beginning of table\00")
(data (i32.const 2976) "gift pack not found\00")
(data (i32.const 3008) "gift pack sold out\00")
(data (i32.const 3040) "not in purchase period\00")
(data (i32.const 3072) "already have this gift pack\00")
(data (i32.const 3104) "price mismatch\00")
(data (i32.const 3120) "military rank is too low\00")
(data (i32.const 3152) "EOS Dynasty Gift Pack Bonus!\00")
(data (i32.const 3184) "TPT\00")
(data (i32.const 3200) "unknown token type\00")
(data (i32.const 3232) "can not find auction item\00")
(data (i32.const 3264) "current bidder cannot bid\00")
(data (i32.const 3296) "it is not in the auction period\00")
(data (i32.const 3328) "can not find prop rule\00")
(data (i32.const 3360) "attempt to subtract asset with different symbol\00")
(data (i32.const 3408) "subtraction underflow\00")
(data (i32.const 3440) "subtraction overflow\00")
(data (i32.const 3472) "auction refund\00")
(data (i32.const 3488) "auction bonus\00")
(data (i32.const 3504) "attempt to add asset with different symbol\00")
(data (i32.const 3552) "addition underflow\00")
(data (i32.const 3584) "addition overflow\00")
(data (i32.const 3616) "only accept TKT\00")
(data (i32.const 3632) "the price has been bidden\00")
(data (i32.const 3664) "eossanguodiv\00")
(data (i32.const 3680) "eossanguobns\00")
(data (i32.const 3696) "only accepts EOS for deposits\00")
(data (i32.const 3728) "invalid inventory\00")
(data (i32.const 3760) "can not exceed max size\00")
(data (i32.const 3792) "no price rule\00")
(data (i32.const 3808) "ivn price does not match\00")
(data (i32.const 3840) "wrong batch mat number\00")
(data (i32.const 3872) "can not found player info\00")
(data (i32.const 3904) "full inventory\00")
(data (i32.const 3920) "material price does not match\00")
(data (i32.const 3952) "it\'s your mat\00")
(data (i32.const 3968) "seller not matching\00")
(data (i32.const 4000) "multiplication overflow\00")
(data (i32.const 4032) "multiplication underflow\00")
(data (i32.const 4064) "divide by zero\00")
(data (i32.const 4080) "signed division overflow\00")
(data (i32.const 4112) "eosdynasty:material-batch-sale:\00")
(data (i32.const 4144) "@\10\00\00")
(data (i32.const 4160) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 4208) "could not found material\00")
(data (i32.const 4240) "eosdynasty:material-sale:\00")
(data (i32.const 4272) "there is no user admin value\00")
(data (i32.const 4304) "could not find item\00")
(data (i32.const 4336) "it\'s your item\00")
(data (i32.const 4352) "eosdynasty:item-sale:\00")
(data (i32.const 4384) "could not found item\00")
(data (i32.const 4416) "could not find goods rule\00")
(data (i32.const 4448) "mw price does not match\00")
(data (i32.const 4480) "TKT airdrop!\00")
(data (i32.const 4496) "EOS Dynasty referral reward!\00")
(data (i32.const 4528) "invalid knight type\00")
(data (i32.const 4560) "no knight rule\00")
(data (i32.const 4576) "you have already same knight\00")
(data (i32.const 4608) "could not find price rule\00")
(data (i32.const 4640) "knight price does not match\00")
(data (i32.const 4672) "EOS Dynasty dividend pool\00")
(data (i32.const 4704) "EOS Dynasty BOSS leaderboard dividend pool\00")
(data (i32.const 4752) "eosio.bpay\00")
(data (i32.const 4768) "eosio.msig\00")
(data (i32.const 4784) "eosio.names\00")
(data (i32.const 4800) "eosio.ram\00")
(data (i32.const 4816) "eosio.ramfee\00")
(data (i32.const 4832) "eosio.saving\00")
(data (i32.const 4848) "eosio.stake\00")
(data (i32.const 4864) "eosio.vpay\00")
(data (i32.const 4880) "there is no admin value\00")
(data (i32.const 4912) "prop are using\00")
(data (i32.const 4928) "exceed maximum personal sign length\00")
(data (i32.const 4976) "exceed maximum link length\00")
(data (i32.const 5008) "can not find prop\00")
(data (i32.const 5040) "not enough powder\00")
(data (i32.const 5072) "invalid claim type\00")
(data (i32.const 5104) "no dividend state\00")
(data (i32.const 5136) "no dividend record\00")
(data (i32.const 5168) "not enough to claim\00")
(data (i32.const 5200) "EOS Dynasty Dividend Reward, \00")
(data (i32.const 5232) "eossanguo.one\00")
(data (i32.const 5248) "no unstake record\00")
(data (i32.const 5280) "unstake time not reached\00")
(data (i32.const 5312) "no stake stats data\00")
(data (i32.const 5344) "stake paused\00")
(data (i32.const 5360) "invalid token\00")
(data (i32.const 5376) "must unstake positive quantity\00")
(data (i32.const 5408) "no stake record\00")
(data (i32.const 5424) "not enough funds to unstake\00")
(data (i32.const 5456) "defrefundtkt\00")
(data (i32.const 5472) "eossanguosvr\00")
(data (i32.const 5488) "updhonor3\00")
(data (i32.const 5504) "only accepts TKT\00")
(data (i32.const 5536) "can not found hero\00")
(data (i32.const 5568) "must stake positive quantity\00")
(data (i32.const 5600) "no balance object found\00")
(data (i32.const 5632) "not enough funds to stake\00")
(data (i32.const 5664) "only accepts TKT for staking\00")
(data (i32.const 5696) "unreveal operation\00")
(data (i32.const 5728) "eossanguo_mexpreturn\00")
(data (i32.const 5760) "could not find pet expedition data\00")
(data (i32.const 5808) "could not find pet rule\00")
(data (i32.const 5840) "can not found pet exp data\00")
(data (i32.const 5872) "can not found pet data\00")
(data (i32.const 5904) "\da\t\8c\c4f\d1\e0?\da\t\8c\c4f\d1\d0?\da\t\8c\c4f\d1\c0?\da\t\8c\c4f\d1\b0?\00q\85\c4f\d1\80?\cd<\8e\c4f\d1p?\cd<\8e\c4f\d1`?\ec)\80\c4f\d1 ?9l\8b\c4f\d1\10?\c4+\89\c4f\d1\e0>\98^\87\c4f\d1\a0>")
(data (i32.const 6000) "invalid material drop\00")
(data (i32.const 6032) "already return\00")
(data (i32.const 6048) "too early return\00")
(data (i32.const 6080) "wrong number of actions in transaction\00")
(data (i32.const 6128) "mykeymanager\00")
(data (i32.const 6144) "mykeylogica1\00")
(data (i32.const 6160) "wrong action recipient\00")
(data (i32.const 6192) "checksum failure\00")
(data (i32.const 6224) "no pets\00")
(data (i32.const 6240) "already fight with knight\00")
(data (i32.const 6272) "can not found pet\00")
(data (i32.const 6304) "exceed max slots\00")
(data (i32.const 6336) "already in expedition\00")
(data (i32.const 6368) "can not found knight\00")
(data (i32.const 6400) "updbschgattr\00")
(data (i32.const 6416) "invalid stat type\00")
(data (i32.const 6448) "could not find rule\00")
(data (i32.const 6480) "could not find level rule\00")
(data (i32.const 6512) "can not found set rule\00")
(data (i32.const 6544) "the pet is on expedition or resting\00")
(data (i32.const 6592) "can not pet\00")
(data (i32.const 6608) "could not find pet\00")
(data (i32.const 6640) "could not find pet level rule\00")
(data (i32.const 6672) "not enough pet count\00")
(data (i32.const 6704) "already max up\00")
(data (i32.const 6720) "hire knight first!\00")
(data (i32.const 6752) "eossanguo_mount_adopt\00")
(data (i32.const 6784) "invalid gacha type\00")
(data (i32.const 6816) "invalid count\00")
(data (i32.const 6832) "\00\c8\00\00\00\c8\00\00\00\c8\00\00\00\c8\00\00\00\19\00\00\00\19\00\00\00\19\00\00\00\19\00\00 \03\00\00 \03\00\00 \03\00\00 \03\00\00(\00\00\00(\00\00\00(\00\00\00(\00\00\00\04\00\00\00\04\00\00\00\04\00\00\00\04\00\00\00")
(data (i32.const 6912) "too short to sell\00")
(data (i32.const 6944) "can not found material\00")
(data (i32.const 6976) "already on sale\00")
(data (i32.const 6992) "can not found material grade\00")
(data (i32.const 7024) "sell limit\00")
(data (i32.const 7040) "could not find material rule\00")
(data (i32.const 7072) "invalid price\00")
(data (i32.const 7088) "must price positive quantity\00")
(data (i32.const 7120) "too small price\00")
(data (i32.const 7136) "too big price\00")
(data (i32.const 7152) "only EOS token allowed\00")
(data (i32.const 7184) "can not found item\00")
(data (i32.const 7216) "equipped item can not be sold\00")
(data (i32.const 7248) "can not found item grade\00")
(data (i32.const 7280) "eossanguo_lvupitem2\00")
(data (i32.const 7312) "item is on sale\00")
(data (i32.const 7328) "can not found next level rule\00")
(data (i32.const 7360) "insufficient item exp\00")
(data (i32.const 7392) "no item rule\00")
(data (i32.const 7408) "item type does not match\00")
(data (i32.const 7440) "item grade does not match\00")
(data (i32.const 7472) "eossanguo_lvupitem\00")
(data (i32.const 7504) "already full exp\00")
(data (i32.const 7536) "invalid ingredient\00")
(data (i32.const 7568) "can not remove item on sale\00")
(data (i32.const 7600) "can not remove equipped item\00")
(data (i32.const 7632) "can not found rule\00")
(data (i32.const 7664) "it\'s invalid knight to attach\00")
(data (i32.const 7696) "could not found knight\00")
(data (i32.const 7728) "not enough knight level to equip item\00")
(data (i32.const 7776) "could not find target item rule\00")
(data (i32.const 7808) "eossanguo_makeitem\00")
(data (i32.const 7840) "could not find recipe\00")
(data (i32.const 7872) "invalid recipe material count\00")
(data (i32.const 7904) "eossanguo_combat\00")
(data (i32.const 7936) "combat\00")
(data (i32.const 7952) "no stage rule\00")
(data (i32.const 7968) "updhonor4\00")
(data (i32.const 7984) "no one exceed stage minmium level\00")
(data (i32.const 8032) "already max level\00")
(data (i32.const 8064) "there is no level rule\00")
(data (i32.const 8096) "Insufficient exp\00")
(data (i32.const 8128) "Insufficient powder\00")
(data (i32.const 8160) "already registered\00")
(data (i32.const 8192) "can not found powder rule\00")
(data (i32.const 8224) "no admin values yet\00")
(data (i32.const 8256) "wrong recipient\00")
(data (i32.const 8272) "one or more knight required.\00")
(data (i32.const 8304) "one or more knight required for the recipient.\00")
(data (i32.const 8352) "you have already received a referral bonus.\00")
(data (i32.const 8400) "you received already maximum referral bonus\00")
(data (i32.const 8448) "recipient received already maximum referral bonus\00")
(data (i32.const 8512) "sanguoserver\00")
(data (i32.const 8528) "operation doesn\'t exist\00")
(data (i32.const 8560) "player not match\00")
(data (i32.const 8592) "invalid operation type\00")
(data (i32.const 8624) "sign key doesn\'t exist\00")
(data (i32.const 8656) "\n\00")
(data (i32.const 8672) "invalid operation id\00")
(data (i32.const 8704) "gift pack not free\00")
(data (i32.const 8736) "sanguo\00")
(data (i32.const 8752) "already obtained\00")
(data (i32.const 8784) "do not have exp card\00")
(data (i32.const 8816) "expcard still valid\00")
(data (i32.const 8848) "level must max up\00")
(data (i32.const 8880) "only master and epic mount envolves\00")
(data (i32.const 8928) "can not exceed ticket limit\00")
(data (i32.const 8960) "invalid mat count\00")
(data (i32.const 8992) "it has a invalid grade material\00")
(data (i32.const 9024) "can not use on sale material\00")
(data (i32.const 9056) "invalid material\00")
(data (i32.const 9088) "svrmkbstk2\00")
(data (i32.const 9104) "EOS Dynasty mat decompose\00")
(data (i32.const 9136) "eossanguo_openchest\00")
(data (i32.const 9168) "do not have skin\00")
(data (i32.const 9200) "no skin wared\00")
(data (i32.const 9216) "already wared this skin\00")
(data (i32.const 9248) "dividend not started\00")
(data (i32.const 9280) "no stake state data\00")
(data (i32.const 9312) "total stake error\00")
(data (i32.const 9344) "no dividend pool\00")
(data (i32.const 9376) "already start dividend\00")
(data (i32.const 9408) "no quest exist\00")
(data (i32.const 9424) "incorrect quest id\00")
(data (i32.const 9456) "it is not in the quest period\00")
(data (i32.const 9488) "incorrect no\00")
(data (i32.const 9504) "quest is done!\00")
(data (i32.const 9520) "incorrect item code\00")
(data (i32.const 9552) "incorrect item level\00")
(data (i32.const 9584) "incorrect item score\00")
(data (i32.const 9616) "can not exceed submit limit\00")
(data (i32.const 9648) "too short to get rebirth\00")
(data (i32.const 18080) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 18176) "%d\00")
(data (i32.const 18192) "%lu\00")
(data (i32.const 18208) "%llu\00")
(data (i32.const 18224) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 18240) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 18256) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(data (i32.const 18272) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 18736) "0123456789ABCDEF")
(data (i32.const 18752) "-+   0X0x\00")
(data (i32.const 18768) "(null)\00")
(data (i32.const 18784) "-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 18816) "inf\00")
(data (i32.const 18832) "INF\00")
(data (i32.const 18848) "nan\00")
(data (i32.const 18864) "NAN\00")
(data (i32.const 18880) ".\00")
(data (i32.const 18896) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 18992) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(import "env" "__addtf3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__eqtf2" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "__extenddftf2" (func $fimport$2 (param i32 f64)))
(import "env" "__fixtfsi" (func $fimport$3 (param i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$4 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$5 (param i32 i32)))
(import "env" "__floatunsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__multi3" (func $fimport$8 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__unordtf2" (func $fimport$11 (param i64 i64 i64 i64) (result i32)))
(import "env" "abort" (func $fimport$12))
(import "env" "action_data_size" (func $fimport$13 (result i32)))
(import "env" "assert_recover_key" (func $fimport$14 (param i32 i32 i32 i32 i32)))
(import "env" "cancel_deferred" (func $fimport$15 (param i32) (result i32)))
(import "env" "current_receiver" (func $fimport$16 (result i64)))
(import "env" "current_time" (func $fimport$17 (result i64)))
(import "env" "db_end_i64" (func $fimport$18 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$21 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$22 (param i32)))
(import "env" "db_idx64_store" (func $fimport$23 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$24 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$25 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$26 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$27 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$28 (param i32)))
(import "env" "db_store_i64" (func $fimport$29 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$30 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$31 (param i32 i32)))
(import "env" "memcpy" (func $fimport$32 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$33 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$34 (param i32 i32 i32) (result i32)))
(import "env" "prints" (func $fimport$35 (param i32)))
(import "env" "prints_l" (func $fimport$36 (param i32 i32)))
(import "env" "printui" (func $fimport$37 (param i64)))
(import "env" "read_action_data" (func $fimport$38 (param i32 i32) (result i32)))
(import "env" "read_transaction" (func $fimport$39 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$40 (param i64)))
(import "env" "require_auth2" (func $fimport$41 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$42 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$43 (param i32 i32)))
(import "env" "sha1" (func $fimport$44 (param i32 i32 i32)))
(import "env" "sha256" (func $fimport$45 (param i32 i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN13admin_control18calculate_trx_hashEPci" (func $5))
(export "_ZN13admin_control15check_blacklistEN5eosio4nameE" (func $6))
(export "_ZN13admin_control12is_blacklistEN5eosio4nameE" (func $9))
(export "_ZN13admin_control16special_referralEN5eosio4nameE" (func $10))
(export "_ZN16activity_control11add_actpropEN5eosio4nameEii" (func $11))
(export "_ZN16activity_control14remove_actpropEN5eosio4nameEmm" (func $26))
(export "_ZN16activity_control8get_propEN5eosio4nameEm" (func $28))
(export "_ZN16activity_control13get_prop_ruleEm" (func $29))
(export "_ZN16activity_control13add_chestdropEN5eosio4nameERKNSt3__16vectorI12chestdroprowNS2_9allocatorIS4_EEEE" (func $31))
(export "_ZN16activity_control13jointfragmentEN5eosio4nameEm" (func $41))
(export "_ZN16activity_control14chestdrop_memoEv" (func $53))
(export "_ZN16activity_control12random_candyERNSt3__13mapIymNS0_4lessIyEENS0_9allocatorINS0_4pairIKymEEEEEERNS0_6vectorINS5_IiiEENS4_ISC_EEEER10random_valiPm" (func $54))
(export "_ZN16activity_control12random_candyERNSt3__13mapIymNS0_4lessIyEENS0_9allocatorINS0_4pairIKymEEEEEERNS0_6vectorINS5_IiiEENS4_ISC_EEEER10random_valRiSI_" (func $55))
(export "_ZN16activity_control9get_candyERNSt3__13mapIymNS0_4lessIyEENS0_9allocatorINS0_4pairIKymEEEEEEii" (func $56))
(export "_ZN16activity_control19do_reveal_openchestEbN5eosio4nameEttm" (func $57))
(export "_ZN16activity_control10topenchestEN5eosio4nameEttNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $90))
(export "_ZN16activity_control10ropenchestEN5eosio4nameEttm" (func $106))
(export "apply" (func $107))
(export "malloc" (func $862))
(export "free" (func $865))
(export "_ZNSt3__19to_stringEi" (func $878))
(export "_ZNSt3__19to_stringEm" (func $880))
(export "_ZNSt3__19to_stringEy" (func $881))
(export "pow" (func $885))
(export "sqrt" (func $886))
(export "fabs" (func $887))
(export "scalbn" (func $888))
(export "snprintf" (func $889))
(export "vsnprintf" (func $890))
(export "__errno_location" (func $892))
(export "vfprintf" (func $893))
(export "__lockfile" (func $895))
(export "__unlockfile" (func $896))
(export "__fwritex" (func $897))
(export "strerror" (func $899))
(export "strnlen" (func $900))
(export "wctomb" (func $901))
(export "__signbitl" (func $902))
(export "__fpclassifyl" (func $903))
(export "frexpl" (func $904))
(export "wcrtomb" (func $905))
(export "memchr" (func $906))
(export "__lctrans" (func $907))
(export "__lctrans_impl" (func $908))
(export "__mo_lookup" (func $909))
(export "strcmp" (func $910))
(export "__towrite" (func $911))
(export "atoll" (func $912))
(export "atoi" (func $913))
(export "strlen" (func $914))
(export "memcmp" (func $915))
(table $0 54 54 anyfunc)
(elem (i32.const 0) $916 $155 $182 $184 $185 $186 $141 $146 $173 $121 $174 $153 $150 $176 $166 $152 $134 $114 $130 $119 $158 $129 $132 $170 $117 $179 $178 $171 $156 $116 $125 $145 $139 $148 $181 $160 $127 $164 $167 $137 $162 $126 $177 $172 $168 $123 $135 $110 $108 $112 $136 $143 $891 $860)



void .FUNC $220 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $123 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [5472]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($7)
	$4 = [0]
	*(($9 + [40])) = [0]
	*($9 + [24]) = (int_64)-1
	$6 = *($0)
	*($9 + [8]) = $6
	*($9 + [16]) = $6
	*($9 + [32]) = (int_64)0
	$3 = CALL db_lowerbound_i64($6, $6, (int_64)7865338449953106192, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	CALL $457(($9 + [8]), $3)
	$3 = CALL db_lowerbound_i64(*($9 + [8]), *(($9 + [16])), (int_64)7865338449953106192, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	$4 = CALL $457(($9 + [8]), $3)
	
.LABEL $label$6
	$6 = *($0)
	*($9 + [4]) = $2
	*($9) = $1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [352])
	CALL $800(($9 + [8]), $4, $6, $9)
	$0 = *($9 + [32])
	if ( ($0 == 0) ){ goto $label$5 }
	$1 = ($9 + [36])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	CALL $867($3)
	
.LABEL $label$10
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$9 }
	$4 = *(($9 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$4 = $0
	
.LABEL $label$7
	*($1) = $0
	CALL $867($4)
	
.LABEL $label$5
	*([0] + [4]) = ($9 + [48])
}

int_32 .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = (*([0] + [4]) - [96])
	$7 = $5
	*([0] + [4]) = $5
	$2 = *($1 + [4])
	$6 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	$5 = ($5 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $1)
	
.LABEL $label$1
	CALL $548(($7 + [24]), $5, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	*(($1 = (($7 + [48]) + [8]))) = *(($7 + [40]))
	$3 = *($7 + [24])
	*($7 + [48]) = *($7 + [32])
	*((($7 + [64]) + [8])) = *($1)
	*($7 + [64]) = *($7 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($1) + $6))
	
.LABEL $label$6
	$4 = *((($7 + [64]) + [8]))
	*((($7 + [80]) + [8])) = $4
	*((($7 + [8]) + [8])) = $4
	$4 = *($7 + [64])
	*($7 + [80]) = $4
	*($7 + [8]) = $4
	CALL void $1((int_32 $3), (int_64 ($7 + [8])), (int_32 $6))
	*([0] + [4]) = ($7 + [96])
	return [1]
}

void .FUNC $288 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [128])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	CALL $299($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($5 + [120]) = ($5 + [97])
	*($5 + [116]) = $5
	*($5 + [112]) = $5
	CALL $300(($5 + [112]), $1)
	CALL db_update_i64(*($1 + [108]), $2, $5, [97])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [128])
}

void .FUNC $221 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [144])
	*([0] + [4]) = $14
	*($14 + [136]) = $3
	CALL $193(($14 + [88]))
	$3 = (($14 + [88]) + [24])
	CALL eosio_assert(((int_64)*($3) == (int_64)1414222852), [2480])
	$7 = [0]
	$4 = ($14 + [104])
	if ( ((uint_64)((int_64)*($4) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$9 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [1840])
	CALL eosio_assert(((int_64)*($4) > (int_64)0), [1872])
	$9 = *($0 + [40])
	$11 = *($14 + [88])
	if ( ((int_64)$11 == (int_64)$9) ){ goto $label$6 }
	if ( ((int_64)*($14 + [96]) != (int_64)$9) ){ goto $label$6 }
	$5 = *($0 + [24])
	$10 = *(($0 + [28]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$7 }
	$3 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$8:
	if ( ((int_64)*(*($3)) == (int_64)$11) ){ goto $label$7 }
	$10 = $3
	$7 = ($3 + [-24])
	$3 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$10 }
	$3 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [32])
	goto $label$9 
	
.LABEL $label$10
	$3 = [0]
	$7 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6030912142679474176, $11)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	$3 = CALL $13($0, $7)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [32])
	
.LABEL $label$9
	CALL _ZN13admin_control15check_blacklistEN5eosio4nameE(*($0 + [52]), $11)
	CALL $212(*($0 + [52]), $11)
	if ( ($3 == 0) ){ goto $label$13 }
	*(($14 + [40])) = (int_64)0
	*((($14 + [24]) + [24])) = (int_64)0
	*($14 + [24]) = (int_64)0
	*($14 + [32]) = (int_64)0
	*($14 + [64]) = (int_64)0
	*($14 + [72]) = (int_64)0
	*(($14 + [80])) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$9 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$7 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$7 = [0]
	
.LABEL $label$14
	CALL eosio_assert($7, [1120])
	$7 = CALL $876($3, [58], [0])
	$0 = ($7 + [1])
	$3 = ($14 + [120])
	CALL $876($3, [58], $0)
	*($14 + [24]) = $11
	CALL $884(($14 + [8]), $3, [0], $7, $3)
	*($14 + [32]) = [0]
	CALL $871((($14 + [24]) + [8]), [0])
	*(($14 + [40])) = *((($14 + [8]) + [8]))
	*($14 + [32]) = *($14 + [8])
	CALL $884(($14 + [8]), $3, $0, [-1], $3)
	$3 = ($14 + [44])
	if ( (*($14 + [44]) & [1]) ){ goto $label$12 }
	*($3) = [0]
	goto $label$11 
	
.LABEL $label$13
	$9 = (int_64)0
	$11 = (int_64)59
	$3 = [1904]
	$8 = *($14 + [88])
	$12 = (int_64)0
	
.LOOP $label$19:
	$13 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$20 }
	$7 = *($3)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$7 = ($7 + [165])
	goto $label$21 
	
.LABEL $label$22
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$20
	$3 = ($3 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$19 }
	if ( ((int_64)$8 == (int_64)$12) ){ goto $label$6 }
	$9 = (int_64)0
	$11 = (int_64)59
	$3 = [1920]
	$12 = (int_64)0
	
.LOOP $label$23:
	$13 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$24 }
	$7 = *($3)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$7 = ($7 + [165])
	goto $label$25 
	
.LABEL $label$26
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$24
	$3 = ($3 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$23 }
	if ( ((int_64)$8 == (int_64)$12) ){ goto $label$6 }
	$9 = (int_64)0
	$11 = (int_64)59
	$3 = [1088]
	$12 = (int_64)0
	
.LOOP $label$27:
	$13 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$28 }
	$7 = *($3)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$7 = ($7 + [165])
	goto $label$29 
	
.LABEL $label$30
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$28
	$3 = ($3 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$27 }
	if ( ((int_64)$8 == (int_64)$12) ){ goto $label$6 }
	CALL eosio_assert([0], [1936])
	goto $label$6 
	
.LABEL $label$12
	*(*(($14 + [52]))) = [0]
	*(($14 + [48])) = [0]
	
.LABEL $label$11
	CALL $871($3, [0])
	*(($3 + [8])) = *((($14 + [8]) + [8]))
	*($3) = *($14 + [8])
	*(($14 + [80])) = *(($4 + [8]))
	*($14 + [72]) = *($4)
	CALL $222(($14 + [136]), ($14 + [24]))
	if ( ((*(($14 + [44])) & [1]) == 0) ){ goto $label$31 }
	CALL $867(*(($14 + [52])))
	
.LABEL $label$31
	if ( ((*((($14 + [24]) + [8])) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*(($14 + [40])))
	
.LABEL $label$6
	if ( ((*($14 + [120]) & [1]) == 0) ){ goto $label$32 }
	CALL $867(*(($14 + [128])))
	
.LABEL $label$32
	*([0] + [4]) = ($14 + [144])
}

int_32 .FUNC $537 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [28]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2928])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-4770094551111041024)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2864])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2864])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $534(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $503 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [160])
	*([0] + [4]) = $14
	CALL require_auth($1)
	$3 = *($2 + [24])
	$2 = *($0 + [328])
	$6 = *(($2 + [28]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$7 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$6 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	$7 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [32])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	$5 = CALL db_find_i64(*($2), *($2 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $13($2, $5)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [2624])
	$7 = [0]
	$5 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)-3732754643092393472, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $504(($0 + [208]), $5)
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [5104])
	$2 = *(($0 + [152]))
	$6 = *(($0 + [156]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$6 }
	$7 = ($6 + [-24])
	$4 = ([0] - $2)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$6 }
	$6 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$4 = ($0 + [128])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$9 }
	$6 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$4), [32])
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-6017485966751858688, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$6 = CALL $505($4, $7)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$4), [32])
	
.LABEL $label$8
	$2 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($2, [5136])
	$12 = *($6 + [8])
	*($14 + [136]) = (int_64)1397703940
	*($14 + [128]) = ((uint_64)$12 / (uint_64)(int_64)1000000)
	CALL eosio_assert([1], [1248])
	$10 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$5 = [0]
	
.LABEL $label$10
	CALL eosio_assert($5, [1120])
	CALL eosio_assert([1], [1248])
	$10 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$5 = [0]
	
.LABEL $label$15
	CALL eosio_assert($5, [1120])
	CALL eosio_assert(((int_64)1397703940 == (int_64)1397703940), [2688])
	CALL eosio_assert(((uint_64)$12 > (uint_64)(int_64)999999), [5168])
	$10 = (int_64)0
	$12 = (int_64)59
	$7 = [3664]
	$8 = (int_64)0
	
.LOOP $label$20:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$21 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$5 = ($5 + [165])
	goto $label$22 
	
.LABEL $label$23
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$21
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$20 }
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [1152]
	$11 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$29 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$5 = ($5 + [165])
	goto $label$27 
	
.LABEL $label$29
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$25
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$24 }
	*($14 + [80]) = $11
	*($14 + [72]) = $8
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [1824]
	$8 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$35 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$5 = ($5 + [165])
	goto $label$33 
	
.LABEL $label$35
	$12 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$31
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$8 = ((int_64)$12 | (int_64)$8)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$30 }
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [1184]
	$11 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$41 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$5 = ($5 + [165])
	goto $label$39 
	
.LABEL $label$41
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$37
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$36 }
	$10 = (int_64)0
	$12 = (int_64)59
	$7 = [3664]
	$13 = (int_64)0
	
.LOOP $label$42:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$43 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$5 = ($5 + [165])
	goto $label$44 
	
.LABEL $label$45
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$43
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$9 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$42 }
	*(($14 + [16])) = [0]
	*($14 + [8]) = (int_64)0
	$7 = CALL strlen([5200])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$46 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$49 }
	*($14 + [8]) = ($7 << [1])
	$5 = (($14 + [8]) | [1])
	if ( $7 ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	$3 = (($7 + [16]) & [-16])
	$5 = CALL $866($3)
	*($14 + [8]) = ($3 | [1])
	*($14 + [16]) = $5
	*($14 + [12]) = $7
	
.LABEL $label$48
	CALL memcpy($5, [5200], $7)
	
.LABEL $label$47
	*(($5 + $7)) = [0]
	CALL $873(($14 + [8]), [5232])
	*(($14 + [44])) = *($14 + [132])
	*($14 + [32]) = $1
	*(($14 + [52])) = *(($14 + [140]))
	*(($14 + [48])) = *((($14 + [128]) + [8]))
	*($14 + [24]) = $13
	*($14 + [40]) = *($14 + [128])
	$7 = (($14 + [8]) + [8])
	*(($14 + [64])) = *($7)
	*($14 + [56]) = *($14 + [8])
	*($14 + [8]) = [0]
	*($14 + [12]) = [0]
	*($7) = [0]
	$7 = CALL $66(($14 + [88]), ($14 + [72]), $8, $11, ($14 + [24]))
	CALL $65(($14 + [144]), $7)
	$5 = *($14 + [144])
	CALL send_inline($5, (*($14 + [148]) - $5))
	$5 = *($14 + [144])
	if ( ($5 == 0) ){ goto $label$50 }
	*($14 + [148]) = $5
	CALL $867($5)
	
.LABEL $label$50
	$5 = *($7 + [28])
	if ( ($5 == 0) ){ goto $label$51 }
	*(($7 + [32])) = $5
	CALL $867($5)
	
.LABEL $label$51
	$5 = *($7 + [16])
	if ( ($5 == 0) ){ goto $label$52 }
	*(($7 + [20])) = $5
	CALL $867($5)
	
.LABEL $label$52
	if ( ((*(($14 + [56])) & [1]) == 0) ){ goto $label$53 }
	CALL $867(*(($14 + [64])))
	
.LABEL $label$53
	if ( ((*($14 + [8]) & [1]) == 0) ){ goto $label$54 }
	CALL $867(*(($14 + [16])))
	
.LABEL $label$54
	$10 = *($0)
	*($14 + [24]) = ($14 + [128])
	CALL eosio_assert($2, [352])
	CALL $506($4, $6, $10, ($14 + [24]))
	*([0] + [4]) = ($14 + [160])
	return (unreachable)
	
.LABEL $label$46
	CALL $868(($14 + [8]))
}

void .FUNC $127 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	CALL $212(($0 + [600]), $1)
	CALL $792(($0 + [64]), $1, $2, $3)
}

int_32 .FUNC $502 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $209(CALL $209($0, ($1 + [8])), ($1 + [20]))
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [160])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [32]) = ((int_32)*($3 + [15]) != (int_32)[0])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [36]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $531 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [80])
	*([0] + [4]) = $12
	$7 = *($0 + [24])
	$10 = *(($0 + [28]))
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$1 }
	$11 = ($10 + [-24])
	$4 = ([0] - $7)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$2) ){ goto $label$1 }
	$10 = $11
	$5 = ($11 + [-24])
	$11 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$5 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$0), [32])
	if ( $11 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$11 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6030912142679474176, $2)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	$11 = CALL $13($0, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$0), [32])
	
.LABEL $label$4
	*(($12 + [64])) = [0]
	*($12 + [48]) = (int_64)-1
	$9 = *($0 + [40])
	*($12 + [32]) = $9
	*($12 + [40]) = $9
	*($12 + [56]) = (int_64)0
	$5 = CALL db_lowerbound_i64($9, $9, (int_64)-4770094551111041024, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	CALL $534(($12 + [32]), $5)
	$6 = *($11 + [20])
	$7 = CALL $535($0, $2)
	CALL $536(($12 + [16]), $0, $2)
	$2 = *($1 + [56])
	$0 = *(($12 + [56]))
	$10 = *(($12 + [60]))
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$6 }
	$11 = ($10 + [-24])
	$4 = ([0] - $0)
	
.LOOP $label$7:
	if ( ((int_64)*(*($11)) == (int_64)$2) ){ goto $label$6 }
	$10 = $11
	$5 = ($11 + [-24])
	$11 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$12 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)($12 + [32])), [32])
	*($12 + [12]) = $11
	*($12 + [8]) = ($12 + [32])
	$10 = (($12 + [8]) | [4])
	if ( $3 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$11 = CALL db_find_i64(*($12 + [32]), *(($12 + [40])), (int_64)-4770094551111041024, $2)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$13 }
	$11 = CALL $534(($12 + [32]), $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)($12 + [32])), [32])
	*($12 + [12]) = $11
	*($12 + [8]) = ($12 + [32])
	$10 = (($12 + [8]) | [4])
	if ( ($3 == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$13
	$11 = [0]
	*($12 + [12]) = [0]
	*($12 + [8]) = ($12 + [32])
	$10 = (($12 + [8]) | [4])
	if ( ($3 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$9 = (int_64)0
	if ( $11 ){ goto $label$9 }
	$9 = (int_64)0
	$11 = [0]
	$5 = CALL db_lowerbound_i64(*($12 + [32]), *(($12 + [40])), (int_64)-4770094551111041024, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$14 }
	$11 = CALL $534(($12 + [32]), $5)
	
.LABEL $label$14
	*($12 + [12]) = $11
	*($12 + [8]) = ($12 + [32])
	if ( $11 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( ($11 == 0) ){ goto $label$16 }
	$4 = (($12 + [32]) + [8])
	
.LOOP $label$17:
	if ( ((int_32)$7 < (int_32)*($11 + [8])) ){ goto $label$18 }
	if ( ($6 <= *($11 + [12])) ){ goto $label$18 }
	$2 = *($11 + [16])
	CALL eosio_assert([1], [1248])
	$9 = ((int_64)$2 * (int_64)10000)
	$2 = (int_64)5524308
	$11 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$5 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$5 = [0]
	
.LABEL $label$19
	CALL eosio_assert($5, [1120])
	CALL eosio_assert(((int_64)*((($12 + [16]) + [8])) == (int_64)1414222852), [2688])
	if ( ((int_64)*($12 + [16]) >= (int_64)$9) ){ goto $label$15 }
	
.LABEL $label$18
	$11 = [0]
	$5 = CALL db_lowerbound_i64(*($12 + [32]), *($4), (int_64)-4770094551111041024, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$24 }
	$11 = CALL $534(($12 + [32]), $5)
	
.LABEL $label$24
	if ( ((int_32)*($12 + [12]) == (int_32)$11) ){ goto $label$16 }
	CALL $537(($12 + [8]))
	$11 = *($10)
	goto $label$17 
	
.LABEL $label$16
	$9 = (int_64)0
	goto $label$8 
	
.LABEL $label$15
	$9 = *(*($10))
	goto $label$8 
	
.LABEL $label$9
	
.LOOP $label$25:
	if ( ((int_32)$7 < (int_32)*($11 + [8])) ){ goto $label$8 }
	if ( ($6 <= *($11 + [12])) ){ goto $label$8 }
	$2 = *($11 + [16])
	CALL eosio_assert([1], [1248])
	$8 = ((int_64)$2 * (int_64)10000)
	$2 = (int_64)5524308
	$11 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$5 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$5 = [0]
	
.LABEL $label$26
	CALL eosio_assert($5, [1120])
	CALL eosio_assert(((int_64)*($12 + [24]) == (int_64)1414222852), [2688])
	if ( ((int_64)*($12 + [16]) < (int_64)$8) ){ goto $label$8 }
	$11 = [0]
	$5 = *($10)
	$9 = *($5)
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [960])
	$5 = CALL db_next_i64(*(*($12 + [12]) + [28]), ($12 + [72]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$31 }
	$11 = CALL $534(*($12 + [8]), $5)
	
.LABEL $label$31
	*($12 + [12]) = $11
	if ( $11 ){ goto $label$25 }
	
.LABEL $label$8
	$11 = ($1 + [56])
	if ( ((int_64)$9 == (int_64)*($11)) ){ goto $label$32 }
	*($11) = $9
	
.LABEL $label$32
	$10 = *($12 + [56])
	if ( ($10 == 0) ){ goto $label$3 }
	$4 = ($12 + [60])
	$11 = *($4)
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$34 }
	
.LOOP $label$35:
	$11 = ($11 + [-24])
	$5 = *($11)
	*($11) = [0]
	if ( ($5 == 0) ){ goto $label$36 }
	CALL $867($5)
	
.LABEL $label$36
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$35 }
	$11 = *(($12 + [56]))
	goto $label$33 
	
.LABEL $label$34
	$11 = $10
	
.LABEL $label$33
	*($4) = $10
	CALL $867($11)
	
.LABEL $label$3
	*([0] + [4]) = ($12 + [80])
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $6
	CALL $867($6)
	
.LABEL $label$11
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $867($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$5 = (*([0] + [4]) - [48])
	$10 = $5
	*([0] + [4]) = $5
	$2 = *($0)
	$8 = *($0 + [4])
	*($1) = *(*($8))
	$8 = *($8 + [4])
	$6 = ($1 + [12])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)*(($1 + [16]))) ){ goto $label$2 }
	*($4) = *($8)
	*(($4 + [8])) = *(($8 + [8]))
	$8 = (*($6) + [12])
	*($6) = $8
	$4 = ($1 + [8])
	goto $label$1 
	
.LABEL $label$2
	$4 = ($1 + [8])
	CALL $46($4, $8)
	$8 = *($6)
	
.LABEL $label$1
	$3 = *($4)
	$7 = ($8 - $3)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[12]))
	$6 = [8]
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$4 }
	$6 = ((((int_32)((uint_32)($7 + [-12]) / (uint_32)[12]) * (int_32)[7]) + $6) + [7])
	
.LABEL $label$4
	if ( ($6 <= [513]) ){ goto $label$6 }
	$7 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($5 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$5
	*($10 + [8]) = $7
	$3 = ($7 + $6)
	*($10 + [16]) = $3
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [576])
	CALL memcpy($7, $1, [8])
	$8 = ($7 + [8])
	*($10 + [12]) = $8
	$9 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [12])) - *($4)) / (int_32)[12]))
	
.LOOP $label$7:
	$4 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$5 = ((int_64)$9) != (int_64)0
	*($10 + [32]) = (($5) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)($3 - $8) > (int_32)[0]), [576])
	CALL memcpy($8, ($10 + [32]), [1])
	$8 = ($8 + [1])
	*($10 + [12]) = $8
	if ( $5 ){ goto $label$7 }
	$4 = *(($1 + [12]))
	$8 = *($1 + [8])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	*($10 + [24]) = ($10 + [8])
	*($10 + [32]) = $8
	*((($10 + [32]) + [8])) = ($8 + [8])
	*((($10 + [32]) + [12])) = ($8 + [9])
	*($10 + [36]) = ($8 + [4])
	CALL $47(($10 + [32]), ($10 + [24]))
	$8 = ($8 + [12])
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$8
	$9 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)-7695177867839143936, *(*($0 + [8])), $9, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$10 }
	CALL free($7)
	
.LABEL $label$10
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$11 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $125 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [5472]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($7)
	CALL $269(($9 + [64]), ($0 + [600]), $1, [1])
	*(($4 = CALL memcpy($9, *($9 + [68]), [64])) + [58]) = $2
	$3 = *($4 + [68])
	$6 = *($0 + [600])
	*($4 + [72]) = $4
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [352])
	CALL $272(($0 + [728]), $3, $6, ($4 + [72]))
	*([0] + [4]) = ($4 + [80])
}

int_32 .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $866([32]))) = (int_64)0
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [16]) = [0]
	*($6 + [20]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [160])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	CALL $50(($8 + [32]), ($6 + [8]))
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $49(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $7
	CALL $867($7)
	
.LABEL $label$10
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $42 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $1
	*($7 + [36]) = $2
	*($7 + [24]) = $2
	*($7 + [33]) = [0]
	*($7 + [32]) = [1]
	*($7 + [28]) = [1]
	$3 = *(($0 + [32]))
	$6 = *(($0 + [36]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$2 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$1 }
	$6 = $2
	$5 = ($2 + [-24])
	$2 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [8])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [20]) == (int_32)$2), [32])
	$1 = *($0)
	if ( $5 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7695177867839143936, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $43($2, $5)
	CALL eosio_assert(((int_32)*($5 + [20]) == (int_32)$2), [32])
	$1 = *($0)
	
.LABEL $label$6
	*($7 + [20]) = ($7 + [24])
	*($7 + [16]) = ($7 + [36])
	CALL eosio_assert([1], [352])
	CALL $45($2, $5, $1, ($7 + [16]))
	goto $label$3 
	
.LABEL $label$5
	$1 = *($0)
	
.LABEL $label$4
	*($7 + [20]) = ($7 + [24])
	*($7 + [16]) = ($7 + [40])
	CALL $44(($7 + [8]), $2, $1, ($7 + [16]))
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC _ZN16activity_control13jointfragmentEN5eosio4nameEm (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$4 = *($0)
	*($6 + [8]) = $4
	*($6 + [16]) = $4
	$5 = [0]
	$3 = CALL db_find_i64($4, $4, (int_64)-5075105024296615936, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $12(($6 + [8]), $3)
	CALL eosio_assert(((int_32)*($5 + [20]) == (int_32)($6 + [8])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)[2]), [736])
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [224])
	CALL eosio_assert(((int_32)*($5 + [12]) != (int_32)[0]), [768])
	CALL eosio_assert(((uint_32)*(CALL $28($0, $1, $2) + [4]) >= (uint_32)*($5 + [10])), [784])
	CALL _ZN16activity_control14remove_actpropEN5eosio4nameEmm($0, $1, $2, *($5 + [10]))
	if ( ((int_32)*($5 + [8]) != (int_32)[2]) ){ goto $label$2 }
	CALL $42(*($0 + [96]), $1, *(($5 + [12])))
	
.LABEL $label$2
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = ($6 + [36])
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $867($0)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$6 }
	$5 = *(($6 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	*($3) = $2
	CALL $867($5)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [160])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($2, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), $2, [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$3 = ((int_32)($5 - $4) / (int_32)[12])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$2 = ((int_32)(*($0 + [8]) - $4) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$4 }
	$6 = ($2 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $866(((int_32)$6 * (int_32)[12]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	*(($3 = ($7 + ((int_32)$3 * (int_32)[12])))) = *($1)
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($5 - $4)
	$5 = ($3 + ((int_32)((int_32)$1 / (int_32)[-12]) * (int_32)[12]))
	$6 = ($7 + ((int_32)$6 * (int_32)[12]))
	$3 = ($3 + [12])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($5, $4, $1)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $5
	*(($0 + [4])) = $3
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $867($4)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $45 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$9 = (*([0] + [4]) - [48])
	$12 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$10 = *($1 + [8])
	$5 = *(($1 + [12]))
	if ( ((int_32)$5 == (int_32)$10) ){ goto $label$4 }
	$7 = ((int_32)($5 - $10) / (int_32)[12])
	$6 = *(*($3))
	$8 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*($10) == (int_32)$6) ){ goto $label$3 }
	$10 = ($10 + [12])
	$8 = ($8 + [1])
	if ( ($8 <= $7) ){ goto $label$5 }
	
.LABEL $label$4
	$10 = *($3 + [4])
	if ( ((int_32)$5 == (int_32)*(($1 + [16]))) ){ goto $label$2 }
	*($5) = *($10)
	*(($5 + [8])) = *(($10 + [8]))
	*(($10 = ($1 + [12]))) = (*($10) + [12])
	goto $label$1 
	
.LABEL $label$3
	*(($10 = ($10 + [4]))) = (*($10) + [1])
	goto $label$1 
	
.LABEL $label$2
	CALL $46(($1 + [8]), $10)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$8 = [8]
	$6 = *(($1 + [8]))
	$10 = *(($1 + [12]))
	$7 = ($10 - $6)
	$11 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[12]))
	
.LOOP $label$6:
	$8 = ($8 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$7 }
	$8 = ((((int_32)((uint_32)($7 + [-12]) / (uint_32)[12]) * (int_32)[7]) + $8) + [7])
	
.LABEL $label$7
	if ( ($8 <= [513]) ){ goto $label$9 }
	$9 = CALL malloc($8)
	goto $label$8 
	
.LABEL $label$9
	$9 = ($9 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$8
	*($12 + [8]) = $9
	$5 = ($9 + $8)
	*($12 + [16]) = $5
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	$10 = ($9 + [8])
	*($12 + [12]) = $10
	$11 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [12])) - *(($1 + [8]))) / (int_32)[12]))
	
.LOOP $label$10:
	$6 = (CASTING uint_32)(uint_64 $11)
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	$7 = ((int_64)$11) != (int_64)0
	*($12 + [32]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)($5 - $10) > (int_32)[0]), [576])
	CALL memcpy($10, ($12 + [32]), [1])
	$10 = ($10 + [1])
	*($12 + [12]) = $10
	if ( $7 ){ goto $label$10 }
	$6 = *(($1 + [12]))
	$10 = *(($1 + [8]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$12:
	*($12 + [24]) = ($12 + [8])
	*($12 + [32]) = $10
	*((($12 + [32]) + [8])) = ($10 + [8])
	*((($12 + [32]) + [12])) = ($10 + [9])
	*($12 + [36]) = ($10 + [4])
	CALL $47(($12 + [32]), ($12 + [24]))
	$10 = ($10 + [12])
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$12 }
	
.LABEL $label$11
	CALL db_update_i64(*($1 + [24]), $2, $9, $8)
	if ( ($8 <= [513]) ){ goto $label$13 }
	CALL free($9)
	
.LABEL $label$13
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$14 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	*([0] + [4]) = ($12 + [48])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([32]))) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16]) = [0]
	*($3 + [20]) = $1
	CALL $48(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [24])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $49(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [12])) = $1
	CALL $867($1)
	
.LABEL $label$4
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $222 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [224])
	*([0] + [4]) = $14
	$4 = *($1 + [8])
	$7 = ($1 + [12])
	if ( (( *($7) ? uint_32($4 >> [1]) : ($4 & [1]) ) == 0) ){ goto $label$2 }
	$4 = ($1 + [8])
	$7 = *($4)
	$0 = *($0)
	$2 = *($0 + [1680])
	$3 = CALL strlen($2)
	if ( ((int_32)$3 != (int_32)( *($7) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$12 }
	if ( (CALL $877($4, [0], [-1], $2, $3) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$3 = ($1 + [8])
	$7 = *($3)
	$2 = ($1 + [12])
	$5 = *($0 + [1684])
	$6 = CALL strlen($5)
	if ( ((int_32)$6 != (int_32)( *($2) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$13 }
	if ( (CALL $877($4, [0], [-1], $5, $6) == 0) ){ goto $label$10 }
	
.LABEL $label$13
	$7 = *($3)
	$5 = *($0 + [1664])
	$6 = CALL strlen($5)
	if ( ((int_32)$6 != (int_32)( *($2) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$14 }
	if ( (CALL $877($4, [0], [-1], $5, $6) == 0) ){ goto $label$9 }
	
.LABEL $label$14
	$7 = *(($1 + [8]))
	$2 = *($0 + [1668])
	$3 = CALL strlen($2)
	if ( ((int_32)$3 != (int_32)( *(($1 + [12])) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$15 }
	if ( (CALL $877($4, [0], [-1], $2, $3) == 0) ){ goto $label$8 }
	
.LABEL $label$15
	CALL eosio_assert([0], [2032])
	goto $label$2 
	
.LABEL $label$11
	$9 = (int_64)0
	*($14 + [200]) = (int_64)0
	*($14 + [196]) = [0]
	$4 = ($0 + [1304])
	CALL $195($4, ($1 + [20]), ($14 + [200]), ($14 + [196]))
	*(($14 + [188])) = *(($1 + [60]))
	*(($7 = (($14 + [176]) + [8]))) = *(($1 + [56]))
	*($14 + [180]) = *(($1 + [52]))
	$2 = *($14 + [196])
	$11 = *($14 + [200])
	*($14 + [176]) = *($1 + [48])
	$8 = *($1)
	*((($14 + [8]) + [8])) = *($7)
	*($14 + [8]) = *($14 + [176])
	CALL $196($4, $8, $11, $2, ($14 + [8]))
	$7 = ($1 + [48])
	$12 = *($0)
	$8 = (int_64)59
	$1 = [1152]
	$10 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$21 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$4 = ($4 + [165])
	goto $label$19 
	
.LABEL $label$21
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$17
	$1 = ($1 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$16 }
	*($14 + [128]) = $10
	*($14 + [120]) = $12
	$9 = (int_64)0
	$11 = (int_64)59
	$1 = [1088]
	$10 = (int_64)0
	
.LOOP $label$22:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$23 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$4 = ($4 + [165])
	goto $label$24 
	
.LABEL $label$25
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$23
	$1 = ($1 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$22 }
	$9 = (int_64)0
	$8 = (int_64)59
	$1 = [1184]
	$12 = (int_64)0
	
.LOOP $label$26:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$31 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$4 = ($4 + [165])
	goto $label$29 
	
.LABEL $label$31
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$30
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$28
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$27
	$1 = ($1 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$26 }
	$9 = (int_64)0
	$11 = (int_64)59
	$1 = [1984]
	$13 = (int_64)0
	
.LOOP $label$32:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$33 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$4 = ($4 + [165])
	goto $label$34 
	
.LABEL $label$35
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$34
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$33
	$1 = ($1 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$13 = ((int_64)$8 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$32 }
	*(($14 + [64])) = [0]
	*($14 + [56]) = (int_64)0
	$1 = CALL strlen([2528])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$7 }
	*($14 + [56]) = ($1 << [1])
	$4 = (($14 + [56]) | [1])
	if ( $1 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$10
	$9 = CALL atoll(( *(($1 + [28])) ? ($1 + [21]) : (*($1 + [20]) & [1]) ))
	CALL eosio_assert(((int_64)$9 != (int_64)0), [2560])
	*(($4 = (($14 + [40]) + [12]))) = *(($1 + [60]))
	*(($7 = (($14 + [40]) + [8]))) = *(($1 + [56]))
	*($14 + [44]) = *(($1 + [52]))
	*($14 + [40]) = *($1 + [48])
	$11 = *($1)
	*((($14 + [24]) + [12])) = *($4)
	*((($14 + [24]) + [8])) = *($7)
	*($14 + [28]) = *($14 + [44])
	*($14 + [24]) = *($14 + [40])
	CALL $223(($0 + [1392]), $11, $9, ($14 + [24]))
	goto $label$2 
	
.LABEL $label$9
	CALL $224(($0 + [1360]), *($1), (CALL $913(( *(($1 + [28])) ? ($1 + [21]) : (*($1 + [20]) & [1]) )) & [255]), ($1 + [48]))
	goto $label$2 
	
.LABEL $label$8
	$9 = *($1)
	$5 = *(($0 + [320]))
	$2 = *(($0 + [324]))
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$36 }
	$4 = ($2 + [-24])
	$3 = ([0] - $5)
	
.LOOP $label$37:
	if ( ((int_64)*(*($4)) == (int_64)$9) ){ goto $label$36 }
	$2 = $4
	$7 = ($4 + [-24])
	$4 = $7
	if ( ((int_32)($7 + $3) != (int_32)[-24]) ){ goto $label$37 }
	
.LABEL $label$36
	$7 = ($0 + [296])
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$4 }
	$4 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [20]) == (int_32)$7), [32])
	goto $label$3 
	
.LABEL $label$7
	$2 = (($1 + [16]) & [-16])
	$4 = CALL $866($2)
	*($14 + [56]) = ($2 | [1])
	*($14 + [64]) = $4
	*($14 + [60]) = $1
	
.LABEL $label$6
	CALL memcpy($4, [2528], $1)
	
.LABEL $label$5
	*(($4 + $1)) = [0]
	$9 = *($0)
	*(($14 + [100])) = *(($7 + [12]))
	*(($14 + [96])) = *(($7 + [8]))
	*(($14 + [92])) = *(($7 + [4]))
	*($14 + [80]) = $13
	*($14 + [72]) = $9
	*($14 + [88]) = *($7)
	$1 = (($14 + [56]) + [8])
	*(($14 + [112])) = *($1)
	*($14 + [104]) = *($14 + [56])
	*($14 + [56]) = [0]
	*($14 + [60]) = [0]
	*($1) = [0]
	$1 = CALL $197(($14 + [136]), ($14 + [120]), $10, $12, ($14 + [72]))
	CALL $65(($14 + [208]), $1)
	$4 = *($14 + [208])
	CALL send_inline($4, (*($14 + [212]) - $4))
	$4 = *($14 + [208])
	if ( ($4 == 0) ){ goto $label$38 }
	*($14 + [212]) = $4
	CALL $867($4)
	
.LABEL $label$38
	$4 = *($1 + [28])
	if ( ($4 == 0) ){ goto $label$39 }
	*(($1 + [32])) = $4
	CALL $867($4)
	
.LABEL $label$39
	$4 = *($1 + [16])
	if ( ($4 == 0) ){ goto $label$40 }
	*(($1 + [20])) = $4
	CALL $867($4)
	
.LABEL $label$40
	if ( ((*(($14 + [104])) & [1]) == 0) ){ goto $label$41 }
	CALL $867(*(($14 + [112])))
	
.LABEL $label$41
	if ( ((*($14 + [56]) & [1]) == 0) ){ goto $label$2 }
	CALL $867(*(($14 + [64])))
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	$2 = CALL db_find_i64(*(($0 + [296])), *(($0 + [304])), (int_64)7687433457688903680, $9)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $225($7, $2)
	CALL eosio_assert(((int_32)*($4 + [20]) == (int_32)$7), [32])
	
.LABEL $label$3
	$4 = ( ($4 + [8]) ? ($0 + [360]) : $4 )
	CALL eosio_assert(((int_32)(*($4 + [4]) - *($4)) == (int_32)[48]), [2592])
	CALL $226(($0 + [64]), *($1), (CALL $913(( *(($1 + [28])) ? ($1 + [21]) : (*($1 + [20]) & [1]) )) & [65535]), ($1 + [48]))
	
.LABEL $label$2
	*([0] + [4]) = ($14 + [224])
	return (unreachable)
	
.LABEL $label$1
	CALL $868(($14 + [56]))
}

void .FUNC $509 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [32])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [36])) = $6
	CALL $867($6)
	
.LABEL $label$11
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $867($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $714 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [208])
	*([0] + [4]) = $10
	*($10 + [200]) = $1
	$4 = *($3 + [24])
	$3 = *($0 + [64])
	$6 = *(($3 + [28]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$1 }
	$7 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$6 = $7
	$9 = ($7 + [-24])
	$7 = $9
	if ( ((int_32)($9 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	$9 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $13($3, $9)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$3), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [192])
	CALL $269(($10 + [192]), *($0 + [76]), $1, [1])
	CALL require_auth($1)
	*($10 + [184]) = $3
	*($10 + [188]) = $7
	*($10 + [176]) = *($10 + [192])
	*($10 + [16 align=4]) = *($10 + [184])
	*(($10 + [12])) = *($10 + [180])
	*($10 + [8]) = *($10 + [176])
	CALL $715($0, $1, [0], ($10 + [16]), [1], ($10 + [8]))
	$8 = CALL $91(*($0 + [76]))
	*($10 + [168]) = $8
	$7 = *($0 + [76])
	CALL $883(($10 + [96]), $2)
	CALL $92(($10 + [112]), $7, $8, $1, ($10 + [96]), ($10 + [128]))
	if ( ((*($10 + [96]) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*($10 + [104]))
	
.LABEL $label$5
	*(($10 + [88])) = [0]
	*($10 + [72]) = (int_64)-1
	*($10 + [80]) = (int_64)0
	$1 = *($0 + [8])
	*($10 + [56]) = $1
	*($10 + [64]) = $1
	*($10 + [40]) = $2
	*($10 + [36]) = ($10 + [200])
	*($10 + [32]) = ($10 + [168])
	*($10 + [44]) = ($10 + [112])
	*($10 + [48]) = ($10 + [128])
	CALL $716(($10 + [24]), ($10 + [56]), $1, ($10 + [32]))
	CALL $95(*(($0 + [76])), *($10 + [200]), *($10 + [168]))
	$6 = *($10 + [80])
	if ( ($6 == 0) ){ goto $label$6 }
	$5 = (($10 + [56]) + [28])
	$9 = *($5)
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = ($9 + [-24])
	$7 = *($9)
	*($9) = [0]
	if ( ($7 == 0) ){ goto $label$10 }
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*(($7 + [40])))
	
.LABEL $label$11
	if ( ((*($7 + [20]) & [1]) == 0) ){ goto $label$12 }
	CALL $867(*(($7 + [28])))
	
.LABEL $label$12
	CALL $867($7)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$9 }
	$7 = *(($10 + [80]))
	goto $label$7 
	
.LABEL $label$8
	$7 = $6
	
.LABEL $label$7
	*($5) = $6
	CALL $867($7)
	
.LABEL $label$6
	if ( ((*($10 + [112]) & [1]) == 0) ){ goto $label$13 }
	CALL $867(*($10 + [120]))
	
.LABEL $label$13
	*([0] + [4]) = ($10 + [208])
}

int_32 .FUNC $508 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $466($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = (*([0] + [4]) - [160])
	$5 = $3
	*([0] + [4]) = $3
	$2 = *($1 + [4])
	$4 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	CALL $798(($5 + [32]), $3, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($3)
	
.LABEL $label$5
	*(($1 = (($5 + [80]) + [8]))) = *((($5 + [32]) + [8]))
	*(($3 = (($5 + [64]) + [8]))) = *(($5 + [56]))
	*($5 + [80]) = *($5 + [32])
	*($5 + [64]) = *($5 + [48])
	*((($5 + [112]) + [8])) = *($3)
	*((($5 + [96]) + [8])) = *($1)
	*($5 + [112]) = *($5 + [64])
	*($5 + [96]) = *($5 + [80])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$4 = *((*($1) + $4))
	
.LABEL $label$6
	*(($3 = (($5 + [144]) + [8]))) = *((($5 + [96]) + [8]))
	*(($2 = (($5 + [128]) + [8]))) = *((($5 + [112]) + [8]))
	*($5 + [144]) = *($5 + [96])
	*($5 + [128]) = *($5 + [112])
	*((($5 + [16]) + [8])) = *($3)
	*($5 + [16]) = *($5 + [144])
	*(($5 + [8])) = *($2)
	*($5) = *($5 + [128])
	CALL void $1((int_32 ($5 + [16])), (int_32 $5), (int_32 $4))
	*([0] + [4]) = ($5 + [160])
	return [1]
}

int_32 .FUNC $854 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [592])
	$5 = *($3)
	$8 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($8 >> [7]) ){ goto $label$1 }
	$3 = *($1)
	$7 = *($1 + [4])
	$5 = int_32(($7 - $3) >> [6])
	$8 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$8 <= (uint_32)$5) ){ goto $label$3 }
	CALL $855($1, ($8 - $5))
	$7 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$8 >= (uint_32)$5) ){ goto $label$2 }
	$8 = ($8 << [6])
	$2 = ($3 + $8)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$3 = (([0] - $3) - $8)
	$8 = ($7 + [-12])
	
.LOOP $label$5:
	$5 = *($8)
	if ( ($5 == 0) ){ goto $label$6 }
	*(($8 + [4])) = $5
	CALL $867($5)
	
.LABEL $label$6
	$8 = ($8 + [-64])
	if ( ((int_32)($8 + $3) != (int_32)[-12]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $2
	$7 = $2
	
.LABEL $label$2
	$8 = *($1)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$7 }
	$3 = ($9 + [28])
	$2 = ($9 + [36])
	$1 = ($9 + [40])
	$4 = ($9 + [44])
	
.LOOP $label$8:
	*($9 + [8]) = $0
	*($9 + [16]) = $8
	*((($9 + [16]) + [8])) = ($8 + [4])
	*($3) = ($8 + [6])
	*((($9 + [16]) + [16])) = ($8 + [7])
	*($2) = ($8 + [8])
	*($1) = ($8 + [16])
	*($9 + [20]) = ($8 + [2])
	*($4) = ($8 + [32])
	CALL $856(($9 + [16]), ($9 + [8]))
	$5 = ($0 + [4])
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - *($5)) > (uint_32)[1]), [160])
	CALL memcpy(($8 + [48]), *($5), [2])
	*($5) = (*($5) + [2])
	CALL $857($0, ($8 + [52]))
	$8 = ($8 + [64])
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [48])
	return $0
}

void .FUNC $289 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$3 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [104]) == (int_32)$5), [32])
	*($8 + [44]) = $6
	*($8 + [40]) = $5
	$7 = (($8 + [40]) | [4])
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)3932090329953906848, $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$5 }
	$6 = CALL $285($5, $6)
	CALL eosio_assert(((int_32)*($6 + [104]) == (int_32)$5), [32])
	*($8 + [44]) = $6
	*($8 + [40]) = $5
	$7 = (($8 + [40]) | [4])
	goto $label$3 
	
.LABEL $label$5
	$6 = [0]
	*($8 + [44]) = [0]
	*($8 + [40]) = $5
	$7 = (($8 + [40]) | [4])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [3232])
	*($8 + [36]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	if ( ($2 == 0) ){ goto $label$6 }
	*($8 + [24]) = (int_64)13579
	*($8 + [16]) = $1
	CALL cancel_deferred(($8 + [16]))
	$6 = *($7)
	
.LABEL $label$6
	if ( ((int_32)*($6 + [8]) != (int_32)[1]) ){ goto $label$7 }
	if ( (*($6 + [40]) == 0) ){ goto $label$7 }
	CALL $67(*($0 + [88]), *($6 + [48]), *($6 + [12]), [2])
	
.LABEL $label$7
	$6 = ($0 + [48])
	$7 = ($0 + [64])
	$1 = *($7)
	if ( ((int_64)$1 != (int_64)-1) ){ goto $label$8 }
	$1 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($6), *(($0 + [56])), (int_64)3932090329950728704, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$9 }
	CALL $290($6, $4)
	*($8 + [20]) = [0]
	*($8 + [16]) = $6
	$1 = *(*(CALL $291(($8 + [16])) + [4]))
	$1 = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*(($0 + [64])) = $1
	
.LABEL $label$8
	CALL eosio_assert((uint_64)($1 <= (int_64)-2), [2800])
	$1 = *($7)
	*($8 + [8]) = ( (int_64)1 ? $1 : (int_64)($1 == 0) )
	$1 = *($0)
	*($8 + [20]) = ($8 + [40])
	*($8 + [16]) = ($8 + [8])
	*($8 + [24]) = ($8 + [36])
	CALL $292($8, $6, $1, ($8 + [16]))
	$1 = *($8 + [40])
	$6 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	$7 = ((int_32)$6) != (int_32)[0]
	CALL eosio_assert($7), [2224])
	CALL eosio_assert($7, [960])
	$7 = CALL db_next_i64(*($6 + [108]), ($8 + [16]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$10 }
	CALL $285((CASTING uint_32)(uint_64 $1), $7)
	
.LABEL $label$10
	CALL $293($5, $6)
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $563 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$2 = *($0)
	*($1 + [16]) = [2]
	CALL $869(($1 + [20]), *($4 + [8]))
	CALL $869(($1 + [32]), *($4 + [12]))
	$5 = *($4 + [16])
	*($1 + [48]) = *($5)
	*(($1 + [72])) = *(($5 + [24]))
	*(($1 + [64])) = *(($5 + [16]))
	*(($1 + [56])) = *(($5 + [8]))
	*($1 + [80]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($1 + [84]) = *(*($4 + [20]))
	$4 = *($1 + [20])
	$5 = ( *(($1 + [24])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($5 + [72])
	$3 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	$5 = *(($1 + [32]))
	$5 = ( *(($1 + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$4 = ($5 + $4)
	$3 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	if ( ($4 <= [513]) ){ goto $label$4 }
	$5 = CALL malloc($4)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($7 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$3
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $4)
	CALL $101($6, $1)
	$3 = *($1)
	*($1 + [108]) = CALL db_store_i64(*($2 + [8]), (int_64)-6533188803235414016, *(*($0 + [8])), $3, $5, $4)
	if ( ($4 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $562 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([128])) + [8]) = (int_64)0
	*($3 + [20 align=4]) = (int_64)0
	*($3 + [28 align=4]) = (int_64)0
	*($3 + [36 align=4]) = (int_64)0
	*($3 + [80]) = [0]
	*($3 + [104]) = $1
	CALL $563(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [108])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $94(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$4 }
	CALL $867(*(($3 + [40])))
	
.LABEL $label$4
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*(($3 + [28])))
	
.LABEL $label$5
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $561 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	float_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	float_64 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [240])
	*([0] + [4]) = $20
	*($20 + [158]) = $2
	*($20 + [157]) = $3
	CALL $564(*($0 + [60]), [1])
	$18 = CALL $565(*($0 + [60]))
	$14 = [0]
	*((($20 + [112]) + [32])) = [0]
	*($20 + [128]) = (int_64)-1
	*($20 + [136]) = (int_64)0
	$11 = *($0)
	*($20 + [112]) = $11
	*($20 + [120]) = $11
	$3 = [0]
	$2 = CALL db_find_i64($11, $11, (int_64)-7695177680118874112, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $566(($20 + [112]), $2)
	CALL eosio_assert(((int_32)*($3 + [28]) == (int_32)($20 + [112])), [32])
	
.LABEL $label$1
	$2 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($2, [5760])
	*((($20 + [72]) + [32])) = [0]
	$11 = *($0)
	*($20 + [72]) = $11
	*($20 + [88]) = (int_64)-1
	*($20 + [96]) = (int_64)0
	*($20 + [80]) = $11
	$17 = CALL db_find_i64($11, $11, (int_64)-4852160326797361152, *($20 + [158]))
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	$14 = CALL $567(($20 + [72]), $17)
	CALL eosio_assert(((int_32)*($14 + [28]) == (int_32)($20 + [72])), [32])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [5808])
	*($20 + [68]) = ((int_32)((int_32)*([0] + [20]) * (int_32)(uint_32([545842] >> ((*($14 + [8]) << [2]) + [-4])) & [15])) * (int_32)[6])
	*($20 + [64]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) - *([0] + [12]))
	*($20 + [63]) = [0]
	$11 = *($0)
	*($20 + [164]) = $0
	*($20 + [160]) = ($20 + [158])
	*($20 + [168]) = ($20 + [64])
	*($20 + [172]) = ($20 + [157])
	*($20 + [176]) = ($20 + [68])
	*($20 + [180]) = ($20 + [63])
	CALL eosio_assert($2, [352])
	CALL $568(($20 + [112]), $3, $11, ($20 + [160]))
	CALL eosio_assert(*($20 + [63]), [5840])
	$15 = *(($0 + [32]))
	$17 = *(($0 + [36]))
	if ( ((int_32)$17 == (int_32)$15) ){ goto $label$3 }
	$3 = ($17 + [-24])
	$19 = ([0] - $15)
	
.LOOP $label$4:
	if ( ((int_64)*(*($3)) == (int_64)$1) ){ goto $label$3 }
	$17 = $3
	$2 = ($3 + [-24])
	$3 = $2
	if ( ((int_32)($2 + $19) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	$2 = ($0 + [8])
	if ( ((int_32)$17 == (int_32)$15) ){ goto $label$6 }
	$3 = *(($17 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [20]) == (int_32)$2), [32])
	goto $label$5 
	
.LABEL $label$6
	$3 = [0]
	$17 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7695177867839143936, $1)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$5 }
	$3 = CALL $43($2, $17)
	CALL eosio_assert(((int_32)*($3 + [20]) == (int_32)$2), [32])
	
.LABEL $label$5
	$6 = [0]
	*($20 + [63]) = [0]
	$15 = [1]
	$2 = [0]
	$3 = *($3)
	$3 = ( ($3 + [8]) ? ($0 + [68]) : $3 )
	$17 = *($3 + [4])
	if ( ((int_32)$17 == (int_32)$3) ){ goto $label$7 }
	$19 = ((int_32)($17 - $3) / (int_32)[12])
	$2 = [0]
	$17 = *($20 + [158])
	
.LOOP $label$9:
	if ( ((int_32)*($3) == (int_32)$17) ){ goto $label$8 }
	$3 = ($3 + [12])
	$15 = [1]
	$2 = ($2 + [1])
	if ( ($2 <= $19) ){ goto $label$9 }
	$2 = [0]
	goto $label$7 
	
.LABEL $label$8
	$2 = [1]
	*($20 + [63]) = [1]
	$15 = *(($3 + [8]))
	
.LABEL $label$7
	CALL eosio_assert($2, [5872])
	*(($20 + [48])) = [0]
	*($20 + [32]) = (int_64)-1
	*($20 + [40]) = (int_64)0
	$11 = *($0)
	*($20 + [16]) = $11
	*($20 + [24]) = $11
	$3 = CALL db_find_i64($11, $11, (int_64)-4852160320931102720, (CASTING uint_64)(uint_32 $15))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$10 }
	$6 = CALL $569(($20 + [16]), $3)
	CALL eosio_assert(((int_32)*($6 + [28]) == (int_32)($20 + [16])), [32])
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [5808])
	$9 = *($7 + [24])
	$7 = *($0 + [48])
	$17 = *(($7 + [28]))
	if ( ((int_32)$17 == (int_32)$9) ){ goto $label$11 }
	$3 = ($17 + [-24])
	$19 = ([0] - $9)
	
.LOOP $label$12:
	if ( ((int_64)*(*($3)) == (int_64)$1) ){ goto $label$11 }
	$17 = $3
	$2 = ($3 + [-24])
	$3 = $2
	if ( ((int_32)($2 + $19) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)$17 == (int_32)$9) ){ goto $label$14 }
	$16 = *(($17 + [-24]))
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)$7), [32])
	goto $label$13 
	
.LABEL $label$14
	$16 = [0]
	$3 = CALL db_find_i64(*($7), *($7 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$13 }
	$16 = CALL $13($7, $3)
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)$7), [32])
	
.LABEL $label$13
	$8 = ((int_32)$16 != (int_32)[0])
	CALL eosio_assert($8, [192])
	$10 = *(($9 + [32]))
	$9 = *($0 + [52])
	$17 = *(($9 + [36]))
	if ( ((int_32)$17 == (int_32)$10) ){ goto $label$15 }
	$3 = ($17 + [-24])
	$19 = ([0] - $10)
	
.LOOP $label$16:
	if ( ((int_64)*(*($3)) == (int_64)$1) ){ goto $label$15 }
	$17 = $3
	$2 = ($3 + [-24])
	$3 = $2
	if ( ((int_32)($2 + $19) != (int_32)[-24]) ){ goto $label$16 }
	
.LABEL $label$15
	$2 = ($9 + [8])
	if ( ((int_32)$17 == (int_32)$10) ){ goto $label$20 }
	$3 = *(($17 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$2), [32])
	if ( $3 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$3 = CALL db_find_i64(*(($9 + [8])), *(($9 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$18 }
	$3 = CALL $227($2, $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$2), [32])
	
.LABEL $label$19
	$3 = ($3 + [12])
	goto $label$17 
	
.LABEL $label$18
	$3 = ($9 + [112])
	
.LABEL $label$17
	$3 = *($16 + [8])
	CALL eosio_assert(((int_32)((int_32)(*($3 + [4]) - *($3)) / (int_32)[12]) < (int_32)((( $3 ? [5] : ($3 <= [5]) ) << [2]) + [28])), [2768])
	$9 = [1]
	if ( *($20 + [157]) ){ goto $label$21 }
	$3 = [0]
	$2 = ($14 + [8])
	$17 = (*($2) + [-1])
	if ( ((uint_32)$17 > (uint_32)[4]) ){ goto $label$22 }
	goto $label$27 
	
.LABEL $label$27
	$3 = *($6 + [8])
	goto $label$22 
	
.LABEL $label$26
	$3 = *($6 + [10])
	goto $label$22 
	
.LABEL $label$25
	$3 = *($6 + [12])
	goto $label$22 
	
.LABEL $label$24
	$3 = *($6 + [14])
	goto $label$22 
	
.LABEL $label$23
	$3 = *($6 + [16])
	
.LABEL $label$22
	$11 = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $4) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	$3 = ((uint_32)((int_32)*($20 + [68]) * (int_32)($3 & [65535])) / (uint_32)*([0] + [16]))
	$3 = (CASTING int_32)(float_64 ((float_64)$18 * (float_64)(CASTING float_64)(int_32 (((int_32)((int_32)$3 * (int_32)((CASTING uint_32)(uint_64 (uint_64)((int_64)$11 * (int_64)21) >> (uint_64)(int_64)31)) + [-10])) / (int_32)[100]) + $3)))
	$3 = ( $3) ? [0] : ((int_32)$3 > (int_32)[0]) 
	*($20 + [12]) = ( $3) ? [10000] : ((int_32)$3 < (int_32)[10000]) )
	$12 = *($0)
	*($20 + [160]) = ($20 + [12])
	CALL eosio_assert($8, [352])
	CALL $570($7, $16, $12, ($20 + [160]))
	$11 = ((uint_64)((int_64)((int_64)$11 * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	$17 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$11 * (int_64)100) >> (uint_64)(int_64)31))
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)[4]) ){ goto $label$36 }
	if ( ((int_32)$3 != (int_32)[5]) ){ goto $label$35 }
	$2 = [3]
	if ( ((uint_32)$17 >= (uint_32)( [100] ? [50] : ((uint_32)$15 > (uint_32)[1]) )) ){ goto $label$37 }
	$11 = ((uint_64)((int_64)((int_64)$11 * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	$2 = ( [5] ? [4] : ((int_32)(CASTING uint_32)(uint_64 (uint_64)((int_64)$11 * (int_64)100) >> (uint_64)(int_64)31)) < (int_32)(CASTING int_32)(float_64 ((float_64)$18 * (float_64)(CASTING float_64)(uint_32 *($6 + [24]))))) )
	
.LABEL $label$37
	$17 = ( $2 ? [5] : ($2 <= [5]) )
	goto $label$28 
	
.LABEL $label$36
	if ( ((int_32)$15 != (int_32)[1]) ){ goto $label$34 }
	$17 = ( [4] ? [3] : ((int_32)$17 < (int_32)(CASTING int_32)(float_64 ((float_64)((float_64)$18 * (float_64)(CASTING float_64)(uint_32 *($6 + [22]))) * (float_64)(float_64)0.7))) )
	goto $label$28 
	
.LABEL $label$35
	$2 = ($3 + [-1])
	$2 = ( $2 ? [1] : ((int_32)$2 > (int_32)[1]) )
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$33 }
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$32 }
	if ( ((int_32)$3 != (int_32)[2]) ){ goto $label$31 }
	$19 = *($6 + [18])
	goto $label$30 
	
.LABEL $label$34
	$18 = ((float_64)$18 * (float_64)(CASTING float_64)(uint_32 *($6 + [22])))
	if ( ((int_32)($15 & [254]) != (int_32)[2]) ){ goto $label$29 }
	$17 = ( [4] ? [3] : ((int_32)$17 < (int_32)(CASTING int_32)(float_64 ((float_64)$18 * (float_64)(float_64)0.8))) )
	goto $label$28 
	
.LABEL $label$33
	$19 = [100]
	goto $label$30 
	
.LABEL $label$32
	$19 = *($6 + [20])
	goto $label$30 
	
.LABEL $label$31
	$19 = [0]
	
.LABEL $label$30
	$17 = (((int_32)$17 < (int_32)(CASTING int_32)(float_64 ((float_64)$18 * (float_64)(CASTING float_64)(uint_32 ($19 & [65535]))))) + $2)
	goto $label$28 
	
.LABEL $label$29
	$17 = ( [4] ? [3] : ((int_32)$17 < (int_32)(CASTING int_32)(float_64 $18)) )
	
.LABEL $label$28
	$15 = [0]
	CALL memset(($20 + [160]), [0], [80])
	$2 = [4]
	$17 = (( [1] ? $17 : ((int_32)$3 == (int_32)[1]) ) + [-1])
	if ( ((uint_32)$17 > (uint_32)[4]) ){ goto $label$44 }
	goto $label$39 
	
.LABEL $label$45
	$15 = [4]
	$2 = [3]
	goto $label$39 
	
.LABEL $label$44
	$2 = [0]
	goto $label$38 
	
.LABEL $label$43
	$3 = ((int_32)$3 == (int_32)[5])
	$15 = ( [8] ? [7] : $3 )
	$2 = ( [1] ? [2] : $3 )
	goto $label$39 
	
.LABEL $label$42
	$15 = [9]
	goto $label$40 
	
.LABEL $label$41
	$15 = [10]
	
.LABEL $label$40
	$2 = [1]
	
.LABEL $label$39
	$3 = (($15 << [3]) + [5904])
	$19 = [0]
	$18 = (float_64)0
	$17 = ($20 + [160])
	
.LOOP $label$46:
	$13 = *($3)
	*($17) = $13
	$17 = ($17 + [8])
	$3 = ($3 + [8])
	$18 = ((float_64)$18 + (float_64)$13)
	$19 = ($19 + [1])
	if ( ((int_32)$19 < (int_32)$2) ){ goto $label$46 }
	$17 = [0]
	$3 = ($20 + [160])
	
.LOOP $label$47:
	*($3) = ((float_64)*($3) / (float_64)$18)
	$3 = ($3 + [8])
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)$2) ){ goto $label$47 }
	
.LABEL $label$38
	$3 = ((($20 + [160]) + ($2 << [3])) + [-8])
	$11 = ((uint_64)((int_64)((int_64)((int_64)$11 & (int_64)4294967295) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	$17 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$11 * (int_64)1000000000) >> (uint_64)(int_64)31))
	
.LOOP $label$50:
	if ( ((int_32)$2 < (int_32)[2]) ){ goto $label$49 }
	$2 = ($2 + [-1])
	$18 = *($3)
	$3 = ($3 + [-8])
	if ( ((int_32)$17 >= (int_32)(CASTING int_32)(float_64 ((float_64)$18 * (float_64)(float_64)1e9))) ){ goto $label$50 }
	goto $label$48 
	
.LABEL $label$49
	$2 = [0]
	
.LABEL $label$48
	$3 = ((((((int_32)(CASTING uint_32)(uint_64 (uint_64)((int_64)((uint_64)((int_64)((int_64)$11 * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647) * (int_64)5) >> (uint_64)(int_64)31)) * (int_32)[20]) | [1]) + $15) + $2) & [65535]
	CALL eosio_assert(((int_32)$3) != (int_32)[0]), [6000])
	$2 = ($0 + [52])
	CALL $228(*($2), $1, $3, [2])
	CALL $571(*($2), *(($14 + [8])), $3, *($20 + [12]))
	$9 = ((int_32)*($20 + [157]) != (int_32)[0])
	
.LABEL $label$21
	$17 = *($20 + [40])
	if ( ($17 == 0) ){ goto $label$51 }
	$19 = ($20 + [44])
	$3 = *($19)
	if ( ((int_32)$3 == (int_32)$17) ){ goto $label$53 }
	
.LOOP $label$54:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$55 }
	CALL $867($2)
	
.LABEL $label$55
	if ( ((int_32)$17 != (int_32)$3) ){ goto $label$54 }
	$3 = *(($20 + [40]))
	goto $label$52 
	
.LABEL $label$53
	$3 = $17
	
.LABEL $label$52
	*($19) = $17
	CALL $867($3)
	
.LABEL $label$51
	$17 = *($20 + [96])
	if ( ($17 == 0) ){ goto $label$56 }
	$19 = ($20 + [100])
	$3 = *($19)
	if ( ((int_32)$3 == (int_32)$17) ){ goto $label$58 }
	
.LOOP $label$59:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$60 }
	CALL $867($2)
	
.LABEL $label$60
	if ( ((int_32)$17 != (int_32)$3) ){ goto $label$59 }
	$3 = *(($20 + [96]))
	goto $label$57 
	
.LABEL $label$58
	$3 = $17
	
.LABEL $label$57
	*($19) = $17
	CALL $867($3)
	
.LABEL $label$56
	$19 = *($20 + [136])
	if ( ($19 == 0) ){ goto $label$61 }
	$0 = ($20 + [140])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$19) ){ goto $label$63 }
	
.LOOP $label$64:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$65 }
	$17 = *($2 + [16])
	if ( ($17 == 0) ){ goto $label$66 }
	*(($2 + [20])) = $17
	CALL $867($17)
	
.LABEL $label$66
	CALL $867($2)
	
.LABEL $label$65
	if ( ((int_32)$19 != (int_32)$3) ){ goto $label$64 }
	$3 = *(($20 + [136]))
	goto $label$62 
	
.LABEL $label$63
	$3 = $19
	
.LABEL $label$62
	*($0) = $19
	CALL $867($3)
	
.LABEL $label$61
	*([0] + [4]) = ($20 + [240])
	$17
	$17
	return $9
}

void .FUNC $560 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [192])
	*([0] + [4]) = $6
	*($6 + [184]) = $1
	*($6 + [182]) = $2
	CALL require_auth($1)
	CALL $269(($6 + [168]), *($0 + [60]), $1, [1])
	$4 = *($6 + [168])
	*($6 + [160]) = $4
	*($6) = $4
	CALL $561($0, $1, $2, [1], [0], $6)
	$4 = CALL $91(*($0 + [60]))
	*($6 + [152]) = $4
	$2 = *($0 + [60])
	CALL $883(($6 + [80]), $3)
	CALL $92(($6 + [96]), $2, $4, $1, ($6 + [80]), ($6 + [112]))
	if ( ((*($6 + [80]) & [1]) == 0) ){ goto $label$1 }
	CALL $867(*($6 + [88]))
	
.LABEL $label$1
	*(($6 + [72])) = [0]
	*($6 + [56]) = (int_64)-1
	*($6 + [64]) = (int_64)0
	$1 = *($0)
	*($6 + [40]) = $1
	*($6 + [48]) = $1
	*($6 + [24]) = $3
	*($6 + [20]) = ($6 + [184])
	*($6 + [16]) = ($6 + [152])
	*($6 + [28]) = ($6 + [96])
	*($6 + [32]) = ($6 + [112])
	*($6 + [36]) = ($6 + [182])
	CALL $562(($6 + [8]), ($6 + [40]), $1, ($6 + [16]))
	CALL $95(*(($0 + [60])), *($6 + [184]), *($6 + [152]))
	$2 = *($6 + [64])
	if ( ($2 == 0) ){ goto $label$2 }
	$5 = (($6 + [40]) + [28])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	if ( ((*($0 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL $867(*(($0 + [40])))
	
.LABEL $label$7
	if ( ((*($0 + [20]) & [1]) == 0) ){ goto $label$8 }
	CALL $867(*(($0 + [28])))
	
.LABEL $label$8
	CALL $867($0)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$5 }
	$0 = *(($6 + [64]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($5) = $2
	CALL $867($0)
	
.LABEL $label$2
	if ( ((*($6 + [96]) & [1]) == 0) ){ goto $label$9 }
	CALL $867(*($6 + [104]))
	
.LABEL $label$9
	*([0] + [4]) = ($6 + [192])
}

int_32 .FUNC $567 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([40]))) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = [0]
	*($6 + [28]) = $0
	CALL $578(($8 + [32]), $6)
	*($6 + [32]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [32])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $579(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $566 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $866([40])
	$6 = CALL $580($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [32])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $581(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [16])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [20])) = $7
	CALL $867($7)
	
.LABEL $label$10
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_64 .FUNC $565 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	float_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	$3 = *($0)
	*($6 + [8]) = $3
	*($6 + [16]) = $3
	*($6 + [32]) = (int_64)0
	$5 = (float_64)1
	$0 = CALL db_lowerbound_i64($3, $3, (int_64)7235159542483386368, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	CALL $585(($6 + [8]), $0)
	$0 = CALL $585(($6 + [8]), CALL $fimport$25(*($6 + [8]), *(($6 + [16])), (int_64)7235159542483386368, (int_64)0))
	$2 = *($0 + [16])
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = (CASTING uint_32)(float_64 ((float_64)(CASTING float_64)(uint_64 *($0 + [8])) / (float_64)(CASTING float_64)(uint_32 $2)))
	if ( ((uint_32)$0 > (uint_32)[1000]) ){ goto $label$3 }
	$5 = ((float_64)((float_64)(CASTING float_64)(uint_32 ((uint_32)$0 / (uint_32)[100])) * (float_64)(float_64)-0.02) + (float_64)(float_64)1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$0 > (uint_32)[2000]) ){ goto $label$4 }
	$5 = ((float_64)((float_64)(CASTING float_64)(uint_32 ((uint_32)($0 + [-1000]) / (uint_32)[100])) * (float_64)(float_64)-0.017) + (float_64)(float_64)0.8)
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$0 > (uint_32)[3000]) ){ goto $label$5 }
	$5 = ((float_64)((float_64)(CASTING float_64)(uint_32 ((uint_32)($0 + [-2000]) / (uint_32)[100])) * (float_64)(float_64)-0.014) + (float_64)(float_64)0.63)
	goto $label$2 
	
.LABEL $label$5
	if ( ((uint_32)$0 > (uint_32)[4000]) ){ goto $label$6 }
	$5 = ((float_64)((float_64)(CASTING float_64)(uint_32 ((uint_32)($0 + [-3000]) / (uint_32)[100])) * (float_64)(float_64)-0.011) + (float_64)(float_64)0.49)
	goto $label$2 
	
.LABEL $label$6
	if ( ((uint_32)$0 > (uint_32)[5000]) ){ goto $label$7 }
	$5 = ((float_64)((float_64)(CASTING float_64)(uint_32 ((uint_32)($0 + [-4000]) / (uint_32)[100])) * (float_64)(float_64)-0.008) + (float_64)(float_64)0.38)
	goto $label$2 
	
.LABEL $label$7
	if ( ((uint_32)$0 > (uint_32)[6000]) ){ goto $label$8 }
	$5 = ((float_64)((float_64)(CASTING float_64)(uint_32 ((uint_32)($0 + [-5000]) / (uint_32)[100])) * (float_64)(float_64)-0.005) + (float_64)(float_64)0.3)
	goto $label$2 
	
.LABEL $label$8
	$5 = (float_64)1
	if ( ((uint_32)$0 > (uint_32)[7000]) ){ goto $label$2 }
	$5 = ((float_64)((float_64)(CASTING float_64)(uint_32 ((uint_32)($0 + [-6000]) / (uint_32)[100])) * (float_64)(float_64)-0.002) + (float_64)(float_64)0.25)
	
.LABEL $label$2
	$5 = max ( (float_64)$5 , (float_64)(float_64)0.23 )
	
.LABEL $label$1
	$1 = *($6 + [32])
	if ( ($1 == 0) ){ goto $label$9 }
	$4 = ($6 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $867($2)
	
.LABEL $label$13
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($6 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $1
	
.LABEL $label$10
	*($4) = $1
	CALL $867($0)
	
.LABEL $label$9
	*([0] + [4]) = ($6 + [48])
	return $5
}

void .FUNC $564 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [592])
	*([0] + [4]) = $11
	$2 = CALL read_transaction(($11 + [80]), [512])
	*($11 + [72]) = (($11 + [80]) + $2)
	*($11 + [68]) = ($11 + [80])
	*($11 + [64]) = ($11 + [80])
	$8 = CALL current_time()
	*(($11 + [28])) = [0]
	*(($11 + [32])) = [0]
	*($11 + [12]) = [0]
	*($11 + [16]) = [0]
	*($11 + [20]) = [0]
	*($11 + [24]) = [0]
	*($11) = ((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) + [60])
	*($11 + [36]) = [0]
	*(($4 = ($11 + [40]))) = [0]
	*(($11 + [44])) = [0]
	*($11 + [48]) = [0]
	*(($11 + [52])) = [0]
	*(($11 + [56])) = [0]
	CALL $587(($11 + [64]), $11)
	$5 = ($11 + [36])
	CALL $589(CALL $588(CALL $588(($11 + [64]), ($11 + [24])), $5), ($11 + [48]))
	CALL eosio_assert(((int_32)((int_32)(*($4) - *($11 + [36])) / (int_32)[40]) == (int_32)$1), [6080])
	$4 = [1]
	$6 = ((int_32)($1 + [-1]) * (int_32)[40])
	$3 = *((*($11 + [36]) + $6))
	if ( ((int_64)$3 == (int_64)*($0)) ){ goto $label$1 }
	$8 = (int_64)0
	$7 = (int_64)59
	$1 = [6128]
	$9 = (int_64)0
	
.LOOP $label$2:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$3 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$3
	$1 = ($1 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$2 }
	$4 = [1]
	if ( ((int_64)$3 == (int_64)$9) ){ goto $label$1 }
	$8 = (int_64)0
	$7 = (int_64)59
	$1 = [6144]
	$9 = (int_64)0
	
.LOOP $label$6:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$7 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$4 = ($4 + [165])
	goto $label$8 
	
.LABEL $label$9
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$7
	$1 = ($1 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$6 }
	$4 = ((int_64)$3 == (int_64)$9)
	
.LABEL $label$1
	CALL eosio_assert($4, [6160])
	*($0 + [172]) = CALL _ZN13admin_control18calculate_trx_hashEPci($1, ($11 + [80]), $2)
	*($0 + [176]) = *((*($5) + $6))
	CALL $533($11)
	*([0] + [4]) = ($11 + [592])
}

int_32 .FUNC $569 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([40]))) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = [0]
	*($6 + [28]) = $0
	CALL $575(($8 + [32]), $6)
	*($6 + [32]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [32])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $576(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $568 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$5 = (*([0] + [4]) - [48])
	$12 = $5
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$11 = $4
	$10 = *($1 + [16])
	$6 = ($1 + [20])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$1 }
	$8 = int_32(($9 - $10) >> [4])
	$9 = [0]
	$7 = (*(*($3)) & [65535])
	
.LOOP $label$3:
	if ( ((int_32)*($10) == (int_32)$7) ){ goto $label$2 }
	$10 = ($10 + [16])
	$9 = ($9 + [1])
	if ( ($9 <= $8) ){ goto $label$3 }
	$11 = $4
	goto $label$1 
	
.LABEL $label$2
	$9 = ($10 + [12])
	CALL eosio_assert(((int_32)*($9) ^ (int_32)[1]), [6032])
	$10 = ($10 + [8])
	CALL eosio_assert((*($10) <= *(*($3 + [8]))), [6048])
	if ( *(*($3 + [12])) ){ goto $label$4 }
	*($9) = [1]
	*($10) = (*(*($3 + [16])) + *(*(($3 + [8]))))
	
.LABEL $label$4
	*(*($3 + [20])) = [1]
	$11 = *($1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)$11), [512])
	$9 = [16]
	$7 = *(($1 + [16]))
	$10 = *($6)
	$8 = ($10 - $7)
	$11 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$5:
	$9 = ($9 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$7 == (int_32)$10) ){ goto $label$6 }
	$9 = ((((int_32)uint_32(($8 + [-16]) >> [4]) * (int_32)[11]) + $9) + [11])
	
.LABEL $label$6
	if ( ($9 <= [513]) ){ goto $label$8 }
	$3 = CALL malloc($9)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($5 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$7
	*($12 + [8]) = $3
	$5 = ($3 + $9)
	*($12 + [16]) = $5
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [576])
	CALL memcpy($3, $1, [8])
	$10 = ($3 + [8])
	CALL eosio_assert(((int_32)($5 - $10) > (int_32)[3]), [576])
	CALL memcpy($10, ($1 + [8]), [4])
	$10 = ($3 + [12])
	CALL eosio_assert(((int_32)($5 - $10) > (int_32)[3]), [576])
	CALL memcpy($10, ($1 + [12]), [4])
	$10 = ($3 + [16])
	*($12 + [12]) = $10
	$11 = (CASTING uint_64)(uint_32 int_32((*(($1 + [20])) - *(($1 + [16]))) >> [4]))
	
.LOOP $label$9:
	$7 = (CASTING uint_32)(uint_64 $11)
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	$8 = ((int_64)$11) != (int_64)0
	*($12 + [32]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)($5 - $10) > (int_32)[0]), [576])
	CALL memcpy($10, ($12 + [32]), [1])
	$10 = ($10 + [1])
	*($12 + [12]) = $10
	if ( $8 ){ goto $label$9 }
	$7 = *(($1 + [20]))
	$10 = *(($1 + [16]))
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$11:
	*($12 + [24]) = ($12 + [8])
	*($12 + [32]) = $10
	*((($12 + [32]) + [8])) = ($10 + [8])
	*((($12 + [32]) + [12])) = ($10 + [12])
	*($12 + [36]) = ($10 + [4])
	CALL $577(($12 + [32]), ($12 + [24]))
	$10 = ($10 + [16])
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$11 }
	
.LABEL $label$10
	CALL db_update_i64(*($1 + [32]), $2, $3, $9)
	if ( ($9 <= [513]) ){ goto $label$12 }
	CALL free($3)
	
.LABEL $label$12
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*([0] + [4]) = ($12 + [48])
}

void .FUNC $398 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$3 = ((int_32)($5 - $4) / (int_32)[20])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[214748365]) ){ goto $label$2 }
	$6 = [214748364]
	$2 = ((int_32)(*($0 + [8]) - $4) / (int_32)[20])
	if ( ((uint_32)$2 > (uint_32)[107374181]) ){ goto $label$4 }
	$6 = ($2 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $866(((int_32)$6 * (int_32)[20]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	*(($3 = ($7 + ((int_32)$3 * (int_32)[20])))) = *($1)
	*(($3 + [16])) = *(($1 + [16]))
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($5 - $4)
	$5 = ($3 + ((int_32)((int_32)$1 / (int_32)[-20]) * (int_32)[20]))
	$6 = ($7 + ((int_32)$6 * (int_32)[20]))
	$3 = ($3 + [20])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($5, $4, $1)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $5
	*(($0 + [4])) = $3
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $867($4)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $399 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	*($5 + [62]) = $1
	*($5 + [60]) = $2
	*(($5 + [48])) = [0]
	*($5 + [32]) = (int_64)-1
	*($5 + [40]) = (int_64)0
	$3 = *($0)
	*($5 + [16]) = $3
	*($5 + [24]) = $3
	$1 = CALL db_find_i64($3, $3, (int_64)8526770281144909824, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL $403(($5 + [16]), $1)
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)($5 + [16])), [32])
	$3 = *($0)
	*($5 + [8]) = ($5 + [60])
	CALL eosio_assert([1], [352])
	CALL $404(($5 + [16]), $1, $3, ($5 + [8]))
	$2 = *($5 + [40])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$3 = *($0)
	*($5 + [12]) = ($5 + [60])
	*($5 + [8]) = ($5 + [62])
	CALL $402($5, ($5 + [16]), $3, ($5 + [8]))
	$2 = *($5 + [40])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = ($5 + [44])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $867($0)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$6 }
	$1 = *(($5 + [40]))
	goto $label$4 
	
.LABEL $label$5
	$1 = $2
	
.LABEL $label$4
	*($4) = $2
	CALL $867($1)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [64])
}

void .FUNC $648 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $649 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	CALL require_auth($1)
	$3 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*(($6 + [36])) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-7949128880453320704, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $349($5, $7)
	CALL eosio_assert(((int_32)*($6 + [36]) == (int_32)$5), [32])
	
.LABEL $label$3
	$7 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($7, [2656])
	CALL $650(*($0 + [96]), $1, $2)
	CALL eosio_assert($7, [2224])
	CALL eosio_assert($7, [960])
	$7 = CALL db_next_i64(*($6 + [40]), ($8 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	CALL $349($5, $7)
	
.LABEL $label$5
	CALL $358($5, $6)
	CALL $651($0, $1)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $390 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $866([40])
	$6 = CALL $393($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $394(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $643 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = [0]
	$4 = *($1)
	*($1 + [12]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($1 + [8]), [4])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [12]), ($1 + [12]), [4])
	CALL db_update_i64(*($1 + [20]), $2, $5, [16])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $392 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*(($1 + [44])) == (int_32)$0), [2272])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [2320])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2384])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $867($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $867($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [48]))
}

int_32 .FUNC $393 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1397703940
	CALL eosio_assert([1], [1248])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	*($0 + [24]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

void .FUNC $394 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $395 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = *($0 + [4])
	*($1) = *(*(*($4) + [4]) + [32])
	$2 = *($0)
	$4 = *($4 + [4])
	*($1 + [8]) = *($4)
	*(($5 = ($1 + [16]))) = *(($4 + [8]))
	CALL eosio_assert([1], [576])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 + [16]), $5, [8])
	$3 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)8526768601532727296, *(*($0 + [8])), $3, $6, [24])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $396 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([40]))) = (int_64)0
	*($3 + [12 align=4]) = (int_64)0
	*($3 + [20]) = [0]
	*($3 + [24]) = $1
	CALL $407(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [28])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $408(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [12])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [16])) = $1
	CALL $867($1)
	
.LABEL $label$4
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $397 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	$11 = $12
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*(*($3)) = (*($1 + [8]) + [1])
	$6 = *($3 + [12])
	$4 = *($1)
	*($1) = *(*($3 + [4]))
	*($1 + [8]) = *(*($3))
	$10 = *($3)
	$7 = ($1 + [16])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)*(($1 + [20]))) ){ goto $label$2 }
	*($5) = *($10)
	*(($5 + [16])) = *(($10 + [16]))
	*(($5 + [8])) = *(($10 + [8]))
	*($7) = (*($7) + [20])
	goto $label$1 
	
.LABEL $label$2
	CALL $398(($1 + [12]), $10)
	
.LABEL $label$1
	if ( ((int_32)*(*($3 + [8])) != (int_32)[1]) ){ goto $label$3 }
	CALL $399(*($6 + [60]), *(*($3 + [16])), [1])
	
.LABEL $label$3
	$5 = ($1 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$7 = ($1 + [12])
	$6 = *($1 + [12])
	$10 = *(($1 + [16]))
	$8 = ($10 - $6)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[20]))
	$3 = [29]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$6 }
	$10 = (((int_32)((uint_32)($8 + [-20]) / (uint_32)[20]) * (int_32)[17]) + $3)
	goto $label$5 
	
.LABEL $label$6
	$10 = ($3 + [-17])
	
.LABEL $label$5
	if ( ($10 <= [513]) ){ goto $label$8 }
	$3 = CALL malloc($10)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($12 - (($10 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$7
	*($11) = $3
	$12 = ($3 + $10)
	*($11 + [8]) = $12
	CALL eosio_assert(((int_32)$10 > (int_32)[7]), [576])
	CALL memcpy($3, $1, [8])
	$6 = ($3 + [8])
	CALL eosio_assert(((int_32)($12 - $6) > (int_32)[3]), [576])
	CALL memcpy($6, $5, [4])
	*($11 + [4]) = ($3 + [12])
	CALL $400($11, $7)
	CALL db_update_i64(*($1 + [28]), $2, $3, $10)
	if ( ($10 <= [513]) ){ goto $label$9 }
	CALL free($3)
	
.LABEL $label$9
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $653 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [112])
	*([0] + [4]) = $16
	CALL require_auth($1)
	CALL _ZN13admin_control15check_blacklistEN5eosio4nameE(*($0 + [108]), $1)
	CALL $269(($16 + [72]), *($0 + [108]), $1, [1])
	$13 = *($16 + [76])
	$14 = *($13 + [32])
	$13 = *($13 + [36])
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$17() / (uint_64)(int_64)1000000)) - *([0] + [12])) >= (uint_32)($14 + (CASTING int_32)(float_64 ((float_64)((float_64)(CASTING float_64)(uint_32 $13) / (float_64)(float_64)100) * (float_64)(float_64)10)))), [6912])
	$6 = *(($7 + [32]))
	$7 = *($0 + [96])
	$15 = *(($7 + [36]))
	if ( ((int_32)$15 == (int_32)$6) ){ goto $label$1 }
	$13 = ($15 + [-24])
	$8 = ([0] - $6)
	
.LOOP $label$2:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$1 }
	$15 = $13
	$14 = ($13 + [-24])
	$13 = $14
	if ( ((int_32)($14 + $8) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$13 = ($7 + [8])
	if ( ((int_32)$15 == (int_32)$6) ){ goto $label$6 }
	$14 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$13), [32])
	if ( $14 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$14 = CALL db_find_i64(*(($7 + [8])), *(($7 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$4 }
	$14 = CALL $227($13, $14)
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$13), [32])
	
.LABEL $label$5
	$11 = ($14 + [12])
	goto $label$3 
	
.LABEL $label$4
	$11 = ($7 + [112])
	
.LABEL $label$3
	$4 = *(($0 + [96]))
	$5 = *($11)
	$13 = (*($11 + [4]) - $5)
	if ( ((int_32)$13 < (int_32)[12]) ){ goto $label$8 }
	$14 = (CASTING uint_32)(uint_64 $2)
	$15 = (((uint_32)$13 / (uint_32)[12]) + [-1])
	$13 = [0]
	
.LOOP $label$9:
	$6 = ($15 - $13)
	$8 = (((int_32)$6 / (int_32)[2]) + $13)
	$12 = ($5 + ((int_32)$8 * (int_32)[12]))
	$7 = *($12)
	if ( ($7 <= $14) ){ goto $label$10 }
	if ( ((uint_32)$7 <= (uint_32)$14) ){ goto $label$7 }
	$15 = ($8 + [-1])
	if ( ((int_32)$6 > (int_32)[1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$13 = ($8 + [1])
	if ( ((int_32)$15 > (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$8
	CALL eosio_assert([0], [6944])
	$12 = ($4 + [124])
	
.LABEL $label$7
	CALL eosio_assert((*($12 + [8]) == 0), [6976])
	$14 = [0]
	*(($16 + [104])) = [0]
	*($16 + [96]) = (int_64)0
	*($16 + [88]) = (int_64)-1
	$9 = *($0)
	*($16 + [72]) = $9
	*($16 + [80]) = $9
	$13 = [0]
	$15 = CALL db_find_i64($9, $9, (int_64)-4860070093188497408, *($12 + [4]))
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$11 }
	$13 = CALL $229(($16 + [72]), $15)
	CALL eosio_assert(((int_32)*($13 + [20]) == (int_32)($16 + [72])), [32])
	
.LABEL $label$11
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [6992])
	$10 = *(($3 + [8]))
	*((($16 + [56]) + [8])) = $10
	$13 = *($13 + [9])
	$9 = *($3)
	*((($16 + [24]) + [8])) = $10
	*($16 + [56]) = $9
	*($16 + [24]) = $9
	CALL $654($0, ($16 + [24]), $13, [1])
	$15 = *($11)
	$8 = *(($11 + [4]))
	if ( ((int_32)$8 == (int_32)$15) ){ goto $label$12 }
	$13 = ($15 + [8])
	$8 = ((int_32)($8 - $15) / (int_32)[12])
	$14 = [0]
	$15 = [0]
	
.LOOP $label$13:
	$14 = (((int_32)*($13) != (int_32)[0]) + $14)
	$13 = ($13 + [12])
	$15 = ($15 + [1])
	if ( ($15 <= $8) ){ goto $label$13 }
	
.LABEL $label$12
	$5 = *(($6 + [40]))
	$6 = *($0 + [104])
	$8 = *(($6 + [44]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$14 }
	$13 = ($8 + [-24])
	$7 = ([0] - $5)
	
.LOOP $label$15:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$14 }
	$8 = $13
	$15 = ($13 + [-24])
	$13 = $15
	if ( ((int_32)($15 + $7) != (int_32)[-24]) ){ goto $label$15 }
	
.LABEL $label$14
	$13 = ($6 + [16])
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$17 }
	CALL eosio_assert(((int_32)*(*(($8 + [-24])) + [20]) == (int_32)$13), [32])
	goto $label$16 
	
.LABEL $label$17
	$15 = CALL db_find_i64(*(($6 + [16])), *(($6 + [24])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$16 }
	CALL eosio_assert(((int_32)*(CALL $225($13, $15) + [20]) == (int_32)$13), [32])
	
.LABEL $label$16
	CALL eosio_assert(((int_32)$14 < (int_32)CALL $655($0, $1)), [7024])
	$13 = *(($12 + [4]))
	*(($14 = (($16 + [40]) + [8]))) = *(($3 + [8]))
	*($16 + [40]) = *($3)
	*((($16 + [8]) + [8])) = *($14)
	*($16 + [8]) = *($16 + [40])
	*($16 + [12]) = *($16 + [44])
	$9 = CALL $656($0, $13, ($16 + [8]), $1)
	CALL $657(*(($0 + [96])), $1, $2, $9)
	$15 = *($16 + [96])
	if ( ($15 == 0) ){ goto $label$18 }
	$8 = ($16 + [100])
	$13 = *($8)
	if ( ((int_32)$13 == (int_32)$15) ){ goto $label$20 }
	
.LOOP $label$21:
	$13 = ($13 + [-24])
	$14 = *($13)
	*($13) = [0]
	if ( ($14 == 0) ){ goto $label$22 }
	CALL $867($14)
	
.LABEL $label$22
	if ( ((int_32)$15 != (int_32)$13) ){ goto $label$21 }
	$13 = *(($16 + [96]))
	goto $label$19 
	
.LABEL $label$20
	$13 = $15
	
.LABEL $label$19
	*($8) = $15
	CALL $867($13)
	
.LABEL $label$18
	*([0] + [4]) = ($16 + [112])
}

int_32 .FUNC $859 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($3 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1120])
	return $0
}

void .FUNC $858 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$5 = *($0 + [8])
	if ( ((uint_32)int_32(($5 - $6) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$2 = int_32(($6 - $4) >> [4])
	$3 = ($2 + $1)
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$4 }
	$6 = [268435455]
	$5 = ($5 - $4)
	if ( ((uint_32)int_32($5 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$6 = int_32($5 >> [3])
	$6 = ( $3 ? $6 : ($6 <= $3) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$5 = CALL $866(($6 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$5 = ($0 + [4])
	
.LOOP $label$8:
	*(($0 = ($6 + [8]))) = (int_64)0
	*($6) = (int_64)0
	*($0) = [0]
	$6 = (*($5) + [16])
	*($5) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$5 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $882($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$3 = ($5 + ($6 << [4]))
	$4 = ($5 + ($2 << [4]))
	$6 = $4
	
.LOOP $label$9:
	*(($5 = ($6 + [8]))) = (int_64)0
	*($6) = (int_64)0
	*($5) = [0]
	$6 = ($6 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$2 = ($0 + [4])
	$5 = (*($2) - $1)
	$4 = ($4 - $5)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($4, $1, $5)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $4
	*($2) = $6
	*(($0 + [8])) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $867($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $857 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [592])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $858($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$3 = *($4)
	
.LOOP $label$6:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [160])
	CALL memcpy($7, *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	CALL eosio_assert(((int_32)*($6) != (int_32)$3), [160])
	CALL memcpy(($7 + [8]), *($4), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	CALL eosio_assert(((int_32)*($6) != (int_32)$3), [160])
	CALL memcpy(($8 + [15]), *($4), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	*(($7 + [9])) = ((int_32)*($8 + [15]) != (int_32)[0])
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $856 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [160])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [160])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [160])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [160])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [28])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($2, *($0 + [4]), [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]), [160])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $855 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)int_32(($8 - $2) >> [6]) >= (uint_32)$1) ){ goto $label$6 }
	$7 = *($0)
	$6 = int_32(($2 - $7) >> [6])
	$5 = ($6 + $1)
	if ( ((uint_32)$5 >= (uint_32)[67108864]) ){ goto $label$4 }
	$2 = [67108863]
	$8 = ($8 - $7)
	if ( ((uint_32)int_32($8 >> [6]) > (uint_32)[33554430]) ){ goto $label$7 }
	$2 = int_32($8 >> [5])
	$2 = ( $5 ? $2 : ($2 <= $5) )
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((uint_32)$2 >= (uint_32)[67108864]) ){ goto $label$3 }
	
.LABEL $label$7
	$8 = CALL $866(($2 << [6]))
	goto $label$2 
	
.LABEL $label$6
	$8 = ($0 + [4])
	
.LOOP $label$8:
	$2 = CALL memset($2, [0], [64])
	CALL $859($2)
	*($2 + [48]) = [0]
	*($2 + [52 align=4]) = (int_64)0
	*(($2 + [60])) = [0]
	$2 = (*($8) + [64])
	*($8) = $2
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$2 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $882($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$3 = ($8 + ($2 << [6]))
	$8 = ($8 + ($6 << [6]))
	$7 = $8
	
.LOOP $label$9:
	$2 = CALL memset($7, [0], [64])
	CALL $859($2)
	*($2 + [48]) = [0]
	*($2 + [52 align=4]) = (int_64)0
	*(($2 + [60])) = [0]
	$7 = ($2 + [64])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$11 }
	$4 = ([0] - $2)
	$2 = ($1 + [-64])
	
.LOOP $label$12:
	CALL memcpy(($8 + [-64]), $2, [50])
	*(($1 = ($8 + [-12]))) = (int_64)0
	*(($5 = ($8 + [-4]))) = [0]
	$6 = ($2 + [52])
	*($1) = *($6)
	*(($8 + [-8])) = *(($2 + [56]))
	$1 = ($2 + [60])
	*($5) = *($1)
	*($1) = [0]
	*($6) = (int_64)0
	$8 = ($8 + [-64])
	$2 = ($2 + [-64])
	if ( ((int_32)($2 + $4) != (int_32)[-64]) ){ goto $label$12 }
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$10 
	
.LABEL $label$11
	$5 = $2
	
.LABEL $label$10
	*($0) = $8
	*(($0 + [4])) = $7
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$13 }
	$8 = ([0] - $5)
	$2 = ($2 + [-12])
	
.LOOP $label$14:
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$15 }
	*(($2 + [4])) = $1
	CALL $867($1)
	
.LABEL $label$15
	$2 = ($2 + [-64])
	if ( ((int_32)($2 + $8) != (int_32)[-12]) ){ goto $label$14 }
	
.LABEL $label$13
	if ( ($5 == 0) ){ goto $label$1 }
	CALL $867($5)
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $652 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [16])
	$12 = $13
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$10 = [12]
	$5 = ($1 + [12])
	$4 = *($1)
	$9 = *($1 + [12])
	$7 = ($1 + [16])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$8 = ($9 + [8])
	$6 = ((int_32)($6 - $9) / (int_32)[12])
	$11 = *(*($3))
	$9 = [0]
	
.LOOP $label$3:
	if ( ((int_64)*($8) == (int_64)$11) ){ goto $label$2 }
	$8 = ($8 + [12])
	$9 = ($9 + [1])
	if ( ($9 <= $6) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($8) = [0]
	*(*($3 + [4])) = [1]
	
.LABEL $label$1
	CALL eosio_assert([1], [512])
	$9 = *($5)
	$8 = *($7)
	$6 = ($8 - $9)
	$11 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[12]))
	
.LOOP $label$4:
	$10 = ($10 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$5 }
	$10 = ((((int_32)((uint_32)($6 + [-12]) / (uint_32)[12]) * (int_32)[10]) + $10) + [10])
	
.LABEL $label$5
	if ( ($10 <= [513]) ){ goto $label$7 }
	$8 = CALL malloc($10)
	goto $label$6 
	
.LABEL $label$7
	$8 = ($13 - (($10 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$6
	*($12) = $8
	$9 = ($8 + $10)
	*($12 + [8]) = $9
	CALL eosio_assert(((int_32)$10 > (int_32)[7]), [576])
	CALL memcpy($8, $1, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($9 - $6) > (int_32)[3]), [576])
	CALL memcpy($6, ($1 + [8]), [4])
	*($12 + [4]) = ($8 + [12])
	CALL $244($12, $5)
	CALL db_update_i64(*($1 + [28]), $2, $8, $10)
	if ( ($10 <= [513]) ){ goto $label$8 }
	CALL free($8)
	
.LABEL $label$8
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($12 + [16])
}

void .FUNC $853 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($8 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$6 = [178956970]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 > (uint_32)[89478484]) ){ goto $label$4 }
	$6 = ($5 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $866(((int_32)$6 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*(($1 = ($5 + ((int_32)$8 * (int_32)[24])))) = $7
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$7 = ($5 + ((int_32)$6 * (int_32)[24]))
	$4 = ($1 + [24])
	$2 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = ($6 + [-24])
	$3 = *($5)
	*($5) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $5
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$8 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$8 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $4
	*(($0 + [8])) = $7
	if ( ((int_32)$2 == (int_32)$8) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	$0 = *($3 + [20])
	if ( ($0 == 0) ){ goto $label$11 }
	$7 = ($3 + [24])
	$1 = *($7)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$13 }
	$5 = ([0] - $0)
	$1 = ($1 + [-12])
	
.LOOP $label$14:
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$15 }
	*(($1 + [4])) = $6
	CALL $867($6)
	
.LABEL $label$15
	$1 = ($1 + [-64])
	if ( ((int_32)($1 + $5) != (int_32)[-12]) ){ goto $label$14 }
	$1 = *(($3 + [20]))
	goto $label$12 
	
.LABEL $label$13
	$1 = $0
	
.LABEL $label$12
	*($7) = $0
	CALL $867($1)
	
.LABEL $label$11
	CALL $867($3)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($8 == 0) ){ goto $label$16 }
	CALL $867($8)
	
.LABEL $label$16
	(unreachable)
}

int_32 .FUNC $852 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $854($0, ($1 + [20]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	return *($0 + [4]) = (*($0 + [4]) + [4])
}

int_32 .FUNC $851 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [576])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [576])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [576])
	CALL memcpy(*($3), ($6 + [8]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	*($7 + [14]) = *(($6 + [9]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [576])
	CALL memcpy(*($3), ($7 + [14]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $850 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($2 + [4]), $3, [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($2 + [4]), $3, [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($2 + [4]), $3, [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [28])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $2, [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	CALL eosio_assert(((int_32)(*($0 + [8]) - $1) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $365 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($3 = ($0 + [24]))) = (int_64)1397703940
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	return $0
}

void .FUNC $364 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	$6 = *($0 + [4])
	*($1) = *(*($6))
	$7 = *($6 + [4])
	CALL eosio_assert(((int_64)*(($7 + [48])) == (int_64)*(($1 + [16]))), [3504])
	$5 = ((int_64)*($1 + [8]) + (int_64)*($7 + [40]))
	*($1 + [8]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [3584])
	*($1 + [56]) = [1]
	$7 = *($6 + [4])
	$6 = ($1 + [72])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)*(($1 + [76]))) ){ goto $label$2 }
	CALL memcpy($4, $7, [64])
	$7 = (*($6) + [64])
	*($6) = $7
	$4 = ($1 + [68])
	goto $label$1 
	
.LABEL $label$2
	$4 = ($1 + [68])
	CALL $363($4, $7)
	$7 = *($6)
	
.LABEL $label$1
	$4 = *($4)
	$3 = ($7 - $4)
	$5 = (CASTING uint_64)(uint_32 int_32($3 >> [6]))
	$6 = [66]
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$4 }
	$6 = ((((int_32)uint_32(($3 + [-64]) >> [6]) * (int_32)[42]) + $6) + [42])
	
.LABEL $label$4
	$4 = *($1 + [80])
	$7 = *(($1 + [84]))
	$3 = ($7 - $4)
	$5 = (CASTING uint_64)(uint_32 ((int_32)$3 / (int_32)[56]))
	
.LOOP $label$5:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$6 }
	$6 = ((((int_32)((uint_32)($3 + [-56]) / (uint_32)[56]) * (int_32)[41]) + $6) + [41])
	
.LABEL $label$6
	if ( ($6 <= [513]) ){ goto $label$8 }
	$7 = CALL malloc($6)
	goto $label$7 
	
.LABEL $label$8
	$7 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$7
	*($8 + [4]) = $7
	*($8) = $7
	*($8 + [8]) = ($7 + $6)
	CALL $328($8, $1)
	$5 = *($1)
	*($1 + [96]) = CALL db_store_i64(*($2 + [8]), (int_64)-4992616317627400192, *(*($0 + [8])), $5, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$9 }
	CALL free($7)
	
.LABEL $label$9
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$10 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $367 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $366 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $361 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [92]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	CALL $362($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$6 = *($1 + [68])
	$5 = *(($1 + [72]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [6]))
	$3 = [66]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = ((((int_32)uint_32(($7 + [-64]) >> [6]) * (int_32)[42]) + $3) + [42])
	
.LABEL $label$2
	$6 = *($1 + [80])
	$5 = *(($1 + [84]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[56]))
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$3 = ((((int_32)((uint_32)($7 + [-56]) / (uint_32)[56]) * (int_32)[41]) + $3) + [41])
	
.LABEL $label$4
	if ( ($3 <= [513]) ){ goto $label$6 }
	$9 = CALL malloc($3)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$5
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL $328($10, $1)
	CALL db_update_i64(*($1 + [96]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL free($9)
	
.LABEL $label$7
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $360 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $866([104])
	CALL $334($3)
	*($3 + [92]) = $1
	CALL $364(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [96])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $336(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	$3 = *($1 + [80])
	if ( ($3 == 0) ){ goto $label$4 }
	*(($1 + [84])) = $3
	CALL $867($3)
	
.LABEL $label$4
	$3 = *($1 + [68])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($1 + [72])) = $3
	CALL $867($3)
	
.LABEL $label$5
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $363 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$2 = int_32(($6 - $5) >> [6])
	$7 = ($2 + [1])
	if ( ((uint_32)$7 >= (uint_32)[67108864]) ){ goto $label$3 }
	$4 = [67108863]
	$3 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($3 >> [6]) > (uint_32)[33554430]) ){ goto $label$5 }
	$4 = int_32($3 >> [5])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[67108864]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $866(($4 << [6]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$6 = ($6 - $5)
	$2 = CALL memcpy(($7 + ($2 << [6])), $1, [64])
	$1 = ($2 - $6)
	$4 = ($7 + ($4 << [6]))
	$7 = ($2 + [64])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $867($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $362 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = *($1 + [68])
	$6 = ($1 + [72])
	$2 = *($6)
	if ( (int_32(($2 - $3) >> [6]) <= [5]) ){ goto $label$1 }
	$4 = ($3 + [64])
	$5 = ($2 - $4)
	$2 = int_32($5 >> [6])
	if ( ($2 == 0) ){ goto $label$2 }
	CALL memmove($3, $4, $5)
	
.LABEL $label$2
	*(($1 + [72])) = ($3 + ($2 << [6]))
	
.LABEL $label$1
	$3 = *($0)
	CALL eosio_assert(((int_64)*(($3 + [48])) == (int_64)*(($1 + [16]))), [3504])
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3 + [40]))
	*($1 + [8]) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [3584])
	*($1 + [56]) = (*($1 + [56]) + [1])
	$0 = *($0)
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)*(($1 + [76]))) ){ goto $label$3 }
	CALL memcpy($3, $0, [64])
	*(($1 = ($1 + [72]))) = (*($1) + [64])
	return 
	
.LABEL $label$3
	CALL $363(($1 + [68]), $0)
}

int_32 .FUNC $246 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [160])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $256(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $247 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$5 = ((int_64)*($1 + [8]) + (int_64)*(*($3)))
	*($1 + [8]) = $5
	$4 = *($1)
	*(*($3 + [4])) = $5
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $6, [16])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $244 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[12]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [576])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[3]), [576])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $7, [4])
	$6 = (*($4) + [4])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[1]), [576])
	CALL memcpy(*($4), ($7 + [4]), [2])
	$6 = (*($4) + [2])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[3]), [576])
	CALL memcpy(*($4), ($7 + [8]), [4])
	$6 = (*($4) + [4])
	*($4) = $6
	$7 = ($7 + [12])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $245 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $866([32])
	CALL $257($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [20])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $256(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $242 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$3 = ((int_32)($5 - $4) / (int_32)[12])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$2 = ((int_32)(*($0 + [8]) - $4) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$4 }
	$6 = ($2 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $866(((int_32)$6 * (int_32)[12]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	*(($3 = ($7 + ((int_32)$3 * (int_32)[12])))) = *($1)
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($5 - $4)
	$5 = ($3 + ((int_32)((int_32)$1 / (int_32)[-12]) * (int_32)[12]))
	$6 = ($7 + ((int_32)$6 * (int_32)[12]))
	$3 = ($3 + [12])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($5, $4, $1)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $5
	*(($0 + [4])) = $3
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $867($4)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $243 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	*($5 + [78]) = $1
	*($5 + [76]) = $2
	if ( ((int_32)$3 == (int_32)[6]) ){ goto $label$15 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$14 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$1 }
	*($5 + [64]) = (int_64)0
	*(($5 + [56])) = [0]
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	$4 = *($0)
	*($5 + [24]) = $4
	*($5 + [32]) = $4
	$3 = CALL db_find_i64($4, $4, (int_64)-7947854319494103040, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$13 }
	$3 = CALL $246(($5 + [24]), $3)
	CALL eosio_assert(((int_32)*($3 + [16]) == (int_32)($5 + [24])), [32])
	$4 = *($0)
	*($5 + [12]) = ($5 + [64])
	*($5 + [8]) = ($5 + [76])
	CALL eosio_assert([1], [352])
	CALL $247(($5 + [24]), $3, $4, ($5 + [8]))
	$0 = *($5 + [48])
	if ( $0 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$15
	*(($5 + [56])) = [0]
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	$4 = *($0)
	*($5 + [24]) = $4
	*($5 + [32]) = $4
	$3 = CALL db_find_i64($4, $4, (int_64)-7947854319460548608, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$11 }
	$3 = CALL $249(($5 + [24]), $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)($5 + [24])), [32])
	$4 = *($0)
	*($5 + [8]) = ($5 + [76])
	CALL eosio_assert([1], [352])
	CALL $252(($5 + [24]), $3, $4, ($5 + [8]))
	$0 = *($5 + [48])
	if ( $0 ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$14
	*(($5 + [56])) = [0]
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	$4 = *($0)
	*($5 + [24]) = $4
	*($5 + [32]) = $4
	$3 = CALL db_find_i64($4, $4, (int_64)-7947854319460548608, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$9 }
	$3 = CALL $249(($5 + [24]), $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)($5 + [24])), [32])
	$4 = *($0)
	*($5 + [8]) = ($5 + [76])
	CALL eosio_assert([1], [352])
	CALL $250(($5 + [24]), $3, $4, ($5 + [8]))
	$0 = *($5 + [48])
	if ( $0 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$13
	$4 = *($0)
	*($5 + [12]) = ($5 + [76])
	*($5 + [8]) = ($5 + [78])
	*($5 + [16]) = ($5 + [64])
	CALL $245($5, ($5 + [24]), $4, ($5 + [8]))
	$0 = *($5 + [48])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$12
	$2 = ($5 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$3 }
	
.LOOP $label$16:
	$3 = ($3 + [-24])
	$1 = *($3)
	*($3) = [0]
	if ( ($1 == 0) ){ goto $label$17 }
	CALL $867($1)
	
.LABEL $label$17
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$16 }
	$3 = *(($5 + [48]))
	goto $label$2 
	
.LABEL $label$11
	$4 = *($0)
	*($5 + [12]) = ($5 + [76])
	*($5 + [8]) = ($5 + [78])
	CALL $251(($5 + [64]), ($5 + [24]), $4, ($5 + [8]))
	$0 = *($5 + [48])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$10
	$2 = ($5 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$7 }
	
.LOOP $label$18:
	$3 = ($3 + [-24])
	$1 = *($3)
	*($3) = [0]
	if ( ($1 == 0) ){ goto $label$19 }
	CALL $867($1)
	
.LABEL $label$19
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$18 }
	$3 = *(($5 + [48]))
	goto $label$6 
	
.LABEL $label$9
	$4 = *($0)
	*($5 + [12]) = ($5 + [76])
	*($5 + [8]) = ($5 + [78])
	CALL $248(($5 + [64]), ($5 + [24]), $4, ($5 + [8]))
	$0 = *($5 + [48])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$8
	$2 = ($5 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$5 }
	
.LOOP $label$20:
	$3 = ($3 + [-24])
	$1 = *($3)
	*($3) = [0]
	if ( ($1 == 0) ){ goto $label$21 }
	CALL $867($1)
	
.LABEL $label$21
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$20 }
	$3 = *(($5 + [48]))
	goto $label$4 
	
.LABEL $label$7
	$3 = $0
	
.LABEL $label$6
	*($2) = $0
	CALL $867($3)
	goto $label$1 
	
.LABEL $label$5
	$3 = $0
	
.LABEL $label$4
	*($2) = $0
	CALL $867($3)
	goto $label$1 
	
.LABEL $label$3
	$3 = $0
	
.LABEL $label$2
	*($2) = $0
	CALL $867($3)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
}

int_32 .FUNC $240 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $85(CALL $85($0, ($1 + [24])), ($1 + [36]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [50]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [52]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [60]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $241 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $209(CALL $209($0, ($1 + [24])), ($1 + [36]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [50]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [52]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [56]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [60]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [64]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $227 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $866([40]))) = (int_64)0
	*($6 + [12 align=4]) = (int_64)0
	*($6 + [20]) = [0]
	*($6 + [24]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [160])
	CALL memcpy($6, $4, [8])
	$3 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $3) > (uint_32)[3]), [160])
	CALL memcpy(($6 + [8]), $3, [4])
	*($8 + [36]) = ($4 + [12])
	CALL $262(($8 + [32]), ($6 + [12]))
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $259(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [12])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [16])) = $7
	CALL $867($7)
	
.LABEL $label$10
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $789 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	*($5) = (int_64)0
	*($5 + [8]) = [0]
	$2 = *($1)
	$4 = (*(($1 + [12])) - *($1 + [8]))
	$3 = int_32($4 >> [2])
	if ( ($3 == 0) ){ goto $label$2 }
	if ( ((uint_32)$3 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$4 = CALL $866($4)
	*(($5 + [8])) = ($4 + ($3 << [2]))
	*($5) = $4
	*($5 + [4]) = $4
	$3 = *(($1 + [8]))
	$1 = (*(($1 + [12])) - $3)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($4, $3, $1)
	*($5 + [4]) = ($4 + $1)
	
.LABEL $label$2
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($0) + $1))
	
.LABEL $label$3
	CALL void $0((int_32 $2), (int_64 $5), (int_32 $1))
	$1 = *($5)
	if ( ($1 == 0) ){ goto $label$4 }
	*($5 + [4]) = $1
	CALL $867($1)
	
.LABEL $label$4
	*([0] + [4]) = ($5 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $882($5)
}

void .FUNC $788 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$6 = (*([0] + [4]) - [48])
	$11 = $6
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*(($8 = (*($1 + [8]) + ((int_32)*(*($3)) * (int_32)[12]))) + [4]) = (*($8 + [4]) - *(*($3 + [4])))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	$7 = *($1 + [8])
	$3 = *(($1 + [12]))
	$5 = ($3 - $7)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[12]))
	$8 = [8]
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$8 = ((((int_32)((uint_32)($5 + [-12]) / (uint_32)[12]) * (int_32)[7]) + $8) + [7])
	
.LABEL $label$2
	if ( ($8 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($8)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($6 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($11 + [8]) = $9
	$5 = ($9 + $8)
	*($11 + [16]) = $5
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	$3 = ($9 + [8])
	*($11 + [12]) = $3
	$10 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [12])) - *(($1 + [8]))) / (int_32)[12]))
	
.LOOP $label$5:
	$6 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$7 = ((int_64)$10) != (int_64)0
	*($11 + [32]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)($5 - $3) > (int_32)[0]), [576])
	CALL memcpy($3, ($11 + [32]), [1])
	$3 = ($3 + [1])
	*($11 + [12]) = $3
	if ( $7 ){ goto $label$5 }
	$6 = *(($1 + [12]))
	$3 = *(($1 + [8]))
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	*($11 + [24]) = ($11 + [8])
	*($11 + [32]) = $3
	*((($11 + [32]) + [8])) = ($3 + [8])
	*((($11 + [32]) + [12])) = ($3 + [9])
	*($11 + [36]) = ($3 + [4])
	CALL $47(($11 + [32]), ($11 + [24]))
	$3 = ($3 + [12])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$7 }
	
.LABEL $label$6
	CALL db_update_i64(*($1 + [24]), $2, $9, $8)
	if ( ($8 <= [513]) ){ goto $label$8 }
	CALL free($9)
	
.LABEL $label$8
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($11 + [48])
}

void .FUNC $787 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [144])
	*([0] + [4]) = $13
	CALL require_auth($1)
	$11 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$1 }
	$12 = ($8 + [-24])
	$4 = ([0] - $11)
	
.LOOP $label$2:
	if ( ((int_64)*(*($12)) == (int_64)$1) ){ goto $label$1 }
	$8 = $12
	$7 = ($12 + [-24])
	$12 = $7
	if ( ((int_32)($7 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [8])
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$4 }
	$10 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [20]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$10 = [0]
	$12 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7695177867839143936, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$3 }
	$10 = CALL $43($3, $12)
	CALL eosio_assert(((int_32)*($10 + [20]) == (int_32)$3), [32])
	
.LABEL $label$3
	$11 = [0]
	*($13 + [132]) = [0]
	$12 = [0]
	$5 = *($4)
	$4 = ( ($10 + [8]) ? ($0 + [68]) : $10 )
	$6 = *($4 + [4])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$5 }
	$8 = ((int_32)($6 - $5) / (int_32)[12])
	$12 = [0]
	$7 = $5
	
.LOOP $label$6:
	if ( ((int_32)*($7) == (int_32)$2) ){ goto $label$5 }
	$7 = ($7 + [12])
	$12 = ($12 + [1])
	*($13 + [132]) = $12
	if ( ($12 <= $8) ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert(($12 <= ((int_32)($6 - $5) / (int_32)[12])), [6608])
	$8 = *($4)
	*((($13 + [88]) + [32])) = [0]
	*($13 + [104]) = (int_64)-1
	*($13 + [112]) = (int_64)0
	$9 = *($0)
	*($13 + [88]) = $9
	*($13 + [96]) = $9
	$7 = CALL db_find_i64($9, $9, (int_64)-4852160326797361152, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$11 = CALL $567(($13 + [88]), $7)
	CALL eosio_assert(((int_32)*($11 + [28]) == (int_32)($13 + [88])), [32])
	
.LABEL $label$7
	$2 = [0]
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [5808])
	$4 = ($8 + ((int_32)$12 * (int_32)[12]))
	CALL eosio_assert(((int_32)*($4 + [8]) == (int_32)(uint_32([354441] >> ((*($11 + [8]) << [2]) + [-4])) & [15])), [8848])
	CALL eosio_assert((((*($11 + [8]) + [-3]) & [255]) <= [2]), [8880])
	*((($13 + [48]) + [32])) = [0]
	*($13 + [72]) = (int_64)0
	*($13 + [64]) = (int_64)-1
	$9 = *($0)
	*($13 + [48]) = $9
	*($13 + [56]) = $9
	$7 = [0]
	$4 = CALL db_find_i64($9, $9, (int_64)-4852160317217570816, *($4 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$8 }
	$7 = CALL $633(($13 + [48]), $4)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)($13 + [48])), [32])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [6640])
	$4 = [80]
	*($13 + [44]) = [80]
	$5 = *(($11 + [8]))
	if ( ((int_32)$5 == (int_32)[4]) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[3]) ){ goto $label$9 }
	$4 = [80]
	*($13 + [44]) = [80]
	$2 = [10000]
	goto $label$9 
	
.LABEL $label$10
	$4 = [40]
	*($13 + [44]) = [40]
	$2 = [40000]
	
.LABEL $label$9
	CALL eosio_assert(((uint_32)*(($8 + ((int_32)$12 * (int_32)[12])) + [4]) >= (uint_32)(*($7 + [8]) + $4)), [6672])
	$6 = *($5 + [24])
	$5 = *($0 + [48])
	$8 = *(($5 + [28]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$11 }
	$12 = ($8 + [-24])
	$4 = ([0] - $6)
	
.LOOP $label$12:
	if ( ((int_64)*(*($12)) == (int_64)$1) ){ goto $label$11 }
	$8 = $12
	$7 = ($12 + [-24])
	$12 = $7
	if ( ((int_32)($7 + $4) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$14 }
	$12 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$5), [32])
	goto $label$13 
	
.LABEL $label$14
	$12 = [0]
	$7 = CALL db_find_i64(*($5), *($5 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	$12 = CALL $13($5, $7)
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$5), [32])
	
.LABEL $label$13
	$8 = ((int_32)$12 != (int_32)[0])
	CALL eosio_assert($8, [192])
	CALL eosio_assert(((uint_32)$2 <= (uint_32)*($12 + [16])), [5040])
	if ( ($2 == 0) ){ goto $label$15 }
	$7 = *(($0 + [48]))
	*($13) = $2
	CALL eosio_assert(((uint_32)*(($12 + [16])) >= (uint_32)$2), [5040])
	$9 = *($7 + [40])
	*($13 + [136]) = $13
	CALL eosio_assert($8, [352])
	CALL $493($7, $12, $9, ($13 + [136]))
	
.LABEL $label$15
	$9 = *($0)
	*($13 + [4]) = ($13 + [44])
	*($13) = ($13 + [132])
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [352])
	CALL $788($3, $10, $9, $13)
	$12 = CALL read_transaction([0], [0])
	$7 = CALL malloc($12)
	CALL read_transaction($7, $12)
	CALL sha256($7, $12, $13)
	$12 = (CASTING uint_32)(uint_64 (uint_64)((uint_64)((int_64)((int_64)((int_64)((int_64)((int_64)((int_64)*($13 + [1]) << (int_64)16) | (int_64)((int_64)*($13) << (int_64)24)) | (int_64)((int_64)*($13 + [6]) << (int_64)8)) | (int_64)*($13 + [7])) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647) >> (uint_64)(int_64)29))
	$7 = *(($11 + [8]))
	if ( ((int_32)$7 == (int_32)[4]) ){ goto $label$19 }
	if ( ((int_32)$7 != (int_32)[3]) ){ goto $label$18 }
	CALL $42($0, $1, ($12 + [13]))
	$8 = *($13 + [72])
	if ( $8 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	CALL $42($0, $1, ($12 + [17]))
	
.LABEL $label$18
	$8 = *($13 + [72])
	if ( ($8 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$0 = ($13 + [76])
	$12 = *($0)
	if ( ((int_32)$12 == (int_32)$8) ){ goto $label$21 }
	
.LOOP $label$22:
	$12 = ($12 + [-24])
	$7 = *($12)
	*($12) = [0]
	if ( ($7 == 0) ){ goto $label$23 }
	CALL $867($7)
	
.LABEL $label$23
	if ( ((int_32)$8 != (int_32)$12) ){ goto $label$22 }
	$12 = *(($13 + [72]))
	goto $label$20 
	
.LABEL $label$21
	$12 = $8
	
.LABEL $label$20
	*($0) = $8
	CALL $867($12)
	
.LABEL $label$16
	$8 = *($13 + [112])
	if ( ($8 == 0) ){ goto $label$24 }
	$0 = ($13 + [116])
	$12 = *($0)
	if ( ((int_32)$12 == (int_32)$8) ){ goto $label$26 }
	
.LOOP $label$27:
	$12 = ($12 + [-24])
	$7 = *($12)
	*($12) = [0]
	if ( ($7 == 0) ){ goto $label$28 }
	CALL $867($7)
	
.LABEL $label$28
	if ( ((int_32)$8 != (int_32)$12) ){ goto $label$27 }
	$12 = *(($13 + [112]))
	goto $label$25 
	
.LABEL $label$26
	$12 = $8
	
.LABEL $label$25
	*($0) = $8
	CALL $867($12)
	
.LABEL $label$24
	*([0] + [4]) = ($13 + [144])
}

void .FUNC $552 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $866([40])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1120])
	*($4 + [24]) = $1
	CALL $554(($7 + [16]), $4)
	*($7 + [32]) = $4
	$2 = *($4)
	*($7 + [16]) = $2
	$6 = *($4 + [28])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $2
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $547(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $867($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $785 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*(($4 = CALL $866([72])) + [56]) = $1
	*($4) = (int_64)0
	*($4) = *(*($3))
	*($4 + [8]) = [1]
	*($4 + [12]) = *(*($3 + [4]))
	*($4 + [16]) = [259200]
	*($8 + [88]) = (($8 + [16]) + [52])
	*($8 + [84]) = ($8 + [16])
	*($8 + [80]) = ($8 + [16])
	CALL $440(($8 + [80]), $4)
	$5 = *($4)
	*($4 + [60]) = CALL db_store_i64(*($1 + [8]), (int_64)-6030912128183959552, $2, $5, ($8 + [16]), [52])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [80]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$6 = *($4 + [60])
	*($8 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [80]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $442(($1 + [24]), ($8 + [80]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [80])
	*($8 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $867($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [96])
}

void .FUNC $784 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	*([0] + [4]) = $10
	*($10 + [72]) = $1
	CALL require_auth($1)
	$4 = *($3 + [24])
	$3 = *($0 + [52])
	$6 = *(($3 + [28]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$1 }
	$9 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$1 }
	$6 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	$9 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $13($3, $9)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$3), [32])
	
.LABEL $label$3
	$9 = [0]
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1936])
	CALL eosio_assert(((int_32)*(CALL $685($0, $1, $2) + [4]) == (int_32)[1041]), [8784])
	*(($10 + [64])) = [0]
	*($10 + [48]) = (int_64)-1
	*($10 + [56]) = (int_64)0
	$8 = *($0)
	*($10 + [32]) = $8
	*($10 + [40]) = $8
	$7 = CALL db_find_i64($8, $8, (int_64)-6030912128183959552, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$9 = CALL $438(($10 + [32]), $7)
	CALL eosio_assert(((int_32)*($9 + [56]) == (int_32)($10 + [32])), [32])
	
.LABEL $label$5
	$7 = (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
	*($10 + [28]) = $7
	if ( ($9 == 0) ){ goto $label$7 }
	$6 = [1]
	$5 = *($9 + [12])
	if ( ((uint_32)$5 > (uint_32)$7) ){ goto $label$8 }
	$6 = ((uint_32)(*($9 + [16]) + $5) <= (uint_32)$7)
	
.LABEL $label$8
	CALL eosio_assert($6, [8816])
	$1 = *($0)
	*($10 + [16]) = ($10 + [28])
	CALL eosio_assert([1], [352])
	CALL $786(($10 + [32]), $9, $1, ($10 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$1 = *($0)
	*($10 + [20]) = ($10 + [28])
	*($10 + [16]) = ($10 + [72])
	CALL $785(($10 + [8]), ($10 + [32]), $1, ($10 + [16]))
	
.LABEL $label$6
	CALL $482($0, *($10 + [72]), $2)
	$6 = *($10 + [56])
	if ( ($6 == 0) ){ goto $label$9 }
	$5 = ($10 + [60])
	$9 = *($5)
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$12:
	$9 = ($9 + [-24])
	$7 = *($9)
	*($9) = [0]
	if ( ($7 == 0) ){ goto $label$13 }
	CALL $867($7)
	
.LABEL $label$13
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$12 }
	$9 = *(($10 + [56]))
	goto $label$10 
	
.LABEL $label$11
	$9 = $6
	
.LABEL $label$10
	*($5) = $6
	CALL $867($9)
	
.LABEL $label$9
	*([0] + [4]) = ($10 + [80])
}

void .FUNC $783 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [24]) = (*($1 + [24]) + [1])
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [72]) = ($5 + [52])
	*($5 + [68]) = $5
	*($5 + [64]) = $5
	CALL $440(($5 + [64]), $1)
	CALL db_update_i64(*($1 + [60]), $2, $5, [52])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
}

void .FUNC $782 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	$2 = [0]
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$4 = *($0)
	*($6 + [8]) = $4
	*($6 + [16]) = $4
	$3 = CALL db_find_i64($4, $4, (int_64)-6030912128183959552, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $438(($6 + [8]), $3)
	CALL eosio_assert(((int_32)*($3 + [56]) == (int_32)($6 + [8])), [32])
	$5 = *($3 + [22])
	if ( ($5 == 0) ){ goto $label$2 }
	$2 = ((uint_32)$5 > (uint_32)*($3 + [24]))
	
.LABEL $label$2
	CALL eosio_assert($2, [8752])
	$4 = *($0)
	CALL eosio_assert([1], [352])
	CALL $783(($6 + [8]), $3, $4, $6)
	
.LABEL $label$1
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$3 }
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $867($3)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($5) = $2
	CALL $867($0)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $781 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [12]) = (*($1 + [12]) + [-1])
	$4 = *($1)
	CALL eosio_assert([1], [512])
	$8 = *($1 + [52])
	$5 = *(($1 + [56]))
	$9 = (CASTING uint_64)(uint_32 ((int_32)($5 - $8) / (int_32)[20]))
	$7 = [43]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$3:
	$6 = *($8 + [8])
	$6 = ( *($8 + [12]) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$7 = (($6 + $7) + [5])
	$9 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	$8 = ($8 + [20])
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ($7 <= [513]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$5
	*($10 + [4]) = $8
	*($10) = $8
	*($10 + [8]) = ($8 + $7)
	CALL $273($10, $1)
	CALL db_update_i64(*($1 + [68]), $2, $8, $7)
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL free($8)
	
.LABEL $label$7
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $658 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [16])
	$12 = $13
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$10 = [12]
	$5 = ($1 + [12])
	$4 = *($1)
	$8 = *($1 + [12])
	$7 = ($1 + [16])
	$9 = *($7)
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$1 }
	$6 = ((int_32)($9 - $8) / (int_32)[12])
	$11 = *(*($3))
	$9 = [0]
	
.LOOP $label$3:
	if ( ((int_64)*($8) == (int_64)$11) ){ goto $label$2 }
	$8 = ($8 + [12])
	$9 = ($9 + [1])
	if ( ($9 <= $6) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*(($8 + [8])) = *(*($3 + [4]))
	*(*($3 + [8])) = [1]
	
.LABEL $label$1
	CALL eosio_assert([1], [512])
	$9 = *($5)
	$8 = *($7)
	$6 = ($8 - $9)
	$11 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[12]))
	
.LOOP $label$4:
	$10 = ($10 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$5 }
	$10 = ((((int_32)((uint_32)($6 + [-12]) / (uint_32)[12]) * (int_32)[10]) + $10) + [10])
	
.LABEL $label$5
	if ( ($10 <= [513]) ){ goto $label$7 }
	$8 = CALL malloc($10)
	goto $label$6 
	
.LABEL $label$7
	$8 = ($13 - (($10 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$6
	*($12) = $8
	$9 = ($8 + $10)
	*($12 + [8]) = $9
	CALL eosio_assert(((int_32)$10 > (int_32)[7]), [576])
	CALL memcpy($8, $1, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($9 - $6) > (int_32)[3]), [576])
	CALL memcpy($6, ($1 + [8]), [4])
	*($12 + [4]) = ($8 + [12])
	CALL $244($12, $5)
	CALL db_update_i64(*($1 + [28]), $2, $8, $10)
	if ( ($10 <= [513]) ){ goto $label$8 }
	CALL free($8)
	
.LABEL $label$8
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($12 + [16])
}

int_32 .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	*(($3 = $4) + [44]) = $0
	*($3 + [32]) = *($1)
	*($3 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($4 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [16])) = (int_64)0
	*($3) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = [0]
	*($3 + [56]) = ($1 + $0)
	*($3 + [48]) = $1
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [160])
	CALL memcpy($3, $1, [8])
	*($3 + [52]) = ($1 + [8])
	$4 = ($3 + [8])
	CALL $687(($3 + [48]), $4)
	CALL eosio_assert(((uint_32)(*($3 + [56]) - *($3 + [52])) > (uint_32)[3]), [160])
	CALL memcpy(($3 + [20]), *($3 + [52]), [4])
	$2 = (*($3 + [52]) + [4])
	*($3 + [52]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [56]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($3 + [24]), *($3 + [52]), [4])
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($3 + [52]) = ($3 + [32])
	*($3 + [48]) = ($3 + [44])
	CALL $710(($3 + [48]), $3)
	$1 = *($4)
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [12])) = $1
	CALL $867($1)
	
.LABEL $label$5
	*([0] + [4]) = ($3 + [64])
	return [1]
}

void .FUNC $148 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	CALL $212(($0 + [600]), $1)
	CALL $711(($0 + [64]), $1, $2, ((int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $4)))
}

void .FUNC $419 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $418 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $145 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL $212(($0 + [600]), $1)
	CALL $742(($0 + [280]), $1, $2)
}

int_32 .FUNC $416 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [128])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $866([48])) + [24]) = (int_64)1398362884
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1120])
	*($4 + [32]) = $0
	CALL $417(($8 + [32]), $4)
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [36])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $418($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $867($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8) = (int_64)0
	*($8 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [160])
	CALL memcpy($8, $6, [8])
	$4 = ($1 & [-4])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [160])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [4])
	CALL eosio_assert(((int_32)$4 != (int_32)[12]), [160])
	$4 = ($8 + [12])
	CALL memcpy($4, ($6 + [12]), [4])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$6 = *($4)
	$0 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $0), (int_32 $6), (int_32 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

void .FUNC $146 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	$4 = ($0 + [600])
	CALL $212($4, $1)
	CALL $558(($0 + [8]), ((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $3)), $1)
	CALL eosio_assert((CALL $559($4, $1) == 0), [5696])
	*((($5 + [16]) + [8])) = [0]
	*($5 + [16]) = (int_64)0
	$3 = CALL strlen([7904])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($3 << [1])
	$2 = (($5 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$2 = CALL $866($4)
	*($5 + [16]) = ($4 | [1])
	*($5 + [24]) = $2
	*($5 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($2, [7904], $3)
	
.LABEL $label$2
	*(($2 + $3)) = [0]
	CALL $883($5, ($5 + [16]))
	CALL $714(($0 + [280]), $1, $5)
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*($5 + [8]))
	
.LABEL $label$5
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*($5 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($5 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $868(($5 + [16]))
}

void .FUNC $141 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($0 + [600])
	CALL $212($2, $1)
	CALL require_auth($1)
	$3 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$5 }
	$5 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$6), [32])
	CALL eosio_assert(($5 == 0), [8160])
	if ( $5 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$5 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	CALL eosio_assert(((int_32)*(CALL $13($6, $5) + [24]) == (int_32)$6), [32])
	CALL eosio_assert([0], [8160])
	goto $label$3 
	
.LABEL $label$6
	CALL eosio_assert([1], [8160])
	
.LABEL $label$4
	CALL $748($6, $1)
	
.LABEL $label$3
	$6 = ($0 + [280])
	if ( (CALL $749($2, $1) == 0) ){ goto $label$7 }
	CALL $750($6, $1)
	return 
	
.LABEL $label$7
	CALL $751($6, $1, [1])
}

int_32 .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [160])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [160])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

void .FUNC $143 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL $212(($0 + [600]), $1)
	CALL $744(($0 + [280]), $1, $2)
}

int_32 .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [160])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_64 .FUNC fabs (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

void .FUNC $702 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [208])
	*([0] + [4]) = $11
	*($11 + [200]) = $1
	*($11 + [198]) = $2
	CALL require_auth($1)
	$5 = *($4 + [24])
	$4 = *($0 + [52])
	$7 = *(($4 + [28]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$1 }
	$8 = ($7 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$1 }
	$7 = $8
	$10 = ($8 + [-24])
	$8 = $10
	if ( ((int_32)($10 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$4 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$10 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $13($4, $10)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$4), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [192])
	CALL $269(($11 + [184]), *($0 + [60]), $1, [1])
	*($11 + [176]) = $4
	*($11 + [180]) = $8
	*($11 + [168]) = *($11 + [184])
	*($11 + [16 align=4]) = *($11 + [176])
	*(($11 + [12])) = *($11 + [172])
	*($11 + [8]) = *($11 + [168])
	CALL $703($0, ($11 + [16]), $2, [1], [0], ($11 + [8]))
	$9 = CALL $91(*($0 + [60]))
	*($11 + [160]) = $9
	$8 = *($0 + [60])
	CALL $883(($11 + [96]), $3)
	CALL $92(($11 + [112]), $8, $9, $1, ($11 + [96]), ($11 + [128]))
	if ( ((*($11 + [96]) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*($11 + [104]))
	
.LABEL $label$5
	*(($11 + [88])) = [0]
	*($11 + [72]) = (int_64)-1
	*($11 + [80]) = (int_64)0
	$1 = *($0)
	*($11 + [56]) = $1
	*($11 + [64]) = $1
	*($11 + [40]) = $3
	*($11 + [36]) = ($11 + [200])
	*($11 + [32]) = ($11 + [160])
	*($11 + [44]) = ($11 + [112])
	*($11 + [48]) = ($11 + [128])
	*($11 + [52]) = ($11 + [198])
	CALL $704(($11 + [24]), ($11 + [56]), $1, ($11 + [32]))
	CALL $95(*(($0 + [60])), *($11 + [200]), *($11 + [160]))
	$7 = *($11 + [80])
	if ( ($7 == 0) ){ goto $label$6 }
	$6 = (($11 + [56]) + [28])
	$10 = *($6)
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$9:
	$10 = ($10 + [-24])
	$8 = *($10)
	*($10) = [0]
	if ( ($8 == 0) ){ goto $label$10 }
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*(($8 + [40])))
	
.LABEL $label$11
	if ( ((*($8 + [20]) & [1]) == 0) ){ goto $label$12 }
	CALL $867(*(($8 + [28])))
	
.LABEL $label$12
	CALL $867($8)
	
.LABEL $label$10
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$9 }
	$8 = *(($11 + [80]))
	goto $label$7 
	
.LABEL $label$8
	$8 = $7
	
.LABEL $label$7
	*($6) = $7
	CALL $867($8)
	
.LABEL $label$6
	if ( ((*($11 + [112]) & [1]) == 0) ){ goto $label$13 }
	CALL $867(*($11 + [120]))
	
.LABEL $label$13
	*([0] + [4]) = ($11 + [208])
}

int_32 .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [36]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [38]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [44]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [52]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [58]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [60]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

int_32 .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [36]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [38]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [44]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [52]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [56]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [58]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [60]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC $94 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*(($1 + [40])))
	
.LABEL $label$11
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$12 }
	CALL $867(*(($1 + [28])))
	
.LABEL $label$12
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $867($6)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $95 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	*($7 + [12]) = $2
	$3 = *(($0 + [152]))
	$6 = *(($0 + [156]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$2 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$1 }
	$6 = $2
	$5 = ($2 + [-24])
	$2 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [128])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$5 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)$2), [32])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-6030912128150405120, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $96($2, $5)
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)$2), [32])
	
.LABEL $label$4
	$1 = *($0)
	*($7 + [8]) = ($7 + [12])
	CALL eosio_assert([1], [352])
	CALL $97($2, $5, $1, ($7 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([80])) + [8]) = [0]
	*($6) = (int_64)0
	*($6 + [12]) = [0]
	*($6 + [24]) = [0]
	*($6 + [28]) = [0]
	*($6 + [32]) = [0]
	*($6 + [36]) = [0]
	*($6 + [38]) = [0]
	*($6 + [40]) = [0]
	*($6 + [44]) = [0]
	*($6 + [48]) = [0]
	*($6 + [52]) = [0]
	*($6 + [56]) = [1]
	*($6 + [58]) = [0]
	*($6 + [60]) = [0]
	*($6 + [16]) = (int_64)0
	*($6 + [64]) = $0
	CALL $99(($8 + [32]), $6)
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [68])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $100(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $97 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [52]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [72]) = ($5 + [54])
	*($5 + [68]) = $5
	*($5 + [64]) = $5
	CALL $98(($5 + [64]), $1)
	CALL db_update_i64(*($1 + [68]), $2, $5, [54])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
}

void .FUNC _ZN16activity_control10topenchestEN5eosio4nameEttNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [208])
	*([0] + [4]) = $8
	*($8 + [160]) = $1
	*($8 + [158]) = $2
	*($8 + [156]) = $3
	CALL require_auth($1)
	CALL _ZN16activity_control19do_reveal_openchestEbN5eosio4nameEttm($0, [1], $1, $2, $3, [0])
	$6 = CALL $91(*($0 + [88]))
	*($8 + [144]) = $6
	$3 = *($0 + [88])
	CALL $883(($8 + [80]), $4)
	CALL $92(($8 + [96]), $3, $6, $1, ($8 + [80]), ($8 + [112]))
	if ( ((*($8 + [80]) & [1]) == 0) ){ goto $label$1 }
	CALL $867(*($8 + [88]))
	
.LABEL $label$1
	*(($2 = ($8 + [72]))) = [0]
	*($8 + [56]) = (int_64)-1
	*($8 + [64]) = (int_64)0
	$1 = *($0)
	*($8 + [40]) = $1
	*($8 + [48]) = $1
	*($8 + [16]) = $4
	*($8 + [12]) = ($8 + [160])
	*($8 + [8]) = ($8 + [144])
	*($8 + [20]) = ($8 + [96])
	*($8 + [24]) = ($8 + [112])
	*($8 + [28]) = ($8 + [158])
	*($8 + [32]) = ($8 + [156])
	*($8 + [200]) = $1
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$16()), [288])
	*($8 + [180]) = ($8 + [8])
	*($8 + [176]) = ($8 + [40])
	*($8 + [184]) = ($8 + [200])
	*(($4 = CALL $866([128])) + [8]) = (int_64)0
	*($4 + [20 align=4]) = (int_64)0
	*($4 + [28 align=4]) = (int_64)0
	*($4 + [36 align=4]) = (int_64)0
	*($4 + [80]) = [0]
	*($4 + [104]) = ($8 + [40])
	CALL $93(($8 + [176]), $4)
	*($8 + [192]) = $4
	$1 = *($4)
	*($8 + [176]) = $1
	$5 = *($4 + [108])
	*($8 + [172]) = $5
	$7 = ($8 + [68])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*($2)) ){ goto $label$3 }
	*($3 + [8]) = $1
	*($3 + [16]) = $5
	*($8 + [192]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $94(($8 + [64]), ($8 + [192]), ($8 + [176]), ($8 + [172]))
	
.LABEL $label$2
	$4 = *($8 + [192])
	*($8 + [192]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*(($4 + [40])))
	
.LABEL $label$5
	if ( ((*($4 + [20]) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*(($4 + [28])))
	
.LABEL $label$6
	CALL $867($4)
	
.LABEL $label$4
	CALL $95(*(($0 + [88])), *($8 + [160]), *($8 + [144]))
	$3 = *($8 + [64])
	if ( ($3 == 0) ){ goto $label$7 }
	$2 = (($8 + [40]) + [28])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$12 }
	CALL $867(*(($4 + [40])))
	
.LABEL $label$12
	if ( ((*($4 + [20]) & [1]) == 0) ){ goto $label$13 }
	CALL $867(*(($4 + [28])))
	
.LABEL $label$13
	CALL $867($4)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$10 }
	$4 = *(($8 + [64]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $3
	
.LABEL $label$8
	*($2) = $3
	CALL $867($4)
	
.LABEL $label$7
	if ( ((*($8 + [96]) & [1]) == 0) ){ goto $label$14 }
	CALL $867(*($8 + [104]))
	
.LABEL $label$14
	*([0] + [4]) = ($8 + [208])
}

int_64 .FUNC $91 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	$4 = [0]
	*(($5 + [56])) = [0]
	*($5 + [40]) = (int_64)-1
	$3 = *($0)
	*($5 + [24]) = $3
	*($5 + [32]) = $3
	*($5 + [48]) = (int_64)0
	$2 = [0]
	$1 = CALL db_lowerbound_i64($3, $3, (int_64)-6531187029919662080, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	CALL $103(($5 + [24]), $1)
	$2 = [1]
	
.LABEL $label$1
	CALL eosio_assert($2, [1472])
	$2 = ($5 + [32])
	*($5 + [16]) = ((int_64)*(CALL $103(($5 + [24]), CALL $fimport$25(*($5 + [24]), *($2), (int_64)-6531187029919662080, (int_64)0)) + [8]) + (int_64)1)
	$2 = CALL db_lowerbound_i64(*($5 + [24]), *($2), (int_64)-6531187029919662080, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $103(($5 + [24]), $2)
	
.LABEL $label$2
	$3 = *($0)
	*($5 + [8]) = ($5 + [16])
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [352])
	CALL $104(($5 + [24]), $4, $3, ($5 + [8]))
	$3 = *($5 + [16])
	$2 = *($5 + [48])
	if ( ($2 == 0) ){ goto $label$3 }
	$1 = ($5 + [52])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $867($0)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$6 }
	$4 = *(($5 + [48]))
	goto $label$4 
	
.LABEL $label$5
	$4 = $2
	
.LABEL $label$4
	*($1) = $2
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [64])
	return $3
}

void .FUNC $92 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = CALL strlen([1408])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($6 << [1])
	$8 = ($0 + [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($6 + [16]) & [-16])
	$8 = CALL $866($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $6
	
.LABEL $label$3
	CALL memcpy($8, [1408], $6)
	
.LABEL $label$2
	*(($8 + $6)) = [0]
	$6 = CALL read_transaction([0], [0])
	$8 = CALL malloc($6)
	CALL read_transaction($8, $6)
	CALL sha256($8, $6, ($9 + [48]))
	CALL $102(($9 + [32]), $1, ($9 + [48]), [32])
	$6 = *($9 + [32])
	$8 = ($6 & [1])
	CALL $872($0, ( *($9 + [40]) ? (($9 + [32]) | [1]) : $8 ), ( *($9 + [36]) ? uint_32($6 >> [1]) : $8 ))
	CALL $873($0, [1424])
	CALL _ZNSt3__19to_stringEy($9, ((int_64)((uint_64)CALL $fimport$17() / (uint_64)(int_64)1000000) & (int_64)4294967295))
	$8 = *($9)
	$1 = ($8 & [1])
	$6 = ($9 | [1])
	CALL $872($0, ( *($9 + [8]) ? $6 : $1 ), ( *($9 + [4]) ? uint_32($8 >> [1]) : $1 ))
	if ( ((*($9) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*(($9 + [8])))
	
.LABEL $label$5
	CALL $873($0, [1424])
	CALL _ZNSt3__19to_stringEy($9, $2)
	$8 = *($9)
	$1 = ($8 & [1])
	CALL $872($0, ( *($9 + [8]) ? $6 : $1 ), ( *($9 + [4]) ? uint_32($8 >> [1]) : $1 ))
	if ( ((*($9) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*(($9 + [8])))
	
.LABEL $label$6
	$6 = *($0)
	if ( ($6 & [1]) ){ goto $label$8 }
	$6 = uint_32($6 >> [1])
	$0 = ($0 + [1])
	goto $label$7 
	
.LABEL $label$8
	$6 = *($0 + [4])
	$0 = *($0 + [8])
	
.LABEL $label$7
	CALL sha1($0, $6, $9)
	CALL sha256($9, [20], $5)
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$9 }
	CALL $867(*(($9 + [40])))
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $868($0)
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$2 = *($0)
	*($1 + [16]) = [6]
	CALL $869(($1 + [20]), *($4 + [8]))
	CALL $869(($1 + [32]), *($4 + [12]))
	$5 = *($4 + [16])
	*($1 + [48]) = *($5)
	*(($1 + [72])) = *(($5 + [24]))
	*(($1 + [64])) = *(($5 + [16]))
	*(($1 + [56])) = *(($5 + [8]))
	*($1 + [84]) = *(*($4 + [20]))
	*($1 + [86]) = *(*($4 + [24]))
	*($1 + [80]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$4 = *($1 + [20])
	$5 = ( *(($1 + [24])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($5 + [72])
	$3 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	$5 = *(($1 + [32]))
	$5 = ( *(($1 + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$4 = ($5 + $4)
	$3 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	if ( ($4 <= [513]) ){ goto $label$4 }
	$5 = CALL malloc($4)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($7 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$3
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $4)
	CALL $101($6, $1)
	$3 = *($1)
	*($1 + [108]) = CALL db_store_i64(*($2 + [8]), (int_64)-6533188803235414016, *(*($0 + [8])), $3, $5, $4)
	if ( ($4 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $732 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	$4 = *($0 + [4])
	*($1) = (int_64)0
	*($1 + [8]) = *(*($4))
	$2 = *($0)
	*($1 + [16]) = *(*($4 + [4]))
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 + [16]), ($1 + [16]), [4])
	$3 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)7235159542483386368, *(*($0 + [8])), $3, $5, [20])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $733 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([40]))) = (int_64)0
	*($3 + [12 align=4]) = (int_64)0
	*($3 + [20]) = [0]
	*($3 + [24]) = $1
	CALL $737(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [28])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $259(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [12])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [16])) = $1
	CALL $867($1)
	
.LABEL $label$4
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $730 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([32])) + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = [0]
	*($3 + [20]) = $1
	CALL $732(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [24])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $586(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $731 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)*(*($3)))
	$4 = *($1)
	*($1 + [16]) = (*($1 + [16]) + *(*($3 + [4])))
	CALL eosio_assert([1], [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 + [16]), ($1 + [16]), [4])
	CALL db_update_i64(*($1 + [24]), $2, $5, [20])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $736 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = ($6 - $5)
	if ( ((int_32)$3 <= (int_32)[-3]) ){ goto $label$2 }
	$3 = (*($0 + [8]) - $5)
	$2 = int_32($3 >> [1])
	$4 = ($2 + [1])
	$3 = ( ( $4 ? $3 : ($3 <= $4) ) ? [2147483647] : (int_32($3 >> [1]) <= [1073741823]) )
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$7 = CALL $866(($3 << [1]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	
.LABEL $label$3
	*(($4 = ($7 + ($2 << [1])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($4 - $6)
	$3 = ($7 + ($3 << [1]))
	$4 = ($4 + [2])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $4
	*(($0 + [8])) = $3
	if ( ($5 == 0) ){ goto $label$6 }
	CALL $867($5)
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	CALL abort()
	(unreachable)
}

void .FUNC $737 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	CALL $738(*($0 + [4]), $1)
	$7 = [12]
	$3 = ($1 + [12])
	$5 = *($1 + [12])
	$4 = *(($1 + [16]))
	$6 = ($4 - $5)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[12]))
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$2 }
	$7 = ((((int_32)((uint_32)($6 + [-12]) / (uint_32)[12]) * (int_32)[10]) + $7) + [10])
	
.LABEL $label$2
	if ( ($7 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($7)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10) = $9
	$4 = ($9 + $7)
	*($10 + [8]) = $4
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	$5 = ($9 + [8])
	CALL eosio_assert(((int_32)($4 - $5) > (int_32)[3]), [576])
	CALL memcpy($5, ($1 + [8]), [4])
	*($10 + [4]) = ($9 + [12])
	CALL $244($10, $3)
	$8 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-7948290392355504128, *(*($0 + [8])), $8, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $734 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	CALL $735($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$3 = [12]
	$5 = ($1 + [12])
	$7 = *($1 + [12])
	$6 = *(($1 + [16]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[12]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$2 }
	$3 = ((((int_32)((uint_32)($8 + [-12]) / (uint_32)[12]) * (int_32)[10]) + $3) + [10])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$10 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$10 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$3
	*($11) = $10
	$6 = ($10 + $3)
	*($11 + [8]) = $6
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [576])
	CALL memcpy($10, $1, [8])
	$7 = ($10 + [8])
	CALL eosio_assert(((int_32)($6 - $7) > (int_32)[3]), [576])
	CALL memcpy($7, ($1 + [8]), [4])
	*($11 + [4]) = ($10 + [12])
	CALL $244($11, $5)
	CALL db_update_i64(*($1 + [28]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $735 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [32])
	*([0] + [4]) = $18
	$2 = ($1 + [12])
	$14 = *($1 + [8])
	$9 = (($18 + [16]) + [8])
	$10 = ($1 + [20])
	$11 = ($1 + [16])
	$12 = (*($0 + [4]) + [108])
	$13 = ($0 + [24])
	$15 = [1]
	
.LOOP $label$1:
	$3 = *((*(*($0)) + ($15 << [1])))
	if ( ($3 == 0) ){ goto $label$2 }
	*($9) = [0]
	*($18 + [20]) = $3
	$14 = ($14 + [1])
	*($18 + [16]) = $14
	$16 = *($11)
	if ( ((int_32)$16 == (int_32)*($10)) ){ goto $label$4 }
	*($16) = *($18 + [16])
	*(($16 + [8])) = *($9)
	*($11) = (*($11) + [12])
	goto $label$3 
	
.LABEL $label$4
	CALL $242($2, ($18 + [16]))
	
.LABEL $label$3
	CALL $243(*($12), $3, [1], *(*(($0 + [8]))))
	if ( (*(*(($0 + [12]))) == 0) ){ goto $label$2 }
	$4 = (CASTING uint_64)(uint_32 $3)
	$6 = *($5 + [24])
	$5 = *(($0 + [16]))
	$17 = *(($5 + [28]))
	if ( ((int_32)$17 == (int_32)$6) ){ goto $label$5 }
	$16 = ($17 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$6:
	if ( ((int_64)*(*($16)) == (int_64)$4) ){ goto $label$5 }
	$17 = $16
	$8 = ($16 + [-24])
	$16 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ((int_32)$17 == (int_32)$6) ){ goto $label$8 }
	$16 = *(($17 + [-24]))
	CALL eosio_assert(((int_32)*(($16 + [20])) == (int_32)$5), [32])
	goto $label$7 
	
.LABEL $label$8
	$16 = [0]
	$8 = CALL db_find_i64(*($5), *($5 + [8]), (int_64)-4860070093188497408, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$7 }
	$16 = CALL $229($5, $8)
	CALL eosio_assert(((int_32)*($16 + [20]) == (int_32)$5), [32])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$16 != (int_32)[0]), [2656])
	$16 = *($16 + [9])
	if ( ($16 <= [3]) ){ goto $label$2 }
	$17 = ($0 + [20])
	$7 = *($17)
	$8 = *($7)
	if ( $8 ){ goto $label$9 }
	*($7) = $3
	$8 = *(*($17))
	
.LABEL $label$9
	if ( ((int_32)($8 & [65535]) != (int_32)$3) ){ goto $label$10 }
	*(($8 = *($13))) = (*($8) + [1])
	
.LABEL $label$10
	if ( ($16 <= [4]) ){ goto $label$2 }
	$16 = *(($0 + [28]))
	*($18 + [14]) = $3
	$8 = *($16 + [4])
	if ( ((uint_32)$8 >= (uint_32)*($16 + [8])) ){ goto $label$11 }
	*($8) = $3
	*(($16 + [4])) = ($8 + [2])
	goto $label$2 
	
.LABEL $label$11
	CALL $736($16, ($18 + [14]))
	
.LABEL $label$2
	$15 = ($15 + [1])
	if ( ((int_32)$15 != (int_32)[4]) ){ goto $label$1 }
	*(($1 + [8])) = $14
	*($1) = *(*($0 + [32]))
	*([0] + [4]) = ($18 + [32])
}

void .FUNC $738 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [32])
	*([0] + [4]) = $18
	$2 = ($1 + [12])
	$9 = (($18 + [16]) + [8])
	$10 = ($1 + [20])
	$11 = ($1 + [16])
	$12 = (*($0 + [4]) + [108])
	$13 = ($0 + [24])
	$14 = [0]
	$15 = [1]
	
.LOOP $label$1:
	$3 = *((*(*($0)) + ($15 << [1])))
	if ( ($3 == 0) ){ goto $label$2 }
	*($9) = [0]
	*($18 + [20]) = $3
	$14 = ($14 + [1])
	*($18 + [16]) = $14
	$16 = *($11)
	if ( ((int_32)$16 == (int_32)*($10)) ){ goto $label$4 }
	*($16) = *($18 + [16])
	*(($16 + [8])) = *($9)
	*($11) = (*($11) + [12])
	goto $label$3 
	
.LABEL $label$4
	CALL $242($2, ($18 + [16]))
	
.LABEL $label$3
	CALL $243(*($12), $3, [1], *(*(($0 + [8]))))
	if ( (*(*(($0 + [12]))) == 0) ){ goto $label$2 }
	$4 = (CASTING uint_64)(uint_32 $3)
	$6 = *($5 + [24])
	$5 = *(($0 + [16]))
	$17 = *(($5 + [28]))
	if ( ((int_32)$17 == (int_32)$6) ){ goto $label$5 }
	$16 = ($17 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$6:
	if ( ((int_64)*(*($16)) == (int_64)$4) ){ goto $label$5 }
	$17 = $16
	$8 = ($16 + [-24])
	$16 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ((int_32)$17 == (int_32)$6) ){ goto $label$8 }
	$16 = *(($17 + [-24]))
	CALL eosio_assert(((int_32)*(($16 + [20])) == (int_32)$5), [32])
	goto $label$7 
	
.LABEL $label$8
	$16 = [0]
	$8 = CALL db_find_i64(*($5), *($5 + [8]), (int_64)-4860070093188497408, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$7 }
	$16 = CALL $229($5, $8)
	CALL eosio_assert(((int_32)*($16 + [20]) == (int_32)$5), [32])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$16 != (int_32)[0]), [2656])
	$16 = *($16 + [9])
	if ( ($16 <= [3]) ){ goto $label$2 }
	$17 = ($0 + [20])
	$7 = *($17)
	$8 = *($7)
	if ( $8 ){ goto $label$9 }
	*($7) = $3
	$8 = *(*($17))
	
.LABEL $label$9
	if ( ((int_32)($8 & [65535]) != (int_32)$3) ){ goto $label$10 }
	*(($8 = *($13))) = (*($8) + [1])
	
.LABEL $label$10
	if ( ($16 <= [4]) ){ goto $label$2 }
	$16 = *(($0 + [28]))
	*($18 + [14]) = $3
	$8 = *($16 + [4])
	if ( ((uint_32)$8 >= (uint_32)*($16 + [8])) ){ goto $label$11 }
	*($8) = $3
	*(($16 + [4])) = ($8 + [2])
	goto $label$2 
	
.LABEL $label$11
	CALL $736($16, ($18 + [14]))
	
.LABEL $label$2
	$15 = ($15 + [1])
	if ( ((int_32)$15 != (int_32)[4]) ){ goto $label$1 }
	*($1 + [8]) = $14
	*($1) = *(*($0 + [32]))
	*([0] + [4]) = ($18 + [32])
}

void .FUNC $739 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$2 = int_32(($6 - $5) >> [5])
	$3 = ($2 + [1])
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$3 }
	$4 = [134217727]
	$7 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($7 >> [5]) > (uint_32)[67108862]) ){ goto $label$5 }
	$4 = int_32($7 >> [4])
	$4 = ( $3 ? $4 : ($4 <= $3) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[134217728]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $866(($4 << [5]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($2 << [5])))) = *($1)
	*(($3 + [24])) = *(($1 + [24]))
	*(($3 + [16])) = *(($1 + [16]))
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($6 - $5)
	$6 = ($3 - $1)
	$4 = ($7 + ($4 << [5]))
	$3 = ($3 + [32])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($6, $5, $1)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $867($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $872 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $870($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

int_32 .FUNC $260 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [9]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC $261 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $354 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $866([48])
	CALL $365($3)
	*($3 + [32]) = $1
	CALL $368(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $367(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $355 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $866([48])
	$4 = CALL $365($6)
	*($6 + [32]) = $0
	CALL $366(($8 + [32]), $4)
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $367(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $356 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = (*($1 + [8]) + [1])
	$4 = *($1)
	$5 = ($1 + [24])
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [3504])
	$6 = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [16]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 | [8]), ($1 + [8]), [4])
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 | [12]), ($1 + [16]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 + [20]), $5, [8])
	CALL db_update_i64(*($1 + [36]), $2, $7, [28])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $866([40]))) = (int_64)0
	*($6 + [12 align=4]) = (int_64)0
	*($6 + [20]) = [0]
	*($6 + [24]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [160])
	CALL memcpy($6, $4, [8])
	$3 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $3) > (uint_32)[3]), [160])
	CALL memcpy(($6 + [8]), $3, [4])
	*($8 + [36]) = ($4 + [12])
	CALL $79(($8 + [32]), ($6 + [12]))
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $78(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [12])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [16])) = $7
	CALL $867($7)
	
.LABEL $label$10
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $357 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $866([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [4144]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $884($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $871($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $73 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([40]))) = (int_64)0
	*($3 + [12 align=4]) = (int_64)0
	*($3 + [20]) = [0]
	*($3 + [24]) = $1
	CALL $77(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [28])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $78(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [12])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [16])) = $1
	CALL $867($1)
	
.LABEL $label$4
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $350 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($8 + [24]) = $2
	$3 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $227($5, $7)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$5), [32])
	
.LABEL $label$3
	$7 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($7, [4208])
	*($8 + [20]) = [-1]
	$1 = *($0)
	*($8 + [12]) = ($8 + [20])
	*($8 + [8]) = ($8 + [24])
	CALL eosio_assert($7, [352])
	CALL $372($5, $6, $1, ($8 + [8]))
	CALL eosio_assert(((int_32)uint_32(*($8 + [20]) >> [31]) ^ (int_32)[1]), [4208])
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $212 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	if ( ((int_64)*($0) == (int_64)$1) ){ goto $label$1 }
	$4 = ($0 + [16])
	$3 = CALL db_lowerbound_i64(*($0 + [8]), *($4), (int_64)3631284361385115648, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$2 = ($0 + [8])
	CALL $214($2, $3)
	if ( ((int_32)*(CALL $214($2, CALL $fimport$25(*($2), *($4), (int_64)3631284361385115648, (int_64)0)) + [8]) != (int_32)[1]) ){ goto $label$1 }
	if ( CALL $215($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [2512])
	
.LABEL $label$1
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $70($0, *($1))
	CALL $70($0, *($1 + [4]))
	CALL $867($1)
	
.LABEL $label$1
}

void .FUNC $351 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $866([40])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = (int_64)1397703940
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5459781
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1120])
	*($4 + [24]) = $1
	CALL $371(($7 + [16]), $4)
	*($7 + [32]) = $4
	$2 = *($4)
	*($7 + [16]) = $2
	$6 = *($4 + [28])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $2
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $370(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $867($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $181 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	CALL $212(($0 + [600]), $1)
	$4 = *($2)
	if ( ((int_32)*($2 + [4]) == (int_32)$4) ){ goto $label$1 }
	$3 = ($0 + [1208])
	$0 = [0]
	$5 = [0]
	
.LOOP $label$2:
	CALL $482($3, $1, *(($4 + $0)))
	$0 = ($0 + [4])
	$4 = *($2)
	$5 = ($5 + [1])
	if ( ($5 <= int_32((*(($2 + [4])) - $4) >> [2])) ){ goto $label$2 }
	
.LABEL $label$1
}

int_32 .FUNC $494 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([40])) + [8]) = [0]
	*($6) = (int_64)0
	*($6 + [12]) = [0]
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = $0
	CALL $498(($8 + [32]), $6)
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $499(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $352 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $866([40])
	$6 = CALL $369($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $370(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $269 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	$4 = *(($1 + [152]))
	$9 = *(($1 + [156]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$8 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$9 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$8 = ($1 + [128])
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$6 }
	$6 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$8), [32])
	goto $label$5 
	
.LABEL $label$6
	$6 = [0]
	$9 = CALL db_find_i64(*(($1 + [128])), *(($1 + [136])), (int_64)-6030912128150405120, $2)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $96($8, $9)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$8), [32])
	goto $label$4 
	
.LABEL $label$5
	if ( $6 ){ goto $label$4 }
	if ( ($3 == 0) ){ goto $label$4 }
	*($10 + [40]) = $2
	*($10 + [32]) = (int_64)0
	*($10 + [31]) = [0]
	*($10 + [28]) = [0]
	$7 = *($1)
	*($10 + [12]) = ($10 + [31])
	*($10 + [8]) = ($10 + [40])
	*($10 + [16]) = ($10 + [28])
	*($10 + [20]) = ($10 + [32])
	CALL $277($10, $8, $7, ($10 + [8]))
	CALL $278($0, $8, $2)
	goto $label$3 
	
.LABEL $label$4
	*($0 + [4]) = $6
	*($0) = $8
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [48])
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[12]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [576])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[3]), [576])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $7, [4])
	$6 = (*($4) + [4])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[1]), [576])
	CALL memcpy(*($4), ($7 + [4]), [2])
	$6 = (*($4) + [2])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[3]), [576])
	CALL memcpy(*($4), ($7 + [8]), [4])
	$6 = (*($4) + [4])
	*($4) = $6
	$7 = ($7 + [12])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $601 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [144])
	*([0] + [4]) = $18
	*($18 + [136]) = $1
	CALL require_auth($1)
	$4 = [0]
	*((($18 + [96]) + [32])) = [0]
	*($18 + [112]) = (int_64)-1
	*($18 + [120]) = (int_64)0
	$7 = *($0)
	*($18 + [96]) = $7
	*($18 + [104]) = $7
	$17 = CALL db_find_i64($7, $7, (int_64)-7695177680118874112, $1)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $566(($18 + [96]), $17)
	CALL eosio_assert(((int_32)*($4 + [28]) == (int_32)($18 + [96])), [32])
	$1 = *($18 + [136])
	
.LABEL $label$1
	$15 = *(($0 + [32]))
	$13 = *(($0 + [36]))
	if ( ((int_32)$13 == (int_32)$15) ){ goto $label$2 }
	$17 = ($13 + [-24])
	$16 = ([0] - $15)
	
.LOOP $label$3:
	if ( ((int_64)*(*($17)) == (int_64)$1) ){ goto $label$2 }
	$13 = $17
	$6 = ($17 + [-24])
	$17 = $6
	if ( ((int_32)($6 + $16) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$6 = ($0 + [8])
	if ( ((int_32)$13 == (int_32)$15) ){ goto $label$5 }
	$17 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [20]) == (int_32)$6), [32])
	goto $label$4 
	
.LABEL $label$5
	$17 = [0]
	$13 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7695177867839143936, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$4 }
	$17 = CALL $43($6, $13)
	CALL eosio_assert(((int_32)*($17 + [20]) == (int_32)$6), [32])
	
.LABEL $label$4
	$16 = [0]
	CALL eosio_assert(((int_32)$17 != (int_32)[0]), [6224])
	$6 = [0]
	$17 = *($17)
	$17 = ( ($17 + [8]) ? ($0 + [68]) : $17 )
	$13 = *($17 + [4])
	if ( ((int_32)$13 == (int_32)$17) ){ goto $label$6 }
	$13 = ((int_32)($13 - $17) / (int_32)[12])
	$6 = [0]
	
.LOOP $label$8:
	if ( ((int_32)*($17) == (int_32)$2) ){ goto $label$7 }
	$17 = ($17 + [12])
	$6 = ($6 + [1])
	if ( ($6 <= $13) ){ goto $label$8 }
	$6 = [0]
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert((*(($17 + [9])) == 0), [6240])
	$6 = [1]
	
.LABEL $label$6
	CALL eosio_assert($6, [6272])
	*(($18 + [88])) = [0]
	*($18 + [72]) = (int_64)-1
	*($18 + [80]) = (int_64)0
	$1 = *($0)
	*($18 + [56]) = $1
	*($18 + [64]) = $1
	$17 = CALL db_find_i64($1, $1, (int_64)-4852160326797361152, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$9 }
	$16 = CALL $567(($18 + [56]), $17)
	CALL eosio_assert(((int_32)*($16 + [28]) == (int_32)($18 + [56])), [32])
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$16 != (int_32)[0]), [5808])
	$17 = *([0] + [20])
	$6 = *($16 + [8])
	$1 = CALL current_time()
	$13 = *([0] + [12])
	$11 = [1]
	CALL $269(($18 + [48]), *($0 + [60]), *($18 + [136]), [1])
	$5 = ((CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000)) - $13)
	$17 = ((int_32)((int_32)$17 * (int_32)(uint_32([545842] >> (($6 << [2]) + [-4])) & [15])) * (int_32)[6])
	$6 = *(*($18 + [52]) + [56])
	if ( ($6 <= [4]) ){ goto $label$10 }
	$11 = [2]
	if ( ($6 <= [8]) ){ goto $label$10 }
	$11 = [3]
	if ( ($6 <= [12]) ){ goto $label$10 }
	$11 = ( [4] ? [5] : ($6 <= [16]) )
	
.LABEL $label$10
	*($18 + [32]) = $2
	*($18 + [44]) = [0]
	*($18 + [36]) = $5
	*($18 + [40]) = ($17 + $5)
	if ( ($4 == 0) ){ goto $label$15 }
	$12 = [0]
	*($18 + [16]) = [0]
	*($18 + [8]) = (int_64)0
	$13 = *($4 + [16])
	$8 = ($4 + [20])
	$14 = *($8)
	if ( ((int_32)$14 == (int_32)$13) ){ goto $label$16 }
	$6 = [0]
	$10 = ($4 + [16])
	$15 = [0]
	$12 = [0]
	
.LOOP $label$17:
	$17 = ($13 + $6)
	$16 = *(($17 + [12]))
	$9 = ($17 + [8])
	if ( ($5 <= *($9)) ){ goto $label$19 }
	if ( ($16 & [255]) ){ goto $label$18 }
	$16 = [0]
	
.LABEL $label$19
	$16 = (((int_32)$16 ^ (int_32)[1]) & [255])
	$13 = *($18 + [12])
	if ( ((int_32)$13 == (int_32)*((($18 + [8]) + [8]))) ){ goto $label$21 }
	*($13) = *($17)
	*(($13 + [8])) = *($9)
	*($18 + [12]) = ($13 + [16])
	goto $label$20 
	
.LABEL $label$21
	CALL $603(($18 + [8]), $17)
	
.LABEL $label$20
	$12 = ($16 + $12)
	CALL eosio_assert(((int_32)*($17) != (int_32)$2), [6336])
	$13 = *($10)
	$14 = *($8)
	
.LABEL $label$18
	$6 = ($6 + [16])
	$15 = ($15 + [1])
	if ( ($15 <= int_32(($14 - $13) >> [4])) ){ goto $label$17 }
	
.LABEL $label$16
	CALL eosio_assert(((int_32)$12 < (int_32)$11), [6304])
	$17 = *($18 + [12])
	if ( ((int_32)$17 == (int_32)*((($18 + [8]) + [8]))) ){ goto $label$14 }
	*($17) = *($18 + [32])
	*(($17 + [8])) = *((($18 + [32]) + [8]))
	*($18 + [12]) = ($17 + [16])
	goto $label$13 
	
.LABEL $label$15
	$1 = *($0)
	*($18 + [12]) = ($18 + [32])
	*($18 + [8]) = ($18 + [136])
	CALL $602(($18 + [24]), ($18 + [96]), $1, ($18 + [8]))
	$13 = *($18 + [80])
	if ( $13 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	CALL $603(($18 + [8]), ($18 + [32]))
	
.LABEL $label$13
	$1 = *($0)
	*($18 + [28]) = ($18 + [8])
	*($18 + [24]) = ($18 + [136])
	CALL eosio_assert([1], [352])
	CALL $604(($18 + [96]), $4, $1, ($18 + [24]))
	$17 = *($18 + [8])
	if ( ($17 == 0) ){ goto $label$22 }
	*($18 + [12]) = $17
	CALL $867($17)
	
.LABEL $label$22
	$13 = *($18 + [80])
	if ( ($13 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$16 = ($18 + [84])
	$17 = *($16)
	if ( ((int_32)$17 == (int_32)$13) ){ goto $label$24 }
	
.LOOP $label$25:
	$17 = ($17 + [-24])
	$6 = *($17)
	*($17) = [0]
	if ( ($6 == 0) ){ goto $label$26 }
	CALL $867($6)
	
.LABEL $label$26
	if ( ((int_32)$13 != (int_32)$17) ){ goto $label$25 }
	$17 = *(($18 + [80]))
	goto $label$23 
	
.LABEL $label$24
	$17 = $13
	
.LABEL $label$23
	*($16) = $13
	CALL $867($17)
	
.LABEL $label$11
	$16 = *($18 + [120])
	if ( ($16 == 0) ){ goto $label$27 }
	$15 = ($18 + [124])
	$17 = *($15)
	if ( ((int_32)$17 == (int_32)$16) ){ goto $label$29 }
	
.LOOP $label$30:
	$17 = ($17 + [-24])
	$6 = *($17)
	*($17) = [0]
	if ( ($6 == 0) ){ goto $label$31 }
	$13 = *($6 + [16])
	if ( ($13 == 0) ){ goto $label$32 }
	*(($6 + [20])) = $13
	CALL $867($13)
	
.LABEL $label$32
	CALL $867($6)
	
.LABEL $label$31
	if ( ((int_32)$16 != (int_32)$17) ){ goto $label$30 }
	$17 = *(($18 + [120]))
	goto $label$28 
	
.LABEL $label$29
	$17 = $16
	
.LABEL $label$28
	*($15) = $16
	CALL $867($17)
	
.LABEL $label$27
	*([0] + [4]) = ($18 + [144])
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	*(*(($7 = *($0 + [4])))) = [1]
	$2 = *($0)
	*($1) = *(*($7 + [4]))
	*($1 + [8]) = *(*($7))
	$7 = *($7)
	$4 = ($1 + [16])
	$9 = *($4)
	if ( ((int_32)$9 == (int_32)*(($1 + [20]))) ){ goto $label$2 }
	*($9) = *($7)
	*(($9 + [8])) = *(($7 + [8]))
	$9 = (*($4) + [12])
	*($4) = $9
	$6 = ($1 + [12])
	goto $label$1 
	
.LABEL $label$2
	$6 = ($1 + [12])
	CALL $75($6, $7)
	$9 = *($4)
	
.LABEL $label$1
	$4 = ($1 + [8])
	$7 = [12]
	$3 = *($6)
	$5 = ($9 - $3)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[12]))
	
.LOOP $label$3:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$4 }
	$7 = ((((int_32)((uint_32)($5 + [-12]) / (uint_32)[12]) * (int_32)[10]) + $7) + [10])
	
.LABEL $label$4
	if ( ($7 <= [513]) ){ goto $label$6 }
	$9 = CALL malloc($7)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$5
	*($10) = $9
	$11 = ($9 + $7)
	*($10 + [8]) = $11
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	$3 = ($9 + [8])
	CALL eosio_assert(((int_32)($11 - $3) > (int_32)[3]), [576])
	CALL memcpy($3, $4, [4])
	*($10 + [4]) = ($9 + [12])
	CALL $76($10, $6)
	$8 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-5915108674644213760, *(*($0 + [8])), $8, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL free($9)
	
.LABEL $label$7
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $74 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$11 = (*([0] + [4]) - [16])
	$12 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*(*($3)) = (*($1 + [8]) + [1])
	$4 = *($1)
	*($1) = *(*($3 + [4]))
	*($1 + [8]) = *(*($3))
	$3 = *($3)
	$9 = ($1 + [16])
	$5 = *($9)
	if ( ((int_32)$5 == (int_32)*(($1 + [20]))) ){ goto $label$2 }
	*($5) = *($3)
	*(($5 + [8])) = *(($3 + [8]))
	*($9) = (*($9) + [12])
	$9 = ($1 + [12])
	goto $label$1 
	
.LABEL $label$2
	$9 = ($1 + [12])
	CALL $75($9, $3)
	
.LABEL $label$1
	$5 = ($1 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$3 = [12]
	$7 = *($9)
	$6 = *(($1 + [16]))
	$8 = ($6 - $7)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[12]))
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$4 }
	$3 = ((((int_32)((uint_32)($8 + [-12]) / (uint_32)[12]) * (int_32)[10]) + $3) + [10])
	
.LABEL $label$4
	if ( ($3 <= [513]) ){ goto $label$6 }
	$11 = CALL malloc($3)
	goto $label$5 
	
.LABEL $label$6
	$11 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $11
	
.LABEL $label$5
	*($12) = $11
	$6 = ($11 + $3)
	*($12 + [8]) = $6
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [576])
	CALL memcpy($11, $1, [8])
	$7 = ($11 + [8])
	CALL eosio_assert(((int_32)($6 - $7) > (int_32)[3]), [576])
	CALL memcpy($7, $5, [4])
	*($12 + [4]) = ($11 + [12])
	CALL $76($12, $9)
	CALL db_update_i64(*($1 + [28]), $2, $11, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL free($11)
	
.LABEL $label$7
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($12 + [16])
}

void .FUNC $759 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	*([0] + [4]) = $14
	*($1) = *(*($0))
	$2 = ($1 + [8])
	$7 = ($0 + [4])
	$8 = ($14 + [10])
	$9 = ($14 + [14])
	$10 = ($1 + [16])
	$11 = (int_64)1
	$12 = [1]
	
.LOOP $label$1:
	$4 = *($3 + [24])
	$3 = *($7)
	$13 = *(($3 + [28]))
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$2 }
	$0 = ($13 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$3:
	if ( ((int_64)*(*($0)) == (int_64)$11) ){ goto $label$2 }
	$13 = $0
	$6 = ($0 + [-24])
	$0 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$5 }
	$0 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)$3), [32])
	goto $label$4 
	
.LABEL $label$5
	$0 = [0]
	$6 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-4947914475178033152, $11)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $428($3, $6)
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)$3), [32])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [4560])
	*(($13 = ($14 + [8]))) = *($0 + [8])
	*($8) = *($0 + [12])
	*($14) = $12
	*($14 + [4]) = [0]
	*($14 + [1]) = [1]
	*(($14 + [12])) = *($0 + [10])
	*($9) = *($0 + [14])
	$0 = ($1 + [12])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)*($10)) ){ goto $label$7 }
	*($6) = *($14)
	*(($6 + [8])) = *($13)
	*($0) = (*($0) + [16])
	goto $label$6 
	
.LABEL $label$7
	CALL $445($2, $14)
	
.LABEL $label$6
	$12 = ($12 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	if ( ((int_64)$11 != (int_64)4) ){ goto $label$1 }
	*([0] + [4]) = ($14 + [16])
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$3 = ((int_32)($5 - $4) / (int_32)[12])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$2 = ((int_32)(*($0 + [8]) - $4) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$4 }
	$6 = ($2 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $866(((int_32)$6 * (int_32)[12]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	*(($3 = ($7 + ((int_32)$3 * (int_32)[12])))) = *($1)
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($5 - $4)
	$5 = ($3 + ((int_32)((int_32)$1 / (int_32)[-12]) * (int_32)[12]))
	$6 = ($7 + ((int_32)$6 * (int_32)[12]))
	$3 = ($3 + [12])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($5, $4, $1)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $5
	*(($0 + [4])) = $3
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $867($4)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $761 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$1 = ($0 + [8])
	$6 = [0]
	$5 = [0]
	$3 = ($0 + [16])
	$2 = CALL db_lowerbound_i64(*($0 + [8]), *($3), (int_64)3631284361385115648, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	CALL $214($1, $2)
	$5 = [1]
	
.LABEL $label$1
	CALL eosio_assert($5, [8224])
	$5 = CALL db_lowerbound_i64(*($1), *($3), (int_64)3631284361385115648, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL $214($1, $5)
	
.LABEL $label$2
	$4 = *($0)
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [352])
	CALL $762($1, $6, $4, ($7 + [8]))
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $358 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*(($1 + [36])) == (int_32)$0), [2272])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [2320])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2384])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $867($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $867($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [40]))
}

void .FUNC $359 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($8 + [24]) = $2
	$3 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [92]) == (int_32)$6), [32])
	$2 = *($0)
	if ( $5 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-4992616317627400192, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $324($6, $5)
	CALL eosio_assert(((int_32)*($5 + [92]) == (int_32)$6), [32])
	$2 = *($0)
	
.LABEL $label$6
	*($8 + [16]) = $1
	CALL eosio_assert([1], [352])
	CALL $361($6, $5, $2, ($8 + [16]))
	goto $label$3 
	
.LABEL $label$5
	$2 = *($0)
	
.LABEL $label$4
	*($8 + [20]) = $1
	*($8 + [16]) = ($8 + [24])
	CALL $360(($8 + [8]), $6, $2, ($8 + [16]))
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $608 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [160])
	*([0] + [4]) = $16
	*($16 + [143]) = $2
	$4 = *(($0 + [40]))
	$8 = *(($0 + [44]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$1 }
	$9 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$1 }
	$8 = $9
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [16])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$5 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [20]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$9 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $225($3, $9)
	CALL eosio_assert(((int_32)*($5 + [20]) == (int_32)$3), [32])
	
.LABEL $label$3
	$6 = [0]
	$4 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($4, [5536])
	$9 = *($5 + [8])
	$8 = *(($5 + [12]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$6 }
	$8 = int_32(($8 - $9) >> [4])
	
.LOOP $label$7:
	if ( ((int_32)*($9) == (int_32)$2) ){ goto $label$5 }
	$9 = ($9 + [16])
	$6 = ($6 + [1])
	if ( ($6 <= $8) ){ goto $label$7 }
	
.LABEL $label$6
	CALL eosio_assert([0], [6368])
	$9 = *($5 + [8])
	
.LABEL $label$5
	CALL $609(($16 + [96]), $0, $1, $9)
	$11 = *($0 + [8])
	*($16 + [60]) = ($16 + [96])
	*($16 + [56]) = ($16 + [143])
	CALL eosio_assert($4, [352])
	CALL $610($3, $5, $11, ($16 + [56]))
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [5472]
	$12 = (int_64)0
	
.LOOP $label$8:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$9 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$6 = ($6 + [165])
	goto $label$10 
	
.LABEL $label$11
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$9
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$8 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [5472]
	$14 = (int_64)0
	
.LOOP $label$12:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$13 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$6 = ($6 + [165])
	goto $label$14 
	
.LABEL $label$15
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$13
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$12 }
	*(($16 + [88])) = [0]
	*($16 + [72]) = (int_64)-1
	$11 = (int_64)0
	*($16 + [80]) = (int_64)0
	*($16 + [92]) = [0]
	*($16 + [64]) = $14
	*($16 + [56]) = $12
	$9 = CALL db_find_i64($12, $14, (int_64)4409450872558497280, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$16 }
	CALL eosio_assert(((int_32)*(CALL $611(($16 + [56]), $9) + [76]) == (int_32)($16 + [56])), [32])
	$7 = *(($0 + [8]))
	$13 = (int_64)59
	$9 = [1152]
	$12 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$22 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$6 = ($6 + [165])
	goto $label$20 
	
.LABEL $label$22
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$18
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$17 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [5472]
	$14 = (int_64)0
	
.LOOP $label$23:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$24 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$6 = ($6 + [165])
	goto $label$25 
	
.LABEL $label$26
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$24
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$23 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [6400]
	$15 = (int_64)0
	
.LOOP $label$27:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$28 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$6 = ($6 + [165])
	goto $label$29 
	
.LABEL $label$30
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$28
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$27 }
	*($16 + [8]) = $1
	*($16 + [24]) = $15
	*($16 + [16]) = $14
	*(($9 = CALL $866([16]))) = $7
	*($9 + [8]) = $12
	*(($6 = ($16 + [48]))) = [0]
	$8 = ($9 + [16])
	*(($16 + [40])) = $8
	*(($16 + [36])) = $8
	*($16 + [32]) = $9
	*($16 + [44]) = [0]
	*(($16 + [52])) = [0]
	CALL $83(($16 + [44]), [8])
	$9 = *($16 + [44])
	CALL eosio_assert(((int_32)(*($6) - $9) > (int_32)[7]), [576])
	CALL memcpy($9, ($16 + [8]), [8])
	CALL $65(($16 + [144]), ($16 + [16]))
	$9 = *($16 + [144])
	CALL send_inline($9, (*($16 + [148]) - $9))
	$9 = *($16 + [144])
	if ( ($9 == 0) ){ goto $label$31 }
	*($16 + [148]) = $9
	CALL $867($9)
	
.LABEL $label$31
	$9 = *($16 + [44])
	if ( ($9 == 0) ){ goto $label$32 }
	*(($16 + [48])) = $9
	CALL $867($9)
	
.LABEL $label$32
	$9 = *($16 + [32])
	if ( ($9 == 0) ){ goto $label$16 }
	*(($16 + [36])) = $9
	CALL $867($9)
	
.LABEL $label$16
	CALL $612(($16 + [80]))
	*([0] + [4]) = ($16 + [160])
}

void .FUNC $609 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$4 = *($1 + [8])
	*($7 + [8]) = $4
	*($7 + [16]) = $4
	$6 = [0]
	$5 = CALL db_find_i64($4, $4, (int_64)-4947914475178033152, *($3))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $428(($7 + [8]), $5)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)($7 + [8])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [4560])
	$5 = (*($3 + [1]) + [-1])
	*($0) = (((int_32)$5 * (int_32)*($6 + [16])) + *($6 + [8]))
	*($0 + [4]) = (((int_32)$5 * (int_32)*($6 + [20])) + *($6 + [12]))
	*($0 + [8]) = (((int_32)$5 * (int_32)*($6 + [18])) + *($6 + [10]))
	*($0 + [12]) = *($6 + [14])
	CALL $618(*($1 + [60]), $0, $2, *($3))
	CALL $619(*($1 + [68]), $0, $2, *($3))
	CALL $620(*($1 + [92]), $0, $2, *($3))
	$3 = *($7 + [32])
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($7 + [36])
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $867($0)
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$5 }
	$6 = *(($7 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$6 = $3
	
.LABEL $label$3
	*($1) = $3
	CALL $867($6)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $606 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$5 = (*([0] + [4]) - [48])
	$10 = $5
	*([0] + [4]) = $5
	$2 = *($0)
	$8 = *($0 + [4])
	*($1) = *(*($8))
	$8 = *($8 + [4])
	$6 = ($1 + [20])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)*(($1 + [24]))) ){ goto $label$2 }
	*($4) = *($8)
	*(($4 + [8])) = *(($8 + [8]))
	$8 = (*($6) + [16])
	*($6) = $8
	$4 = ($1 + [16])
	goto $label$1 
	
.LABEL $label$2
	$4 = ($1 + [16])
	CALL $603($4, $8)
	$8 = *($6)
	
.LABEL $label$1
	$3 = *($4)
	$7 = ($8 - $3)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [4]))
	$6 = [16]
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$4 }
	$6 = ((((int_32)uint_32(($7 + [-16]) >> [4]) * (int_32)[11]) + $6) + [11])
	
.LABEL $label$4
	if ( ($6 <= [513]) ){ goto $label$6 }
	$7 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($5 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$5
	*($10 + [8]) = $7
	$3 = ($7 + $6)
	*($10 + [16]) = $3
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [576])
	CALL memcpy($7, $1, [8])
	$8 = ($7 + [8])
	CALL eosio_assert(((int_32)($3 - $8) > (int_32)[3]), [576])
	CALL memcpy($8, ($1 + [8]), [4])
	$8 = ($7 + [12])
	CALL eosio_assert(((int_32)($3 - $8) > (int_32)[3]), [576])
	CALL memcpy($8, ($1 + [12]), [4])
	$8 = ($7 + [16])
	*($10 + [12]) = $8
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [20])) - *($4)) >> [4]))
	
.LOOP $label$7:
	$4 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$5 = ((int_64)$9) != (int_64)0
	*($10 + [32]) = (($5) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)($3 - $8) > (int_32)[0]), [576])
	CALL memcpy($8, ($10 + [32]), [1])
	$8 = ($8 + [1])
	*($10 + [12]) = $8
	if ( $5 ){ goto $label$7 }
	$4 = *(($1 + [20]))
	$8 = *($1 + [16])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	*($10 + [24]) = ($10 + [8])
	*($10 + [32]) = $8
	*((($10 + [32]) + [8])) = ($8 + [8])
	*((($10 + [32]) + [12])) = ($8 + [12])
	*($10 + [36]) = ($8 + [4])
	CALL $577(($10 + [32]), ($10 + [24]))
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$8
	$9 = *($1)
	*($1 + [32]) = CALL db_store_i64(*($2 + [8]), (int_64)-7695177680118874112, *(*($0 + [8])), $9, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$10 }
	CALL free($7)
	
.LABEL $label$10
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$11 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $607 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	*($7 + [14]) = $2
	*($7 + [13]) = $3
	CALL require_auth($1)
	CALL eosio_assert(CALL $630($0, $1, int_32(($2 << [16]) >> [16])), [6544])
	$4 = *(($0 + [32]))
	$6 = *(($0 + [36]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$1 }
	$2 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$1 }
	$6 = $2
	$3 = ($2 + [-24])
	$2 = $3
	if ( ((int_32)($3 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [8])
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$4 }
	$2 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [20]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$2 = [0]
	$6 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7695177867839143936, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $43($3, $6)
	CALL eosio_assert(((int_32)*($2 + [20]) == (int_32)$3), [32])
	
.LABEL $label$3
	$1 = *($0)
	*($7 + [8]) = $0
	*($7 + [4]) = ($7 + [14])
	*($7) = ($7 + [13])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [352])
	CALL $631($3, $2, $1, $7)
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $604 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$7 = (*([0] + [4]) - [48])
	$11 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$10 = *(*($3))
	*($1) = $10
	$8 = [16]
	$3 = *($3 + [4])
	$6 = ($1 + [16])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	CALL $605($6, *($3), *($3 + [4]))
	$10 = *($1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)$10), [512])
	$6 = *($6)
	$3 = *(($1 + [20]))
	$5 = ($3 - $6)
	$10 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$2:
	$8 = ($8 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$3 }
	$8 = ((((int_32)uint_32(($5 + [-16]) >> [4]) * (int_32)[11]) + $8) + [11])
	
.LABEL $label$3
	if ( ($8 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($8)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($7 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	*($11 + [8]) = $9
	$5 = ($9 + $8)
	*($11 + [16]) = $5
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	$3 = ($9 + [8])
	CALL eosio_assert(((int_32)($5 - $3) > (int_32)[3]), [576])
	CALL memcpy($3, ($1 + [8]), [4])
	$3 = ($9 + [12])
	CALL eosio_assert(((int_32)($5 - $3) > (int_32)[3]), [576])
	CALL memcpy($3, ($1 + [12]), [4])
	$3 = ($9 + [16])
	*($11 + [12]) = $3
	$10 = (CASTING uint_64)(uint_32 int_32((*(($1 + [20])) - *(($1 + [16]))) >> [4]))
	
.LOOP $label$6:
	$6 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$7 = ((int_64)$10) != (int_64)0
	*($11 + [32]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)($5 - $3) > (int_32)[0]), [576])
	CALL memcpy($3, ($11 + [32]), [1])
	$3 = ($3 + [1])
	*($11 + [12]) = $3
	if ( $7 ){ goto $label$6 }
	$6 = *(($1 + [20]))
	$3 = *(($1 + [16]))
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	*($11 + [24]) = ($11 + [8])
	*($11 + [32]) = $3
	*((($11 + [32]) + [8])) = ($3 + [8])
	*((($11 + [32]) + [12])) = ($3 + [12])
	*($11 + [36]) = ($3 + [4])
	CALL $577(($11 + [32]), ($11 + [24]))
	$3 = ($3 + [16])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	
.LABEL $label$7
	CALL db_update_i64(*($1 + [32]), $2, $9, $8)
	if ( ($8 <= [513]) ){ goto $label$9 }
	CALL free($9)
	
.LABEL $label$9
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($11 + [48])
}

void .FUNC $605 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [4])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $867($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$5 = [268435455]
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [3])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [4])
	$5 = CALL $866($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [4])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [4])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [4]))
	return (unreachable)
	
.LABEL $label$1
	CALL $882($0)
}

void .FUNC $602 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([40]))) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [16 align=4]) = (int_64)0
	*($3 + [24]) = [0]
	*($3 + [28]) = $1
	CALL $606(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [32])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $581(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [16])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [20])) = $1
	CALL $867($1)
	
.LABEL $label$4
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $603 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$2 = int_32(($6 - $5) >> [4])
	$3 = ($2 + [1])
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$3 }
	$4 = [268435455]
	$7 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($7 >> [4]) > (uint_32)[134217726]) ){ goto $label$5 }
	$4 = int_32($7 >> [3])
	$4 = ( $3 ? $4 : ($4 <= $3) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $866(($4 << [4]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($2 << [4])))) = *($1)
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($6 - $5)
	$6 = ($3 - $1)
	$4 = ($7 + ($4 << [4]))
	$3 = ($3 + [16])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($6, $5, $1)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $867($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $600 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *(($0 + [40]))
	$5 = *(($0 + [44]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$1 }
	$6 = ($5 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$5 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [16])
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [20]) == (int_32)$6), [32])
	goto $label$3 
	
.LABEL $label$4
	$4 = [0]
	$5 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $225($6, $5)
	CALL eosio_assert(((int_32)*($4 + [20]) == (int_32)$6), [32])
	
.LABEL $label$3
	$6 = [0]
	$5 = *($4)
	$4 = ( ($4 + [8]) ? ($0 + [80]) : $4 )
	$3 = *($4 + [4])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$4 = ($5 + [1])
	$0 = int_32(($3 - $5) >> [4])
	$5 = [0]
	$6 = [0]
	
.LOOP $label$6:
	$3 = *($4)
	$6 = ( $3 ? $6 : ((int_32)$3 > (int_32)$6) )
	$4 = ($4 + [16])
	$5 = ($5 + [1])
	if ( ($5 <= $0) ){ goto $label$6 }
	
.LABEL $label$5
	return $6
}

void .FUNC $353 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$3 = *($3)
	*($1 + [8]) = *($3)
	*(($1 + [20])) = *(($3 + [12]))
	*(($5 = ($1 + [16]))) = *(($3 + [8]))
	*(($1 + [12])) = *(($3 + [4]))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 + [16]), $5, [8])
	CALL db_update_i64(*($1 + [28]), $2, $6, [24])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $813 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([40])) + [24]) = $1
	*($3) = (int_64)0
	CALL $832(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [28])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $507(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $812 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	float_64 $4
	float_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$25 = (*([0] + [4]) - [64])
	*([0] + [4]) = $25
	*($25 + [52]) = $1
	$9 = (int_64)0
	$19 = (int_64)59
	$23 = [8512]
	$20 = (int_64)0
	
.LOOP $label$1:
	$21 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$2 }
	$11 = *($23)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$11 = ($11 + [165])
	goto $label$3 
	
.LABEL $label$4
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($11 & [31])) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$2
	$23 = ($23 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$20 = ((int_64)$21 | (int_64)$20)
	$19 = ((int_64)$19 + (int_64)-5)
	if ( ((int_64)$19 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($20)
	$2 = ($0 + [208])
	$23 = [0]
	$24 = [0]
	$11 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)-3732754643092393472, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$5 }
	$24 = CALL $504($2, $11)
	
.LABEL $label$5
	*($25 + [40]) = $2
	*($25 + [44]) = $24
	CALL eosio_assert(((int_32)$24 != (int_32)[0]), [5104])
	CALL eosio_assert(((int_64)*($24 + [8]) == (int_64)1), [9248])
	$3 = ($0 + [88])
	$10 = ($0 + [96])
	$11 = CALL db_lowerbound_i64(*($0 + [88]), *($10), (int_64)-3732485072926388848, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$6 }
	CALL $512($3, $11)
	$23 = [1]
	
.LABEL $label$6
	CALL eosio_assert($23, [9280])
	$11 = [0]
	$8 = [0]
	$23 = CALL db_lowerbound_i64(*($3), *($10), (int_64)-3732485072926388848, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$7 }
	$8 = CALL $512($3, $23)
	
.LABEL $label$7
	CALL eosio_assert([1], [1248])
	$9 = (int_64)5524308
	
.LOOP $label$10:
	$23 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$10 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$10 = [0]
	
.LABEL $label$8
	CALL eosio_assert($10, [1120])
	CALL eosio_assert(((int_64)*(($8 + [24])) == (int_64)1414222852), [2688])
	CALL eosio_assert(((int_64)*($8 + [16]) > (int_64)0), [9312])
	$19 = *(CALL $512($3, CALL $fimport$25(*(($0 + [88])), *(($0 + [96])), (int_64)-3732485072926388848, (int_64)0)) + [16])
	$11 = ($0 + [8])
	$21 = *($24 + [16])
	$10 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-3732485072939384832, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$13 }
	$23 = CALL $523($11, $10)
	
.LABEL $label$13
	*($25 + [36]) = $23
	*($25 + [32]) = $11
	if ( (int_64)(*($24 + [48]) == 0) ){ goto $label$14 }
	$23 = [0]
	$24 = CALL db_lowerbound_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-3732485072939384832, *($24 + [56]))
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$15 }
	$23 = CALL $523($11, $24)
	
.LABEL $label$15
	*($25 + [36]) = $23
	*($25 + [32]) = $11
	
.LABEL $label$14
	$9 = CALL current_time()
	$20 = *([0] + [12])
	*($25 + [24]) = (int_64)0
	$11 = (CASTING uint_32)(uint_64 ((uint_64)$9 / (uint_64)(int_64)1000000))
	$24 = ((uint_32)$11 % (uint_32)[3600])
	if ( ($23 == 0) ){ goto $label$16 }
	if ( ($1 == 0) ){ goto $label$16 }
	$4 = (CASTING float_64)(int_64 $19)
	$5 = (CASTING float_64)(int_64 ((int_64)$21 * (int_64)1000000))
	$19 = (int_64))((CASTING uint_64)(uint_32 ($11 - $24)) - $20)
	$7 = ($0 + [288])
	$6 = ($0 + [128])
	$12 = ($0 + [328])
	$13 = ($0 + [152])
	$14 = ($0 + [156])
	$15 = ($0 + [136])
	$16 = ($0 + [312])
	$17 = ($0 + [316])
	$18 = ($0 + [296])
	$22 = [0]
	
.LOOP $label$17:
	*($25 + [16]) = (Rounds 0)(((float_64)$5 * (float_64)((float_64)(CASTING float_64)(int_64 *($23 + [8])) / (float_64)$4)))
	$9 = *($23)
	$1 = *($8 + [24])
	$8 = *($12)
	$24 = *(($8 + [28]))
	if ( ((int_32)$24 == (int_32)$1) ){ goto $label$18 }
	$23 = ($24 + [-24])
	$10 = ([0] - $1)
	
.LOOP $label$19:
	if ( ((int_64)*(*($23)) == (int_64)$9) ){ goto $label$18 }
	$24 = $23
	$11 = ($23 + [-24])
	$23 = $11
	if ( ((int_32)($11 + $10) != (int_32)[-24]) ){ goto $label$19 }
	
.LABEL $label$18
	if ( ((int_32)$24 == (int_32)$1) ){ goto $label$28 }
	$23 = *(($24 + [-24]))
	CALL eosio_assert(((int_32)*($23 + [24]) == (int_32)$8), [32])
	if ( $23 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$23 = [0]
	$11 = CALL db_find_i64(*($8), *($8 + [8]), (int_64)-6030912142679474176, $9)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$29 }
	$23 = CALL $13($8, $11)
	CALL eosio_assert(((int_32)*($23 + [24]) == (int_32)$8), [32])
	
.LABEL $label$29
	if ( ($23 == 0) ){ goto $label$26 }
	
.LABEL $label$27
	if ( ((int_64))($19 - *($23 + [12])) > (int_64)((int_64)*([0] + [16]) << (int_64)(CASTING uint_64)(uint_32 ((uint_32)*($23 + [20]) > (uint_32)[20000])))) ){ goto $label$26 }
	$9 = *(*($25 + [36]))
	$8 = *($13)
	$24 = *($14)
	if ( ((int_32)$24 == (int_32)$8) ){ goto $label$30 }
	$23 = ($24 + [-24])
	$10 = ([0] - $8)
	
.LOOP $label$31:
	if ( ((int_64)*(*($23)) == (int_64)$9) ){ goto $label$30 }
	$24 = $23
	$11 = ($23 + [-24])
	$23 = $11
	if ( ((int_32)($11 + $10) != (int_32)[-24]) ){ goto $label$31 }
	
.LABEL $label$30
	if ( ((int_32)$24 == (int_32)$8) ){ goto $label$25 }
	$23 = *(($24 + [-24]))
	CALL eosio_assert(((int_32)*($23 + [24]) == (int_32)$6), [32])
	$9 = *($0)
	if ( $23 ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$26
	*($25 + [24]) = ((int_64)*($25 + [24]) + (int_64)*($25 + [16]))
	goto $label$20 
	
.LABEL $label$25
	$23 = CALL db_find_i64(*($6), *($15), (int_64)-6017485966751858688, $9)
	if ( ((int_32)$23 <= (int_32)[-1]) ){ goto $label$23 }
	$23 = CALL $505($6, $23)
	CALL eosio_assert(((int_32)*($23 + [24]) == (int_32)$6), [32])
	$9 = *($0)
	
.LABEL $label$24
	*($25 + [56]) = ($25 + [16])
	CALL eosio_assert([1], [352])
	CALL $814($6, $23, $9, ($25 + [56]))
	goto $label$21 
	
.LABEL $label$23
	$9 = *($0)
	
.LABEL $label$22
	*($25 + [60]) = ($25 + [16])
	*($25 + [56]) = ($25 + [32])
	CALL $813(($25 + [8]), $6, $9, ($25 + [56]))
	
.LABEL $label$21
	$9 = *(*($25 + [36]))
	$8 = *($16)
	$24 = *($17)
	if ( ((int_32)$24 == (int_32)$8) ){ goto $label$32 }
	$23 = ($24 + [-24])
	$10 = ([0] - $8)
	
.LOOP $label$33:
	if ( ((int_64)*(*($23)) == (int_64)$9) ){ goto $label$32 }
	$24 = $23
	$11 = ($23 + [-24])
	$23 = $11
	if ( ((int_32)($11 + $10) != (int_32)[-24]) ){ goto $label$33 }
	
.LABEL $label$32
	if ( ((int_32)$24 == (int_32)$8) ){ goto $label$37 }
	$23 = *(($24 + [-24]))
	CALL eosio_assert(((int_32)*($23 + [56]) == (int_32)$7), [32])
	$9 = *($0)
	if ( $23 ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$23 = CALL db_find_i64(*($7), *($18), (int_64)-4992616317593845760, $9)
	if ( ((int_32)$23 <= (int_32)[-1]) ){ goto $label$35 }
	$23 = CALL $420($7, $23)
	CALL eosio_assert(((int_32)*($23 + [56]) == (int_32)$7), [32])
	$9 = *($0)
	
.LABEL $label$36
	*($25 + [56]) = ($25 + [16])
	CALL eosio_assert([1], [352])
	CALL $816($7, $23, $9, ($25 + [56]))
	goto $label$20 
	
.LABEL $label$35
	$9 = *($0)
	
.LABEL $label$34
	*($25 + [60]) = ($25 + [16])
	*($25 + [56]) = ($25 + [32])
	CALL $815(($25 + [8]), $7, $9, ($25 + [56]))
	
.LABEL $label$20
	$23 = [0]
	CALL eosio_assert(((int_32)*($25 + [36]) != (int_32)[0]), [960])
	$11 = CALL db_next_i64(*(*($25 + [36]) + [28]), ($25 + [56]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$38 }
	$23 = CALL $523(*($25 + [32]), $11)
	
.LABEL $label$38
	*($25 + [36]) = $23
	if ( ($23 == 0) ){ goto $label$39 }
	$22 = ($22 + [1])
	if ( ($22 <= *($25 + [52])) ){ goto $label$17 }
	
.LABEL $label$39
	if ( (int_64)(*($25 + [24]) == 0) ){ goto $label$16 }
	$11 = ($0 + [168])
	$23 = [0]
	$24 = CALL db_lowerbound_i64(*($0 + [168]), *(($0 + [176])), (int_64)-3732754643145121280, (int_64)0)
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$40 }
	$23 = CALL $455($11, $24)
	
.LABEL $label$40
	$9 = *($0)
	*($25 + [56]) = ($25 + [24])
	CALL eosio_assert(((int_32)$23 != (int_32)[0]), [352])
	CALL $817($11, $23, $9, ($25 + [56]))
	$23 = *($25 + [36])
	
.LABEL $label$16
	if ( ($23 == 0) ){ goto $label$42 }
	$23 = *($25 + [44])
	$9 = *($0)
	*($25 + [60]) = ($25 + [32])
	*($25 + [56]) = ($25 + [52])
	CALL eosio_assert(((int_32)$23 != (int_32)[0]), [352])
	CALL $821($2, $23, $9, ($25 + [56]))
	goto $label$41 
	
.LABEL $label$42
	$9 = *($0)
	*($25 + [56]) = $0
	*($25 + [60]) = ($25 + [40])
	CALL $818(($25 + [16]), ($0 + [248]), $9, ($25 + [56]))
	$9 = *($0)
	$23 = *($25 + [44])
	CALL eosio_assert(((int_32)$23 != (int_32)[0]), [352])
	CALL $819($2, $23, $9, ($25 + [56]))
	$23 = [0]
	$11 = CALL db_lowerbound_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-3732485072926388848, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$43 }
	$23 = CALL $512($3, $11)
	
.LABEL $label$43
	$9 = *($0)
	CALL eosio_assert(((int_32)$23 != (int_32)[0]), [352])
	CALL $820($3, $23, $9, ($25 + [56]))
	
.LABEL $label$41
	*([0] + [4]) = ($25 + [64])
}

void .FUNC $811 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [2])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$4 = [1073741823]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [2]) > (uint_32)[536870910]) ){ goto $label$5 }
	$4 = int_32($2 >> [1])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $866(($4 << [2]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [2])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [2]))
	$7 = ($3 + [4])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $867($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $810 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$2 = *($0)
	$7 = *($0 + [4])
	*($1) = *(*($7))
	$6 = [0]
	*(($10 = $9) + [2]) = [0]
	*($10) = [0]
	$3 = *(*($7 + [8]) + [4])
	$4 = (($3 + [-1051]) & [65535])
	if ( ((uint_32)$4 > (uint_32)[5]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 (uint_64)(int_64)3307141792257 >> (uint_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)3)))
	
.LABEL $label$1
	*($10 + [2]) = $3
	*($10) = $6
	$6 = ($1 + [12])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)*(($1 + [16]))) ){ goto $label$3 }
	*($3) = *($10)
	*($6) = (*($6) + [4])
	$6 = ($1 + [8])
	goto $label$2 
	
.LABEL $label$3
	$6 = ($1 + [8])
	CALL $811($6, $10)
	
.LABEL $label$2
	*(*($7 + [12])) = *($10)
	$4 = *($6)
	$3 = *(($1 + [12]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [2]))
	$7 = [8]
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	$7 = ((((int_32)uint_32(($5 + [-4]) >> [2]) * (int_32)[3]) + $7) + [3])
	
.LABEL $label$5
	if ( ($7 <= [513]) ){ goto $label$7 }
	$9 = CALL malloc($7)
	goto $label$6 
	
.LABEL $label$7
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$6
	*($10) = $9
	*($10 + [8]) = ($9 + $7)
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	*($10 + [4]) = ($9 + [8])
	CALL $805($10, $6)
	$8 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)-4315240091392933888, *(*($0 + [8])), $8, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL free($9)
	
.LABEL $label$8
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$9 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $817 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [36]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	CALL $829($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$3 = [24]
	$5 = ($1 + [24])
	$6 = *($1 + [24])
	$8 = *(($1 + [28]))
	$7 = ($8 - $6)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [1]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$2 }
	$3 = (($7 & [-2]) + $3)
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$10 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$10 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$3
	*($11) = $10
	$8 = ($10 + $3)
	*($11 + [8]) = $8
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [576])
	CALL memcpy($10, $1, [8])
	$6 = ($10 + [8])
	CALL eosio_assert(((int_32)($8 - $6) > (int_32)[7]), [576])
	CALL memcpy($6, ($1 + [8]), [8])
	$6 = ($10 + [16])
	CALL eosio_assert(((int_32)($8 - $6) > (int_32)[7]), [576])
	CALL memcpy($6, ($1 + [16]), [8])
	*($11 + [4]) = ($10 + [24])
	CALL $463($11, $5)
	CALL db_update_i64(*($1 + [40]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $816 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	CALL $830($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($5 + [72]) = ($5 + [56])
	*($5 + [68]) = $5
	*($5 + [64]) = $5
	CALL $424(($5 + [64]), $1)
	CALL db_update_i64(*($1 + [60]), $2, $5, [56])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
}

void .FUNC $815 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $866([72])
	CALL $425($3)
	*($3 + [56]) = $1
	CALL $831(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [60])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $426(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $814 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)*(*($3)))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 + [16]), ($1 + [16]), [8])
	CALL db_update_i64(*($1 + [28]), $2, $5, [24])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $819 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = (int_64)0
	$4 = *($1)
	CALL eosio_assert([1], [1248])
	$9 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [1120])
	*(($1 + [24])) = (int_64)1397703936
	*($1 + [16]) = (int_64)0
	*($1 + [48]) = (int_64)0
	*($1 + [56]) = (int_64)0
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$5 = *($1 + [32])
	$7 = *(($1 + [36]))
	$6 = ($7 - $5)
	$9 = (CASTING uint_64)(uint_32 int_32($6 >> [1]))
	$8 = [32]
	
.LOOP $label$6:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$7 }
	$8 = (($6 & [-2]) + $8)
	
.LABEL $label$7
	$7 = ($8 + [16])
	if ( ($7 <= [513]) ){ goto $label$9 }
	$8 = CALL malloc($7)
	goto $label$8 
	
.LABEL $label$9
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$8
	*($10 + [4]) = $8
	*($10) = $8
	*($10 + [8]) = ($8 + $7)
	CALL $822($10, $1)
	CALL db_update_i64(*($1 + [68]), $2, $8, $7)
	if ( ($7 <= [513]) ){ goto $label$10 }
	CALL free($8)
	
.LABEL $label$10
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $818 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $866([56])) + [24]) = (int_64)1398362884
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1120])
	*($4 + [40]) = $1
	CALL $823(($7 + [16]), $4)
	*($7 + [32]) = $4
	$2 = *($4)
	*($7 + [16]) = $2
	$6 = *($4 + [44])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $2
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $824(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $867($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $764 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [12]) = ((*($1 + [12]) | [128]) + [1])
	*($1 + [16]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [72]) = ($5 + [54])
	*($5 + [68]) = $5
	*($5 + [64]) = $5
	CALL $98(($5 + [64]), $1)
	CALL db_update_i64(*($1 + [68]), $2, $5, [54])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
}

void .FUNC $259 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [12])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [16])) = $6
	CALL $867($6)
	
.LABEL $label$11
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $867($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $258 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	*(*(($7 = *($0 + [4])))) = [1]
	$2 = *($0)
	$3 = *($7 + [8])
	*($1 + [8]) = *(*($7))
	*($1) = *(*($7 + [4]))
	$9 = *($7)
	$6 = ($1 + [16])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)*(($1 + [20]))) ){ goto $label$2 }
	*($4) = *($9)
	*(($4 + [8])) = *(($9 + [8]))
	*($6) = (*($6) + [12])
	$6 = ($1 + [12])
	goto $label$1 
	
.LABEL $label$2
	$6 = ($1 + [12])
	CALL $242($6, $9)
	
.LABEL $label$1
	$4 = ($1 + [8])
	CALL $243(*($3 + [108]), *(*($7 + [12])), [1], *(*($7 + [16])))
	$7 = [12]
	$3 = *($6)
	$9 = *(($1 + [16]))
	$5 = ($9 - $3)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[12]))
	
.LOOP $label$3:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$4 }
	$7 = ((((int_32)((uint_32)($5 + [-12]) / (uint_32)[12]) * (int_32)[10]) + $7) + [10])
	
.LABEL $label$4
	if ( ($7 <= [513]) ){ goto $label$6 }
	$9 = CALL malloc($7)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$5
	*($10) = $9
	$11 = ($9 + $7)
	*($10 + [8]) = $11
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	$3 = ($9 + [8])
	CALL eosio_assert(((int_32)($11 - $3) > (int_32)[3]), [576])
	CALL memcpy($3, $4, [4])
	*($10 + [4]) = ($9 + [12])
	CALL $244($10, $6)
	$8 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-7948290392355504128, *(*($0 + [8])), $8, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL free($9)
	
.LABEL $label$7
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $755 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$6 = *($0 + [4])
	*($1) = *(*($6))
	$6 = *($6 + [4])
	$3 = ($1 + [12])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)*(($1 + [16]))) ){ goto $label$2 }
	*($8) = *($6)
	*(($8 + [8])) = *(($6 + [8]))
	$8 = (*($3) + [16])
	*($3) = $8
	$5 = ($1 + [8])
	goto $label$1 
	
.LABEL $label$2
	$5 = ($1 + [8])
	CALL $445($5, $6)
	$8 = *($3)
	
.LABEL $label$1
	$3 = *($5)
	$4 = ($8 - $3)
	$7 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [22]
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$5 }
	$6 = (((int_32)uint_32(($4 + [-16]) >> [4]) * (int_32)[14]) + $6)
	goto $label$4 
	
.LABEL $label$5
	$6 = ($6 + [-14])
	
.LABEL $label$4
	if ( ($6 <= [513]) ){ goto $label$7 }
	$8 = CALL malloc($6)
	goto $label$6 
	
.LABEL $label$7
	$8 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$6
	*($9) = $8
	*($9 + [8]) = ($8 + $6)
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [576])
	CALL memcpy($8, $1, [8])
	*($9 + [4]) = ($8 + [8])
	CALL $446($9, $5)
	$7 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)7687433457688903680, *(*($0 + [8])), $7, $8, $6)
	if ( ($6 <= [513]) ){ goto $label$8 }
	CALL free($8)
	
.LABEL $label$8
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$9 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $329 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [6]))
	$5 = *($0 + [4])
	$4 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [8]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $5) > (int_32)[0]), [576])
	CALL memcpy(*($7), ($8 + [8]), [1])
	$5 = (*($7) + [1])
	*($7) = $5
	if ( $3 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$2 = ($8 + [20])
	$3 = ($8 + [44])
	
.LOOP $label$3:
	*($8) = $0
	*($8 + [8]) = $7
	*((($8 + [8]) + [8])) = ($7 + [16])
	*($2) = ($7 + [20])
	*((($8 + [8]) + [16])) = ($7 + [24])
	*((($8 + [8]) + [20])) = ($7 + [28])
	*((($8 + [8]) + [24])) = ($7 + [32])
	*($8 + [12]) = ($7 + [8])
	*((($8 + [8]) + [28])) = ($7 + [33])
	*((($8 + [8]) + [32])) = ($7 + [40])
	*($3) = ($7 + [56])
	CALL $332(($8 + [8]), $8)
	$7 = ($7 + [64])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [48])
	return $0
}

int_32 .FUNC $328 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $330(CALL $329($0, ($1 + [68])), ($1 + [80]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [60]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [2])
	return *($0 + [4]) = (*($0 + [4]) + [2])
}

int_32 .FUNC $321 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $866([40])
	$6 = CALL $345($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $346(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $320 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [192])
	*([0] + [4]) = $11
	CALL require_auth($1)
	$3 = *($0 + [24])
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$1 }
	$10 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$1 }
	$5 = $10
	$6 = ($10 + [-24])
	$10 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$4 }
	$4 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$0), [32])
	goto $label$3 
	
.LABEL $label$4
	$4 = [0]
	$10 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $13($0, $10)
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$0), [32])
	
.LABEL $label$3
	$10 = [0]
	$3 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($3, [192])
	$5 = (*($4 + [8]) + [1])
	*($11 + [191]) = $5
	CALL eosio_assert((($5 & [254]) <= [6]), [3760])
	*(($11 + [176])) = [0]
	*($11 + [160]) = (int_64)-1
	*($11 + [168]) = (int_64)0
	$9 = *($0 + [40])
	*($11 + [144]) = $9
	*($11 + [152]) = $9
	$6 = [0]
	$5 = CALL db_find_i64($9, $9, (int_64)-4745865096314322944, (CASTING uint_64)(uint_32 ($5 & [255])))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $321(($11 + [144]), $5)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)($11 + [144])), [32])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [3792])
	CALL eosio_assert(((int_64)*($2) == (int_64)*($6 + [8])), [3808])
	$7 = *(($0 + [40]))
	CALL eosio_assert([1], [1248])
	$9 = (int_64)5462355
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [1120])
	$9 = CALL current_time()
	$8 = *(($6 + [8]))
	$10 = *($11 + [191])
	*($11 + [72]) = ((CASTING uint_32)(uint_64 ((uint_64)$9 / (uint_64)(int_64)1000000)) - *([0] + [12]))
	*($11 + [80]) = $7
	$9 = *(($6 + [16]))
	*($11 + [88]) = [5]
	$6 = *($0 + [48])
	*(($11 + [91])) = *(($11 + [143]))
	*($11 + [89 align=1]) = *($11 + [141 align=1])
	*($11 + [92]) = $10
	*($11 + [96]) = [0]
	*($11 + [100]) = [0]
	*($11 + [104]) = [0]
	*($11 + [105]) = [0]
	*(($11 + [110])) = *(($11 + [138]))
	*($11 + [106 align=2]) = *($11 + [134 align=2])
	*($11 + [112]) = $8
	*(($11 + [120])) = $9
	CALL memcpy(($11 + [8]), ($11 + [72]), [56])
	CALL $322($6, ($11 + [8]), $1)
	$9 = *(($0 + [40]))
	*($11 + [64]) = ($11 + [191])
	CALL eosio_assert($3, [352])
	CALL $323($0, $4, $9, ($11 + [64]))
	$5 = *($11 + [168])
	if ( ($5 == 0) ){ goto $label$11 }
	$4 = ($11 + [172])
	$10 = *($4)
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$13 }
	
.LOOP $label$14:
	$10 = ($10 + [-24])
	$6 = *($10)
	*($10) = [0]
	if ( ($6 == 0) ){ goto $label$15 }
	CALL $867($6)
	
.LABEL $label$15
	if ( ((int_32)$5 != (int_32)$10) ){ goto $label$14 }
	$10 = *(($11 + [168]))
	goto $label$12 
	
.LABEL $label$13
	$10 = $5
	
.LABEL $label$12
	*($4) = $5
	CALL $867($10)
	
.LABEL $label$11
	*([0] + [4]) = ($11 + [192])
}

void .FUNC $323 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [21])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $276(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $322 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($8 + [24]) = $2
	$3 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [92]) == (int_32)$6), [32])
	$2 = *($0)
	if ( $5 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-4992616317627400192, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $324($6, $5)
	CALL eosio_assert(((int_32)*($5 + [92]) == (int_32)$6), [32])
	$2 = *($0)
	
.LABEL $label$6
	*($8 + [16]) = $1
	CALL eosio_assert([1], [352])
	CALL $326($6, $5, $2, ($8 + [16]))
	goto $label$3 
	
.LABEL $label$5
	$2 = *($0)
	
.LABEL $label$4
	*($8 + [20]) = $1
	*($8 + [16]) = ($8 + [24])
	CALL $325(($8 + [8]), $6, $2, ($8 + [16]))
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $325 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $866([104])
	CALL $334($3)
	*($3 + [92]) = $1
	CALL $335(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [96])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $336(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	$3 = *($1 + [80])
	if ( ($3 == 0) ){ goto $label$4 }
	*(($1 + [84])) = $3
	CALL $867($3)
	
.LABEL $label$4
	$3 = *($1 + [68])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($1 + [72])) = $3
	CALL $867($3)
	
.LABEL $label$5
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $324 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $866([104])
	$4 = CALL $334($6)
	*($6 + [92]) = $0
	CALL $338(($8 + [32]), $4)
	*($6 + [96]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [96])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $336(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [80])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [84])) = $7
	CALL $867($7)
	
.LABEL $label$10
	$7 = *($4 + [68])
	if ( ($7 == 0) ){ goto $label$11 }
	*(($4 + [72])) = $7
	CALL $867($7)
	
.LABEL $label$11
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $327 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$4 = *($1 + [80])
	$6 = *(($1 + [84]))
	if ( (((int_32)($6 - $4) / (int_32)[56]) <= [5]) ){ goto $label$1 }
	$2 = ($4 + [56])
	$6 = ($6 - $2)
	$3 = ((int_32)$6 / (int_32)[56])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL memmove($4, $2, $6)
	
.LABEL $label$2
	*(($1 + [84])) = ($4 + ((int_32)$3 * (int_32)[56]))
	
.LABEL $label$1
	$4 = *($0)
	$5 = *(($4 + [48]))
	if ( ((int_32)(*($4 + [16]) & [254]) != (int_32)[2]) ){ goto $label$4 }
	CALL eosio_assert(((int_64)$5 == (int_64)*(($1 + [48]))), [3504])
	$5 = ((int_64)*($1 + [40]) + (int_64)*(($4 + [40])))
	*($1 + [40]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [40]) < (int_64)4611686018427387904), [3584])
	*($1 + [64]) = (*($1 + [64]) + [1])
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)$5 == (int_64)*(($1 + [32]))), [3504])
	$5 = ((int_64)*($1 + [24]) + (int_64)*(($4 + [40])))
	*($1 + [24]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [3584])
	*($1 + [60]) = (*($1 + [60]) + [1])
	
.LABEL $label$3
	$4 = *($0)
	$0 = ($1 + [84])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)*(($1 + [88]))) ){ goto $label$5 }
	CALL memcpy($6, $4, [56])
	*($0) = (*($0) + [56])
	return 
	
.LABEL $label$5
	CALL $333(($1 + [80]), $4)
}

void .FUNC $326 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [92]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	CALL $327($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$6 = *($1 + [68])
	$5 = *(($1 + [72]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [6]))
	$3 = [66]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = ((((int_32)uint_32(($7 + [-64]) >> [6]) * (int_32)[42]) + $3) + [42])
	
.LABEL $label$2
	$6 = *($1 + [80])
	$5 = *(($1 + [84]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[56]))
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$3 = ((((int_32)((uint_32)($7 + [-56]) / (uint_32)[56]) * (int_32)[41]) + $3) + [41])
	
.LABEL $label$4
	if ( ($3 <= [513]) ){ goto $label$6 }
	$9 = CALL malloc($3)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$5
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL $328($10, $1)
	CALL db_update_i64(*($1 + [96]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL free($9)
	
.LABEL $label$7
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	$0 = CALL $85(CALL $85($0, ($1 + [20])), ($1 + [32]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[31]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [32])
	$2 = (*($0 + [4]) + [32])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [84]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [86]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [92]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [100]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [160])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $105(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $450 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $457 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $866([88])
	$4 = CALL $460($6)
	*($6 + [72]) = $0
	CALL $461(($8 + [32]), $4)
	*($6 + [76]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [76])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $462(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $456 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [36]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))), [3504])
	$9 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$3 = [24]
	$5 = ($1 + [24])
	$6 = *($1 + [24])
	$8 = *(($1 + [28]))
	$7 = ($8 - $6)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [1]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$2 }
	$3 = (($7 & [-2]) + $3)
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$10 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$10 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$3
	*($11) = $10
	$8 = ($10 + $3)
	*($11 + [8]) = $8
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [576])
	CALL memcpy($10, $1, [8])
	$6 = ($10 + [8])
	CALL eosio_assert(((int_32)($8 - $6) > (int_32)[7]), [576])
	CALL memcpy($6, ($1 + [8]), [8])
	$6 = ($10 + [16])
	CALL eosio_assert(((int_32)($8 - $6) > (int_32)[7]), [576])
	CALL memcpy($6, ($1 + [16]), [8])
	*($11 + [4]) = ($10 + [24])
	CALL $463($11, $5)
	CALL db_update_i64(*($1 + [40]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [16])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [2512])
	*([0] + [4]) = $15
	*(($15 + [840])) = $0
	*(($15 + [848])) = (int_64)-1
	$12 = (int_64)0
	*(($15 + [856])) = (int_64)0
	*(($15 + [864])) = [0]
	*($15 + [832]) = $0
	*($15 + [824]) = $0
	*(($15 + [872])) = $0
	$4 = ($15 + [1616])
	*(($15 + [880])) = $4
	$5 = ($15 + [1424])
	*(($15 + [884])) = $5
	*($15 + [888]) = $0
	*(($15 + [896])) = $0
	*(($15 + [904])) = $0
	*(($15 + [912])) = (int_64)-1
	*(($15 + [920])) = [0]
	*(($15 + [924])) = [0]
	*(($15 + [928])) = [0]
	$6 = ($15 + [888])
	$3 = ($15 + [832])
	$11 = (int_64)59
	$10 = [1488]
	$13 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$6 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$7 = ($7 + [165])
	goto $label$4 
	
.LABEL $label$6
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$2
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$1 }
	*(($15 + [944])) = $0
	*(($15 + [936])) = $0
	*(($15 + [952])) = (int_64)-1
	$12 = (int_64)0
	*(($15 + [960])) = (int_64)0
	*(($15 + [968])) = [0]
	*(($15 + [976])) = $0
	*(($15 + [984])) = $13
	*(($15 + [992])) = $3
	*(($15 + [996])) = $5
	*(($15 + [1000])) = [0]
	*(($15 + [1004])) = [0]
	*(($15 + [1008])) = [0]
	*(($15 + [1012])) = [0]
	*(($15 + [1016])) = [0]
	*(($15 + [1020])) = [0]
	*($15 + [1024]) = $0
	*((($15 + [824]) + [208])) = $0
	*(($15 + [1040])) = $0
	*(($15 + [1048])) = (int_64)-1
	*(($15 + [1056])) = [0]
	*(($15 + [1060])) = [0]
	*(($15 + [1064])) = [0]
	*(($15 + [1072])) = $3
	*(($15 + [1076])) = $6
	*(($15 + [1080])) = $4
	*(($15 + [1084])) = $5
	$7 = ($15 + [2328])
	*(($15 + [1088])) = $7
	*(($15 + [1092])) = [0]
	*(($15 + [1096])) = [0]
	*(($15 + [1100])) = [0]
	*($15 + [1104]) = [1508]
	*(($15 + [1112])) = $0
	*(($15 + [1120])) = $0
	*(($15 + [1128])) = $0
	*(($15 + [1136])) = (int_64)-1
	*(($15 + [1144])) = [0]
	*(($15 + [1148])) = [0]
	*(($15 + [1152])) = [0]
	*(($15 + [1160])) = $6
	$8 = ($15 + [1208])
	*(($15 + [1164])) = $8
	*(($15 + [1168])) = $3
	$9 = ($15 + [1024])
	*(($15 + [1172])) = $9
	*(($15 + [1176])) = $4
	*(($15 + [1180])) = $5
	*(($15 + [1184])) = [0]
	*(($15 + [1188])) = [0]
	*(($15 + [1192])) = [0]
	$10 = ($15 + [2032])
	*(($15 + [1196])) = $10
	*(($15 + [1200])) = $7
	$14 = *($15 + [824])
	*($15 + [1208]) = $14
	*(($15 + [1216])) = $14
	*(($15 + [1224])) = $14
	*(($15 + [1232])) = (int_64)-1
	*(($15 + [1240])) = [0]
	*(($15 + [1244])) = [0]
	*(($15 + [1248])) = [0]
	*(($15 + [1256])) = $6
	*(($15 + [1260])) = $3
	*(($15 + [1264])) = $4
	*(($15 + [1268])) = $5
	*(($15 + [1272])) = $10
	*(($15 + [1276])) = [0]
	*(($15 + [1280])) = [0]
	*(($15 + [1284])) = [0]
	*(($15 + [1288])) = [0]
	*(($15 + [1292])) = [0]
	*(($15 + [1294])) = [0]
	*(($15 + [1295])) = [0]
	*(($15 + [1296])) = [0]
	*(($15 + [1300])) = [0]
	*(($15 + [1304])) = [0]
	*($15 + [1312]) = $14
	*(($15 + [1320])) = $14
	*(($15 + [1328])) = $14
	*(($15 + [1336])) = (int_64)-1
	*(($15 + [1344])) = [0]
	*(($15 + [1348])) = [0]
	*(($15 + [1352])) = [0]
	*(($15 + [1360])) = $14
	*(($15 + [1368])) = $14
	*(($15 + [1376])) = (int_64)-1
	*(($15 + [1384])) = [0]
	*(($15 + [1388])) = [0]
	*(($15 + [1392])) = [0]
	*(($15 + [1400])) = $3
	*(($15 + [1404])) = $8
	*(($15 + [1408])) = $6
	*(($15 + [1412])) = $4
	$4 = ($15 + [1104])
	*(($15 + [1416])) = $4
	*(($15 + [1420])) = $5
	*(($15 + [1424])) = $0
	*(($15 + [1432])) = $0
	*(($15 + [1440])) = $0
	*(($15 + [1448])) = (int_64)-1
	*(($15 + [1456])) = [0]
	*(($15 + [1460])) = [0]
	*(($15 + [1464])) = [0]
	*(($15 + [1472])) = $0
	*(($15 + [1480])) = $0
	*(($15 + [1488])) = (int_64)-1
	*(($15 + [1496])) = [0]
	*(($15 + [1500])) = [0]
	*(($15 + [1504])) = [0]
	*(($15 + [1512])) = $0
	*(($15 + [1520])) = $0
	*(($15 + [1528])) = (int_64)-1
	*(($15 + [1536])) = [0]
	*(($15 + [1540])) = [0]
	*(($15 + [1544])) = [0]
	*(($15 + [1552])) = $0
	*(($15 + [1560])) = $0
	*(($15 + [1568])) = (int_64)-1
	*(($15 + [1576])) = [0]
	*(($15 + [1580])) = [0]
	*(($15 + [1584])) = [0]
	*(($15 + [1592])) = [0]
	*(($15 + [1596])) = [0]
	*(($15 + [1600])) = (int_64)0
	*(($15 + [1608])) = $7
	*(($15 + [1612])) = [1520]
	$14 = *($15 + [824])
	*(($15 + [1616])) = $14
	*(($15 + [1624])) = $14
	*(($15 + [1632])) = $14
	*(($15 + [1640])) = (int_64)-1
	*(($15 + [1648])) = [0]
	*(($15 + [1652])) = [0]
	*(($15 + [1656])) = [0]
	*($15 + [1664]) = $14
	*(($15 + [1672])) = $8
	*(($15 + [1676])) = $5
	*(($15 + [1680])) = $3
	*($15 + [1688]) = $14
	*(($15 + [1696])) = $14
	*(($15 + [1704])) = $14
	*(($15 + [1712])) = (int_64)-1
	*(($15 + [1720])) = [0]
	*(($15 + [1724])) = [0]
	*(($15 + [1728])) = [0]
	*(($15 + [1732])) = [0]
	*(($15 + [1736])) = $14
	*(($15 + [1744])) = $14
	*(($15 + [1752])) = (int_64)-1
	*(($15 + [1760])) = [0]
	*(($15 + [1764])) = [0]
	*(($15 + [1768])) = [0]
	*(($15 + [1776])) = $14
	*(($15 + [1784])) = $14
	*(($15 + [1792])) = (int_64)-1
	*(($15 + [1800])) = [0]
	*(($15 + [1804])) = [0]
	*(($15 + [1808])) = [0]
	*(($15 + [1816])) = $14
	*(($15 + [1824])) = $14
	*(($15 + [1832])) = (int_64)-1
	*(($15 + [1840])) = [0]
	*(($15 + [1844])) = [0]
	*(($15 + [1848])) = [0]
	*(($15 + [1856])) = $14
	*(($15 + [1864])) = $14
	*(($15 + [1872])) = (int_64)-1
	*(($15 + [1880])) = [0]
	*(($15 + [1884])) = [0]
	*(($15 + [1888])) = [0]
	*(($15 + [1896])) = $14
	*(($15 + [1904])) = $14
	*(($15 + [1912])) = (int_64)-1
	*(($15 + [1920])) = [0]
	*(($15 + [1924])) = [0]
	*(($15 + [1928])) = [0]
	*(($15 + [1936])) = $14
	*(($15 + [1944])) = $14
	*(($15 + [1952])) = (int_64)-1
	*(($15 + [1960])) = [0]
	*(($15 + [1964])) = [0]
	*(($15 + [1968])) = [0]
	*(($15 + [1972])) = [0]
	*(($15 + [1976])) = $14
	*(($15 + [1984])) = $14
	*(($15 + [1992])) = (int_64)-1
	*(($15 + [2000])) = [0]
	*(($15 + [2004])) = [0]
	*(($15 + [2008])) = [0]
	*(($15 + [2016])) = $3
	*(($15 + [2020])) = $6
	*(($15 + [2024])) = $4
	*(($15 + [2028])) = $5
	$14 = *($15 + [824])
	*($15 + [2032]) = $14
	*(($15 + [2040])) = $14
	*(($15 + [2048])) = $14
	*(($15 + [2056])) = (int_64)-1
	*(($15 + [2064])) = [0]
	*(($15 + [2068])) = [0]
	*(($15 + [2072])) = [0]
	*(($15 + [2080])) = $5
	*(($15 + [2084])) = $3
	*(($15 + [2088])) = [0]
	*(($15 + [2092])) = [0]
	*(($15 + [2096])) = [0]
	*(($15 + [2100])) = [0]
	*(($15 + [2104])) = [0]
	*(($15 + [2108])) = [0]
	*(($15 + [2112])) = [0]
	*(($15 + [2116])) = [0]
	*(($15 + [2120])) = [0]
	*($15 + [2128]) = $14
	*(($15 + [2136])) = $14
	*(($15 + [2144])) = $14
	*(($15 + [2152])) = (int_64)-1
	*(($15 + [2160])) = [0]
	*(($15 + [2164])) = [0]
	*(($15 + [2168])) = [0]
	*(($15 + [2176])) = $10
	*($15 + [2184]) = $14
	*(($15 + [2192])) = $5
	*(($15 + [2196])) = $3
	*(($15 + [2200])) = $10
	*(($15 + [2204])) = $6
	*(($15 + [2208])) = $7
	*($15 + [2216]) = $14
	*(($15 + [2224])) = $14
	*(($15 + [2232])) = $14
	*(($15 + [2240])) = (int_64)-1
	*(($15 + [2248])) = [0]
	*(($15 + [2252])) = [0]
	*(($15 + [2256])) = [0]
	*(($15 + [2264])) = $14
	*(($15 + [2272])) = $14
	*(($15 + [2280])) = (int_64)-1
	*(($15 + [2288])) = [0]
	*(($15 + [2292])) = [0]
	*(($15 + [2296])) = [0]
	*(($15 + [2300])) = [0]
	*(($15 + [2304])) = $10
	*(($15 + [2308])) = ($15 + [2128])
	*($15 + [2312]) = $14
	*(($15 + [2320])) = $5
	*($15 + [2328]) = $14
	*(($15 + [2336])) = $14
	*(($15 + [2344])) = $14
	*(($15 + [2352])) = (int_64)-1
	*(($15 + [2360])) = [0]
	*(($15 + [2364])) = [0]
	*(($15 + [2368])) = [0]
	*(($15 + [2376])) = $14
	*(($15 + [2384])) = $14
	*(($15 + [2392])) = (int_64)-1
	*(($15 + [2400])) = [0]
	*(($15 + [2404])) = [0]
	*(($15 + [2408])) = [0]
	*(($15 + [2432])) = [0]
	*(($15 + [2436])) = [0]
	*(($15 + [2440])) = [0]
	*(($15 + [2444])) = [0]
	*(($15 + [2448])) = [0]
	*($15 + [2456]) = [1536]
	*($15 + [2460]) = [1552]
	*($15 + [2464]) = [1568]
	*($15 + [2468]) = [1584]
	*($15 + [2472]) = [1600]
	*($15 + [2476]) = [1616]
	*($15 + [2480]) = [1568]
	*($15 + [2484]) = [1584]
	*($15 + [2488]) = [1632]
	*($15 + [2492]) = [1648]
	*($15 + [2496]) = [1664]
	*($15 + [2500]) = [1680]
	*($15 + [2504]) = [1696]
	*($15 + [2508]) = [1712]
	*(($15 + [2416])) = $5
	*(($15 + [2424])) = $9
	*(($15 + [2420])) = $3
	*(($15 + [2428])) = $10
	$11 = (int_64)59
	$10 = [1728]
	$13 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$12 > (uint_64)(int_64)6) ){ goto $label$12 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$7 = ($7 + [165])
	goto $label$10 
	
.LABEL $label$12
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$8
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$7 }
	if ( ((int_64)$13 != (int_64)$2) ){ goto $label$13 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1744]
	$13 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$12 > (uint_64)(int_64)4) ){ goto $label$19 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$7 = ($7 + [165])
	goto $label$17 
	
.LABEL $label$19
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$15
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$14 }
	CALL eosio_assert(((int_64)$13 == (int_64)$1), [1760])
	
.LABEL $label$13
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$67 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1184]
	$13 = (int_64)0
	
.LOOP $label$68:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$73 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$72 }
	$7 = ($7 + [165])
	goto $label$71 
	
.LABEL $label$73
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$72
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$71
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$70
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$69
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$68 }
	if ( ((int_64)$13 == (int_64)$2) ){ goto $label$20 }
	if ( ((int_64)$2 <= (int_64)-4112185431229988865) ){ goto $label$66 }
	if ( ((int_64)$2 > (int_64)3626343527312523263) ){ goto $label$65 }
	if ( ((int_64)$2 > (int_64)-3100609960984920065) ){ goto $label$63 }
	if ( ((int_64)$2 > (int_64)-3102794575550054401) ){ goto $label$59 }
	if ( ((int_64)$2 == (int_64)-4112185431229988864) ){ goto $label$51 }
	if ( ((int_64)$2 == (int_64)-4111934580968128512) ){ goto $label$50 }
	if ( ((int_64)$2 != (int_64)-3110459869069574144) ){ goto $label$20 }
	*($15 + [596]) = [0]
	*($15 + [592]) = [1]
	*($15 + [232 align=4]) = *($15 + [592])
	CALL $115(($15 + [824]), ($15 + [232]))
	goto $label$20 
	
.LABEL $label$67
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1824]
	$13 = (int_64)0
	
.LOOP $label$74:
	if ( ((uint_64)$12 > (uint_64)(int_64)10) ){ goto $label$79 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$78 }
	$7 = ($7 + [165])
	goto $label$77 
	
.LABEL $label$79
	$14 = (int_64)0
	if ( ((int_64)$12 == (int_64)11) ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$78
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$77
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$76
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$75
	$10 = ($10 + [1])
	$11 = ((int_64)$11 + (int_64)-5)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((int_64)$12 != (int_64)13) ){ goto $label$74 }
	if ( ((int_64)$13 != (int_64)$1) ){ goto $label$80 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1184]
	$13 = (int_64)0
	
.LOOP $label$81:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$86 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$85 }
	$7 = ($7 + [165])
	goto $label$84 
	
.LABEL $label$86
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$85
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$84
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$83
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$82
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$81 }
	if ( ((int_64)$13 != (int_64)$2) ){ goto $label$80 }
	*($15 + [444]) = [0]
	*($15 + [440]) = [2]
	*($15 + [384 align=4]) = *($15 + [440])
	CALL $183(($15 + [824]), ($15 + [384]))
	goto $label$20 
	
.LABEL $label$80
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [1088]
	$13 = (int_64)0
	
.LOOP $label$87:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$88 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$90 }
	$7 = ($7 + [165])
	goto $label$89 
	
.LABEL $label$90
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$89
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$88
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$87 }
	if ( ((int_64)$13 != (int_64)$1) ){ goto $label$91 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1184]
	$13 = (int_64)0
	
.LOOP $label$92:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$97 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$96 }
	$7 = ($7 + [165])
	goto $label$95 
	
.LABEL $label$97
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$94 }
	goto $label$93 
	
.LABEL $label$96
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$95
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$94
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$93
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$92 }
	if ( ((int_64)$13 != (int_64)$2) ){ goto $label$91 }
	*($15 + [436]) = [0]
	*($15 + [432]) = [3]
	*($15 + [392 align=4]) = *($15 + [432])
	CALL $183(($15 + [824]), ($15 + [392]))
	goto $label$20 
	
.LABEL $label$91
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [1168]
	$13 = (int_64)0
	
.LOOP $label$98:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$99 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$101 }
	$7 = ($7 + [165])
	goto $label$100 
	
.LABEL $label$101
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$100
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$99
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$98 }
	if ( ((int_64)$13 != (int_64)$1) ){ goto $label$102 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1184]
	$13 = (int_64)0
	
.LOOP $label$103:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$108 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$107 }
	$7 = ($7 + [165])
	goto $label$106 
	
.LABEL $label$108
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$105 }
	goto $label$104 
	
.LABEL $label$107
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$106
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$105
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$104
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$103 }
	if ( ((int_64)$13 != (int_64)$2) ){ goto $label$102 }
	*($15 + [428]) = [0]
	*($15 + [424]) = [4]
	*($15 + [400 align=4]) = *($15 + [424])
	CALL $183(($15 + [824]), ($15 + [400]))
	goto $label$20 
	
.LABEL $label$102
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [1200]
	$13 = (int_64)0
	
.LOOP $label$109:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$110 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$112 }
	$7 = ($7 + [165])
	goto $label$111 
	
.LABEL $label$112
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$111
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$110
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$109 }
	if ( ((int_64)$13 != (int_64)$1) ){ goto $label$20 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1184]
	$13 = (int_64)0
	
.LOOP $label$113:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$118 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$117 }
	$7 = ($7 + [165])
	goto $label$116 
	
.LABEL $label$118
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$115 }
	goto $label$114 
	
.LABEL $label$117
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$116
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$115
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$114
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$113 }
	if ( ((int_64)$13 != (int_64)$2) ){ goto $label$20 }
	*($15 + [420]) = [0]
	*($15 + [416]) = [5]
	*($15 + [408 align=4]) = *($15 + [416])
	CALL $183(($15 + [824]), ($15 + [408]))
	goto $label$20 
	
.LABEL $label$66
	if ( ((int_64)$2 <= (int_64)-7695177560838635521) ){ goto $label$64 }
	if ( ((int_64)$2 > (int_64)-4417233682230044513) ){ goto $label$62 }
	if ( ((int_64)$2 > (int_64)-4992623623366770689) ){ goto $label$58 }
	if ( ((int_64)$2 == (int_64)-7695177560838635520) ){ goto $label$49 }
	if ( ((int_64)$2 == (int_64)-6533258280703623168) ){ goto $label$48 }
	if ( ((int_64)$2 != (int_64)-5000868485073993728) ){ goto $label$20 }
	*($15 + [660]) = [0]
	*($15 + [656]) = [6]
	*($15 + [168 align=4]) = *($15 + [656])
	CALL $142(($15 + [824]), ($15 + [168]))
	goto $label$20 
	
.LABEL $label$65
	if ( ((int_64)$2 > (int_64)5378050752365723647) ){ goto $label$61 }
	if ( ((int_64)$2 > (int_64)5373156465333239807) ){ goto $label$57 }
	if ( ((int_64)$2 == (int_64)3626343527312523264) ){ goto $label$47 }
	if ( ((int_64)$2 == (int_64)4921565117529437696) ){ goto $label$46 }
	if ( ((int_64)$2 != (int_64)4982233961112535040) ){ goto $label$20 }
	*($15 + [636]) = [0]
	*($15 + [632]) = [7]
	*($15 + [192 align=4]) = *($15 + [632])
	CALL $147(($15 + [824]), ($15 + [192]))
	goto $label$20 
	
.LABEL $label$64
	if ( ((int_64)$2 <= (int_64)-7947847144751235073) ){ goto $label$60 }
	if ( ((int_64)$2 > (int_64)-7873597935340486657) ){ goto $label$56 }
	if ( ((int_64)$2 == (int_64)-7947847144751235072) ){ goto $label$45 }
	if ( ((int_64)$2 == (int_64)-7877141840316596224) ){ goto $label$44 }
	if ( ((int_64)$2 != (int_64)-7873598732544196608) ){ goto $label$20 }
	*($15 + [500]) = [0]
	*($15 + [496]) = [8]
	*($15 + [328 align=4]) = *($15 + [496])
	CALL $151(($15 + [824]), ($15 + [328]))
	goto $label$20 
	
.LABEL $label$63
	if ( ((int_64)$2 > (int_64)-3075156289162237681) ){ goto $label$55 }
	if ( ((int_64)$2 == (int_64)-3100609960984920064) ){ goto $label$43 }
	if ( ((int_64)$2 == (int_64)-3075261029558550528) ){ goto $label$42 }
	if ( ((int_64)$2 != (int_64)-3075156289173585920) ){ goto $label$20 }
	*($15 + [764]) = [0]
	*($15 + [760]) = [9]
	*($15 + [64 align=4]) = *($15 + [760])
	CALL $122(($15 + [824]), ($15 + [64]))
	goto $label$20 
	
.LABEL $label$62
	if ( ((int_64)$2 > (int_64)-4157529553284385281) ){ goto $label$54 }
	if ( ((int_64)$2 == (int_64)-4417233682230044512) ){ goto $label$41 }
	if ( ((int_64)$2 == (int_64)-4417057971914563072) ){ goto $label$40 }
	if ( ((int_64)$2 != (int_64)-4157660944928866304) ){ goto $label$20 }
	*($15 + [492]) = [0]
	*($15 + [488]) = [10]
	*($15 + [336 align=4]) = *($15 + [488])
	CALL $175(($15 + [824]), ($15 + [336]))
	goto $label$20 
	
.LABEL $label$61
	if ( ((int_64)$2 > (int_64)6292809349185585151) ){ goto $label$53 }
	if ( ((int_64)$2 == (int_64)5378050752365723648) ){ goto $label$39 }
	if ( ((int_64)$2 == (int_64)5378050754259271680) ){ goto $label$38 }
	if ( ((int_64)$2 != (int_64)6175818824508506112) ){ goto $label$20 }
	*($15 + [604]) = [0]
	*($15 + [600]) = [11]
	*($15 + [224 align=4]) = *($15 + [600])
	CALL $154(($15 + [824]), ($15 + [224]))
	goto $label$20 
	
.LABEL $label$60
	if ( ((int_64)$2 <= (int_64)-8145508258349580289) ){ goto $label$52 }
	if ( ((int_64)$2 == (int_64)-8145508258349580288) ){ goto $label$37 }
	if ( ((int_64)$2 == (int_64)-7953176814886845440) ){ goto $label$36 }
	if ( ((int_64)$2 != (int_64)-7953172888327028736) ){ goto $label$20 }
	*($15 + [620]) = [0]
	*($15 + [616]) = [12]
	*($15 + [208 align=4]) = *($15 + [616])
	CALL $151(($15 + [824]), ($15 + [208]))
	goto $label$20 
	
.LABEL $label$59
	if ( ((int_64)$2 == (int_64)-3102794575550054400) ){ goto $label$35 }
	if ( ((int_64)$2 == (int_64)-3102794573713768448) ){ goto $label$34 }
	if ( ((int_64)$2 != (int_64)-3102536759397433344) ){ goto $label$20 }
	*($15 + [484]) = [0]
	*($15 + [480]) = [13]
	*($15 + [344 align=4]) = *($15 + [480])
	CALL $175(($15 + [824]), ($15 + [344]))
	goto $label$20 
	
.LABEL $label$58
	if ( ((int_64)$2 == (int_64)-4992623623366770688) ){ goto $label$33 }
	if ( ((int_64)$2 == (int_64)-4421664685212827648) ){ goto $label$32 }
	if ( ((int_64)$2 != (int_64)-4421662804856012800) ){ goto $label$20 }
	*($15 + [548]) = [0]
	*($15 + [544]) = [14]
	*($15 + [280 align=4]) = *($15 + [544])
	CALL $163(($15 + [824]), ($15 + [280]))
	goto $label$20 
	
.LABEL $label$57
	if ( ((int_64)$2 == (int_64)5373156465333239808) ){ goto $label$31 }
	if ( ((int_64)$2 == (int_64)5374893526411534736) ){ goto $label$30 }
	if ( ((int_64)$2 != (int_64)5378050750529437696) ){ goto $label$20 }
	*($15 + [612]) = [0]
	*($15 + [608]) = [15]
	*($15 + [216 align=4]) = *($15 + [608])
	CALL $133(($15 + [824]), ($15 + [216]))
	goto $label$20 
	
.LABEL $label$56
	if ( ((int_64)$2 == (int_64)-7873597935340486656) ){ goto $label$29 }
	if ( ((int_64)$2 == (int_64)-7695177759581126656) ){ goto $label$28 }
	if ( ((int_64)$2 != (int_64)-7695177685376141664) ){ goto $label$20 }
	*($15 + [700]) = [0]
	*($15 + [696]) = [16]
	*($15 + [128 align=4]) = *($15 + [696])
	CALL $120(($15 + [824]), ($15 + [128]))
	goto $label$20 
	
.LABEL $label$55
	if ( ((int_64)$2 == (int_64)-3075156289162237680) ){ goto $label$27 }
	if ( ((int_64)$2 == (int_64)-3020597220094623744) ){ goto $label$26 }
	if ( ((int_64)$2 != (int_64)-2184619370515267584) ){ goto $label$20 }
	*($15 + [796]) = [0]
	*($15 + [792]) = [17]
	*($15 + [32 align=4]) = *($15 + [792])
	CALL $115(($15 + [824]), ($15 + [32]))
	goto $label$20 
	
.LABEL $label$54
	if ( ((int_64)$2 == (int_64)-4157529553284385280) ){ goto $label$25 }
	if ( ((int_64)$2 == (int_64)-4139046209826967040) ){ goto $label$24 }
	if ( ((int_64)$2 != (int_64)-4112238744427823104) ){ goto $label$20 }
	*($15 + [716]) = [0]
	*($15 + [712]) = [18]
	*($15 + [112 align=4]) = *($15 + [712])
	CALL $131(($15 + [824]), ($15 + [112]))
	goto $label$20 
	
.LABEL $label$53
	if ( ((int_64)$2 == (int_64)6292809349185585152) ){ goto $label$23 }
	if ( ((int_64)$2 == (int_64)7111953097381380096) ){ goto $label$22 }
	if ( ((int_64)$2 != (int_64)9015428750952923136) ){ goto $label$20 }
	*($15 + [772]) = [0]
	*($15 + [768]) = [19]
	*($15 + [56 align=4]) = *($15 + [768])
	CALL $120(($15 + [824]), ($15 + [56]))
	goto $label$20 
	
.LABEL $label$52
	if ( ((int_64)$2 == (int_64)-8145509058791604224) ){ goto $label$21 }
	if ( ((int_64)$2 != (int_64)-8145508258350628864) ){ goto $label$20 }
	*($15 + [580]) = [0]
	*($15 + [576]) = [20]
	*($15 + [248 align=4]) = *($15 + [576])
	CALL $159(($15 + [824]), ($15 + [248]))
	goto $label$20 
	
.LABEL $label$51
	*($15 + [724]) = [0]
	*($15 + [720]) = [21]
	*($15 + [104 align=4]) = *($15 + [720])
	CALL $115(($15 + [824]), ($15 + [104]))
	goto $label$20 
	
.LABEL $label$50
	*($15 + [708]) = [0]
	*($15 + [704]) = [22]
	*($15 + [120 align=4]) = *($15 + [704])
	CALL $133(($15 + [824]), ($15 + [120]))
	goto $label$20 
	
.LABEL $label$49
	*($15 + [524]) = [0]
	*($15 + [520]) = [23]
	*($15 + [304 align=4]) = *($15 + [520])
	CALL $120(($15 + [824]), ($15 + [304]))
	goto $label$20 
	
.LABEL $label$48
	*($15 + [780]) = [0]
	*($15 + [776]) = [24]
	*($15 + [48 align=4]) = *($15 + [776])
	CALL $118(($15 + [824]), ($15 + [48]))
	goto $label$20 
	
.LABEL $label$47
	*($15 + [460]) = [0]
	*($15 + [456]) = [25]
	*($15 + [368 align=4]) = *($15 + [456])
	CALL $180(($15 + [824]), ($15 + [368]))
	goto $label$20 
	
.LABEL $label$46
	*($15 + [468]) = [0]
	*($15 + [464]) = [26]
	*($15 + [360 align=4]) = *($15 + [464])
	CALL $144(($15 + [824]), ($15 + [360]))
	goto $label$20 
	
.LABEL $label$45
	*($15 + [516]) = [0]
	*($15 + [512]) = [27]
	*($15 + [312 align=4]) = *($15 + [512])
	CALL $131(($15 + [824]), ($15 + [312]))
	goto $label$20 
	
.LABEL $label$44
	*($15 + [588]) = [0]
	*($15 + [584]) = [28]
	*($15 + [240 align=4]) = *($15 + [584])
	CALL $157(($15 + [824]), ($15 + [240]))
	goto $label$20 
	
.LABEL $label$43
	*($15 + [788]) = [0]
	*($15 + [784]) = [29]
	*($15 + [40 align=4]) = *($15 + [784])
	CALL $115(($15 + [824]), ($15 + [40]))
	goto $label$20 
	
.LABEL $label$42
	*($15 + [748]) = [0]
	*($15 + [744]) = [30]
	*($15 + [80 align=4]) = *($15 + [744])
	CALL $120(($15 + [824]), ($15 + [80]))
	goto $label$20 
	
.LABEL $label$41
	*($15 + [644]) = [0]
	*($15 + [640]) = [31]
	*($15 + [184 align=4]) = *($15 + [640])
	CALL $144(($15 + [824]), ($15 + [184]))
	goto $label$20 
	
.LABEL $label$40
	*($15 + [668]) = [0]
	*($15 + [664]) = [32]
	*($15 + [160 align=4]) = *($15 + [664])
	CALL $140(($15 + [824]), ($15 + [160]))
	goto $label$20 
	
.LABEL $label$39
	*($15 + [628]) = [0]
	*($15 + [624]) = [33]
	*($15 + [200 align=4]) = *($15 + [624])
	CALL $149(($15 + [824]), ($15 + [200]))
	goto $label$20 
	
.LABEL $label$38
	*($15 + [452]) = [0]
	*($15 + [448]) = [34]
	*($15 + [376 align=4]) = *($15 + [448])
	CALL $133(($15 + [824]), ($15 + [376]))
	goto $label$20 
	
.LABEL $label$37
	*($15 + [572]) = [0]
	*($15 + [568]) = [35]
	*($15 + [256 align=4]) = *($15 + [568])
	CALL $161(($15 + [824]), ($15 + [256]))
	goto $label$20 
	
.LABEL $label$36
	*($15 + [732]) = [0]
	*($15 + [728]) = [36]
	*($15 + [96 align=4]) = *($15 + [728])
	CALL $128(($15 + [824]), ($15 + [96]))
	goto $label$20 
	
.LABEL $label$35
	*($15 + [556]) = [0]
	*($15 + [552]) = [37]
	*($15 + [272 align=4]) = *($15 + [552])
	CALL $165(($15 + [824]), ($15 + [272]))
	goto $label$20 
	
.LABEL $label$34
	*($15 + [540]) = [0]
	*($15 + [536]) = [38]
	*($15 + [288 align=4]) = *($15 + [536])
	CALL $165(($15 + [824]), ($15 + [288]))
	goto $label$20 
	
.LABEL $label$33
	*($15 + [676]) = [0]
	*($15 + [672]) = [39]
	*($15 + [152 align=4]) = *($15 + [672])
	CALL $138(($15 + [824]), ($15 + [152]))
	goto $label$20 
	
.LABEL $label$32
	*($15 + [564]) = [0]
	*($15 + [560]) = [40]
	*($15 + [264 align=4]) = *($15 + [560])
	CALL $163(($15 + [824]), ($15 + [264]))
	goto $label$20 
	
.LABEL $label$31
	*($15 + [740]) = [0]
	*($15 + [736]) = [41]
	*($15 + [88 align=4]) = *($15 + [736])
	CALL $115(($15 + [824]), ($15 + [88]))
	goto $label$20 
	
.LABEL $label$30
	*($15 + [476]) = [0]
	*($15 + [472]) = [42]
	*($15 + [352 align=4]) = *($15 + [472])
	CALL $142(($15 + [824]), ($15 + [352]))
	goto $label$20 
	
.LABEL $label$29
	*($15 + [508]) = [0]
	*($15 + [504]) = [43]
	*($15 + [320 align=4]) = *($15 + [504])
	CALL $120(($15 + [824]), ($15 + [320]))
	goto $label$20 
	
.LABEL $label$28
	*($15 + [532]) = [0]
	*($15 + [528]) = [44]
	*($15 + [296 align=4]) = *($15 + [528])
	CALL $169(($15 + [824]), ($15 + [296]))
	goto $label$20 
	
.LABEL $label$27
	*($15 + [756]) = [0]
	*($15 + [752]) = [45]
	*($15 + [72 align=4]) = *($15 + [752])
	CALL $124(($15 + [824]), ($15 + [72]))
	goto $label$20 
	
.LABEL $label$26
	*($15 + [692]) = [0]
	*($15 + [688]) = [46]
	*($15 + [136 align=4]) = *($15 + [688])
	CALL $115(($15 + [824]), ($15 + [136]))
	goto $label$20 
	
.LABEL $label$25
	*($15 + [812]) = [0]
	*($15 + [808]) = [47]
	*($15 + [16 align=4]) = *($15 + [808])
	CALL $111(($15 + [824]), ($15 + [16]))
	goto $label$20 
	
.LABEL $label$24
	*($15 + [820]) = [0]
	*($15 + [816]) = [48]
	*($15 + [8 align=4]) = *($15 + [816])
	CALL $109(($15 + [824]), ($15 + [8]))
	goto $label$20 
	
.LABEL $label$23
	*($15 + [804]) = [0]
	*($15 + [800]) = [49]
	*($15 + [24 align=4]) = *($15 + [800])
	CALL $113(($15 + [824]), ($15 + [24]))
	goto $label$20 
	
.LABEL $label$22
	*($15 + [684]) = [0]
	*($15 + [680]) = [50]
	*($15 + [144 align=4]) = *($15 + [680])
	CALL $120(($15 + [824]), ($15 + [144]))
	goto $label$20 
	
.LABEL $label$21
	*($15 + [652]) = [0]
	*($15 + [648]) = [51]
	*($15 + [176 align=4]) = *($15 + [648])
	CALL $144(($15 + [824]), ($15 + [176]))
	
.LABEL $label$20
	CALL $187(($15 + [824]))
	*([0] + [4]) = ($15 + [2512])
}

void .FUNC $454 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [160])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [136]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	CALL $468($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($5 + [152]) = ($5 + [136])
	*($5 + [148]) = $5
	*($5 + [144]) = $5
	CALL $469(($5 + [144]), $1)
	CALL db_update_i64(*($1 + [140]), $2, $5, [136])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [160])
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($8 + [8]) = [0]
	*($8) = (int_64)0
	*($8 + [12]) = [0]
	*($8 + [16]) = [0]
	*($8 + [20]) = [0]
	*($8 + [24]) = [0]
	*($8 + [36]) = $1
	*($8 + [32]) = $1
	*($8 + [40]) = ($1 + $3)
	*($8 + [48]) = ($8 + [32])
	*($8 + [56]) = $8
	CALL $841(($8 + [56]), ($8 + [48]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($8 + [24]))
	$9 = *(($8 + [20]))
	$0 = *(($8 + [16]))
	$6 = *(($8 + [12]))
	$5 = *(($8 + [8]))
	$4 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$7 = *((*($1) + $7))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_64 $5), (int_32 ($6 & [255])), (int_32 $0), (int_32 $9), (int_32 $3), (int_32 $7))
	*([0] + [4]) = ($8 + [64])
	return [1]
}

void .FUNC $108 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	CALL $212(($0 + [600]), $1)
	CALL $842(($0 + [840]), $1, $2, $3, $4, ((int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $6)))
}

int_32 .FUNC $459 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $458 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [48]))), [3504])
	$5 = ((int_64)*($1 + [40]) + (int_64)*($3))
	*($1 + [40]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [40]) < (int_64)4611686018427387904), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($6 + [88]) = ($6 + [72])
	*($6 + [84]) = $6
	*($6 + [80]) = $6
	CALL $459(($6 + [80]), $1)
	CALL db_update_i64(*($1 + [76]), $2, $6, [72])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [96])
}

int_32 .FUNC $691 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [36]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2928])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-4921685318744145920)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2864])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2864])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $622(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $251 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*(($4 = CALL $866([40])) + [16]) = [0]
	*($4 + [8]) = [0]
	*($4 + [20]) = [0]
	*($4 + [24]) = $1
	*($4) = *(*($3))
	*($4 + [12]) = *(*($3 + [4]))
	*($8 + [56]) = (($8 + [16]) + [24])
	*($8 + [52]) = ($8 + [16])
	*($8 + [48]) = ($8 + [16])
	CALL $253(($8 + [48]), $4)
	$5 = *($4)
	*($4 + [28]) = CALL db_store_i64(*($1 + [8]), (int_64)-7947854319460548608, $2, $5, ($8 + [16]), [24])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [48]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$6 = *($4 + [28])
	*($8 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [48]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $254(($1 + [24]), ($8 + [48]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [48])
	*($8 + [48]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $867($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [64])
}

int_32 .FUNC $518 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $519 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $695 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$14 = *($0)
	if ( ((int_32)*($14 + [4]) == (int_32)*($14)) ){ goto $label$1 }
	$8 = ($1 + [16])
	$15 = *($8)
	$14 = *($0 + [4])
	$9 = ($1 + [12])
	$12 = ($0 + [4])
	$13 = [0]
	
.LOOP $label$2:
	*($14) = [0]
	$3 = *($9)
	$14 = ($15 - $3)
	if ( ((int_32)$14 < (int_32)[20]) ){ goto $label$3 }
	$2 = *((*(*($0)) + ($13 << [2])))
	$14 = ((uint_32)$14 / (uint_32)[20])
	$1 = [0]
	
.LOOP $label$4:
	$4 = ($14 + [-1])
	
.LOOP $label$6:
	$5 = ($4 - $1)
	$14 = (((int_32)$5 / (int_32)[2]) + $1)
	$10 = ((int_32)$14 * (int_32)[20])
	$11 = ($3 + $10)
	$6 = *($11)
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	$1 = ($14 + [1])
	if ( ((int_32)$4 > (int_32)$14) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$2 >= (uint_32)$6) ){ goto $label$7 }
	if ( ((int_32)$5 >= (int_32)[2]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$7
	CALL eosio_assert((*($11 + [16]) == 0), [7568])
	CALL eosio_assert((*($11 + [6]) == 0), [7600])
	$7 = *($11 + [4])
	$6 = *($2 + [24])
	$2 = *(($0 + [12]))
	$4 = *(($2 + [28]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$8 }
	$14 = ($4 + [-24])
	$3 = ([0] - $6)
	
.LOOP $label$9:
	if ( ((int_64)*(*($14)) == (int_64)$7) ){ goto $label$8 }
	$4 = $14
	$1 = ($14 + [-24])
	$14 = $1
	if ( ((int_32)($1 + $3) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$11 }
	$14 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [56]) == (int_32)$2), [32])
	goto $label$10 
	
.LABEL $label$11
	$14 = [0]
	$1 = CALL db_find_i64(*($2), *($2 + [8]), (int_64)-4921685625297436672, $7)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	$14 = CALL $621($2, $1)
	CALL eosio_assert(((int_32)*($14 + [56]) == (int_32)$2), [32])
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [7632])
	$4 = (*($11 + [8]) + [1])
	*(($1 = *(($0 + [16])))) = (((int_32)( $4 ? [16] : ($4 <= [16]) ) * (int_32)*($14 + [12])) + *($1))
	$14 = (*($9) + $10)
	$3 = ($14 + [20])
	$1 = (*($8) - $3)
	$4 = ((int_32)$1 / (int_32)[20])
	if ( ($1 == 0) ){ goto $label$12 }
	CALL memmove($14, $3, $1)
	
.LABEL $label$12
	$15 = ($14 + ((int_32)$4 * (int_32)[20]))
	*($8) = $15
	*(*($12)) = [1]
	
.LABEL $label$3
	$14 = *($12)
	if ( (*($14) == 0) ){ goto $label$1 }
	$1 = *($0)
	$13 = ($13 + [1])
	if ( ($13 <= int_32((*($1 + [4]) - *($1)) >> [2])) ){ goto $label$2 }
	
.LABEL $label$1
}

void .FUNC $694 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	CALL $695($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$5 = ($1 + [12])
	$6 = *($1 + [12])
	$9 = *(($1 + [16]))
	$7 = ($9 - $6)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[20]))
	$3 = [29]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$3 }
	$9 = (((int_32)((uint_32)($7 + [-20]) / (uint_32)[20]) * (int_32)[17]) + $3)
	goto $label$2 
	
.LABEL $label$3
	$9 = ($3 + [-17])
	
.LABEL $label$2
	if ( ($9 <= [513]) ){ goto $label$5 }
	$3 = CALL malloc($9)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($11 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$4
	*($10) = $3
	$11 = ($3 + $9)
	*($10 + [8]) = $11
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [576])
	CALL memcpy($3, $1, [8])
	$6 = ($3 + [8])
	CALL eosio_assert(((int_32)($11 - $6) > (int_32)[3]), [576])
	CALL memcpy($6, ($1 + [8]), [4])
	*($10 + [4]) = ($3 + [12])
	CALL $400($10, $5)
	CALL db_update_i64(*($1 + [28]), $2, $3, $9)
	if ( ($9 <= [513]) ){ goto $label$6 }
	CALL free($3)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $697 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [16])
	$12 = $13
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$5 = ($1 + [12])
	$4 = *($1)
	$10 = *($1 + [12])
	$8 = ($1 + [16])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$1 }
	$7 = ((int_32)($9 - $10) / (int_32)[20])
	$6 = *(*($3))
	$9 = [0]
	
.LOOP $label$3:
	if ( ((int_32)*($10) == (int_32)$6) ){ goto $label$2 }
	$10 = ($10 + [20])
	$9 = ($9 + [1])
	if ( ($9 <= $7) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*(($10 + [6])) = *(*($3 + [4]))
	*(*($3 + [8])) = [1]
	
.LABEL $label$1
	CALL eosio_assert([1], [512])
	$6 = *($5)
	$9 = *($8)
	$7 = ($9 - $6)
	$11 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[20]))
	$10 = [29]
	
.LOOP $label$4:
	$10 = ($10 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$6 }
	$9 = (((int_32)((uint_32)($7 + [-20]) / (uint_32)[20]) * (int_32)[17]) + $10)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($10 + [-17])
	
.LABEL $label$5
	if ( ($9 <= [513]) ){ goto $label$8 }
	$10 = CALL malloc($9)
	goto $label$7 
	
.LABEL $label$8
	$10 = ($13 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$7
	*($12) = $10
	$6 = ($10 + $9)
	*($12 + [8]) = $6
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [576])
	CALL memcpy($10, $1, [8])
	$7 = ($10 + [8])
	CALL eosio_assert(((int_32)($6 - $7) > (int_32)[3]), [576])
	CALL memcpy($7, ($1 + [8]), [4])
	*($12 + [4]) = ($10 + [12])
	CALL $400($12, $5)
	CALL db_update_i64(*($1 + [28]), $2, $10, $9)
	if ( ($9 <= [513]) ){ goto $label$9 }
	CALL free($10)
	
.LABEL $label$9
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($12 + [16])
}

void .FUNC $250 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = (*($1 + [8]) + *(*($3)))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [24])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $253(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [24])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $512 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $866([64])
	$4 = CALL $517($6)
	*($6 + [48]) = $0
	CALL $518(($8 + [32]), $4)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $519(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $513 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	CALL $515($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($5 + [56]) = ($5 + [41])
	*($5 + [52]) = $5
	*($5 + [48]) = $5
	CALL $516(($5 + [48]), $1)
	CALL db_update_i64(*($1 + [52]), $2, $5, [41])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [64])
}

void .FUNC $510 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	CALL require_auth(*($0))
	$2 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-3732452873091252224, $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$5 }
	$6 = CALL $511($4, $6)
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$5
	$6 = [0]
	
.LABEL $label$3
	*($8 + [4]) = $6
	*($8) = $4
	$7 = [0]
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [5248])
	CALL eosio_assert(((uint_64)((int_64)((uint_64)CALL $fimport$17() / (uint_64)(int_64)1000000) & (int_64)4294967295) >= (uint_64)((int_64)*($6 + [24]) + (int_64)259200)), [5280])
	$6 = ($0 + [88])
	$3 = [0]
	$2 = ($0 + [96])
	$5 = CALL db_lowerbound_i64(*($0 + [88]), *($2), (int_64)-3732485072926388848, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$6 }
	CALL $512($6, $5)
	$3 = [1]
	
.LABEL $label$6
	CALL eosio_assert($3, [5312])
	$3 = CALL db_lowerbound_i64(*($6), *($2), (int_64)-3732485072926388848, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$7 }
	$7 = CALL $512($6, $3)
	
.LABEL $label$7
	$1 = *($0)
	*($8 + [8]) = $8
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [352])
	CALL $513($6, $7, $1, ($8 + [8]))
	$1 = *($8)
	$6 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	$7 = ((int_32)$6) != (int_32)[0]
	CALL eosio_assert($7), [2224])
	CALL eosio_assert($7, [960])
	$7 = CALL db_next_i64(*($6 + [36]), ($8 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	CALL $511((CASTING uint_32)(uint_64 $1), $7)
	
.LABEL $label$8
	CALL $514($4, $6)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $511 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [128])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $866([48])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1120])
	*($4 + [32]) = $0
	CALL $520(($8 + [32]), $4)
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [36])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $521($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $867($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $516 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $517 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	$2 = [0]
	*($0 + [8]) = [0]
	*(($3 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1120])
	return $0
}

void .FUNC $514 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [2272])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [2320])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2384])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $867($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $867($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $515 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	$3 = *($1 + [32])
	$2 = ($1 + [40])
	$5 = *($2)
	$0 = *(*($0) + [4])
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)$5), [3360])
	$3 = (int_64)
	CALL eosio_assert(((int_64)$3($3 - *($0 + [8]))) > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [3440])
	if ( ((int_64)$3 >= (int_64)0) ){ goto $label$1 }
	CALL eosio_assert([1], [1248])
	$3 = (int_64)5524308
	$5 = (int_64)1414222852
	$0 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	CALL eosio_assert($4, [1120])
	$3 = (int_64)0
	
.LABEL $label$1
	*($2) = $5
	*(($1 + [32])) = $3
}

int_32 .FUNC $215 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	$6 = [0]
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$4 = *($0)
	*($7 + [8]) = $4
	*($7 + [16]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)-2063328927043551232, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $216(($7 + [8]), $0) + [8]) == (int_32)($7 + [8])), [32])
	$6 = [1]
	$2 = *($7 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	$5 = ($7 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $867($3)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($7 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $2
	
.LABEL $label$2
	*($5) = $2
	CALL $867($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [48])
	return $6
}

int_32 .FUNC $214 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $866([128])
	$4 = CALL $218($6)
	*($6 + [112]) = $0
	CALL $219(($8 + [32]), $4)
	*($6 + [116]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [116])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $220(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $217 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $216 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([24])) + [8]) = $0
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $217(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $211 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [144])
	*([0] + [4]) = $14
	*($14 + [136]) = $3
	CALL $193(($14 + [88]))
	$3 = (($14 + [88]) + [24])
	CALL eosio_assert(((int_64)*($3) == (int_64)1414550532), [2480])
	$7 = [0]
	$4 = ($14 + [104])
	if ( ((uint_64)((int_64)*($4) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$9 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [1840])
	CALL eosio_assert(((int_64)*($4) > (int_64)0), [1872])
	$9 = *($0 + [40])
	$11 = *($14 + [88])
	if ( ((int_64)$11 == (int_64)$9) ){ goto $label$6 }
	if ( ((int_64)*($14 + [96]) != (int_64)$9) ){ goto $label$6 }
	$5 = *($0 + [24])
	$10 = *(($0 + [28]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$7 }
	$3 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$8:
	if ( ((int_64)*(*($3)) == (int_64)$11) ){ goto $label$7 }
	$10 = $3
	$7 = ($3 + [-24])
	$3 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$10 }
	$3 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [32])
	goto $label$9 
	
.LABEL $label$10
	$3 = [0]
	$7 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6030912142679474176, $11)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	$3 = CALL $13($0, $7)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [32])
	
.LABEL $label$9
	CALL _ZN13admin_control15check_blacklistEN5eosio4nameE(*($0 + [52]), $11)
	CALL $212(*($0 + [52]), $11)
	if ( ($3 == 0) ){ goto $label$13 }
	*(($14 + [40])) = (int_64)0
	*((($14 + [24]) + [24])) = (int_64)0
	*($14 + [24]) = (int_64)0
	*($14 + [32]) = (int_64)0
	*($14 + [64]) = (int_64)0
	*($14 + [72]) = (int_64)0
	*(($14 + [80])) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$9 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$7 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$7 = [0]
	
.LABEL $label$14
	CALL eosio_assert($7, [1120])
	$7 = CALL $876($3, [58], [0])
	$0 = ($7 + [1])
	$3 = ($14 + [120])
	CALL $876($3, [58], $0)
	*($14 + [24]) = $11
	CALL $884(($14 + [8]), $3, [0], $7, $3)
	*($14 + [32]) = [0]
	CALL $871((($14 + [24]) + [8]), [0])
	*(($14 + [40])) = *((($14 + [8]) + [8]))
	*($14 + [32]) = *($14 + [8])
	CALL $884(($14 + [8]), $3, $0, [-1], $3)
	$3 = ($14 + [44])
	if ( (*($14 + [44]) & [1]) ){ goto $label$12 }
	*($3) = [0]
	goto $label$11 
	
.LABEL $label$13
	$9 = (int_64)0
	$11 = (int_64)59
	$3 = [1904]
	$8 = *($14 + [88])
	$12 = (int_64)0
	
.LOOP $label$19:
	$13 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$20 }
	$7 = *($3)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$7 = ($7 + [165])
	goto $label$21 
	
.LABEL $label$22
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$20
	$3 = ($3 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$19 }
	if ( ((int_64)$8 == (int_64)$12) ){ goto $label$6 }
	$9 = (int_64)0
	$11 = (int_64)59
	$3 = [1920]
	$12 = (int_64)0
	
.LOOP $label$23:
	$13 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$24 }
	$7 = *($3)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$7 = ($7 + [165])
	goto $label$25 
	
.LABEL $label$26
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$24
	$3 = ($3 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$23 }
	if ( ((int_64)$8 == (int_64)$12) ){ goto $label$6 }
	CALL eosio_assert([0], [1936])
	goto $label$6 
	
.LABEL $label$12
	*(*(($14 + [52]))) = [0]
	*(($14 + [48])) = [0]
	
.LABEL $label$11
	CALL $871($3, [0])
	*(($3 + [8])) = *((($14 + [8]) + [8]))
	*($3) = *($14 + [8])
	*(($14 + [80])) = *(($4 + [8]))
	*($14 + [72]) = *($4)
	CALL $213(($14 + [136]), ($14 + [24]))
	if ( ((*(($14 + [44])) & [1]) == 0) ){ goto $label$27 }
	CALL $867(*(($14 + [52])))
	
.LABEL $label$27
	if ( ((*((($14 + [24]) + [8])) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*(($14 + [40])))
	
.LABEL $label$6
	if ( ((*($14 + [120]) & [1]) == 0) ){ goto $label$28 }
	CALL $867(*(($14 + [128])))
	
.LABEL $label$28
	*([0] + [4]) = ($14 + [144])
}

int_32 .FUNC $210 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [592])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $83($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [160])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $213 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [192])
	*([0] + [4]) = $12
	$4 = *($1 + [8])
	$5 = ($1 + [12])
	if ( (( *($5) ? uint_32($4 >> [1]) : ($4 & [1]) ) == 0) ){ goto $label$1 }
	$5 = ($1 + [8])
	$4 = *($5)
	$0 = *($0)
	$2 = *($0 + [1680])
	$3 = CALL strlen($2)
	if ( ((int_32)$3 != (int_32)( *($5) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$3 }
	if ( (CALL $877($5, [0], [-1], $2, $3) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [2032])
	goto $label$1 
	
.LABEL $label$2
	$7 = (int_64)0
	*($12 + [168]) = (int_64)0
	*($12 + [164]) = [0]
	$4 = ($0 + [1304])
	CALL $195($4, ($1 + [20]), ($12 + [168]), ($12 + [164]))
	*(($12 + [156])) = *(($1 + [60]))
	*(($5 = (($12 + [144]) + [8]))) = *(($1 + [56]))
	*($12 + [148]) = *(($1 + [52]))
	$2 = *($12 + [164])
	$9 = *($12 + [168])
	*($12 + [144]) = *($1 + [48])
	$6 = *($1)
	*((($12 + [8]) + [8])) = *($5)
	*($12 + [8]) = *($12 + [144])
	CALL $196($4, $6, $9, $2, ($12 + [8]))
	$5 = ($1 + [48])
	$10 = *($0)
	$6 = (int_64)59
	$1 = [1152]
	$8 = (int_64)0
	
.LOOP $label$4:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$9 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$4 = ($4 + [165])
	goto $label$7 
	
.LABEL $label$9
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$6
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$5
	$1 = ($1 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$4 }
	*($12 + [96]) = $8
	*($12 + [88]) = $10
	$7 = (int_64)0
	$9 = (int_64)59
	$1 = [1168]
	$8 = (int_64)0
	
.LOOP $label$10:
	$6 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$11 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$4 = ($4 + [165])
	goto $label$12 
	
.LABEL $label$13
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$11
	$1 = ($1 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$6 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$10 }
	$7 = (int_64)0
	$6 = (int_64)59
	$1 = [1184]
	$10 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$19 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$4 = ($4 + [165])
	goto $label$17 
	
.LABEL $label$19
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$15
	$1 = ($1 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$14 }
	$7 = (int_64)0
	$9 = (int_64)59
	$1 = [1984]
	$11 = (int_64)0
	
.LOOP $label$20:
	$6 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$21 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$4 = ($4 + [165])
	goto $label$22 
	
.LABEL $label$23
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$21
	$1 = ($1 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$11 = ((int_64)$6 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$20 }
	*(($12 + [32])) = [0]
	*($12 + [24]) = (int_64)0
	$1 = CALL strlen([2000])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$24 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$27 }
	*($12 + [24]) = ($1 << [1])
	$4 = (($12 + [24]) | [1])
	if ( $1 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$2 = (($1 + [16]) & [-16])
	$4 = CALL $866($2)
	*($12 + [24]) = ($2 | [1])
	*($12 + [32]) = $4
	*($12 + [28]) = $1
	
.LABEL $label$26
	CALL memcpy($4, [2000], $1)
	
.LABEL $label$25
	*(($4 + $1)) = [0]
	$7 = *($0)
	*(($12 + [68])) = *(($5 + [12]))
	*(($12 + [64])) = *(($5 + [8]))
	*(($12 + [60])) = *(($5 + [4]))
	*($12 + [48]) = $11
	*($12 + [40]) = $7
	*($12 + [56]) = *($5)
	$1 = (($12 + [24]) + [8])
	*(($12 + [80])) = *($1)
	*($12 + [72]) = *($12 + [24])
	*($12 + [24]) = [0]
	*($12 + [28]) = [0]
	*($1) = [0]
	$1 = CALL $197(($12 + [104]), ($12 + [88]), $8, $10, ($12 + [40]))
	CALL $65(($12 + [176]), $1)
	$4 = *($12 + [176])
	CALL send_inline($4, (*($12 + [180]) - $4))
	$4 = *($12 + [176])
	if ( ($4 == 0) ){ goto $label$28 }
	*($12 + [180]) = $4
	CALL $867($4)
	
.LABEL $label$28
	$4 = *($1 + [28])
	if ( ($4 == 0) ){ goto $label$29 }
	*(($1 + [32])) = $4
	CALL $867($4)
	
.LABEL $label$29
	$4 = *($1 + [16])
	if ( ($4 == 0) ){ goto $label$30 }
	*(($1 + [20])) = $4
	CALL $867($4)
	
.LABEL $label$30
	if ( ((*(($12 + [72])) & [1]) == 0) ){ goto $label$31 }
	CALL $867(*(($12 + [80])))
	
.LABEL $label$31
	if ( ((*($12 + [24]) & [1]) == 0) ){ goto $label$1 }
	CALL $867(*(($12 + [32])))
	goto $label$1 
	
.LABEL $label$24
	CALL $868(($12 + [24]))
	
.LABEL $label$1
	*([0] + [4]) = ($12 + [192])
	(unreachable)
}

int_32 .FUNC $199 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [128])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $866([56])) + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [12 align=4]) = (int_64)0
	*($4 + [24]) = (int_64)0
	*($4 + [32]) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1120])
	*($4 + [40]) = $0
	CALL $203(($8 + [32]), $4)
	*($4 + [44]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [44])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $204($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $867($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $196 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [4]) = $3
	$5 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$1 }
	$9 = ($7 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)$2) ){ goto $label$1 }
	$7 = $9
	$8 = ($9 + [-24])
	$9 = $8
	if ( ((int_32)($8 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$9 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$4 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)$9), [32])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$7 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-4365870402828763136, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $199($9, $7)
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)$9), [32])
	
.LABEL $label$3
	$6 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($6, [2064])
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [2096])
	CALL eosio_assert(((uint_32)*($8 + [16]) >= (uint_32)$3), [2128])
	$7 = [1]
	$2 = *($4 + [8])
	if ( ((int_64)$2 == (int_64)1414222852) ){ goto $label$5 }
	$7 = [1]
	if ( ((int_64)$2 == (int_64)1397703940) ){ goto $label$5 }
	$7 = [1]
	if ( ((int_64)$2 == (int_64)1497713412) ){ goto $label$5 }
	$7 = ((int_64)$2 == (int_64)1414550532)
	
.LABEL $label$5
	CALL eosio_assert($7, [2160])
	CALL eosio_assert(((int_64)*(($8 + [32])) == (int_64)$2), [2192])
	CALL eosio_assert(((int_64)*($4) == (int_64)((int_64)(CASTING uint_64)(uint_32 $3) * (int_64)*($8 + [24]))), [2192])
	$7 = *(($8 + [16]))
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$8 }
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$9 }
	CALL eosio_assert($6, [2224])
	CALL eosio_assert($6, [960])
	$7 = CALL db_next_i64(*($8 + [44]), ($10 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$10 }
	CALL $199($9, $7)
	
.LABEL $label$10
	CALL $200($9, $8)
	$9 = *($10 + [4])
	if ( $9 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$2 = *($0)
	*($10 + [8]) = ($10 + [4])
	CALL eosio_assert($6, [352])
	CALL $201($9, $8, $2, ($10 + [8]))
	
.LABEL $label$8
	$9 = *($10 + [4])
	if ( ($9 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$8 = *($8 + [12])
	$7 = *($0 + [48])
	
.LOOP $label$11:
	CALL $67($7, $1, $8, [1])
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$11 }
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $197 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $866([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $83($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $198(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $194 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [192])
	*([0] + [4]) = $12
	$4 = *($1 + [8])
	$5 = ($1 + [12])
	if ( (( *($5) ? uint_32($4 >> [1]) : ($4 & [1]) ) == 0) ){ goto $label$1 }
	$5 = ($1 + [8])
	$4 = *($5)
	$0 = *($0)
	$2 = *($0 + [1680])
	$3 = CALL strlen($2)
	if ( ((int_32)$3 != (int_32)( *($5) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$3 }
	if ( (CALL $877($5, [0], [-1], $2, $3) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [2032])
	goto $label$1 
	
.LABEL $label$2
	$7 = (int_64)0
	*($12 + [168]) = (int_64)0
	*($12 + [164]) = [0]
	$4 = ($0 + [1304])
	CALL $195($4, ($1 + [20]), ($12 + [168]), ($12 + [164]))
	*(($12 + [156])) = *(($1 + [60]))
	*(($5 = (($12 + [144]) + [8]))) = *(($1 + [56]))
	*($12 + [148]) = *(($1 + [52]))
	$2 = *($12 + [164])
	$9 = *($12 + [168])
	*($12 + [144]) = *($1 + [48])
	$6 = *($1)
	*((($12 + [8]) + [8])) = *($5)
	*($12 + [8]) = *($12 + [144])
	CALL $196($4, $6, $9, $2, ($12 + [8]))
	$5 = ($1 + [48])
	$10 = *($0)
	$6 = (int_64)59
	$1 = [1152]
	$8 = (int_64)0
	
.LOOP $label$4:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$9 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$4 = ($4 + [165])
	goto $label$7 
	
.LABEL $label$9
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$6
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$5
	$1 = ($1 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$4 }
	*($12 + [96]) = $8
	*($12 + [88]) = $10
	$7 = (int_64)0
	$9 = (int_64)59
	$1 = [1200]
	$8 = (int_64)0
	
.LOOP $label$10:
	$6 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$11 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$4 = ($4 + [165])
	goto $label$12 
	
.LABEL $label$13
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$11
	$1 = ($1 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$6 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$10 }
	$7 = (int_64)0
	$6 = (int_64)59
	$1 = [1184]
	$10 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$19 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$4 = ($4 + [165])
	goto $label$17 
	
.LABEL $label$19
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$15
	$1 = ($1 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$14 }
	$7 = (int_64)0
	$9 = (int_64)59
	$1 = [1984]
	$11 = (int_64)0
	
.LOOP $label$20:
	$6 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$21 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$4 = ($4 + [165])
	goto $label$22 
	
.LABEL $label$23
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$21
	$1 = ($1 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$11 = ((int_64)$6 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$20 }
	*(($12 + [32])) = [0]
	*($12 + [24]) = (int_64)0
	$1 = CALL strlen([2000])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$24 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$27 }
	*($12 + [24]) = ($1 << [1])
	$4 = (($12 + [24]) | [1])
	if ( $1 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$2 = (($1 + [16]) & [-16])
	$4 = CALL $866($2)
	*($12 + [24]) = ($2 | [1])
	*($12 + [32]) = $4
	*($12 + [28]) = $1
	
.LABEL $label$26
	CALL memcpy($4, [2000], $1)
	
.LABEL $label$25
	*(($4 + $1)) = [0]
	$7 = *($0)
	*(($12 + [68])) = *(($5 + [12]))
	*(($12 + [64])) = *(($5 + [8]))
	*(($12 + [60])) = *(($5 + [4]))
	*($12 + [48]) = $11
	*($12 + [40]) = $7
	*($12 + [56]) = *($5)
	$1 = (($12 + [24]) + [8])
	*(($12 + [80])) = *($1)
	*($12 + [72]) = *($12 + [24])
	*($12 + [24]) = [0]
	*($12 + [28]) = [0]
	*($1) = [0]
	$1 = CALL $197(($12 + [104]), ($12 + [88]), $8, $10, ($12 + [40]))
	CALL $65(($12 + [176]), $1)
	$4 = *($12 + [176])
	CALL send_inline($4, (*($12 + [180]) - $4))
	$4 = *($12 + [176])
	if ( ($4 == 0) ){ goto $label$28 }
	*($12 + [180]) = $4
	CALL $867($4)
	
.LABEL $label$28
	$4 = *($1 + [28])
	if ( ($4 == 0) ){ goto $label$29 }
	*(($1 + [32])) = $4
	CALL $867($4)
	
.LABEL $label$29
	$4 = *($1 + [16])
	if ( ($4 == 0) ){ goto $label$30 }
	*(($1 + [20])) = $4
	CALL $867($4)
	
.LABEL $label$30
	if ( ((*(($12 + [72])) & [1]) == 0) ){ goto $label$31 }
	CALL $867(*(($12 + [80])))
	
.LABEL $label$31
	if ( ((*($12 + [24]) & [1]) == 0) ){ goto $label$1 }
	CALL $867(*(($12 + [32])))
	goto $label$1 
	
.LABEL $label$24
	CALL $868(($12 + [24]))
	
.LABEL $label$1
	*([0] + [4]) = ($12 + [192])
	(unreachable)
}

void .FUNC $195 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	CALL $205($0, $1, $4, [44])
	CALL eosio_assert(((int_32)(*($4 + [4]) - *($4)) == (int_32)[24]), [2448])
	$0 = *($4)
	if ( (*($0) & [1]) ){ goto $label$2 }
	$0 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$0 = *($0 + [8])
	
.LABEL $label$1
	*($2) = CALL atoll($0)
	$0 = *($4)
	if ( (*($0 + [12]) & [1]) ){ goto $label$4 }
	$0 = (($0 + [12]) + [1])
	goto $label$3 
	
.LABEL $label$4
	$0 = *(($0 + [20]))
	
.LABEL $label$3
	$0 = CALL atoi($0)
	*($3) = $0
	CALL eosio_assert((((int_32)$0 != (int_32)[0]) & ((int_64)*($2) != (int_64)0)), [2448])
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = *($4 + [4])
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$7 }
	$3 = ([0] - $0)
	$2 = ($2 + [-12])
	
.LOOP $label$8:
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	CALL $867(*(($2 + [8])))
	
.LABEL $label$9
	$2 = ($2 + [-12])
	if ( ((int_32)($2 + $3) != (int_32)[-12]) ){ goto $label$8 }
	$2 = *($4)
	goto $label$6 
	
.LABEL $label$7
	$2 = $0
	
.LABEL $label$6
	*($4 + [4]) = $0
	CALL $867($2)
	
.LABEL $label$5
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $192 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [144])
	*([0] + [4]) = $14
	*($14 + [136]) = $3
	CALL $193(($14 + [88]))
	$3 = (($14 + [88]) + [24])
	CALL eosio_assert(((int_64)*($3) == (int_64)1497713412), [1952])
	$7 = [0]
	$4 = ($14 + [104])
	if ( ((uint_64)((int_64)*($4) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$9 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [1840])
	CALL eosio_assert(((int_64)*($4) > (int_64)0), [1872])
	$9 = *($0 + [40])
	$11 = *($14 + [88])
	if ( ((int_64)$11 == (int_64)$9) ){ goto $label$6 }
	if ( ((int_64)*($14 + [96]) != (int_64)$9) ){ goto $label$6 }
	$5 = *($0 + [24])
	$10 = *(($0 + [28]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$7 }
	$3 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$8:
	if ( ((int_64)*(*($3)) == (int_64)$11) ){ goto $label$7 }
	$10 = $3
	$7 = ($3 + [-24])
	$3 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$10 }
	$3 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [32])
	goto $label$9 
	
.LABEL $label$10
	$3 = [0]
	$7 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6030912142679474176, $11)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	$3 = CALL $13($0, $7)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [32])
	
.LABEL $label$9
	CALL _ZN13admin_control15check_blacklistEN5eosio4nameE(*($0 + [52]), $11)
	if ( ($3 == 0) ){ goto $label$13 }
	*(($14 + [40])) = (int_64)0
	*((($14 + [24]) + [24])) = (int_64)0
	*($14 + [24]) = (int_64)0
	*($14 + [32]) = (int_64)0
	*($14 + [64]) = (int_64)0
	*($14 + [72]) = (int_64)0
	*(($14 + [80])) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$9 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$7 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$7 = [0]
	
.LABEL $label$14
	CALL eosio_assert($7, [1120])
	$7 = CALL $876($3, [58], [0])
	$10 = ($7 + [1])
	$3 = ($14 + [120])
	CALL $876($3, [58], $10)
	*($14 + [24]) = $11
	CALL $884(($14 + [8]), $3, [0], $7, $3)
	*($14 + [32]) = [0]
	CALL $871((($14 + [24]) + [8]), [0])
	*(($14 + [40])) = *((($14 + [8]) + [8]))
	*($14 + [32]) = *($14 + [8])
	CALL $884(($14 + [8]), $3, $10, [-1], $3)
	$3 = ($14 + [44])
	if ( (*($14 + [44]) & [1]) ){ goto $label$12 }
	*($3) = [0]
	goto $label$11 
	
.LABEL $label$13
	$9 = (int_64)0
	$11 = (int_64)59
	$3 = [1904]
	$8 = *($14 + [88])
	$12 = (int_64)0
	
.LOOP $label$19:
	$13 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$20 }
	$7 = *($3)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$7 = ($7 + [165])
	goto $label$21 
	
.LABEL $label$22
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$20
	$3 = ($3 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$19 }
	if ( ((int_64)$8 == (int_64)$12) ){ goto $label$6 }
	$9 = (int_64)0
	$11 = (int_64)59
	$3 = [1920]
	$12 = (int_64)0
	
.LOOP $label$23:
	$13 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$24 }
	$7 = *($3)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$7 = ($7 + [165])
	goto $label$25 
	
.LABEL $label$26
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$24
	$3 = ($3 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$23 }
	if ( ((int_64)$8 == (int_64)$12) ){ goto $label$6 }
	CALL eosio_assert([0], [1936])
	goto $label$6 
	
.LABEL $label$12
	*(*(($14 + [52]))) = [0]
	*(($14 + [48])) = [0]
	
.LABEL $label$11
	CALL $871($3, [0])
	*(($3 + [8])) = *((($14 + [8]) + [8]))
	*($3) = *($14 + [8])
	*(($14 + [80])) = *(($4 + [8]))
	*($14 + [72]) = *($4)
	CALL $194(($14 + [136]), ($14 + [24]))
	if ( ((*(($14 + [44])) & [1]) == 0) ){ goto $label$27 }
	CALL $867(*(($14 + [52])))
	
.LABEL $label$27
	if ( ((*((($14 + [24]) + [8])) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*(($14 + [40])))
	
.LABEL $label$6
	if ( ((*($14 + [120]) & [1]) == 0) ){ goto $label$28 }
	CALL $867(*(($14 + [128])))
	
.LABEL $label$28
	*([0] + [4]) = ($14 + [144])
}

void .FUNC $193 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *([0] + [4])
	$3 = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	CALL $207($0, $2, $1)
	if ( ($1 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = $3
}

int_32 .FUNC $190 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [152]))
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [156])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $867($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$4 = *(($0 + [152]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($3) = $1
	CALL $867($4)
	
.LABEL $label$1
	$1 = *(($0 + [112]))
	if ( ($1 == 0) ){ goto $label$6 }
	$3 = ($0 + [116])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $867($2)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$4 = *(($0 + [112]))
	goto $label$7 
	
.LABEL $label$8
	$4 = $1
	
.LABEL $label$7
	*($3) = $1
	CALL $867($4)
	
.LABEL $label$6
	$1 = *(($0 + [72]))
	if ( ($1 == 0) ){ goto $label$11 }
	$3 = ($0 + [76])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $867($2)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($0 + [72]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $867($4)
	
.LABEL $label$11
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$16 }
	$3 = ($0 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	CALL $867($2)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$19 }
	$4 = *(($0 + [32]))
	goto $label$17 
	
.LABEL $label$18
	$4 = $1
	
.LABEL $label$17
	*($3) = $1
	CALL $867($4)
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $191 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *($0 + [112])
	if ( ($5 == 0) ){ goto $label$1 }
	*(($0 + [116])) = $5
	CALL $867($5)
	
.LABEL $label$1
	$3 = *(($0 + [72]))
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($0 + [76])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	CALL $867($2)
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$5 }
	$5 = *(($0 + [72]))
	goto $label$3 
	
.LABEL $label$4
	$5 = $3
	
.LABEL $label$3
	*($1) = $3
	CALL $867($5)
	
.LABEL $label$2
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$7 }
	$4 = ($0 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	$3 = *($2 + [12])
	if ( ($3 == 0) ){ goto $label$12 }
	*(($2 + [16])) = $3
	CALL $867($3)
	
.LABEL $label$12
	CALL $867($2)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$10 }
	$5 = *(($0 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$5 = $1
	
.LABEL $label$8
	*($4) = $1
	CALL $867($5)
	
.LABEL $label$7
	return $0
}

int_32 .FUNC $776 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [32])
	*([0] + [4]) = $12
	$6 = *($5 + [24])
	$5 = *($0 + [52])
	$11 = *(($5 + [28]))
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$1 }
	$10 = ($11 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$2:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$1 }
	$11 = $10
	$8 = ($10 + [-24])
	$10 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$4 }
	$10 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$10 = [0]
	$8 = CALL db_find_i64(*($5), *($5 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$10 = CALL $13($5, $8)
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$5), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [192])
	CALL $269(($12 + [24]), *($0 + [60]), $1, [1])
	*($12 + [23]) = [0]
	$9 = *($12 + [24])
	*($12 + [8]) = $9
	*($12) = $9
	CALL $680($0, $1, $2, $3, [0], $4, ($12 + [23]), $12)
	$10 = *($12 + [23])
	*([0] + [4]) = ($12 + [32])
	return $10
}

void .FUNC $777 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	$5 = *($4 + [24])
	$4 = *($0 + [52])
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$1 }
	$8 = ($9 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$1 }
	$9 = $8
	$7 = ($8 + [-24])
	$8 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$4 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $13($4, $7)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$4), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [192])
	CALL $269(($10 + [40]), *($0 + [60]), $1, [1])
	*($10 + [32]) = $4
	*($10 + [36]) = $8
	*($10 + [24]) = *($10 + [40])
	*($10 + [16 align=4]) = *($10 + [32])
	*(($10 + [12])) = *($10 + [28])
	*($10 + [8]) = *($10 + [24])
	CALL $703($0, ($10 + [16]), $2, [0], $3, ($10 + [8]))
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $774 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	$4 = *($3 + [24])
	$3 = *($0 + [64])
	$8 = *(($3 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $13($3, $6)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$3), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [192])
	CALL $269(($9 + [40]), *($0 + [76]), $1, [1])
	*($9 + [32]) = $3
	*($9 + [36]) = $7
	*($9 + [24]) = *($9 + [40])
	*($9 + [16 align=4]) = *($9 + [32])
	*(($9 + [12])) = *($9 + [28])
	*($9 + [8]) = *($9 + [24])
	CALL $715($0, $1, $2, ($9 + [16]), [0], ($9 + [8]))
	*([0] + [4]) = ($9 + [48])
}

void .FUNC $775 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [48])
	*([0] + [4]) = $11
	$6 = *($5 + [24])
	$5 = *($0 + [48])
	$10 = *(($5 + [28]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$1 }
	$9 = ($10 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$1 }
	$10 = $9
	$8 = ($9 + [-24])
	$9 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$4 }
	$9 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *($5 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $13($5, $8)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$5), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [192])
	CALL $269(($11 + [40]), *($0 + [60]), $1, [1])
	*($11 + [32]) = $5
	*($11 + [36]) = $9
	*($11 + [24]) = *($11 + [40])
	*($11 + [16 align=4]) = *($11 + [32])
	*(($11 + [12])) = *($11 + [28])
	*($11 + [8]) = *($11 + [24])
	CALL $639($0, ($11 + [16]), $2, $3, [0], $4, ($11 + [8]))
	*([0] + [4]) = ($11 + [48])
}

void .FUNC $772 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [48])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [52])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [56])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [60])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [64])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [68])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [72])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [76])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [80])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [84])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [88])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [92])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [96])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [100])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [104])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [108])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [112])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [116])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [120])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [124])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [128])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [132])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [136])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [140])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [144])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [148])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [152])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [156])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [160])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [164])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [168])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [172])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [176])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [180])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [184])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [188])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [192])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [196])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [200])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [204])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [208])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [212])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [216])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [220])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [224])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [228])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [232])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [236])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [240])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [244])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [248])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [252])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [256])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$2 = *($0 + [260])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [160])
	CALL memcpy($2, *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
}

int_32 .FUNC $773 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([64])) + [48]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((uint_32)($4 + [-8]) > (uint_32)[33]), [160])
	CALL memcpy(($6 + [8]), ($7 + [8]), [34])
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $779(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $770 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [272])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy(($3 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $209(*($1), ($3 + [16]))
	*($4) = *($1)
	*($4 + [12]) = ($3 + [29])
	*($4 + [8]) = ($3 + [28])
	*($4 + [16]) = ($3 + [30])
	*($4 + [20]) = ($3 + [31])
	*($4 + [24]) = ($3 + [32])
	*($4 + [28]) = ($3 + [33])
	*($4 + [32]) = ($3 + [34])
	*($4 + [36]) = ($3 + [35])
	*($4 + [40]) = ($3 + [36])
	*($4 + [44]) = ($3 + [37])
	*($4 + [48]) = ($3 + [38])
	*($4 + [52]) = ($3 + [39])
	*($4 + [56]) = ($3 + [40])
	*($4 + [60]) = ($3 + [41])
	*($4 + [64]) = ($3 + [42])
	*($4 + [68]) = ($3 + [43])
	*($4 + [72]) = ($3 + [44])
	*($4 + [76]) = ($3 + [45])
	*($4 + [80]) = ($3 + [46])
	*($4 + [84]) = ($3 + [47])
	*($4 + [88]) = ($3 + [48])
	*($4 + [92]) = ($3 + [49])
	*($4 + [96]) = ($3 + [50])
	*($4 + [100]) = ($3 + [51])
	*($4 + [104]) = ($3 + [52])
	*($4 + [108]) = ($3 + [53])
	*($4 + [112]) = ($3 + [54])
	*($4 + [116]) = ($3 + [55])
	*($4 + [120]) = ($3 + [56])
	*($4 + [124]) = ($3 + [57])
	*($4 + [128]) = ($3 + [58])
	*($4 + [132]) = ($3 + [59])
	*($4 + [136]) = ($3 + [60])
	*($4 + [140]) = ($3 + [61])
	*($4 + [144]) = ($3 + [62])
	*($4 + [148]) = ($3 + [63])
	*($4 + [152]) = ($3 + [64])
	*($4 + [156]) = ($3 + [65])
	*($4 + [160]) = ($3 + [66])
	*($4 + [164]) = ($3 + [67])
	*($4 + [168]) = ($3 + [68])
	*($4 + [172]) = ($3 + [69])
	*($4 + [176]) = ($3 + [70])
	*($4 + [180]) = ($3 + [71])
	*($4 + [184]) = ($3 + [72])
	*($4 + [188]) = ($3 + [73])
	*($4 + [192]) = ($3 + [74])
	*($4 + [196]) = ($3 + [75])
	*($4 + [200]) = ($3 + [76])
	*($4 + [204]) = ($3 + [77])
	*($4 + [208]) = ($3 + [78])
	*($4 + [212]) = ($3 + [79])
	*($4 + [216]) = ($3 + [80])
	*($4 + [220]) = ($3 + [81])
	*($4 + [224]) = ($3 + [82])
	*($4 + [228]) = ($3 + [83])
	*($4 + [232]) = ($3 + [84])
	*($4 + [236]) = ($3 + [85])
	*($4 + [240]) = ($3 + [86])
	*($4 + [244]) = ($3 + [87])
	*($4 + [248]) = ($3 + [88])
	*($4 + [252]) = ($3 + [89])
	*($4 + [256]) = ($3 + [90])
	*($4 + [260]) = ($3 + [91])
	*($4 + [264]) = ($3 + [92])
	*($4 + [268]) = ($3 + [93])
	CALL $772(($4 + [8]), $4)
	*([0] + [4]) = ($4 + [272])
}

void .FUNC $771 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [320])
	*([0] + [4]) = $5
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $883(($5 + [144]), ($1 + [16]))
	CALL memcpy(($5 + [78]), ($1 + [28]), [66])
	CALL memcpy(($5 + [160]), ($5 + [78]), [66])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $883(($5 + [304]), ($5 + [144]))
	CALL memcpy(($5 + [232]), ($5 + [160]), [66])
	CALL memcpy(($5 + [12]), ($5 + [232]), [66])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($5 + [304])), (int_32 ($5 + [12])), (int_32 $1))
	if ( ((*($5 + [304]) & [1]) == 0) ){ goto $label$2 }
	CALL $867(*($5 + [312]))
	
.LABEL $label$2
	if ( ((*($5 + [144]) & [1]) == 0) ){ goto $label$3 }
	CALL $867(*($5 + [152]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [320])
}

int_32 .FUNC $523 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $866([40])
	$6 = CALL $546($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $547(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $778 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [2272])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [2320])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$4 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($4)) == (int_64)$2) ){ goto $label$1 }
	$7 = $4
	$8 = ($4 + [-24])
	$4 = $8
	if ( ((int_32)($8 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2384])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL $867(*(($4 + [40])))
	
.LABEL $label$7
	if ( ((*($4 + [20]) & [1]) == 0) ){ goto $label$8 }
	CALL $867(*(($4 + [28])))
	
.LABEL $label$8
	CALL $867($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*(($4 + [40])))
	
.LABEL $label$11
	if ( ((*($4 + [20]) & [1]) == 0) ){ goto $label$12 }
	CALL $867(*(($4 + [28])))
	
.LABEL $label$12
	CALL $867($4)
	
.LABEL $label$10
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*(($1 + [108])))
}

void .FUNC $779 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $174 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL $212(($0 + [600]), $1)
	CALL $549(($0 + [864]), $1, $2)
}

int_32 .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [64])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	CALL $548(($6 + [8]), $4, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	*(($1 = (($6 + [32]) + [8]))) = *(($6 + [24]))
	$3 = *($6 + [8])
	*($6 + [32]) = *($6 + [16])
	*((($6 + [48]) + [8])) = *($1)
	*($6 + [48]) = *($6 + [32])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 ($6 + [48])), (int_32 $5))
	*([0] + [4]) = ($6 + [64])
	return [1]
}

void .FUNC $176 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	$3 = ($0 + [600])
	CALL _ZN13admin_control15check_blacklistEN5eosio4nameE($3, $1)
	CALL $212($3, $1)
	CALL $522(($0 + [864]), $1, $2)
}

void .FUNC $177 (int_32 $0, int_64 $1)
{
	CALL _ZN13admin_control15check_blacklistEN5eosio4nameE(($0 + [600]), $1)
	CALL $510(($0 + [864]), $1)
}

void .FUNC $170 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL $212(($0 + [600]), $1)
	$2 = CALL $632(($0 + [200]), $1, $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$1 }
	CALL $608(($0 + [280]), $1, ($2 & [255]))
	
.LABEL $label$1
}

void .FUNC $171 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	CALL $212(($0 + [600]), $1)
	CALL $607(($0 + [200]), $1, $2, $3)
	CALL $608(($0 + [280]), $1, $3)
}

void .FUNC $172 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL $212(($0 + [600]), $1)
	CALL $601(($0 + [200]), $1, $2, CALL $600(($0 + [280]), $1))
}

void .FUNC $173 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$5 = ($0 + [600])
	CALL $212($5, $1)
	CALL $558(($0 + [8]), ((int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $4)), $1)
	CALL eosio_assert((CALL $559($5, $1) == 0), [5696])
	*((($6 + [16]) + [8])) = [0]
	*($6 + [16]) = (int_64)0
	$4 = CALL strlen([5728])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($6 + [16]) = ($4 << [1])
	$3 = (($6 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($4 + [16]) & [-16])
	$3 = CALL $866($5)
	*($6 + [16]) = ($5 | [1])
	*($6 + [24]) = $3
	*($6 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($3, [5728], $4)
	
.LABEL $label$2
	*(($3 + $4)) = [0]
	CALL $883($6, ($6 + [16]))
	CALL $560(($0 + [200]), $1, $2, $6)
	if ( ((*($6) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*($6 + [8]))
	
.LABEL $label$5
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*($6 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $868(($6 + [16]))
}

void .FUNC $178 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	$3 = ($0 + [600])
	CALL _ZN13admin_control15check_blacklistEN5eosio4nameE($3, $1)
	CALL $212($3, $1)
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$1 }
	CALL $503(($0 + [864]), $1)
	return 
	
.LABEL $label$1
	CALL eosio_assert([0], [5072])
}

void .FUNC $179 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	CALL $212(($0 + [600]), $1)
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$4 = CALL strlen([1408])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	$3 = ($0 + [1208])
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($6) = ($4 << [1])
	$0 = ($6 | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($4 + [16]) & [-16])
	$0 = CALL $866($5)
	*($6) = ($5 | [1])
	*($6 + [8]) = $0
	*($6 + [4]) = $4
	
.LABEL $label$3
	CALL memcpy($0, [1408], $4)
	
.LABEL $label$2
	*(($0 + $4)) = [0]
	CALL $489($3, $1, $2, $6)
	if ( ((*($6) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*($6 + [8]))
	
.LABEL $label$5
	*([0] + [4]) = ($6 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $868($6)
}

int_32 .FUNC $589 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [592])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$3 = *($1)
	$7 = *($1 + [4])
	$5 = int_32(($7 - $3) >> [4])
	$4 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$3 }
	CALL $590($1, ($4 - $5))
	$7 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$5) ){ goto $label$2 }
	$4 = ($4 << [4])
	$2 = ($3 + $4)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$3 = (([0] - $3) - $4)
	$4 = ($7 + [-12])
	
.LOOP $label$5:
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [4])) = $5
	CALL $867($5)
	
.LABEL $label$6
	$4 = ($4 + [-16])
	if ( ((int_32)($4 + $3) != (int_32)[-12]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $2
	$7 = $2
	
.LABEL $label$2
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$7 }
	$3 = ($0 + [8])
	
.LOOP $label$8:
	$5 = ($0 + [4])
	CALL eosio_assert(((uint_32)(*($3) - *($5)) > (uint_32)[1]), [160])
	CALL memcpy($4, *($5), [2])
	*($5) = (*($5) + [2])
	CALL $210($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$7
	return $0
}

int_32 .FUNC $588 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [592])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$6 = *($1)
	$2 = *($1 + [4])
	$7 = ((int_32)($2 - $6) / (int_32)[40])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$7) ){ goto $label$3 }
	CALL $591($1, ($4 - $7))
	$2 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$7) ){ goto $label$2 }
	$4 = ((int_32)$4 * (int_32)[40])
	$3 = ($6 + $4)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$4 }
	$6 = (([0] - $6) - $4)
	$4 = ($2 + [-24])
	
.LOOP $label$5:
	$7 = *(($4 + [12]))
	if ( ($7 == 0) ){ goto $label$6 }
	*(($4 + [16])) = $7
	CALL $867($7)
	
.LABEL $label$6
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [4])) = $7
	CALL $867($7)
	
.LABEL $label$7
	$4 = ($4 + [-40])
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $3
	$2 = $3
	
.LABEL $label$2
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	$4 = ($0 + [4])
	
.LOOP $label$9:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - *($4)) > (uint_32)[7]), [160])
	CALL memcpy($7, *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [160])
	CALL memcpy(($7 + [8]), *($4), [8])
	*($4) = (*($4) + [8])
	CALL $210(CALL $592($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$9 }
	
.LABEL $label$8
	return $0
}

int_32 .FUNC $585 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([32])) + [8]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [16]) = [0]
	*($6 + [20]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [160])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[16]), [160])
	CALL memcpy(($6 + [16]), ($7 + [16]), [4])
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $586(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $584 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [160])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [160])
	CALL memcpy(($4 + [15]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*($2) = ((int_32)*($4 + [15]) != (int_32)[0])
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $587 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($1, *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [4]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	$6 = [0]
	$5 = (int_64)0
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *(($0 + [8]))), [592])
	$7 = ($0 + [4])
	$4 = *($7)
	$2 = *($4)
	$4 = ($4 + [1])
	*($7) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$1 }
	*($1 + [12]) = $5
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)*($3) != (int_32)$4), [160])
	$4 = ($0 + [4])
	CALL memcpy(($1 + [16]), *($4), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	$7 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	CALL eosio_assert(($6 <= *($3)), [592])
	$6 = *($4)
	$2 = *($6)
	$6 = ($6 + [1])
	*($4) = $6
	$7 = ($7 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $7)) | (int_64)$5)
	$7 = ($7 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$2 }
	*($1 + [20]) = $5
	return $0
}

void .FUNC $586 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $581 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [16])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [20])) = $6
	CALL $867($6)
	
.LABEL $label$11
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $867($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $580 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*($0) = (int_64)0
	*($0 + [8]) = (int_64)0
	*($0 + [16 align=4]) = (int_64)0
	*($0 + [28]) = $1
	*(($0 + [24])) = [0]
	$1 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($0, *($1 + [4]), [8])
	$3 = (*($1 + [4]) + [8])
	*($1 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($1 + [8]) - $3) > (uint_32)[3]), [160])
	CALL memcpy(($0 + [8]), *($1 + [4]), [4])
	$3 = (*($1 + [4]) + [4])
	*($1 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($1 + [8]) - $3) > (uint_32)[3]), [160])
	CALL memcpy(($0 + [12]), *($1 + [4]), [4])
	*($1 + [4]) = (*($1 + [4]) + [4])
	CALL $582($1, ($0 + [16]))
	*($0 + [32]) = *(*($2 + [8]))
	return $0
}

void .FUNC $583 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$4 }
	$6 = [268435455]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$6 = int_32($2 >> [3])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $866(($6 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	*($6) = [0]
	*(($6 + [12])) = [0]
	$6 = (*($0) + [16])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $882($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [4]))
	$5 = ($2 + ($3 << [4]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	*($6) = [0]
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $867($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $582 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [592])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = int_32(($4 - $7) >> [4])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $583($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ($6 << [4]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	
.LOOP $label$6:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [8])
	*((($8 + [16]) + [12])) = ($7 + [12])
	*($8 + [20]) = ($7 + [4])
	CALL $584(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $629 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $116 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL $212(($0 + [600]), $1)
	$2 = CALL $803(($0 + [1208]), $1, $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$1 }
	CALL $608(($0 + [280]), $1, ($2 & [255]))
	
.LABEL $label$1
}

void .FUNC $117 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	$4 = ($0 + [600])
	CALL $212($4, $1)
	CALL eosio_assert((CALL $559($4, $1) == 0), [5696])
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$4 = CALL strlen([9136])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($4 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($4 + [16]) & [-16])
	$6 = CALL $866($5)
	*($7 + [16]) = ($5 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($6, [9136], $4)
	
.LABEL $label$2
	*(($6 + $4)) = [0]
	CALL $883($7, ($7 + [16]))
	CALL _ZN16activity_control10topenchestEN5eosio4nameEttNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(($0 + [1504]), $1, $2, $3, $7)
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*($7 + [8]))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $868(($7 + [16]))
}

void .FUNC $58 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$4 = *($3 + [24])
	$3 = *($0 + [52])
	$8 = *(($3 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $13($3, $6)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$3), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [192])
	$3 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	$7 = ($8 + [-24])
	$5 = ([0] - $3)
	
.LOOP $label$6:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$5 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$7 = ($0 + [8])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$8 }
	$6 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$7), [32])
	goto $label$7 
	
.LABEL $label$8
	$6 = [0]
	$8 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-5915108674644213760, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $72($7, $8)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$7), [32])
	
.LABEL $label$7
	$7 = [0]
	*($9 + [8]) = [0]
	*($9) = (int_64)0
	$6 = ( ($6 + [12]) ? ($0 + [56]) : $6 )
	$8 = (*($6 + [4]) - *($6))
	$5 = ((int_32)$8 / (int_32)[12])
	if ( ($8 == 0) ){ goto $label$12 }
	if ( ((uint_32)$5 >= (uint_32)[357913942]) ){ goto $label$9 }
	$7 = CALL $866($8)
	*(($9 + [8])) = ($7 + ((int_32)$5 * (int_32)[12]))
	*($9) = $7
	*($9 + [4]) = $7
	$8 = *($6)
	$6 = (*(($6 + [4])) - $8)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$11 }
	CALL memcpy($7, $8, $6)
	$6 = ($7 + ((int_32)((uint_32)$6 / (uint_32)[12]) * (int_32)[12]))
	*($9 + [4]) = $6
	goto $label$10 
	
.LABEL $label$12
	$6 = [0]
	goto $label$10 
	
.LABEL $label$11
	$6 = $7
	
.LABEL $label$10
	CALL eosio_assert(((((int_32)($6 - $7) / (int_32)[12]) + $2) <= [25]), [1360])
	if ( ($7 == 0) ){ goto $label$13 }
	*($9 + [4]) = $7
	CALL $867($7)
	
.LABEL $label$13
	*([0] + [4]) = ($9 + [16])
	return (unreachable)
	
.LABEL $label$9
	CALL $882($9)
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([24])) + [8]) = [0]
	*($6) = (int_64)0
	*($6 + [12]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [160])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [16]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [16])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $89(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [592])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = ((int_32)($4 - $7) / (int_32)[12])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $51($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ((int_32)$6 * (int_32)[12]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	
.LOOP $label$6:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [8])
	*((($8 + [16]) + [12])) = ($7 + [9])
	*($8 + [20]) = ($7 + [4])
	CALL $52(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [12])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$5 = *($0 + [8])
	if ( ((uint_32)((int_32)($5 - $6) / (int_32)[12]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$2 = ((int_32)($6 - $4) / (int_32)[12])
	$3 = ($2 + $1)
	if ( ((uint_32)$3 >= (uint_32)[357913942]) ){ goto $label$3 }
	$6 = [357913941]
	$5 = ((int_32)($5 - $4) / (int_32)[12])
	if ( ((uint_32)$5 > (uint_32)[178956969]) ){ goto $label$6 }
	$6 = ($5 << [1])
	$6 = ( $3 ? $6 : ($6 <= $3) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$5 = CALL $866(((int_32)$6 * (int_32)[12]))
	goto $label$2 
	
.LABEL $label$5
	$5 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($0 = ($6 + [8]))) = [0]
	*($6) = [0]
	*($0) = [0]
	$6 = (*($5) + [12])
	*($5) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	$3 = ($5 + ((int_32)$6 * (int_32)[12]))
	$4 = ($5 + ((int_32)$2 * (int_32)[12]))
	$6 = $4
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($5 = ($6 + [8]))) = [0]
	*($6) = [0]
	*($5) = [0]
	$6 = ($6 + [12])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$2 = ($0 + [4])
	$5 = (*($2) - $1)
	$4 = ($4 + ((int_32)((int_32)$5 / (int_32)[-12]) * (int_32)[12]))
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($4, $1, $5)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $4
	*($2) = $6
	*(($0 + [8])) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $867($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [160])
	CALL memcpy($2, *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
}

void .FUNC _ZN16activity_control14chestdrop_memoEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL strlen([816])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$4 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = (($2 + [16]) & [-16])
	$4 = CALL $866($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($4, [816], $2)
	
.LABEL $label$2
	*(($4 + $2)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL $868($0)
}

void .FUNC _ZN16activity_control12random_candyERNSt3__13mapIymNS0_4lessIyEENS0_9allocatorINS0_4pairIKymEEEEEERNS0_6vectorINS5_IiiEENS4_ISC_EEEER10random_valiPm (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [16])
	*([0] + [4]) = $16
	*($16 + [12]) = [0]
	*($16 + [8]) = [0]
	if ( ((int_32)$4 != (int_32)[5]) ){ goto $label$2 }
	$6 = *($2)
	$4 = *($2 + [4])
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	$7 = ($1 + [4])
	$8 = int_32(($4 - $6) >> [3])
	$13 = [0]
	
.LOOP $label$4:
	$4 = ($6 + ($13 << [3]))
	$9 = *($4)
	$10 = ($5 + ($9 << [2]))
	if ( *($10) ){ goto $label$5 }
	$11 = *($4 + [4])
	$14 = (int_64)0
	$4 = ($9 + [-2])
	if ( ((uint_32)$4 > (uint_32)[6]) ){ goto $label$6 }
	$14 = *((($4 << [2]) + [848]))
	
.LABEL $label$6
	$4 = *($7)
	if ( ($4 == 0) ){ goto $label$5 }
	$15 = $7
	
.LOOP $label$8:
	if ( ((uint_64)*($4 + [16]) >= (uint_64)$14) ){ goto $label$9 }
	$4 = *($4 + [4])
	if ( $4 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$15 = $4
	$12 = *($4)
	$4 = $12
	if ( $12 ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$15 == (int_32)$7) ){ goto $label$5 }
	if ( (uint_64)($14 <= *($15 + [16])) ){ goto $label$5 }
	$4 = *($15 + [24])
	if ( ($4 <= $11) ){ goto $label$5 }
	*(($15 + [24])) = ($4 - $11)
	*($10) = (*($10) + $11)
	*($16 + [12]) = $9
	goto $label$1 
	
.LABEL $label$5
	$13 = ($13 + [1])
	if ( ($13 <= $8) ){ goto $label$4 }
	*($16 + [12]) = $9
	
.LABEL $label$3
	if ( (CALL _ZN16activity_control12random_candyERNSt3__13mapIymNS0_4lessIyEENS0_9allocatorINS0_4pairIKymEEEEEERNS0_6vectorINS5_IiiEENS4_ISC_EEEER10random_valRiSI_($0, $1, $2, $3, ($16 + [12]), ($16 + [8])) == 0) ){ goto $label$1 }
	*(($4 = ($5 + (*($16 + [12]) << [2])))) = (*($4) + *($16 + [8]))
	goto $label$1 
	
.LABEL $label$2
	if ( (CALL _ZN16activity_control12random_candyERNSt3__13mapIymNS0_4lessIyEENS0_9allocatorINS0_4pairIKymEEEEEERNS0_6vectorINS5_IiiEENS4_ISC_EEEER10random_valRiSI_($0, $1, $2, $3, ($16 + [12]), ($16 + [8])) == 0) ){ goto $label$1 }
	*(($4 = ($5 + (*($16 + [12]) << [2])))) = (*($4) + *($16 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($16 + [16])
}

int_32 .FUNC _ZN16activity_control12random_candyERNSt3__13mapIymNS0_4lessIyEENS0_9allocatorINS0_4pairIKymEEEEEERNS0_6vectorINS5_IiiEENS4_ISC_EEEER10random_valRiSI_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	if ( (*($1 + [8]) == 0) ){ goto $label$2 }
	$7 = ($1 + [4])
	$12 = *($2 + [4])
	$6 = *($2)
	$8 = [0]
	
.LOOP $label$4:
	$15 = int_32(($12 - $6) >> [3])
	if ( ($15 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 > (int_32)[9]) ){ goto $label$3 }
	$14 = ((uint_64)((int_64)((int_64)*($3) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	$15 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$14 * (int_64)(CASTING uint_64)(uint_32 $15)) >> (uint_64)(int_64)31)
	$13 = ($6 + ($15) << [3])
	*($4) = *($13))
	$9 = *($13 + [4])
	*($5) = $9
	*($3) = $14
	*(($3 + [4])) = $15
	$14 = (int_64)0
	$15 = (*($4) + [-2])
	if ( ((uint_32)$15 > (uint_32)[6]) ){ goto $label$5 }
	$14 = *((($15 << [2]) + [848]))
	
.LABEL $label$5
	$15 = *($7)
	if ( ($15 == 0) ){ goto $label$6 }
	$11 = $7
	
.LOOP $label$8:
	if ( ((uint_64)*($15 + [16]) >= (uint_64)$14) ){ goto $label$9 }
	$15 = *($15 + [4])
	if ( $15 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$11 = $15
	$10 = *($15)
	$15 = $10
	if ( $10 ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$6 }
	if ( (uint_64)($14 <= *($11 + [16])) ){ goto $label$6 }
	$15 = *($11 + [24])
	if ( ((uint_32)$15 >= (uint_32)$9) ){ goto $label$1 }
	
.LABEL $label$6
	$10 = ($13 + [8])
	if ( ((int_32)$10 == (int_32)$12) ){ goto $label$11 }
	$11 = ($12 + [-8])
	$15 = $13
	
.LOOP $label$12:
	$12 = ($15 + [8])
	*($15) = *($12)
	$15 = $12
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$12 }
	$12 = (($13 + (($11 - $10) & [-8])) + [8])
	goto $label$10 
	
.LABEL $label$11
	$12 = $13
	
.LABEL $label$10
	$8 = ($8 + [1])
	*(($2 + [4])) = $12
	if ( *(($1 + [8])) ){ goto $label$4 }
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	*(($11 + [24])) = ($15 - $9)
	return [1]
}

int_32 .FUNC _ZN16activity_control9get_candyERNSt3__13mapIymNS0_4lessIyEENS0_9allocatorINS0_4pairIKymEEEEEEii (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = (int_64)0
	$2 = ($2 + [-2])
	if ( ((uint_32)$2 > (uint_32)[6]) ){ goto $label$1 }
	$4 = *((($2 << [2]) + [848]))
	
.LABEL $label$1
	$7 = [0]
	$2 = *($1 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$5 = ($1 + [4])
	$1 = $5
	
.LOOP $label$4:
	if ( ((uint_64)*($2 + [16]) >= (uint_64)$4) ){ goto $label$5 }
	$2 = *($2 + [4])
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$1 = $2
	$6 = *($2)
	$2 = $6
	if ( $6 ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$2 }
	if ( (uint_64)($4 <= *($1 + [16])) ){ goto $label$2 }
	$2 = *($1 + [24])
	if ( ($2 <= $3) ){ goto $label$2 }
	*(($1 + [24])) = ($2 - $3)
	$7 = [1]
	
.LABEL $label$2
	return $7
}

int_32 .FUNC _ZN16activity_control19do_reveal_openchestEbN5eosio4nameEttm (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_64 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_64 $29
	int_32 $30
	int_32 $31
	$30 = (*([0] + [4]) - [320])
	*([0] + [4]) = $30
	*((($30 + [264]) + [32])) = [0]
	*($30 + [280]) = (int_64)-1
	*($30 + [288]) = (int_64)0
	$27 = *($0)
	*($30 + [264]) = $27
	*($30 + [272]) = $27
	$6 = (CASTING uint_64)(uint_32 $3)
	$24 = CALL $12(($30 + [264]), CALL $fimport$19($27, $27, (int_64)-5075105024296615936, $6))
	CALL eosio_assert(((int_32)*($24 + [20]) == (int_32)($30 + [264])), [32])
	CALL eosio_assert(((int_32)*($24 + [8]) == (int_32)[1]), [880])
	CALL eosio_assert([1], [224])
	CALL eosio_assert(((int_32)($4 | [4]) == (int_32)[5]), [896])
	CALL eosio_assert(((uint_32)*(CALL $28($0, $2, $3) + [4]) >= (uint_32)$4), [928])
	CALL $58(*($0 + [100]), $2, $4)
	if ( $1 ){ goto $label$2 }
	*($30 + [256]) = [0]
	*($30 + [252]) = [0]
	$14 = (($30 + [248]) | [4])
	*($30 + [248]) = $14
	*((($30 + [208]) + [32])) = [0]
	*($30 + [224]) = (int_64)-1
	$27 = *($0)
	*($30 + [208]) = $27
	*($30 + [216]) = $27
	*($30 + [232]) = (int_64)0
	$1 = CALL db_lowerbound_i64($27, $27, (int_64)4730643280948101120, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$16 = ($30 + [256])
	$17 = CALL $59(($30 + [208]), $1)
	$15 = *($17 + [8])
	if ( ($15 == 0) ){ goto $label$4 }
	$31 = [3]
	goto $label$1 
	
.LABEL $label$4
	$31 = [1]
	goto $label$1 
	
.LABEL $label$3
	$31 = [17]
	goto $label$1 
	
.LABEL $label$2
	$31 = [101]
	
.LABEL $label$1
	
.LOOP $label$5:
	goto $label$656 
	
.LABEL $label$670
	$1 = *($30 + [252])
	if ( ($1 == 0) ){ goto $label$275 }
	$31 = [4]
	goto $label$5 
	
.LABEL $label$669
	$27 = *($17)
	$24 = $14
	goto $label$274 
	
.LABEL $label$668
	$24 = $1
	$1 = $23
	$31 = [5]
	goto $label$5 
	
.LABEL $label$667
	$29 = *($1 + [16])
	if ( ((uint_64)$27 >= (uint_64)$29) ){ goto $label$273 }
	$31 = [14]
	goto $label$5 
	
.LABEL $label$666
	$23 = *($1)
	if ( $23 ){ goto $label$268 }
	goto $label$269 
	
.LABEL $label$665
	if ( ((uint_64)$29 >= (uint_64)$27) ){ goto $label$271 }
	$31 = [11]
	goto $label$5 
	
.LABEL $label$664
	$24 = ($1 + [4])
	$23 = *($1 + [4])
	if ( ($23 == 0) ){ goto $label$272 }
	$31 = [12]
	goto $label$5 
	
.LABEL $label$663
	$1 = $24
	goto $label$267 
	
.LABEL $label$662
	$1 = $14
	$24 = $14
	$23 = *($24)
	if ( $23 ){ goto $label$278 }
	goto $label$279 
	
.LABEL $label$661
	$24 = $1
	$31 = [7]
	goto $label$5 
	
.LABEL $label$660
	$23 = *($24)
	if ( $23 ){ goto $label$280 }
	$31 = [8]
	goto $label$5 
	
.LABEL $label$659
	*(($23 = CALL $866([32]))) = (int_64)0
	*($23 + [8]) = $1
	*($24) = $23
	*($23 + [24]) = [0]
	*($23 + [16]) = *($17)
	$1 = $23
	$7 = *(*($30 + [248]))
	if ( ($7 == 0) ){ goto $label$270 }
	$31 = [9]
	goto $label$5 
	
.LABEL $label$658
	*($30 + [248]) = $7
	$1 = *($24)
	$31 = [10]
	goto $label$5 
	
.LABEL $label$657
	CALL $60(*($30 + [252]), $1)
	*($16) = (*($16) + [1])
	$31 = [0]
	goto $label$5 
	
.LABEL $label$656
	*(($23 + [24])) = $15
	goto $label$281 
	
.LABEL $label$655
	$17 = CALL $59(($30 + [208]), $1)
	$15 = *($17 + [8])
	if ( $15 ){ goto $label$277 }
	$31 = [1]
	goto $label$5 
	
.LABEL $label$654
	CALL eosio_assert([1], [960])
	$1 = CALL db_next_i64(*($17 + [16]), $30)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$276 }
	$31 = [17]
	goto $label$5 
	
.LABEL $label$653
	$7 = [0]
	CALL memset(($30 + [160]), [0], [36])
	*($30 + [156]) = [0]
	*($30 + [152]) = $5
	if ( ($4 == 0) ){ goto $label$266 }
	$31 = [18]
	goto $label$5 
	
.LABEL $label$652
	$15 = ($3 + [-2001])
	$23 = ((uint_32)$15 > (uint_32)[3])
	$24 = ($30 + [176])
	$16 = (($30 + [248]) + [8])
	$1 = $4
	$31 = [19]
	goto $label$5 
	
.LABEL $label$651
	if ( $23 ){ goto $label$258 }
	$31 = [20]
	goto $label$5 
	
.LABEL $label$650
	goto $label$671 
	
.LABEL $label$671
	$31 = [374]
	goto $label$5 
	
.LABEL $label$649
	*($24) = (*($24) + [1])
	$27 = ((uint_64)((int_64)((int_64)*($30 + [152]) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*($30 + [152]) = $27
	$17 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$27 * (int_64)100) >> (uint_64)(int_64)31)
	*($30 + [156]) = $17)
	if ( ((uint_32)$17 > (uint_32)[2]) ){ goto $label$17 }
	$31 = [388]
	goto $label$5 
	
.LABEL $label$648
	*($30 + [172]) = (*($30 + [172]) + [1])
	$31 = [375]
	goto $label$5 
	
.LABEL $label$647
	$27 = ((uint_64)((int_64)((int_64)$27 * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*($30 + [152]) = $27
	$17 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$27 * (int_64)1000) >> (uint_64)(int_64)31)
	*($30 + [156]) = $17)
	$14 = [0]
	if ( ((uint_32)$17 <= (uint_32)[149]) ){ goto $label$16 }
	$31 = [376]
	goto $label$5 
	
.LABEL $label$646
	$14 = [1]
	if ( ($17 <= [335]) ){ goto $label$15 }
	$31 = [377]
	goto $label$5 
	
.LABEL $label$645
	$14 = [2]
	if ( ($17 <= [570]) ){ goto $label$14 }
	$31 = [378]
	goto $label$5 
	
.LABEL $label$644
	$14 = [3]
	if ( ($17 <= [820]) ){ goto $label$13 }
	$31 = [379]
	goto $label$5 
	
.LABEL $label$643
	$14 = [4]
	if ( ($17 <= [905]) ){ goto $label$12 }
	$31 = [380]
	goto $label$5 
	
.LABEL $label$642
	$14 = [5]
	if ( ($17 <= [960]) ){ goto $label$11 }
	$31 = [381]
	goto $label$5 
	
.LABEL $label$641
	$14 = [6]
	if ( ($17 <= [977]) ){ goto $label$10 }
	$31 = [382]
	goto $label$5 
	
.LABEL $label$640
	$14 = [7]
	if ( ($17 <= [986]) ){ goto $label$9 }
	$31 = [383]
	goto $label$5 
	
.LABEL $label$639
	$14 = [8]
	if ( ($17 <= [991]) ){ goto $label$8 }
	$31 = [384]
	goto $label$5 
	
.LABEL $label$638
	$14 = [9]
	if ( ($17 <= [995]) ){ goto $label$7 }
	$31 = [385]
	goto $label$5 
	
.LABEL $label$637
	$14 = [10]
	if ( ($17 <= [998]) ){ goto $label$6 }
	$31 = [386]
	goto $label$5 
	
.LABEL $label$636
	$14 = [11]
	if ( ((uint_32)$17 >= (uint_32)[1000]) ){ goto $label$249 }
	$31 = [387]
	goto $label$5 
	
.LABEL $label$635
	*($30 + [168]) = (*($30 + [168]) + *((($14 << [2]) + [992])))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$261 }
	goto $label$262 
	
.LABEL $label$634
	*($24) = (*($24) + [1])
	$27 = ((uint_64)((int_64)((int_64)*($30 + [152]) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*($30 + [152]) = $27
	$17 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$27 * (int_64)100) >> (uint_64)(int_64)31)
	*($30 + [156]) = $17)
	if ( ((uint_32)$17 > (uint_32)[2]) ){ goto $label$28 }
	$31 = [373]
	goto $label$5 
	
.LABEL $label$633
	*($30 + [172]) = (*($30 + [172]) + [1])
	$31 = [361]
	goto $label$5 
	
.LABEL $label$632
	$27 = ((uint_64)((int_64)((int_64)$27 * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*($30 + [152]) = $27
	$17 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$27 * (int_64)100) >> (uint_64)(int_64)31)
	*($30 + [156]) = $17)
	$14 = [0]
	if ( ((uint_32)$17 <= (uint_32)[13]) ){ goto $label$27 }
	$31 = [362]
	goto $label$5 
	
.LABEL $label$631
	$14 = [1]
	if ( ($17 <= [29]) ){ goto $label$26 }
	$31 = [363]
	goto $label$5 
	
.LABEL $label$630
	$14 = [2]
	if ( ($17 <= [47]) ){ goto $label$25 }
	$31 = [364]
	goto $label$5 
	
.LABEL $label$629
	$14 = [3]
	if ( ($17 <= [71]) ){ goto $label$24 }
	$31 = [365]
	goto $label$5 
	
.LABEL $label$628
	$14 = [4]
	if ( ($17 <= [79]) ){ goto $label$23 }
	$31 = [366]
	goto $label$5 
	
.LABEL $label$627
	$14 = [5]
	if ( ($17 <= [85]) ){ goto $label$22 }
	$31 = [367]
	goto $label$5 
	
.LABEL $label$626
	$14 = [6]
	if ( ($17 <= [90]) ){ goto $label$21 }
	$31 = [368]
	goto $label$5 
	
.LABEL $label$625
	$14 = [7]
	if ( ($17 <= [94]) ){ goto $label$20 }
	$31 = [369]
	goto $label$5 
	
.LABEL $label$624
	$14 = [8]
	if ( ($17 <= [97]) ){ goto $label$19 }
	$31 = [370]
	goto $label$5 
	
.LABEL $label$623
	$14 = [9]
	if ( ($17 <= [99]) ){ goto $label$18 }
	$31 = [371]
	goto $label$5 
	
.LABEL $label$622
	$14 = [10]
	if ( ((int_32)$17 != (int_32)[99]) ){ goto $label$250 }
	$31 = [372]
	goto $label$5 
	
.LABEL $label$621
	*($30 + [168]) = (*($30 + [168]) + *((($14 << [2]) + [1040])))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$263 }
	goto $label$264 
	
.LABEL $label$620
	*($24) = (*($24) + [1])
	$27 = ((uint_64)((int_64)((int_64)*($30 + [152]) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*($30 + [152]) = $27
	$17 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$27 * (int_64)100) >> (uint_64)(int_64)31)
	*($30 + [156]) = $17)
	if ( ((uint_32)$17 > (uint_32)[2]) ){ goto $label$29 }
	$31 = [359]
	goto $label$5 
	
.LABEL $label$619
	*($30 + [172]) = (*($30 + [172]) + [1])
	$31 = [356]
	goto $label$5 
	
.LABEL $label$618
	if ( (*($16) == 0) ){ goto $label$251 }
	$31 = [357]
	goto $label$5 
	
.LABEL $label$617
	*(($17 = CALL $866([40]))) = (int_64)858993459202
	*($17 + [8 align=4]) = (int_64)429496729605
	*($17 + [16 align=4]) = (int_64)644245094406
	*($17 + [24 align=4]) = (int_64)1717986918407
	*($17 + [32 align=4]) = (int_64)858993459208
	$14 = ($17 + [40])
	*(($30 + [8])) = $14
	*($30) = $17
	*($30 + [4]) = $14
	CALL _ZN16activity_control12random_candyERNSt3__13mapIymNS0_4lessIyEENS0_9allocatorINS0_4pairIKymEEEEEERNS0_6vectorINS5_IiiEENS4_ISC_EEEER10random_valiPm($0, ($30 + [248]), $30, ($30 + [152]), $4, ($30 + [160]))
	$17 = *($30)
	if ( ($17 == 0) ){ goto $label$248 }
	$31 = [358]
	goto $label$5 
	
.LABEL $label$616
	*($30 + [4]) = $17
	CALL $867($17)
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$259 }
	goto $label$260 
	
.LABEL $label$615
	*($24) = (*($24) + [1])
	$27 = ((uint_64)((int_64)((int_64)*($30 + [152]) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*($30 + [152]) = $27
	$17 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$27 * (int_64)100) >> (uint_64)(int_64)31)
	*($30 + [156]) = $17)
	if ( ((uint_32)$17 > (uint_32)[2]) ){ goto $label$254 }
	$31 = [354]
	goto $label$5 
	
.LABEL $label$614
	*($30 + [172]) = (*($30 + [172]) + [1])
	$31 = [22]
	goto $label$5 
	
.LABEL $label$613
	if ( (*($16) == 0) ){ goto $label$253 }
	$31 = [23]
	goto $label$5 
	
.LABEL $label$612
	*(($17 = CALL $866([40]))) = (int_64)171798691842
	*($17 + [8 align=4]) = (int_64)85899345925
	*($17 + [16 align=4]) = (int_64)128849018886
	*($17 + [24 align=4]) = (int_64)343597383687
	*($17 + [32 align=4]) = (int_64)171798691848
	$14 = ($17 + [40])
	*(($30 + [8])) = $14
	*($30) = $17
	*($30 + [4]) = $14
	CALL _ZN16activity_control12random_candyERNSt3__13mapIymNS0_4lessIyEENS0_9allocatorINS0_4pairIKymEEEEEERNS0_6vectorINS5_IiiEENS4_ISC_EEEER10random_valiPm($0, ($30 + [248]), $30, ($30 + [152]), $4, ($30 + [160]))
	$17 = *($30)
	if ( ($17 == 0) ){ goto $label$252 }
	$31 = [24]
	goto $label$5 
	
.LABEL $label$611
	*($30 + [4]) = $17
	CALL $867($17)
	$31 = [25]
	goto $label$5 
	
.LABEL $label$610
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$265 }
	$31 = [26]
	goto $label$5 
	
.LABEL $label$609
	*($30 + [144]) = [0]
	*($30 + [136]) = (int_64)0
	$1 = [0]
	$24 = [0]
	$23 = (($3 + [-2001]) & [65535])
	if ( ((uint_32)$23 >= (uint_32)[4]) ){ goto $label$247 }
	$31 = [353]
	goto $label$5 
	
.LABEL $label$608
	$1 = uint_32([50594564] >> ($23 << [3]))
	$27 = ((int_64)(CASTING uint_64)(uint_32 $23) << (int_64)4)
	$24 = (CASTING uint_32)(uint_64 (uint_64)(int_64)566054819771123676 >> (uint_64)$27))
	$7 = (CASTING uint_32)(uint_64 (uint_64)(int_64)287953299288556544 >> (uint_64)$27))
	$31 = [27]
	goto $label$5 
	
.LABEL $label$607
	$23 = *($30 + [176])
	if ( ($23 == 0) ){ goto $label$246 }
	$31 = [28]
	goto $label$5 
	
.LABEL $label$606
	*($30 + [1]) = $1
	*($30) = [4]
	*($30 + [2]) = $24
	*($30 + [4]) = $23
	CALL $61(($30 + [136]), $30)
	$31 = [29]
	goto $label$5 
	
.LABEL $label$605
	$24 = *($30 + [172])
	if ( ($24 == 0) ){ goto $label$245 }
	$31 = [30]
	goto $label$5 
	
.LABEL $label$604
	*($30 + [1]) = $1
	*($30) = [3]
	*($30 + [2]) = $7
	*($30 + [4]) = $24
	$1 = *($30 + [140])
	if ( ((uint_32)$1 >= (uint_32)*((($30 + [136]) + [8]))) ){ goto $label$244 }
	$31 = [352]
	goto $label$5 
	
.LABEL $label$603
	*($1) = *($30)
	*($30 + [140]) = (*($30 + [140]) + [8])
	goto $label$243 
	
.LABEL $label$602
	CALL $61(($30 + [136]), $30)
	$31 = [32]
	goto $label$5 
	
.LABEL $label$601
	$24 = (($30 + [160]) | [4])
	$1 = [254]
	$17 = (($30 + [136]) + [8])
	$31 = [33]
	goto $label$5 
	
.LABEL $label$600
	if ( (($1 & [255]) <= [2]) ){ goto $label$241 }
	$31 = [34]
	goto $label$5 
	
.LABEL $label$599
	$23 = *($24)
	if ( ($23 == 0) ){ goto $label$240 }
	$31 = [35]
	goto $label$5 
	
.LABEL $label$598
	*($30 + [1]) = [4]
	*($30) = ($1 + [-253])
	*($30 + [2]) = [0]
	*($30 + [4]) = $23
	$23 = *($30 + [140])
	if ( ((uint_32)$23 >= (uint_32)*($17)) ){ goto $label$239 }
	$31 = [351]
	goto $label$5 
	
.LABEL $label$597
	*($23) = *($30)
	*($30 + [140]) = (*($30 + [140]) + [8])
	goto $label$238 
	
.LABEL $label$596
	CALL $61(($30 + [136]), $30)
	$31 = [37]
	goto $label$5 
	
.LABEL $label$595
	$24 = ($24 + [4])
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[262]) ){ goto $label$242 }
	$31 = [38]
	goto $label$5 
	
.LABEL $label$594
	$7 = *($30 + [140])
	$15 = *($30 + [136])
	if ( ((int_32)$15 == (int_32)$7) ){ goto $label$237 }
	$31 = [39]
	goto $label$5 
	
.LABEL $label$593
	$14 = ($30 + [32])
	$13 = (($30 + [56]) | [1])
	$12 = (($30 + [56]) | [1])
	$11 = (($30 + [56]) | [1])
	$10 = (($30 + [56]) | [1])
	$8 = (($30 + [56]) | [1])
	$5 = (($30 + [72]) + [16])
	$9 = (($30 + [72]) + [24])
	$20 = ($9 + [4])
	$21 = ($30 + [28])
	$22 = ($30 + [20])
	$18 = ($0 + [100])
	$19 = ($30 + [40])
	$31 = [40]
	goto $label$5 
	
.LABEL $label$592
	*($30 + [128]) = (int_64)0
	$1 = (*($15) + [-2])
	if ( ((uint_32)$1 > (uint_32)[6]) ){ goto $label$235 }
	$31 = [41]
	goto $label$5 
	
.LABEL $label$591
	goto $label$672 
	
.LABEL $label$672
	$31 = [295]
	goto $label$5 
	
.LABEL $label$590
	$27 = (int_64)0
	$29 = (int_64)59
	$1 = [1088]
	$25 = (int_64)0
	$31 = [296]
	goto $label$5 
	
.LABEL $label$589
	$26 = (int_64)0
	if ( ((uint_64)$27 > (uint_64)(int_64)11) ){ goto $label$63 }
	$31 = [347]
	goto $label$5 
	
.LABEL $label$588
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$31 = [350]
	goto $label$5 
	
.LABEL $label$587
	$24 = ($24 + [165])
	goto $label$30 
	
.LABEL $label$586
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [349]
	goto $label$5 
	
.LABEL $label$585
	$26 = ((int_64)(CASTING uint_64)(uint_32 ($24 & [31])) << (int_64)((int_64)$29 & (int_64)4294967295))
	$31 = [297]
	goto $label$5 
	
.LABEL $label$584
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$26 | (int_64)$25)
	$29 = ((int_64)$29 + (int_64)-5)
	if ( ((int_64)$29 != (int_64)-6) ){ goto $label$64 }
	$31 = [298]
	goto $label$5 
	
.LABEL $label$583
	$27 = (int_64)0
	$26 = (int_64)59
	$1 = [1104]
	$28 = (int_64)0
	$31 = [299]
	goto $label$5 
	
.LABEL $label$582
	if ( ((uint_64)$27 > (uint_64)(int_64)4) ){ goto $label$61 }
	$31 = [343]
	goto $label$5 
	
.LABEL $label$581
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$31 = [346]
	goto $label$5 
	
.LABEL $label$580
	$24 = ($24 + [165])
	goto $label$32 
	
.LABEL $label$579
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$578
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [345]
	goto $label$5 
	
.LABEL $label$577
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $24) << (int_64)56) >> (int_64)56)
	$31 = [342]
	goto $label$5 
	
.LABEL $label$576
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	$31 = [301]
	goto $label$5 
	
.LABEL $label$575
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$28 = ((int_64)$29 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$62 }
	$31 = [302]
	goto $label$5 
	
.LABEL $label$574
	*((($30 + [112]) + [8])) = $28
	*($30 + [112]) = $25
	$27 = (int_64)0
	$29 = (int_64)59
	$1 = [1088]
	$25 = (int_64)0
	$31 = [303]
	goto $label$5 
	
.LABEL $label$573
	$26 = (int_64)0
	if ( ((uint_64)$27 > (uint_64)(int_64)11) ){ goto $label$57 }
	$31 = [338]
	goto $label$5 
	
.LABEL $label$572
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$31 = [341]
	goto $label$5 
	
.LABEL $label$571
	$24 = ($24 + [165])
	goto $label$34 
	
.LABEL $label$570
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [340]
	goto $label$5 
	
.LABEL $label$569
	$26 = ((int_64)(CASTING uint_64)(uint_32 ($24 & [31])) << (int_64)((int_64)$29 & (int_64)4294967295))
	$31 = [304]
	goto $label$5 
	
.LABEL $label$568
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$26 | (int_64)$25)
	$29 = ((int_64)$29 + (int_64)-5)
	if ( ((int_64)$29 != (int_64)-6) ){ goto $label$58 }
	$31 = [305]
	goto $label$5 
	
.LABEL $label$567
	$27 = (int_64)0
	$26 = (int_64)59
	$1 = [1104]
	$28 = (int_64)0
	$31 = [306]
	goto $label$5 
	
.LABEL $label$566
	if ( ((uint_64)$27 > (uint_64)(int_64)4) ){ goto $label$55 }
	$31 = [334]
	goto $label$5 
	
.LABEL $label$565
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$31 = [337]
	goto $label$5 
	
.LABEL $label$564
	$24 = ($24 + [165])
	goto $label$36 
	
.LABEL $label$563
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$562
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [336]
	goto $label$5 
	
.LABEL $label$561
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $24) << (int_64)56) >> (int_64)56)
	$31 = [333]
	goto $label$5 
	
.LABEL $label$560
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	$31 = [308]
	goto $label$5 
	
.LABEL $label$559
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$28 = ((int_64)$29 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$56 }
	$31 = [309]
	goto $label$5 
	
.LABEL $label$558
	$1 = *($15 + [4])
	CALL eosio_assert([1], [1248])
	$29 = (CASTING uint_64)(uint_32 ((int_32)$1 * (int_32)[10000]))
	$27 = (int_64)5524308
	$1 = [0]
	$31 = [310]
	goto $label$5 
	
.LABEL $label$557
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$49 }
	$31 = [329]
	goto $label$5 
	
.LABEL $label$556
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$38 }
	$31 = [331]
	goto $label$5 
	
.LABEL $label$555
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$50 }
	$31 = [332]
	goto $label$5 
	
.LABEL $label$554
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$39 }
	$31 = [330]
	goto $label$5 
	
.LABEL $label$553
	$24 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$552
	$1 = *($15 + [4])
	if ( ($1 == 0) ){ goto $label$67 }
	$31 = [293]
	goto $label$5 
	
.LABEL $label$551
	$24 = *($18)
	$23 = *($15 + [2])
	$31 = [294]
	goto $label$5 
	
.LABEL $label$550
	CALL $67($24, $2, $23, [5])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$65 }
	goto $label$66 
	
.LABEL $label$549
	CALL _ZN16activity_control11add_actpropEN5eosio4nameEii($0, $2, *($15 + [2]), *($15 + [4]))
	$31 = [291]
	goto $label$5 
	
.LABEL $label$548
	$27 = *($30 + [128])
	if ( ((int_64)($27 == 0) == 0) ){ goto $label$200 }
	goto $label$201 
	
.LABEL $label$547
	$28 = *($0)
	$27 = (int_64)0
	$26 = (int_64)59
	$1 = [1152]
	$25 = (int_64)0
	$31 = [242]
	goto $label$5 
	
.LABEL $label$546
	if ( ((uint_64)$27 > (uint_64)(int_64)5) ){ goto $label$97 }
	$31 = [286]
	goto $label$5 
	
.LABEL $label$545
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$69 }
	$31 = [289]
	goto $label$5 
	
.LABEL $label$544
	$24 = ($24 + [165])
	goto $label$68 
	
.LABEL $label$543
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$96 }
	goto $label$95 
	
.LABEL $label$542
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [288]
	goto $label$5 
	
.LABEL $label$541
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $24) << (int_64)56) >> (int_64)56)
	$31 = [285]
	goto $label$5 
	
.LABEL $label$540
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	$31 = [244]
	goto $label$5 
	
.LABEL $label$539
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$29 | (int_64)$25)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$98 }
	$31 = [245]
	goto $label$5 
	
.LABEL $label$538
	*((($30 + [112]) + [8])) = $25
	*($30 + [112]) = $28
	$27 = (int_64)0
	$29 = (int_64)59
	$1 = [1168]
	$25 = (int_64)0
	$31 = [246]
	goto $label$5 
	
.LABEL $label$537
	$26 = (int_64)0
	if ( ((uint_64)$27 > (uint_64)(int_64)11) ){ goto $label$93 }
	$31 = [281]
	goto $label$5 
	
.LABEL $label$536
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$31 = [284]
	goto $label$5 
	
.LABEL $label$535
	$24 = ($24 + [165])
	goto $label$70 
	
.LABEL $label$534
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [283]
	goto $label$5 
	
.LABEL $label$533
	$26 = ((int_64)(CASTING uint_64)(uint_32 ($24 & [31])) << (int_64)((int_64)$29 & (int_64)4294967295))
	$31 = [247]
	goto $label$5 
	
.LABEL $label$532
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$26 | (int_64)$25)
	$29 = ((int_64)$29 + (int_64)-5)
	if ( ((int_64)$29 != (int_64)-6) ){ goto $label$94 }
	$31 = [248]
	goto $label$5 
	
.LABEL $label$531
	$27 = (int_64)0
	$26 = (int_64)59
	$1 = [1184]
	$28 = (int_64)0
	$31 = [249]
	goto $label$5 
	
.LABEL $label$530
	if ( ((uint_64)$27 > (uint_64)(int_64)7) ){ goto $label$91 }
	$31 = [277]
	goto $label$5 
	
.LABEL $label$529
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$73 }
	$31 = [280]
	goto $label$5 
	
.LABEL $label$528
	$24 = ($24 + [165])
	goto $label$72 
	
.LABEL $label$527
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$526
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [279]
	goto $label$5 
	
.LABEL $label$525
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $24) << (int_64)56) >> (int_64)56)
	$31 = [276]
	goto $label$5 
	
.LABEL $label$524
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	$31 = [251]
	goto $label$5 
	
.LABEL $label$523
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$28 = ((int_64)$29 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$92 }
	$31 = [252]
	goto $label$5 
	
.LABEL $label$522
	$1 = *($15 + [4])
	CALL eosio_assert([1], [1248])
	$29 = (CASTING uint_64)(uint_32 ((int_32)$1 * (int_32)[10000]))
	$27 = (int_64)5525588
	$1 = [0]
	$31 = [253]
	goto $label$5 
	
.LABEL $label$521
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$85 }
	$31 = [272]
	goto $label$5 
	
.LABEL $label$520
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$74 }
	$31 = [274]
	goto $label$5 
	
.LABEL $label$519
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$86 }
	$31 = [275]
	goto $label$5 
	
.LABEL $label$518
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$75 }
	$31 = [273]
	goto $label$5 
	
.LABEL $label$517
	$24 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$88 }
	goto $label$87 
	
.LABEL $label$516
	$28 = *($0)
	$27 = (int_64)0
	$26 = (int_64)59
	$1 = [1152]
	$25 = (int_64)0
	$31 = [193]
	goto $label$5 
	
.LABEL $label$515
	if ( ((uint_64)$27 > (uint_64)(int_64)5) ){ goto $label$128 }
	$31 = [237]
	goto $label$5 
	
.LABEL $label$514
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$100 }
	$31 = [240]
	goto $label$5 
	
.LABEL $label$513
	$24 = ($24 + [165])
	goto $label$99 
	
.LABEL $label$512
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$127 }
	goto $label$126 
	
.LABEL $label$511
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [239]
	goto $label$5 
	
.LABEL $label$510
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $24) << (int_64)56) >> (int_64)56)
	$31 = [236]
	goto $label$5 
	
.LABEL $label$509
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	$31 = [195]
	goto $label$5 
	
.LABEL $label$508
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$29 | (int_64)$25)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$129 }
	$31 = [196]
	goto $label$5 
	
.LABEL $label$507
	*((($30 + [112]) + [8])) = $25
	*($30 + [112]) = $28
	$27 = (int_64)0
	$29 = (int_64)59
	$1 = [1200]
	$25 = (int_64)0
	$31 = [197]
	goto $label$5 
	
.LABEL $label$506
	$26 = (int_64)0
	if ( ((uint_64)$27 > (uint_64)(int_64)11) ){ goto $label$124 }
	$31 = [232]
	goto $label$5 
	
.LABEL $label$505
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$102 }
	$31 = [235]
	goto $label$5 
	
.LABEL $label$504
	$24 = ($24 + [165])
	goto $label$101 
	
.LABEL $label$503
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [234]
	goto $label$5 
	
.LABEL $label$502
	$26 = ((int_64)(CASTING uint_64)(uint_32 ($24 & [31])) << (int_64)((int_64)$29 & (int_64)4294967295))
	$31 = [198]
	goto $label$5 
	
.LABEL $label$501
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$26 | (int_64)$25)
	$29 = ((int_64)$29 + (int_64)-5)
	if ( ((int_64)$29 != (int_64)-6) ){ goto $label$125 }
	$31 = [199]
	goto $label$5 
	
.LABEL $label$500
	$27 = (int_64)0
	$26 = (int_64)59
	$1 = [1184]
	$28 = (int_64)0
	$31 = [200]
	goto $label$5 
	
.LABEL $label$499
	if ( ((uint_64)$27 > (uint_64)(int_64)7) ){ goto $label$122 }
	$31 = [228]
	goto $label$5 
	
.LABEL $label$498
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$104 }
	$31 = [231]
	goto $label$5 
	
.LABEL $label$497
	$24 = ($24 + [165])
	goto $label$103 
	
.LABEL $label$496
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$121 }
	goto $label$120 
	
.LABEL $label$495
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [230]
	goto $label$5 
	
.LABEL $label$494
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $24) << (int_64)56) >> (int_64)56)
	$31 = [227]
	goto $label$5 
	
.LABEL $label$493
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	$31 = [202]
	goto $label$5 
	
.LABEL $label$492
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$28 = ((int_64)$29 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$123 }
	$31 = [203]
	goto $label$5 
	
.LABEL $label$491
	$1 = *($15 + [4])
	CALL eosio_assert([1], [1248])
	$29 = (CASTING uint_64)(uint_32 ((int_32)$1 * (int_32)[10000]))
	$27 = (int_64)5850443
	$1 = [0]
	$31 = [204]
	goto $label$5 
	
.LABEL $label$490
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$116 }
	$31 = [223]
	goto $label$5 
	
.LABEL $label$489
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$105 }
	$31 = [225]
	goto $label$5 
	
.LABEL $label$488
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$117 }
	$31 = [226]
	goto $label$5 
	
.LABEL $label$487
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$106 }
	$31 = [224]
	goto $label$5 
	
.LABEL $label$486
	$24 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$119 }
	goto $label$118 
	
.LABEL $label$485
	$28 = *($0)
	$27 = (int_64)0
	$26 = (int_64)59
	$1 = [1152]
	$25 = (int_64)0
	$31 = [144]
	goto $label$5 
	
.LABEL $label$484
	if ( ((uint_64)$27 > (uint_64)(int_64)5) ){ goto $label$159 }
	$31 = [188]
	goto $label$5 
	
.LABEL $label$483
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$131 }
	$31 = [191]
	goto $label$5 
	
.LABEL $label$482
	$24 = ($24 + [165])
	goto $label$130 
	
.LABEL $label$481
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$158 }
	goto $label$157 
	
.LABEL $label$480
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [190]
	goto $label$5 
	
.LABEL $label$479
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $24) << (int_64)56) >> (int_64)56)
	$31 = [187]
	goto $label$5 
	
.LABEL $label$478
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	$31 = [146]
	goto $label$5 
	
.LABEL $label$477
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$29 | (int_64)$25)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$160 }
	$31 = [147]
	goto $label$5 
	
.LABEL $label$476
	*((($30 + [112]) + [8])) = $25
	*($30 + [112]) = $28
	$27 = (int_64)0
	$29 = (int_64)59
	$1 = [1216]
	$25 = (int_64)0
	$31 = [148]
	goto $label$5 
	
.LABEL $label$475
	$26 = (int_64)0
	if ( ((uint_64)$27 > (uint_64)(int_64)11) ){ goto $label$155 }
	$31 = [183]
	goto $label$5 
	
.LABEL $label$474
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$133 }
	$31 = [186]
	goto $label$5 
	
.LABEL $label$473
	$24 = ($24 + [165])
	goto $label$132 
	
.LABEL $label$472
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [185]
	goto $label$5 
	
.LABEL $label$471
	$26 = ((int_64)(CASTING uint_64)(uint_32 ($24 & [31])) << (int_64)((int_64)$29 & (int_64)4294967295))
	$31 = [149]
	goto $label$5 
	
.LABEL $label$470
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$26 | (int_64)$25)
	$29 = ((int_64)$29 + (int_64)-5)
	if ( ((int_64)$29 != (int_64)-6) ){ goto $label$156 }
	$31 = [150]
	goto $label$5 
	
.LABEL $label$469
	$27 = (int_64)0
	$26 = (int_64)59
	$1 = [1184]
	$28 = (int_64)0
	$31 = [151]
	goto $label$5 
	
.LABEL $label$468
	if ( ((uint_64)$27 > (uint_64)(int_64)7) ){ goto $label$153 }
	$31 = [179]
	goto $label$5 
	
.LABEL $label$467
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$135 }
	$31 = [182]
	goto $label$5 
	
.LABEL $label$466
	$24 = ($24 + [165])
	goto $label$134 
	
.LABEL $label$465
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$152 }
	goto $label$151 
	
.LABEL $label$464
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [181]
	goto $label$5 
	
.LABEL $label$463
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $24) << (int_64)56) >> (int_64)56)
	$31 = [178]
	goto $label$5 
	
.LABEL $label$462
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	$31 = [153]
	goto $label$5 
	
.LABEL $label$461
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$28 = ((int_64)$29 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$154 }
	$31 = [154]
	goto $label$5 
	
.LABEL $label$460
	$1 = *($15 + [4])
	CALL eosio_assert([1], [1248])
	$29 = (CASTING uint_64)(uint_32 ((int_32)$1 * (int_32)[10000]))
	$27 = (int_64)17228
	$1 = [0]
	$31 = [155]
	goto $label$5 
	
.LABEL $label$459
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$147 }
	$31 = [174]
	goto $label$5 
	
.LABEL $label$458
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$136 }
	$31 = [176]
	goto $label$5 
	
.LABEL $label$457
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$148 }
	$31 = [177]
	goto $label$5 
	
.LABEL $label$456
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$137 }
	$31 = [175]
	goto $label$5 
	
.LABEL $label$455
	$24 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$150 }
	goto $label$149 
	
.LABEL $label$454
	$28 = *($0)
	$27 = (int_64)0
	$26 = (int_64)59
	$1 = [1152]
	$25 = (int_64)0
	$31 = [43]
	goto $label$5 
	
.LABEL $label$453
	if ( ((uint_64)$27 > (uint_64)(int_64)5) ){ goto $label$227 }
	$31 = [139]
	goto $label$5 
	
.LABEL $label$452
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$162 }
	$31 = [142]
	goto $label$5 
	
.LABEL $label$451
	$24 = ($24 + [165])
	goto $label$161 
	
.LABEL $label$450
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$226 }
	goto $label$225 
	
.LABEL $label$449
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [141]
	goto $label$5 
	
.LABEL $label$448
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $24) << (int_64)56) >> (int_64)56)
	$31 = [138]
	goto $label$5 
	
.LABEL $label$447
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	$31 = [45]
	goto $label$5 
	
.LABEL $label$446
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$29 | (int_64)$25)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$228 }
	$31 = [46]
	goto $label$5 
	
.LABEL $label$445
	*((($30 + [112]) + [8])) = $25
	*($30 + [112]) = $28
	$27 = (int_64)0
	$29 = (int_64)59
	$1 = [1232]
	$25 = (int_64)0
	$31 = [47]
	goto $label$5 
	
.LABEL $label$444
	$26 = (int_64)0
	if ( ((uint_64)$27 > (uint_64)(int_64)11) ){ goto $label$223 }
	$31 = [134]
	goto $label$5 
	
.LABEL $label$443
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$164 }
	$31 = [137]
	goto $label$5 
	
.LABEL $label$442
	$24 = ($24 + [165])
	goto $label$163 
	
.LABEL $label$441
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [136]
	goto $label$5 
	
.LABEL $label$440
	$26 = ((int_64)(CASTING uint_64)(uint_32 ($24 & [31])) << (int_64)((int_64)$29 & (int_64)4294967295))
	$31 = [48]
	goto $label$5 
	
.LABEL $label$439
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$26 | (int_64)$25)
	$29 = ((int_64)$29 + (int_64)-5)
	if ( ((int_64)$29 != (int_64)-6) ){ goto $label$224 }
	$31 = [49]
	goto $label$5 
	
.LABEL $label$438
	$27 = (int_64)0
	$26 = (int_64)59
	$1 = [1184]
	$28 = (int_64)0
	$31 = [50]
	goto $label$5 
	
.LABEL $label$437
	if ( ((uint_64)$27 > (uint_64)(int_64)7) ){ goto $label$221 }
	$31 = [130]
	goto $label$5 
	
.LABEL $label$436
	$24 = *($1)
	if ( ((uint_32)(($24 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$166 }
	$31 = [133]
	goto $label$5 
	
.LABEL $label$435
	$24 = ($24 + [165])
	goto $label$165 
	
.LABEL $label$434
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$220 }
	goto $label$219 
	
.LABEL $label$433
	$24 = ( ($24 + [208]) ? [0] : ((($24 + [-49]) & [255]) <= [5]) )
	$31 = [132]
	goto $label$5 
	
.LABEL $label$432
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $24) << (int_64)56) >> (int_64)56)
	$31 = [129]
	goto $label$5 
	
.LABEL $label$431
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	$31 = [52]
	goto $label$5 
	
.LABEL $label$430
	$1 = ($1 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$28 = ((int_64)$29 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$222 }
	$31 = [53]
	goto $label$5 
	
.LABEL $label$429
	$1 = *($15 + [4])
	CALL eosio_assert([1], [1248])
	$29 = (CASTING uint_64)(uint_32 ((int_32)$1 * (int_32)[10000]))
	$27 = (int_64)5784654
	$1 = [0]
	$31 = [54]
	goto $label$5 
	
.LABEL $label$428
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$215 }
	$31 = [125]
	goto $label$5 
	
.LABEL $label$427
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$167 }
	$31 = [127]
	goto $label$5 
	
.LABEL $label$426
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$216 }
	$31 = [128]
	goto $label$5 
	
.LABEL $label$425
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$168 }
	$31 = [126]
	goto $label$5 
	
.LABEL $label$424
	$24 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$218 }
	goto $label$217 
	
.LABEL $label$423
	$24 = [0]
	$31 = [312]
	goto $label$5 
	
.LABEL $label$422
	CALL eosio_assert($24, [1120])
	*(($24 = (($30 + [56]) + [8]))) = [0]
	*($30 + [56]) = (int_64)0
	$1 = CALL strlen([816])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$48 }
	$31 = [313]
	goto $label$5 
	
.LABEL $label$421
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$47 }
	$31 = [327]
	goto $label$5 
	
.LABEL $label$420
	*($30 + [56]) = ($1 << [1])
	$23 = $8
	if ( $1 ){ goto $label$45 }
	goto $label$46 
	
.LABEL $label$419
	$24 = [0]
	$31 = [255]
	goto $label$5 
	
.LABEL $label$418
	CALL eosio_assert($24, [1120])
	*(($24 = (($30 + [56]) + [8]))) = [0]
	*($30 + [56]) = (int_64)0
	$1 = CALL strlen([816])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$84 }
	$31 = [256]
	goto $label$5 
	
.LABEL $label$417
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$83 }
	$31 = [270]
	goto $label$5 
	
.LABEL $label$416
	*($30 + [56]) = ($1 << [1])
	$23 = $10
	if ( $1 ){ goto $label$81 }
	goto $label$82 
	
.LABEL $label$415
	$24 = [0]
	$31 = [206]
	goto $label$5 
	
.LABEL $label$414
	CALL eosio_assert($24, [1120])
	*(($24 = (($30 + [56]) + [8]))) = [0]
	*($30 + [56]) = (int_64)0
	$1 = CALL strlen([816])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$115 }
	$31 = [207]
	goto $label$5 
	
.LABEL $label$413
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$114 }
	$31 = [221]
	goto $label$5 
	
.LABEL $label$412
	*($30 + [56]) = ($1 << [1])
	$23 = $11
	if ( $1 ){ goto $label$112 }
	goto $label$113 
	
.LABEL $label$411
	$24 = [0]
	$31 = [157]
	goto $label$5 
	
.LABEL $label$410
	CALL eosio_assert($24, [1120])
	*(($24 = (($30 + [56]) + [8]))) = [0]
	*($30 + [56]) = (int_64)0
	$1 = CALL strlen([816])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$146 }
	$31 = [158]
	goto $label$5 
	
.LABEL $label$409
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$145 }
	$31 = [172]
	goto $label$5 
	
.LABEL $label$408
	*($30 + [56]) = ($1 << [1])
	$23 = $12
	if ( $1 ){ goto $label$143 }
	goto $label$144 
	
.LABEL $label$407
	$24 = [0]
	$31 = [56]
	goto $label$5 
	
.LABEL $label$406
	CALL eosio_assert($24, [1120])
	*(($24 = (($30 + [56]) + [8]))) = [0]
	*($30 + [56]) = (int_64)0
	$1 = CALL strlen([816])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$214 }
	$31 = [57]
	goto $label$5 
	
.LABEL $label$405
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$213 }
	$31 = [123]
	goto $label$5 
	
.LABEL $label$404
	*($30 + [56]) = ($1 << [1])
	$23 = $13
	if ( $1 ){ goto $label$211 }
	goto $label$212 
	
.LABEL $label$403
	$17 = (($1 + [16]) & [-16])
	$23 = CALL $866($17)
	*($24) = $23
	*($30 + [56]) = ($17 | [1])
	*($30 + [60]) = $1
	$31 = [315]
	goto $label$5 
	
.LABEL $label$402
	CALL memcpy($23, [816], $1)
	$31 = [316]
	goto $label$5 
	
.LABEL $label$401
	*(($23 + $1)) = [0]
	*((($30 + [72]) + [8])) = $29
	*($5) = (int_64)1414222852
	*($20) = *($30 + [60])
	*(($9 + [8])) = *($24)
	*($30 + [72]) = $2
	*($9) = *($30 + [56])
	*($30 + [56]) = [0]
	*($30 + [60]) = [0]
	*($24) = [0]
	CALL $65(($30 + [304]), CALL $64($30, ($30 + [112]), $25, $28, ($30 + [72])))
	$1 = *($30 + [304])
	CALL send_inline($1, (*($30 + [308]) - $1))
	$1 = *($30 + [304])
	if ( ($1 == 0) ){ goto $label$44 }
	$31 = [317]
	goto $label$5 
	
.LABEL $label$400
	*($30 + [308]) = $1
	CALL $867($1)
	$31 = [318]
	goto $label$5 
	
.LABEL $label$399
	$1 = *($21)
	if ( ($1 == 0) ){ goto $label$43 }
	$31 = [319]
	goto $label$5 
	
.LABEL $label$398
	*($14) = $1
	CALL $867($1)
	$31 = [320]
	goto $label$5 
	
.LABEL $label$397
	$1 = *(($30 + [16]))
	if ( ($1 == 0) ){ goto $label$42 }
	$31 = [321]
	goto $label$5 
	
.LABEL $label$396
	*($22) = $1
	CALL $867($1)
	$31 = [322]
	goto $label$5 
	
.LABEL $label$395
	if ( ((*($9) & [1]) == 0) ){ goto $label$41 }
	$31 = [323]
	goto $label$5 
	
.LABEL $label$394
	CALL $867(*((($30 + [72]) + [32])))
	$31 = [324]
	goto $label$5 
	
.LABEL $label$393
	if ( ((*($30 + [56]) & [1]) == 0) ){ goto $label$40 }
	$31 = [325]
	goto $label$5 
	
.LABEL $label$392
	CALL $867(*($24))
	$31 = [326]
	goto $label$5 
	
.LABEL $label$391
	$27 = (int_64)1
	goto $label$202 
	
.LABEL $label$390
	$17 = (($1 + [16]) & [-16])
	$23 = CALL $866($17)
	*($24) = $23
	*($30 + [56]) = ($17 | [1])
	*($30 + [60]) = $1
	$31 = [258]
	goto $label$5 
	
.LABEL $label$389
	CALL memcpy($23, [816], $1)
	$31 = [259]
	goto $label$5 
	
.LABEL $label$388
	*(($23 + $1)) = [0]
	*(($30 + [8])) = $2
	*(($30 + [16])) = $29
	*(($30 + [24])) = (int_64)1414550532
	*(($14 + [4])) = *($30 + [60])
	*(($14 + [8])) = *($24)
	*($30) = *($0)
	*($14) = *($30 + [56])
	*($30 + [56]) = [0]
	*($30 + [60]) = [0]
	*($24) = [0]
	CALL $65(($30 + [304]), CALL $66(($30 + [72]), ($30 + [112]), $25, $28, $30))
	$1 = *($30 + [304])
	CALL send_inline($1, (*($30 + [308]) - $1))
	$1 = *($30 + [304])
	if ( ($1 == 0) ){ goto $label$80 }
	$31 = [260]
	goto $label$5 
	
.LABEL $label$387
	*($30 + [308]) = $1
	CALL $867($1)
	$31 = [261]
	goto $label$5 
	
.LABEL $label$386
	$1 = *((($30 + [72]) + [28]))
	if ( ($1 == 0) ){ goto $label$79 }
	$31 = [262]
	goto $label$5 
	
.LABEL $label$385
	*((($30 + [72]) + [32])) = $1
	CALL $867($1)
	$31 = [263]
	goto $label$5 
	
.LABEL $label$384
	$1 = *($5)
	if ( ($1 == 0) ){ goto $label$78 }
	$31 = [264]
	goto $label$5 
	
.LABEL $label$383
	*((($30 + [72]) + [20])) = $1
	CALL $867($1)
	$31 = [265]
	goto $label$5 
	
.LABEL $label$382
	if ( ((*($14) & [1]) == 0) ){ goto $label$77 }
	$31 = [266]
	goto $label$5 
	
.LABEL $label$381
	CALL $867(*($19))
	$31 = [267]
	goto $label$5 
	
.LABEL $label$380
	if ( ((*($30 + [56]) & [1]) == 0) ){ goto $label$76 }
	$31 = [268]
	goto $label$5 
	
.LABEL $label$379
	CALL $867(*($24))
	$31 = [269]
	goto $label$5 
	
.LABEL $label$378
	$27 = (int_64)2
	goto $label$203 
	
.LABEL $label$377
	$17 = (($1 + [16]) & [-16])
	$23 = CALL $866($17)
	*($24) = $23
	*($30 + [56]) = ($17 | [1])
	*($30 + [60]) = $1
	$31 = [209]
	goto $label$5 
	
.LABEL $label$376
	CALL memcpy($23, [816], $1)
	$31 = [210]
	goto $label$5 
	
.LABEL $label$375
	*(($23 + $1)) = [0]
	*(($30 + [8])) = $2
	*(($30 + [16])) = $29
	*(($30 + [24])) = (int_64)1497713412
	*(($14 + [4])) = *($30 + [60])
	*(($14 + [8])) = *($24)
	*($30) = *($0)
	*($14) = *($30 + [56])
	*($30 + [56]) = [0]
	*($30 + [60]) = [0]
	*($24) = [0]
	CALL $65(($30 + [304]), CALL $66(($30 + [72]), ($30 + [112]), $25, $28, $30))
	$1 = *($30 + [304])
	CALL send_inline($1, (*($30 + [308]) - $1))
	$1 = *($30 + [304])
	if ( ($1 == 0) ){ goto $label$111 }
	$31 = [211]
	goto $label$5 
	
.LABEL $label$374
	*($30 + [308]) = $1
	CALL $867($1)
	$31 = [212]
	goto $label$5 
	
.LABEL $label$373
	$1 = *((($30 + [72]) + [28]))
	if ( ($1 == 0) ){ goto $label$110 }
	$31 = [213]
	goto $label$5 
	
.LABEL $label$372
	*((($30 + [72]) + [32])) = $1
	CALL $867($1)
	$31 = [214]
	goto $label$5 
	
.LABEL $label$371
	$1 = *($5)
	if ( ($1 == 0) ){ goto $label$109 }
	$31 = [215]
	goto $label$5 
	
.LABEL $label$370
	*((($30 + [72]) + [20])) = $1
	CALL $867($1)
	$31 = [216]
	goto $label$5 
	
.LABEL $label$369
	if ( ((*($14) & [1]) == 0) ){ goto $label$108 }
	$31 = [217]
	goto $label$5 
	
.LABEL $label$368
	CALL $867(*($19))
	$31 = [218]
	goto $label$5 
	
.LABEL $label$367
	if ( ((*($30 + [56]) & [1]) == 0) ){ goto $label$107 }
	$31 = [219]
	goto $label$5 
	
.LABEL $label$366
	CALL $867(*($24))
	$31 = [220]
	goto $label$5 
	
.LABEL $label$365
	$27 = (int_64)3
	goto $label$204 
	
.LABEL $label$364
	$17 = (($1 + [16]) & [-16])
	$23 = CALL $866($17)
	*($24) = $23
	*($30 + [56]) = ($17 | [1])
	*($30 + [60]) = $1
	$31 = [160]
	goto $label$5 
	
.LABEL $label$363
	CALL memcpy($23, [816], $1)
	$31 = [161]
	goto $label$5 
	
.LABEL $label$362
	*(($23 + $1)) = [0]
	*(($30 + [8])) = $2
	*(($30 + [16])) = $29
	*(($30 + [24])) = (int_64)4410372
	*(($14 + [4])) = *($30 + [60])
	*(($14 + [8])) = *($24)
	*($30) = *($0)
	*($14) = *($30 + [56])
	*($30 + [56]) = [0]
	*($30 + [60]) = [0]
	*($24) = [0]
	CALL $65(($30 + [304]), CALL $66(($30 + [72]), ($30 + [112]), $25, $28, $30))
	$1 = *($30 + [304])
	CALL send_inline($1, (*($30 + [308]) - $1))
	$1 = *($30 + [304])
	if ( ($1 == 0) ){ goto $label$142 }
	$31 = [162]
	goto $label$5 
	
.LABEL $label$361
	*($30 + [308]) = $1
	CALL $867($1)
	$31 = [163]
	goto $label$5 
	
.LABEL $label$360
	$1 = *((($30 + [72]) + [28]))
	if ( ($1 == 0) ){ goto $label$141 }
	$31 = [164]
	goto $label$5 
	
.LABEL $label$359
	*((($30 + [72]) + [32])) = $1
	CALL $867($1)
	$31 = [165]
	goto $label$5 
	
.LABEL $label$358
	$1 = *($5)
	if ( ($1 == 0) ){ goto $label$140 }
	$31 = [166]
	goto $label$5 
	
.LABEL $label$357
	*((($30 + [72]) + [20])) = $1
	CALL $867($1)
	$31 = [167]
	goto $label$5 
	
.LABEL $label$356
	if ( ((*($14) & [1]) == 0) ){ goto $label$139 }
	$31 = [168]
	goto $label$5 
	
.LABEL $label$355
	CALL $867(*($19))
	$31 = [169]
	goto $label$5 
	
.LABEL $label$354
	if ( ((*($30 + [56]) & [1]) == 0) ){ goto $label$138 }
	$31 = [170]
	goto $label$5 
	
.LABEL $label$353
	CALL $867(*($24))
	$31 = [171]
	goto $label$5 
	
.LABEL $label$352
	$27 = (int_64)4
	goto $label$205 
	
.LABEL $label$351
	$17 = (($1 + [16]) & [-16])
	$23 = CALL $866($17)
	*($24) = $23
	*($30 + [56]) = ($17 | [1])
	*($30 + [60]) = $1
	$31 = [59]
	goto $label$5 
	
.LABEL $label$350
	CALL memcpy($23, [816], $1)
	$31 = [60]
	goto $label$5 
	
.LABEL $label$349
	*(($23 + $1)) = [0]
	*(($30 + [8])) = $2
	*(($30 + [16])) = $29
	*(($30 + [24])) = (int_64)1480871428
	*(($14 + [4])) = *($30 + [60])
	*(($14 + [8])) = *($24)
	*($30) = *($0)
	*($14) = *($30 + [56])
	*($30 + [56]) = [0]
	*($30 + [60]) = [0]
	*($24) = [0]
	CALL $65(($30 + [304]), CALL $66(($30 + [72]), ($30 + [112]), $25, $28, $30))
	$1 = *($30 + [304])
	CALL send_inline($1, (*($30 + [308]) - $1))
	$1 = *($30 + [304])
	if ( ($1 == 0) ){ goto $label$210 }
	$31 = [61]
	goto $label$5 
	
.LABEL $label$348
	*($30 + [308]) = $1
	CALL $867($1)
	$31 = [62]
	goto $label$5 
	
.LABEL $label$347
	$1 = *((($30 + [72]) + [28]))
	if ( ($1 == 0) ){ goto $label$209 }
	$31 = [63]
	goto $label$5 
	
.LABEL $label$346
	*((($30 + [72]) + [32])) = $1
	CALL $867($1)
	$31 = [64]
	goto $label$5 
	
.LABEL $label$345
	$1 = *($5)
	if ( ($1 == 0) ){ goto $label$208 }
	$31 = [65]
	goto $label$5 
	
.LABEL $label$344
	*((($30 + [72]) + [20])) = $1
	CALL $867($1)
	$31 = [66]
	goto $label$5 
	
.LABEL $label$343
	if ( ((*($14) & [1]) == 0) ){ goto $label$207 }
	$31 = [67]
	goto $label$5 
	
.LABEL $label$342
	CALL $867(*($19))
	$31 = [68]
	goto $label$5 
	
.LABEL $label$341
	if ( ((*($30 + [56]) & [1]) == 0) ){ goto $label$206 }
	$31 = [69]
	goto $label$5 
	
.LABEL $label$340
	CALL $867(*($24))
	$31 = [70]
	goto $label$5 
	
.LABEL $label$339
	$27 = (int_64)5
	$31 = [71]
	goto $label$5 
	
.LABEL $label$338
	*($30 + [128]) = $27
	$31 = [72]
	goto $label$5 
	
.LABEL $label$337
	$16 = *((($30 + [208]) + [24]))
	$23 = *((($30 + [208]) + [28]))
	if ( ((int_32)$23 == (int_32)$16) ){ goto $label$199 }
	$31 = [73]
	goto $label$5 
	
.LABEL $label$336
	$1 = ($23 + [-24])
	$17 = ([0] - $16)
	$31 = [74]
	goto $label$5 
	
.LABEL $label$335
	if ( ((int_64)*(*($1)) == (int_64)$27) ){ goto $label$197 }
	$31 = [75]
	goto $label$5 
	
.LABEL $label$334
	$23 = $1
	$24 = ($1 + [-24])
	$1 = $24
	if ( ((int_32)($24 + $17) != (int_32)[-24]) ){ goto $label$198 }
	$31 = [76]
	goto $label$5 
	
.LABEL $label$333
	if ( ((int_32)$23 == (int_32)$16) ){ goto $label$196 }
	$31 = [77]
	goto $label$5 
	
.LABEL $label$332
	$1 = *(($23 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)($30 + [208])), [32])
	if ( $1 ){ goto $label$194 }
	goto $label$195 
	
.LABEL $label$331
	$1 = CALL db_find_i64(*($30 + [208]), *((($30 + [208]) + [8])), (int_64)4730643280948101120, $27)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$193 }
	$31 = [122]
	goto $label$5 
	
.LABEL $label$330
	$1 = CALL $59(($30 + [208]), $1)
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)($30 + [208])), [32])
	$31 = [78]
	goto $label$5 
	
.LABEL $label$329
	$27 = *($0)
	*($30 + [4]) = ($30 + [128])
	*($30) = ($30 + [248])
	CALL eosio_assert([1], [352])
	CALL $68(($30 + [208]), $1, $27, $30)
	$31 = [79]
	goto $label$5 
	
.LABEL $label$328
	$15 = ($15 + [8])
	if ( ((int_32)$15 != (int_32)$7) ){ goto $label$236 }
	$31 = [80]
	goto $label$5 
	
.LABEL $label$327
	CALL _ZN16activity_control13add_chestdropEN5eosio4nameERKNSt3__16vectorI12chestdroprowNS2_9allocatorIS4_EEEE($0, $2, ($30 + [136]))
	CALL _ZN16activity_control14remove_actpropEN5eosio4nameEmm($0, $2, $3, $4)
	*(($30 + [104])) = [0]
	*($30 + [88]) = (int_64)-1
	*($30 + [96]) = (int_64)0
	$27 = *($0)
	*($30 + [72]) = $27
	*($30 + [80]) = $27
	$1 = CALL db_find_i64($27, $27, (int_64)-7947854319410216960, $6)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$192 }
	$31 = [81]
	goto $label$5 
	
.LABEL $label$326
	$1 = CALL $63(($30 + [72]), $1)
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)($30 + [72])), [32])
	$29 = *($0)
	CALL eosio_assert([1], [352])
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)($30 + [72])), [400])
	CALL eosio_assert(((int_64)*($30 + [72]) == (int_64)CALL $fimport$16()), [448])
	*($1 + [16]) = (*($1 + [16]) + $4)
	*($1 + [20]) = (*($1 + [20]) + *($30 + [172]))
	$27 = *($1)
	CALL eosio_assert([1], [512])
	*($30 + [120]) = ($30 + [44])
	*($30 + [116]) = $30
	*($30 + [112]) = $30
	CALL $62(($30 + [112]), $1)
	CALL db_update_i64(*($1 + [52]), $29, $30, [44])
	$1 = ($30 + [88])
	if ( (uint_64)($27 <= *($1)) ){ goto $label$191 }
	$31 = [82]
	goto $label$5 
	
.LABEL $label$325
	*($1) = ( (int_64)-2 ? ((int_64)$27 + (int_64)1) : ((uint_64)$27 > (uint_64)(int_64)-3) )
	$23 = *($30 + [96])
	if ( $23 ){ goto $label$188 }
	goto $label$189 
	
.LABEL $label$324
	$29 = *($0)
	CALL eosio_assert(((int_64)*($30 + [72]) == (int_64)CALL $fimport$16()), [288])
	*(($1 = CALL $866([64])) + [8]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*($1 + [32]) = [0]
	*($1 + [40]) = (int_64)0
	*($1 + [48]) = ($30 + [72])
	*($1 + [16]) = $4
	*($1) = $6
	*($1 + [20]) = *($30 + [172])
	*($30 + [120]) = ($30 + [44])
	*($30 + [116]) = $30
	*($30 + [112]) = $30
	CALL $62(($30 + [112]), $1)
	$27 = *($1)
	$23 = CALL db_store_i64(*(($30 + [80])), (int_64)-7947854319410216960, $29, $27, $30, [44])
	*($1 + [52]) = $23
	$24 = ($30 + [88])
	if ( (uint_64)($27 <= *($24)) ){ goto $label$171 }
	$31 = [115]
	goto $label$5 
	
.LABEL $label$323
	*($24) = ( (int_64)-2 ? ((int_64)$27 + (int_64)1) : ((uint_64)$27 > (uint_64)(int_64)-3) )
	$31 = [116]
	goto $label$5 
	
.LABEL $label$322
	*($30 + [112]) = $1
	$27 = *($1)
	*($30) = $27
	*($30 + [304]) = $23
	$17 = ($30 + [100])
	$24 = *($17)
	if ( ((uint_32)$24 >= (uint_32)*(($30 + [104]))) ){ goto $label$170 }
	$31 = [120]
	goto $label$5 
	
.LABEL $label$321
	*($24 + [8]) = $27
	*($24 + [16]) = $23
	*($30 + [112]) = [0]
	*($24) = $1
	*($17) = ($24 + [24])
	goto $label$169 
	
.LABEL $label$320
	CALL $69(($30 + [96]), ($30 + [112]), $30, ($30 + [304]))
	$31 = [118]
	goto $label$5 
	
.LABEL $label$319
	$1 = *($30 + [112])
	*($30 + [112]) = [0]
	if ( ($1 == 0) ){ goto $label$172 }
	$31 = [119]
	goto $label$5 
	
.LABEL $label$318
	CALL $867($1)
	$31 = [113]
	goto $label$5 
	
.LABEL $label$317
	$23 = *($30 + [96])
	if ( ($23 == 0) ){ goto $label$190 }
	$31 = [83]
	goto $label$5 
	
.LABEL $label$316
	$17 = ($30 + [100])
	$1 = *($17)
	if ( ((int_32)$1 == (int_32)$23) ){ goto $label$187 }
	$31 = [84]
	goto $label$5 
	
.LABEL $label$315
	$31 = [85]
	goto $label$5 
	
.LABEL $label$314
	$1 = ($1 + [-24])
	$24 = *($1)
	*($1) = [0]
	if ( ($24 == 0) ){ goto $label$185 }
	$31 = [86]
	goto $label$5 
	
.LABEL $label$313
	CALL $867($24)
	$31 = [87]
	goto $label$5 
	
.LABEL $label$312
	if ( ((int_32)$23 != (int_32)$1) ){ goto $label$186 }
	$31 = [88]
	goto $label$5 
	
.LABEL $label$311
	$1 = *(($30 + [96]))
	goto $label$184 
	
.LABEL $label$310
	$1 = $23
	$31 = [89]
	goto $label$5 
	
.LABEL $label$309
	*($17) = $23
	CALL $867($1)
	$31 = [90]
	goto $label$5 
	
.LABEL $label$308
	$1 = *($30 + [136])
	if ( ($1 == 0) ){ goto $label$183 }
	$31 = [91]
	goto $label$5 
	
.LABEL $label$307
	*($30 + [140]) = $1
	CALL $867($1)
	$31 = [92]
	goto $label$5 
	
.LABEL $label$306
	$23 = *($30 + [232])
	if ( ($23 == 0) ){ goto $label$182 }
	$31 = [93]
	goto $label$5 
	
.LABEL $label$305
	$17 = ($30 + [236])
	$1 = *($17)
	if ( ((int_32)$1 == (int_32)$23) ){ goto $label$181 }
	$31 = [94]
	goto $label$5 
	
.LABEL $label$304
	$31 = [95]
	goto $label$5 
	
.LABEL $label$303
	$1 = ($1 + [-24])
	$24 = *($1)
	*($1) = [0]
	if ( ($24 == 0) ){ goto $label$179 }
	$31 = [96]
	goto $label$5 
	
.LABEL $label$302
	CALL $867($24)
	$31 = [97]
	goto $label$5 
	
.LABEL $label$301
	if ( ((int_32)$23 != (int_32)$1) ){ goto $label$180 }
	$31 = [98]
	goto $label$5 
	
.LABEL $label$300
	$1 = *(($30 + [232]))
	goto $label$178 
	
.LABEL $label$299
	$1 = $23
	$31 = [99]
	goto $label$5 
	
.LABEL $label$298
	*($17) = $23
	CALL $867($1)
	$31 = [100]
	goto $label$5 
	
.LABEL $label$297
	CALL $70(($30 + [248]), *($30 + [252]))
	$31 = [101]
	goto $label$5 
	
.LABEL $label$296
	$23 = *($30 + [288])
	if ( ($23 == 0) ){ goto $label$177 }
	$31 = [102]
	goto $label$5 
	
.LABEL $label$295
	$17 = ($30 + [292])
	$1 = *($17)
	if ( ((int_32)$1 == (int_32)$23) ){ goto $label$176 }
	$31 = [103]
	goto $label$5 
	
.LABEL $label$294
	$31 = [104]
	goto $label$5 
	
.LABEL $label$293
	$1 = ($1 + [-24])
	$24 = *($1)
	*($1) = [0]
	if ( ($24 == 0) ){ goto $label$174 }
	$31 = [105]
	goto $label$5 
	
.LABEL $label$292
	CALL $867($24)
	$31 = [106]
	goto $label$5 
	
.LABEL $label$291
	if ( ((int_32)$23 != (int_32)$1) ){ goto $label$175 }
	$31 = [107]
	goto $label$5 
	
.LABEL $label$290
	$1 = *(($30 + [288]))
	goto $label$173 
	
.LABEL $label$289
	$1 = $23
	$31 = [108]
	goto $label$5 
	
.LABEL $label$288
	*($17) = $23
	CALL $867($1)
	$31 = [109]
	goto $label$5 
	
.LABEL $label$287
	*([0] + [4]) = ($30 + [320])
	return [1]
	
.LABEL $label$286
	CALL $868(($30 + [56]))
	
.LABEL $label$285
	CALL $868(($30 + [56]))
	
.LABEL $label$284
	CALL $868(($30 + [56]))
	
.LABEL $label$283
	CALL $868(($30 + [56]))
	
.LABEL $label$282
	CALL $868(($30 + [56]))
	
.LABEL $label$281
	$31 = [1]
	goto $label$5 
	
.LABEL $label$280
	$31 = [0]
	goto $label$5 
	
.LABEL $label$279
	$31 = [8]
	goto $label$5 
	
.LABEL $label$278
	$31 = [0]
	goto $label$5 
	
.LABEL $label$277
	$31 = [3]
	goto $label$5 
	
.LABEL $label$276
	$31 = [2]
	goto $label$5 
	
.LABEL $label$275
	$31 = [16]
	goto $label$5 
	
.LABEL $label$274
	$31 = [5]
	goto $label$5 
	
.LABEL $label$273
	$31 = [6]
	goto $label$5 
	
.LABEL $label$272
	$31 = [7]
	goto $label$5 
	
.LABEL $label$271
	$31 = [7]
	goto $label$5 
	
.LABEL $label$270
	$31 = [10]
	goto $label$5 
	
.LABEL $label$269
	$31 = [15]
	goto $label$5 
	
.LABEL $label$268
	$31 = [13]
	goto $label$5 
	
.LABEL $label$267
	$31 = [13]
	goto $label$5 
	
.LABEL $label$266
	$31 = [26]
	goto $label$5 
	
.LABEL $label$265
	$31 = [19]
	goto $label$5 
	
.LABEL $label$264
	$31 = [26]
	goto $label$5 
	
.LABEL $label$263
	$31 = [19]
	goto $label$5 
	
.LABEL $label$262
	$31 = [26]
	goto $label$5 
	
.LABEL $label$261
	$31 = [19]
	goto $label$5 
	
.LABEL $label$260
	$31 = [26]
	goto $label$5 
	
.LABEL $label$259
	$31 = [19]
	goto $label$5 
	
.LABEL $label$258
	$31 = [25]
	goto $label$5 
	
.LABEL $label$257
	$31 = [360]
	goto $label$5 
	
.LABEL $label$256
	$31 = [355]
	goto $label$5 
	
.LABEL $label$255
	$31 = [21]
	goto $label$5 
	
.LABEL $label$254
	$31 = [22]
	goto $label$5 
	
.LABEL $label$253
	$31 = [25]
	goto $label$5 
	
.LABEL $label$252
	$31 = [25]
	goto $label$5 
	
.LABEL $label$251
	$31 = [25]
	goto $label$5 
	
.LABEL $label$250
	$31 = [25]
	goto $label$5 
	
.LABEL $label$249
	$31 = [25]
	goto $label$5 
	
.LABEL $label$248
	$31 = [25]
	goto $label$5 
	
.LABEL $label$247
	$31 = [27]
	goto $label$5 
	
.LABEL $label$246
	$31 = [29]
	goto $label$5 
	
.LABEL $label$245
	$31 = [32]
	goto $label$5 
	
.LABEL $label$244
	$31 = [31]
	goto $label$5 
	
.LABEL $label$243
	$31 = [32]
	goto $label$5 
	
.LABEL $label$242
	$31 = [33]
	goto $label$5 
	
.LABEL $label$241
	$31 = [37]
	goto $label$5 
	
.LABEL $label$240
	$31 = [37]
	goto $label$5 
	
.LABEL $label$239
	$31 = [36]
	goto $label$5 
	
.LABEL $label$238
	$31 = [37]
	goto $label$5 
	
.LABEL $label$237
	$31 = [80]
	goto $label$5 
	
.LABEL $label$236
	$31 = [40]
	goto $label$5 
	
.LABEL $label$235
	$31 = [79]
	goto $label$5 
	
.LABEL $label$234
	$31 = [292]
	goto $label$5 
	
.LABEL $label$233
	$31 = [290]
	goto $label$5 
	
.LABEL $label$232
	$31 = [241]
	goto $label$5 
	
.LABEL $label$231
	$31 = [192]
	goto $label$5 
	
.LABEL $label$230
	$31 = [143]
	goto $label$5 
	
.LABEL $label$229
	$31 = [42]
	goto $label$5 
	
.LABEL $label$228
	$31 = [43]
	goto $label$5 
	
.LABEL $label$227
	$31 = [44]
	goto $label$5 
	
.LABEL $label$226
	$31 = [138]
	goto $label$5 
	
.LABEL $label$225
	$31 = [45]
	goto $label$5 
	
.LABEL $label$224
	$31 = [47]
	goto $label$5 
	
.LABEL $label$223
	$31 = [48]
	goto $label$5 
	
.LABEL $label$222
	$31 = [50]
	goto $label$5 
	
.LABEL $label$221
	$31 = [51]
	goto $label$5 
	
.LABEL $label$220
	$31 = [129]
	goto $label$5 
	
.LABEL $label$219
	$31 = [52]
	goto $label$5 
	
.LABEL $label$218
	$31 = [54]
	goto $label$5 
	
.LABEL $label$217
	$31 = [56]
	goto $label$5 
	
.LABEL $label$216
	$31 = [55]
	goto $label$5 
	
.LABEL $label$215
	$31 = [55]
	goto $label$5 
	
.LABEL $label$214
	$31 = [124]
	goto $label$5 
	
.LABEL $label$213
	$31 = [58]
	goto $label$5 
	
.LABEL $label$212
	$31 = [60]
	goto $label$5 
	
.LABEL $label$211
	$31 = [59]
	goto $label$5 
	
.LABEL $label$210
	$31 = [62]
	goto $label$5 
	
.LABEL $label$209
	$31 = [64]
	goto $label$5 
	
.LABEL $label$208
	$31 = [66]
	goto $label$5 
	
.LABEL $label$207
	$31 = [68]
	goto $label$5 
	
.LABEL $label$206
	$31 = [70]
	goto $label$5 
	
.LABEL $label$205
	$31 = [71]
	goto $label$5 
	
.LABEL $label$204
	$31 = [71]
	goto $label$5 
	
.LABEL $label$203
	$31 = [71]
	goto $label$5 
	
.LABEL $label$202
	$31 = [71]
	goto $label$5 
	
.LABEL $label$201
	$31 = [79]
	goto $label$5 
	
.LABEL $label$200
	$31 = [72]
	goto $label$5 
	
.LABEL $label$199
	$31 = [76]
	goto $label$5 
	
.LABEL $label$198
	$31 = [74]
	goto $label$5 
	
.LABEL $label$197
	$31 = [76]
	goto $label$5 
	
.LABEL $label$196
	$31 = [121]
	goto $label$5 
	
.LABEL $label$195
	$31 = [79]
	goto $label$5 
	
.LABEL $label$194
	$31 = [78]
	goto $label$5 
	
.LABEL $label$193
	$31 = [79]
	goto $label$5 
	
.LABEL $label$192
	$31 = [114]
	goto $label$5 
	
.LABEL $label$191
	$31 = [113]
	goto $label$5 
	
.LABEL $label$190
	$31 = [90]
	goto $label$5 
	
.LABEL $label$189
	$31 = [90]
	goto $label$5 
	
.LABEL $label$188
	$31 = [83]
	goto $label$5 
	
.LABEL $label$187
	$31 = [112]
	goto $label$5 
	
.LABEL $label$186
	$31 = [85]
	goto $label$5 
	
.LABEL $label$185
	$31 = [87]
	goto $label$5 
	
.LABEL $label$184
	$31 = [89]
	goto $label$5 
	
.LABEL $label$183
	$31 = [92]
	goto $label$5 
	
.LABEL $label$182
	$31 = [100]
	goto $label$5 
	
.LABEL $label$181
	$31 = [111]
	goto $label$5 
	
.LABEL $label$180
	$31 = [95]
	goto $label$5 
	
.LABEL $label$179
	$31 = [97]
	goto $label$5 
	
.LABEL $label$178
	$31 = [99]
	goto $label$5 
	
.LABEL $label$177
	$31 = [109]
	goto $label$5 
	
.LABEL $label$176
	$31 = [110]
	goto $label$5 
	
.LABEL $label$175
	$31 = [104]
	goto $label$5 
	
.LABEL $label$174
	$31 = [106]
	goto $label$5 
	
.LABEL $label$173
	$31 = [108]
	goto $label$5 
	
.LABEL $label$172
	$31 = [113]
	goto $label$5 
	
.LABEL $label$171
	$31 = [116]
	goto $label$5 
	
.LABEL $label$170
	$31 = [117]
	goto $label$5 
	
.LABEL $label$169
	$31 = [118]
	goto $label$5 
	
.LABEL $label$168
	$31 = [127]
	goto $label$5 
	
.LABEL $label$167
	$31 = [126]
	goto $label$5 
	
.LABEL $label$166
	$31 = [131]
	goto $label$5 
	
.LABEL $label$165
	$31 = [132]
	goto $label$5 
	
.LABEL $label$164
	$31 = [135]
	goto $label$5 
	
.LABEL $label$163
	$31 = [136]
	goto $label$5 
	
.LABEL $label$162
	$31 = [140]
	goto $label$5 
	
.LABEL $label$161
	$31 = [141]
	goto $label$5 
	
.LABEL $label$160
	$31 = [144]
	goto $label$5 
	
.LABEL $label$159
	$31 = [145]
	goto $label$5 
	
.LABEL $label$158
	$31 = [187]
	goto $label$5 
	
.LABEL $label$157
	$31 = [146]
	goto $label$5 
	
.LABEL $label$156
	$31 = [148]
	goto $label$5 
	
.LABEL $label$155
	$31 = [149]
	goto $label$5 
	
.LABEL $label$154
	$31 = [151]
	goto $label$5 
	
.LABEL $label$153
	$31 = [152]
	goto $label$5 
	
.LABEL $label$152
	$31 = [178]
	goto $label$5 
	
.LABEL $label$151
	$31 = [153]
	goto $label$5 
	
.LABEL $label$150
	$31 = [155]
	goto $label$5 
	
.LABEL $label$149
	$31 = [157]
	goto $label$5 
	
.LABEL $label$148
	$31 = [156]
	goto $label$5 
	
.LABEL $label$147
	$31 = [156]
	goto $label$5 
	
.LABEL $label$146
	$31 = [173]
	goto $label$5 
	
.LABEL $label$145
	$31 = [159]
	goto $label$5 
	
.LABEL $label$144
	$31 = [161]
	goto $label$5 
	
.LABEL $label$143
	$31 = [160]
	goto $label$5 
	
.LABEL $label$142
	$31 = [163]
	goto $label$5 
	
.LABEL $label$141
	$31 = [165]
	goto $label$5 
	
.LABEL $label$140
	$31 = [167]
	goto $label$5 
	
.LABEL $label$139
	$31 = [169]
	goto $label$5 
	
.LABEL $label$138
	$31 = [171]
	goto $label$5 
	
.LABEL $label$137
	$31 = [176]
	goto $label$5 
	
.LABEL $label$136
	$31 = [175]
	goto $label$5 
	
.LABEL $label$135
	$31 = [180]
	goto $label$5 
	
.LABEL $label$134
	$31 = [181]
	goto $label$5 
	
.LABEL $label$133
	$31 = [184]
	goto $label$5 
	
.LABEL $label$132
	$31 = [185]
	goto $label$5 
	
.LABEL $label$131
	$31 = [189]
	goto $label$5 
	
.LABEL $label$130
	$31 = [190]
	goto $label$5 
	
.LABEL $label$129
	$31 = [193]
	goto $label$5 
	
.LABEL $label$128
	$31 = [194]
	goto $label$5 
	
.LABEL $label$127
	$31 = [236]
	goto $label$5 
	
.LABEL $label$126
	$31 = [195]
	goto $label$5 
	
.LABEL $label$125
	$31 = [197]
	goto $label$5 
	
.LABEL $label$124
	$31 = [198]
	goto $label$5 
	
.LABEL $label$123
	$31 = [200]
	goto $label$5 
	
.LABEL $label$122
	$31 = [201]
	goto $label$5 
	
.LABEL $label$121
	$31 = [227]
	goto $label$5 
	
.LABEL $label$120
	$31 = [202]
	goto $label$5 
	
.LABEL $label$119
	$31 = [204]
	goto $label$5 
	
.LABEL $label$118
	$31 = [206]
	goto $label$5 
	
.LABEL $label$117
	$31 = [205]
	goto $label$5 
	
.LABEL $label$116
	$31 = [205]
	goto $label$5 
	
.LABEL $label$115
	$31 = [222]
	goto $label$5 
	
.LABEL $label$114
	$31 = [208]
	goto $label$5 
	
.LABEL $label$113
	$31 = [210]
	goto $label$5 
	
.LABEL $label$112
	$31 = [209]
	goto $label$5 
	
.LABEL $label$111
	$31 = [212]
	goto $label$5 
	
.LABEL $label$110
	$31 = [214]
	goto $label$5 
	
.LABEL $label$109
	$31 = [216]
	goto $label$5 
	
.LABEL $label$108
	$31 = [218]
	goto $label$5 
	
.LABEL $label$107
	$31 = [220]
	goto $label$5 
	
.LABEL $label$106
	$31 = [225]
	goto $label$5 
	
.LABEL $label$105
	$31 = [224]
	goto $label$5 
	
.LABEL $label$104
	$31 = [229]
	goto $label$5 
	
.LABEL $label$103
	$31 = [230]
	goto $label$5 
	
.LABEL $label$102
	$31 = [233]
	goto $label$5 
	
.LABEL $label$101
	$31 = [234]
	goto $label$5 
	
.LABEL $label$100
	$31 = [238]
	goto $label$5 
	
.LABEL $label$99
	$31 = [239]
	goto $label$5 
	
.LABEL $label$98
	$31 = [242]
	goto $label$5 
	
.LABEL $label$97
	$31 = [243]
	goto $label$5 
	
.LABEL $label$96
	$31 = [285]
	goto $label$5 
	
.LABEL $label$95
	$31 = [244]
	goto $label$5 
	
.LABEL $label$94
	$31 = [246]
	goto $label$5 
	
.LABEL $label$93
	$31 = [247]
	goto $label$5 
	
.LABEL $label$92
	$31 = [249]
	goto $label$5 
	
.LABEL $label$91
	$31 = [250]
	goto $label$5 
	
.LABEL $label$90
	$31 = [276]
	goto $label$5 
	
.LABEL $label$89
	$31 = [251]
	goto $label$5 
	
.LABEL $label$88
	$31 = [253]
	goto $label$5 
	
.LABEL $label$87
	$31 = [255]
	goto $label$5 
	
.LABEL $label$86
	$31 = [254]
	goto $label$5 
	
.LABEL $label$85
	$31 = [254]
	goto $label$5 
	
.LABEL $label$84
	$31 = [271]
	goto $label$5 
	
.LABEL $label$83
	$31 = [257]
	goto $label$5 
	
.LABEL $label$82
	$31 = [259]
	goto $label$5 
	
.LABEL $label$81
	$31 = [258]
	goto $label$5 
	
.LABEL $label$80
	$31 = [261]
	goto $label$5 
	
.LABEL $label$79
	$31 = [263]
	goto $label$5 
	
.LABEL $label$78
	$31 = [265]
	goto $label$5 
	
.LABEL $label$77
	$31 = [267]
	goto $label$5 
	
.LABEL $label$76
	$31 = [269]
	goto $label$5 
	
.LABEL $label$75
	$31 = [274]
	goto $label$5 
	
.LABEL $label$74
	$31 = [273]
	goto $label$5 
	
.LABEL $label$73
	$31 = [278]
	goto $label$5 
	
.LABEL $label$72
	$31 = [279]
	goto $label$5 
	
.LABEL $label$71
	$31 = [282]
	goto $label$5 
	
.LABEL $label$70
	$31 = [283]
	goto $label$5 
	
.LABEL $label$69
	$31 = [287]
	goto $label$5 
	
.LABEL $label$68
	$31 = [288]
	goto $label$5 
	
.LABEL $label$67
	$31 = [291]
	goto $label$5 
	
.LABEL $label$66
	$31 = [291]
	goto $label$5 
	
.LABEL $label$65
	$31 = [294]
	goto $label$5 
	
.LABEL $label$64
	$31 = [296]
	goto $label$5 
	
.LABEL $label$63
	$31 = [297]
	goto $label$5 
	
.LABEL $label$62
	$31 = [299]
	goto $label$5 
	
.LABEL $label$61
	$31 = [300]
	goto $label$5 
	
.LABEL $label$60
	$31 = [342]
	goto $label$5 
	
.LABEL $label$59
	$31 = [301]
	goto $label$5 
	
.LABEL $label$58
	$31 = [303]
	goto $label$5 
	
.LABEL $label$57
	$31 = [304]
	goto $label$5 
	
.LABEL $label$56
	$31 = [306]
	goto $label$5 
	
.LABEL $label$55
	$31 = [307]
	goto $label$5 
	
.LABEL $label$54
	$31 = [333]
	goto $label$5 
	
.LABEL $label$53
	$31 = [308]
	goto $label$5 
	
.LABEL $label$52
	$31 = [310]
	goto $label$5 
	
.LABEL $label$51
	$31 = [312]
	goto $label$5 
	
.LABEL $label$50
	$31 = [311]
	goto $label$5 
	
.LABEL $label$49
	$31 = [311]
	goto $label$5 
	
.LABEL $label$48
	$31 = [328]
	goto $label$5 
	
.LABEL $label$47
	$31 = [314]
	goto $label$5 
	
.LABEL $label$46
	$31 = [316]
	goto $label$5 
	
.LABEL $label$45
	$31 = [315]
	goto $label$5 
	
.LABEL $label$44
	$31 = [318]
	goto $label$5 
	
.LABEL $label$43
	$31 = [320]
	goto $label$5 
	
.LABEL $label$42
	$31 = [322]
	goto $label$5 
	
.LABEL $label$41
	$31 = [324]
	goto $label$5 
	
.LABEL $label$40
	$31 = [326]
	goto $label$5 
	
.LABEL $label$39
	$31 = [331]
	goto $label$5 
	
.LABEL $label$38
	$31 = [330]
	goto $label$5 
	
.LABEL $label$37
	$31 = [335]
	goto $label$5 
	
.LABEL $label$36
	$31 = [336]
	goto $label$5 
	
.LABEL $label$35
	$31 = [339]
	goto $label$5 
	
.LABEL $label$34
	$31 = [340]
	goto $label$5 
	
.LABEL $label$33
	$31 = [344]
	goto $label$5 
	
.LABEL $label$32
	$31 = [345]
	goto $label$5 
	
.LABEL $label$31
	$31 = [348]
	goto $label$5 
	
.LABEL $label$30
	$31 = [349]
	goto $label$5 
	
.LABEL $label$29
	$31 = [356]
	goto $label$5 
	
.LABEL $label$28
	$31 = [361]
	goto $label$5 
	
.LABEL $label$27
	$31 = [372]
	goto $label$5 
	
.LABEL $label$26
	$31 = [372]
	goto $label$5 
	
.LABEL $label$25
	$31 = [372]
	goto $label$5 
	
.LABEL $label$24
	$31 = [372]
	goto $label$5 
	
.LABEL $label$23
	$31 = [372]
	goto $label$5 
	
.LABEL $label$22
	$31 = [372]
	goto $label$5 
	
.LABEL $label$21
	$31 = [372]
	goto $label$5 
	
.LABEL $label$20
	$31 = [372]
	goto $label$5 
	
.LABEL $label$19
	$31 = [372]
	goto $label$5 
	
.LABEL $label$18
	$31 = [372]
	goto $label$5 
	
.LABEL $label$17
	$31 = [375]
	goto $label$5 
	
.LABEL $label$16
	$31 = [387]
	goto $label$5 
	
.LABEL $label$15
	$31 = [387]
	goto $label$5 
	
.LABEL $label$14
	$31 = [387]
	goto $label$5 
	
.LABEL $label$13
	$31 = [387]
	goto $label$5 
	
.LABEL $label$12
	$31 = [387]
	goto $label$5 
	
.LABEL $label$11
	$31 = [387]
	goto $label$5 
	
.LABEL $label$10
	$31 = [387]
	goto $label$5 
	
.LABEL $label$9
	$31 = [387]
	goto $label$5 
	
.LABEL $label$8
	$31 = [387]
	goto $label$5 
	
.LABEL $label$7
	$31 = [387]
	goto $label$5 
	
.LABEL $label$6
	$31 = [387]
	goto $label$5 
	$31
	$15
	$1
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $453 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [176])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	$4 = CALL $866([152])
	$7 = CALL $470($4)
	*($4 + [136]) = $1
	*($9 + [168]) = (($9 + [16]) + [136])
	*($9 + [164]) = ($9 + [16])
	*($9 + [160]) = ($9 + [16])
	CALL $469(($9 + [160]), $7)
	$5 = *($4)
	*($4 + [140]) = CALL db_store_i64(*($1 + [8]), (int_64)-4992616317463298048, $2, $5, ($9 + [16]), [136])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($9 + [160]) = $4
	$5 = *($4)
	*($9 + [16]) = $5
	$6 = *($4 + [140])
	*($9 + [12]) = $6
	$8 = ($1 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $5
	*($7 + [16]) = $6
	*($9 + [160]) = [0]
	*($7) = $4
	*($8) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $471(($1 + [24]), ($9 + [160]), ($9 + [16]), ($9 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($9 + [160])
	*($9 + [160]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $867($1)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [176])
}

int_32 .FUNC $452 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $866([152])
	$4 = CALL $470($6)
	*($6 + [136]) = $0
	CALL $472(($8 + [32]), $4)
	*($6 + [140]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [140])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $471(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $451 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [128])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [24]))), [3504])
	$5 = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [16]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($6 + [120]) = ($6 + [101])
	*($6 + [116]) = $6
	*($6 + [112]) = $6
	CALL $384(($6 + [112]), $1)
	CALL db_update_i64(*($1 + [116]), $2, $6, [101])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [128])
}

void .FUNC $130 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [5472]
	$10 = (int_64)0
	
.LOOP $label$1:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$2 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$4 = ($4 + [165])
	goto $label$3 
	
.LABEL $label$4
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($10)
	$5 = *(($0 + [96]))
	$12 = *(($0 + [100]))
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$5 }
	$7 = ($12 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$6:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$5 }
	$12 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$4 = ($0 + [72])
	$7 = ($0 + [64])
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$10 }
	$12 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$4), [32])
	if ( $12 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$12 = CALL db_find_i64(*(($0 + [72])), *(($0 + [80])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$8 }
	$12 = CALL $227($4, $12)
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$4), [32])
	
.LABEL $label$9
	$4 = ($12 + [12])
	goto $label$7 
	
.LABEL $label$8
	$4 = ($0 + [176])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)((int_32)(*($4 + [4]) - *($4)) / (int_32)[12]) < (int_32)CALL $790($7, $1)), [2768])
	CALL $228($7, $1, $2, $3)
}

void .FUNC $102 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$4 = CALL strlen([1408])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($4 << [1])
	$6 = ($0 + [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($4 + [16]) & [-16])
	$6 = CALL $866($5)
	*($0) = ($5 | [1])
	*($0 + [8]) = $6
	*($0 + [4]) = $4
	
.LABEL $label$3
	CALL memcpy($6, [1408], $4)
	
.LABEL $label$2
	*(($6 + $4)) = [0]
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$5 }
	
.LOOP $label$6:
	CALL $874($0, *((uint_32(*($2) >> [4]) + [1440])))
	CALL $874($0, *(((*($2) & [15]) + [1440])))
	$2 = ($2 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$6 }
	
.LABEL $label$5
	return (unreachable)
	
.LABEL $label$1
	CALL $868($0)
}

int_32 .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$6 = *($1)
	$5 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $1)
	
.LABEL $label$1
	*($7 + [8]) = [0]
	*($7) = (int_64)0
	*($7 + [10]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [160])
	CALL memcpy($7, $5, [8])
	CALL eosio_assert(((int_32)($1 & [-2]) != (int_32)[8]), [160])
	$8 = ($7 + [8])
	CALL memcpy($8, ($5 + [8]), [2])
	CALL eosio_assert(((int_32)$1 != (int_32)[10]), [160])
	$4 = ($7 + [10])
	CALL memcpy($4, ($5 + [10]), [1])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($5)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($4)
	$8 = *($8)
	$3 = *($7)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($1) + $6))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 ($8 & [65535])), (int_32 ($5 & [255])), (int_32 $6))
	*([0] + [4]) = ($7 + [16])
	return [1]
}

void .FUNC $916 ()
{
	(unreachable)
}

void .FUNC $105 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_64 .FUNC atoll (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$2 = [1]
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$2 = [0]
	
.LABEL $label$2
	$5 = (int_64)0
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$5 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64))(((int_64)$5 * (int_64)10) - (CASTING int_64)(int_32 $3))
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $5 ? (int_64))((int_64)0 - $5) : $2 )
}

void .FUNC $132 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [5472]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($7)
	CALL $707(($0 + [64]), $1, $2, [0])
}

int_32 .FUNC strcmp (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ((int_32)$2 != (int_32)($3 & [255])) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	
.LOOP $label$2:
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)($3 & [255])) ){ goto $label$2 }
	
.LABEL $label$1
	return ($2 - ($3 & [255]))
}

void .FUNC $104 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $5, [16])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [24])) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [56]) = ($1 + $0)
	*($2 + [48]) = $1
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [160])
	CALL memcpy(($2 + [8]), $1, [8])
	*($2 + [52]) = ($1 + [8])
	$3 = (($2 + [8]) + [8])
	CALL $687(($2 + [48]), $3)
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $789(($2 + [48]), ($2 + [8]))
	$1 = *($3)
	if ( ($1 == 0) ){ goto $label$5 }
	*(($2 + [20])) = $1
	CALL $867($1)
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [64])
	return [1]
}

void .FUNC $723 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [12]) = *(*($3))
	$4 = *($1)
	*($1 + [16]) = (CASTING uint_32)(float_64 ((float_64)*(*($3 + [4])) + (float_64)(CASTING float_64)(uint_32 *($1 + [16]))))
	$5 = *(*($3 + [8]))
	if ( ((int_32)*($1 + [20]) >= (int_32)$5) ){ goto $label$1 }
	*(($1 + [20])) = $5
	*(*($3 + [12])) = [1]
	
.LABEL $label$1
	CALL eosio_assert([1], [512])
	$7 = $7
	$3 = ($7 + [-32])
	*([0] + [4]) = $3
	*($6 + [4]) = $3
	*($6) = $3
	*($6 + [8]) = ($7 + [-11])
	CALL $276($6, $1)
	CALL db_update_i64(*($1 + [28]), $2, $3, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$2 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $455 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $866([48])
	$6 = CALL $464($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [40])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $465(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [24])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [28])) = $7
	CALL $867($7)
	
.LABEL $label$10
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $134 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL $212(($0 + [600]), $1)
	CALL $787(($0 + [200]), $1, $2)
}

void .FUNC $678 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($2 + [8]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($2 + [12]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($2 + [16]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($2 + [20]), *($1 + [4]), [4])
	*($1 + [4]) = (*($1 + [4]) + [4])
}

void .FUNC _ZN16activity_control10ropenchestEN5eosio4nameEttm (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	CALL _ZN16activity_control19do_reveal_openchestEbN5eosio4nameEttm($0, [0], $1, $2, $3, $4)
}

void .FUNC $135 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL $212(($0 + [600]), $1)
	CALL $784(($0 + [1208]), $1, $2)
}

void .FUNC $136 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL $212(($0 + [600]), $1)
	CALL $780(($0 + [1360]), $1, $2)
}

void .FUNC $137 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$17 = (*([0] + [4]) - [304])
	*([0] + [4]) = $17
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [8512]
	$13 = (int_64)0
	
.LOOP $label$1:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$2 }
	$16 = *($10)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$16 = ($16 + [165])
	goto $label$3 
	
.LABEL $label$4
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($16 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$2
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($13)
	$16 = [0]
	*((($17 + [224]) + [32])) = [0]
	*($17 + [240]) = (int_64)-1
	*($17 + [248]) = (int_64)0
	$12 = *($0)
	*($17 + [224]) = $12
	*($17 + [232]) = $12
	$10 = [0]
	$5 = CALL db_find_i64($12, $12, (int_64)-6533188803235414016, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$10 = CALL $594(($17 + [224]), $5)
	CALL eosio_assert(((int_32)*($10 + [104]) == (int_32)($17 + [224])), [32])
	
.LABEL $label$5
	$5 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($5, [8528])
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)$1), [8560])
	CALL eosio_assert((((*($10 + [16]) + [-1]) & [65535]) <= [8]), [8592])
	*((($17 + [184]) + [32])) = [0]
	*($17 + [200]) = (int_64)-1
	$12 = *($0)
	*($17 + [184]) = $12
	*($17 + [192]) = $12
	*($17 + [208]) = (int_64)0
	$15 = CALL db_lowerbound_i64($12, $12, (int_64)-4352385804320899072, (int_64)0)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$6 }
	$16 = CALL $773(($17 + [184]), $15)
	
.LABEL $label$6
	$15 = [0]
	CALL eosio_assert(((int_32)$16 != (int_32)[0]), [8624])
	$16 = CALL db_lowerbound_i64(*($17 + [184]), *((($17 + [184]) + [8])), (int_64)-4352385804320899072, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$7 }
	$15 = CALL $773(($17 + [184]), $16)
	
.LABEL $label$7
	CALL memcpy(($17 + [150]), ($15 + [8]), [34])
	CALL assert_recover_key(($10 + [48]), $4, [66], ($17 + [150]), [34])
	CALL sha1($4, [66], ($17 + [112]))
	CALL sha256($4, [66], ($17 + [80]))
	$12 = *($17 + [127])
	$11 = *($17 + [115])
	$14 = *($17 + [119])
	$13 = *($17 + [123])
	$2 = *($17 + [83])
	$6 = *($17 + [111])
	$7 = *($17 + [95])
	$8 = *($17 + [87])
	$4 = ($0 + [600])
	CALL $102(($17 + [64]), $4, ($17 + [80]), [32])
	$16 = *($17 + [64])
	$15 = ($16 & [1])
	CALL prints_l(( *($17 + [72]) ? (($17 + [64]) | [1]) : $15 ), ( *($17 + [68]) ? uint_32($16 >> [1]) : $15 ))
	CALL prints([8656])
	CALL $102(($17 + [48]), $4, ($17 + [112]), [20])
	$16 = *($17 + [48])
	$15 = ($16 & [1])
	CALL prints_l(( *($17 + [56]) ? (($17 + [48]) | [1]) : $15 ), ( *($17 + [52]) ? uint_32($16 >> [1]) : $15 ))
	CALL prints([8656])
	$12 = (uint_64)((int_64)((int_64)((int_64)((int_64)$11 | (int_64)((int_64)$14 << (int_64)8)) | (int_64)((int_64)$13 << (int_64)16)) | (int_64)((int_64)$12 << (int_64)24)) + (int_64)((int_64)((int_64)((int_64)$6 | (int_64)((int_64)$7 << (int_64)8)) | (int_64)((int_64)$8 << (int_64)16)) | (int_64)((int_64)$2 << (int_64)24))) >> (uint_64)(int_64)1
	CALL printui(((int_64)$12) & (int_64)4294967295))
	$16 = (*(($10 + [16])) + [-1])
	if ( ((uint_32)$16 > (uint_32)[7]) ){ goto $label$24 }
	$15 = (CASTING uint_32)(uint_64 $12)
	goto $label$25 
	
.LABEL $label$25
	CALL $774(($0 + [280]), $1, $15)
	goto $label$8 
	
.LABEL $label$24
	CALL eosio_assert([0], [8672])
	goto $label$8 
	
.LABEL $label$23
	$16 = *($10 + [84])
	CALL $269(($17 + [264]), *(($0 + [260])), $1, [1])
	$12 = *($17 + [264])
	*($17 + [32]) = $12
	*($17 + [8 align=4]) = $12
	CALL $561(($0 + [200]), $1, $16, [0], $15, ($17 + [8]))
	goto $label$8 
	
.LABEL $label$22
	CALL $775(($0 + [200]), $1, *($10 + [84]), *($10 + [86]), $15)
	goto $label$8 
	
.LABEL $label$21
	$16 = CALL $776(($0 + [384]), $1, *($10 + [88]), *($10 + [92]), $15)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$8 }
	CALL $608(($0 + [280]), $1, ($16 & [255]))
	goto $label$8 
	
.LABEL $label$20
	CALL $777(($0 + [384]), $1, *($10 + [84]), $15)
	goto $label$8 
	
.LABEL $label$19
	CALL _ZN16activity_control19do_reveal_openchestEbN5eosio4nameEttm(($0 + [1504]), [0], $1, *($10 + [84]), *($10 + [86]), $15)
	goto $label$8 
	
.LABEL $label$18
	$12 = *($10 + [92])
	*($17 + [40]) = (int_64)1397703940
	*($17 + [32]) = $12
	CALL eosio_assert([1], [1248])
	$12 = (uint_64)*($17 + [40]) >> (uint_64)(int_64)8)
	$16 = [0]
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	
.LOOP $label$28:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	$15 = [1]
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$26 }
	goto $label$15 
	
.LABEL $label$17
	$12 = *($10 + [92])
	*($17 + [40]) = (int_64)1397703940
	*($17 + [32]) = $12
	CALL eosio_assert([1], [1248])
	$12 = (uint_64)*($17 + [40]) >> (uint_64)(int_64)8)
	$16 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	
.LOOP $label$31:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$31 }
	
.LABEL $label$30
	$15 = [1]
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$29 }
	goto $label$13 
	
.LABEL $label$16
	$15 = [0]
	
.LABEL $label$15
	CALL eosio_assert($15, [1120])
	$16 = *($10 + [86])
	$15 = *($10 + [84])
	CALL $308($4, ($17 + [32]), $15)
	CALL $311($4, $1, ($17 + [32]), $15)
	if ( ($16 == 0) ){ goto $label$8 }
	$11 = *($17 + [32])
	*(($17 + [296])) = [0]
	*($17 + [280]) = (int_64)-1
	$12 = *(($0 + [48]))
	*($17 + [264]) = $12
	*($17 + [272]) = $12
	*($17 + [288]) = (int_64)0
	CALL $313(($0 + [8]), $1, ((int_64)$11 * (int_64)*(CALL $312(($17 + [264]), CALL $fimport$25($12, $12, (int_64)-4728327042957836288, (int_64)0)))))
	$15 = *($17 + [288])
	if ( ($15 == 0) ){ goto $label$8 }
	$9 = ($17 + [292])
	$16 = *($9)
	if ( ((int_32)$16 == (int_32)$15) ){ goto $label$12 }
	
.LOOP $label$32:
	$16 = ($16 + [-24])
	$0 = *($16)
	*($16) = [0]
	if ( ($0 == 0) ){ goto $label$33 }
	CALL $867($0)
	
.LABEL $label$33
	if ( ((int_32)$15 != (int_32)$16) ){ goto $label$32 }
	$16 = *(($17 + [288]))
	goto $label$11 
	
.LABEL $label$14
	$15 = [0]
	
.LABEL $label$13
	CALL eosio_assert($15, [1120])
	$12 = *($10 + [96])
	*($17 + [24]) = (int_64)1397703940
	*($17 + [16]) = $12
	CALL eosio_assert([1], [1248])
	$12 = (uint_64)*($17 + [24]) >> (uint_64)(int_64)8)
	$16 = [0]
	
.LOOP $label$36:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$35 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	
.LOOP $label$38:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$35 }
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$38 }
	
.LABEL $label$37
	$15 = [1]
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	$15 = [0]
	
.LABEL $label$34
	CALL eosio_assert($15, [1120])
	$16 = *($10 + [86])
	CALL $308($4, ($17 + [16]), *($10 + [84]))
	CALL $316($4, ($17 + [32]))
	if ( ($16 == 0) ){ goto $label$8 }
	$11 = *($17 + [16])
	*(($17 + [296])) = [0]
	*($17 + [280]) = (int_64)-1
	$12 = *(($0 + [48]))
	*($17 + [264]) = $12
	*($17 + [272]) = $12
	*($17 + [288]) = (int_64)0
	CALL $313(($0 + [8]), $1, ((int_64)$11 * (int_64)*(CALL $312(($17 + [264]), CALL $fimport$25($12, $12, (int_64)-4728327042957836288, (int_64)0)))))
	$15 = *($17 + [288])
	if ( ($15 == 0) ){ goto $label$8 }
	$9 = ($17 + [292])
	$16 = *($9)
	if ( ((int_32)$16 == (int_32)$15) ){ goto $label$10 }
	
.LOOP $label$39:
	$16 = ($16 + [-24])
	$0 = *($16)
	*($16) = [0]
	if ( ($0 == 0) ){ goto $label$40 }
	CALL $867($0)
	
.LABEL $label$40
	if ( ((int_32)$15 != (int_32)$16) ){ goto $label$39 }
	$16 = *(($17 + [288]))
	goto $label$9 
	
.LABEL $label$12
	$16 = $15
	
.LABEL $label$11
	*($9) = $15
	CALL $867($16)
	goto $label$8 
	
.LABEL $label$10
	$16 = $15
	
.LABEL $label$9
	*($9) = $15
	CALL $867($16)
	
.LABEL $label$8
	CALL eosio_assert($5, [2224])
	CALL eosio_assert($5, [960])
	$16 = CALL db_next_i64(*($10 + [108]), ($17 + [264]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$41 }
	CALL $594(($17 + [224]), $16)
	
.LABEL $label$41
	CALL $778(($17 + [224]), $10)
	if ( (((*(($10 + [16])) + [-7]) & [65535]) <= [2]) ){ goto $label$42 }
	CALL $95($4, $1, [0])
	
.LABEL $label$42
	if ( ((*($17 + [48]) & [1]) == 0) ){ goto $label$43 }
	CALL $867(*(($17 + [56])))
	
.LABEL $label$43
	if ( ((*($17 + [64]) & [1]) == 0) ){ goto $label$44 }
	CALL $867(*(($17 + [72])))
	
.LABEL $label$44
	$0 = *($17 + [208])
	if ( ($0 == 0) ){ goto $label$45 }
	$4 = ($17 + [212])
	$10 = *($4)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$47 }
	
.LOOP $label$48:
	$10 = ($10 + [-24])
	$16 = *($10)
	*($10) = [0]
	if ( ($16 == 0) ){ goto $label$49 }
	CALL $867($16)
	
.LABEL $label$49
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$48 }
	$10 = *(($17 + [208]))
	goto $label$46 
	
.LABEL $label$47
	$10 = $0
	
.LABEL $label$46
	*($4) = $0
	CALL $867($10)
	
.LABEL $label$45
	$0 = *($17 + [248])
	if ( ($0 == 0) ){ goto $label$50 }
	$4 = (($17 + [224]) + [28])
	$16 = *($4)
	if ( ((int_32)$16 == (int_32)$0) ){ goto $label$52 }
	
.LOOP $label$53:
	$16 = ($16 + [-24])
	$10 = *($16)
	*($16) = [0]
	if ( ($10 == 0) ){ goto $label$54 }
	if ( ((*($10 + [32]) & [1]) == 0) ){ goto $label$55 }
	CALL $867(*(($10 + [40])))
	
.LABEL $label$55
	if ( ((*($10 + [20]) & [1]) == 0) ){ goto $label$56 }
	CALL $867(*(($10 + [28])))
	
.LABEL $label$56
	CALL $867($10)
	
.LABEL $label$54
	if ( ((int_32)$0 != (int_32)$16) ){ goto $label$53 }
	$10 = *(($17 + [248]))
	goto $label$51 
	
.LABEL $label$52
	$10 = $0
	
.LABEL $label$51
	*($4) = $0
	CALL $867($10)
	
.LABEL $label$50
	*([0] + [4]) = ($17 + [304])
	$16
}

void .FUNC $536 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	$5 = [0]
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$4 = *($1 + [40])
	*($6 + [8]) = $4
	*($6 + [16]) = $4
	*($6 + [44]) = [0]
	$1 = CALL db_find_i64($4, $4, (int_64)-3732485072939384832, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $523(($6 + [8]), $1)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($6 + [8])), [32])
	*(($0 + [8])) = *(($5 + [16]))
	*($0) = *($5 + [8])
	$1 = *($6 + [32])
	if ( $1 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($0 + [8]) = (int_64)1414222852
	*($0) = (int_64)0
	CALL eosio_assert([1], [1248])
	$4 = (int_64)5524308
	
.LOOP $label$5:
	$0 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$0 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($0, [1120])
	$1 = *($6 + [32])
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = ($6 + [36])
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $867($0)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$10 }
	$5 = *(($6 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$5 = $1
	
.LABEL $label$8
	*($3) = $1
	CALL $867($5)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [48])
}

int_32 .FUNC $655 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *(($2 + [40]))
	$2 = *($0 + [104])
	$7 = *(($2 + [44]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($2 + [16])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [20]) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$7 = CALL db_find_i64(*(($2 + [16])), *(($2 + [24])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $225($5, $7)
	CALL eosio_assert(((int_32)*($6 + [20]) == (int_32)$5), [32])
	
.LABEL $label$3
	$6 = ( ($6 + [8]) ? ($2 + [80]) : $6 )
	$3 = (*($6 + [4]) - *($6))
	$0 = *($2 + [24])
	$2 = *($0 + [88])
	$7 = *(($2 + [28]))
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$5 }
	$6 = ($7 + [-24])
	$4 = ([0] - $0)
	
.LOOP $label$6:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$5 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$6 = int_32($3 >> [4])
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$8 }
	$5 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$2), [32])
	goto $label$7 
	
.LABEL $label$8
	$5 = CALL $13($2, CALL $fimport$19(*($2), *($2 + [8]), (int_64)-6030912142679474176, $1))
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$2), [32])
	
.LABEL $label$7
	$5 = *($5 + [20])
	return ((((uint_32)$5 > (uint_32)[699]) + $6) + ((uint_32)$5 > (uint_32)[1499]))
}

void .FUNC $654 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	$5 = *($1 + [8])
	CALL eosio_assert(((int_64)$5 == (int_64)1397703940), [7152])
	$6 = [0]
	$4 = *($1)
	if ( ((uint_64)((int_64)$4 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [7072])
	CALL eosio_assert(((int_64)$4 > (int_64)0), [7088])
	$1 = ($2 + [-2])
	if ( ((uint_32)$1 > (uint_32)[3]) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$11
	$5 = (int_64)50
	goto $label$6 
	
.LABEL $label$10
	$5 = (int_64)10
	goto $label$6 
	
.LABEL $label$9
	$5 = (int_64)250
	goto $label$6 
	
.LABEL $label$8
	$5 = ( (int_64)5000 ? (int_64)1000 : $3 )
	goto $label$6 
	
.LABEL $label$7
	$5 = (int_64)10000
	
.LABEL $label$6
	CALL eosio_assert(((int_64)$4 >= (int_64)$5), [7120])
	CALL eosio_assert(((int_64)$4 < (int_64)10000001), [7136])
	$1
}

void .FUNC $657 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($9 + [24]) = $2
	*($9 + [16]) = $3
	$4 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [8])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$6), [32])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	$8 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $227($6, $8)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$6), [32])
	
.LABEL $label$3
	$8 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($8, [4208])
	*($9 + [15]) = [0]
	$1 = *($0)
	*($9 + [4]) = ($9 + [16])
	*($9) = ($9 + [24])
	*($9 + [8]) = ($9 + [15])
	CALL eosio_assert($8, [352])
	CALL $658($6, $7, $1, $9)
	CALL eosio_assert(*($9 + [15]), [4208])
	*([0] + [4]) = ($9 + [32])
}

int_64 .FUNC $656 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*($5 + [88]) = $3
	*($5 + [86]) = $1
	$3 = CALL $659($0, [1])
	*($5 + [72]) = ( (int_64)1 ? $3 : (int_64)($3 == 0) )
	$4 = [0]
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	$3 = *($0)
	*($5 + [32]) = $3
	*($5 + [40]) = $3
	$1 = CALL db_find_i64($3, $3, (int_64)-4860070093188497408, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $229(($5 + [32]), $1) + [20]) == (int_32)($5 + [32])), [32])
	$4 = [1]
	
.LABEL $label$1
	CALL eosio_assert($4, [7040])
	$3 = *($0)
	*($5 + [20]) = $2
	*($5 + [16]) = ($5 + [72])
	*($5 + [24]) = ($5 + [86])
	*($5 + [28]) = ($5 + [88])
	CALL $660(($5 + [8]), ($0 + [48]), $3, ($5 + [16]))
	$3 = *($5 + [72])
	$4 = *($5 + [56])
	if ( ($4 == 0) ){ goto $label$2 }
	$2 = ($5 + [60])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $867($1)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [56]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $4
	
.LABEL $label$3
	*($2) = $4
	CALL $867($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [96])
	return $3
}

void .FUNC $651 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	float_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	CALL $269(($7 + [88]), *($0 + [108]), $1, [1])
	CALL memcpy(($7 + [24]), *($7 + [92]), [64])
	$1 = CALL current_time()
	$3 = *([0] + [12])
	$4 = *($7 + [56])
	$6 = ((float_64)(CASTING float_64)(uint_32 *($7 + [60])) / (float_64)(float_64)100)
	*($7 + [16]) = $6
	*($7 + [8]) = (int_64)4607182418800017408
	$5 = *(( ($7 + [16]) ? ($7 + [8]) : ((float_64)$6 > (float_64)(float_64)1) ))
	*($7 + [16]) = $5
	*($7 + [8]) = (int_64)4618441417868443648
	$5 = *(( ($7 + [16]) ? ($7 + [8]) : ((float_64)(CASTING float_64)(int_64 $5) < (float_64)(float_64)6) ))
	*($7 + [16]) = $5
	$6 = (CASTING float_64)(int_64 $5)
	$3 = *([0] + [24])
	$2 = ((CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000)) - $3)
	$4 = ($2 - $4)
	if ( ((uint_32)$4 >= (uint_32)$3) ){ goto $label$2 }
	$6 = ((float_64)((float_64)((float_64)(CASTING float_64)(uint_32 ($3 - $4)) / (float_64)(CASTING float_64)(int_32 $3)) + (float_64)(float_64)1) * (float_64)$6)
	goto $label$1 
	
.LABEL $label$2
	$6 = ((float_64)$6 / (float_64)((float_64)((float_64)(CASTING float_64)(uint_32 ($4 - $3)) / (float_64)(CASTING float_64)(int_32 $3)) + (float_64)(float_64)1))
	
.LABEL $label$1
	*($7 + [16]) = $6
	*($7 + [8]) = (int_64)4607182418800017408
	$1 = *(( ($7 + [16]) ? ($7 + [8]) : ((float_64)$6 > (float_64)(float_64)1) ))
	*($7 + [16]) = $1
	*(($7 + [56])) = $2
	$6 = (CASTING float_64)(int_64 $1)
	*(($7 + [60])) = ( (CASTING int_32)(float_64 ((float_64)$6 * (float_64)(float_64)100)) ? [600] : ((float_64)$6 < (float_64)(float_64)6) )
	$3 = *(($0 + [108]))
	$1 = *($3)
	$0 = *($7 + [92])
	*($7 + [8]) = ($7 + [24])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [352])
	CALL $272(($3 + [128]), $0, $1, ($7 + [8]))
	*([0] + [4]) = ($7 + [96])
}

int_32 .FUNC $229 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([32]))) = (int_64)0
	*($6 + [8]) = [0]
	*($6 + [12]) = [0]
	*($6 + [16]) = [0]
	*($6 + [20]) = $0
	CALL $260(($8 + [32]), $6)
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $261(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $558 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$7 = (uint_64)$1 >> (uint_64)(int_64)32)
	$4 = *(($3 + [152]))
	$3 = *($0 + [52])
	$9 = *(($3 + [156]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$8 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$9 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($3 + [128])
	$8 = (CASTING uint_32)(uint_64 $7)
	$6 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$5 }
	$9 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [64]) == (int_32)$5), [32])
	if ( $9 ){ goto $label$4 }
	$9 = [0]
	goto $label$3 
	
.LABEL $label$5
	$9 = [0]
	$3 = CALL db_find_i64(*(($3 + [128])), *(($3 + [136])), (int_64)-6030912128150405120, $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $96($5, $3)
	CALL eosio_assert(((int_32)*($9 + [64]) == (int_32)$5), [32])
	
.LABEL $label$4
	$9 = *($9 + [40])
	
.LABEL $label$3
	CALL eosio_assert(((uint_32)$8 > (uint_32)$9), [6192])
	CALL eosio_assert(((int_32)CALL $597($0, $8, $2) == (int_32)$6), [6192])
	CALL $598(*(($0 + [52])), $2, $8, $6)
	return [0]
}

int_32 .FUNC $559 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	$2 = *(($0 + [152]))
	$5 = *(($0 + [156]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$1 }
	$4 = ($5 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($4)) == (int_64)$1) ){ goto $label$1 }
	$5 = $4
	$6 = ($4 + [-24])
	$4 = $6
	if ( ((int_32)($6 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [128])
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$8 }
	$4 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [64]) == (int_32)$6), [32])
	if ( $4 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$3 = [0]
	$4 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-6030912128150405120, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $96($6, $4)
	CALL eosio_assert(((int_32)*($4 + [64]) == (int_32)$6), [32])
	
.LABEL $label$7
	$3 = *($4 + [52])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$1 = *($0)
	*($7 + [8]) = $1
	*($7 + [16]) = $1
	$5 = CALL db_find_i64($1, $1, (int_64)-6533188803235414016, (CASTING uint_64)(uint_32 $3))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert(((int_32)*(CALL $594(($7 + [8]), $5) + [104]) == (int_32)($7 + [8])), [32])
	$5 = *($7 + [32])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$3 = [0]
	goto $label$3 
	
.LABEL $label$5
	$1 = *($0)
	CALL eosio_assert([1], [352])
	CALL $595($6, $4, $1, $7)
	$3 = [0]
	$5 = *($7 + [32])
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$0 = (($7 + [8]) + [28])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$13 }
	CALL $867(*(($4 + [40])))
	
.LABEL $label$13
	if ( ((*($4 + [20]) & [1]) == 0) ){ goto $label$14 }
	CALL $867(*(($4 + [28])))
	
.LABEL $label$14
	CALL $867($4)
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$11 }
	$4 = *(($7 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$4 = $5
	
.LABEL $label$9
	*($0) = $5
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $3
}

void .FUNC $224 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [144])
	*([0] + [4]) = $12
	CALL require_auth($1)
	$7 = *($5 + [24])
	$5 = *($0 + [12])
	$10 = *(($5 + [28]))
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$1 }
	$11 = ($10 + [-24])
	$6 = ([0] - $7)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$10 = $11
	$8 = ($11 + [-24])
	$11 = $8
	if ( ((int_32)($8 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$4 }
	$8 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$11 = CALL db_find_i64(*($5), *($5 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $13($5, $11)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$5), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [192])
	*(($12 + [128])) = [0]
	*($12 + [112]) = (int_64)-1
	*($12 + [120]) = (int_64)0
	$9 = *($0)
	*($12 + [96]) = $9
	*($12 + [104]) = $9
	$11 = [0]
	$10 = CALL db_find_i64($9, $9, (int_64)7176374513427283968, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$5 }
	$11 = CALL $268(($12 + [96]), $10)
	CALL eosio_assert(((int_32)*($11 + [64]) == (int_32)($12 + [96])), [32])
	
.LABEL $label$5
	$10 = ((int_32)$11 != (int_32)[0])
	CALL eosio_assert($10, [2976])
	$6 = *($11 + [12])
	if ( ((int_32)$6 == (int_32)[-1]) ){ goto $label$6 }
	CALL eosio_assert(((int_32)$6 > (int_32)[0]), [3008])
	
.LABEL $label$6
	if ( (*($11 + [20]) == 0) ){ goto $label$7 }
	$9 = CALL current_time()
	$6 = [0]
	$4 = (CASTING uint_32)(uint_64 ((uint_64)$9 / (uint_64)(int_64)1000000))
	$7 = *(($11 + [20]))
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$8 }
	$6 = ((uint_32)(*($11 + [24]) + $7) > (uint_32)$4)
	
.LABEL $label$8
	CALL eosio_assert($6, [3040])
	
.LABEL $label$7
	CALL $269(($12 + [88]), *($0 + [8]), $1, [1])
	if ( ((int_32)*($11 + [16]) != (int_32)[1]) ){ goto $label$9 }
	CALL eosio_assert(((*(*($12 + [92]) + [60]) & ([1] << ($2 + [-1]))) == 0), [3072])
	
.LABEL $label$9
	CALL eosio_assert(((int_64)*($3) == (int_64)*($11 + [32])), [3104])
	$6 = *($11 + [28])
	if ( ($6 == 0) ){ goto $label$10 }
	CALL eosio_assert(((uint_32)*(*($12 + [92]) + [56]) >= (uint_32)$6), [3120])
	
.LABEL $label$10
	*($12 + [84]) = $8
	*($12 + [80]) = $5
	*($12 + [8 align=4]) = *($12 + [80])
	CALL $270($0, $1, ($11 + [52]), ($12 + [8]))
	if ( ((int_32)*(($11 + [12])) < (int_32)[1]) ){ goto $label$11 }
	$1 = *($0)
	CALL eosio_assert($10, [352])
	CALL $271(($12 + [96]), $11, $1, ($12 + [16]))
	
.LABEL $label$11
	if ( ((int_32)*(($11 + [16])) != (int_32)[1]) ){ goto $label$12 }
	CALL memcpy(($12 + [16]), *($12 + [92]), [64])
	if ( ((int_32)*($11 + [8]) != (int_32)[2]) ){ goto $label$14 }
	$11 = (*($12 + [76]) | [7])
	$8 = [8]
	goto $label$13 
	
.LABEL $label$14
	$8 = ([1] << ($2 + [-1]))
	$11 = *($12 + [76])
	
.LABEL $label$13
	*(($12 + [76])) = ($11 | $8)
	$8 = *(($0 + [8]))
	$1 = *($8)
	$11 = *($12 + [92])
	*($12 + [136]) = ($12 + [16])
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [352])
	CALL $272(($8 + [128]), $11, $1, ($12 + [136]))
	
.LABEL $label$12
	$5 = *($12 + [120])
	if ( ($5 == 0) ){ goto $label$15 }
	$3 = ($12 + [124])
	$10 = *($3)
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$17 }
	
.LOOP $label$18:
	$10 = ($10 + [-24])
	$6 = *($10)
	*($10) = [0]
	if ( ($6 == 0) ){ goto $label$19 }
	$0 = *($6 + [52])
	if ( ($0 == 0) ){ goto $label$20 }
	$11 = $0
	$2 = ($6 + [56])
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$21 }
	$8 = ([0] - $0)
	$11 = ($7 + [-12])
	
.LOOP $label$22:
	if ( ((*($11) & [1]) == 0) ){ goto $label$23 }
	CALL $867(*(($11 + [8])))
	
.LABEL $label$23
	$11 = ($11 + [-20])
	if ( ((int_32)($11 + $8) != (int_32)[-12]) ){ goto $label$22 }
	$11 = *(($6 + [52]))
	
.LABEL $label$21
	*($2) = $0
	CALL $867($11)
	
.LABEL $label$20
	CALL $867($6)
	
.LABEL $label$19
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$18 }
	$11 = *(($12 + [120]))
	goto $label$16 
	
.LABEL $label$17
	$11 = $5
	
.LABEL $label$16
	*($3) = $5
	CALL $867($11)
	
.LABEL $label$15
	*([0] + [4]) = ($12 + [144])
}

int_32 .FUNC $225 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $866([32]))) = (int_64)0
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [16]) = [0]
	*($6 + [20]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [160])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	CALL $264(($8 + [32]), ($6 + [8]))
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $265(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $7
	CALL $867($7)
	
.LABEL $label$10
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $226 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	CALL require_auth($1)
	$11 = *($4 + [24])
	$4 = *($0 + [104])
	$8 = *(($4 + [28]))
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$1 }
	$10 = ($8 + [-24])
	$5 = ([0] - $11)
	
.LOOP $label$2:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$1 }
	$8 = $10
	$6 = ($10 + [-24])
	$10 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$4 }
	$11 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$4
	$11 = [0]
	$10 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$3 }
	$11 = CALL $13($4, $10)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$4), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [2624])
	CALL eosio_assert(((($2 + [-301]) & [65535]) <= [3]), [2656])
	CALL eosio_assert([1], [1248])
	$7 = ( (int_64)1000000000 ? ( (int_64)100000000 ? (int_64)10000000 : ((int_32)$2 == (int_32)[302]) ) : ((int_32)$2 == (int_32)[303]) )
	$9 = (int_64)5524308
	$10 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$6 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$6 = [0]
	
.LABEL $label$5
	CALL eosio_assert($6, [1120])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)1414222852), [2688])
	CALL eosio_assert(((int_64)*($3) == (int_64)$7), [2752])
	$4 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$10 }
	$10 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$11:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$10 }
	$8 = $10
	$6 = ($10 + [-24])
	$10 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	$10 = ($0 + [8])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$15 }
	$6 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$10), [32])
	if ( $6 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$13 }
	$6 = CALL $227($10, $6)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$10), [32])
	
.LABEL $label$14
	$10 = ($6 + [12])
	goto $label$12 
	
.LABEL $label$13
	$10 = ($0 + [112])
	
.LABEL $label$12
	$10 = *($11 + [8])
	CALL eosio_assert(((int_32)((int_32)(*($10 + [4]) - *($10)) / (int_32)[12]) < (int_32)((( $10 ? [5] : ($10 <= [5]) ) << [2]) + [28])), [2768])
	CALL $228($0, $1, $2, [7])
}

int_32 .FUNC $555 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $866([32])
	$6 = CALL $556($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $557(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_64 .FUNC $659 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	*($5 + [76]) = $1
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	$3 = *($0)
	*($5 + [32]) = $3
	*($5 + [40]) = $3
	$1 = CALL db_find_i64($3, $3, (int_64)-7768026120019509248, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	$1 = CALL $663(($5 + [32]), $1)
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)($5 + [32])), [32])
	*($5 + [24]) = (int_64)1
	*($5 + [24]) = ((int_64)*($1 + [8]) + (int_64)1)
	$3 = *($0)
	*($5 + [16]) = ($5 + [24])
	CALL eosio_assert([1], [352])
	CALL $664(($5 + [32]), $1, $3, ($5 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*($5 + [24]) = (int_64)1
	$3 = *($0)
	*($5 + [20]) = ($5 + [24])
	*($5 + [16]) = ($5 + [76])
	CALL $662(($5 + [8]), ($5 + [32]), $3, ($5 + [16]))
	
.LABEL $label$1
	$3 = *($5 + [24])
	$2 = *($5 + [56])
	if ( ($2 == 0) ){ goto $label$3 }
	$4 = ($5 + [60])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $867($0)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$6 }
	$1 = *(($5 + [56]))
	goto $label$4 
	
.LABEL $label$5
	$1 = $2
	
.LABEL $label$4
	*($4) = $2
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [80])
	return $3
}

void .FUNC $553 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [64])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [24]))), [3504])
	$5 = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [16]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($6 + [56]) = ($6 + [41])
	*($6 + [52]) = $6
	*($6 + [48]) = $6
	CALL $516(($6 + [48]), $1)
	CALL db_update_i64(*($1 + [52]), $2, $6, [41])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [64])
}

int_32 .FUNC $550 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [32])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $555($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $223 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	float_64 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	$20 = (*([0] + [4]) - [176])
	*([0] + [4]) = $20
	*($20 + [152]) = $1
	$13 = *(($0 + [32]))
	$6 = *(($0 + [36]))
	if ( ((int_32)$6 == (int_32)$13) ){ goto $label$1 }
	$14 = ($6 + [-24])
	$4 = ([0] - $13)
	
.LOOP $label$2:
	if ( ((int_64)*(*($14)) == (int_64)$2) ){ goto $label$1 }
	$6 = $14
	$7 = ($14 + [-24])
	$14 = $7
	if ( ((int_32)($7 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [8])
	if ( ((int_32)$6 == (int_32)$13) ){ goto $label$4 }
	$14 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [104]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$4
	$14 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)3932090329953906848, $2)
	if ( ((int_32)$14 <= (int_32)[-1]) ){ goto $label$5 }
	$14 = CALL $285($4, $14)
	CALL eosio_assert(((int_32)*($14 + [104]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$5
	$14 = [0]
	
.LABEL $label$3
	*($20 + [148]) = $14
	*($20 + [144]) = $4
	$13 = [0]
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [3232])
	CALL eosio_assert(((int_64)*($14 + [48]) != (int_64)$1), [3264])
	$7 = (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
	*($20 + [140]) = $7
	$6 = [0]
	$5 = *($14 + [16])
	if ( ((uint_32)$5 > (uint_32)$7) ){ goto $label$6 }
	$6 = ((uint_32)(*($14 + [20]) + $5) > (uint_32)$7)
	
.LABEL $label$6
	CALL eosio_assert($6, [3296])
	$17 = *($3 + [8])
	CALL eosio_assert(((int_64)$17 == (int_64)1414222852), [3616])
	$1 = *(($14 + [80]))
	*(($20 + [128])) = $1
	*($20 + [120]) = *($14 + [72])
	CALL eosio_assert(((int_64)$17 == (int_64)$1), [2688])
	$15 = *($3)
	CALL eosio_assert(((int_64)$15 >= (int_64)*($20 + [120])), [3632])
	$16 = *($14 + [12])
	$14 = *($0 + [88])
	*(($20 + [48])) = [0]
	*($20 + [40]) = (int_64)0
	$1 = *($14)
	*($20 + [24]) = $1
	*($20 + [16]) = $1
	*($20 + [32]) = (int_64)-1
	$14 = CALL db_find_i64($1, $1, (int_64)-4796533164510019584, $16)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$7 }
	$13 = CALL $81(($20 + [16]), $14)
	CALL eosio_assert(((int_32)*($13 + [12]) == (int_32)($20 + [16])), [32])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [3328])
	$6 = *($20 + [40])
	if ( ($6 == 0) ){ goto $label$8 }
	$5 = ($20 + [44])
	$14 = *($5)
	if ( ((int_32)$14 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$11:
	$14 = ($14 + [-24])
	$7 = *($14)
	*($14) = [0]
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $867($7)
	
.LABEL $label$12
	if ( ((int_32)$6 != (int_32)$14) ){ goto $label$11 }
	$14 = *(($20 + [40]))
	goto $label$9 
	
.LABEL $label$10
	$14 = $6
	
.LABEL $label$9
	*($5) = $6
	CALL $867($14)
	
.LABEL $label$8
	$1 = *($20 + [152])
	$14 = ($0 + [88])
	CALL $286(*($14), $1, *($13 + [9]))
	$7 = *(*($20 + [148]) + [12])
	if ( ((uint_32)(($7 + [-1051]) & [65535]) > (uint_32)[5]) ){ goto $label$13 }
	*($20 + [24]) = [0]
	*($20 + [16]) = (int_64)0
	CALL eosio_assert(((int_32)CALL $287(*($14), $1, $7, ($20 + [16])) ^ (int_32)[1]), [1312])
	$14 = *($20 + [16])
	if ( ($14 == 0) ){ goto $label$13 }
	*($20 + [20]) = $14
	CALL $867($14)
	
.LABEL $label$13
	$1 = *((($20 + [120]) + [8]))
	CALL eosio_assert(((int_64)$17 == (int_64)$1), [2688])
	if ( ((int_64)$15 <= (int_64)*($20 + [120])) ){ goto $label$15 }
	$9 = *(($3 + [8]))
	CALL eosio_assert(((int_64)$1 == (int_64)$9), [3360])
	$19 = (int_64)
	CALL eosio_assert(((int_64)$19($15 - *($20 + [120]))) > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)$19 < (int_64)4611686018427387904), [3440])
	$18 = *($0)
	$1 = (int_64)0
	$15 = (int_64)59
	$14 = [1152]
	$16 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$21 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$7 = ($7 + [165])
	goto $label$19 
	
.LABEL $label$21
	$17 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$17
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$16 }
	*($20 + [72]) = $16
	*($20 + [64]) = $18
	$1 = (int_64)0
	$17 = (int_64)59
	$14 = [1088]
	$16 = (int_64)0
	
.LOOP $label$22:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$23 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$7 = ($7 + [165])
	goto $label$24 
	
.LABEL $label$25
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$23
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$22 }
	$1 = (int_64)0
	$15 = (int_64)59
	$14 = [1184]
	$18 = (int_64)0
	
.LOOP $label$26:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$31 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$7 = ($7 + [165])
	goto $label$29 
	
.LABEL $label$31
	$17 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$30
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$28
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$27
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$26 }
	*(($20 + [8])) = [0]
	*($20) = (int_64)0
	$14 = CALL strlen([3472])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$34 }
	*($20) = ($14 << [1])
	$7 = ($20 | [1])
	if ( $14 ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	$6 = (($14 + [16]) & [-16])
	$7 = CALL $866($6)
	*($20) = ($6 | [1])
	*($20 + [8]) = $7
	*($20 + [4]) = $14
	
.LABEL $label$33
	CALL memcpy($7, [3472], $14)
	
.LABEL $label$32
	*(($7 + $14)) = [0]
	*(($20 + [40])) = $9
	*($20 + [16]) = *($0)
	*($20 + [24]) = *($20 + [152])
	$14 = ($20 + [8])
	*(($20 + [56])) = *($14)
	*($20 + [32]) = $19
	*($20 + [48]) = *($20)
	*($20) = [0]
	*($20 + [4]) = [0]
	*($14) = [0]
	$14 = CALL $66(($20 + [80]), ($20 + [64]), $16, $18, ($20 + [16]))
	CALL $65(($20 + [160]), $14)
	$7 = *($20 + [160])
	CALL send_inline($7, (*($20 + [164]) - $7))
	$7 = *($20 + [160])
	if ( ($7 == 0) ){ goto $label$35 }
	*($20 + [164]) = $7
	CALL $867($7)
	
.LABEL $label$35
	$7 = *($14 + [28])
	if ( ($7 == 0) ){ goto $label$36 }
	*(($14 + [32])) = $7
	CALL $867($7)
	
.LABEL $label$36
	$7 = *($14 + [16])
	if ( ($7 == 0) ){ goto $label$37 }
	*(($14 + [20])) = $7
	CALL $867($7)
	
.LABEL $label$37
	if ( ((*(($20 + [48])) & [1]) == 0) ){ goto $label$38 }
	CALL $867(*(($20 + [56])))
	
.LABEL $label$38
	if ( ((*($20) & [1]) == 0) ){ goto $label$15 }
	CALL $867(*(($20 + [8])))
	
.LABEL $label$15
	$6 = *($20 + [148])
	if ( (*($6 + [40]) == 0) ){ goto $label$49 }
	$19 = *(($6 + [64]))
	$8 = *($6 + [56])
	$18 = *($0)
	$1 = (int_64)0
	$15 = (int_64)59
	$14 = [1152]
	$16 = (int_64)0
	
.LOOP $label$50:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$55 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$7 = ($7 + [165])
	goto $label$53 
	
.LABEL $label$55
	$17 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$52
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$51
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$50 }
	*($20 + [72]) = $16
	*($20 + [64]) = $18
	$1 = (int_64)0
	$17 = (int_64)59
	$14 = [1088]
	$16 = (int_64)0
	
.LOOP $label$56:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$57 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$7 = ($7 + [165])
	goto $label$58 
	
.LABEL $label$59
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$57
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$56 }
	$1 = (int_64)0
	$15 = (int_64)59
	$14 = [1184]
	$18 = (int_64)0
	
.LOOP $label$60:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$65 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$64 }
	$7 = ($7 + [165])
	goto $label$63 
	
.LABEL $label$65
	$17 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$64
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$63
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$62
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$61
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$60 }
	*(($20 + [8])) = [0]
	*($20) = (int_64)0
	$14 = CALL strlen([3472])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$48 }
	*($20) = ($14 << [1])
	$7 = ($20 | [1])
	if ( $14 ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$49
	$18 = *($0)
	$1 = (int_64)0
	$15 = (int_64)59
	$14 = [1152]
	$16 = (int_64)0
	
.LOOP $label$66:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$71 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$70 }
	$7 = ($7 + [165])
	goto $label$69 
	
.LABEL $label$71
	$17 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$68 }
	goto $label$67 
	
.LABEL $label$70
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$69
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$68
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$67
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$66 }
	*($20 + [72]) = $16
	*($20 + [64]) = $18
	$1 = (int_64)0
	$17 = (int_64)59
	$14 = [1088]
	$16 = (int_64)0
	
.LOOP $label$72:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$73 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$75 }
	$7 = ($7 + [165])
	goto $label$74 
	
.LABEL $label$75
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$74
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$73
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$72 }
	$1 = (int_64)0
	$15 = (int_64)59
	$14 = [1184]
	$18 = (int_64)0
	
.LOOP $label$76:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$81 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$80 }
	$7 = ($7 + [165])
	goto $label$79 
	
.LABEL $label$81
	$17 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$80
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$79
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$78
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$77
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$76 }
	$1 = (int_64)0
	$17 = (int_64)59
	$14 = [1984]
	$19 = (int_64)0
	
.LOOP $label$82:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$83 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$85 }
	$7 = ($7 + [165])
	goto $label$84 
	
.LABEL $label$85
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$84
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$83
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$19 = ((int_64)$15 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$82 }
	*(($20 + [8])) = [0]
	*($20) = (int_64)0
	$14 = CALL strlen([1712])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$45 }
	*($20) = ($14 << [1])
	$7 = ($20 | [1])
	if ( $14 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$48
	$13 = (($14 + [16]) & [-16])
	$7 = CALL $866($13)
	*($20) = ($13 | [1])
	*($20 + [8]) = $7
	*($20 + [4]) = $14
	
.LABEL $label$47
	CALL memcpy($7, [3472], $14)
	
.LABEL $label$46
	*(($7 + $14)) = [0]
	*(($20 + [40])) = $19
	*($20 + [24]) = *($6 + [48])
	$14 = ($20 + [8])
	*(($20 + [56])) = *($14)
	*($20 + [16]) = *($0)
	*($20 + [32]) = $8
	*($20 + [48]) = *($20)
	*($20) = [0]
	*($20 + [4]) = [0]
	*($14) = [0]
	$14 = CALL $66(($20 + [80]), ($20 + [64]), $16, $18, ($20 + [16]))
	CALL $65(($20 + [160]), $14)
	$7 = *($20 + [160])
	CALL send_inline($7, (*($20 + [164]) - $7))
	$7 = *($20 + [160])
	if ( ($7 == 0) ){ goto $label$86 }
	*($20 + [164]) = $7
	CALL $867($7)
	
.LABEL $label$86
	$7 = *($14 + [28])
	if ( ($7 == 0) ){ goto $label$87 }
	*(($14 + [32])) = $7
	CALL $867($7)
	
.LABEL $label$87
	$7 = *($14 + [16])
	if ( ($7 == 0) ){ goto $label$88 }
	*(($14 + [20])) = $7
	CALL $867($7)
	
.LABEL $label$88
	if ( ((*(($20 + [48])) & [1]) == 0) ){ goto $label$89 }
	CALL $867(*(($20 + [56])))
	
.LABEL $label$89
	if ( ((*($20) & [1]) == 0) ){ goto $label$90 }
	CALL $867(*(($20 + [8])))
	
.LABEL $label$90
	$14 = *($20 + [148])
	$9 = *(($14 + [64]))
	$12 = (CASTING float_64)(int_64 *($14 + [56]))
	$10 = (Rounds 0)(((float_64)((float_64)$12 + (float_64)$12) / (float_64)(float_64)100))
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1248])
	$1 = (uint_64)$9 >> (uint_64)(int_64)8)
	$14 = [0]
	
.LOOP $label$93:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$92 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$94 }
	
.LOOP $label$95:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$92 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$95 }
	
.LABEL $label$94
	$7 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$93 }
	goto $label$91 
	
.LABEL $label$92
	$7 = [0]
	
.LABEL $label$91
	CALL eosio_assert($7, [1120])
	$18 = *($0)
	$1 = (int_64)0
	$15 = (int_64)59
	$14 = [1152]
	$16 = (int_64)0
	
.LOOP $label$96:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$101 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$100 }
	$7 = ($7 + [165])
	goto $label$99 
	
.LABEL $label$101
	$17 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$98 }
	goto $label$97 
	
.LABEL $label$100
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$99
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$98
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$97
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$96 }
	*($20 + [72]) = $16
	*($20 + [64]) = $18
	$1 = (int_64)0
	$17 = (int_64)59
	$14 = [1088]
	$16 = (int_64)0
	
.LOOP $label$102:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$103 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$105 }
	$7 = ($7 + [165])
	goto $label$104 
	
.LABEL $label$105
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$104
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$103
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$102 }
	$1 = (int_64)0
	$15 = (int_64)59
	$14 = [1184]
	$18 = (int_64)0
	
.LOOP $label$106:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$111 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$110 }
	$7 = ($7 + [165])
	goto $label$109 
	
.LABEL $label$111
	$17 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$108 }
	goto $label$107 
	
.LABEL $label$110
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$109
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$108
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$107
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$106 }
	$6 = *($20 + [148])
	*(($20 + [8])) = [0]
	*($20) = (int_64)0
	$14 = CALL strlen([3488])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$114 }
	*($20) = ($14 << [1])
	$7 = ($20 | [1])
	if ( $14 ){ goto $label$113 }
	goto $label$112 
	
.LABEL $label$114
	$13 = (($14 + [16]) & [-16])
	$7 = CALL $866($13)
	*($20) = ($13 | [1])
	*($20 + [8]) = $7
	*($20 + [4]) = $14
	
.LABEL $label$113
	CALL memcpy($7, [3488], $14)
	
.LABEL $label$112
	*(($7 + $14)) = [0]
	*(($20 + [40])) = $9
	*($20 + [24]) = *($6 + [48])
	$14 = ($20 + [8])
	*(($20 + [56])) = *($14)
	*($20 + [16]) = *($0)
	*($20 + [32]) = $10
	*($20 + [48]) = *($20)
	*($20) = [0]
	*($20 + [4]) = [0]
	*($14) = [0]
	$14 = CALL $66(($20 + [80]), ($20 + [64]), $16, $18, ($20 + [16]))
	CALL $65(($20 + [160]), $14)
	$7 = *($20 + [160])
	CALL send_inline($7, (*($20 + [164]) - $7))
	$7 = *($20 + [160])
	if ( ($7 == 0) ){ goto $label$115 }
	*($20 + [164]) = $7
	CALL $867($7)
	
.LABEL $label$115
	$7 = *($14 + [28])
	if ( ($7 == 0) ){ goto $label$116 }
	*(($14 + [32])) = $7
	CALL $867($7)
	
.LABEL $label$116
	$7 = *($14 + [16])
	if ( ($7 == 0) ){ goto $label$117 }
	*(($14 + [20])) = $7
	CALL $867($7)
	
.LABEL $label$117
	if ( ((*(($20 + [48])) & [1]) == 0) ){ goto $label$118 }
	CALL $867(*(($20 + [56])))
	
.LABEL $label$118
	if ( ((*($20) & [1]) == 0) ){ goto $label$119 }
	CALL $867(*(($20 + [8])))
	
.LABEL $label$119
	CALL eosio_assert(((int_64)$9 == (int_64)$19), [3504])
	$1 = ((int_64)$10 + (int_64)$8)
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)$1 < (int_64)4611686018427387904), [3584])
	$14 = ($20 + [128])
	CALL eosio_assert(((int_64)*($14) == (int_64)$19), [2688])
	$17 = *($20 + [120])
	if ( ((int_64)$17 <= (int_64)$1) ){ goto $label$39 }
	$11 = *($14)
	CALL eosio_assert(((int_64)$19 == (int_64)$11), [3360])
	$1 = (int_64)
	CALL eosio_assert(((int_64)$1($17 - $8)) > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)$1 < (int_64)4611686018427387904), [3440])
	CALL eosio_assert(((int_64)$9 == (int_64)$11), [3360])
	$9 = (int_64)
	CALL eosio_assert(((int_64)$9($1 - $10)) > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)$9 < (int_64)4611686018427387904), [3440])
	$18 = *($0)
	$1 = (int_64)0
	$15 = (int_64)59
	$14 = [1152]
	$16 = (int_64)0
	
.LOOP $label$120:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$125 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$124 }
	$7 = ($7 + [165])
	goto $label$123 
	
.LABEL $label$125
	$17 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$122 }
	goto $label$121 
	
.LABEL $label$124
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$123
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$122
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$121
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$120 }
	*($20 + [72]) = $16
	*($20 + [64]) = $18
	$1 = (int_64)0
	$17 = (int_64)59
	$14 = [1088]
	$16 = (int_64)0
	
.LOOP $label$126:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$127 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$129 }
	$7 = ($7 + [165])
	goto $label$128 
	
.LABEL $label$129
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$128
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$127
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$126 }
	$1 = (int_64)0
	$15 = (int_64)59
	$14 = [1184]
	$18 = (int_64)0
	
.LOOP $label$130:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$135 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$134 }
	$7 = ($7 + [165])
	goto $label$133 
	
.LABEL $label$135
	$17 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$132 }
	goto $label$131 
	
.LABEL $label$134
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$133
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$132
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$131
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$130 }
	$1 = (int_64)0
	$17 = (int_64)59
	$14 = [1984]
	$19 = (int_64)0
	
.LOOP $label$136:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$137 }
	$7 = *($14)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$139 }
	$7 = ($7 + [165])
	goto $label$138 
	
.LABEL $label$139
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$138
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$137
	$14 = ($14 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$19 = ((int_64)$15 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$136 }
	*(($20 + [8])) = [0]
	*($20) = (int_64)0
	$14 = CALL strlen([1712])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$42 }
	*($20) = ($14 << [1])
	$7 = ($20 | [1])
	if ( $14 ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$45
	$6 = (($14 + [16]) & [-16])
	$7 = CALL $866($6)
	*($20) = ($6 | [1])
	*($20 + [8]) = $7
	*($20 + [4]) = $14
	
.LABEL $label$44
	CALL memcpy($7, [1712], $14)
	
.LABEL $label$43
	*(($7 + $14)) = [0]
	*(($20 + [36])) = *($20 + [124])
	*($20 + [24]) = $19
	*(($20 + [44])) = *(($20 + [132]))
	*(($20 + [40])) = *((($20 + [120]) + [8]))
	*($20 + [16]) = *($0)
	*($20 + [32]) = *($20 + [120])
	$14 = ($20 + [8])
	*(($20 + [56])) = *($14)
	*($20 + [48]) = *($20)
	*($20) = [0]
	*($20 + [4]) = [0]
	*($14) = [0]
	$14 = CALL $197(($20 + [80]), ($20 + [64]), $16, $18, ($20 + [16]))
	CALL $65(($20 + [160]), $14)
	$7 = *($20 + [160])
	CALL send_inline($7, (*($20 + [164]) - $7))
	$7 = *($20 + [160])
	if ( ($7 == 0) ){ goto $label$140 }
	*($20 + [164]) = $7
	CALL $867($7)
	
.LABEL $label$140
	$7 = *($14 + [28])
	if ( ($7 == 0) ){ goto $label$141 }
	*(($14 + [32])) = $7
	CALL $867($7)
	
.LABEL $label$141
	$7 = *($14 + [16])
	if ( ($7 == 0) ){ goto $label$142 }
	*(($14 + [20])) = $7
	CALL $867($7)
	
.LABEL $label$142
	if ( ((*(($20 + [48])) & [1]) == 0) ){ goto $label$143 }
	CALL $867(*(($20 + [56])))
	
.LABEL $label$143
	if ( ((*($20) & [1]) == 0) ){ goto $label$39 }
	CALL $867(*(($20 + [8])))
	goto $label$39 
	
.LABEL $label$42
	$6 = (($14 + [16]) & [-16])
	$7 = CALL $866($6)
	*($20) = ($6 | [1])
	*($20 + [8]) = $7
	*($20 + [4]) = $14
	
.LABEL $label$41
	CALL memcpy($7, [1712], $14)
	
.LABEL $label$40
	*(($7 + $14)) = [0]
	*(($20 + [40])) = $11
	*(($20 + [52])) = *($20 + [4])
	*($20 + [24]) = $19
	$14 = ($20 + [8])
	*(($20 + [56])) = *($14)
	*($20 + [16]) = *($0)
	*($20 + [32]) = $9
	*($20 + [48]) = *($20)
	*($20) = [0]
	*($20 + [4]) = [0]
	*($14) = [0]
	$14 = CALL $197(($20 + [80]), ($20 + [64]), $16, $18, ($20 + [16]))
	CALL $65(($20 + [160]), $14)
	$7 = *($20 + [160])
	CALL send_inline($7, (*($20 + [164]) - $7))
	$7 = *($20 + [160])
	if ( ($7 == 0) ){ goto $label$144 }
	*($20 + [164]) = $7
	CALL $867($7)
	
.LABEL $label$144
	$7 = *($14 + [28])
	if ( ($7 == 0) ){ goto $label$145 }
	*(($14 + [32])) = $7
	CALL $867($7)
	
.LABEL $label$145
	$7 = *($14 + [16])
	if ( ($7 == 0) ){ goto $label$146 }
	*(($14 + [20])) = $7
	CALL $867($7)
	
.LABEL $label$146
	if ( ((*(($20 + [48])) & [1]) == 0) ){ goto $label$147 }
	CALL $867(*(($20 + [56])))
	
.LABEL $label$147
	if ( ((*($20) & [1]) == 0) ){ goto $label$39 }
	CALL $867(*(($20 + [8])))
	
.LABEL $label$39
	$14 = *($20 + [148])
	$1 = *($14 + [96])
	*($20 + [80]) = (((int_64)$1 != (int_64)0) & ((uint_64)*($20 + [120]) >= (uint_64)$1))
	$1 = *($0)
	*($20 + [20]) = ($20 + [152])
	*($20 + [16]) = ($20 + [140])
	*($20 + [24]) = ($20 + [120])
	*($20 + [28]) = ($20 + [80])
	*($20 + [32]) = ($20 + [144])
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [352])
	CALL $288($4, $14, $1, ($20 + [16]))
	if ( (*($20 + [80]) == 0) ){ goto $label$148 }
	CALL $289($0, $2, [1])
	
.LABEL $label$148
	*([0] + [4]) = ($20 + [176])
	return (unreachable)
	
.LABEL $label$14
	CALL $868($20)
}

void .FUNC $389 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $866([40])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = (int_64)1397703940
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5459781
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1120])
	*($4 + [24]) = $1
	CALL $395(($7 + [16]), $4)
	*($7 + [32]) = $4
	$2 = *($4)
	*($7 + [16]) = $2
	$6 = *($4 + [28])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $2
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $394(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $867($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $388 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	*($7 + [72]) = $1
	*($7 + [68]) = $2
	*($7 + [64]) = $6
	*($7 + [46]) = [0]
	*($7 + [40]) = [0]
	*($7 + [56]) = [0]
	*($7 + [52]) = $3
	*($7 + [44]) = $2
	*($7 + [47]) = $4
	*($7 + [48]) = $5
	$6 = *(($0 + [32]))
	$4 = *(($0 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$1 }
	$2 = ($4 + [-24])
	$3 = ([0] - $6)
	
.LOOP $label$2:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$1 }
	$4 = $2
	$5 = ($2 + [-24])
	$2 = $5
	if ( ((int_32)($5 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [8])
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	$5 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$2), [32])
	$1 = *($0)
	if ( $5 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)8526756653867991040, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $386($2, $5)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$2), [32])
	$1 = *($0)
	
.LABEL $label$6
	*($7 + [28]) = $0
	*($7 + [20]) = ($7 + [72])
	*($7 + [16]) = ($7 + [40])
	*($7 + [24]) = ($7 + [64])
	*($7 + [32]) = ($7 + [68])
	CALL eosio_assert([1], [352])
	CALL $397($2, $5, $1, ($7 + [16]))
	goto $label$3 
	
.LABEL $label$5
	$1 = *($0)
	
.LABEL $label$4
	*($7 + [28]) = $0
	*($7 + [20]) = ($7 + [72])
	*($7 + [16]) = ($7 + [40])
	*($7 + [24]) = ($7 + [64])
	*($7 + [32]) = ($7 + [68])
	CALL $396(($7 + [8]), $2, $1, ($7 + [16]))
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [80])
}

void .FUNC $383 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [128])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [88]))), [3504])
	$5 = ((int_64)*($1 + [80]) + (int_64)*($3))
	*($1 + [80]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [80]) < (int_64)4611686018427387904), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($6 + [120]) = ($6 + [101])
	*($6 + [116]) = $6
	*($6 + [112]) = $6
	CALL $384(($6 + [112]), $1)
	CALL db_update_i64(*($1 + [116]), $2, $6, [101])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [128])
}

void .FUNC $382 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = *($0 + [4])
	*($1) = *(*(*($4) + [4]) + [32])
	$2 = *($0)
	$4 = *($4 + [4])
	*($1 + [8]) = *($4)
	*(($5 = ($1 + [16]))) = *(($4 + [8]))
	CALL eosio_assert([1], [576])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 + [16]), $5, [8])
	$3 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-7947908067083943936, *(*($0 + [8])), $3, $6, [24])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $381 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = *($0 + [4])
	$2 = *($4)
	*($1 + [8]) = [1]
	*($1) = *(*($2 + [4]) + [32])
	$2 = *($0)
	$4 = *($4 + [4])
	*($1 + [16]) = *($4)
	*(($5 = ($1 + [24]))) = *(($4 + [8]))
	CALL eosio_assert([1], [576])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 | [8]), ($1 + [8]), [4])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 | [12]), ($1 + [16]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 + [20]), $5, [8])
	$3 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)-7947908067083419648, *(*($0 + [8])), $3, $6, [28])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $380 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = (*($1 + [8]) + [1])
	$4 = *($1)
	$5 = ($1 + [24])
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [3504])
	$6 = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [16]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 | [8]), ($1 + [8]), [4])
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 | [12]), ($1 + [16]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 + [20]), $5, [8])
	CALL db_update_i64(*($1 + [36]), $2, $7, [28])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $387 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($8 + [24]) = $2
	$3 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)8526756653867991040, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $386($5, $7)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$5), [32])
	
.LABEL $label$3
	$7 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($7, [4304])
	*($8 + [20]) = [-1]
	$1 = *($0)
	*($8 + [12]) = ($8 + [20])
	*($8 + [8]) = ($8 + [24])
	CALL eosio_assert($7, [352])
	CALL $409($5, $6, $1, ($8 + [8]))
	CALL eosio_assert(((int_32)uint_32(*($8 + [20]) >> [31]) ^ (int_32)[1]), [4384])
	*([0] + [4]) = ($8 + [32])
}

int_32 .FUNC $386 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $866([40]))) = (int_64)0
	*($6 + [12 align=4]) = (int_64)0
	*($6 + [20]) = [0]
	*($6 + [24]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [160])
	CALL memcpy($6, $4, [8])
	$3 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $3) > (uint_32)[3]), [160])
	CALL memcpy(($6 + [8]), $3, [4])
	*($8 + [36]) = ($4 + [12])
	CALL $410(($8 + [32]), ($6 + [12]))
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $408(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [12])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [16])) = $7
	CALL $867($7)
	
.LABEL $label$10
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $385 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $866([56])
	$4 = CALL $413($6)
	*($6 + [44]) = $0
	CALL $414(($8 + [32]), $4)
	*($6 + [48]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [48])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $415(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $384 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [104]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $868 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $869 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $870($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $689 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [2]) >= (uint_32)$1) ){ goto $label$5 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [2])
	$2 = ($4 + $1)
	if ( ((uint_32)$2 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$6 = [1073741823]
	$7 = ($7 - $3)
	if ( ((uint_32)int_32($7 >> [2]) > (uint_32)[536870910]) ){ goto $label$6 }
	$6 = int_32($7 >> [1])
	$6 = ( $2 ? $6 : ($6 <= $2) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $866(($6 << [2]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $2
	$7 = $1
	
.LOOP $label$7:
	*($6) = [0]
	$6 = ($6 + [4])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	*(($0 + [4])) = ($2 + ($1 << [2]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$3 = ($7 + ($6 << [2]))
	$2 = ($7 + ($4 << [2]))
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [4])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$4 = ($2 + ($1 << [2]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $867($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $690 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$19 = (*([0] + [4]) - [80])
	*([0] + [4]) = $19
	*($19 + [76]) = $2
	CALL require_auth($1)
	$8 = *(($0 + [32]))
	$9 = *(($0 + [36]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$1 }
	$16 = ($9 + [-24])
	$10 = ([0] - $8)
	
.LOOP $label$2:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$1 }
	$9 = $16
	$17 = ($16 + [-24])
	$16 = $17
	if ( ((int_32)($17 + $10) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [8])
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$4 }
	$13 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$4
	$13 = [0]
	$16 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)8526756653867991040, $1)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$3 }
	$13 = CALL $386($4, $16)
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$4), [32])
	
.LABEL $label$3
	$18 = *($5)
	$5 = ( ($13 + [12]) ? ($0 + [68]) : $13 )
	$16 = (*($5 + [4]) - $18)
	if ( ((int_32)$16 < (int_32)[20]) ){ goto $label$6 }
	$17 = (((uint_32)$16 / (uint_32)[20]) + [-1])
	$16 = [0]
	
.LOOP $label$7:
	$8 = ($17 - $16)
	$9 = (((int_32)$8 / (int_32)[2]) + $16)
	$14 = ($18 + ((int_32)$9 * (int_32)[20]))
	$10 = *($14)
	if ( ($10 <= $2) ){ goto $label$8 }
	if ( ((uint_32)$10 <= (uint_32)$2) ){ goto $label$5 }
	$17 = ($9 + [-1])
	if ( ((int_32)$8 > (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$16 = ($9 + [1])
	if ( ((int_32)$17 > (int_32)$9) ){ goto $label$7 }
	
.LABEL $label$6
	CALL eosio_assert([0], [7184])
	$14 = ($0 + [80])
	
.LABEL $label$5
	CALL eosio_assert((*($14 + [16]) == 0), [7312])
	*(($19 + [64])) = [0]
	$11 = *($0)
	*($19 + [32]) = $11
	*($19 + [28]) = [0]
	*($19 + [48]) = (int_64)-1
	*($19 + [56]) = (int_64)0
	*($19 + [40]) = $11
	*($19 + [24]) = ($19 + [32])
	$16 = CALL $691(($19 + [24]))
	CALL eosio_assert((*($14 + [8]) <= *(*($16 + [4]) + [8])), [7504])
	*($19 + [20]) = [0]
	$15 = *($3)
	if ( ((int_32)$15 == (int_32)*($3 + [4])) ){ goto $label$9 }
	$6 = ($0 + [80])
	$12 = ($5 + [4])
	
.LOOP $label$10:
	$7 = *($5)
	$16 = (*($12) - $7)
	if ( ((int_32)$16 < (int_32)[20]) ){ goto $label$12 }
	$2 = *($15)
	$17 = (((uint_32)$16 / (uint_32)[20]) + [-1])
	$16 = [0]
	
.LOOP $label$13:
	$8 = ($17 - $16)
	$9 = (((int_32)$8 / (int_32)[2]) + $16)
	$18 = ($7 + ((int_32)$9 * (int_32)[20]))
	$10 = *($18)
	if ( ($10 <= $2) ){ goto $label$14 }
	if ( ((uint_32)$10 <= (uint_32)$2) ){ goto $label$11 }
	$17 = ($9 + [-1])
	if ( ((int_32)$8 > (int_32)[1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$16 = ($9 + [1])
	if ( ((int_32)$17 > (int_32)$9) ){ goto $label$13 }
	
.LABEL $label$12
	CALL eosio_assert([0], [7184])
	$18 = $6
	
.LABEL $label$11
	$16 = *($18 + [8])
	CALL eosio_assert(((int_32)*($18 + [4]) == (int_32)*(($14 + [4]))), [7536])
	*($19 + [20]) = (($16 + *($19 + [20])) + [1])
	$15 = ($15 + [4])
	if ( ((int_32)$15 != (int_32)*(($3 + [4]))) ){ goto $label$10 }
	
.LABEL $label$9
	CALL $692($0, $1, $3)
	$1 = *($0)
	*($19 + [12]) = ($19 + [20])
	*($19 + [8]) = ($19 + [76])
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [352])
	CALL $693($4, $13, $1, ($19 + [8]))
	$2 = *($19 + [56])
	if ( ($2 == 0) ){ goto $label$15 }
	$9 = ($19 + [60])
	$16 = *($9)
	if ( ((int_32)$16 == (int_32)$2) ){ goto $label$17 }
	
.LOOP $label$18:
	$16 = ($16 + [-24])
	$17 = *($16)
	*($16) = [0]
	if ( ($17 == 0) ){ goto $label$19 }
	CALL $867($17)
	
.LABEL $label$19
	if ( ((int_32)$2 != (int_32)$16) ){ goto $label$18 }
	$16 = *(($19 + [56]))
	goto $label$16 
	
.LABEL $label$17
	$16 = $2
	
.LABEL $label$16
	*($9) = $2
	CALL $867($16)
	
.LABEL $label$15
	*([0] + [4]) = ($19 + [80])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $863([9676], $0)
}

int_32 .FUNC $863 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $864($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [18080])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $860 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$4 = *($1)
	*($5 + [8]) = $4
	$1 = *($3 + [38])
	*($5) = $4
	$0 = CALL $861($0, $5, $2, $1)
	*($3 + [38]) = $0
	*([0] + [4]) = ($5 + [16])
	return ($0 & [65535])
}

int_32 .FUNC $861 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	*([0] + [4]) = $11
	$6 = CALL current_time()
	$9 = [0]
	$8 = *([0] + [12])
	$10 = ((float_64)(CASTING float_64)(int_32 $3) / (float_64)(float_64)100)
	*($11 + [8]) = $10
	*($11) = (int_64)4607182418800017408
	$7 = *(( ($11 + [8]) ? $11 : ((float_64)$10 > (float_64)(float_64)1) ))
	*($11 + [8]) = $7
	*($11) = (int_64)4624633867356078080
	$4 = ((CASTING uint_32)(uint_64 ((uint_64)$6 / (uint_64)(int_64)1000000)) - $8)
	$6 = *(( ($11 + [8]) ? $11 : ((float_64)(CASTING float_64)(int_64 $7) < (float_64)(float_64)15) ))
	*($11 + [8]) = $6
	$10 = (CASTING float_64)(int_64 $6)
	$5 = *($2 + [4])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$2 }
	$9 = [0]
	
.LOOP $label$3:
	$8 = *(($3 + [10]))
	$8 = (CASTING int_32)(float_64 ((float_64)(CASTING float_64)(int_32 ((int_32)*(($3 + [12])) * (int_32)[60])) / (float_64)(float_64))((float_64)25 - ((float_64)((float_64)(CASTING float_64)(uint_32 $8) * (float_64)(float_64)25) / (float_64)(CASTING float_64)(int_32 ($8 + [1000])))))
	$9 = ( $8) ? $9 : ((int_32)$9 < (int_32)$8) )
	$2 = (*(($3 + [4])) + $2)
	$3 = ($3 + [16])
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$3 }
	$9 = ((int_32)$9 / (int_32)[4])
	if ( ((int_32)$2 <= (int_32)[0]) ){ goto $label$2 }
	$3 = *($1 + [4])
	CALL eosio_assert(((uint_32)$4 >= (uint_32)((CASTING int_32)(float_64 ((float_64)$10 * (float_64)(float_64)120)) + *($3 + [12]))), [9648])
	goto $label$1 
	
.LABEL $label$2
	$3 = *($1 + [4])
	
.LABEL $label$1
	$3 = ((int_32)*([0] + [24]) * (int_32)[30])
	$3 = ( $3 ? $9 : ((int_32)$3 < (int_32)$9) )
	$2 = ($4 - *($3 + [12]))
	if ( ((int_32)$2 >= (int_32)$3) ){ goto $label$5 }
	$10 = ((float_64)((float_64)((float_64)(CASTING float_64)(int_32 ($3 - $2)) / (float_64)(CASTING float_64)(int_32 $3)) + (float_64)(float_64)1) * (float_64)$10)
	goto $label$4 
	
.LABEL $label$5
	$10 = ((float_64)$10 / (float_64)((float_64)((float_64)(CASTING float_64)(int_32 ($2 - $3)) / (float_64)(CASTING float_64)(int_32 $3)) + (float_64)(float_64)1))
	
.LABEL $label$4
	*($11 + [8]) = $10
	*($11) = (int_64)4607182418800017408
	$6 = *(( ($11 + [8]) ? $11 : ((float_64)$10 > (float_64)(float_64)1) ))
	*($11 + [8]) = $6
	*([0] + [4]) = ($11 + [16])
	$10 = (CASTING float_64)(int_64 $6)
	return ( (CASTING int_32)(float_64 ((float_64)$10 * (float_64)(float_64)100)) ? [1500] : ((float_64)$10 < (float_64)(float_64)15) )
}

int_32 .FUNC $866 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [18172])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $693 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [16])
	$12 = $13
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$5 = ($1 + [12])
	$4 = *($1)
	$10 = *($1 + [12])
	$8 = ($1 + [16])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$1 }
	$7 = ((int_32)($9 - $10) / (int_32)[20])
	$6 = *(*($3))
	$9 = [0]
	
.LOOP $label$3:
	if ( ((int_32)*($10) == (int_32)$6) ){ goto $label$2 }
	$10 = ($10 + [20])
	$9 = ($9 + [1])
	if ( ($9 <= $7) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = (*($10) + *(*($3 + [4])))
	*(($10 = ($10 + [8]))) = ( $10 ? [127] : ((int_32)$10 < (int_32)[128]) )
	
.LABEL $label$1
	CALL eosio_assert([1], [512])
	$6 = *($5)
	$9 = *($8)
	$7 = ($9 - $6)
	$11 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[20]))
	$10 = [29]
	
.LOOP $label$4:
	$10 = ($10 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$6 }
	$9 = (((int_32)((uint_32)($7 + [-20]) / (uint_32)[20]) * (int_32)[17]) + $10)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($10 + [-17])
	
.LABEL $label$5
	if ( ($9 <= [513]) ){ goto $label$8 }
	$10 = CALL malloc($9)
	goto $label$7 
	
.LABEL $label$8
	$10 = ($13 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$7
	*($12) = $10
	$6 = ($10 + $9)
	*($12 + [8]) = $6
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [576])
	CALL memcpy($10, $1, [8])
	$7 = ($10 + [8])
	CALL eosio_assert(((int_32)($6 - $7) > (int_32)[3]), [576])
	CALL memcpy($7, ($1 + [8]), [4])
	*($12 + [4]) = ($10 + [12])
	CALL $400($12, $5)
	CALL db_update_i64(*($1 + [28]), $2, $10, $9)
	if ( ($9 <= [513]) ){ goto $label$9 }
	CALL free($10)
	
.LABEL $label$9
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($12 + [16])
}

int_32 .FUNC $864 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [18166]) == 0) ){ goto $label$2 }
	$7 = *([0] + [18168])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [18166]) = [1]
	$7 = ($7 << [16])
	*([0] + [18168]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [18168])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [18168]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [18166]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [18166]) = [1]
	$3 = ($3 << [16])
	*([0] + [18168]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [18168])
	
.LABEL $label$8
	*([0] + [18168]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [18060])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [17868]
	$1 = (((int_32)$2 * (int_32)[12]) + [17868])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC $310 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [256])
	*([0] + [4]) = $11
	*($11 + [248]) = $1
	*($11 + [247]) = $2
	CALL require_auth($1)
	CALL eosio_assert(((($2 + [-1]) & [255]) <= [3]), [4528])
	*(($11 + [232])) = [0]
	*($11 + [216]) = (int_64)-1
	*($11 + [224]) = (int_64)0
	$1 = *($0 + [8])
	*($11 + [200]) = $1
	*($11 + [208]) = $1
	$10 = [0]
	$2 = CALL db_find_i64($1, $1, (int_64)-4947914475178033152, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$10 = CALL $428(($11 + [200]), $2)
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)($11 + [200])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [4560])
	*($11 + [188]) = [0]
	*($11 + [185]) = [1]
	*($11 + [184]) = *($11 + [247])
	*($11 + [192]) = *($10 + [8])
	*($11 + [194]) = *($10 + [12])
	*($11 + [196]) = *($10 + [10])
	*($11 + [198]) = *($10 + [14])
	*($11 + [180]) = [1]
	$1 = *($11 + [248])
	$5 = *(($0 + [40]))
	$9 = *(($0 + [44]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$2 }
	$10 = ($9 + [-24])
	$4 = ([0] - $5)
	
.LOOP $label$3:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$2 }
	$9 = $10
	$2 = ($10 + [-24])
	$10 = $2
	if ( ((int_32)($2 + $4) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$10 = ($0 + [16])
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$7 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [20]) == (int_32)$10), [32])
	if ( $2 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$2 = CALL $225($10, $2)
	CALL eosio_assert(((int_32)*($2 + [20]) == (int_32)$10), [32])
	
.LABEL $label$6
	*($11 + [168]) = [0]
	$1 = *(($0 + [8]))
	*($11 + [132]) = ($11 + [168])
	*($11 + [128]) = ($11 + [247])
	*($11 + [136]) = ($11 + [184])
	*($11 + [140]) = ($11 + [180])
	CALL eosio_assert([1], [352])
	CALL $430($10, $2, $1, ($11 + [128]))
	CALL eosio_assert(((int_32)*($11 + [168]) ^ (int_32)[1]), [4576])
	goto $label$4 
	
.LABEL $label$5
	$1 = *(($0 + [8]))
	*($11 + [132]) = ($11 + [184])
	*($11 + [128]) = ($11 + [248])
	CALL $429(($11 + [168]), $10, $1, ($11 + [128]))
	
.LABEL $label$4
	$10 = [0]
	*(($11 + [160])) = [0]
	$9 = ($0 + [8])
	$1 = *($9)
	*($11 + [128]) = $1
	*($11 + [144]) = (int_64)-1
	*($11 + [152]) = (int_64)0
	*($11 + [136]) = $1
	$2 = [0]
	$4 = CALL db_find_i64($1, $1, (int_64)-4947914101813510144, *($11 + [180]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$8 }
	$2 = CALL $431(($11 + [128]), $4)
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)($11 + [128])), [32])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [4608])
	$7 = *(($2 + [16]))
	$6 = *($2 + [8])
	CALL eosio_assert(((int_64)*($3) == (int_64)$6), [4640])
	$8 = *($9)
	CALL eosio_assert([1], [1248])
	$1 = (int_64)5462355
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$2 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$2 = [0]
	
.LABEL $label$9
	CALL eosio_assert($2, [1120])
	$1 = CALL current_time()
	$10 = *($11 + [247])
	*($11 + [64]) = ((CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000)) - *([0] + [12]))
	*($11 + [72]) = $8
	*($11 + [80]) = [1]
	$2 = *($0 + [72])
	*(($11 + [83])) = *(($11 + [127]))
	*($11 + [81 align=1]) = *($11 + [125 align=1])
	*($11 + [84]) = [0]
	*($11 + [88]) = $10
	*($11 + [92]) = [0]
	*($11 + [96]) = [0]
	*($11 + [97]) = [0]
	*(($11 + [102])) = *(($11 + [172]))
	*($11 + [98 align=2]) = *($11 + [168 align=2])
	*($11 + [104]) = $6
	*(($11 + [112])) = $7
	$1 = *($11 + [248])
	$9 = CALL memcpy($11, ($11 + [64]), [56])
	CALL $322($2, $9, $1)
	$1 = *($9 + [248])
	$3 = *($5 + [24])
	$5 = *($0 + [64])
	$2 = *(($5 + [28]))
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$14 }
	$11 = ($2 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$15:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$14 }
	$2 = $11
	$10 = ($11 + [-24])
	$11 = $10
	if ( ((int_32)($10 + $4) != (int_32)[-24]) ){ goto $label$15 }
	
.LABEL $label$14
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$17 }
	$11 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$5), [32])
	goto $label$16 
	
.LABEL $label$17
	$11 = [0]
	$10 = CALL db_find_i64(*($5), *($5 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$16 }
	$11 = CALL $13($5, $10)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$5), [32])
	
.LABEL $label$16
	$10 = ((int_32)$11 != (int_32)[0])
	CALL eosio_assert($10, [192])
	*($9 + [60]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) - *([0] + [12]))
	$1 = *(($0 + [8]))
	*($9 + [56]) = ($9 + [60])
	CALL eosio_assert($10, [352])
	CALL $432($5, $11, $1, ($9 + [56]))
	if ( ((int_32)*($9 + [180]) != (int_32)[3]) ){ goto $label$18 }
	CALL $433(*($0 + [76]), *($9 + [248]))
	
.LABEL $label$18
	$2 = *($9 + [152])
	if ( ($2 == 0) ){ goto $label$19 }
	$0 = ($9 + [156])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$2) ){ goto $label$21 }
	
.LOOP $label$22:
	$11 = ($11 + [-24])
	$10 = *($11)
	*($11) = [0]
	if ( ($10 == 0) ){ goto $label$23 }
	CALL $867($10)
	
.LABEL $label$23
	if ( ((int_32)$2 != (int_32)$11) ){ goto $label$22 }
	$11 = *(($9 + [152]))
	goto $label$20 
	
.LABEL $label$21
	$11 = $2
	
.LABEL $label$20
	*($0) = $2
	CALL $867($11)
	
.LABEL $label$19
	$2 = *($9 + [224])
	if ( ($2 == 0) ){ goto $label$24 }
	$0 = ($9 + [228])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$2) ){ goto $label$26 }
	
.LOOP $label$27:
	$11 = ($11 + [-24])
	$10 = *($11)
	*($11) = [0]
	if ( ($10 == 0) ){ goto $label$28 }
	CALL $867($10)
	
.LABEL $label$28
	if ( ((int_32)$2 != (int_32)$11) ){ goto $label$27 }
	$11 = *(($9 + [224]))
	goto $label$25 
	
.LABEL $label$26
	$11 = $2
	
.LABEL $label$25
	*($0) = $2
	CALL $867($11)
	
.LABEL $label$24
	*([0] + [4]) = ($9 + [256])
}

void .FUNC $311 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [176])
	*([0] + [4]) = $14
	$5 = *(($0 + [152]))
	$9 = *(($0 + [156]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$1 }
	$8 = ($9 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$1 }
	$9 = $8
	$7 = ($8 + [-24])
	$8 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [128])
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$5 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [64]) == (int_32)$4), [32])
	if ( $8 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-6030912128150405120, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $96($4, $8)
	CALL eosio_assert(((int_32)*($8 + [64]) == (int_32)$4), [32])
	
.LABEL $label$4
	if ( ((int_32)*($8 + [12]) > (int_32)[-1]) ){ goto $label$3 }
	$1 = *($8 + [16])
	*($14 + [152]) = $1
	$5 = *(($0 + [112]))
	$9 = *(($0 + [116]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$6 }
	$8 = ($9 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$7:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$6 }
	$9 = $8
	$7 = ($8 + [-24])
	$8 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = ($0 + [88])
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$9 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$7), [32])
	if ( $8 ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$8 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $13($7, $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$7), [32])
	
.LABEL $label$8
	if ( (*($8 + [12]) == 0) ){ goto $label$3 }
	$5 = *(($0 + [152]))
	$9 = *(($0 + [156]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$10 }
	$8 = ($9 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$11:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$10 }
	$9 = $8
	$7 = ($8 + [-24])
	$8 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$13 }
	$9 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [64]) == (int_32)$4), [32])
	if ( $9 ){ goto $label$12 }
	goto $label$3 
	
.LABEL $label$13
	$8 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-6030912128150405120, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $96($4, $8)
	CALL eosio_assert(((int_32)*($9 + [64]) == (int_32)$4), [32])
	
.LABEL $label$12
	if ( CALL _ZN13admin_control12is_blacklistEN5eosio4nameE($0, $1) ){ goto $label$3 }
	$1 = *($2)
	$6 = (CASTING uint_32)(uint_64 ((int_64)((int_64)$1 / (int_64)100) + (int_64)*($9 + [48])))
	*($14 + [148]) = $6
	$7 = [800]
	$8 = [800]
	$5 = *($9 + [12])
	$2 = ($5 & [127])
	$5 = ($2 - (uint_32($5 >> [7]) & ((uint_32)$2 > (uint_32)[1])))
	if ( ((int_32)$5 > (int_32)[79]) ){ goto $label$14 }
	$8 = [600]
	if ( ((int_32)$5 > (int_32)[49]) ){ goto $label$14 }
	$8 = [500]
	if ( ((int_32)$5 > (int_32)[9]) ){ goto $label$14 }
	$8 = [400]
	if ( ((int_32)$5 > (int_32)[2]) ){ goto $label$14 }
	$8 = ( [300] ? [0] : ((int_32)$5 > (int_32)[0]) )
	
.LABEL $label$14
	if ( ((uint_32)$6 > (uint_32)[99999]) ){ goto $label$15 }
	$7 = [600]
	if ( ((uint_32)$6 > (uint_32)[49999]) ){ goto $label$15 }
	$7 = ( [500] ? [0] : ((uint_32)$6 > (uint_32)[9999]) )
	
.LABEL $label$15
	*($14 + [136]) = (int_64)1397703940
	$6 = ( $7 ? $8 : ((uint_32)$7 > (uint_32)$8) )
	$12 = ((int_64)(CASTING uint_64)(uint_32 $6) * (int_64)$1)
	$1 = ((int_64)$12 / (int_64)10000)
	*($14 + [128]) = $1
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1248])
	$1 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$7 = [0]
	
.LABEL $label$16
	CALL eosio_assert($7, [1120])
	$8 = [0]
	if ( ((int_32)$6 <= (int_32)[0]) ){ goto $label$22 }
	CALL eosio_assert([1], [1248])
	$1 = (int_64)5459781
	
.LOOP $label$24:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	CALL eosio_assert($7, [1120])
	CALL eosio_assert(((int_64)1397703940 == (int_64)1397703940), [2688])
	if ( ((int_64)$12 < (int_64)10000) ){ goto $label$22 }
	$13 = *($0)
	$1 = (int_64)0
	$10 = (int_64)59
	$8 = [1152]
	$11 = (int_64)0
	
.LOOP $label$27:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$32 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$7 = ($7 + [165])
	goto $label$30 
	
.LABEL $label$32
	$12 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$31
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$29
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$28
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$27 }
	*($14 + [80]) = $11
	*($14 + [72]) = $13
	$1 = (int_64)0
	$10 = (int_64)59
	$8 = [1824]
	$11 = (int_64)0
	
.LOOP $label$33:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$38 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$7 = ($7 + [165])
	goto $label$36 
	
.LABEL $label$38
	$12 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$37
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$35
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$34
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$11 = ((int_64)$12 | (int_64)$11)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$33 }
	$1 = (int_64)0
	$10 = (int_64)59
	$8 = [1184]
	$13 = (int_64)0
	
.LOOP $label$39:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$44 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$7 = ($7 + [165])
	goto $label$42 
	
.LABEL $label$44
	$12 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$43
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$41
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$40
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$39 }
	*(($14 + [16])) = [0]
	*($14 + [8]) = (int_64)0
	$8 = CALL strlen([4496])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$21 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$47 }
	*($14 + [8]) = ($8 << [1])
	$7 = (($14 + [8]) | [1])
	if ( $8 ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$47
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $866($6)
	*($14 + [8]) = ($6 | [1])
	*($14 + [16]) = $7
	*($14 + [12]) = $8
	
.LABEL $label$46
	CALL memcpy($7, [4496], $8)
	
.LABEL $label$45
	*(($7 + $8)) = [0]
	*(($14 + [44])) = *($14 + [132])
	*($14 + [24]) = *($0)
	*($14 + [32]) = *($14 + [152])
	*(($14 + [52])) = *(($14 + [140]))
	*(($14 + [48])) = *((($14 + [128]) + [8]))
	*($14 + [40]) = *($14 + [128])
	$8 = (($14 + [8]) + [8])
	*(($14 + [64])) = *($8)
	*($14 + [56]) = *($14 + [8])
	*($14 + [8]) = [0]
	*($14 + [12]) = [0]
	*($8) = [0]
	$8 = CALL $66(($14 + [88]), ($14 + [72]), $11, $13, ($14 + [24]))
	CALL $65(($14 + [160]), $8)
	$7 = *($14 + [160])
	CALL send_inline($7, (*($14 + [164]) - $7))
	$7 = *($14 + [160])
	if ( ($7 == 0) ){ goto $label$48 }
	*($14 + [164]) = $7
	CALL $867($7)
	
.LABEL $label$48
	$7 = *($8 + [28])
	if ( ($7 == 0) ){ goto $label$49 }
	*(($8 + [32])) = $7
	CALL $867($7)
	
.LABEL $label$49
	$7 = *($8 + [16])
	if ( ($7 == 0) ){ goto $label$50 }
	*(($8 + [20])) = $7
	CALL $867($7)
	
.LABEL $label$50
	if ( ((*(($14 + [56])) & [1]) == 0) ){ goto $label$51 }
	CALL $867(*(($14 + [64])))
	
.LABEL $label$51
	if ( ((*($14 + [8]) & [1]) == 0) ){ goto $label$52 }
	CALL $867(*(($14 + [16])))
	
.LABEL $label$52
	$1 = *($14 + [152])
	$2 = *(($0 + [72]))
	$6 = *(($0 + [76]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$53 }
	$8 = ($6 + [-24])
	$5 = ([0] - $2)
	
.LOOP $label$54:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$53 }
	$6 = $8
	$7 = ($8 + [-24])
	$8 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$54 }
	
.LABEL $label$53
	$8 = ($0 + [48])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$58 }
	$7 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [56]) == (int_32)$8), [32])
	$1 = *($0)
	if ( $7 ){ goto $label$57 }
	goto $label$55 
	
.LABEL $label$58
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-4992616317593845760, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$56 }
	$7 = CALL $420($8, $7)
	CALL eosio_assert(((int_32)*($7 + [56]) == (int_32)$8), [32])
	$1 = *($0)
	
.LABEL $label$57
	*($14 + [24]) = ($14 + [128])
	CALL eosio_assert([1], [352])
	CALL $422($8, $7, $1, ($14 + [24]))
	goto $label$22 
	
.LABEL $label$56
	$1 = *($0)
	
.LABEL $label$55
	*($14 + [28]) = ($14 + [128])
	*($14 + [24]) = ($14 + [152])
	CALL $421(($14 + [88]), $8, $1, ($14 + [24]))
	
.LABEL $label$22
	$1 = *($0)
	*($14 + [24]) = ($14 + [148])
	CALL eosio_assert([1], [352])
	CALL $423($4, $9, $1, ($14 + [24]))
	goto $label$3 
	
.LABEL $label$21
	CALL $868(($14 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($14 + [176])
	(unreachable)
}

int_32 .FUNC $312 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([24])) + [8]) = $0
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $419(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $313 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [128])
	*([0] + [4]) = $11
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1248])
	$5 = [0]
	$8 = (int_64)5524308
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	$8 = (int_64)0
	$10 = (int_64)59
	$5 = [1088]
	$6 = (int_64)0
	
.LOOP $label$6:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$7 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$3 = ($3 + [165])
	goto $label$8 
	
.LABEL $label$9
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$7
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$6 }
	$8 = (int_64)0
	$7 = (int_64)59
	$5 = [1104]
	$9 = (int_64)0
	
.LOOP $label$10:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$15 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$3 = ($3 + [165])
	goto $label$13 
	
.LABEL $label$15
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$12
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$11
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$10 }
	*($11 + [64]) = $9
	*($11 + [56]) = $6
	$8 = (int_64)0
	$10 = (int_64)59
	$5 = [1088]
	$6 = (int_64)0
	
.LOOP $label$16:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$17 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$3 = ($3 + [165])
	goto $label$18 
	
.LABEL $label$19
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$17
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$16 }
	$8 = (int_64)0
	$7 = (int_64)59
	$5 = [1104]
	$9 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$25 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$3 = ($3 + [165])
	goto $label$23 
	
.LABEL $label$25
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$21
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$20 }
	*(($11 + [8])) = [0]
	*($11) = (int_64)0
	$5 = CALL strlen([4480])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$26 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$29 }
	*($11) = ($5 << [1])
	$3 = ($11 | [1])
	if ( $5 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$4 = (($5 + [16]) & [-16])
	$3 = CALL $866($4)
	*($11) = ($4 | [1])
	*($11 + [8]) = $3
	*($11 + [4]) = $5
	
.LABEL $label$28
	CALL memcpy($3, [4480], $5)
	
.LABEL $label$27
	*(($3 + $5)) = [0]
	*(($11 + [32])) = (int_64)1414222852
	*(($11 + [44])) = *($11 + [4])
	*($11 + [24]) = $2
	$5 = ($11 + [8])
	*(($11 + [48])) = *($5)
	*($11 + [16]) = $1
	*($11 + [40]) = *($11)
	*($11) = [0]
	*($11 + [4]) = [0]
	*($5) = [0]
	$5 = CALL $64(($11 + [72]), ($11 + [56]), $6, $9, ($11 + [16]))
	CALL $65(($11 + [112]), $5)
	$3 = *($11 + [112])
	CALL send_inline($3, (*($11 + [116]) - $3))
	$3 = *($11 + [112])
	if ( ($3 == 0) ){ goto $label$30 }
	*($11 + [116]) = $3
	CALL $867($3)
	
.LABEL $label$30
	$3 = *($5 + [28])
	if ( ($3 == 0) ){ goto $label$31 }
	*(($5 + [32])) = $3
	CALL $867($3)
	
.LABEL $label$31
	$3 = *($5 + [16])
	if ( ($3 == 0) ){ goto $label$32 }
	*(($5 + [20])) = $3
	CALL $867($3)
	
.LABEL $label$32
	if ( ((*(($11 + [40])) & [1]) == 0) ){ goto $label$33 }
	CALL $867(*(($11 + [48])))
	
.LABEL $label$33
	if ( ((*($11) & [1]) == 0) ){ goto $label$34 }
	CALL $867(*(($11 + [8])))
	
.LABEL $label$34
	*([0] + [4]) = ($11 + [128])
	return (unreachable)
	
.LABEL $label$26
	CALL $868($11)
}

void .FUNC $314 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [176])
	*([0] + [4]) = $13
	CALL require_auth($1)
	*(($13 + [160])) = [0]
	*($13 + [144]) = (int_64)-1
	*($13 + [152]) = (int_64)0
	$12 = *($0 + [40])
	*($13 + [128]) = $12
	*($13 + [136]) = $12
	$11 = [0]
	$2 = CALL db_find_i64($12, $12, (int_64)-4723330733886668800, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$11 = CALL $416(($13 + [128]), $2)
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)($13 + [128])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [4416])
	$4 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$2 }
	$2 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$2 }
	$6 = $2
	$7 = ($2 + [-24])
	$2 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$5 }
	$2 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$0), [32])
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$7 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$2 = CALL $13($0, $7)
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$0), [32])
	
.LABEL $label$4
	$7 = ((int_32)$2 != (int_32)[0])
	CALL eosio_assert($7, [192])
	CALL eosio_assert(((int_64)*($3) == (int_64)*($11 + [16])), [4448])
	*($13 + [120]) = *($11 + [8])
	$6 = ($0 + [40])
	$12 = *($6)
	*($13 + [168]) = ($13 + [120])
	CALL eosio_assert($7, [352])
	CALL $275($0, $2, $12, ($13 + [168]))
	$8 = *($6)
	CALL eosio_assert([1], [1248])
	$12 = (int_64)5462355
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$7 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$7 = [0]
	
.LABEL $label$6
	CALL eosio_assert($7, [1120])
	$12 = CALL current_time()
	$9 = *(($11 + [16]))
	$10 = *($11)
	*($13 + [64]) = ((CASTING uint_32)(uint_64 ((uint_64)$12 / (uint_64)(int_64)1000000)) - *([0] + [12]))
	*($13 + [72]) = $8
	$12 = *(($11 + [24]))
	$2 = *($0 + [48])
	*($13 + [80]) = [4]
	*(($13 + [83])) = *(($13 + [170]))
	*($13 + [81 align=1]) = *($13 + [168 align=1])
	*($13 + [84]) = $10
	*($13 + [88]) = [0]
	*($13 + [92]) = [0]
	*($13 + [96]) = [0]
	*($13 + [97]) = [0]
	*(($13 + [102])) = *((($13 + [120]) + [4]))
	*($13 + [98 align=2]) = *($13 + [120 align=2])
	*($13 + [104]) = $9
	*(($13 + [112])) = $12
	CALL memcpy(($13 + [8]), ($13 + [64]), [56])
	CALL $322($2, ($13 + [8]), $1)
	$6 = *($13 + [152])
	if ( ($6 == 0) ){ goto $label$11 }
	$5 = ($13 + [156])
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$13 }
	
.LOOP $label$14:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$15 }
	CALL $867($7)
	
.LABEL $label$15
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$14 }
	$2 = *(($13 + [152]))
	goto $label$12 
	
.LABEL $label$13
	$2 = $6
	
.LABEL $label$12
	*($5) = $6
	CALL $867($2)
	
.LABEL $label$11
	*([0] + [4]) = ($13 + [176])
}

void .FUNC $315 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	$19 = (*([0] + [4]) - [576])
	*([0] + [4]) = $19
	*($19 + [552]) = $2
	CALL require_auth($2)
	$17 = CALL atoll(( *(($3 + [28])) ? ($3 + [21]) : (*($3 + [20]) & [1]) ))
	$12 = *(($1 + [32]))
	$10 = *(($1 + [36]))
	if ( ((int_32)$10 == (int_32)$12) ){ goto $label$1 }
	$14 = ($10 + [-24])
	$5 = ([0] - $12)
	
.LOOP $label$2:
	if ( ((int_64)*(*($14)) == (int_64)$17) ){ goto $label$1 }
	$10 = $14
	$13 = ($14 + [-24])
	$14 = $13
	if ( ((int_32)($13 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($1 + [8])
	if ( ((int_32)$10 == (int_32)$12) ){ goto $label$4 }
	$12 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*(($12 + [44])) == (int_32)$4), [32])
	*($19 + [548]) = $12
	*($19 + [544]) = $4
	$11 = (($19 + [544]) | [4])
	goto $label$3 
	
.LABEL $label$4
	$14 = CALL db_find_i64(*(($1 + [8])), *(($1 + [16])), (int_64)-7949128882289606656, $17)
	if ( ((int_32)$14 <= (int_32)[-1]) ){ goto $label$5 }
	$12 = CALL $385($4, $14)
	CALL eosio_assert(((int_32)*($12 + [44]) == (int_32)$4), [32])
	*($19 + [548]) = $12
	*($19 + [544]) = $4
	$11 = (($19 + [544]) | [4])
	goto $label$3 
	
.LABEL $label$5
	$12 = [0]
	*($19 + [548]) = [0]
	*($19 + [544]) = $4
	$11 = (($19 + [544]) | [4])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [4304])
	CALL eosio_assert(((int_64)*($12 + [8]) != (int_64)$2), [4336])
	$17 = *($3 + [40])
	if ( (int_64)($17 == 0) ){ goto $label$6 }
	CALL eosio_assert(((int_64)*($12 + [8]) == (int_64)$17), [3968])
	
.LABEL $label$6
	$6 = *($7 + [24])
	$7 = *($1 + [88])
	$10 = *(($7 + [28]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$7 }
	$14 = ($10 + [-24])
	$5 = ([0] - $6)
	
.LOOP $label$8:
	if ( ((int_64)*(*($14)) == (int_64)$2) ){ goto $label$7 }
	$10 = $14
	$13 = ($14 + [-24])
	$14 = $13
	if ( ((int_32)($13 + $5) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$10 }
	$14 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$7), [32])
	goto $label$9 
	
.LABEL $label$10
	$14 = [0]
	$13 = CALL db_find_i64(*($7), *($7 + [8]), (int_64)-6030912142679474176, $2)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$9 }
	$14 = CALL $13($7, $13)
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$7), [32])
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [3872])
	$14 = *($14 + [9])
	$9 = (( $14 ? [5] : ($14 <= [5]) ) << [2])
	$6 = *(($7 + [32]))
	$7 = *($1 + [92])
	$10 = *(($7 + [36]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$11 }
	$14 = ($10 + [-24])
	$5 = ([0] - $6)
	
.LOOP $label$12:
	if ( ((int_64)*(*($14)) == (int_64)$2) ){ goto $label$11 }
	$10 = $14
	$13 = ($14 + [-24])
	$14 = $13
	if ( ((int_32)($13 + $5) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	$13 = ($7 + [8])
	$5 = ($9 + [12])
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$14 }
	$14 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$13), [32])
	goto $label$13 
	
.LABEL $label$14
	$14 = [0]
	$10 = CALL db_find_i64(*(($7 + [8])), *(($7 + [16])), (int_64)8526756653867991040, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$13 }
	$14 = CALL $386($13, $10)
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$13), [32])
	
.LABEL $label$13
	$14 = ( ($14 + [12]) ? ($7 + [68]) : $14 )
	CALL eosio_assert(((int_32)((int_32)(*($14 + [4]) - *($14)) / (int_32)[20]) < (int_32)$5), [3904])
	$17 = *($12 + [8])
	if ( ((int_64)$17 == (int_64)*($1)) ){ goto $label$15 }
	CALL $387(*(($1 + [92])), $17, *($12))
	
.LABEL $label$15
	CALL $388(*(($1 + [92])), $2, *($12 + [32]), *($12 + [36]), *($12 + [40]), *($12 + [41]), [2])
	$13 = [0]
	$2 = *($19 + [544])
	$14 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	$10 = ((int_32)$14) != (int_32)[0]
	CALL eosio_assert($10), [2224])
	CALL eosio_assert($10, [960])
	$10 = CALL db_next_i64(*($14 + [48]), ($19 + [144]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$16 }
	CALL $385((CASTING uint_32)(uint_64 $2), $10)
	
.LABEL $label$16
	CALL $392($4, $14)
	$2 = *($1)
	$14 = *($11)
	$17 = *($14 + [8])
	*(($19 + [536])) = *(($14 + [24]))
	$15 = *($14 + [16])
	*($19 + [528]) = $15
	CALL eosio_assert(((int_64)$15 == (int_64)*($3 + [48])), [2192])
	$15 = CALL current_time()
	$14 = *([0] + [12])
	CALL eosio_assert([1], [1248])
	$3 = ((int_64)$17 == (int_64)$2)
	$12 = ( [0] ? [5] : $3 )
	$5 = ((CASTING uint_32)(uint_64 ((uint_64)$15 / (uint_64)(int_64)1000000)) - $14)
	$2 = (int_64)5462355
	
.LOOP $label$19:
	$14 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	
.LOOP $label$21:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$21 }
	
.LABEL $label$20
	$10 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$10 = [0]
	
.LABEL $label$17
	CALL eosio_assert($10, [1120])
	$13 = *($11)
	$2 = *(($13 + [24]))
	$10 = *($1 + [100])
	$17 = *($13 + [16])
	$7 = *($13 + [41])
	$4 = *($13 + [40])
	$6 = *($13 + [36])
	$9 = *($13 + [32])
	$15 = *($13)
	$16 = *($19 + [552])
	*($19 + [440]) = $5
	*($19 + [448]) = $16
	*($19 + [456]) = [3]
	*(($19 + [459])) = *(($19 + [527]))
	*($19 + [457 align=1]) = *($19 + [525 align=1])
	*($19 + [460]) = $15
	*($19 + [464]) = $9
	*($19 + [468]) = $6
	*($19 + [472]) = $4
	*($19 + [473]) = $7
	*(($19 + [478])) = *((($19 + [518]) + [4]))
	*($19 + [474 align=2]) = *($19 + [518 align=2])
	*($19 + [480]) = $17
	*(($19 + [488])) = $2
	*($19 + [496]) = $12
	*(($19 + [503])) = *(($19 + [517]))
	*(($19 + [501])) = *((($19 + [511]) + [4]))
	*($19 + [497 align=1]) = *($19 + [511 align=1])
	$2 = *($13 + [8])
	CALL memcpy(($19 + [80]), ($19 + [440]), [64])
	CALL $359($10, ($19 + [80]), $2)
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5462355
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$13 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	$13 = [0]
	
.LABEL $label$22
	CALL eosio_assert($13, [1120])
	$13 = *(($1 + [100]))
	$14 = *($11)
	$2 = *(($14 + [24]))
	$17 = *($14 + [16])
	$10 = *($14 + [41])
	$7 = *($14 + [40])
	$4 = *($14 + [36])
	$6 = *($14 + [32])
	$15 = *($14)
	$16 = *($14 + [8])
	*($19 + [368]) = $5
	*($19 + [376]) = $16
	*($19 + [384]) = [3]
	*(($19 + [387])) = *(($19 + [439]))
	*($19 + [385 align=1]) = *($19 + [437 align=1])
	*($19 + [388]) = $15
	*($19 + [392]) = $6
	*($19 + [396]) = $4
	*($19 + [400]) = $7
	*($19 + [401]) = $10
	*(($19 + [406])) = *(($19 + [434]))
	*($19 + [402 align=2]) = *($19 + [430 align=2])
	*($19 + [408]) = $17
	*(($19 + [416])) = $2
	$2 = *($19 + [552])
	CALL memcpy(($19 + [24]), ($19 + [368]), [56])
	CALL $322($13, ($19 + [24]), $2)
	*(($19 + [360])) = [0]
	*($19 + [344]) = (int_64)-1
	*($19 + [352]) = (int_64)0
	$2 = *($1)
	*($19 + [328]) = $2
	*($19 + [336]) = $2
	$14 = CALL db_find_i64($2, $2, (int_64)8526768601532727296, *(*($11) + [32]))
	if ( ((int_32)$14 <= (int_32)[-1]) ){ goto $label$28 }
	$14 = CALL $390(($19 + [328]), $14)
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)($19 + [328])), [32])
	$2 = *($1)
	*($19 + [144]) = ($19 + [528])
	CALL eosio_assert([1], [352])
	CALL $391(($19 + [328]), $14, $2, ($19 + [144]))
	goto $label$27 
	
.LABEL $label$28
	$2 = *($1)
	*($19 + [148]) = ($19 + [528])
	*($19 + [144]) = ($19 + [544])
	CALL $389(($19 + [208]), ($19 + [328]), $2, ($19 + [144]))
	
.LABEL $label$27
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5459781
	$14 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	
.LOOP $label$33:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$33 }
	
.LABEL $label$32
	$13 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	$13 = [0]
	
.LABEL $label$29
	CALL eosio_assert($13, [1120])
	if ( $3 ){ goto $label$34 }
	$2 = *($19 + [528])
	CALL __multi3(($19 + [8]), $2, (int_64)$2 >> (int_64)63), (CASTING uint_64)(uint_32 $12), (int_64)0)
	$15 = *($19 + [536])
	$17 = *((($19 + [8]) + [8]))
	$2 = *($19 + [8])
	CALL eosio_assert(( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$17 < (int_64)0) : (int_64)($17 == 0) ), [4000])
	CALL eosio_assert(( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$17 > (int_64)-1) : ((int_64)$17 == (int_64)-1) ), [4032])
	CALL eosio_assert([1], [4064])
	CALL eosio_assert([1], [4080])
	*(($0 + [8])) = $15
	$17 = ((int_64)$2 / (int_64)100)
	*($0) = $17
	if ( ((uint_64)((int_64)$2 + (int_64)99) > (uint_64)(int_64)198) ){ goto $label$35 }
	$17 = (int_64)1
	*($0) = (int_64)1
	
.LABEL $label$35
	CALL eosio_assert(((int_64)*((($19 + [528]) + [8])) == (int_64)$15), [2688])
	if ( ((int_64)*($19 + [528]) <= (int_64)$17) ){ goto $label$34 }
	CALL eosio_assert(((int_64)$15 == (int_64)*(($19 + [536]))), [3360])
	$2 = (int_64)
	*($19 + [528]) = $2(*($19 + [528]) - $17))
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)*($19 + [528]) < (int_64)4611686018427387904), [3440])
	
.LABEL $label$34
	*(($19 + [304])) = [0]
	*($19 + [296]) = (int_64)0
	$14 = CALL strlen([4352])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$36 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$39 }
	*($19 + [296]) = ($14 << [1])
	$13 = (($19 + [296]) | [1])
	if ( $14 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	$10 = (($14 + [16]) & [-16])
	$13 = CALL $866($10)
	*($19 + [296]) = ($10 | [1])
	*($19 + [304]) = $13
	*($19 + [300]) = $14
	
.LABEL $label$38
	CALL memcpy($13, [4352], $14)
	
.LABEL $label$37
	*(($13 + $14)) = [0]
	CALL _ZNSt3__19to_stringEi(($19 + [280]), *(*($11) + [32]))
	$14 = *($19 + [280])
	$13 = ($14 & [1])
	$14 = CALL $872(($19 + [296]), ( *($19 + [288]) ? (($19 + [280]) | [1]) : $13 ), ( *($19 + [284]) ? uint_32($14 >> [1]) : $13 ))
	$13 = ($14 + [8])
	*((($19 + [560]) + [8])) = *($13)
	*($19 + [560]) = *($14)
	*($14) = [0]
	*(($14 + [4])) = [0]
	*($13) = [0]
	$14 = CALL $873(($19 + [560]), [1424])
	$13 = ($14 + [8])
	*((($19 + [192]) + [8])) = *($13)
	*($19 + [192]) = *($14)
	*($14) = [0]
	*(($14 + [4])) = [0]
	*($13) = [0]
	CALL _ZNSt3__19to_stringEy(($19 + [264]), *(*($11)))
	$14 = *($19 + [264])
	$13 = ($14 & [1])
	$14 = CALL $872(($19 + [192]), ( *($19 + [272]) ? (($19 + [264]) | [1]) : $13 ), ( *($19 + [268]) ? uint_32($14 >> [1]) : $13 ))
	$13 = ($14 + [8])
	*((($19 + [208]) + [8])) = *($13)
	*($19 + [208]) = *($14)
	*($14) = [0]
	*(($14 + [4])) = [0]
	*($13) = [0]
	$14 = CALL $873(($19 + [208]), [1424])
	$13 = ($14 + [8])
	*((($19 + [144]) + [8])) = *($13)
	*($19 + [144]) = *($14)
	*($14) = [0]
	*(($14 + [4])) = [0]
	*($13) = [0]
	CALL $357(($19 + [248]), ($19 + [552]))
	$14 = *($19 + [248])
	$13 = ($14 & [1])
	$14 = CALL $872(($19 + [144]), ( *($19 + [256]) ? (($19 + [248]) | [1]) : $13 ), ( *($19 + [252]) ? uint_32($14 >> [1]) : $13 ))
	$13 = ($14 + [8])
	*((($19 + [312]) + [8])) = *($13)
	*($19 + [312]) = *($14)
	*($14) = [0]
	*(($14 + [4])) = [0]
	*($13) = [0]
	if ( ((*($19 + [248]) & [1]) == 0) ){ goto $label$40 }
	CALL $867(*((($19 + [248]) + [8])))
	
.LABEL $label$40
	if ( ((*($19 + [144]) & [1]) == 0) ){ goto $label$41 }
	CALL $867(*($19 + [152]))
	
.LABEL $label$41
	if ( ((*($19 + [208]) & [1]) == 0) ){ goto $label$42 }
	CALL $867(*($19 + [216]))
	
.LABEL $label$42
	if ( ((*($19 + [264]) & [1]) == 0) ){ goto $label$43 }
	CALL $867(*(($19 + [272])))
	
.LABEL $label$43
	if ( ((*($19 + [192]) & [1]) == 0) ){ goto $label$44 }
	CALL $867(*($19 + [200]))
	
.LABEL $label$44
	if ( ((*($19 + [560]) & [1]) == 0) ){ goto $label$45 }
	CALL $867(*($19 + [568]))
	
.LABEL $label$45
	if ( ((*($19 + [280]) & [1]) == 0) ){ goto $label$46 }
	CALL $867(*(($19 + [288])))
	
.LABEL $label$46
	if ( ((*($19 + [296]) & [1]) == 0) ){ goto $label$47 }
	CALL $867(*($19 + [304]))
	
.LABEL $label$47
	$8 = *($1)
	$2 = (int_64)0
	$15 = (int_64)59
	$14 = [1152]
	$16 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$53 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$13 = ($13 + [165])
	goto $label$51 
	
.LABEL $label$53
	$17 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$49
	$14 = ($14 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$48 }
	*($19 + [200]) = $16
	*($19 + [192]) = $8
	$2 = (int_64)0
	$15 = (int_64)59
	$14 = [1824]
	$16 = (int_64)0
	
.LOOP $label$54:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$59 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$58 }
	$13 = ($13 + [165])
	goto $label$57 
	
.LABEL $label$59
	$17 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$58
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$57
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$56
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$55
	$14 = ($14 + [1])
	$15 = ((int_64)$15 + (int_64)-5)
	$16 = ((int_64)$17 | (int_64)$16)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$54 }
	$2 = (int_64)0
	$15 = (int_64)59
	$14 = [1184]
	$18 = (int_64)0
	
.LOOP $label$60:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$65 }
	$13 = *($14)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$64 }
	$13 = ($13 + [165])
	goto $label$63 
	
.LABEL $label$65
	$17 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$64
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$63
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$62
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$61
	$14 = ($14 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$60 }
	$2 = *(*($11) + [8])
	*(($19 + [164])) = *($19 + [532])
	*($19 + [152]) = $2
	*(($19 + [168])) = *(($19 + [536]))
	*(($19 + [172])) = *(($19 + [540]))
	*($19 + [144]) = $8
	*($19 + [160]) = *($19 + [528])
	CALL $883(($19 + [176]), ($19 + [312]))
	$14 = CALL $66(($19 + [208]), ($19 + [192]), $16, $18, ($19 + [144]))
	CALL $65(($19 + [560]), $14)
	$13 = *($19 + [560])
	CALL send_inline($13, (*($19 + [564]) - $13))
	$13 = *($19 + [560])
	if ( ($13 == 0) ){ goto $label$66 }
	*($19 + [564]) = $13
	CALL $867($13)
	
.LABEL $label$66
	$13 = *($14 + [28])
	if ( ($13 == 0) ){ goto $label$67 }
	*(($14 + [32])) = $13
	CALL $867($13)
	
.LABEL $label$67
	$13 = *($14 + [16])
	if ( ($13 == 0) ){ goto $label$68 }
	*(($14 + [20])) = $13
	CALL $867($13)
	
.LABEL $label$68
	if ( ((*($19 + [176]) & [1]) == 0) ){ goto $label$69 }
	CALL $867(*(($19 + [184])))
	
.LABEL $label$69
	if ( ((*($19 + [312]) & [1]) == 0) ){ goto $label$70 }
	CALL $867(*($19 + [320]))
	
.LABEL $label$70
	$1 = *($19 + [352])
	if ( ($1 == 0) ){ goto $label$71 }
	$10 = ($19 + [356])
	$14 = *($10)
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$73 }
	
.LOOP $label$74:
	$14 = ($14 + [-24])
	$13 = *($14)
	*($14) = [0]
	if ( ($13 == 0) ){ goto $label$75 }
	CALL $867($13)
	
.LABEL $label$75
	if ( ((int_32)$1 != (int_32)$14) ){ goto $label$74 }
	$14 = *(($19 + [352]))
	goto $label$72 
	
.LABEL $label$73
	$14 = $1
	
.LABEL $label$72
	*($10) = $1
	CALL $867($14)
	
.LABEL $label$71
	*([0] + [4]) = ($19 + [576])
	return (unreachable)
	
.LABEL $label$36
	CALL $868(($19 + [296]))
}

void .FUNC $316 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$2 = ($0 + [8])
	$7 = [0]
	$6 = [0]
	$4 = ($0 + [16])
	$3 = CALL db_lowerbound_i64(*($0 + [8]), *($4), (int_64)3631284361385115648, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	CALL $214($2, $3)
	$6 = [1]
	
.LABEL $label$1
	CALL eosio_assert($6, [4272])
	$6 = CALL db_lowerbound_i64(*($2), *($4), (int_64)3631284361385115648, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $214($2, $6)
	
.LABEL $label$2
	$5 = *($0)
	*($8 + [8]) = $1
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [352])
	CALL $383($2, $7, $5, ($8 + [8]))
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $317 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [608])
	*([0] + [4]) = $16
	*($16 + [584]) = $2
	CALL require_auth($2)
	$14 = CALL atoll(( *(($3 + [28])) ? ($3 + [21]) : (*($3 + [20]) & [1]) ))
	$4 = *($6 + [24])
	$6 = *($1 + [88])
	$10 = *(($6 + [28]))
	if ( ((int_32)$10 == (int_32)$4) ){ goto $label$1 }
	$11 = ($10 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$2) ){ goto $label$1 }
	$10 = $11
	$8 = ($11 + [-24])
	$11 = $8
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$4) ){ goto $label$4 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [32])
	goto $label$3 
	
.LABEL $label$4
	$11 = [0]
	$8 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-6030912142679474176, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$11 = CALL $13($6, $8)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [3872])
	$11 = *($11 + [8])
	$9 = (( $11 ? [5] : ($11 <= [5]) ) << [2])
	$4 = *(($6 + [32]))
	$6 = *($1 + [96])
	$10 = *(($6 + [36]))
	if ( ((int_32)$10 == (int_32)$4) ){ goto $label$5 }
	$11 = ($10 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$6:
	if ( ((int_64)*(*($11)) == (int_64)$2) ){ goto $label$5 }
	$10 = $11
	$8 = ($11 + [-24])
	$11 = $8
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$8 = ($6 + [8])
	$5 = ($9 + [28])
	if ( ((int_32)$10 == (int_32)$4) ){ goto $label$10 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$8), [32])
	if ( $11 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$11 = CALL db_find_i64(*(($6 + [8])), *(($6 + [16])), (int_64)-7948290392355504128, $2)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$8 }
	$11 = CALL $227($8, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$8), [32])
	
.LABEL $label$9
	$11 = ($11 + [12])
	goto $label$7 
	
.LABEL $label$8
	$11 = ($6 + [112])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)((int_32)(*($11 + [4]) - *($11)) / (int_32)[12]) < (int_32)$5), [3904])
	$6 = *(($1 + [72]))
	$10 = *(($1 + [76]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$11 }
	$11 = ($10 + [-24])
	$5 = ([0] - $6)
	
.LOOP $label$12:
	if ( ((int_64)*(*($11)) == (int_64)$14) ){ goto $label$11 }
	$10 = $11
	$8 = ($11 + [-24])
	$11 = $8
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	$8 = ($1 + [48])
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$14 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*(($11 + [36])) == (int_32)$8), [32])
	*($16 + [580]) = $11
	*($16 + [576]) = $8
	$10 = (($16 + [576]) | [4])
	goto $label$13 
	
.LABEL $label$14
	$11 = CALL db_find_i64(*(($1 + [48])), *(($1 + [56])), (int_64)-7949128880453320704, $14)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$15 }
	$11 = CALL $349($8, $11)
	CALL eosio_assert(((int_32)*($11 + [36]) == (int_32)$8), [32])
	*($16 + [580]) = $11
	*($16 + [576]) = $8
	$10 = (($16 + [576]) | [4])
	goto $label$13 
	
.LABEL $label$15
	$11 = [0]
	*($16 + [580]) = [0]
	*($16 + [576]) = $8
	$10 = (($16 + [576]) | [4])
	
.LABEL $label$13
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [2656])
	CALL eosio_assert(((int_64)*($11 + [8]) != (int_64)$2), [3952])
	$14 = *($3 + [40])
	if ( (int_64)($14 == 0) ){ goto $label$16 }
	CALL eosio_assert(((int_64)*($11 + [8]) == (int_64)$14), [3968])
	
.LABEL $label$16
	$5 = ($1 + [96])
	CALL $350(*($5), *($11 + [8]), *($11))
	CALL $228(*($5), $2, *($11 + [32]), [3])
	$2 = *($16 + [576])
	$11 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	$5 = ((int_32)$11) != (int_32)[0]
	CALL eosio_assert($5), [2224])
	CALL eosio_assert($5, [960])
	$5 = CALL db_next_i64(*($11 + [40]), ($16 + [136]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$17 }
	CALL $349((CASTING uint_32)(uint_64 $2), $5)
	
.LABEL $label$17
	CALL $358($8, $11)
	$2 = *($1)
	$11 = *($10)
	$14 = *($11 + [8])
	*(($16 + [568])) = *(($11 + [24]))
	$12 = *($11 + [16])
	*($16 + [560]) = $12
	CALL eosio_assert(((int_64)$12 == (int_64)*($3 + [48])), [3920])
	$12 = CALL current_time()
	$11 = *([0] + [12])
	CALL eosio_assert([1], [1248])
	$6 = ((int_64)$14 == (int_64)$2)
	$3 = ( [0] ? [5] : $6 )
	$5 = ((CASTING uint_32)(uint_64 ((uint_64)$12 / (uint_64)(int_64)1000000)) - $11)
	$2 = (int_64)5462355
	$11 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$8 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$8 = [0]
	
.LABEL $label$18
	CALL eosio_assert($8, [1120])
	$11 = *($10)
	$2 = *($11)
	$14 = *($16 + [584])
	*($16 + [472]) = $5
	$12 = *(($11 + [24]))
	$8 = *($1 + [100])
	$13 = *($11 + [16])
	$4 = *($11 + [32])
	*($16 + [480]) = $14
	*($16 + [488]) = [2]
	*(($16 + [491])) = *((($16 + [557]) + [2]))
	*($16 + [489 align=1]) = *($16 + [557 align=1])
	*($16 + [492]) = $2
	*($16 + [496]) = $4
	*($16 + [500]) = [0]
	*($16 + [504]) = [0]
	*($16 + [505]) = [0]
	*(($16 + [510])) = *((($16 + [550]) + [4]))
	*($16 + [506 align=2]) = *($16 + [550 align=2])
	*($16 + [512]) = $13
	*(($16 + [520])) = $12
	*($16 + [528]) = $3
	*(($16 + [535])) = *(($16 + [549]))
	*(($16 + [533])) = *((($16 + [543]) + [4]))
	*($16 + [529 align=1]) = *($16 + [543 align=1])
	$2 = *($11 + [8])
	CALL memcpy(($16 + [72]), ($16 + [472]), [64])
	CALL $359($8, ($16 + [72]), $2)
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5462355
	$11 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	
.LOOP $label$27:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$27 }
	
.LABEL $label$26
	$8 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	$8 = [0]
	
.LABEL $label$23
	CALL eosio_assert($8, [1120])
	$8 = *(($1 + [100]))
	$11 = *($10)
	$2 = *(($11 + [24]))
	$14 = *($11 + [16])
	$4 = *($11 + [32])
	$12 = *($11)
	$13 = *($11 + [8])
	*($16 + [400]) = $5
	*($16 + [408]) = $13
	*($16 + [416]) = [2]
	*(($16 + [419])) = *((($16 + [469]) + [2]))
	*($16 + [417 align=1]) = *($16 + [469 align=1])
	*($16 + [420]) = $12
	*($16 + [424]) = $4
	*($16 + [428]) = [0]
	*($16 + [432]) = [0]
	*($16 + [433]) = [0]
	*(($16 + [438])) = *(($16 + [466]))
	*($16 + [434 align=2]) = *($16 + [462 align=2])
	*($16 + [440]) = $14
	*(($16 + [448])) = $2
	$2 = *($16 + [584])
	CALL memcpy(($16 + [16]), ($16 + [400]), [56])
	CALL $322($8, ($16 + [16]), $2)
	*(($16 + [392])) = [0]
	*($16 + [376]) = (int_64)-1
	*($16 + [384]) = (int_64)0
	$2 = *($1)
	*($16 + [360]) = $2
	*($16 + [368]) = $2
	$11 = CALL db_find_i64($2, $2, (int_64)-7947908067083943936, *(*($10) + [32]))
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$29 }
	$11 = CALL $352(($16 + [360]), $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)($16 + [360])), [32])
	$2 = *($1)
	*($16 + [136]) = ($16 + [560])
	CALL eosio_assert([1], [352])
	CALL $378(($16 + [360]), $11, $2, ($16 + [136]))
	goto $label$28 
	
.LABEL $label$29
	$2 = *($1)
	*($16 + [140]) = ($16 + [560])
	*($16 + [136]) = ($16 + [576])
	CALL $377(($16 + [320]), ($16 + [360]), $2, ($16 + [136]))
	
.LABEL $label$28
	*(($16 + [352])) = [0]
	*($16 + [336]) = (int_64)-1
	*($16 + [344]) = (int_64)0
	$2 = *($1)
	*($16 + [320]) = $2
	*($16 + [328]) = $2
	$11 = CALL db_find_i64($2, $2, (int_64)-7947908067083419648, *(*($10) + [32]))
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$31 }
	$11 = CALL $355(($16 + [320]), $11)
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)($16 + [320])), [32])
	$2 = *($1)
	*($16 + [136]) = ($16 + [560])
	CALL eosio_assert([1], [352])
	CALL $380(($16 + [320]), $11, $2, ($16 + [136]))
	goto $label$30 
	
.LABEL $label$31
	$2 = *($1)
	*($16 + [140]) = ($16 + [560])
	*($16 + [136]) = ($16 + [576])
	CALL $379(($16 + [200]), ($16 + [320]), $2, ($16 + [136]))
	
.LABEL $label$30
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$35 }
	
.LOOP $label$36:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$36 }
	
.LABEL $label$35
	$8 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	$8 = [0]
	
.LABEL $label$32
	CALL eosio_assert($8, [1120])
	if ( $6 ){ goto $label$37 }
	$2 = *($16 + [560])
	CALL __multi3($16, $2, (int_64)$2 >> (int_64)63), (CASTING uint_64)(uint_32 $3), (int_64)0)
	$12 = *($16 + [568])
	$14 = *(($16 + [8]))
	$2 = *($16)
	CALL eosio_assert(( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$14 < (int_64)0) : (int_64)($14 == 0) ), [4000])
	CALL eosio_assert(( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$14 > (int_64)-1) : ((int_64)$14 == (int_64)-1) ), [4032])
	CALL eosio_assert([1], [4064])
	CALL eosio_assert([1], [4080])
	*(($0 + [8])) = $12
	$14 = ((int_64)$2 / (int_64)100)
	*($0) = $14
	if ( ((uint_64)((int_64)$2 + (int_64)99) > (uint_64)(int_64)198) ){ goto $label$38 }
	$14 = (int_64)1
	*($0) = (int_64)1
	
.LABEL $label$38
	CALL eosio_assert(((int_64)*((($16 + [560]) + [8])) == (int_64)$12), [2688])
	if ( ((int_64)*($16 + [560]) <= (int_64)$14) ){ goto $label$37 }
	CALL eosio_assert(((int_64)$12 == (int_64)*(($16 + [568]))), [3360])
	$2 = (int_64)
	*($16 + [560]) = $2(*($16 + [560]) - $14))
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)*($16 + [560]) < (int_64)4611686018427387904), [3440])
	
.LABEL $label$37
	*(($16 + [296])) = [0]
	*($16 + [288]) = (int_64)0
	$11 = CALL strlen([4240])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$39 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$42 }
	*($16 + [288]) = ($11 << [1])
	$8 = (($16 + [288]) | [1])
	if ( $11 ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$42
	$5 = (($11 + [16]) & [-16])
	$8 = CALL $866($5)
	*($16 + [288]) = ($5 | [1])
	*($16 + [296]) = $8
	*($16 + [292]) = $11
	
.LABEL $label$41
	CALL memcpy($8, [4240], $11)
	
.LABEL $label$40
	*(($8 + $11)) = [0]
	CALL _ZNSt3__19to_stringEi(($16 + [272]), *(*($10) + [32]))
	$11 = *($16 + [272])
	$8 = ($11 & [1])
	$11 = CALL $872(($16 + [288]), ( *($16 + [280]) ? (($16 + [272]) | [1]) : $8 ), ( *($16 + [276]) ? uint_32($11 >> [1]) : $8 ))
	$8 = ($11 + [8])
	*((($16 + [592]) + [8])) = *($8)
	*($16 + [592]) = *($11)
	*($11) = [0]
	*(($11 + [4])) = [0]
	*($8) = [0]
	$11 = CALL $873(($16 + [592]), [1424])
	$8 = ($11 + [8])
	*((($16 + [184]) + [8])) = *($8)
	*($16 + [184]) = *($11)
	*($11) = [0]
	*(($11 + [4])) = [0]
	*($8) = [0]
	CALL _ZNSt3__19to_stringEy(($16 + [256]), *(*($10)))
	$11 = *($16 + [256])
	$8 = ($11 & [1])
	$11 = CALL $872(($16 + [184]), ( *($16 + [264]) ? (($16 + [256]) | [1]) : $8 ), ( *($16 + [260]) ? uint_32($11 >> [1]) : $8 ))
	$8 = ($11 + [8])
	*((($16 + [200]) + [8])) = *($8)
	*($16 + [200]) = *($11)
	*($11) = [0]
	*(($11 + [4])) = [0]
	*($8) = [0]
	$11 = CALL $873(($16 + [200]), [1424])
	$8 = ($11 + [8])
	*((($16 + [136]) + [8])) = *($8)
	*($16 + [136]) = *($11)
	*($11) = [0]
	*(($11 + [4])) = [0]
	*($8) = [0]
	CALL $357(($16 + [240]), ($16 + [584]))
	$11 = *($16 + [240])
	$8 = ($11 & [1])
	$11 = CALL $872(($16 + [136]), ( *($16 + [248]) ? (($16 + [240]) | [1]) : $8 ), ( *($16 + [244]) ? uint_32($11 >> [1]) : $8 ))
	$8 = ($11 + [8])
	*((($16 + [304]) + [8])) = *($8)
	*($16 + [304]) = *($11)
	*($11) = [0]
	*(($11 + [4])) = [0]
	*($8) = [0]
	if ( ((*($16 + [240]) & [1]) == 0) ){ goto $label$43 }
	CALL $867(*((($16 + [240]) + [8])))
	
.LABEL $label$43
	if ( ((*($16 + [136]) & [1]) == 0) ){ goto $label$44 }
	CALL $867(*($16 + [144]))
	
.LABEL $label$44
	if ( ((*($16 + [200]) & [1]) == 0) ){ goto $label$45 }
	CALL $867(*($16 + [208]))
	
.LABEL $label$45
	if ( ((*($16 + [256]) & [1]) == 0) ){ goto $label$46 }
	CALL $867(*(($16 + [264])))
	
.LABEL $label$46
	if ( ((*($16 + [184]) & [1]) == 0) ){ goto $label$47 }
	CALL $867(*($16 + [192]))
	
.LABEL $label$47
	if ( ((*($16 + [592]) & [1]) == 0) ){ goto $label$48 }
	CALL $867(*($16 + [600]))
	
.LABEL $label$48
	if ( ((*($16 + [272]) & [1]) == 0) ){ goto $label$49 }
	CALL $867(*(($16 + [280])))
	
.LABEL $label$49
	if ( ((*($16 + [288]) & [1]) == 0) ){ goto $label$50 }
	CALL $867(*($16 + [296]))
	
.LABEL $label$50
	$7 = *($1)
	$2 = (int_64)0
	$12 = (int_64)59
	$11 = [1152]
	$13 = (int_64)0
	
.LOOP $label$51:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$56 }
	$8 = *($11)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$55 }
	$8 = ($8 + [165])
	goto $label$54 
	
.LABEL $label$56
	$14 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$55
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$54
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$53
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$52
	$11 = ($11 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$51 }
	*($16 + [192]) = $13
	*($16 + [184]) = $7
	$2 = (int_64)0
	$12 = (int_64)59
	$11 = [1824]
	$13 = (int_64)0
	
.LOOP $label$57:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$62 }
	$8 = *($11)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$8 = ($8 + [165])
	goto $label$60 
	
.LABEL $label$62
	$14 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$59
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$58
	$11 = ($11 + [1])
	$12 = ((int_64)$12 + (int_64)-5)
	$13 = ((int_64)$14 | (int_64)$13)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$57 }
	$2 = (int_64)0
	$12 = (int_64)59
	$11 = [1184]
	$15 = (int_64)0
	
.LOOP $label$63:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$68 }
	$8 = *($11)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$8 = ($8 + [165])
	goto $label$66 
	
.LABEL $label$68
	$14 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$67
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$66
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$65
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$64
	$11 = ($11 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$63 }
	$2 = *(*($10) + [8])
	*(($16 + [156])) = *($16 + [564])
	*($16 + [144]) = $2
	*(($16 + [160])) = *(($16 + [568]))
	*(($16 + [164])) = *(($16 + [572]))
	*($16 + [136]) = $7
	*($16 + [152]) = *($16 + [560])
	CALL $883(($16 + [168]), ($16 + [304]))
	$11 = CALL $66(($16 + [200]), ($16 + [184]), $13, $15, ($16 + [136]))
	CALL $65(($16 + [592]), $11)
	$8 = *($16 + [592])
	CALL send_inline($8, (*($16 + [596]) - $8))
	$8 = *($16 + [592])
	if ( ($8 == 0) ){ goto $label$69 }
	*($16 + [596]) = $8
	CALL $867($8)
	
.LABEL $label$69
	$8 = *($11 + [28])
	if ( ($8 == 0) ){ goto $label$70 }
	*(($11 + [32])) = $8
	CALL $867($8)
	
.LABEL $label$70
	$8 = *($11 + [16])
	if ( ($8 == 0) ){ goto $label$71 }
	*(($11 + [20])) = $8
	CALL $867($8)
	
.LABEL $label$71
	if ( ((*($16 + [168]) & [1]) == 0) ){ goto $label$72 }
	CALL $867(*(($16 + [176])))
	
.LABEL $label$72
	if ( ((*($16 + [304]) & [1]) == 0) ){ goto $label$73 }
	CALL $867(*($16 + [312]))
	
.LABEL $label$73
	$1 = *($16 + [344])
	if ( ($1 == 0) ){ goto $label$74 }
	$10 = ($16 + [348])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)$1) ){ goto $label$76 }
	
.LOOP $label$77:
	$11 = ($11 + [-24])
	$8 = *($11)
	*($11) = [0]
	if ( ($8 == 0) ){ goto $label$78 }
	CALL $867($8)
	
.LABEL $label$78
	if ( ((int_32)$1 != (int_32)$11) ){ goto $label$77 }
	$11 = *(($16 + [344]))
	goto $label$75 
	
.LABEL $label$76
	$11 = $1
	
.LABEL $label$75
	*($10) = $1
	CALL $867($11)
	
.LABEL $label$74
	$1 = *($16 + [384])
	if ( ($1 == 0) ){ goto $label$79 }
	$10 = ($16 + [388])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)$1) ){ goto $label$81 }
	
.LOOP $label$82:
	$11 = ($11 + [-24])
	$8 = *($11)
	*($11) = [0]
	if ( ($8 == 0) ){ goto $label$83 }
	CALL $867($8)
	
.LABEL $label$83
	if ( ((int_32)$1 != (int_32)$11) ){ goto $label$82 }
	$11 = *(($16 + [384]))
	goto $label$80 
	
.LABEL $label$81
	$11 = $1
	
.LABEL $label$80
	*($10) = $1
	CALL $867($11)
	
.LABEL $label$79
	*([0] + [4]) = ($16 + [608])
	return (unreachable)
	
.LABEL $label$39
	CALL $868(($16 + [288]))
}

void .FUNC $318 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_64 $40
	int_32 $41
	int_64 $42
	int_64 $43
	int_64 $44
	int_64 $45
	int_32 $46
	$46 = (*([0] + [4]) - [672])
	*([0] + [4]) = $46
	*($46 + [648]) = $2
	CALL require_auth($2)
	*($46 + [640]) = [0]
	*($46 + [632]) = (int_64)0
	CALL $205($1, ($3 + [20]), ($46 + [632]), [44])
	*(($46 + [624])) = [0]
	*($46 + [608]) = (int_64)-1
	*($46 + [616]) = (int_64)0
	$2 = *($1)
	*($46 + [592]) = $2
	*($46 + [600]) = $2
	$41 = CALL db_find_i64($2, $2, (int_64)-4749717907502530560, (int_64)31)
	if ( ((int_32)$41 < (int_32)[0]) ){ goto $label$2 }
	$41 = CALL $348(($46 + [592]), $41)
	CALL eosio_assert(((int_32)*($41 + [12]) == (int_32)($46 + [592])), [32])
	$41 = *($41 + [8])
	goto $label$1 
	
.LABEL $label$2
	$41 = [5]
	
.LABEL $label$1
	$20 = (*($46 + [636]) - *($46 + [632]))
	CALL eosio_assert((((int_32)$20 != (int_32)[0]) & ((uint_32)((int_32)$20 / (int_32)[12]) <= (uint_32)$41)), [3840])
	$2 = *($46 + [648])
	$4 = *($14 + [24])
	$14 = *($1 + [88])
	$21 = *(($14 + [28]))
	if ( ((int_32)$21 == (int_32)$4) ){ goto $label$3 }
	$41 = ($21 + [-24])
	$18 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($41)) == (int_64)$2) ){ goto $label$3 }
	$21 = $41
	$20 = ($41 + [-24])
	$41 = $20
	if ( ((int_32)($20 + $18) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$21 == (int_32)$4) ){ goto $label$6 }
	$41 = *(($21 + [-24]))
	CALL eosio_assert(((int_32)*($41 + [24]) == (int_32)$14), [32])
	goto $label$5 
	
.LABEL $label$6
	$41 = [0]
	$20 = CALL db_find_i64(*($14), *($14 + [8]), (int_64)-6030912142679474176, $2)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$5 }
	$41 = CALL $13($14, $20)
	CALL eosio_assert(((int_32)*($41 + [24]) == (int_32)$14), [32])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$41 != (int_32)[0]), [3872])
	$41 = *($41 + [8])
	$27 = (( $41 ? [5] : ($41 <= [5]) ) << [2])
	$2 = *($46 + [648])
	$4 = *(($14 + [32]))
	$14 = *($1 + [96])
	$21 = *(($14 + [36]))
	if ( ((int_32)$21 == (int_32)$4) ){ goto $label$7 }
	$41 = ($21 + [-24])
	$18 = ([0] - $4)
	
.LOOP $label$8:
	if ( ((int_64)*(*($41)) == (int_64)$2) ){ goto $label$7 }
	$21 = $41
	$20 = ($41 + [-24])
	$41 = $20
	if ( ((int_32)($20 + $18) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	$20 = ($14 + [8])
	$18 = ($27 + [28])
	if ( ((int_32)$21 == (int_32)$4) ){ goto $label$12 }
	$41 = *(($21 + [-24]))
	CALL eosio_assert(((int_32)*($41 + [24]) == (int_32)$20), [32])
	if ( $41 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$41 = CALL db_find_i64(*(($14 + [8])), *(($14 + [16])), (int_64)-7948290392355504128, $2)
	if ( ((int_32)$41 < (int_32)[0]) ){ goto $label$10 }
	$41 = CALL $227($20, $41)
	CALL eosio_assert(((int_32)*($41 + [24]) == (int_32)$20), [32])
	
.LABEL $label$11
	$41 = ($41 + [12])
	goto $label$9 
	
.LABEL $label$10
	$41 = ($14 + [112])
	
.LABEL $label$9
	CALL eosio_assert(((uint_32)(((int_32)(*($46 + [636]) - *($46 + [632])) / (int_32)[12]) + ((int_32)(*($41 + [4]) - *($41)) / (int_32)[12])) <= (uint_32)$18), [3904])
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5459781
	$41 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$20 = [1]
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$20 = [0]
	
.LABEL $label$13
	CALL eosio_assert($20, [1120])
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5459781
	$41 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$20 = [1]
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$20 = [0]
	
.LABEL $label$18
	CALL eosio_assert($20, [1120])
	$40 = (int_64)0
	if ( ((int_32)*($46 + [636]) == (int_32)*($46 + [632])) ){ goto $label$24 }
	$4 = ($1 + [48])
	$15 = (($46 + [144]) + [32])
	$14 = (($46 + [144]) + [16])
	$13 = (($46 + [248]) | [1])
	$12 = (($46 + [264]) | [1])
	$11 = (($46 + [280]) | [1])
	$10 = (($46 + [296]) | [1])
	$9 = (($46 + [408]) + [34])
	$8 = (($46 + [408]) + [17])
	$7 = ($46 + [537])
	$6 = (($46 + [480]) + [34])
	$5 = (($46 + [480]) + [17])
	$41 = *($46 + [632])
	$22 = ($1 + [72])
	$23 = ($1 + [76])
	$24 = ($1 + [56])
	$25 = ($3 + [40])
	$26 = ($1 + [96])
	$27 = (($46 + [568]) + [8])
	$29 = ($1 + [100])
	$30 = (($46 + [480]) + [20])
	$31 = (($46 + [480]) + [28])
	$32 = (($46 + [480]) + [33])
	$16 = [0]
	$40 = (int_64)0
	
.LOOP $label$25:
	$41 = ($41 + ((int_32)$16 * (int_32)[12]))
	if ( (*($41) & [1]) ){ goto $label$27 }
	$41 = ($41 + [1])
	goto $label$26 
	
.LABEL $label$27
	$41 = *($41 + [8])
	
.LABEL $label$26
	$2 = CALL atoll($41)
	$17 = *($22)
	$21 = *($23)
	if ( ((int_32)$21 == (int_32)$17) ){ goto $label$28 }
	$41 = ($21 + [-24])
	$18 = ([0] - $17)
	
.LOOP $label$29:
	if ( ((int_64)*(*($41)) == (int_64)$2) ){ goto $label$28 }
	$21 = $41
	$20 = ($41 + [-24])
	$41 = $20
	if ( ((int_32)($20 + $18) != (int_32)[-24]) ){ goto $label$29 }
	
.LABEL $label$28
	if ( ((int_32)$21 == (int_32)$17) ){ goto $label$31 }
	$41 = *(($21 + [-24]))
	CALL eosio_assert(((int_32)*(($41 + [36])) == (int_32)$4), [32])
	goto $label$30 
	
.LABEL $label$31
	$41 = CALL db_find_i64(*($4), *($24), (int_64)-7949128880453320704, $2)
	if ( ((int_32)$41 <= (int_32)[-1]) ){ goto $label$32 }
	$41 = CALL $349($4, $41)
	CALL eosio_assert(((int_32)*($41 + [36]) == (int_32)$4), [32])
	goto $label$30 
	
.LABEL $label$32
	$41 = [0]
	
.LABEL $label$30
	*($46 + [588]) = $41
	*($46 + [584]) = $4
	CALL eosio_assert(((int_32)$41 != (int_32)[0]), [2656])
	CALL eosio_assert(((int_64)*(*($46 + [588]) + [8]) != (int_64)*($46 + [648])), [3952])
	$2 = *($25)
	if ( (int_64)($2 == 0) ){ goto $label$33 }
	CALL eosio_assert(((int_64)*(*($46 + [588]) + [8]) == (int_64)$2), [3968])
	
.LABEL $label$33
	$41 = *($46 + [588])
	CALL $350(*($26), *($41 + [8]), *($41))
	CALL $228(*($26), *($46 + [648]), *(*($46 + [588]) + [32]), [3])
	$2 = *($46 + [584])
	$41 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	$20 = ((int_32)$41) != (int_32)[0]
	CALL eosio_assert($20), [2224])
	CALL eosio_assert($20, [960])
	$20 = CALL db_next_i64(*($41 + [40]), ($46 + [144]))
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$34 }
	CALL $349((CASTING uint_32)(uint_64 $2), $20)
	
.LABEL $label$34
	CALL $358($4, $41)
	$2 = *($1)
	$41 = *($46 + [588])
	$44 = *($41 + [8])
	$42 = *(($41 + [24]))
	*($27) = $42
	*($46 + [568]) = *($41 + [16])
	CALL eosio_assert(((int_64)$42 == (int_64)1397703940), [3504])
	$40 = ((int_64)*($46 + [568]) + (int_64)$40)
	CALL eosio_assert(((int_64)$40 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)$40 < (int_64)4611686018427387904), [3584])
	$42 = CALL current_time()
	$41 = *([0] + [12])
	CALL eosio_assert([1], [1248])
	$28 = ((int_64)$44 == (int_64)$2)
	$18 = ( [0] ? [5] : $28 )
	$21 = ((CASTING uint_32)(uint_64 ((uint_64)$42 / (uint_64)(int_64)1000000)) - $41)
	$2 = (int_64)5462355
	$41 = [0]
	
.LOOP $label$37:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$36 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$38 }
	
.LOOP $label$39:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$36 }
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$39 }
	
.LABEL $label$38
	$20 = [1]
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	$20 = [0]
	
.LABEL $label$35
	CALL eosio_assert($20, [1120])
	$41 = *($46 + [588])
	$2 = *($41)
	$44 = *($46 + [648])
	*($46 + [480]) = $21
	$20 = *($29)
	$42 = *(($41 + [24]))
	$43 = *($41 + [16])
	$17 = *($41 + [32])
	*((($46 + [480]) + [8])) = $44
	*((($46 + [480]) + [16])) = [2]
	*(($5 + [2])) = *((($46 + [565]) + [2]))
	*($5) = *($46 + [565 align=1])
	*($30) = $2
	*((($46 + [480]) + [24])) = $17
	*($31) = [0]
	*((($46 + [480]) + [32])) = [0]
	*($32) = [0]
	*(($6 + [4])) = *((($46 + [558]) + [4]))
	*($6) = *($46 + [558 align=2])
	*((($46 + [480]) + [40])) = $43
	*((($46 + [480]) + [48])) = $42
	*((($46 + [480]) + [56])) = $18
	*(($7 + [6])) = *((($46 + [551]) + [6]))
	*(($7 + [4])) = *((($46 + [551]) + [4]))
	*($7) = *($46 + [551 align=1])
	$2 = *($41 + [8])
	CALL memcpy(($46 + [80]), ($46 + [480]), [64])
	CALL $359($20, ($46 + [80]), $2)
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5462355
	$41 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	
.LOOP $label$44:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$44 }
	
.LABEL $label$43
	$20 = [1]
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	$20 = [0]
	
.LABEL $label$40
	CALL eosio_assert($20, [1120])
	$20 = *($29)
	$41 = *($46 + [588])
	$2 = *(($41 + [24]))
	$44 = *($41 + [16])
	$17 = *($41 + [32])
	$42 = *($41)
	$43 = *($41 + [8])
	*($46 + [408]) = $21
	*((($46 + [408]) + [8])) = $43
	*((($46 + [408]) + [16])) = [2]
	*(($8 + [2])) = *((($46 + [477]) + [2]))
	*($8) = *($46 + [477 align=1])
	*((($46 + [408]) + [20])) = $42
	*((($46 + [408]) + [24])) = $17
	*((($46 + [408]) + [28])) = [0]
	*((($46 + [408]) + [32])) = [0]
	*((($46 + [408]) + [33])) = [0]
	*(($9 + [4])) = *((($46 + [470]) + [4]))
	*($9) = *($46 + [470 align=2])
	*((($46 + [408]) + [40])) = $44
	*((($46 + [408]) + [48])) = $2
	$2 = *($46 + [648])
	CALL memcpy(($46 + [24]), ($46 + [408]), [56])
	CALL $322($20, ($46 + [24]), $2)
	*((($46 + [368]) + [16])) = (int_64)-1
	*(($17 = (($46 + [368]) + [24]))) = (int_64)0
	*((($46 + [368]) + [32])) = [0]
	$2 = *($1)
	*((($46 + [368]) + [8])) = $2
	*($46 + [368]) = $2
	$41 = CALL db_find_i64($2, $2, (int_64)-7947908067083943936, *(*($46 + [588]) + [32]))
	if ( ((int_32)$41 <= (int_32)[-1]) ){ goto $label$46 }
	$41 = CALL $352(($46 + [368]), $41)
	CALL eosio_assert(((int_32)*($41 + [24]) == (int_32)($46 + [368])), [32])
	$2 = *($1)
	*($46 + [144]) = ($46 + [568])
	CALL eosio_assert([1], [352])
	CALL $353(($46 + [368]), $41, $2, ($46 + [144]))
	goto $label$45 
	
.LABEL $label$46
	$2 = *($1)
	*($46 + [148]) = ($46 + [568])
	*($46 + [144]) = ($46 + [584])
	CALL $351(($46 + [328]), ($46 + [368]), $2, ($46 + [144]))
	
.LABEL $label$45
	$2 = *($1)
	*((($46 + [328]) + [8])) = $2
	*((($46 + [328]) + [16])) = (int_64)-1
	*(($33 = (($46 + [328]) + [24]))) = (int_64)0
	*((($46 + [328]) + [32])) = [0]
	*($46 + [328]) = $2
	$41 = CALL db_find_i64($2, $2, (int_64)-7947908067083419648, *(*($46 + [588]) + [32]))
	if ( ((int_32)$41 <= (int_32)[-1]) ){ goto $label$48 }
	$41 = CALL $355(($46 + [328]), $41)
	CALL eosio_assert(((int_32)*($41 + [32]) == (int_32)($46 + [328])), [32])
	$2 = *($1)
	*($46 + [144]) = ($46 + [568])
	CALL eosio_assert([1], [352])
	CALL $356(($46 + [328]), $41, $2, ($46 + [144]))
	goto $label$47 
	
.LABEL $label$48
	$2 = *($1)
	*($46 + [148]) = ($46 + [568])
	*($46 + [144]) = ($46 + [584])
	CALL $354(($46 + [208]), ($46 + [328]), $2, ($46 + [144]))
	
.LABEL $label$47
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5459781
	$41 = [0]
	
.LOOP $label$53:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$51 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$55 }
	
.LOOP $label$56:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$54 }
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$56 }
	
.LABEL $label$55
	$20 = [1]
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$54
	$20 = [0]
	
.LABEL $label$52
	CALL eosio_assert($20, [1120])
	if ( $28 ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$51
	CALL eosio_assert([0], [1120])
	if ( $28 ){ goto $label$49 }
	
.LABEL $label$50
	$2 = *($46 + [568])
	CALL __multi3(($46 + [8]), $2, (int_64)$2 >> (int_64)63), (CASTING uint_64)(uint_32 $18), (int_64)0)
	$42 = *($27)
	$44 = *((($46 + [8]) + [8]))
	$2 = *($46 + [8])
	CALL eosio_assert(( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$44 < (int_64)0) : (int_64)($44 == 0) ), [4000])
	CALL eosio_assert(( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$44 > (int_64)-1) : ((int_64)$44 == (int_64)-1) ), [4032])
	CALL eosio_assert([1], [4064])
	CALL eosio_assert([1], [4080])
	CALL eosio_assert(((int_64)$42 == (int_64)*($27)), [2688])
	$2 = ( (int_64)1 ? ((int_64)$2 / (int_64)100) : (uint_64)(((int_64)$2 + (int_64)99) <= (int_64)199) )
	if ( ((int_64)*($46 + [568]) <= (int_64)$2) ){ goto $label$57 }
	CALL eosio_assert(((int_64)$42 == (int_64)*($27)), [3360])
	$44 = (int_64)
	*($46 + [568]) = $44(*($46 + [568]) - $2))
	CALL eosio_assert(((int_64)$44 > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)*($46 + [568]) < (int_64)4611686018427387904), [3440])
	
.LABEL $label$57
	CALL eosio_assert(((int_64)$42 == (int_64)*(($0 + [8]))), [3504])
	$2 = ((int_64)*($0) + (int_64)$2)
	*($0) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [3584])
	
.LABEL $label$49
	*(($28 = (($46 + [296]) + [8]))) = [0]
	*($46 + [296]) = (int_64)0
	$41 = CALL strlen([4112])
	if ( ((uint_32)$41 >= (uint_32)[-16]) ){ goto $label$23 }
	if ( ((uint_32)$41 >= (uint_32)[11]) ){ goto $label$60 }
	*($46 + [296]) = ($41 << [1])
	$20 = $10
	if ( $41 ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$60
	$21 = (($41 + [16]) & [-16])
	$20 = CALL $866($21)
	*($28) = $20
	*($46 + [296]) = ($21 | [1])
	*($46 + [300]) = $41
	
.LABEL $label$59
	CALL memcpy($20, [4112], $41)
	
.LABEL $label$58
	*(($20 + $41)) = [0]
	CALL _ZNSt3__19to_stringEi(($46 + [280]), *(*($46 + [588]) + [32]))
	$41 = *($46 + [280])
	$20 = ($41 & [1])
	$34 = (($46 + [280]) + [8])
	$41 = CALL $872(($46 + [296]), ( *($34) ? $11 : $20 ), ( *($46 + [284]) ? uint_32($41 >> [1]) : $20 ))
	$20 = ($41 + [8])
	*(($35 = (($46 + [656]) + [8]))) = *($20)
	*($46 + [656]) = *($41)
	*($41) = [0]
	*(($41 + [4])) = [0]
	*($20) = [0]
	$41 = CALL $873(($46 + [656]), [1424])
	$20 = ($41 + [8])
	*(($21 = (($46 + [192]) + [8]))) = *($20)
	*($46 + [192]) = *($41)
	*($41) = [0]
	*(($41 + [4])) = [0]
	*($20) = [0]
	CALL _ZNSt3__19to_stringEy(($46 + [264]), *(*($46 + [588])))
	$41 = *($46 + [264])
	$20 = ($41 & [1])
	$36 = (($46 + [264]) + [8])
	$41 = CALL $872(($46 + [192]), ( *($36) ? $12 : $20 ), ( *($46 + [268]) ? uint_32($41 >> [1]) : $20 ))
	$20 = ($41 + [8])
	*(($37 = (($46 + [208]) + [8]))) = *($20)
	*($46 + [208]) = *($41)
	*($41) = [0]
	*(($41 + [4])) = [0]
	*($20) = [0]
	$41 = CALL $873(($46 + [208]), [1424])
	$20 = ($41 + [8])
	*(($18 = (($46 + [144]) + [8]))) = *($20)
	*($46 + [144]) = *($41)
	*($41) = [0]
	*(($41 + [4])) = [0]
	*($20) = [0]
	CALL $357(($46 + [248]), ($46 + [648]))
	$41 = *($46 + [248])
	$20 = ($41 & [1])
	$38 = (($46 + [248]) + [8])
	$41 = CALL $872(($46 + [144]), ( *($38) ? $13 : $20 ), ( *($46 + [252]) ? uint_32($41 >> [1]) : $20 ))
	$20 = ($41 + [8])
	*(($39 = (($46 + [312]) + [8]))) = *($20)
	*($46 + [312]) = *($41)
	*($41) = [0]
	*(($41 + [4])) = [0]
	*($20) = [0]
	if ( ((*($46 + [248]) & [1]) == 0) ){ goto $label$61 }
	CALL $867(*($38))
	
.LABEL $label$61
	if ( ((*($46 + [144]) & [1]) == 0) ){ goto $label$62 }
	CALL $867(*($18))
	
.LABEL $label$62
	if ( ((*($46 + [208]) & [1]) == 0) ){ goto $label$63 }
	CALL $867(*($37))
	
.LABEL $label$63
	if ( ((*($46 + [264]) & [1]) == 0) ){ goto $label$64 }
	CALL $867(*($36))
	
.LABEL $label$64
	if ( ((*($46 + [192]) & [1]) == 0) ){ goto $label$65 }
	CALL $867(*($21))
	
.LABEL $label$65
	if ( ((*($46 + [656]) & [1]) == 0) ){ goto $label$66 }
	CALL $867(*($35))
	
.LABEL $label$66
	if ( ((*($46 + [280]) & [1]) == 0) ){ goto $label$67 }
	CALL $867(*($34))
	
.LABEL $label$67
	if ( ((*($46 + [296]) & [1]) == 0) ){ goto $label$68 }
	CALL $867(*($28))
	
.LABEL $label$68
	$19 = *($1)
	$2 = (int_64)0
	$42 = (int_64)59
	$41 = [1152]
	$43 = (int_64)0
	
.LOOP $label$69:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$74 }
	$20 = *($41)
	if ( ((uint_32)(($20 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$73 }
	$20 = ($20 + [165])
	goto $label$72 
	
.LABEL $label$74
	$44 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$73
	$20 = ( ($20 + [208]) ? [0] : ((($20 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$72
	$44 = (int_64)((int_64)(CASTING uint_64)(uint_32 $20) << (int_64)56) >> (int_64)56)
	
.LABEL $label$71
	$44 = ((int_64)((int_64)$44 & (int_64)31) << (int_64)((int_64)$42 & (int_64)4294967295))
	
.LABEL $label$70
	$41 = ($41 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$43 = ((int_64)$44 | (int_64)$43)
	$42 = ((int_64)$42 + (int_64)-5)
	if ( ((int_64)$42 != (int_64)-6) ){ goto $label$69 }
	*($21) = $43
	*($46 + [192]) = $19
	$2 = (int_64)0
	$42 = (int_64)59
	$41 = [1824]
	$43 = (int_64)0
	
.LOOP $label$75:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$80 }
	$20 = *($41)
	if ( ((uint_32)(($20 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$79 }
	$20 = ($20 + [165])
	goto $label$78 
	
.LABEL $label$80
	$44 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$79
	$20 = ( ($20 + [208]) ? [0] : ((($20 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$78
	$44 = (int_64)((int_64)(CASTING uint_64)(uint_32 $20) << (int_64)56) >> (int_64)56)
	
.LABEL $label$77
	$44 = ((int_64)((int_64)$44 & (int_64)31) << (int_64)((int_64)$42 & (int_64)4294967295))
	
.LABEL $label$76
	$41 = ($41 + [1])
	$42 = ((int_64)$42 + (int_64)-5)
	$43 = ((int_64)$44 | (int_64)$43)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$75 }
	$2 = (int_64)0
	$42 = (int_64)59
	$41 = [1184]
	$45 = (int_64)0
	
.LOOP $label$81:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$86 }
	$20 = *($41)
	if ( ((uint_32)(($20 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$85 }
	$20 = ($20 + [165])
	goto $label$84 
	
.LABEL $label$86
	$44 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$85
	$20 = ( ($20 + [208]) ? [0] : ((($20 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$84
	$44 = (int_64)((int_64)(CASTING uint_64)(uint_32 $20) << (int_64)56) >> (int_64)56)
	
.LABEL $label$83
	$44 = ((int_64)((int_64)$44 & (int_64)31) << (int_64)((int_64)$42 & (int_64)4294967295))
	
.LABEL $label$82
	$41 = ($41 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$44 | (int_64)$45)
	$42 = ((int_64)$42 + (int_64)-5)
	if ( ((int_64)$42 != (int_64)-6) ){ goto $label$81 }
	*($18) = *(*($46 + [588]) + [8])
	*(($14 + [4])) = *($46 + [572])
	*($46 + [144]) = $19
	*($14) = *($46 + [568])
	*(($14 + [12])) = *((($46 + [568]) + [12]))
	*(($14 + [8])) = *($27)
	CALL $883($15, ($46 + [312]))
	CALL $65(($46 + [656]), CALL $66(($46 + [208]), ($46 + [192]), $43, $45, ($46 + [144])))
	$41 = *($46 + [656])
	CALL send_inline($41, (*($46 + [660]) - $41))
	$41 = *($46 + [656])
	if ( ($41 == 0) ){ goto $label$87 }
	*($46 + [660]) = $41
	CALL $867($41)
	
.LABEL $label$87
	$41 = *((($46 + [208]) + [28]))
	if ( ($41 == 0) ){ goto $label$88 }
	*((($46 + [208]) + [32])) = $41
	CALL $867($41)
	
.LABEL $label$88
	$41 = *((($46 + [208]) + [16]))
	if ( ($41 == 0) ){ goto $label$89 }
	*((($46 + [208]) + [20])) = $41
	CALL $867($41)
	
.LABEL $label$89
	if ( ((*($15) & [1]) == 0) ){ goto $label$90 }
	CALL $867(*((($46 + [144]) + [40])))
	
.LABEL $label$90
	if ( ((*($46 + [312]) & [1]) == 0) ){ goto $label$91 }
	CALL $867(*($39))
	
.LABEL $label$91
	$21 = *($33)
	if ( ($21 == 0) ){ goto $label$92 }
	$18 = (($46 + [328]) + [28])
	$41 = *($18)
	if ( ((int_32)$41 == (int_32)$21) ){ goto $label$94 }
	
.LOOP $label$95:
	$41 = ($41 + [-24])
	$20 = *($41)
	*($41) = [0]
	if ( ($20 == 0) ){ goto $label$96 }
	CALL $867($20)
	
.LABEL $label$96
	if ( ((int_32)$21 != (int_32)$41) ){ goto $label$95 }
	$41 = *($33)
	goto $label$93 
	
.LABEL $label$94
	$41 = $21
	
.LABEL $label$93
	*($18) = $21
	CALL $867($41)
	
.LABEL $label$92
	$21 = *($17)
	if ( ($21 == 0) ){ goto $label$97 }
	$18 = (($46 + [368]) + [28])
	$41 = *($18)
	if ( ((int_32)$41 == (int_32)$21) ){ goto $label$99 }
	
.LOOP $label$100:
	$41 = ($41 + [-24])
	$20 = *($41)
	*($41) = [0]
	if ( ($20 == 0) ){ goto $label$101 }
	CALL $867($20)
	
.LABEL $label$101
	if ( ((int_32)$21 != (int_32)$41) ){ goto $label$100 }
	$41 = *($17)
	goto $label$98 
	
.LABEL $label$99
	$41 = $21
	
.LABEL $label$98
	*($18) = $21
	CALL $867($41)
	
.LABEL $label$97
	$41 = *($46 + [632])
	$16 = ($16 + [1])
	if ( ($16 <= ((int_32)(*($46 + [636]) - $41) / (int_32)[12])) ){ goto $label$25 }
	
.LABEL $label$24
	CALL eosio_assert(((int_64)*($3 + [48]) == (int_64)$40), [3920])
	$21 = *($46 + [616])
	if ( ($21 == 0) ){ goto $label$102 }
	$18 = ($46 + [620])
	$41 = *($18)
	if ( ((int_32)$41 == (int_32)$21) ){ goto $label$104 }
	
.LOOP $label$105:
	$41 = ($41 + [-24])
	$20 = *($41)
	*($41) = [0]
	if ( ($20 == 0) ){ goto $label$106 }
	CALL $867($20)
	
.LABEL $label$106
	if ( ((int_32)$21 != (int_32)$41) ){ goto $label$105 }
	$41 = *(($46 + [616]))
	goto $label$103 
	
.LABEL $label$104
	$41 = $21
	
.LABEL $label$103
	*($18) = $21
	CALL $867($41)
	
.LABEL $label$102
	$21 = *($46 + [632])
	if ( ($21 == 0) ){ goto $label$107 }
	$41 = *($46 + [636])
	if ( ((int_32)$41 == (int_32)$21) ){ goto $label$109 }
	$20 = ([0] - $21)
	$41 = ($41 + [-12])
	
.LOOP $label$110:
	if ( ((*($41) & [1]) == 0) ){ goto $label$111 }
	CALL $867(*(($41 + [8])))
	
.LABEL $label$111
	$41 = ($41 + [-12])
	if ( ((int_32)($41 + $20) != (int_32)[-12]) ){ goto $label$110 }
	$41 = *($46 + [632])
	goto $label$108 
	
.LABEL $label$109
	$41 = $21
	
.LABEL $label$108
	*($46 + [636]) = $21
	CALL $867($41)
	
.LABEL $label$107
	*([0] + [4]) = ($46 + [672])
	return (unreachable)
	
.LABEL $label$23
	CALL $868(($46 + [296]))
}

void .FUNC $319 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [192])
	*([0] + [4]) = $11
	CALL require_auth($1)
	$3 = *($0 + [24])
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$1 }
	$10 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$1 }
	$5 = $10
	$6 = ($10 + [-24])
	$10 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$4 }
	$4 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$0), [32])
	goto $label$3 
	
.LABEL $label$4
	$4 = [0]
	$10 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $13($0, $10)
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$0), [32])
	
.LABEL $label$3
	$10 = [0]
	$3 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($3, [192])
	$5 = (*($4 + [9]) + [1])
	*($11 + [191]) = $5
	CALL eosio_assert((($5 & [254]) <= [6]), [3760])
	*(($11 + [176])) = [0]
	*($11 + [160]) = (int_64)-1
	*($11 + [168]) = (int_64)0
	$9 = *($0 + [40])
	*($11 + [144]) = $9
	*($11 + [152]) = $9
	$6 = [0]
	$5 = CALL db_find_i64($9, $9, (int_64)-4745865096314322944, (CASTING uint_64)(uint_32 ($5 & [255])))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $321(($11 + [144]), $5)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)($11 + [144])), [32])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [3792])
	CALL eosio_assert(((int_64)*($2) == (int_64)*($6 + [8])), [3808])
	$7 = *(($0 + [40]))
	CALL eosio_assert([1], [1248])
	$9 = (int_64)5462355
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [1120])
	$9 = CALL current_time()
	$8 = *(($6 + [8]))
	$10 = *($11 + [191])
	*($11 + [72]) = ((CASTING uint_32)(uint_64 ((uint_64)$9 / (uint_64)(int_64)1000000)) - *([0] + [12]))
	*($11 + [80]) = $7
	$9 = *(($6 + [16]))
	*($11 + [88]) = [6]
	$6 = *($0 + [48])
	*(($11 + [91])) = *(($11 + [143]))
	*($11 + [89 align=1]) = *($11 + [141 align=1])
	*($11 + [92]) = $10
	*($11 + [96]) = [0]
	*($11 + [100]) = [0]
	*($11 + [104]) = [0]
	*($11 + [105]) = [0]
	*(($11 + [110])) = *(($11 + [138]))
	*($11 + [106 align=2]) = *($11 + [134 align=2])
	*($11 + [112]) = $8
	*(($11 + [120])) = $9
	CALL memcpy(($11 + [8]), ($11 + [72]), [56])
	CALL $322($6, ($11 + [8]), $1)
	$9 = *(($0 + [40]))
	*($11 + [64]) = ($11 + [191])
	CALL eosio_assert($3, [352])
	CALL $347($0, $4, $9, ($11 + [64]))
	$5 = *($11 + [168])
	if ( ($5 == 0) ){ goto $label$11 }
	$4 = ($11 + [172])
	$10 = *($4)
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$13 }
	
.LOOP $label$14:
	$10 = ($10 + [-24])
	$6 = *($10)
	*($10) = [0]
	if ( ($6 == 0) ){ goto $label$15 }
	CALL $867($6)
	
.LABEL $label$15
	if ( ((int_32)$5 != (int_32)$10) ){ goto $label$14 }
	$10 = *(($11 + [168]))
	goto $label$12 
	
.LABEL $label$13
	$10 = $5
	
.LABEL $label$12
	*($4) = $5
	CALL $867($10)
	
.LABEL $label$11
	*([0] + [4]) = ($11 + [192])
}

int_32 .FUNC $253 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [20]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $252 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [12]) = (*($1 + [12]) + *(*($3)))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [24])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $253(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [24])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $255 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $254 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $257 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	*($0) = *(*($4))
	$1 = *($2)
	$3 = *(*($4 + [4]))
	*($0 + [8]) = $3
	*(*($4 + [8])) = $3
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $0, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($0 + [8]), [8])
	$3 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)-7947854319494103040, *(*($2 + [8])), $3, $5, [16])
	if ( (uint_64)($3 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
	return $0
}

void .FUNC $256 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $406 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	*($0) = *(*($4))
	$1 = *($2)
	*($0 + [8]) = *(*($4 + [4]))
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $0, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($0 + [8]), [8])
	$3 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)8526770281144909824, *(*($2 + [8])), $3, $5, [16])
	if ( (uint_64)($3 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
	return $0
}

void .FUNC $696 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [32])
	*([0] + [4]) = $14
	CALL require_auth($1)
	$13 = *(($5 + [32]))
	$5 = *($0 + [60])
	$6 = *(($5 + [36]))
	if ( ((int_32)$6 == (int_32)$13) ){ goto $label$1 }
	$10 = ($6 + [-24])
	$7 = ([0] - $13)
	
.LOOP $label$2:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$1 }
	$6 = $10
	$3 = ($10 + [-24])
	$10 = $3
	if ( ((int_32)($3 + $7) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$10 = ($5 + [8])
	if ( ((int_32)$6 == (int_32)$13) ){ goto $label$4 }
	$11 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$10), [32])
	goto $label$3 
	
.LABEL $label$4
	$11 = [0]
	$3 = CALL db_find_i64(*(($5 + [8])), *(($5 + [16])), (int_64)8526756653867991040, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$11 = CALL $386($10, $3)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$10), [32])
	
.LABEL $label$3
	$4 = *($10)
	$8 = ($0 + [60])
	$12 = *($8)
	$10 = ( ($11 + [12]) ? ($12 + [68]) : $11 )
	$10 = (*($10 + [4]) - $4)
	if ( ((int_32)$10 < (int_32)[20]) ){ goto $label$6 }
	$3 = (((uint_32)$10 / (uint_32)[20]) + [-1])
	$10 = [0]
	
.LOOP $label$7:
	$5 = ($3 - $10)
	$6 = (((int_32)$5 / (int_32)[2]) + $10)
	$13 = ($4 + ((int_32)$6 * (int_32)[20]))
	$7 = *($13)
	if ( ($7 <= $2) ){ goto $label$8 }
	if ( ((uint_32)$7 <= (uint_32)$2) ){ goto $label$5 }
	$3 = ($6 + [-1])
	if ( ((int_32)$5 > (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$10 = ($6 + [1])
	if ( ((int_32)$3 > (int_32)$6) ){ goto $label$7 }
	
.LABEL $label$6
	CALL eosio_assert([0], [7184])
	$13 = ($12 + [80])
	$12 = *($8)
	
.LABEL $label$5
	$10 = *($13 + [6])
	*($14 + [28]) = $2
	*($14 + [27]) = [0]
	*($14 + [26]) = [0]
	$9 = *($12)
	*($14 + [12]) = ($14 + [27])
	*($14 + [8]) = ($14 + [28])
	*($14 + [16]) = ($14 + [26])
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [352])
	CALL $697(($12 + [8]), $11, $9, ($14 + [8]))
	CALL eosio_assert(*($14 + [26]), [4384])
	CALL $608($0, $1, $10)
	*([0] + [4]) = ($14 + [32])
}

int_32 .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [144])
	*([0] + [4]) = $3
	*(($2 = $3) + [108]) = $0
	*($2 + [96]) = *($1)
	*($2 + [100]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [24])) = [0]
	*($2 + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [16]) = (int_64)0
	CALL memset(($2 + [28]), [0], [66])
	*($2 + [116]) = $1
	*($2 + [112]) = $1
	*($2 + [120]) = ($1 + $0)
	*($2 + [128]) = ($2 + [112])
	*($2 + [136]) = $2
	CALL $770(($2 + [136]), ($2 + [128]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [116]) = ($2 + [96])
	*($2 + [112]) = ($2 + [108])
	CALL $771(($2 + [112]), $2)
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*(($2 + [24])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [144])
	return [1]
}

void .FUNC $139 (int_32 $0, int_64 $1, int_64 $2)
{
	$0 = ($0 + [600])
	CALL $212($0, $1)
	CALL $763($0, $1, $2)
}

int_32 .FUNC $428 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([40]))) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [16]) = [0]
	*($6 + [20]) = [0]
	*($6 + [24]) = $0
	CALL $449(($8 + [32]), $6)
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $450(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $429 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([32]))) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16]) = [0]
	*($3 + [20]) = $1
	CALL $448(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [24])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $265(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [12])) = $1
	CALL $867($1)
	
.LABEL $label$4
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $698 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [64])
	*([0] + [4]) = $18
	CALL require_auth($1)
	CALL eosio_assert(((($2 + [-1]) & [255]) <= [3]), [4528])
	CALL _ZN13admin_control15check_blacklistEN5eosio4nameE(*($0 + [76]), $1)
	$6 = *(($15 + [32]))
	$15 = *($0 + [60])
	$17 = *(($15 + [36]))
	if ( ((int_32)$17 == (int_32)$6) ){ goto $label$1 }
	$16 = ($17 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$2:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$1 }
	$17 = $16
	$8 = ($16 + [-24])
	$16 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$16 = ($15 + [8])
	if ( ((int_32)$17 == (int_32)$6) ){ goto $label$4 }
	$13 = *(($17 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$16), [32])
	goto $label$3 
	
.LABEL $label$4
	$13 = [0]
	$8 = CALL db_find_i64(*(($15 + [8])), *(($15 + [16])), (int_64)8526756653867991040, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$13 = CALL $386($16, $8)
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$16), [32])
	
.LABEL $label$3
	$14 = *($4)
	$9 = *(($0 + [60]))
	$4 = ( ($13 + [12]) ? ($9 + [68]) : $13 )
	$16 = (*($4 + [4]) - $14)
	if ( ((int_32)$16 < (int_32)[20]) ){ goto $label$6 }
	$8 = (((uint_32)$16 / (uint_32)[20]) + [-1])
	$16 = [0]
	
.LOOP $label$7:
	$15 = ($8 - $16)
	$17 = (((int_32)$15 / (int_32)[2]) + $16)
	$6 = ($14 + ((int_32)$17 * (int_32)[20]))
	$7 = *($6)
	if ( ($7 <= $3) ){ goto $label$8 }
	if ( ((uint_32)$7 <= (uint_32)$3) ){ goto $label$5 }
	$8 = ($17 + [-1])
	if ( ((int_32)$15 > (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$16 = ($17 + [1])
	if ( ((int_32)$8 > (int_32)$17) ){ goto $label$7 }
	
.LABEL $label$6
	CALL eosio_assert([0], [7184])
	$6 = ($9 + [80])
	
.LABEL $label$5
	CALL eosio_assert((*($6 + [16]) == 0), [7312])
	$8 = [0]
	*(($18 + [32])) = [0]
	*($18 + [24]) = (int_64)0
	*($18 + [16]) = (int_64)-1
	$5 = *($0 + [8])
	*($18) = $5
	*($18 + [8]) = $5
	$14 = [0]
	$16 = CALL db_find_i64($5, $5, (int_64)-4921685625297436672, *($6 + [4]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$9 }
	$14 = CALL $621($18, $16)
	CALL eosio_assert(((int_32)*($14 + [56]) == (int_32)$18), [32])
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [6448])
	$16 = *($14 + [9])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$11 }
	if ( ((int_32)($16 & [255]) == (int_32)[2]) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$12 }
	if ( ((int_32)($16 & [255]) == (int_32)[3]) ){ goto $label$10 }
	
.LABEL $label$12
	$8 = (((int_32)$2 == (int_32)[3]) | ((int_32)($16 & [255]) != (int_32)[4]))
	
.LABEL $label$10
	CALL eosio_assert($8, [7664])
	$15 = *(($0 + [40]))
	$17 = *(($0 + [44]))
	if ( ((int_32)$17 == (int_32)$15) ){ goto $label$13 }
	$16 = ($17 + [-24])
	$7 = ([0] - $15)
	
.LOOP $label$14:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$13 }
	$17 = $16
	$8 = ($16 + [-24])
	$16 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$14 }
	
.LABEL $label$13
	$16 = ($0 + [16])
	if ( ((int_32)$17 == (int_32)$15) ){ goto $label$16 }
	$7 = *(($17 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [20]) == (int_32)$16), [32])
	goto $label$15 
	
.LABEL $label$16
	$7 = [0]
	$8 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$15 }
	$7 = CALL $225($16, $8)
	CALL eosio_assert(((int_32)*($7 + [20]) == (int_32)$16), [32])
	
.LABEL $label$15
	$8 = [0]
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [7696])
	$16 = *($7 + [8])
	$17 = *(($7 + [12]))
	if ( ((int_32)$17 == (int_32)$16) ){ goto $label$18 }
	$17 = int_32(($17 - $16) >> [4])
	
.LOOP $label$19:
	if ( ((int_32)*($16) == (int_32)$2) ){ goto $label$17 }
	$16 = ($16 + [16])
	$8 = ($8 + [1])
	if ( ($8 <= $17) ){ goto $label$19 }
	
.LABEL $label$18
	CALL eosio_assert([0], [6368])
	$16 = *($7 + [8])
	
.LABEL $label$17
	CALL eosio_assert(((uint_32)*($14 + [11]) <= (uint_32)*($16 + [1])), [7728])
	$16 = *($4)
	$9 = ($4 + [4])
	$8 = *($9)
	if ( ((int_32)$8 == (int_32)$16) ){ goto $label$20 }
	$10 = ($18 + [24])
	$11 = ($18 + [28])
	$12 = ($18 + [8])
	$15 = [0]
	
.LOOP $label$22:
	$17 = ($16 + ((int_32)$15 * (int_32)[20]))
	if ( ((int_32)*($17 + [6]) != (int_32)$2) ){ goto $label$23 }
	$5 = *($17 + [4])
	$6 = *($10)
	$17 = *($11)
	if ( ((int_32)$17 == (int_32)$6) ){ goto $label$24 }
	$16 = ($17 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$25:
	if ( ((int_64)*(*($16)) == (int_64)$5) ){ goto $label$24 }
	$17 = $16
	$8 = ($16 + [-24])
	$16 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$25 }
	
.LABEL $label$24
	if ( ((int_32)$17 == (int_32)$6) ){ goto $label$27 }
	$16 = *(($17 + [-24]))
	CALL eosio_assert(((int_32)*($16 + [56]) == (int_32)$18), [32])
	goto $label$26 
	
.LABEL $label$27
	$16 = [0]
	$8 = CALL db_find_i64(*($18), *($12), (int_64)-4921685625297436672, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$26 }
	$16 = CALL $621($18, $8)
	CALL eosio_assert(((int_32)*($16 + [56]) == (int_32)$18), [32])
	
.LABEL $label$26
	CALL eosio_assert(((int_32)$16 != (int_32)[0]), [7776])
	if ( ((int_32)*($16 + [8]) == (int_32)*(($14 + [8]))) ){ goto $label$21 }
	$8 = *($9)
	$16 = *($4)
	
.LABEL $label$23
	$15 = ($15 + [1])
	if ( ($15 <= ((int_32)($8 - $16) / (int_32)[20])) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$16 = *(($0 + [60]))
	*($18 + [60]) = *((*($4) + ((int_32)$15 * (int_32)[20])))
	*($18 + [59]) = [0]
	*($18 + [58]) = [0]
	$5 = *($16)
	*($18 + [44]) = ($18 + [59])
	*($18 + [40]) = ($18 + [60])
	*($18 + [48]) = ($18 + [58])
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [352])
	CALL $697(($16 + [8]), $13, $5, ($18 + [40]))
	CALL eosio_assert(*($18 + [58]), [4384])
	
.LABEL $label$20
	$16 = *(($0 + [60]))
	*($18 + [60]) = $3
	*($18 + [59]) = $2
	$5 = *($16)
	*($18 + [58]) = [0]
	*($18 + [44]) = ($18 + [59])
	*($18 + [40]) = ($18 + [60])
	*($18 + [48]) = ($18 + [58])
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [352])
	CALL $697(($16 + [8]), $13, $5, ($18 + [40]))
	CALL eosio_assert(*($18 + [58]), [4384])
	CALL $608($0, $1, $2)
	$17 = *($18 + [24])
	if ( ($17 == 0) ){ goto $label$28 }
	$7 = ($18 + [28])
	$16 = *($7)
	if ( ((int_32)$16 == (int_32)$17) ){ goto $label$30 }
	
.LOOP $label$31:
	$16 = ($16 + [-24])
	$8 = *($16)
	*($16) = [0]
	if ( ($8 == 0) ){ goto $label$32 }
	CALL $867($8)
	
.LABEL $label$32
	if ( ((int_32)$17 != (int_32)$16) ){ goto $label$31 }
	$16 = *(($18 + [24]))
	goto $label$29 
	
.LABEL $label$30
	$16 = $17
	
.LABEL $label$29
	*($7) = $17
	CALL $867($16)
	
.LABEL $label$28
	*([0] + [4]) = ($18 + [64])
}

void .FUNC $422 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [48]))), [3504])
	$5 = ((int_64)*($1 + [40]) + (int_64)*($3))
	*($1 + [40]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [40]) < (int_64)4611686018427387904), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($6 + [72]) = ($6 + [56])
	*($6 + [68]) = $6
	*($6 + [64]) = $6
	CALL $424(($6 + [64]), $1)
	CALL db_update_i64(*($1 + [60]), $2, $6, [56])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [80])
}

void .FUNC $423 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [48]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [72]) = ($5 + [54])
	*($5 + [68]) = $5
	*($5 + [64]) = $5
	CALL $98(($5 + [64]), $1)
	CALL db_update_i64(*($1 + [68]), $2, $5, [54])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
}

int_32 .FUNC $420 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $866([72])
	$4 = CALL $425($6)
	*($6 + [56]) = $0
	CALL $427(($8 + [32]), $4)
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $426(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $421 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	$4 = CALL $866([72])
	$6 = CALL $425($4)
	*($4 + [56]) = $1
	*($4) = *(*($3))
	$3 = *($3 + [4])
	*(($4 + [52])) = *(($3 + [12]))
	*(($4 + [48])) = *(($3 + [8]))
	*(($4 + [44])) = *(($3 + [4]))
	*($4 + [40]) = *($3)
	*($8 + [88]) = (($8 + [16]) + [56])
	*($8 + [84]) = ($8 + [16])
	*($8 + [80]) = ($8 + [16])
	CALL $424(($8 + [80]), $6)
	$5 = *($4)
	*($4 + [60]) = CALL db_store_i64(*($1 + [8]), (int_64)-4992616317593845760, $2, $5, ($8 + [16]), [56])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [80]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$6 = *($4 + [60])
	*($8 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [80]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $426(($1 + [24]), ($8 + [80]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [80])
	*($8 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $867($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [96])
}

void .FUNC $426 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $427 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $424 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $425 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1397703940
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [32]))) = (int_64)1414222852
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [48]))) = (int_64)1397703940
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [1120])
	return $0
}

int_32 .FUNC $729 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	*($0) = (int_64)0
	*($0 + [8]) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [24]) = (int_64)0
	*($0 + [32]) = [0]
	*($0 + [40]) = (int_64)0
	*($0 + [48]) = $1
	$1 = *($2 + [4])
	*($0) = *(*($1))
	$3 = *($2)
	*($0 + [8]) = *(*($1 + [4]))
	*($0 + [12]) = *(*($1 + [8]))
	*($0 + [16]) = *(*($1 + [12]))
	*($0 + [20]) = *(*($1 + [16]))
	*($0 + [24]) = *(*($1 + [20]))
	*($0 + [28]) = *(*($1 + [24]))
	$4 = *(*($1 + [28]))
	*($0 + [32]) = [1]
	*($0 + [40]) = $4
	*($5 + [56]) = ($5 + [44])
	*($5 + [52]) = $5
	*($5 + [48]) = $5
	CALL $62(($5 + [48]), $0)
	$4 = *($0)
	*($0 + [52]) = CALL db_store_i64(*($3 + [8]), (int_64)-7947854319410216960, *(*($2 + [8])), $4, $5, [44])
	if ( (uint_64)($4 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [64])
	return $0
}

void .FUNC $728 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = (*($1 + [8]) + *(*($3)))
	$4 = *($1)
	*($1 + [12]) = (*($1 + [12]) + *(*($3 + [4])))
	*($1 + [16]) = (*($1 + [16]) + *(*($3 + [8])))
	*($1 + [20]) = (*($1 + [20]) + *(*($3 + [12])))
	*($1 + [24]) = (*($1 + [24]) + *(*($3 + [16])))
	*($1 + [28]) = (*($1 + [28]) + *(*($3 + [20])))
	*($1 + [40]) = ((int_64)*($1 + [40]) + (int_64)*(*($3 + [24])))
	*($1 + [32]) = (*($1 + [32]) + [1])
	CALL eosio_assert([1], [512])
	*($5 + [56]) = ($5 + [44])
	*($5 + [52]) = $5
	*($5 + [48]) = $5
	CALL $62(($5 + [48]), $1)
	CALL db_update_i64(*($1 + [52]), $2, $5, [44])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [64])
}

void .FUNC $8 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC _ZN13admin_control12is_blacklistEN5eosio4nameE (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	$6 = [0]
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$4 = *($0)
	*($7 + [8]) = $4
	*($7 + [16]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)4344997574076792832, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $7(($7 + [8]), $0) + [8]) == (int_32)($7 + [8])), [32])
	$6 = [1]
	$2 = *($7 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	$5 = ($7 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $867($3)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($7 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $2
	
.LABEL $label$2
	*($5) = $2
	CALL $867($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [48])
	return $6
}

void .FUNC _ZN13admin_control15check_blacklistEN5eosio4nameE (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	$5 = [0]
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$3 = *($0)
	*($6 + [8]) = $3
	*($6 + [16]) = $3
	$0 = CALL db_find_i64($3, $3, (int_64)4344997574076792832, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $7(($6 + [8]), $0) + [8]) == (int_32)($6 + [8])), [32])
	goto $label$1 
	
.LABEL $label$2
	$5 = [1]
	
.LABEL $label$1
	CALL eosio_assert($5, [96])
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$3 }
	$4 = ($6 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $867($0)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$6 }
	$5 = *(($6 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	*($4) = $2
	CALL $867($5)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([24])) + [8]) = $0
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $8(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

int_32 .FUNC _ZN13admin_control18calculate_trx_hashEPci (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [64])
	$17 = [0]
	
.LOOP $label$1:
	$3 = ($1 + $17)
	*(($18 + $17)) = ((((*(($3 + [1])) << [8]) | *($3)) | (*(($3 + [2])) << [16])) | (*(($3 + [3])) << [24]))
	$17 = ($17 + [4])
	if ( ((int_32)$17 != (int_32)[64]) ){ goto $label$1 }
	$15 = *($18 + [56])
	$17 = ((rotl((int_32) ((($15 + $17) + (($8 & $1) | ($3 & ((int_32)$8 ^ (int_32)[-1])))) + [-1452850290]))) + [17])
	$16 = *($18 + [60])
	$3 = ((rotl((int_32) ((($16 + $3) + (($17 & $8) | $8)) + ($1 & ((int_32)$17 ^ (int_32)[-1]))))) + [1236535329])
	$12 = *($18 + [40])
	$17 = ((rotl((int_32) ((($12 + $3) + (($8 & $1) | ($17 & ((int_32)$8 ^ (int_32)[-1])))) + [-42063]))) + [17])
	$13 = *($18 + [44])
	$3 = ((rotl((int_32) ((($13 + $17) + (($17 & $8) | $8)) + ($1 & ((int_32)$17 ^ (int_32)[-1]))))) + [-1990404162])
	$1 = ((rotl((int_32) ((($13 + $1) + (($3 & [22]) | $17)) + $17))) + ($8 & ((int_32)$3 ^ (int_32)[-1])))
	$9 = *($18 + [24])
	$3 = ((rotl((int_32) ((($9 + $3) + (($8 & $17) | ($1 & ((int_32)$8 ^ (int_32)[-1])))) + [-1473231341]))) + [17])
	$10 = *($18 + [28])
	$17 = ((rotl((int_32) ((($10 + $1) + (($3 & $8) | $8)) + ($17 & ((int_32)$3 ^ (int_32)[-1]))))) + [-45705983])
	$1 = ((rotl((int_32) ((($10 + $17) + (($17 & [22]) | $3)) + $3))) + ($8 & ((int_32)$17 ^ (int_32)[-1])))
	$5 = *($18 + [8])
	$3 = ((rotl((int_32) (($5 + ((((int_32)$17 ^ (int_32)[-1]) & [-271733879]) | ($17 & $1))) + [-1127338535]))) + [17])
	$6 = *($18 + [12])
	$1 = ((rotl((int_32) (($6 + (($3 & $17) | $17)) + ($1 & ((int_32)$3 ^ (int_32)[-1]))))) + [-1142322569])
	$17 = ((rotl((int_32) ((($3 + $1) + (($1 & [22]) | $3)) + $3))) + ($17 & ((int_32)$1 ^ (int_32)[-1])))
	$17 = (rotl((int_32) ($17 + [-683891593])))
	$1 = ($17 + [7])
	$4 = *($18 + [4])
	$17 = ((rotl((int_32) (($4 + (($1 & [-271733879]) | [-271733879])) + (([271733878] - $17) & [-1733444354])))) + [-116728628])
	$7 = *($18 + [20])
	$8 = ((rotl((int_32) ((($7 + $17) + [12]) + $1))) + (($17 & [-176418897]) | [7]))
	$11 = *($18 + [36])
	$8 = ((rotl((int_32) ((($11 + $8) + $1) + $1))) + ($3 & ((int_32)$17 ^ (int_32)[-1])))
	$14 = *($18 + [52])
	$8 = ((rotl((int_32) ((($14 + $8) + [1199343146]) + [12]))) + $17)
	$10 = *($18 + [32])
	$1 = ((rotl((int_32) ((($10 + $8) + (($1 & [1770035416]) | [7])) + $17))) + $17)
	$3 = *($18 + [16])
	$1 = ((rotl((int_32) ((($3 + $1) + ($3 & ((int_32)$1 ^ (int_32)[-1]))) + [-1958414417]))) + [12])
	$17 = *($18)
	$1 = ((rotl((int_32) ((($17 + $1) + $1) + (($1 & [1795234082]) | [7])))) + $3)
	$13 = *($18 + [48])
	$1 = ((rotl((int_32) ((($13 + $1) + $3) + ($17 & ((int_32)$1 ^ (int_32)[-1]))))) + [-40341101])
	((int_32)((int_32)((int_32)($1 + [12]) ^ (int_32)$1) ^ (int_32)((int_32)((int_32)$3 ^ (int_32)[22]) ^ (int_32)$17)) ^ (int_32)$17)
	($18 = ((rotl((int_32) ((($7 + $1) + ((int_32)((int_32)$17 ^ (int_32)$8) ^ (int_32)$3)) + [-378558]))) + [4]))
	$3
	[-2027985023]
	[11]
	$18
	$17 = ((rotl((int_32) ((($13 + $17) + ((int_32)((int_32)$18 ^ (int_32)$3) ^ (int_32)$1)) + [1839030562]))) + [16])
	$3 = ((rotl((int_32) ((($15 + $3) + ((int_32)((int_32)$1 ^ (int_32)$18) ^ (int_32)$17)) + $1))) + [-169986036])
	((int_32)((int_32)$3 ^ (int_32)[23]) ^ (int_32)$17)
	$17
	($18 = ((rotl((int_32) ((($4 + $18) + ((int_32)((int_32)$17 ^ (int_32)$1) ^ (int_32)$3)) + [-1530992060]))) + [4]))
	$3
	[1272638713]
	[11]
	$18
	$17 = ((rotl((int_32) ((($10 + $17) + ((int_32)((int_32)$18 ^ (int_32)$3) ^ (int_32)$1)) + [-155497632]))) + [16])
	$3 = ((rotl((int_32) ((($12 + $3) + ((int_32)((int_32)$1 ^ (int_32)$18) ^ (int_32)$17)) + $1))) + [-1093928080])
	((int_32)((int_32)$3 ^ (int_32)[23]) ^ (int_32)$17)
	$17
	($18 = ((rotl((int_32) ((($14 + $18) + ((int_32)((int_32)$17 ^ (int_32)$1) ^ (int_32)$3)) + [681279174]))) + [4]))
	$3
	[-358537222]
	[11]
	$18
	$17 = ((rotl((int_32) ((($6 + $17) + ((int_32)((int_32)$18 ^ (int_32)$3) ^ (int_32)$1)) + [-722268539]))) + [16])
	$3 = ((rotl((int_32) ((($9 + $3) + ((int_32)((int_32)$1 ^ (int_32)$18) ^ (int_32)$17)) + $1))) + [76029189])
	((int_32)((int_32)$3 ^ (int_32)[23]) ^ (int_32)$17)
	$17
	($18 = ((rotl((int_32) ((($11 + $18) + ((int_32)((int_32)$17 ^ (int_32)$1) ^ (int_32)$3)) + [-640364487]))) + [4]))
	$3
	[-425870875]
	[11]
	$18
	[272835958]
	($18 + [1732399873])
	$17 = ((rotl((int_32) ((($16 + $17) + ((int_32)((int_32)$18 ^ (int_32)$3) ^ (int_32)$1)) + [522701560]))) + [16])
	($17 + $1)
	[-1733444354]
	(($17 + (rotl((int_32) ((($5 + $3) + ((int_32)$17 ^ (int_32)((int_32)$1 ^ (int_32)$18))) + [-999635611])))) + [23])
	return [-271733879]
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $866([40])) + [8]) = [0]
	*($6) = (int_64)0
	*($6 + [12 align=4]) = (int_64)0
	*($6 + [20]) = [0]
	*($6 + [24]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [160])
	CALL memcpy($6, $4, [8])
	$3 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $3) > (uint_32)[1]), [160])
	CALL memcpy(($6 + [8]), $3, [2])
	*($8 + [36]) = ($4 + [10])
	CALL $20(($8 + [32]), ($6 + [12]))
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $16(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [12])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [16])) = $7
	CALL $867($7)
	
.LABEL $label$10
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	$2 = *($0)
	$7 = *($0 + [4])
	*($1) = *(*($7))
	*($1 + [8]) = *(*(*($7 + [4]) + [4]) + [20])
	$9 = *($7 + [8])
	$7 = ($1 + [16])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)*(($1 + [20]))) ){ goto $label$2 }
	*($6) = *($9)
	$9 = (*($7) + [8])
	*($7) = $9
	$6 = ($1 + [12])
	goto $label$1 
	
.LABEL $label$2
	$6 = ($1 + [12])
	CALL $18($6, $9)
	$9 = *($7)
	
.LABEL $label$1
	$3 = ($1 + [8])
	$4 = *($6)
	$5 = ($9 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	$7 = [10]
	
.LOOP $label$3:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$4 }
	$7 = ((((int_32)uint_32(($5 + [-8]) >> [3]) * (int_32)[6]) + $7) + [6])
	
.LABEL $label$4
	if ( ($7 <= [513]) ){ goto $label$6 }
	$9 = CALL malloc($7)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$5
	*($10) = $9
	$11 = ($9 + $7)
	*($10 + [8]) = $11
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	$4 = ($9 + [8])
	CALL eosio_assert(((int_32)($11 - $4) > (int_32)[1]), [576])
	CALL memcpy($4, $3, [2])
	*($10 + [4]) = ($9 + [10])
	CALL $19($10, $6)
	$8 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)3617335885894254592, *(*($0 + [8])), $8, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL free($9)
	
.LABEL $label$7
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $16 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [12])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [16])) = $6
	CALL $867($6)
	
.LABEL $label$11
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $867($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $17 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	$11 = $12
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$7 = ($1 + [12])
	$6 = *(($3 + [8]))
	$4 = *($1)
	$8 = *(($1 + [16]))
	$9 = *($1 + [12])
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$4 }
	$5 = *(($3 + [4]))
	$3 = *(*($3))
	
.LOOP $label$5:
	if ( ((int_32)*($9) == (int_32)$3) ){ goto $label$3 }
	$9 = ($9 + [8])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$5 }
	$9 = $8
	
.LABEL $label$4
	if ( ((int_32)$9 == (int_32)*(($1 + [20]))) ){ goto $label$2 }
	*($9) = *($6)
	*(($9 = ($1 + [16]))) = (*($9) + [8])
	goto $label$1 
	
.LABEL $label$3
	*(($9 = ($9 + [4]))) = (*($9) + *($5))
	goto $label$1 
	
.LABEL $label$2
	CALL $18($7, $6)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$3 = *(($1 + [12]))
	$8 = *(($1 + [16]))
	$6 = ($8 - $3)
	$10 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	$9 = [10]
	
.LOOP $label$6:
	$9 = ($9 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$7 }
	$9 = ((((int_32)uint_32(($6 + [-8]) >> [3]) * (int_32)[6]) + $9) + [6])
	
.LABEL $label$7
	if ( ($9 <= [513]) ){ goto $label$9 }
	$8 = CALL malloc($9)
	goto $label$8 
	
.LABEL $label$9
	$8 = ($12 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$8
	*($11) = $8
	$3 = ($8 + $9)
	*($11 + [8]) = $3
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [576])
	CALL memcpy($8, $1, [8])
	$12 = ($8 + [8])
	CALL eosio_assert(((int_32)($3 - $12) > (int_32)[1]), [576])
	CALL memcpy($12, ($1 + [8]), [2])
	*($11 + [4]) = ($8 + [10])
	CALL $19($11, $7)
	CALL db_update_i64(*($1 + [28]), $2, $8, $9)
	if ( ($9 <= [513]) ){ goto $label$10 }
	CALL free($8)
	
.LABEL $label$10
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($11 + [16])
}

int_32 .FUNC _ZN13admin_control16special_referralEN5eosio4nameE (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [176]
	$6 = (int_64)0
	
.LOOP $label$1:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	return ((int_64)$6 == (int_64)$1)
}

void .FUNC _ZN16activity_control11add_actpropEN5eosio4nameEii (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [128])
	*([0] + [4]) = $10
	*($10 + [80]) = $1
	*($10 + [76]) = $2
	*($10 + [72]) = $3
	$9 = [0]
	*(($10 + [64])) = [0]
	*($10 + [48]) = (int_64)-1
	*($10 + [56]) = (int_64)0
	$8 = *($0)
	*($10 + [32]) = $8
	*($10 + [40]) = $8
	$2 = CALL db_find_i64($8, $8, (int_64)-5075105024296615936, (CASTING int_64)(int_32 $2))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $12(($10 + [32]), $2)
	CALL eosio_assert(((int_32)*($9 + [20]) == (int_32)($10 + [32])), [32])
	$1 = *($10 + [80])
	
.LABEL $label$1
	$5 = *($4 + [24])
	$4 = *($0 + [92])
	$7 = *(($4 + [28]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$2 = ($7 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$2 }
	$7 = $2
	$3 = ($2 + [-24])
	$2 = $3
	if ( ((int_32)($3 + $6) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$5 }
	$2 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [32])
	*($10 + [28]) = $2
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$6 }
	$2 = CALL $13($4, $2)
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [32])
	*($10 + [28]) = $2
	goto $label$4 
	
.LABEL $label$6
	*($10 + [28]) = [0]
	
.LABEL $label$4
	*($10 + [24]) = $4
	CALL eosio_assert(((uint_64)*($10 + [24]) > (uint_64)(int_64)4294967295), [192])
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [224])
	$1 = *($10 + [80])
	$4 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$7 }
	$2 = ($7 + [-24])
	$6 = ([0] - $4)
	
.LOOP $label$8:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$7 }
	$7 = $2
	$3 = ($2 + [-24])
	$2 = $3
	if ( ((int_32)($3 + $6) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	$3 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$12 }
	$2 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$3), [32])
	if ( $2 ){ goto $label$11 }
	$7 = [1]
	goto $label$9 
	
.LABEL $label$12
	$2 = [0]
	$7 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)3617335885894254592, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$10 }
	$2 = CALL $14($3, $7)
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$3), [32])
	
.LABEL $label$11
	CALL eosio_assert((int_32((*(($2 + [16])) - *($2 + [12])) >> [3]) <= [12]), [256])
	$7 = ($2 == 0)
	goto $label$9 
	
.LABEL $label$10
	$7 = [1]
	
.LABEL $label$9
	*($10 + [16]) = *($10 + [76])
	*($10 + [20]) = *($10 + [72])
	$1 = *($0)
	if ( ($7 == 0) ){ goto $label$17 }
	*($10 + [4]) = ($10 + [24])
	*($10) = ($10 + [80])
	*($10 + [8]) = ($10 + [16])
	*($10 + [120]) = $1
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$16()), [288])
	*($10 + [96]) = $3
	*($10 + [100]) = $10
	*($10 + [104]) = ($10 + [120])
	*(($2 = CALL $866([40])) + [8]) = [0]
	*($2) = (int_64)0
	*($2 + [12 align=4]) = (int_64)0
	*($2 + [20]) = [0]
	*($2 + [24]) = $3
	CALL $15(($10 + [96]), $2)
	*($10 + [112]) = $2
	$1 = *($2)
	*($10 + [96]) = $1
	$7 = *($2 + [28])
	*($10 + [92]) = $7
	$6 = ($0 + [36])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [40]))) ){ goto $label$16 }
	*($3 + [8]) = $1
	*($3 + [16]) = $7
	*($10 + [112]) = [0]
	*($3) = $2
	*($6) = ($3 + [24])
	goto $label$15 
	
.LABEL $label$17
	*($10 + [100]) = ($10 + [72])
	*($10 + [96]) = ($10 + [76])
	*($10 + [104]) = ($10 + [16])
	CALL eosio_assert([1], [352])
	CALL $17($3, $2, $1, ($10 + [96]))
	$7 = *($10 + [56])
	if ( $7 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	CALL $16(($0 + [32]), ($10 + [112]), ($10 + [96]), ($10 + [92]))
	
.LABEL $label$15
	$2 = *($10 + [112])
	*($10 + [112]) = [0]
	if ( ($2 == 0) ){ goto $label$18 }
	$3 = *($2 + [12])
	if ( ($3 == 0) ){ goto $label$19 }
	*(($2 + [16])) = $3
	CALL $867($3)
	
.LABEL $label$19
	CALL $867($2)
	
.LABEL $label$18
	$7 = *($10 + [56])
	if ( ($7 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$6 = ($10 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$21 }
	
.LOOP $label$22:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$23 }
	CALL $867($3)
	
.LABEL $label$23
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$22 }
	$2 = *(($10 + [56]))
	goto $label$20 
	
.LABEL $label$21
	$2 = $7
	
.LABEL $label$20
	*($6) = $7
	CALL $867($2)
	
.LABEL $label$13
	*([0] + [4]) = ($10 + [128])
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([32])) + [20]) = $0
	*($6) = (int_64)0
	CALL $24(($8 + [32]), $6)
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $25(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([40]))) = (int_64)0
	*($6 + [8]) = [0]
	*($6 + [10]) = [0]
	*($6 + [12 align=4]) = (int_64)0
	*($6 + [20]) = [0]
	*($6 + [24]) = $0
	CALL $22(($8 + [32]), $6)
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $23(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $554 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$2 = *($0)
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$4 = *($4 + [4])
	*($1 + [8]) = *($4)
	*(($5 = ($1 + [16]))) = *(($4 + [8]))
	CALL eosio_assert([1], [576])
	CALL memcpy($8, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($8 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($8 + [16]), $5, [8])
	$3 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-3732485072939384832, *(*($0 + [8])), $3, $8, [24])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = *(($2 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($8 + [24]) = (int_64))((int_64)0 - *($1 + [8]))
	*($1 + [32]) = CALL db_idx64_store($3, (int_64)-3732485072939384832, $6, $7, ($8 + [24]))
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $866(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $867($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [576])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[1]), [576])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $7, [2])
	$6 = (*($4) + [2])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[3]), [576])
	CALL memcpy(*($4), ($7 + [4]), [4])
	$6 = (*($4) + [4])
	*($4) = $6
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $579 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC __signbitl (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC $556 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1248])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC $631 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [48])
	$13 = $14
	*([0] + [4]) = $14
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$9 = [0]
	$11 = *($1 + [8])
	$6 = ($1 + [12])
	$10 = *($6)
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$1 }
	$5 = ((int_32)($10 - $11) / (int_32)[12])
	$7 = ($3 + [4])
	$10 = [0]
	$9 = [0]
	
.LOOP $label$2:
	$8 = ($11 + [9])
	if ( ((int_32)*($8) != (int_32)*(*($3))) ){ goto $label$3 }
	*($8) = [0]
	
.LABEL $label$3
	if ( ((int_32)*($11) != (int_32)*(*($7))) ){ goto $label$4 }
	*($8) = *(*($3))
	$9 = [1]
	
.LABEL $label$4
	$11 = ($11 + [12])
	$10 = ($10 + [1])
	if ( ($10 <= $5) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(($9 & [1]), [6592])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$10 = [8]
	$8 = *(($1 + [8]))
	$11 = *($6)
	$3 = ($11 - $8)
	$12 = (CASTING uint_64)(uint_32 ((int_32)$3 / (int_32)[12]))
	
.LOOP $label$5:
	$10 = ($10 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$6 }
	$10 = ((((int_32)((uint_32)($3 + [-12]) / (uint_32)[12]) * (int_32)[7]) + $10) + [7])
	
.LABEL $label$6
	if ( ($10 <= [513]) ){ goto $label$8 }
	$7 = CALL malloc($10)
	goto $label$7 
	
.LABEL $label$8
	$7 = ($14 - (($10 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$7
	*($13 + [8]) = $7
	$5 = ($7 + $10)
	*($13 + [16]) = $5
	CALL eosio_assert(((int_32)$10 > (int_32)[7]), [576])
	CALL memcpy($7, $1, [8])
	$11 = ($7 + [8])
	*($13 + [12]) = $11
	$12 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [12])) - *(($1 + [8]))) / (int_32)[12]))
	
.LOOP $label$9:
	$8 = (CASTING uint_32)(uint_64 $12)
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	$3 = ((int_64)$12) != (int_64)0
	*($13 + [32]) = (($3) << [7]) | ($8 & [127]))
	CALL eosio_assert(((int_32)($5 - $11) > (int_32)[0]), [576])
	CALL memcpy($11, ($13 + [32]), [1])
	$11 = ($11 + [1])
	*($13 + [12]) = $11
	if ( $3 ){ goto $label$9 }
	$8 = *(($1 + [12]))
	$11 = *(($1 + [8]))
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$10 }
	
.LOOP $label$11:
	*($13 + [24]) = ($13 + [8])
	*($13 + [32]) = $11
	*((($13 + [32]) + [8])) = ($11 + [8])
	*((($13 + [32]) + [12])) = ($11 + [9])
	*($13 + [36]) = ($11 + [4])
	CALL $47(($13 + [32]), ($13 + [24]))
	$11 = ($11 + [12])
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$11 }
	
.LABEL $label$10
	CALL db_update_i64(*($1 + [24]), $2, $7, $10)
	if ( ($10 <= [513]) ){ goto $label$12 }
	CALL free($7)
	
.LABEL $label$12
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*([0] + [4]) = ($13 + [48])
}

int_32 .FUNC $642 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([32])) + [16]) = $0
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-4])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [160])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	CALL eosio_assert(((int_32)$4 != (int_32)[12]), [160])
	CALL memcpy(($6 + [12]), ($7 + [12]), [4])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $648(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $630 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$5 = *($0)
	*($8 + [8]) = $5
	*($8 + [16]) = $5
	$7 = [1]
	$0 = CALL db_find_i64($5, $5, (int_64)-7695177680118874112, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $566(($8 + [8]), $0)
	CALL eosio_assert(((int_32)*($0 + [28]) == (int_32)($8 + [8])), [32])
	$5 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$0 = *($0 + [16])
	$4 = *(($0 + [20]))
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$1 }
	$6 = ((CASTING uint_32)(uint_64 $5) - *([0] + [12]))
	$3 = int_32(($4 - $0) >> [4])
	$4 = [0]
	
.LOOP $label$3:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$2 }
	$0 = ($0 + [16])
	$7 = [1]
	$4 = ($4 + [1])
	if ( ($4 <= $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	if ( ($6 <= *(($0 + [8]))) ){ goto $label$1 }
	$7 = ((int_32)*(($0 + [12])) != (int_32)[0])
	
.LABEL $label$1
	$3 = *($8 + [32])
	if ( ($3 == 0) ){ goto $label$4 }
	$6 = ($8 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	$2 = *($4 + [16])
	if ( ($2 == 0) ){ goto $label$9 }
	*(($4 + [20])) = $2
	CALL $867($2)
	
.LABEL $label$9
	CALL $867($4)
	
.LABEL $label$8
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($8 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $3
	
.LABEL $label$5
	*($6) = $3
	CALL $867($0)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [48])
	return $7
}

void .FUNC $391 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$3 = *($3)
	*($1 + [8]) = *($3)
	*(($1 + [20])) = *(($3 + [12]))
	*(($5 = ($1 + [16]))) = *(($3 + [8]))
	*(($1 + [12])) = *(($3 + [4]))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 + [16]), $5, [8])
	CALL db_update_i64(*($1 + [28]), $2, $6, [24])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $640 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([128])) + [8]) = (int_64)0
	*($3 + [20 align=4]) = (int_64)0
	*($3 + [28 align=4]) = (int_64)0
	*($3 + [36 align=4]) = (int_64)0
	*($3 + [80]) = [0]
	*($3 + [104]) = $1
	CALL $641(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [108])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $94(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$4 }
	CALL $867(*(($3 + [40])))
	
.LABEL $label$4
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*(($3 + [28])))
	
.LABEL $label$5
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $641 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$2 = *($0)
	*($1 + [16]) = [3]
	CALL $869(($1 + [20]), *($4 + [8]))
	CALL $869(($1 + [32]), *($4 + [12]))
	$5 = *($4 + [16])
	*($1 + [48]) = *($5)
	*(($1 + [72])) = *(($5 + [24]))
	*(($1 + [64])) = *(($5 + [16]))
	*(($1 + [56])) = *(($5 + [8]))
	*($1 + [80]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($1 + [84]) = *(*($4 + [20]))
	*($1 + [86]) = *(*($4 + [24]))
	$4 = *($1 + [20])
	$5 = ( *(($1 + [24])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($5 + [72])
	$3 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	$5 = *(($1 + [32]))
	$5 = ( *(($1 + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$4 = ($5 + $4)
	$3 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	if ( ($4 <= [513]) ){ goto $label$4 }
	$5 = CALL malloc($4)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($7 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$3
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $4)
	CALL $101($6, $1)
	$3 = *($1)
	*($1 + [108]) = CALL db_store_i64(*($2 + [8]), (int_64)-6533188803235414016, *(*($0 + [8])), $3, $5, $4)
	if ( ($4 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $646 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([32])) + [16]) = $1
	*($3) = (int_64)0
	CALL $647(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [20])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $648(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $557 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $647 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$2 = *($0)
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	*($1 + [12]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($1 + [8]), [4])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [12]), ($1 + [12]), [4])
	$3 = *($1)
	*($1 + [20]) = CALL db_store_i64(*($2 + [8]), (int_64)-7695177616925392896, *(*($0 + [8])), $3, $5, [16])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $650 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($8 + [24]) = $2
	$3 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $227($5, $7)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$5), [32])
	
.LABEL $label$3
	$7 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($7, [4208])
	*($8 + [23]) = [0]
	$1 = *($0)
	*($8 + [12]) = ($8 + [23])
	*($8 + [8]) = ($8 + [24])
	CALL eosio_assert($7, [352])
	CALL $652($5, $6, $1, ($8 + [8]))
	CALL eosio_assert(*($8 + [23]), [4208])
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $644 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = [0]
	$4 = *($1)
	*($1 + [12]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($1 + [8]), [4])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [12]), ($1 + [12]), [4])
	CALL db_update_i64(*($1 + [20]), $2, $5, [16])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $645 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = (*($1 + [8]) + *(*($3)))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($1 + [8]), [4])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [12]), ($1 + [12]), [4])
	CALL db_update_i64(*($1 + [20]), $2, $5, [16])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC $639 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [208])
	*([0] + [4]) = $18
	$12 = *($1 + [4])
	*($18 + [200]) = *($12)
	CALL $564(*($0 + [60]), [1])
	CALL eosio_assert(((($2 + [-1]) & [65535]) <= [3]), [6784])
	CALL eosio_assert(((($3 + [-1]) & [255]) <= [9]), [6816])
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$2 }
	$17 = [100]
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$2 != (int_32)[2]) ){ goto $label$3 }
	$17 = [800]
	goto $label$1 
	
.LABEL $label$3
	$17 = [6400]
	
.LABEL $label$1
	*($18 + [196]) = $17
	$17 = ((int_32)$17 * (int_32)$3)
	*($18 + [196]) = $17
	CALL eosio_assert(((uint_32)$17 <= (uint_32)*($12 + [16])), [5040])
	if ( ($17 == 0) ){ goto $label$4 }
	$12 = *($0 + [48])
	$1 = *($1 + [4])
	*($18 + [88]) = $17
	CALL eosio_assert(((uint_32)*($1 + [16]) >= (uint_32)$17), [5040])
	if ( $4 ){ goto $label$4 }
	$13 = *($12 + [40])
	*($18 + [152]) = ($18 + [88])
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [352])
	CALL $493($12, $1, $13, ($18 + [152]))
	
.LABEL $label$4
	$12 = [1]
	if ( $4 ){ goto $label$5 }
	$7 = [0]
	*(($18 + [184])) = [0]
	$13 = *($0)
	*($18 + [152]) = $13
	*($18 + [168]) = (int_64)-1
	*($18 + [176]) = (int_64)0
	*($18 + [160]) = $13
	$17 = CALL db_find_i64($13, $13, (int_64)-7695177616925392896, *($18 + [200]))
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$7 }
	$8 = CALL $642(($18 + [152]), $17)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($18 + [152])), [32])
	$15 = (*($8 + [8]) + *($18 + [196]))
	$7 = [1]
	goto $label$6 
	
.LABEL $label$7
	$15 = *($18 + [196])
	$8 = [0]
	
.LABEL $label$6
	$13 = (int_64)230400
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$8 }
	$13 = (int_64)28800
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$8 }
	$13 = ( (int_64)3360 ? (int_64)3376 : ($15 <= [945000]) )
	
.LABEL $label$8
	CALL memcpy(($18 + [88]), *($6 + [4]), [64])
	$16 = [0]
	CALL memset(($18 + [48]), [0], [40])
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$12 }
	$9 = [0]
	
.LOOP $label$13:
	$11 = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $5) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	$5 = (CASTING uint_32)(uint_64 $11)
	$10 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$11 * (int_64)$13) >> (uint_64)(int_64)31))
	$4 = [6832]
	$1 = [0]
	$17 = [0]
	
.LOOP $label$15:
	if ( ((int_32)$17 > (int_32)[7]) ){ goto $label$14 }
	$17 = ($17 + [1])
	$12 = *($4)
	$4 = ($4 + [4])
	$1 = ($12 + $1)
	if ( ((int_32)$10 >= (int_32)$1) ){ goto $label$15 }
	*((($18 + [48]) + ($9 << [2]))) = $17
	
.LABEL $label$14
	$9 = ($9 + [1])
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)$2 != (int_32)[2]) ){ goto $label$10 }
	$9 = [0]
	
.LOOP $label$16:
	$11 = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $5) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	$5 = (CASTING uint_32)(uint_64 $11)
	$10 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$11 * (int_64)$13) >> (uint_64)(int_64)31))
	$4 = [6848]
	$1 = [0]
	$17 = [4]
	
.LOOP $label$18:
	if ( ((int_32)$17 > (int_32)[15]) ){ goto $label$17 }
	$17 = ($17 + [1])
	$12 = *($4)
	$4 = ($4 + [4])
	$1 = ($12 + $1)
	if ( ((int_32)$10 >= (int_32)$1) ){ goto $label$18 }
	*((($18 + [48]) + ($9 << [2]))) = $17
	
.LABEL $label$17
	$9 = ($9 + [1])
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$16 }
	
.LABEL $label$11
	$16 = [0]
	goto $label$9 
	
.LABEL $label$10
	$9 = ( [16] ? [20] : ($15 <= [945000]) )
	$14 = [0]
	$16 = [0]
	
.LOOP $label$19:
	$11 = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $5) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	$5 = (CASTING uint_32)(uint_64 $11)
	$10 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$11 * (int_64)$13) >> (uint_64)(int_64)31))
	$4 = [7]
	$17 = [6864]
	$1 = [0]
	
.LOOP $label$21:
	$4 = ($4 + [1])
	if ( ((int_32)$4 >= (int_32)$9) ){ goto $label$20 }
	$12 = *($17)
	$17 = ($17 + [4])
	$1 = ($12 + $1)
	if ( ((int_32)$10 >= (int_32)$1) ){ goto $label$21 }
	$17 = ($4 + [1])
	*((($18 + [48]) + ($14 << [2]))) = $17
	$16 = ($16 | (((int_32)$4 > (int_32)[15]) & ((int_32)$17 < (int_32)[21])))
	
.LABEL $label$20
	$14 = ($14 + [1])
	if ( ((int_32)$14 != (int_32)$3) ){ goto $label$19 }
	
.LABEL $label$9
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$24 }
	if ( (($16 & [1]) == 0) ){ goto $label$25 }
	if ( ($7 == 0) ){ goto $label$24 }
	$13 = *($0)
	CALL eosio_assert([1], [352])
	CALL $643(($18 + [152]), $8, $13, $18)
	if ( $3 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	if ( ($15 <= [2025000]) ){ goto $label$26 }
	*($18 + [48]) = ((CASTING uint_32)(uint_64 (uint_64)((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $5) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647) >> (uint_64)(int_64)29)) + [17])
	if ( ($7 == 0) ){ goto $label$24 }
	$13 = *($0)
	CALL eosio_assert([1], [352])
	CALL $644(($18 + [152]), $8, $13, $18)
	if ( $3 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$26
	$13 = *($0)
	if ( ($7 == 0) ){ goto $label$27 }
	*($18) = ($18 + [196])
	CALL eosio_assert([1], [352])
	CALL $645(($18 + [152]), $8, $13, $18)
	if ( $3 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$27
	*($18 + [4]) = ($18 + [196])
	*($18) = ($18 + [200])
	CALL $646(($18 + [40]), ($18 + [152]), $13, $18)
	
.LABEL $label$24
	if ( ($3 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	$5 = ($18 + [8])
	$14 = ($18 + [16])
	$10 = ($18 + [24])
	$2 = ($18 + [32])
	$9 = ($18 + [28])
	$12 = [0]
	
.LOOP $label$28:
	$13 = *($0)
	*($5) = $13
	*($14) = (int_64)-1
	*($10) = (int_64)0
	*($2) = [0]
	*($18) = $13
	$17 = [0]
	$4 = *((($18 + [48]) + ($12 << [2])))
	$1 = CALL db_find_i64($13, $13, (int_64)-4852160326797361152, (CASTING int_64)(int_32 $4))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$29 }
	$17 = CALL $567($18, $1)
	CALL eosio_assert(((int_32)*($17 + [28]) == (int_32)$18), [32])
	
.LABEL $label$29
	CALL eosio_assert(((int_32)$17 != (int_32)[0]), [5808])
	CALL $42($0, *($18 + [200]), $4)
	$1 = *($10)
	if ( ($1 == 0) ){ goto $label$30 }
	$17 = *($9)
	if ( ((int_32)$17 == (int_32)$1) ){ goto $label$32 }
	
.LOOP $label$33:
	$17 = ($17 + [-24])
	$4 = *($17)
	*($17) = [0]
	if ( ($4 == 0) ){ goto $label$34 }
	CALL $867($4)
	
.LABEL $label$34
	if ( ((int_32)$1 != (int_32)$17) ){ goto $label$33 }
	$17 = *($10)
	goto $label$31 
	
.LABEL $label$32
	$17 = $1
	
.LABEL $label$31
	*($9) = $1
	CALL $867($17)
	
.LABEL $label$30
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$3) ){ goto $label$28 }
	
.LABEL $label$22
	$4 = *(($0 + [60]))
	$13 = *($4)
	$12 = [0]
	*($18 + [116]) = [0]
	$17 = *($6 + [4])
	*($18) = ($18 + [88])
	CALL eosio_assert(((int_32)$17 != (int_32)[0]), [352])
	CALL $272(($4 + [128]), $17, $13, $18)
	$1 = *($18 + [176])
	if ( ($1 == 0) ){ goto $label$5 }
	$10 = ($18 + [180])
	$17 = *($10)
	if ( ((int_32)$17 == (int_32)$1) ){ goto $label$36 }
	
.LOOP $label$37:
	$17 = ($17 + [-24])
	$4 = *($17)
	*($17) = [0]
	if ( ($4 == 0) ){ goto $label$38 }
	CALL $867($4)
	
.LABEL $label$38
	if ( ((int_32)$1 != (int_32)$17) ){ goto $label$37 }
	$17 = *(($18 + [176]))
	goto $label$35 
	
.LABEL $label$36
	$17 = $1
	
.LABEL $label$35
	*($10) = $1
	CALL $867($17)
	
.LABEL $label$5
	*([0] + [4]) = ($18 + [208])
	return $12
}

void .FUNC $619 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [48])
	*([0] + [4]) = $16
	*((($16 + [8]) + [32])) = [0]
	*($16 + [24]) = (int_64)-1
	*($16 + [32]) = (int_64)0
	$8 = *($0)
	*($16 + [8]) = $8
	*($16 + [16]) = $8
	$4 = *(($0 + [32]))
	$15 = *(($0 + [36]))
	if ( ((int_32)$15 == (int_32)$4) ){ goto $label$1 }
	$14 = ($15 + [-24])
	$6 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($14)) == (int_64)$2) ){ goto $label$1 }
	$15 = $14
	$7 = ($14 + [-24])
	$14 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$7 = ($0 + [8])
	if ( ((int_32)$15 == (int_32)$4) ){ goto $label$4 }
	$14 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [20]) == (int_32)$7), [32])
	goto $label$3 
	
.LABEL $label$4
	$14 = [0]
	$15 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7695177867839143936, $2)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$3 }
	$14 = CALL $43($7, $15)
	CALL eosio_assert(((int_32)*($14 + [20]) == (int_32)$7), [32])
	
.LABEL $label$3
	$14 = *($4)
	$4 = ( ($14 + [8]) ? ($0 + [68]) : $14 )
	if ( ((int_32)*($4 + [4]) == (int_32)$14) ){ goto $label$5 }
	$10 = ($16 + [32])
	$11 = ($16 + [36])
	$12 = (($16 + [8]) + [8])
	$13 = ($1 + [4])
	$0 = [0]
	
.LOOP $label$6:
	$9 = ($14 + ((int_32)$0 * (int_32)[12]))
	if ( ((int_64)*($9 + [9]) != (int_64)$3) ){ goto $label$7 }
	$2 = *($9)
	$5 = *($10)
	$15 = *($11)
	if ( ((int_32)$15 == (int_32)$5) ){ goto $label$8 }
	$14 = ($15 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$9:
	if ( ((int_64)*(*($14)) == (int_64)$2) ){ goto $label$8 }
	$15 = $14
	$7 = ($14 + [-24])
	$14 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$15 == (int_32)$5) ){ goto $label$11 }
	$14 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [28]) == (int_32)($16 + [8])), [32])
	goto $label$10 
	
.LABEL $label$11
	$14 = [0]
	$7 = CALL db_find_i64(*($16 + [8]), *($12), (int_64)-4852160326797361152, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$10 }
	$14 = CALL $567(($16 + [8]), $7)
	CALL eosio_assert(((int_32)*($14 + [28]) == (int_32)($16 + [8])), [32])
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [5808])
	$7 = (*($9 + [8]) + [-1])
	$15 = (*($14 + [9]) + [-1])
	if ( ((uint_32)$15 > (uint_32)[3]) ){ goto $label$18 }
	$6 = (((int_32)*($14 + [18]) * (int_32)$7) + *($14 + [12]))
	goto $label$19 
	
.LABEL $label$19
	*($1) = (*($1) + $6)
	$15 = *($14 + [10])
	if ( $15 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$18
	CALL eosio_assert([0], [6416])
	$15 = *($14 + [10])
	if ( $15 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$17
	*($13) = (*($13) + $6)
	$15 = *($14 + [10])
	if ( $15 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	*(($15 = ($1 + [8]))) = (*($15) + $6)
	$15 = *($14 + [10])
	if ( $15 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	*(($15 = ($1 + [12]))) = (*($15) + $6)
	$15 = *($14 + [10])
	if ( ($15 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$15 = ($15 + [-1])
	if ( ((uint_32)$15 > (uint_32)[3]) ){ goto $label$23 }
	$6 = (((int_32)*($14 + [20]) * (int_32)$7) + *($14 + [14]))
	goto $label$24 
	
.LABEL $label$24
	*($1) = (*($1) + $6)
	$15 = *($14 + [11])
	if ( $15 ){ goto $label$12 }
	goto $label$7 
	
.LABEL $label$23
	CALL eosio_assert([0], [6416])
	$15 = *($14 + [11])
	if ( $15 ){ goto $label$12 }
	goto $label$7 
	
.LABEL $label$22
	*($13) = (*($13) + $6)
	$15 = *($14 + [11])
	if ( $15 ){ goto $label$12 }
	goto $label$7 
	
.LABEL $label$21
	*(($15 = ($1 + [8]))) = (*($15) + $6)
	$15 = *($14 + [11])
	if ( $15 ){ goto $label$12 }
	goto $label$7 
	
.LABEL $label$20
	*(($15 = ($1 + [12]))) = (*($15) + $6)
	
.LABEL $label$13
	$15 = *($14 + [11])
	if ( ($15 == 0) ){ goto $label$7 }
	
.LABEL $label$12
	$15 = ($15 + [-1])
	if ( ((uint_32)$15 > (uint_32)[3]) ){ goto $label$28 }
	$14 = (((int_32)*($14 + [22]) * (int_32)$7) + *($14 + [16]))
	goto $label$29 
	
.LABEL $label$29
	*($1) = (*($1) + $14)
	goto $label$7 
	
.LABEL $label$28
	CALL eosio_assert([0], [6416])
	goto $label$7 
	
.LABEL $label$27
	*($13) = (*($13) + $14)
	goto $label$7 
	
.LABEL $label$26
	*(($7 = ($1 + [8]))) = (*($7) + $14)
	goto $label$7 
	
.LABEL $label$25
	*(($7 = ($1 + [12]))) = (*($7) + $14)
	
.LABEL $label$7
	$14 = *($4)
	$0 = ($0 + [1])
	if ( ($0 <= ((int_32)(*(($4 + [4])) - $14) / (int_32)[12])) ){ goto $label$6 }
	$15 = *($16 + [32])
	if ( ($15 == 0) ){ goto $label$5 }
	$6 = ($16 + [36])
	$14 = *($6)
	if ( ((int_32)$14 == (int_32)$15) ){ goto $label$31 }
	
.LOOP $label$32:
	$14 = ($14 + [-24])
	$7 = *($14)
	*($14) = [0]
	if ( ($7 == 0) ){ goto $label$33 }
	CALL $867($7)
	
.LABEL $label$33
	if ( ((int_32)$15 != (int_32)$14) ){ goto $label$32 }
	$14 = *(($16 + [32]))
	goto $label$30 
	
.LABEL $label$31
	$14 = $15
	
.LABEL $label$30
	*($6) = $15
	CALL $867($14)
	
.LABEL $label$5
	*([0] + [4]) = ($16 + [48])
	$15
	$15
	$15
}

void .FUNC $618 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	$26 = (*([0] + [4]) - [144])
	*([0] + [4]) = $26
	*((($26 + [104]) + [32])) = [0]
	*($26 + [120]) = (int_64)-1
	*($26 + [128]) = (int_64)0
	$11 = *($0)
	*($26 + [104]) = $11
	*($26 + [112]) = $11
	*((($26 + [64]) + [32])) = [0]
	*($26 + [72]) = $11
	*($26 + [64]) = $11
	*($26 + [80]) = (int_64)-1
	*($26 + [88]) = (int_64)0
	$23 = *(($0 + [32]))
	$22 = *(($0 + [36]))
	if ( ((int_32)$22 == (int_32)$23) ){ goto $label$1 }
	$21 = ($22 + [-24])
	$5 = ([0] - $23)
	
.LOOP $label$2:
	if ( ((int_64)*(*($21)) == (int_64)$2) ){ goto $label$1 }
	$22 = $21
	$6 = ($21 + [-24])
	$21 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [8])
	if ( ((int_32)$22 == (int_32)$23) ){ goto $label$4 }
	$21 = *(($22 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [24]) == (int_32)$6), [32])
	goto $label$3 
	
.LABEL $label$4
	$21 = [0]
	$22 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)8526756653867991040, $2)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$3 }
	$21 = CALL $386($6, $22)
	CALL eosio_assert(((int_32)*($21 + [24]) == (int_32)$6), [32])
	
.LABEL $label$3
	*((($26 + [56]) + [4])) = [0]
	*($26 + [56]) = [0]
	*((($26 + [44]) + [8])) = [0]
	*($26 + [44 align=4]) = (int_64)0
	$21 = *($4)
	$4 = ( ($21 + [12]) ? ($0 + [68]) : $21 )
	$6 = *($4 + [4])
	if ( ((int_32)$6 == (int_32)$21) ){ goto $label$7 }
	$13 = (($26 + [104]) + [24])
	$14 = (($26 + [104]) + [28])
	$15 = (($26 + [104]) + [8])
	$16 = ($1 + [12])
	$24 = [0]
	$25 = [0]
	$19 = [0]
	$20 = [0]
	
.LOOP $label$8:
	$12 = ($21 + ((int_32)$20 * (int_32)[20]))
	if ( ((int_64)*($12 + [6]) != (int_64)$3) ){ goto $label$9 }
	$2 = *($12 + [4])
	$23 = *($13)
	$22 = *($14)
	if ( ((int_32)$22 == (int_32)$23) ){ goto $label$10 }
	$21 = ($22 + [-24])
	$5 = ([0] - $23)
	
.LOOP $label$11:
	if ( ((int_64)*(*($21)) == (int_64)$2) ){ goto $label$10 }
	$22 = $21
	$6 = ($21 + [-24])
	$21 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$22 == (int_32)$23) ){ goto $label$13 }
	$23 = *(($22 + [-24]))
	CALL eosio_assert(((int_32)*($23 + [56]) == (int_32)($26 + [104])), [32])
	goto $label$12 
	
.LABEL $label$13
	$23 = [0]
	$21 = CALL db_find_i64(*($26 + [104]), *($15), (int_64)-4921685625297436672, $2)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$12 }
	$23 = CALL $621(($26 + [104]), $21)
	CALL eosio_assert(((int_32)*($23 + [56]) == (int_32)($26 + [104])), [32])
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$23 != (int_32)[0]), [6448])
	$21 = *($23 + [48])
	if ( $24 ){ goto $label$16 }
	$24 = $21
	if ( ($21 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$25 = (((int_32)$24 == (int_32)$21) + $25)
	goto $label$14 
	
.LABEL $label$15
	$24 = [0]
	
.LABEL $label$14
	$7 = *($12 + [12])
	$2 = *($12 + [7])
	$8 = *((($26 + [64]) + [24]))
	$22 = *((($26 + [64]) + [28]))
	if ( ((int_32)$22 == (int_32)$8) ){ goto $label$17 }
	$21 = ($22 + [-24])
	$5 = ([0] - $8)
	
.LOOP $label$18:
	if ( ((int_64)*(*($21)) == (int_64)$2) ){ goto $label$17 }
	$22 = $21
	$6 = ($21 + [-24])
	$21 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$18 }
	
.LABEL $label$17
	$5 = uint_32($7 >> [24])
	$12 = ($12 + [4])
	$6 = ($7 & [255])
	if ( ((int_32)$22 == (int_32)$8) ){ goto $label$20 }
	$21 = *(($22 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [32]) == (int_32)($26 + [64])), [32])
	goto $label$19 
	
.LABEL $label$20
	$21 = [0]
	$22 = CALL db_find_i64(*($26 + [64]), *((($26 + [64]) + [8])), (int_64)-4921685318744145920, $2)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$19 }
	$21 = CALL $622(($26 + [64]), $22)
	CALL eosio_assert(((int_32)*($21 + [32]) == (int_32)($26 + [64])), [32])
	
.LABEL $label$19
	$8 = ($5 & [2])
	CALL eosio_assert(((int_32)$21 != (int_32)[0]), [6480])
	$21 = *($21 + [10])
	*((($26 + [44]) + ($19 << [2]))) = $21
	*((($26 + [56]) + ($19 << [1]))) = *($12)
	$21 = ($21 + [100])
	$22 = *($23 + [24])
	$22 = ((int_32)((int_32)((*($23 + [18]) - $22) + ((uint_32)(((int_32)( $6 ? [100] : ($6 <= [100]) ) * (int_32)$22) << [1]) / (uint_32)[100])) * (int_32)$21) / (int_32)[100])
	$6 = (*($23 + [14]) + [-1])
	if ( ((uint_32)$6 > (uint_32)[3]) ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$29
	*($1) = (*($1) + $22)
	$6 = ($5 & [4])
	if ( $8 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$28
	CALL eosio_assert([0], [6416])
	$6 = ($5 & [4])
	if ( $8 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$27
	*(($6 = ($1 + [4]))) = (*($6) + $22)
	$6 = ($5 & [4])
	if ( $8 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	*(($6 = ($1 + [8]))) = (*($6) + $22)
	$6 = ($5 & [4])
	if ( $8 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	*($16) = (*($16) + $22)
	$6 = ($5 & [4])
	if ( ($8 == 0) ){ goto $label$23 }
	
.LABEL $label$24
	$5 = (uint_32($7 >> [8]) & [255])
	$22 = *($23 + [26])
	$5 = ((int_32)((int_32)((*($23 + [20]) - $22) + ((uint_32)(((int_32)( $5 ? [100] : ($5 <= [100]) ) * (int_32)$22) << [1]) / (uint_32)[100])) * (int_32)$21) / (int_32)[100])
	$22 = (*($23 + [15]) + [-1])
	if ( ((uint_32)$22 > (uint_32)[3]) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$34
	*($1) = (*($1) + $5)
	if ( $6 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$33
	CALL eosio_assert([0], [6416])
	if ( $6 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$32
	*(($22 = ($1 + [4]))) = (*($22) + $5)
	if ( $6 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$31
	*(($22 = ($1 + [8]))) = (*($22) + $5)
	if ( $6 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$30
	*($16) = (*($16) + $5)
	
.LABEL $label$23
	if ( ($6 == 0) ){ goto $label$21 }
	
.LABEL $label$22
	$22 = (uint_32($7 >> [16]) & [255])
	$6 = *($23 + [28])
	$6 = ((int_32)((int_32)((*($23 + [22]) - $6) + ((uint_32)(((int_32)( $22 ? [100] : ($22 <= [100]) ) * (int_32)$6) << [1]) / (uint_32)[100])) * (int_32)$21) / (int_32)[100])
	$21 = (*($23 + [16]) + [-1])
	if ( ((uint_32)$21 > (uint_32)[3]) ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$39
	*($1) = (*($1) + $6)
	goto $label$21 
	
.LABEL $label$38
	CALL eosio_assert([0], [6416])
	goto $label$21 
	
.LABEL $label$37
	*(($21 = ($1 + [4]))) = (*($21) + $6)
	goto $label$21 
	
.LABEL $label$36
	*(($21 = ($1 + [8]))) = (*($21) + $6)
	goto $label$21 
	
.LABEL $label$35
	*($16) = (*($16) + $6)
	
.LABEL $label$21
	$19 = ($19 + [1])
	$6 = *(($4 + [4]))
	$21 = *($4)
	
.LABEL $label$9
	$20 = ($20 + [1])
	if ( ($20 <= ((int_32)($6 - $21) / (int_32)[20])) ){ goto $label$8 }
	if ( ((int_32)$25 != (int_32)[3]) ){ goto $label$7 }
	if ( ((int_32)$24 <= (int_32)[0]) ){ goto $label$7 }
	*(($26 + [32])) = [0]
	*($26 + [16]) = (int_64)-1
	*($26 + [24]) = (int_64)0
	$2 = *($0)
	*($26) = $2
	*($26 + [8]) = $2
	$21 = CALL db_find_i64($2, $2, (int_64)-4921685198773944320, (CASTING int_64)(int_32 $24))
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$44 }
	$6 = CALL $623($26, $21)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$26), [32])
	$10 = ($6 + [36])
	$9 = ($6 + [34])
	$16 = ($6 + [30])
	$15 = ($6 + [28])
	$13 = ($6 + [24])
	$14 = ($6 + [22])
	$24 = ($6 + [18])
	$4 = ($6 + [16])
	$19 = ($6 + [12])
	$7 = ($6 + [10])
	$21 = ($26 + [44])
	$8 = ($6 + [8])
	$25 = ($6 + [14])
	$0 = ($6 + [20])
	$17 = ($6 + [26])
	$18 = ($6 + [32])
	$6 = [0]
	
.LOOP $label$45:
	$22 = $7
	$5 = $19
	$12 = *((($26 + [56]) + $6))
	if ( ((int_32)*($8) == (int_32)$12) ){ goto $label$47 }
	$22 = $4
	$5 = $24
	if ( ((int_32)*($25) == (int_32)$12) ){ goto $label$47 }
	$22 = $14
	$5 = $13
	if ( ((int_32)*($0) == (int_32)$12) ){ goto $label$47 }
	$22 = $15
	$5 = $16
	if ( ((int_32)*($17) == (int_32)$12) ){ goto $label$47 }
	$22 = $9
	$5 = $10
	if ( ((int_32)*($18) != (int_32)$12) ){ goto $label$46 }
	
.LABEL $label$47
	$20 = *($5)
	$23 = *($22)
	
.LABEL $label$46
	$22 = ($23 & [255])
	CALL eosio_assert(((int_32)$22 != (int_32)[0]), [6512])
	$5 = ((int_32)((int_32)(*($21) + [100]) * (int_32)($20 & [65535])) / (int_32)[100])
	$22 = ($22 + [-1])
	if ( ((uint_32)$22 > (uint_32)[3]) ){ goto $label$52 }
	goto $label$53 
	
.LABEL $label$53
	*($1) = (*($1) + $5)
	goto $label$48 
	
.LABEL $label$52
	CALL eosio_assert([0], [6416])
	goto $label$48 
	
.LABEL $label$51
	*(($22 = ($1 + [4]))) = (*($22) + $5)
	goto $label$48 
	
.LABEL $label$50
	*(($22 = ($1 + [8]))) = (*($22) + $5)
	goto $label$48 
	
.LABEL $label$49
	*(($22 = ($1 + [12]))) = (*($22) + $5)
	
.LABEL $label$48
	$21 = ($21 + [4])
	$6 = ($6 + [2])
	if ( ((int_32)$6 != (int_32)[6]) ){ goto $label$45 }
	$22 = *($26 + [24])
	if ( ($22 == 0) ){ goto $label$7 }
	$5 = ($26 + [28])
	$21 = *($5)
	if ( ((int_32)$21 == (int_32)$22) ){ goto $label$43 }
	
.LOOP $label$54:
	$21 = ($21 + [-24])
	$6 = *($21)
	*($21) = [0]
	if ( ($6 == 0) ){ goto $label$55 }
	CALL $867($6)
	
.LABEL $label$55
	if ( ((int_32)$22 != (int_32)$21) ){ goto $label$54 }
	$21 = *(($26 + [24]))
	goto $label$42 
	
.LABEL $label$44
	$22 = *($26 + [24])
	if ( ($22 == 0) ){ goto $label$7 }
	$5 = ($26 + [28])
	$21 = *($5)
	if ( ((int_32)$21 == (int_32)$22) ){ goto $label$41 }
	
.LOOP $label$56:
	$21 = ($21 + [-24])
	$6 = *($21)
	*($21) = [0]
	if ( ($6 == 0) ){ goto $label$57 }
	CALL $867($6)
	
.LABEL $label$57
	if ( ((int_32)$22 != (int_32)$21) ){ goto $label$56 }
	$21 = *(($26 + [24]))
	goto $label$40 
	
.LABEL $label$43
	$21 = $22
	
.LABEL $label$42
	*($5) = $22
	CALL $867($21)
	$22 = *($26 + [88])
	if ( $22 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$41
	$21 = $22
	
.LABEL $label$40
	*($5) = $22
	CALL $867($21)
	$22 = *($26 + [88])
	if ( $22 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$22 = *($26 + [88])
	if ( ($22 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$5 = ($26 + [92])
	$21 = *($5)
	if ( ((int_32)$21 == (int_32)$22) ){ goto $label$59 }
	
.LOOP $label$60:
	$21 = ($21 + [-24])
	$6 = *($21)
	*($21) = [0]
	if ( ($6 == 0) ){ goto $label$61 }
	CALL $867($6)
	
.LABEL $label$61
	if ( ((int_32)$22 != (int_32)$21) ){ goto $label$60 }
	$21 = *(($26 + [88]))
	goto $label$58 
	
.LABEL $label$59
	$21 = $22
	
.LABEL $label$58
	*($5) = $22
	CALL $867($21)
	
.LABEL $label$5
	$22 = *($26 + [128])
	if ( ($22 == 0) ){ goto $label$62 }
	$5 = ($26 + [132])
	$21 = *($5)
	if ( ((int_32)$21 == (int_32)$22) ){ goto $label$64 }
	
.LOOP $label$65:
	$21 = ($21 + [-24])
	$6 = *($21)
	*($21) = [0]
	if ( ($6 == 0) ){ goto $label$66 }
	CALL $867($6)
	
.LABEL $label$66
	if ( ((int_32)$22 != (int_32)$21) ){ goto $label$65 }
	$21 = *(($26 + [128]))
	goto $label$63 
	
.LABEL $label$64
	$21 = $22
	
.LABEL $label$63
	*($5) = $22
	CALL $867($21)
	
.LABEL $label$62
	*([0] + [4]) = ($26 + [144])
	$6
	$22
	$21
	$22
}

void .FUNC $638 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [208])
	*([0] + [4]) = $12
	*($12 + [200]) = $1
	*($12 + [198]) = $2
	*($12 + [197]) = $3
	CALL require_auth($1)
	$6 = *($5 + [24])
	$5 = *($0 + [48])
	$8 = *(($5 + [28]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$1 }
	$9 = ($8 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$1 }
	$8 = $9
	$11 = ($9 + [-24])
	$9 = $11
	if ( ((int_32)($11 + $7) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$4 }
	$9 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	$11 = CALL db_find_i64(*($5), *($5 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $13($5, $11)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$5), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [192])
	CALL $269(($12 + [184]), *($0 + [60]), $1, [1])
	*($12 + [176]) = $5
	*($12 + [180]) = $9
	*($12 + [168]) = *($12 + [184])
	*($12 + [8 align=4]) = *($12 + [176])
	*(($12 + [4])) = *($12 + [172])
	*($12) = *($12 + [168])
	CALL $639($0, ($12 + [8]), $2, $3, [1], [0], $12)
	$10 = CALL $91(*($0 + [60]))
	*($12 + [160]) = $10
	$9 = *($0 + [60])
	CALL $883(($12 + [96]), $4)
	CALL $92(($12 + [112]), $9, $10, $1, ($12 + [96]), ($12 + [128]))
	if ( ((*($12 + [96]) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*($12 + [104]))
	
.LABEL $label$5
	*(($12 + [88])) = [0]
	*($12 + [72]) = (int_64)-1
	*($12 + [80]) = (int_64)0
	$1 = *($0)
	*($12 + [56]) = $1
	*($12 + [64]) = $1
	*($12 + [32]) = $4
	*($12 + [28]) = ($12 + [200])
	*($12 + [24]) = ($12 + [160])
	*($12 + [36]) = ($12 + [112])
	*($12 + [40]) = ($12 + [128])
	*($12 + [44]) = ($12 + [198])
	*($12 + [48]) = ($12 + [197])
	CALL $640(($12 + [16]), ($12 + [56]), $1, ($12 + [24]))
	CALL $95(*(($0 + [60])), *($12 + [200]), *($12 + [160]))
	$8 = *($12 + [80])
	if ( ($8 == 0) ){ goto $label$6 }
	$7 = (($12 + [56]) + [28])
	$11 = *($7)
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$8 }
	
.LOOP $label$9:
	$11 = ($11 + [-24])
	$9 = *($11)
	*($11) = [0]
	if ( ($9 == 0) ){ goto $label$10 }
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*(($9 + [40])))
	
.LABEL $label$11
	if ( ((*($9 + [20]) & [1]) == 0) ){ goto $label$12 }
	CALL $867(*(($9 + [28])))
	
.LABEL $label$12
	CALL $867($9)
	
.LABEL $label$10
	if ( ((int_32)$8 != (int_32)$11) ){ goto $label$9 }
	$9 = *(($12 + [80]))
	goto $label$7 
	
.LABEL $label$8
	$9 = $8
	
.LABEL $label$7
	*($7) = $8
	CALL $867($9)
	
.LABEL $label$6
	if ( ((*($12 + [112]) & [1]) == 0) ){ goto $label$13 }
	CALL $867(*($12 + [120]))
	
.LABEL $label$13
	*([0] + [4]) = ($12 + [208])
}

void .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $85(*($1), ($0 + [32]))
}

int_32 .FUNC $349 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $866([48])
	$4 = CALL $373($6)
	*($6 + [36]) = $0
	CALL $374(($8 + [32]), $4)
	*($6 + [40]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [40])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $375(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $348 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([24])) + [12]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [160])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [16]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [16])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $376(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $611 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([88])) + [8]) = [0]
	*($6) = (int_64)0
	*($6 + [12]) = [0]
	*($6 + [16]) = [0]
	*($6 + [20]) = [0]
	*($6 + [24]) = [0]
	*($6 + [28]) = [0]
	*($6 + [29]) = [0]
	*($6 + [30]) = [0]
	*($6 + [32]) = [0]
	*($6 + [36]) = [0]
	*($6 + [40]) = [0]
	*($6 + [44]) = [0]
	*($6 + [48]) = [0]
	*($6 + [52]) = [0]
	*($6 + [56]) = [0]
	*($6 + [60]) = [0]
	*($6 + [64]) = [0]
	*($6 + [68]) = [0]
	*($6 + [70]) = [0]
	*($6 + [72]) = [0]
	*($6 + [76]) = $0
	CALL $613(($8 + [32]), $6)
	*($6 + [84]) = [-1]
	*($6 + [80]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [80])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $614(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [56])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [60])) = $7
	CALL $867($7)
	
.LABEL $label$10
	$7 = *($4 + [44])
	if ( ($7 == 0) ){ goto $label$11 }
	*(($4 + [48])) = $7
	CALL $867($7)
	
.LABEL $label$11
	$7 = *($4 + [32])
	if ( ($7 == 0) ){ goto $label$12 }
	*(($4 + [36])) = $7
	CALL $867($7)
	
.LABEL $label$12
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $610 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [16])
	$12 = $13
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$5 = ($1 + [8])
	$4 = *($1)
	$10 = *($1 + [8])
	$7 = ($1 + [12])
	$9 = *($7)
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$1 }
	$6 = int_32(($9 - $10) >> [4])
	$9 = [0]
	$8 = (*(*($3)) & [255])
	
.LOOP $label$3:
	if ( ((int_32)*($10) == (int_32)$8) ){ goto $label$2 }
	$10 = ($10 + [16])
	$9 = ($9 + [1])
	if ( ($9 <= $6) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*(($10 + [8])) = *(*($3 + [4]))
	*(($10 + [10])) = *(*($3 + [4]) + [4])
	*(($10 + [12])) = *(*($3 + [4]) + [8])
	*(($10 + [14])) = *(*($3 + [4]) + [12])
	
.LABEL $label$1
	CALL eosio_assert([1], [512])
	$8 = *($5)
	$9 = *($7)
	$6 = ($9 - $8)
	$11 = (CASTING uint_64)(uint_32 int_32($6 >> [4]))
	$10 = [22]
	
.LOOP $label$4:
	$10 = ($10 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$6 }
	$10 = (((int_32)uint_32(($6 + [-16]) >> [4]) * (int_32)[14]) + $10)
	goto $label$5 
	
.LABEL $label$6
	$10 = ($10 + [-14])
	
.LABEL $label$5
	if ( ($10 <= [513]) ){ goto $label$8 }
	$9 = CALL malloc($10)
	goto $label$7 
	
.LABEL $label$8
	$9 = ($13 - (($10 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$7
	*($12) = $9
	*($12 + [8]) = ($9 + $10)
	CALL eosio_assert(((int_32)$10 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	*($12 + [4]) = ($9 + [8])
	CALL $446($12, $5)
	CALL db_update_i64(*($1 + [24]), $2, $9, $10)
	if ( ($10 <= [513]) ){ goto $label$9 }
	CALL free($9)
	
.LABEL $label$9
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($12 + [16])
}

int_32 .FUNC $613 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [26]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [28]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [29]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [30]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = CALL $616(CALL $616(CALL $264($0, ($1 + [32])), ($1 + [44])), ($1 + [56]))
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [160])
	CALL memcpy(($1 + [68]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [70]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [72]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $612 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	$3 = *($2 + [56])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($2 + [60])) = $3
	CALL $867($3)
	
.LABEL $label$6
	$3 = *($2 + [44])
	if ( ($3 == 0) ){ goto $label$7 }
	*(($2 + [48])) = $3
	CALL $867($3)
	
.LABEL $label$7
	$3 = *($2 + [32])
	if ( ($3 == 0) ){ goto $label$8 }
	*(($2 + [36])) = $3
	CALL $867($3)
	
.LABEL $label$8
	CALL $867($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$2 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $867($2)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $615 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$1 }
	$4 = ($0 + [8])
	
.LOOP $label$2:
	$3 = ($2 + [-24])
	*($4) = $3
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [56])
	if ( ($3 == 0) ){ goto $label$4 }
	*(($2 + [60])) = $3
	CALL $867($3)
	
.LABEL $label$4
	$3 = *($2 + [44])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($2 + [48])) = $3
	CALL $867($3)
	
.LABEL $label$5
	$3 = *($2 + [32])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($2 + [36])) = $3
	CALL $867($3)
	
.LABEL $label$6
	CALL $867($2)
	
.LABEL $label$3
	$2 = *($4)
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $867($2)
	
.LABEL $label$7
	return $0
}

void .FUNC $614 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	$9 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $9) / (int_32)[24])
	$8 = ($4 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$2 }
	$5 = ($0 + [8])
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[24])
	if ( ((uint_32)$9 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($10 + [24])) = $5
	$5 = [0]
	*($10 + [20]) = [0]
	$7 = ($10 + [20])
	$9 = ($9 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	$5 = $9
	goto $label$4 
	
.LABEL $label$5
	*(($10 + [24])) = $5
	*($10 + [20]) = [0]
	$7 = ($10 + [20])
	$5 = [178956970]
	
.LABEL $label$4
	$8 = CALL $866(((int_32)$5 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	*($10 + [8]) = $8
	$9 = ($8 + ((int_32)$4 * (int_32)[24]))
	*($10 + [12]) = $9
	$5 = ($8 + ((int_32)$5 * (int_32)[24]))
	*($7) = $5
	$8 = *($1)
	*($1) = [0]
	$1 = *($3)
	$6 = *($2)
	*($9) = $8
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$1 = ($9 + [24])
	*($10 + [16]) = $1
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = ($8 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($8 + [-8]))
	*(($9 + [-12])) = *(($8 + [-12]))
	*(($9 + [-16])) = *(($8 + [-16]))
	$9 = (*($10 + [12]) + [-24])
	*($10 + [12]) = $9
	$8 = $5
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$8 = *(($0 + [4]))
	$5 = *($7)
	$2 = *($0)
	$1 = *(($10 + [16]))
	
.LABEL $label$6
	*($0) = $9
	*(($0 + [4])) = $1
	*((($10 + [8]) + [8])) = $8
	$9 = ($0 + [8])
	$8 = *($9)
	*($9) = $5
	*($10 + [12]) = $2
	*($7) = $8
	*($10 + [8]) = $2
	CALL $615(($10 + [8]))
	*([0] + [4]) = ($10 + [32])
	(unreachable)
}

void .FUNC $617 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [3]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [3])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$4 }
	$6 = [536870911]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$7 }
	$6 = int_32($2 >> [2])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $866(($6 << [3]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($6) = (int_64)0
	*($6 + [4]) = [0]
	*($6) = [0]
	$6 = (*($0) + [8])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $882($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [3]))
	$5 = ($2 + ($3 << [3]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = (int_64)0
	*($6 + [4]) = [0]
	*($6) = [0]
	$6 = ($6 + [8])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $867($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $616 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [592])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [3])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $617($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [3]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[1]), [160])
	CALL memcpy($7, *($4), [2])
	$6 = (*($4) + [2])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[3]), [160])
	CALL memcpy(($7 + [4]), *($4), [4])
	$6 = (*($4) + [4])
	*($4) = $6
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

int_32 .FUNC $828 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $829 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	$3 = *(*($0))
	CALL eosio_assert([1], [1248])
	$2 = ((uint_64)$3 / (uint_64)(int_64)1000000)
	$0 = [0]
	$3 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [1120])
	CALL eosio_assert(((int_64)1397703940 == (int_64)*(($1 + [16]))), [3504])
	$3 = ((int_64)*($1 + [8]) + (int_64)$2)
	*($1 + [8]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [3584])
}

int_32 .FUNC $826 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [44]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2928])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-3732754643350212208)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2864])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2864])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $825(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $827 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $824 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $825 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [128])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $866([56])) + [24]) = (int_64)1398362884
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1120])
	*($4 + [40]) = $0
	CALL $828(($8 + [32]), $4)
	*($4 + [48]) = [-1]
	*($4 + [44]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [44])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $824($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $867($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $822 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $463($0, ($1 + [32]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $823 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$9 = (*([0] + [4]) - [32])
	$12 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [264])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [248])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [256])), (int_64)-3732754643350212208, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $825($5, $6)
	*($12 + [12]) = [0]
	*($12 + [8]) = $5
	$7 = *(*(CALL $826(($12 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [264])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [2800])
	$7 = *($8)
	*($1 + [8]) = [1]
	*($1) = $7
	$4 = *(*($3 + [4]) + [4])
	*($1 + [16]) = *($4 + [16])
	*(($1 + [24])) = *(($4 + [24]))
	$4 = (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
	*($1 + [32]) = (CASTING uint_64)(uint_32 ($4 - ((uint_32)$4 % (uint_32)[3600])))
	$4 = $9
	$9 = ($4 + [-48])
	*([0] + [4]) = $9
	*($12 + [12]) = $9
	*($12 + [8]) = $9
	*($12 + [16]) = ($4 + [-15])
	CALL $827(($12 + [8]), $1)
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($2 + [8]), (int_64)-3732754643350212208, *(*($0 + [8])), $7, $9, [33])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$7 = *(($2 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	*($12 + [24]) = (int_64))((int_64)0 - *(($1 + [32])))
	*($1 + [48]) = CALL db_idx64_store($7, (int_64)-3732754643350212208, $10, $11, ($12 + [24]))
	*([0] + [4]) = ($12 + [32])
}

void .FUNC $820 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = [1]
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [56]) = ($5 + [41])
	*($5 + [52]) = $5
	*($5 + [48]) = $5
	CALL $516(($5 + [48]), $1)
	CALL db_update_i64(*($1 + [52]), $2, $5, [41])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [64])
}

void .FUNC $821 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [48]) = ((int_64)*($1 + [48]) + (int_64)*(*($3)))
	$4 = *($1)
	*($1 + [56]) = *(*(*($3 + [4]) + [4]))
	CALL eosio_assert([1], [512])
	$5 = *($1 + [32])
	$6 = *(($1 + [36]))
	$7 = ($6 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [1]))
	$3 = [32]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	$3 = (($7 & [-2]) + $3)
	
.LABEL $label$2
	$6 = ($3 + [16])
	if ( ($6 <= [513]) ){ goto $label$4 }
	$3 = CALL malloc($6)
	goto $label$3 
	
.LABEL $label$4
	$3 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$3
	*($9 + [4]) = $3
	*($9) = $3
	*($9 + [8]) = ($3 + $6)
	CALL $822($9, $1)
	CALL db_update_i64(*($1 + [68]), $2, $3, $6)
	if ( ($6 <= [513]) ){ goto $label$5 }
	CALL free($3)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $219 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [96]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [104]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $218 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($3 = ($0 + [24]))) = (int_64)1397703940
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [40]))) = (int_64)1397703940
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [56]))) = (int_64)1397703940
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [72]))) = (int_64)1397703940
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [88]))) = (int_64)1397703940
	*($0 + [80]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$3 = [0]
	
.LABEL $label$21
	CALL eosio_assert($3, [1120])
	*($0 + [104]) = (int_64)0
	*($0 + [96]) = [0]
	return $0
}

int_32 .FUNC __towrite (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $505 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([40])) + [24]) = $0
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [160])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[16]), [160])
	CALL memcpy(($6 + [16]), ($7 + [16]), [8])
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $507(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $504 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [128])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $866([80])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = (int_64)0
	*($4 + [24]) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1120])
	*($4 + [40]) = [0]
	*($4 + [32 align=4]) = (int_64)0
	*($4 + [64]) = $0
	CALL $508(($8 + [32]), $4)
	*($4 + [68]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [68])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $509($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	$6 = *($5 + [32])
	if ( ($6 == 0) ){ goto $label$15 }
	*(($5 + [36])) = $6
	CALL $867($6)
	
.LABEL $label$15
	CALL $867($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $507 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $506 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)((int_64)*(*($3)) * (int_64)-1000000))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 + [16]), ($1 + [16]), [8])
	CALL db_update_i64(*($1 + [28]), $2, $5, [24])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $501 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*(($1 + [28])))
	
.LABEL $label$11
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$12 }
	CALL $867(*(($1 + [16])))
	
.LABEL $label$12
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $867($6)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $500 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [16])
	$7 = $6
	*([0] + [4]) = $6
	$2 = *($0)
	$5 = *($0 + [4])
	*($1) = *(*($5))
	CALL $869(($1 + [8]), *($5 + [4]))
	*($1 + [40]) = [1]
	CALL $869(($1 + [20]), *($5 + [8]))
	$5 = *($1 + [8])
	$3 = ( *(($1 + [12])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($3 + [25])
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$3 = *(($1 + [20]))
	$3 = ( *(($1 + [24])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $5)
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($5 <= [513]) ){ goto $label$4 }
	$6 = CALL malloc($5)
	goto $label$3 
	
.LABEL $label$4
	$6 = ($6 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$3
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = ($6 + $5)
	CALL $497($7, $1)
	$4 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($2 + [8]), (int_64)-6147542903796033232, *(*($0 + [8])), $4, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $468 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	$2 = *(*($0))
	if ( ((uint_32)$2 > (uint_32)[8]) ){ goto $label$1 }
	goto $label$10 
	
.LABEL $label$10
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [16]))), [3504])
	$3 = ((int_64)*($1 + [8]) + (int_64)*($0))
	*($1 + [8]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [3584])
	return 
	
.LABEL $label$9
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [32]))), [3504])
	$3 = ((int_64)*($1 + [24]) + (int_64)*($0))
	*($1 + [24]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [3584])
	return 
	
.LABEL $label$8
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [48]))), [3504])
	$3 = ((int_64)*($1 + [40]) + (int_64)*($0))
	*($1 + [40]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [40]) < (int_64)4611686018427387904), [3584])
	return 
	
.LABEL $label$7
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [64]))), [3504])
	$3 = ((int_64)*($1 + [56]) + (int_64)*($0))
	*($1 + [56]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [56]) < (int_64)4611686018427387904), [3584])
	return 
	
.LABEL $label$6
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [80]))), [3504])
	$3 = ((int_64)*($1 + [72]) + (int_64)*($0))
	*($1 + [72]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [72]) < (int_64)4611686018427387904), [3584])
	return 
	
.LABEL $label$5
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [96]))), [3504])
	$3 = ((int_64)*($1 + [88]) + (int_64)*($0))
	*($1 + [88]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [88]) < (int_64)4611686018427387904), [3584])
	return 
	
.LABEL $label$4
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [112]))), [3504])
	$3 = ((int_64)*($1 + [104]) + (int_64)*($0))
	*($1 + [104]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [104]) < (int_64)4611686018427387904), [3584])
	return 
	
.LABEL $label$3
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [112]))), [3504])
	$3 = ((int_64)*($1 + [104]) + (int_64)*($0))
	*($1 + [104]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [104]) < (int_64)4611686018427387904), [3584])
	return 
	
.LABEL $label$2
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [128]))), [3504])
	$3 = ((int_64)*($1 + [120]) + (int_64)*($0))
	*($1 + [120]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [120]) < (int_64)4611686018427387904), [3584])
	
.LABEL $label$1
	$2
}

int_32 .FUNC $469 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [104]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [112]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [120]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [128]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $466 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [592])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [1])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $467($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [1]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	$2 = ($0 + [8])
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*($2) - $7) > (uint_32)[1]), [160])
	CALL memcpy($4, *($5), [2])
	$7 = (*($5) + [2])
	*($5) = $7
	$4 = ($4 + [2])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $467 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [1]) >= (uint_32)$1) ){ goto $label$3 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [1])
	$2 = ($4 + $1)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [0]
	$7 = ($7 - $3)
	$7 = ( ( $2 ? $7 : ($7 <= $2) ) ? [2147483647] : (int_32($7 >> [1]) <= [1073741823]) )
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL $866(($7 << [1]))
	
.LABEL $label$4
	$3 = ($6 + ($7 << [1]))
	$2 = ($6 + ($4 << [1]))
	$6 = $2
	$7 = $1
	
.LOOP $label$5:
	*($6) = [0]
	$6 = ($6 + [2])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$5 }
	$4 = ($2 + ($1 << [1]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$7 }
	CALL $867($6)
	
.LABEL $label$7
	return (unreachable)
	
.LABEL $label$3
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [2])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	*(($0 + [4])) = ($2 + ($1 << [1]))
	return (unreachable)
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $464 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	*(($0 + [32])) = [0]
	*($0 + [24 align=4]) = (int_64)0
	*($0 + [36]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $466($4, ($0 + [24]))
	*($0 + [40]) = *(*($2 + [8]))
	return $0
}

void .FUNC $465 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [24])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [28])) = $6
	CALL $867($6)
	
.LABEL $label$11
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $867($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $462 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $463 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [1]))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [576])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [8])
	$2 = ($0 + [4])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[1]), [576])
	CALL memcpy(*($2), $5, [2])
	$7 = (*($2) + [2])
	*($2) = $7
	$5 = ($5 + [2])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $460 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [64]))) = (int_64)1398362884
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [1120])
	return $0
}

int_32 .FUNC $461 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $725 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($2 + [4]), ($0 + [12]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$1 = *($1)
	CALL eosio_assert(((int_32)(*($1 + [8]) - *($1 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($1 + [4]), ($0 + [14]), [2])
	*($1 + [4]) = (*($1 + [4]) + [2])
}

void .FUNC $668 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	CALL require_auth($1)
	$3 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*(($6 + [44])) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7949128882289606656, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $385($5, $7)
	CALL eosio_assert(((int_32)*($6 + [44]) == (int_32)$5), [32])
	
.LABEL $label$3
	$7 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($7, [4304])
	CALL $669(*($0 + [92]), $1, $2)
	CALL eosio_assert($7, [2224])
	CALL eosio_assert($7, [960])
	$7 = CALL db_next_i64(*($6 + [48]), ($8 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	CALL $385($5, $7)
	
.LABEL $label$5
	CALL $392($5, $6)
	CALL $651($0, $1)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $669 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($8 + [24]) = $2
	$3 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)8526756653867991040, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $386($5, $7)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$5), [32])
	
.LABEL $label$3
	$7 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($7, [4304])
	*($8 + [23]) = [0]
	$1 = *($0)
	*($8 + [12]) = ($8 + [23])
	*($8 + [8]) = ($8 + [24])
	CALL eosio_assert($7, [352])
	CALL $670($5, $6, $1, ($8 + [8]))
	CALL eosio_assert(*($8 + [23]), [4384])
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $724 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	*($5 + [60]) = [0]
	*($5 + [56]) = [0]
	if ( (*($1 + [44]) == 0) ){ goto $label$3 }
	if ( ((int_32)$3 <= (int_32)$2) ){ goto $label$1 }
	$2 = ($3 - $2)
	goto $label$2 
	
.LABEL $label$3
	*(($1 + [44])) = [1]
	*($5 + [60]) = [1]
	$2 = ( $3 ? $2 : ((int_32)$3 > (int_32)$2) )
	
.LABEL $label$2
	*($5 + [56]) = $2
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$1 }
	$2 = [0]
	*(($5 + [48])) = [0]
	*($5 + [32]) = (int_64)-1
	$4 = *($0 + [8])
	*($5 + [16]) = $4
	*($5 + [24]) = $4
	*($5 + [40]) = (int_64)0
	$3 = CALL db_lowerbound_i64($4, $4, (int_64)7235159542483386368, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$5 }
	CALL $585(($5 + [16]), $3)
	$3 = CALL db_lowerbound_i64(*($5 + [16]), *((($5 + [16]) + [8])), (int_64)7235159542483386368, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	$2 = CALL $585(($5 + [16]), $3)
	
.LABEL $label$6
	$4 = *(($0 + [8]))
	*($5 + [12]) = ($5 + [60])
	*($5 + [8]) = ($5 + [56])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [352])
	CALL $731(($5 + [16]), $2, $4, ($5 + [8]))
	$1 = *($5 + [40])
	if ( $1 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$5
	$4 = *(($0 + [8]))
	*($5 + [12]) = ($5 + [60])
	*($5 + [8]) = ($5 + [56])
	CALL $730($5, ($5 + [16]), $4, ($5 + [8]))
	$1 = *($5 + [40])
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$4
	$0 = ($5 + [44])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	CALL $867($3)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($5 + [40]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $1
	
.LABEL $label$7
	*($0) = $1
	CALL $867($2)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [64])
}

void .FUNC $664 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $5, [16])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $665 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $666 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = $1
	$1 = *($2 + [4])
	*($0) = *(*($1))
	*($0 + [8]) = *(*($1 + [4]))
	$1 = *($2)
	CALL eosio_assert([1], [576])
	CALL memcpy($4, $0, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($4 | [8]), ($0 + [8]), [8])
	$3 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)-7768026120019509248, *(*($2 + [8])), $3, $4, [16])
	if ( (uint_64)($3 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	return $0
}

void .FUNC $667 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($0 + [16]), *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($0 + [20]), *($1 + [4]), [4])
	*($1 + [4]) = (*($1 + [4]) + [4])
}

void .FUNC $660 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	$4 = CALL $866([48])
	$6 = CALL $373($4)
	*($4 + [36]) = $1
	*($4) = *(*($3))
	$7 = *($3 + [4])
	*(($4 + [28])) = *(($7 + [12]))
	*(($4 + [24])) = *(($7 + [8]))
	*(($4 + [20])) = *(($7 + [4]))
	*($4 + [16]) = *($7)
	*($4 + [32]) = *(*($3 + [8]))
	*($4 + [8]) = *(*($3 + [12]))
	*($8 + [72]) = (($8 + [16]) + [34])
	*($8 + [68]) = ($8 + [16])
	*($8 + [64]) = ($8 + [16])
	CALL $661(($8 + [64]), $6)
	$5 = *($4)
	*($4 + [40]) = CALL db_store_i64(*($1 + [8]), (int_64)-7949128880453320704, $2, $5, ($8 + [16]), [34])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [64]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$7 = *($4 + [40])
	*($8 + [12]) = $7
	$3 = *(($1 + [28]))
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $7
	*($8 + [64]) = [0]
	*($3) = $4
	*(($1 + [28])) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $375(($1 + [24]), ($8 + [64]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [64])
	*($8 + [64]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $867($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [80])
}

int_32 .FUNC $661 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC $662 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $866([32])
	CALL $666($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [20])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $665(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $663 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([32])) + [8]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [160])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $665(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $726 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	$22 = (*([0] + [4]) - [128])
	*([0] + [4]) = $22
	*($22 + [124]) = $3
	*(($22 + [112])) = [0]
	*($22 + [96]) = (int_64)-1
	*($22 + [104]) = (int_64)0
	$4 = *($0)
	*($22 + [80]) = $4
	*($22 + [88]) = $4
	$5 = (CASTING uint_64)(uint_32 ((uint_32)$1 / (uint_32)[100]))
	*($22 + [72]) = $5
	*($22 + [68]) = [0]
	*($22 + [64]) = [0]
	*($22 + [60]) = [0]
	*($22 + [56]) = [0]
	*($22 + [52]) = [0]
	*($22 + [48]) = [0]
	$6 = ($0 + [48])
	$11 = ($0 + [72])
	$12 = ($0 + [76])
	$13 = ($0 + [56])
	$16 = [0]
	$17 = [0]
	$18 = [0]
	$19 = [0]
	$20 = [0]
	$21 = [0]
	$14 = [1]
	
.LOOP $label$1:
	$7 = ($2 + ($14 << [1]))
	$8 = *($7)
	if ( (int_64)($8 == 0) ){ goto $label$2 }
	$9 = *($11)
	$15 = *($12)
	if ( ((int_32)$15 == (int_32)$9) ){ goto $label$3 }
	$1 = ($15 + [-24])
	$10 = ([0] - $9)
	
.LOOP $label$4:
	if ( ((int_64)*(*($1)) == (int_64)$8) ){ goto $label$3 }
	$15 = $1
	$3 = ($1 + [-24])
	$1 = $3
	if ( ((int_32)($3 + $10) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$15 == (int_32)$9) ){ goto $label$6 }
	$1 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*(($1 + [20])) == (int_32)$6), [32])
	if ( $1 ){ goto $label$5 }
	goto $label$2 
	
.LABEL $label$6
	$1 = CALL db_find_i64(*($6), *($13), (int_64)-4860070093188497408, $8)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$1 = CALL $229($6, $1)
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$6), [32])
	
.LABEL $label$5
	$1 = (*($1 + [9]) + [-1])
	if ( ((uint_32)$1 > (uint_32)[4]) ){ goto $label$2 }
	goto $label$12 
	
.LABEL $label$12
	$16 = ($16 + [1])
	*($22 + [68]) = $16
	goto $label$2 
	
.LABEL $label$11
	$17 = ($17 + [1])
	*($22 + [64]) = $17
	goto $label$2 
	
.LABEL $label$10
	if ( ((int_32)((uint_32)*($7) % (uint_32)[20]) != (int_32)[9]) ){ goto $label$7 }
	$18 = ($18 + [1])
	*($22 + [56]) = $18
	goto $label$2 
	
.LABEL $label$9
	$20 = ($20 + [1])
	*($22 + [52]) = $20
	goto $label$2 
	
.LABEL $label$8
	$21 = ($21 + [1])
	*($22 + [48]) = $21
	goto $label$2 
	
.LABEL $label$7
	$19 = ($19 + [1])
	*($22 + [60]) = $19
	
.LABEL $label$2
	$14 = ($14 + [1])
	if ( ((int_32)$14 != (int_32)[4]) ){ goto $label$1 }
	if ( ((int_32)((((($17 + $16) + $19) + $18) + $20) + $21) <= (int_32)[0]) ){ goto $label$15 }
	$1 = CALL db_find_i64($4, $4, (int_64)-7947854319410216960, $5)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$16 }
	$1 = CALL $63(($22 + [80]), $1)
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)($22 + [80])), [32])
	$8 = *($0)
	*($22 + [20]) = ($22 + [64])
	*($22 + [16]) = ($22 + [68])
	*($22 + [24]) = ($22 + [60])
	*($22 + [28]) = ($22 + [56])
	*($22 + [32]) = ($22 + [52])
	*($22 + [36]) = ($22 + [48])
	*($22 + [40]) = ($22 + [124])
	CALL eosio_assert([1], [352])
	CALL $728(($22 + [80]), $1, $8, ($22 + [16]))
	$15 = *($22 + [104])
	if ( $15 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$8 = *($0)
	*($22 + [20]) = ($22 + [68])
	*($22 + [16]) = ($22 + [72])
	*($22 + [24]) = ($22 + [64])
	*($22 + [28]) = ($22 + [60])
	*($22 + [32]) = ($22 + [56])
	*($22 + [36]) = ($22 + [52])
	*($22 + [40]) = ($22 + [48])
	*($22 + [44]) = ($22 + [124])
	CALL $727(($22 + [8]), ($22 + [80]), $8, ($22 + [16]))
	
.LABEL $label$15
	$15 = *($22 + [104])
	if ( ($15 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$10 = ($22 + [108])
	$1 = *($10)
	if ( ((int_32)$1 == (int_32)$15) ){ goto $label$18 }
	
.LOOP $label$19:
	$1 = ($1 + [-24])
	$3 = *($1)
	*($1) = [0]
	if ( ($3 == 0) ){ goto $label$20 }
	CALL $867($3)
	
.LABEL $label$20
	if ( ((int_32)$15 != (int_32)$1) ){ goto $label$19 }
	$1 = *(($22 + [104]))
	goto $label$17 
	
.LABEL $label$18
	$1 = $15
	
.LABEL $label$17
	*($10) = $15
	CALL $867($1)
	
.LABEL $label$13
	*([0] + [4]) = ($22 + [128])
	$1
}

void .FUNC $721 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $9) / (int_32)[96])
	$8 = ($6 + [1])
	if ( ((uint_32)$8 >= (uint_32)[44739243]) ){ goto $label$2 }
	$7 = [44739242]
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[96])
	if ( ((uint_32)$9 > (uint_32)[22369620]) ){ goto $label$4 }
	$9 = ($9 << [1])
	$7 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $866(((int_32)$7 * (int_32)[96]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	*(($4 = (($6 = CALL memcpy(($9 = ($8 + ((int_32)$6 * (int_32)[96]))), $1, [80])) + [88]))) = [0]
	*($6 + [80 align=4]) = (int_64)0
	$5 = (*(($1 + [84])) - *($1 + [80]))
	$3 = int_32($5 >> [5])
	if ( ($3 == 0) ){ goto $label$6 }
	$2 = ($6 + [80])
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$5 }
	$5 = CALL $866($5)
	*($2) = $5
	*(($2 = ($6 + [84]))) = $5
	*($4) = ($5 + ($3 << [5]))
	$3 = *(($1 + [80]))
	$1 = (*(($1 + [84])) - $3)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($5, $3, $1)
	*($2) = (*($2) + $1)
	
.LABEL $label$6
	$3 = ($8 + ((int_32)$7 * (int_32)[96]))
	$4 = ($6 + [96])
	$1 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$8 }
	$5 = ([0] - $1)
	$1 = ($6 + [-96])
	
.LOOP $label$9:
	CALL memcpy(($9 + [-96]), $1, [80])
	*(($6 = ($9 + [-16]))) = (int_64)0
	*(($7 = ($9 + [-8]))) = [0]
	$8 = ($1 + [80])
	*($6) = *($8)
	*(($9 + [-12])) = *(($1 + [84]))
	$6 = ($1 + [88])
	*($7) = *($6)
	*($6) = [0]
	*($8) = (int_64)0
	$9 = ($9 + [-96])
	$1 = ($1 + [-96])
	if ( ((int_32)($1 + $5) != (int_32)[-96]) ){ goto $label$9 }
	$1 = *(($0 + [4]))
	$7 = *($0)
	goto $label$7 
	
.LABEL $label$8
	$7 = $1
	
.LABEL $label$7
	*($0) = $9
	*(($0 + [4])) = $4
	*(($0 + [8])) = $3
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$10 }
	$6 = ([0] - $7)
	$9 = ($1 + [-16])
	
.LOOP $label$11:
	$1 = *($9)
	if ( ($1 == 0) ){ goto $label$12 }
	*(($9 + [4])) = $1
	CALL $867($1)
	
.LABEL $label$12
	$9 = ($9 + [-96])
	if ( ((int_32)($9 + $6) != (int_32)[-16]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($7 == 0) ){ goto $label$13 }
	CALL $867($7)
	
.LABEL $label$13
	return (unreachable)
	
.LABEL $label$5
	CALL $882($2)
	(unreachable)
}

int_32 .FUNC $720 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, float_64 $9, int_32 $10)
{
	float_64 $11
	int_64 $12
	int_32 $13
	float_64 $14
	float_64 $15
	int_32 $16
	float_64 $17
	float_64 $18
	float_64 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_64 $34
	int_32 $35
	float_64 $36
	int_32 $37
	$37 = (*([0] + [4]) - [32])
	*([0] + [4]) = $37
	$36 = (CASTING float_64)(uint_32 *($6 + [9]))
	$36 = ((float_64)$36 + (float_64)((float_64)$36 * (float_64)((float_64)(CASTING float_64)(int_32 $3) / (float_64)(CASTING float_64)(int_32 ($3 + [777])))))
	$31 = [0]
	$29 = [0]
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$1 }
	$29 = [1]
	if ( ((int_32)$8 < (int_32)[5]) ){ goto $label$1 }
	$29 = [2]
	if ( ((int_32)$8 < (int_32)[9]) ){ goto $label$1 }
	$29 = [3]
	if ( ((int_32)$8 < (int_32)[13]) ){ goto $label$1 }
	$29 = [4]
	if ( ((int_32)$8 < (int_32)[17]) ){ goto $label$1 }
	$29 = ( [5] ? [0] : ((int_32)$8 < (int_32)[21]) )
	
.LABEL $label$1
	$34 = ((uint_64)((int_64)((int_64)*($7) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*($7) = $34
	$12 = (uint_64)((int_64)$34 * (int_64)1000000000) >> (uint_64)(int_64)31
	$13 = (CASTING uint_32)(uint_64 $12)
	*($7 + [4]) = $13)
	$11 = min ( (float_64)((float_64)((float_64)((float_64)((float_64)(CASTING float_64)(int_32 $2) / (float_64)(float_64)1e3) * (float_64)(float_64)20) + (float_64)$36) * (float_64)$9) , (float_64)(float_64)100 )
	if ( ((int_32)$2 >= (int_32)[20]) ){ goto $label$5 }
	$30 = [5]
	goto $label$4 
	
.LABEL $label$5
	$30 = [6]
	if ( ((int_32)$2 >= (int_32)[100]) ){ goto $label$3 }
	
.LABEL $label$4
	$32 = [0]
	$33 = [0]
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$2 > (int_32)[299]) ){ goto $label$6 }
	$33 = ((int_32)((int_32)$4 * (int_32)[1000]) / (int_32)$5)
	$30 = [8]
	$32 = [0]
	goto $label$2 
	
.LABEL $label$6
	$32 = ((int_32)((int_32)$4 * (int_32)[3000]) / (int_32)$5)
	$33 = ((int_32)((int_32)$4 * (int_32)[1000]) / (int_32)$5)
	$30 = [9]
	if ( ((int_32)$2 < (int_32)[500]) ){ goto $label$2 }
	$31 = ((int_32)((int_32)$4 * (int_32)[5000]) / (int_32)$5)
	$30 = [10]
	
.LABEL $label$2
	$8 = ($4 - $31)
	$19 = (CASTING float_64)(int_32 ( $8 ? [0] : ((int_32)$8 > (int_32)[0]) ))
	$8 = ($4 - $32)
	$18 = (CASTING float_64)(int_32 ( $8 ? [0] : ((int_32)$8 > (int_32)[0]) ))
	$8 = ($4 - $33)
	$17 = (CASTING float_64)(int_32 ( $8 ? [0] : ((int_32)$8 > (int_32)[0]) ))
	$35 = ($30 + [-19])
	$16 = ($10 + [80])
	$14 = ((float_64)$11 / (float_64)(float_64)100)
	$3 = (($30 << [3]) + [5904])
	$34 = ((int_64)(CASTING uint_64)(uint_32 $30) + (int_64)1)
	$8 = ($37 + [16])
	$15 = (CASTING float_64)(int_32 $4)
	$27 = ($37 + [24])
	$28 = ($10 + [88])
	$4 = ($10 + [84])
	$21 = ((int_32)$29 == (int_32)[4])
	$22 = ((int_32)$2 < (int_32)[500])
	$23 = ((int_32)$2 > (int_32)[999])
	$24 = ((int_32)$2 > (int_32)[1999])
	$25 = ((int_32)$2 > (int_32)[2999])
	$26 = ((int_32)$2 < (int_32)[4000])
	
.LOOP $label$7:
	$9 = *($3)
	*(($8 + [8])) = (int_64)0
	*($8) = (int_64)0
	$9 = ((float_64)$14 * (float_64)$9)
	*(($20 = ($37 + [8]))) = (Rounds 0)(((float_64)$9 * (float_64)(float_64)1e9))
	*($37) = $34
	$2 = [1]
	$5 = $35
	$35 = ((int_32)($5 + [20]) % (int_32)[20])
	if ( ((int_32)$35 < (int_32)[5]) ){ goto $label$10 }
	$2 = [2]
	if ( ((int_32)$35 < (int_32)[8]) ){ goto $label$10 }
	if ( ((int_32)$35 > (int_32)[9]) ){ goto $label$11 }
	$9 = ( ((float_64)$9 * (float_64)(float_64)1.2) ? $9 : ((int_32)$29 == (int_32)[3]) )
	$36 = (float_64))((float_64)1 - CALL pow((float_64))((float_64)1 - $9), $17))
	goto $label$8 
	
.LABEL $label$11
	if ( ((int_32)$35 != (int_32)[10]) ){ goto $label$17 }
	$9 = ( ((float_64)$9 * (float_64)(float_64)1.2) ? $9 : $21 )
	$36 = (float_64))((float_64)1 - CALL pow((float_64))((float_64)1 - $9), $18))
	if ( ($22 == 0) ){ goto $label$16 }
	$36 = ((float_64)$36 * (float_64)(float_64)0.5)
	goto $label$8 
	
.LABEL $label$17
	$9 = ( ( ((float_64)$9 * (float_64)(float_64)1.2) ? $9 : ((int_32)$29 == (int_32)( [5] ? [0] : ((int_32)$35 < (int_32)[12]) )) ) ? $9 : $29 )
	if ( ((int_32)$35 > (int_32)[11]) ){ goto $label$9 }
	$36 = (float_64))((float_64)1 - CALL pow((float_64))((float_64)1 - $9), $19))
	if ( $23 ){ goto $label$15 }
	$36 = ((float_64)$36 * (float_64)(float_64)0.3)
	goto $label$8 
	
.LABEL $label$16
	if ( $23 ){ goto $label$14 }
	$36 = ((float_64)$36 * (float_64)(float_64)0.6)
	goto $label$8 
	
.LABEL $label$15
	if ( $24 ){ goto $label$13 }
	$36 = ((float_64)$36 * (float_64)(float_64)0.4)
	goto $label$8 
	
.LABEL $label$14
	if ( $24 ){ goto $label$12 }
	$36 = ((float_64)$36 * (float_64)(float_64)0.7)
	goto $label$8 
	
.LABEL $label$13
	$36 = ( ((float_64)$36 * (float_64)(float_64)0.5) ? $36 : $26 )
	goto $label$8 
	
.LABEL $label$12
	if ( $25 ){ goto $label$18 }
	$36 = ((float_64)$36 * (float_64)(float_64)0.8)
	goto $label$8 
	
.LABEL $label$18
	$36 = ( ((float_64)$36 * (float_64)(float_64)0.9) ? $36 : $26 )
	goto $label$8 
	
.LABEL $label$10
	$9 = ( ( ((float_64)$9 * (float_64)(float_64)1.2) ? $9 : ((int_32)$29 == (int_32)$2) ) ? $9 : $29 )
	
.LABEL $label$9
	$36 = (float_64))((float_64)1 - CALL pow((float_64))((float_64)1 - $9), $15))
	
.LABEL $label$8
	$36 = ((float_64)$36 * (float_64)(float_64)1e9)
	*($27) = (Rounds 0)($36)
	*($8) = (Rounds 0)(((float_64)$9 * (float_64)(float_64)1e9))
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)*($28)) ){ goto $label$20 }
	*($2) = *($37)
	*(($2 + [24])) = *($27)
	*(($2 + [16])) = *($8)
	*(($2 + [8])) = *($20)
	*($4) = (*($4) + [32])
	goto $label$19 
	
.LABEL $label$20
	CALL $739($16, $37)
	
.LABEL $label$19
	$2 = (CASTING int_32)(float_64 $36)
	if ( ((int_32)$13 < (int_32)$2) ){ goto $label$21 }
	$3 = ($3 + [-8])
	$35 = ($5 + [-1])
	$34 = ((int_64)$34 + (int_64)-1)
	if ( ((int_64)$34 >= (int_64)2) ){ goto $label$7 }
	
.LABEL $label$21
	$34 = ((uint_64)((int_64)((int_64)*($7) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*($7) = $34
	$34 = (uint_64)((int_64)$34 * (int_64)100) >> (uint_64)(int_64)31
	$8 = (CASTING uint_32)(uint_64 $34)
	*(($7 + [4])) = $8)
	$3 = [20]
	$4 = *($6 + [10])
	if ( ((uint_32)$4 > (uint_32)$8) ){ goto $label$22 }
	$3 = [40]
	$4 = (*($6 + [11]) + $4)
	if ( ((uint_32)$4 > (uint_32)$8) ){ goto $label$22 }
	$3 = [60]
	$4 = (*($6 + [12]) + $4)
	if ( ((uint_32)$4 > (uint_32)$8) ){ goto $label$22 }
	$3 = ( [80] ? [100] : ((uint_32)(*($6 + [13]) + $4) > (uint_32)$8) )
	
.LABEL $label$22
	*($10 + [40]) = $12
	*($10 + [48]) = $34
	*($10 + [8]) = (CASTING int_64)(int_32 $32)
	*($10) = (CASTING int_64)(int_32 $33)
	*($10 + [16]) = (CASTING int_64)(int_32 $31)
	*($10 + [24]) = (Rounds 0)(((float_64)$11 * (float_64)(float_64)1e4))
	*($10 + [32]) = (CASTING uint_64)(uint_32 ($30 + [1]))
	$8 = (( $5 ? [-19] : ((int_32)$13 < (int_32)$2) ) + $3)
	*($10 + [56]) = (CASTING int_64)(int_32 $8)
	*([0] + [4]) = ($37 + [32])
	return $8
}

int_32 .FUNC $189 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *(($0 + [312]))
	if ( ($3 == 0) ){ goto $label$1 }
	$1 = ($0 + [316])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $867($2)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	$5 = *(($0 + [312]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $3
	
.LABEL $label$2
	*($1) = $3
	CALL $867($5)
	
.LABEL $label$1
	$3 = *(($0 + [272]))
	if ( ($3 == 0) ){ goto $label$6 }
	$1 = ($0 + [276])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $867($2)
	
.LABEL $label$10
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	$5 = *(($0 + [272]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $3
	
.LABEL $label$7
	*($1) = $3
	CALL $867($5)
	
.LABEL $label$6
	$1 = *(($0 + [232]))
	if ( ($1 == 0) ){ goto $label$11 }
	$4 = ($0 + [236])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	$3 = *($2 + [32])
	if ( ($3 == 0) ){ goto $label$16 }
	*(($2 + [36])) = $3
	CALL $867($3)
	
.LABEL $label$16
	CALL $867($2)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$14 }
	$5 = *(($0 + [232]))
	goto $label$12 
	
.LABEL $label$13
	$5 = $1
	
.LABEL $label$12
	*($4) = $1
	CALL $867($5)
	
.LABEL $label$11
	$1 = *(($0 + [192]))
	if ( ($1 == 0) ){ goto $label$17 }
	$4 = ($0 + [196])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$19 }
	
.LOOP $label$20:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$21 }
	$3 = *($2 + [24])
	if ( ($3 == 0) ){ goto $label$22 }
	*(($2 + [28])) = $3
	CALL $867($3)
	
.LABEL $label$22
	CALL $867($2)
	
.LABEL $label$21
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$20 }
	$5 = *(($0 + [192]))
	goto $label$18 
	
.LABEL $label$19
	$5 = $1
	
.LABEL $label$18
	*($4) = $1
	CALL $867($5)
	
.LABEL $label$17
	$3 = *(($0 + [152]))
	if ( ($3 == 0) ){ goto $label$23 }
	$1 = ($0 + [156])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$25 }
	
.LOOP $label$26:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$27 }
	CALL $867($2)
	
.LABEL $label$27
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$26 }
	$5 = *(($0 + [152]))
	goto $label$24 
	
.LABEL $label$25
	$5 = $3
	
.LABEL $label$24
	*($1) = $3
	CALL $867($5)
	
.LABEL $label$23
	$3 = *(($0 + [112]))
	if ( ($3 == 0) ){ goto $label$28 }
	$1 = ($0 + [116])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$30 }
	
.LOOP $label$31:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$32 }
	CALL $867($2)
	
.LABEL $label$32
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$31 }
	$5 = *(($0 + [112]))
	goto $label$29 
	
.LABEL $label$30
	$5 = $3
	
.LABEL $label$29
	*($1) = $3
	CALL $867($5)
	
.LABEL $label$28
	$3 = *(($0 + [72]))
	if ( ($3 == 0) ){ goto $label$33 }
	$1 = ($0 + [76])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$35 }
	
.LOOP $label$36:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$37 }
	CALL $867($2)
	
.LABEL $label$37
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$36 }
	$5 = *(($0 + [72]))
	goto $label$34 
	
.LABEL $label$35
	$5 = $3
	
.LABEL $label$34
	*($1) = $3
	CALL $867($5)
	
.LABEL $label$33
	$3 = *(($0 + [32]))
	if ( ($3 == 0) ){ goto $label$38 }
	$1 = ($0 + [36])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$40 }
	
.LOOP $label$41:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$42 }
	CALL $867($2)
	
.LABEL $label$42
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$41 }
	$5 = *(($0 + [32]))
	goto $label$39 
	
.LABEL $label$40
	$5 = $3
	
.LABEL $label$39
	*($1) = $3
	CALL $867($5)
	
.LABEL $label$38
	return $0
}

int_32 .FUNC $188 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *($0 + [104])
	if ( ($5 == 0) ){ goto $label$1 }
	*(($0 + [108])) = $5
	CALL $867($5)
	
.LABEL $label$1
	$1 = *(($0 + [72]))
	if ( ($1 == 0) ){ goto $label$2 }
	$4 = ($0 + [76])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = *($2 + [12])
	if ( ($3 == 0) ){ goto $label$7 }
	*(($2 + [16])) = $3
	CALL $867($3)
	
.LABEL $label$7
	CALL $867($2)
	
.LABEL $label$6
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$5 }
	$5 = *(($0 + [72]))
	goto $label$3 
	
.LABEL $label$4
	$5 = $1
	
.LABEL $label$3
	*($4) = $1
	CALL $867($5)
	
.LABEL $label$2
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$8 }
	$4 = ($0 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$10 }
	
.LOOP $label$11:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$12 }
	$3 = *($2 + [12])
	if ( ($3 == 0) ){ goto $label$13 }
	*(($2 + [16])) = $3
	CALL $867($3)
	
.LABEL $label$13
	CALL $867($2)
	
.LABEL $label$12
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$11 }
	$5 = *(($0 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$5 = $1
	
.LABEL $label$9
	*($4) = $1
	CALL $867($5)
	
.LABEL $label$8
	return $0
}

int_32 .FUNC $262 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [592])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = ((int_32)($2 - $7) / (int_32)[12])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $263($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ((int_32)$4 * (int_32)[12]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$3 = *($4)
	
.LOOP $label$6:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[3]), [160])
	CALL memcpy($7, *($4), [4])
	$3 = (*($4) + [4])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[1]), [160])
	CALL memcpy(($7 + [4]), *($4), [2])
	$3 = (*($4) + [2])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[3]), [160])
	CALL memcpy(($7 + [8]), *($4), [4])
	$3 = (*($4) + [4])
	*($4) = $3
	$7 = ($7 + [12])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $263 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $6) / (int_32)[12]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ((int_32)($6 - $5) / (int_32)[12])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$3 }
	$6 = [357913941]
	$2 = ((int_32)($2 - $5) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $866(((int_32)$6 * (int_32)[12]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = (int_64)0
	*($6 + [8]) = [0]
	*($6 + [4]) = [0]
	*($6) = [0]
	$6 = (*($0) + [12])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$6 * (int_32)[12]))
	$5 = ($2 + ((int_32)$3 * (int_32)[12]))
	$6 = $5
	
.LOOP $label$8:
	*($6) = (int_64)0
	*($6 + [8]) = [0]
	*($6 + [4]) = [0]
	*($6) = [0]
	$6 = ($6 + [12])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 + ((int_32)((int_32)$2 / (int_32)[-12]) * (int_32)[12]))
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $867($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $264 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [592])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = int_32(($4 - $7) >> [4])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $266($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ($6 << [4]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($8 + [36])
	$3 = ($8 + [40])
	
.LOOP $label$6:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [4])
	*((($8 + [16]) + [12])) = ($7 + [8])
	*((($8 + [16]) + [16])) = ($7 + [10])
	*($6) = ($7 + [12])
	*($3) = ($7 + [14])
	*($8 + [20]) = ($7 + [1])
	CALL $267(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [48])
	return $0
}

void .FUNC $265 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $6
	CALL $867($6)
	
.LABEL $label$11
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $867($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $266 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$4 }
	$6 = [268435455]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$6 = int_32($2 >> [3])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $866(($6 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	*($6) = [0]
	$6 = (*($0) + [16])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $882($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [4]))
	$5 = ($2 + ($3 << [4]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	*($6) = [0]
	$6 = ($6 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $867($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $267 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [160])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [160])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [160])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$2 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [160])
	CALL memcpy($2, *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
}

int_32 .FUNC $268 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$7 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$6 = CALL $866([80])
	$7 = CALL $280($6, $0, ($8 + [8]))
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [8]) = $5
	$1 = *($6 + [68])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $1
	*($8 + [24]) = [0]
	*($4) = $6
	*($3) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $281(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$1 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	$3 = *($1 + [52])
	if ( ($3 == 0) ){ goto $label$10 }
	$6 = $3
	$0 = ($1 + [56])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$11 }
	$4 = ([0] - $3)
	$6 = ($2 + [-12])
	
.LOOP $label$12:
	if ( ((*($6) & [1]) == 0) ){ goto $label$13 }
	CALL $867(*(($6 + [8])))
	
.LABEL $label$13
	$6 = ($6 + [-20])
	if ( ((int_32)($6 + $4) != (int_32)[-12]) ){ goto $label$12 }
	$6 = *(($1 + [52]))
	
.LABEL $label$11
	*($0) = $3
	CALL $867($6)
	
.LABEL $label$10
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $7
}

int_32 .FUNC $180 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*(($6 + [24])) = [0]
	*($6 + [8]) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [40]) = ($1 + $3)
	*($6 + [32]) = $1
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [160])
	CALL memcpy(($6 + [8]), $1, [8])
	*($6 + [36]) = ($1 + [8])
	$7 = (($6 + [8]) + [8])
	CALL $209(($6 + [32]), $7)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$4 = *($6 + [8])
	CALL $883(($6 + [32]), $7)
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_64 ($6 + [32])), (int_32 $5))
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*($6 + [40]))
	
.LABEL $label$6
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$7 }
	CALL $867(*(($6 + [24])))
	
.LABEL $label$7
	*([0] + [4]) = ($6 + [48])
	return [1]
}

int_32 .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [160])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [160])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

void .FUNC $182 (int_32 $0, int_64 $1, int_64 $2)
{
	CALL $305(($0 + [8]), $1, $2, $0)
}

void .FUNC $185 (int_32 $0, int_64 $1, int_64 $2)
{
	CALL $211(($0 + [8]), $1, $2, $0)
}

void .FUNC $184 (int_32 $0, int_64 $1, int_64 $2)
{
	CALL $221(($0 + [8]), $1, $2, $0)
}

int_32 .FUNC $187 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	CALL $188(($0 + [1504]))
	$2 = *(($0 + [1464]))
	if ( ($2 == 0) ){ goto $label$1 }
	$1 = ($0 + [1468])
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $867($5)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [1464]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$2
	*($1) = $2
	CALL $867($3)
	
.LABEL $label$1
	$2 = *(($0 + [1424]))
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = ($0 + [1428])
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	CALL $867($5)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [1424]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $2
	
.LABEL $label$7
	*($1) = $2
	CALL $867($3)
	
.LABEL $label$6
	$2 = *(($0 + [1336]))
	if ( ($2 == 0) ){ goto $label$11 }
	$1 = ($0 + [1340])
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$15 }
	CALL $867($5)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$14 }
	$3 = *(($0 + [1336]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $2
	
.LABEL $label$12
	*($1) = $2
	CALL $867($3)
	
.LABEL $label$11
	$3 = *(($0 + [1288]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($0 + [1292])) = $3
	CALL $867($3)
	
.LABEL $label$16
	$3 = *(($0 + [1264]))
	if ( ($3 == 0) ){ goto $label$17 }
	*(($0 + [1268])) = $3
	CALL $867($3)
	
.LABEL $label$17
	$1 = *(($0 + [1240]))
	if ( ($1 == 0) ){ goto $label$18 }
	$4 = ($0 + [1244])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$20 }
	
.LOOP $label$21:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$22 }
	$2 = *($5 + [12])
	if ( ($2 == 0) ){ goto $label$23 }
	*(($5 + [16])) = $2
	CALL $867($2)
	
.LABEL $label$23
	CALL $867($5)
	
.LABEL $label$22
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$21 }
	$3 = *(($0 + [1240]))
	goto $label$19 
	
.LABEL $label$20
	$3 = $1
	
.LABEL $label$19
	*($4) = $1
	CALL $867($3)
	
.LABEL $label$18
	CALL $189(($0 + [864]))
	$1 = *(($0 + [824]))
	if ( ($1 == 0) ){ goto $label$24 }
	$4 = ($0 + [828])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$26 }
	
.LOOP $label$27:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$28 }
	$2 = *($3 + [80])
	if ( ($2 == 0) ){ goto $label$29 }
	*(($3 + [84])) = $2
	CALL $867($2)
	
.LABEL $label$29
	$2 = *($3 + [68])
	if ( ($2 == 0) ){ goto $label$30 }
	*(($3 + [72])) = $2
	CALL $867($2)
	
.LABEL $label$30
	CALL $867($3)
	
.LABEL $label$28
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$27 }
	$3 = *(($0 + [824]))
	goto $label$25 
	
.LABEL $label$26
	$3 = $1
	
.LABEL $label$25
	*($4) = $1
	CALL $867($3)
	
.LABEL $label$24
	CALL $190(($0 + [600]))
	$2 = *(($0 + [560]))
	if ( ($2 == 0) ){ goto $label$31 }
	$1 = ($0 + [564])
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$33 }
	
.LOOP $label$34:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$35 }
	CALL $867($5)
	
.LABEL $label$35
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$34 }
	$3 = *(($0 + [560]))
	goto $label$32 
	
.LABEL $label$33
	$3 = $2
	
.LABEL $label$32
	*($1) = $2
	CALL $867($3)
	
.LABEL $label$31
	$2 = *(($0 + [520]))
	if ( ($2 == 0) ){ goto $label$36 }
	$1 = ($0 + [524])
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$38 }
	
.LOOP $label$39:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$40 }
	CALL $867($5)
	
.LABEL $label$40
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$39 }
	$3 = *(($0 + [520]))
	goto $label$37 
	
.LABEL $label$38
	$3 = $2
	
.LABEL $label$37
	*($1) = $2
	CALL $867($3)
	
.LABEL $label$36
	$3 = *(($0 + [452]))
	if ( ($3 == 0) ){ goto $label$41 }
	*(($0 + [456])) = $3
	CALL $867($3)
	
.LABEL $label$41
	$1 = *(($0 + [416]))
	if ( ($1 == 0) ){ goto $label$42 }
	$4 = ($0 + [420])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$44 }
	
.LOOP $label$45:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$46 }
	$2 = *($5 + [12])
	if ( ($2 == 0) ){ goto $label$47 }
	*(($5 + [16])) = $2
	CALL $867($2)
	
.LABEL $label$47
	CALL $867($5)
	
.LABEL $label$46
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$45 }
	$3 = *(($0 + [416]))
	goto $label$43 
	
.LABEL $label$44
	$3 = $1
	
.LABEL $label$43
	*($4) = $1
	CALL $867($3)
	
.LABEL $label$42
	*($0 + [280]) = [1508]
	$3 = *(($0 + [360]))
	if ( ($3 == 0) ){ goto $label$48 }
	*(($0 + [364])) = $3
	CALL $867($3)
	
.LABEL $label$48
	$1 = *(($0 + [320]))
	if ( ($1 == 0) ){ goto $label$49 }
	$4 = ($0 + [324])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$51 }
	
.LOOP $label$52:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$53 }
	$2 = *($5 + [8])
	if ( ($2 == 0) ){ goto $label$54 }
	*(($5 + [12])) = $2
	CALL $867($2)
	
.LABEL $label$54
	CALL $867($5)
	
.LABEL $label$53
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$52 }
	$3 = *(($0 + [320]))
	goto $label$50 
	
.LABEL $label$51
	$3 = $1
	
.LABEL $label$50
	*($4) = $1
	CALL $867($3)
	
.LABEL $label$49
	$3 = *(($0 + [268]))
	if ( ($3 == 0) ){ goto $label$55 }
	*(($0 + [272])) = $3
	CALL $867($3)
	
.LABEL $label$55
	$1 = *(($0 + [232]))
	if ( ($1 == 0) ){ goto $label$56 }
	$4 = ($0 + [236])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$58 }
	
.LOOP $label$59:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$60 }
	$2 = *($5 + [8])
	if ( ($2 == 0) ){ goto $label$61 }
	*(($5 + [12])) = $2
	CALL $867($2)
	
.LABEL $label$61
	CALL $867($5)
	
.LABEL $label$60
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$59 }
	$3 = *(($0 + [232]))
	goto $label$57 
	
.LABEL $label$58
	$3 = $1
	
.LABEL $label$57
	*($4) = $1
	CALL $867($3)
	
.LABEL $label$56
	CALL $191(($0 + [64]))
	$2 = *(($0 + [32]))
	if ( ($2 == 0) ){ goto $label$62 }
	$1 = ($0 + [36])
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$64 }
	
.LOOP $label$65:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$66 }
	CALL $867($5)
	
.LABEL $label$66
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$65 }
	$3 = *(($0 + [32]))
	goto $label$63 
	
.LABEL $label$64
	$3 = $2
	
.LABEL $label$63
	*($1) = $2
	CALL $867($3)
	
.LABEL $label$62
	return $0
}

void .FUNC $186 (int_32 $0, int_64 $1, int_64 $2)
{
	CALL $192(($0 + [8]), $1, $2, $0)
}

void .FUNC $114 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL $212(($0 + [600]), $1)
	$2 = CALL $806(($0 + [1208]), $1, $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$1 }
	CALL $608(($0 + [280]), $1, ($2 & [255]))
	
.LABEL $label$1
}

void .FUNC $760 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*(($4 = CALL $866([40]))) = (int_64)0
	*($4 + [8]) = [0]
	*($4 + [10]) = [0]
	*($4 + [12 align=4]) = (int_64)0
	*($4 + [20]) = [0]
	*($4 + [24]) = $1
	*($4) = *(*($3))
	*($4 + [16]) = *(*(*($3 + [4]) + [4]) + [8])
	*($4 + [10]) = [1]
	*($8 + [56]) = (($8 + [16]) + [21])
	*($8 + [52]) = ($8 + [16])
	*($8 + [48]) = ($8 + [16])
	CALL $276(($8 + [48]), $4)
	$5 = *($4)
	*($4 + [28]) = CALL db_store_i64(*($1 + [8]), (int_64)-6030912142679474176, $2, $5, ($8 + [16]), [21])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [48]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$6 = *($4 + [28])
	*($8 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [48]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $23(($1 + [24]), ($8 + [48]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [48])
	*($8 + [48]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $867($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [64])
}

void .FUNC $763 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	$19 = (*([0] + [4]) - [208])
	*([0] + [4]) = $19
	*($19 + [184]) = $2
	CALL require_auth($1)
	CALL eosio_assert(((int_64)$2 != (int_64)$1), [8256])
	$7 = *(($0 + [112]))
	$8 = *(($0 + [116]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$1 }
	$14 = ($8 + [-24])
	$4 = ([0] - $7)
	
.LOOP $label$2:
	if ( ((int_64)*(*($14)) == (int_64)$1) ){ goto $label$1 }
	$8 = $14
	$9 = ($14 + [-24])
	$14 = $9
	if ( ((int_32)($9 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [88])
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$4 }
	$10 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$10 = [0]
	$14 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$3 }
	$10 = CALL $13($3, $14)
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$3), [32])
	
.LABEL $label$3
	$7 = *(($0 + [112]))
	$8 = *(($0 + [116]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$5 }
	$14 = ($8 + [-24])
	$4 = ([0] - $7)
	
.LOOP $label$6:
	if ( ((int_64)*(*($14)) == (int_64)$2) ){ goto $label$5 }
	$8 = $14
	$9 = ($14 + [-24])
	$14 = $9
	if ( ((int_32)($9 + $4) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$8 }
	$11 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$3), [32])
	goto $label$7 
	
.LABEL $label$8
	$11 = [0]
	$14 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-6030912142679474176, $2)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$7 }
	$11 = CALL $13($3, $14)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$3), [32])
	
.LABEL $label$7
	$5 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($5, [192])
	$6 = ((int_32)$11 != (int_32)[0])
	CALL eosio_assert($6, [192])
	CALL eosio_assert(((int_32)*($10 + [12]) != (int_32)[0]), [8272])
	CALL eosio_assert(((int_32)*($11 + [12]) != (int_32)[0]), [8304])
	$12 = *(($0 + [152]))
	$8 = *(($0 + [156]))
	if ( ((int_32)$8 == (int_32)$12) ){ goto $label$9 }
	$14 = ($8 + [-24])
	$4 = ([0] - $12)
	
.LOOP $label$10:
	if ( ((int_64)*(*($14)) == (int_64)$1) ){ goto $label$9 }
	$8 = $14
	$9 = ($14 + [-24])
	$14 = $9
	if ( ((int_32)($9 + $4) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	$7 = ($0 + [128])
	if ( ((int_32)$8 == (int_32)$12) ){ goto $label$12 }
	$12 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [64]) == (int_32)$7), [32])
	goto $label$11 
	
.LABEL $label$12
	$12 = [0]
	$14 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-6030912128150405120, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$11 }
	$12 = CALL $96($7, $14)
	CALL eosio_assert(((int_32)*($12 + [64]) == (int_32)$7), [32])
	
.LABEL $label$11
	$13 = *(($0 + [152]))
	$8 = *(($0 + [156]))
	if ( ((int_32)$8 == (int_32)$13) ){ goto $label$13 }
	$14 = ($8 + [-24])
	$4 = ([0] - $13)
	
.LOOP $label$14:
	if ( ((int_64)*(*($14)) == (int_64)$2) ){ goto $label$13 }
	$8 = $14
	$9 = ($14 + [-24])
	$14 = $9
	if ( ((int_32)($9 + $4) != (int_32)[-24]) ){ goto $label$14 }
	
.LABEL $label$13
	if ( ((int_32)$8 == (int_32)$13) ){ goto $label$20 }
	$13 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [64]) == (int_32)$7), [32])
	if ( $12 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$13 = [0]
	$14 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-6030912128150405120, $2)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$21 }
	$13 = CALL $96($7, $14)
	CALL eosio_assert(((int_32)*($13 + [64]) == (int_32)$7), [32])
	
.LABEL $label$21
	if ( ($12 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	$14 = *($12 + [12])
	$9 = uint_32($14 >> [7])
	CALL eosio_assert(((int_32)$9 ^ (int_32)[1]), [8352])
	$14 = ($14 & [127])
	CALL eosio_assert(((int_32)($14 - ($9 & ((uint_32)$14 > (uint_32)[1]))) < (int_32)[101]), [8400])
	$2 = *($0)
	*($19 + [24]) = ($19 + [184])
	CALL eosio_assert([1], [352])
	CALL $764($7, $12, $2, ($19 + [24]))
	if ( $13 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	*($19 + [144]) = $1
	*($19 + [88]) = $2
	*($19 + [192]) = [129]
	*($19 + [72]) = [0]
	$2 = *($0)
	*($19 + [28]) = ($19 + [192])
	*($19 + [24]) = ($19 + [144])
	*($19 + [32]) = ($19 + [72])
	*($19 + [36]) = ($19 + [88])
	CALL $277(($19 + [128]), $7, $2, ($19 + [24]))
	$12 = *(($0 + [152]))
	$8 = *(($0 + [156]))
	if ( ((int_32)$8 == (int_32)$12) ){ goto $label$22 }
	$14 = ($8 + [-24])
	$4 = ([0] - $12)
	
.LOOP $label$23:
	if ( ((int_64)*(*($14)) == (int_64)$1) ){ goto $label$22 }
	$8 = $14
	$9 = ($14 + [-24])
	$14 = $9
	if ( ((int_32)($9 + $4) != (int_32)[-24]) ){ goto $label$23 }
	
.LABEL $label$22
	if ( ((int_32)$8 == (int_32)$12) ){ goto $label$24 }
	CALL eosio_assert(((int_32)*(*(($8 + [-24])) + [64]) == (int_32)$7), [32])
	if ( $13 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$24
	$14 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-6030912128150405120, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$25 }
	CALL eosio_assert(((int_32)*(CALL $96($7, $14) + [64]) == (int_32)$7), [32])
	
.LABEL $label$25
	if ( ($13 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$14 = *($13 + [12])
	$9 = ($14 & [127])
	$8 = ($9 - (uint_32($14 >> [7]) & ((uint_32)$9 > (uint_32)[1])))
	*($19 + [24]) = $8
	$2 = (int_64)0
	$15 = (int_64)59
	$14 = [176]
	$18 = *($19 + [184])
	$16 = (int_64)0
	
.LOOP $label$26:
	$17 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$27 }
	$9 = *($14)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$9 = ($9 + [165])
	goto $label$28 
	
.LABEL $label$29
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$27
	$14 = ($14 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$26 }
	if ( ((int_64)$16 == (int_64)$18) ){ goto $label$30 }
	CALL eosio_assert(((int_32)$8 < (int_32)[101]), [8448])
	
.LABEL $label$30
	$2 = *($0)
	*($19 + [144]) = ($19 + [24])
	CALL eosio_assert([1], [352])
	CALL $765($7, $13, $2, ($19 + [144]))
	goto $label$15 
	
.LABEL $label$16
	*($19 + [144]) = *($19 + [184])
	*($19 + [88]) = (int_64)0
	*($19 + [192]) = [1]
	*($19 + [72]) = [0]
	$2 = *($0)
	*($19 + [28]) = ($19 + [192])
	*($19 + [24]) = ($19 + [144])
	*($19 + [32]) = ($19 + [72])
	*($19 + [36]) = ($19 + [88])
	CALL $277(($19 + [128]), $7, $2, ($19 + [24]))
	$2 = *($19 + [184])
	$12 = *(($0 + [152]))
	$8 = *(($0 + [156]))
	if ( ((int_32)$8 == (int_32)$12) ){ goto $label$31 }
	$14 = ($8 + [-24])
	$4 = ([0] - $12)
	
.LOOP $label$32:
	if ( ((int_64)*(*($14)) == (int_64)$2) ){ goto $label$31 }
	$8 = $14
	$9 = ($14 + [-24])
	$14 = $9
	if ( ((int_32)($9 + $4) != (int_32)[-24]) ){ goto $label$32 }
	
.LABEL $label$31
	if ( ((int_32)$8 == (int_32)$12) ){ goto $label$33 }
	CALL eosio_assert(((int_32)*(*(($8 + [-24])) + [64]) == (int_32)$7), [32])
	goto $label$15 
	
.LABEL $label$33
	$14 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-6030912128150405120, $2)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$15 }
	CALL eosio_assert(((int_32)*(CALL $96($7, $14) + [64]) == (int_32)$7), [32])
	
.LABEL $label$15
	$2 = *($0)
	CALL eosio_assert($5, [352])
	CALL $766($3, $10, $2, ($19 + [24]))
	$2 = *($0)
	CALL eosio_assert($6, [352])
	CALL $767($3, $11, $2, ($19 + [24]))
	$7 = [0]
	*(($19 + [176])) = [0]
	*($19 + [160]) = (int_64)-1
	*($19 + [168]) = (int_64)0
	$2 = *($0)
	*($19 + [144]) = $2
	*($19 + [152]) = $2
	$14 = CALL db_find_i64($2, $2, (int_64)7687433457688903680, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$34 }
	$7 = CALL $225(($19 + [144]), $14)
	CALL eosio_assert(((int_32)*($7 + [20]) == (int_32)($19 + [144])), [32])
	
.LABEL $label$34
	$2 = *($19 + [184])
	$3 = *(($19 + [168]))
	$8 = *(($19 + [172]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$35 }
	$14 = ($8 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$36:
	if ( ((int_64)*(*($14)) == (int_64)$2) ){ goto $label$35 }
	$8 = $14
	$9 = ($14 + [-24])
	$14 = $9
	if ( ((int_32)($9 + $4) != (int_32)[-24]) ){ goto $label$36 }
	
.LABEL $label$35
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$42 }
	$14 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [20]) == (int_32)($19 + [144])), [32])
	if ( $7 ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$42
	$14 = CALL db_find_i64(*($19 + [144]), *(($19 + [152])), (int_64)7687433457688903680, $2)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$40 }
	$14 = CALL $225(($19 + [144]), $14)
	CALL eosio_assert(((int_32)*($14 + [20]) == (int_32)($19 + [144])), [32])
	if ( ($7 == 0) ){ goto $label$40 }
	
.LABEL $label$41
	if ( ($14 == 0) ){ goto $label$40 }
	if ( (int_32((*(($7 + [12])) - *($7 + [8])) >> [4]) <= [3]) ){ goto $label$40 }
	if ( (int_32((*(($14 + [12])) - *($14 + [8])) >> [4]) <= [3]) ){ goto $label$40 }
	if ( CALL _ZN13admin_control12is_blacklistEN5eosio4nameE($0, *($19 + [184])) ){ goto $label$40 }
	if ( CALL $749($0, $1) ){ goto $label$43 }
	*($19 + [136]) = (int_64)1397703940
	*($19 + [128]) = (int_64)1000
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5459781
	$14 = [0]
	
.LOOP $label$46:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$45 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$47 }
	
.LOOP $label$48:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$45 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$48 }
	
.LABEL $label$47
	$9 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$46 }
	goto $label$44 
	
.LABEL $label$45
	$9 = [0]
	
.LABEL $label$44
	CALL eosio_assert($9, [1120])
	$18 = *($0)
	$2 = (int_64)0
	$17 = (int_64)59
	$14 = [1152]
	$16 = (int_64)0
	
.LOOP $label$49:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$54 }
	$9 = *($14)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$9 = ($9 + [165])
	goto $label$52 
	
.LABEL $label$54
	$15 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$53
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$51
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$50
	$14 = ($14 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$49 }
	*($19 + [80]) = $16
	*($19 + [72]) = $18
	$2 = (int_64)0
	$17 = (int_64)59
	$14 = [1824]
	$16 = (int_64)0
	
.LOOP $label$55:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$60 }
	$9 = *($14)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$9 = ($9 + [165])
	goto $label$58 
	
.LABEL $label$60
	$15 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$57
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$56
	$14 = ($14 + [1])
	$17 = ((int_64)$17 + (int_64)-5)
	$16 = ((int_64)$15 | (int_64)$16)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$55 }
	$2 = (int_64)0
	$17 = (int_64)59
	$14 = [1184]
	$18 = (int_64)0
	
.LOOP $label$61:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$66 }
	$9 = *($14)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$65 }
	$9 = ($9 + [165])
	goto $label$64 
	
.LABEL $label$66
	$15 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$65
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$64
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$63
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$62
	$14 = ($14 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$18 = ((int_64)$15 | (int_64)$18)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$61 }
	*(($19 + [16])) = [0]
	*($19 + [8]) = (int_64)0
	$14 = CALL strlen([4496])
	if ( ((uint_32)$14 >= (uint_32)[-16]) ){ goto $label$37 }
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$69 }
	*($19 + [8]) = ($14 << [1])
	$9 = (($19 + [8]) | [1])
	if ( $14 ){ goto $label$68 }
	goto $label$67 
	
.LABEL $label$69
	$8 = (($14 + [16]) & [-16])
	$9 = CALL $866($8)
	*($19 + [8]) = ($8 | [1])
	*($19 + [16]) = $9
	*($19 + [12]) = $14
	
.LABEL $label$68
	CALL memcpy($9, [4496], $14)
	
.LABEL $label$67
	*(($9 + $14)) = [0]
	*(($19 + [44])) = *($19 + [132])
	*($19 + [24]) = *($0)
	*($19 + [32]) = *($19 + [184])
	*(($19 + [52])) = *(($19 + [140]))
	*(($19 + [48])) = *((($19 + [128]) + [8]))
	*($19 + [40]) = *($19 + [128])
	$14 = (($19 + [8]) + [8])
	*(($19 + [64])) = *($14)
	*($19 + [56]) = *($19 + [8])
	*($19 + [8]) = [0]
	*($19 + [12]) = [0]
	*($14) = [0]
	$14 = CALL $66(($19 + [88]), ($19 + [72]), $16, $18, ($19 + [24]))
	CALL $65(($19 + [192]), $14)
	$9 = *($19 + [192])
	CALL send_inline($9, (*($19 + [196]) - $9))
	$9 = *($19 + [192])
	if ( ($9 == 0) ){ goto $label$70 }
	*($19 + [196]) = $9
	CALL $867($9)
	
.LABEL $label$70
	$9 = *($14 + [28])
	if ( ($9 == 0) ){ goto $label$71 }
	*(($14 + [32])) = $9
	CALL $867($9)
	
.LABEL $label$71
	$9 = *($14 + [16])
	if ( ($9 == 0) ){ goto $label$72 }
	*(($14 + [20])) = $9
	CALL $867($9)
	
.LABEL $label$72
	if ( ((*(($19 + [56])) & [1]) == 0) ){ goto $label$73 }
	CALL $867(*(($19 + [64])))
	
.LABEL $label$73
	if ( ((*($19 + [8]) & [1]) == 0) ){ goto $label$74 }
	CALL $867(*(($19 + [16])))
	
.LABEL $label$74
	$2 = *($19 + [184])
	$7 = *(($0 + [72]))
	$8 = *(($0 + [76]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$75 }
	$14 = ($8 + [-24])
	$4 = ([0] - $7)
	
.LOOP $label$76:
	if ( ((int_64)*(*($14)) == (int_64)$2) ){ goto $label$75 }
	$8 = $14
	$9 = ($14 + [-24])
	$14 = $9
	if ( ((int_32)($9 + $4) != (int_32)[-24]) ){ goto $label$76 }
	
.LABEL $label$75
	$14 = ($0 + [48])
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$80 }
	$9 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [56]) == (int_32)$14), [32])
	$2 = *($0)
	if ( $9 ){ goto $label$79 }
	goto $label$77 
	
.LABEL $label$80
	$9 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-4992616317593845760, $2)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$78 }
	$9 = CALL $420($14, $9)
	CALL eosio_assert(((int_32)*($9 + [56]) == (int_32)$14), [32])
	$2 = *($0)
	
.LABEL $label$79
	*($19 + [24]) = ($19 + [128])
	CALL eosio_assert([1], [352])
	CALL $769($14, $9, $2, ($19 + [24]))
	goto $label$43 
	
.LABEL $label$78
	$2 = *($0)
	
.LABEL $label$77
	*($19 + [28]) = ($19 + [128])
	*($19 + [24]) = ($19 + [184])
	CALL $768(($19 + [88]), $14, $2, ($19 + [24]))
	
.LABEL $label$43
	$2 = (int_64)0
	$15 = (int_64)59
	$14 = [176]
	$18 = *($19 + [184])
	$16 = (int_64)0
	
.LOOP $label$81:
	$17 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$82 }
	$9 = *($14)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$84 }
	$9 = ($9 + [165])
	goto $label$83 
	
.LABEL $label$84
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$83
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$82
	$14 = ($14 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$81 }
	if ( ((int_64)$16 != (int_64)$18) ){ goto $label$85 }
	CALL $436($0, $1, [1])
	$8 = *($19 + [168])
	if ( $8 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$85
	CALL $436($0, $18, [1])
	
.LABEL $label$40
	$8 = *($19 + [168])
	if ( ($8 == 0) ){ goto $label$38 }
	
.LABEL $label$39
	$4 = ($19 + [172])
	$14 = *($4)
	if ( ((int_32)$14 == (int_32)$8) ){ goto $label$87 }
	
.LOOP $label$88:
	$14 = ($14 + [-24])
	$9 = *($14)
	*($14) = [0]
	if ( ($9 == 0) ){ goto $label$89 }
	$0 = *($9 + [8])
	if ( ($0 == 0) ){ goto $label$90 }
	*(($9 + [12])) = $0
	CALL $867($0)
	
.LABEL $label$90
	CALL $867($9)
	
.LABEL $label$89
	if ( ((int_32)$8 != (int_32)$14) ){ goto $label$88 }
	$14 = *(($19 + [168]))
	goto $label$86 
	
.LABEL $label$87
	$14 = $8
	
.LABEL $label$86
	*($4) = $8
	CALL $867($14)
	
.LABEL $label$38
	*([0] + [4]) = ($19 + [208])
	return (unreachable)
	
.LABEL $label$37
	CALL $868(($19 + [8]))
}

void .FUNC $762 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [128])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [96]) = (*($1 + [96]) + [1])
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [120]) = ($5 + [101])
	*($5 + [116]) = $5
	*($5 + [112]) = $5
	CALL $384(($5 + [112]), $1)
	CALL db_update_i64(*($1 + [116]), $2, $5, [101])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [128])
}

void .FUNC $765 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	$5 = (*([0] + [4]) - [16])
	$6 = $5
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	if ( ((int_32)*(*($3)) > (int_32)[99]) ){ goto $label$1 }
	*($1 + [12]) = (*($1 + [12]) + [1])
	
.LABEL $label$1
	CALL eosio_assert([1], [512])
	$3 = $5
	$5 = ($3 + [-64])
	*([0] + [4]) = $5
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($3 + [-10])
	CALL $98($6, $1)
	CALL db_update_i64(*($1 + [68]), $2, $5, [54])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$2 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $248 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*(($4 = CALL $866([40])) + [20]) = [0]
	*($4 + [12 align=4]) = (int_64)0
	*($4 + [24]) = $1
	*($4) = *(*($3))
	*($4 + [8]) = *(*($3 + [4]))
	*($8 + [56]) = (($8 + [16]) + [24])
	*($8 + [52]) = ($8 + [16])
	*($8 + [48]) = ($8 + [16])
	CALL $253(($8 + [48]), $4)
	$5 = *($4)
	*($4 + [28]) = CALL db_store_i64(*($1 + [8]), (int_64)-7947854319460548608, $2, $5, ($8 + [16]), [24])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [48]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$6 = *($4 + [28])
	*($8 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [48]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $254(($1 + [24]), ($8 + [48]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [48])
	*($8 + [48]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $867($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [64])
}

void .FUNC $767 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [16]) = (*($1 + [16]) + [1000])
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [21])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $276(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $766 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [16]) = (*($1 + [16]) + [1000])
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [21])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $276(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $769 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [48]))), [3504])
	$5 = ((int_64)*($1 + [40]) + (int_64)*($3))
	*($1 + [40]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [40]) < (int_64)4611686018427387904), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($6 + [72]) = ($6 + [56])
	*($6 + [68]) = $6
	*($6 + [64]) = $6
	CALL $424(($6 + [64]), $1)
	CALL db_update_i64(*($1 + [60]), $2, $6, [56])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [80])
}

void .FUNC $768 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	$4 = CALL $866([72])
	$6 = CALL $425($4)
	*($4 + [56]) = $1
	*($4) = *(*($3))
	$3 = *($3 + [4])
	*(($4 + [52])) = *(($3 + [12]))
	*(($4 + [48])) = *(($3 + [8]))
	*(($4 + [44])) = *(($3 + [4]))
	*($4 + [40]) = *($3)
	*($8 + [88]) = (($8 + [16]) + [56])
	*($8 + [84]) = ($8 + [16])
	*($8 + [80]) = ($8 + [16])
	CALL $424(($8 + [80]), $6)
	$5 = *($4)
	*($4 + [60]) = CALL db_store_i64(*($1 + [8]), (int_64)-4992616317593845760, $2, $5, ($8 + [16]), [56])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [80]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$6 = *($4 + [60])
	*($8 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [80]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $426(($1 + [24]), ($8 + [80]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [80])
	*($8 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $867($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [96])
}

int_32 .FUNC $249 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([40]))) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = $0
	CALL $255(($8 + [32]), $6)
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $254(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $167 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	CALL $212(($0 + [600]), $1)
	CALL $558(*(($0 + [576])), ((int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $4)), $1)
	CALL $649(($0 + [488]), $1, $2)
}

void .FUNC $166 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	$6 = ($0 + [600])
	CALL $212($6, $1)
	CALL eosio_assert((CALL $559($6, $1) == 0), [5696])
	*(($6 = (($8 + [16]) + [8]))) = *(($3 + [8]))
	*($8 + [16]) = *($3)
	*(($3 = (($8 + [32]) + [8]))) = *($6)
	*($8 + [32]) = *($8 + [16])
	CALL $558(*(($0 + [576])), ((int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $5)), $1)
	$7 = *($3)
	*((($8 + [48]) + [8])) = $7
	*(($8 + [8])) = $7
	$7 = *($8 + [32])
	*($8 + [48]) = $7
	*($8) = $7
	CALL $653(($0 + [488]), $1, $2, $8)
	*([0] + [4]) = ($8 + [64])
}

int_32 .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$6 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($7 + [16]) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($7 + [24]) = (int_64)0
	*($7 + [36]) = $1
	*($7 + [32]) = $1
	*($7 + [40]) = ($1 + $3)
	*($7 + [48]) = ($7 + [32])
	*($7 + [56]) = ($7 + [8])
	CALL $667(($7 + [56]), ($7 + [48]))
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($7 + [28]))
	$8 = *(($7 + [24]))
	$5 = *(($7 + [16]))
	$4 = *($7 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($1) + $6))
	
.LABEL $label$6
	CALL void $1((int_32 $4), (int_64 $5), (int_64 $8), (int_32 $3), (int_32 $6))
	*([0] + [4]) = ($7 + [64])
	return [1]
}

void .FUNC $164 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	CALL $212(($0 + [600]), $1)
	CALL $558(*(($0 + [576])), ((int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $4)), $1)
	CALL $668(($0 + [488]), $1, $2)
}

int_32 .FUNC $163 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [112])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = [0]
	$6 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $3)
	
.LABEL $label$1
	*((($10 + [24]) + [24])) = (int_64)1398362884
	*($10 + [32]) = (int_64)0
	*($10 + [24]) = (int_64)0
	*($10 + [40]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$7 = (int_64)5462355
	
.LOOP $label$5:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($8, [1120])
	*($10 + [56]) = (int_64)0
	*($10 + [100]) = $6
	*($10 + [96]) = $6
	*($10 + [104]) = ($6 + $3)
	*($10 + [64]) = ($10 + [96])
	*($10 + [80]) = ($10 + [24])
	CALL $671(($10 + [80]), ($10 + [64]))
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($6)
	
.LABEL $label$8
	$7 = *((($10 + [24]) + [8]))
	*(($10 + [76])) = *(($10 + [52]))
	*(($1 = (($10 + [64]) + [8]))) = *(($10 + [48]))
	$4 = *($10 + [24])
	*($10 + [64]) = *($10 + [40])
	*($10 + [68]) = *(($10 + [44]))
	$8 = *(($10 + [60]))
	$6 = *(($10 + [56]))
	*((($10 + [80]) + [8])) = *($1)
	*($10 + [80]) = *($10 + [64])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$9 = *((*($1) + $9))
	
.LABEL $label$9
	$5 = *((($10 + [80]) + [8]))
	*((($10 + [96]) + [8])) = $5
	*((($10 + [8]) + [8])) = $5
	$5 = *($10 + [80])
	*($10 + [96]) = $5
	*($10 + [8]) = $5
	CALL void $1((int_32 $4), (int_64 $7), (int_64 ($10 + [8])), (int_32 $6), (int_32 $8), (int_32 $9))
	*([0] + [4]) = ($10 + [112])
	return [1]
}

void .FUNC $162 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	CALL $212(($0 + [600]), $1)
	*(($6 = (($8 + [16]) + [8]))) = *(($3 + [8]))
	*($8 + [16]) = *($3)
	*(($3 = (($8 + [32]) + [8]))) = *($6)
	*($8 + [32]) = *($8 + [16])
	CALL $558(*(($0 + [576])), ((int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $5)), $1)
	$7 = *($3)
	*((($8 + [48]) + [8])) = $7
	*(($8 + [8])) = $7
	$7 = *($8 + [32])
	*($8 + [48]) = $7
	*($8) = $7
	CALL $672(($0 + [488]), $1, $2, $8)
	*([0] + [4]) = ($8 + [64])
}

int_32 .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$6 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($7 + [8]) = (int_64)0
	*($7 + [16]) = (int_64)0
	*($7 + [24]) = (int_64)0
	*($7 + [36]) = $1
	*($7 + [32]) = $1
	*($7 + [40]) = ($1 + $3)
	*($7 + [48]) = ($7 + [32])
	*($7 + [56]) = ($7 + [8])
	CALL $678(($7 + [56]), ($7 + [48]))
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($7 + [28]))
	$8 = *(($7 + [24]))
	$0 = *(($7 + [20]))
	$5 = *(($7 + [16]))
	$4 = *($7 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($1) + $6))
	
.LABEL $label$6
	CALL void $1((int_32 $4), (int_64 $5), (int_32 $0), (int_32 $8), (int_32 $3), (int_32 $6))
	*([0] + [4]) = ($7 + [64])
	return [1]
}

void .FUNC $160 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	$6 = ($0 + [600])
	CALL $212($6, $1)
	CALL $558(($0 + [8]), ((int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $5)), $1)
	CALL eosio_assert((CALL $559($6, $1) == 0), [5696])
	*((($7 + [16]) + [8])) = [0]
	*($7 + [16]) = (int_64)0
	$5 = CALL strlen([7280])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($5 << [1])
	$4 = (($7 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($5 + [16]) & [-16])
	$4 = CALL $866($6)
	*($7 + [16]) = ($6 | [1])
	*($7 + [24]) = $4
	*($7 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($4, [7280], $5)
	
.LABEL $label$2
	*(($4 + $5)) = [0]
	CALL $883($7, ($7 + [16]))
	$5 = CALL $679(($0 + [384]), $1, $2, $3, $7)
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*($7 + [8]))
	
.LABEL $label$5
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$6 }
	CALL $608(($0 + [280]), $1, ($5 & [255]))
	
.LABEL $label$6
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$7 }
	CALL $867(*($7 + [24]))
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $868(($7 + [16]))
}

int_32 .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$6 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($7 + [16]) = [0]
	*($7 + [8]) = (int_64)0
	*($7 + [18]) = [0]
	*($7 + [20 align=4]) = (int_64)0
	*($7 + [36]) = $1
	*($7 + [32]) = $1
	*($7 + [40]) = ($1 + $3)
	*($7 + [48]) = ($7 + [32])
	*($7 + [56]) = ($7 + [8])
	CALL $637(($7 + [56]), ($7 + [48]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($7 + [24]))
	$8 = *(($7 + [20]))
	$0 = *(($7 + [18]))
	$5 = *(($7 + [16]))
	$4 = *($7 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($1) + $6))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_64 ($5 & [65535])), (int_32 ($0 & [255])), (int_32 $8), (int_32 $3), (int_32 $6))
	*([0] + [4]) = ($7 + [64])
	return [1]
}

void .FUNC $168 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [32])
	*([0] + [4]) = $12
	$6 = ($0 + [600])
	CALL $212($6, $1)
	$7 = *(($0 + [320]))
	$11 = *(($0 + [324]))
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$1 }
	$10 = ($11 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$2:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$1 }
	$11 = $10
	$9 = ($10 + [-24])
	$10 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$9 = ($0 + [296])
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$4 }
	$10 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [20]) == (int_32)$9), [32])
	goto $label$3 
	
.LABEL $label$4
	$10 = [0]
	$11 = CALL db_find_i64(*(($0 + [296])), *(($0 + [304])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	$10 = CALL $225($9, $11)
	CALL eosio_assert(((int_32)*($10 + [20]) == (int_32)$9), [32])
	
.LABEL $label$3
	$10 = ( ($10 + [8]) ? ($0 + [360]) : $10 )
	CALL eosio_assert(((int_32)*($10 + [4]) != (int_32)*($10)), [6720])
	CALL $558(($0 + [8]), ((int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $5)), $1)
	CALL eosio_assert((CALL $559($6, $1) == 0), [5696])
	*((($12 + [16]) + [8])) = [0]
	*($12 + [16]) = (int_64)0
	$10 = CALL strlen([6752])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$8 }
	*($12 + [16]) = ($10 << [1])
	$9 = (($12 + [16]) | [1])
	if ( $10 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$11 = (($10 + [16]) & [-16])
	$9 = CALL $866($11)
	*($12 + [16]) = ($11 | [1])
	*($12 + [24]) = $9
	*($12 + [20]) = $10
	
.LABEL $label$7
	CALL memcpy($9, [6752], $10)
	
.LABEL $label$6
	*(($9 + $10)) = [0]
	CALL $883($12, ($12 + [16]))
	CALL $638(($0 + [200]), $1, $2, $3, $12)
	if ( ((*($12) & [1]) == 0) ){ goto $label$9 }
	CALL $867(*($12 + [8]))
	
.LABEL $label$9
	if ( ((*($12 + [16]) & [1]) == 0) ){ goto $label$10 }
	CALL $867(*($12 + [24]))
	
.LABEL $label$10
	*([0] + [4]) = ($12 + [32])
	return (unreachable)
	
.LABEL $label$5
	CALL $868(($12 + [16]))
}

int_32 .FUNC $369 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1397703940
	CALL eosio_assert([1], [1248])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	*($0 + [24]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

void .FUNC $368 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = *($0 + [4])
	$2 = *($4)
	*($1 + [8]) = [1]
	*($1) = *(*($2 + [4]) + [32])
	$2 = *($0)
	$4 = *($4 + [4])
	*($1 + [16]) = *($4)
	*(($5 = ($1 + [24]))) = *(($4 + [8]))
	CALL eosio_assert([1], [576])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 | [8]), ($1 + [8]), [4])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 | [12]), ($1 + [16]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 + [20]), $5, [8])
	$3 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)-7947908067083419648, *(*($0 + [8])), $3, $6, [28])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $688 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*($6) = (int_64)0
	*($6 + [8]) = [0]
	$3 = *($1 + [8])
	$2 = *($1)
	$5 = (*(($1 + [16])) - *($1 + [12]))
	$4 = int_32($5 >> [2])
	if ( ($4 == 0) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$5 = CALL $866($5)
	*(($6 + [8])) = ($5 + ($4 << [2]))
	*($6) = $5
	*($6 + [4]) = $5
	$4 = *(($1 + [12]))
	$1 = (*(($1 + [16])) - $4)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($5, $4, $1)
	*($6 + [4]) = ($5 + $1)
	
.LABEL $label$2
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*(*($0)) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($0) + $1))
	
.LABEL $label$3
	CALL void $0((int_32 $2), (int_64 $3), (int_32 $6), (int_32 $1))
	$1 = *($6)
	if ( ($1 == 0) ){ goto $label$4 }
	*($6 + [4]) = $1
	CALL $867($1)
	
.LABEL $label$4
	*([0] + [4]) = ($6 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $882($6)
}

int_32 .FUNC $715 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	float_64 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_64 $24
	int_64 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_64 $29
	float_64 $30
	int_32 $31
	$31 = (*([0] + [4]) - [480])
	*([0] + [4]) = $31
	CALL _ZN13admin_control15check_blacklistEN5eosio4nameE(*($0 + [76]), $1)
	CALL $564(*($0 + [76]), [1])
	*(($31 + [380])) = (int_64)0
	*($31 + [376]) = [0]
	*($31 + [368]) = $1
	$12 = ($31 + [376])
	$22 = CALL strlen([7936])
	if ( ((uint_32)$22 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$22 >= (uint_32)[11]) ){ goto $label$5 }
	*(($31 + [376])) = ($22 << [1])
	$12 = ($12 + [1])
	if ( $22 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$23 = (($22 + [16]) & [-16])
	$12 = CALL $866($23)
	*(($31 + [376])) = ($23 | [1])
	*((($31 + [368]) + [16])) = $12
	*(($31 + [380])) = $22
	
.LABEL $label$4
	CALL memcpy($12, [7936], $22)
	
.LABEL $label$3
	*(($12 + $22)) = [0]
	*($31 + [392]) = [0]
	*($31 + [388]) = [0]
	*($31 + [396]) = [0]
	*($31 + [400]) = [0]
	*($31 + [404]) = [0]
	*($31 + [408]) = [0]
	*($31 + [412]) = [0]
	*($31 + [416]) = [0]
	*($31 + [420]) = [0]
	*($31 + [424]) = [0]
	*($31 + [428]) = [0]
	*($31 + [432]) = [0]
	*($31 + [436]) = [0]
	*(($31 + [440])) = [0]
	*(($31 + [444])) = [0]
	CALL memcpy(($31 + [304]), *($5 + [4]), [64])
	$21 = *(($0 + [40]))
	$23 = *(($0 + [44]))
	if ( ((int_32)$23 == (int_32)$21) ){ goto $label$6 }
	$22 = ($23 + [-24])
	$11 = ([0] - $21)
	
.LOOP $label$7:
	if ( ((int_64)*(*($22)) == (int_64)$1) ){ goto $label$6 }
	$23 = $22
	$12 = ($22 + [-24])
	$22 = $12
	if ( ((int_32)($12 + $11) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$10 = ($0 + [16])
	if ( ((int_32)$23 == (int_32)$21) ){ goto $label$9 }
	$19 = *(($23 + [-24]))
	CALL eosio_assert(((int_32)*($19 + [20]) == (int_32)$10), [32])
	goto $label$8 
	
.LABEL $label$9
	$19 = [0]
	$22 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$8 }
	$19 = CALL $225($10, $22)
	CALL eosio_assert(((int_32)*($19 + [20]) == (int_32)$10), [32])
	
.LABEL $label$8
	$15 = ((int_32)$19 != (int_32)[0])
	CALL eosio_assert($15, [6368])
	$20 = *(($21 + [32]))
	$21 = *($0 + [56])
	$23 = *(($21 + [36]))
	if ( ((int_32)$23 == (int_32)$20) ){ goto $label$10 }
	$22 = ($23 + [-24])
	$11 = ([0] - $20)
	
.LOOP $label$11:
	if ( ((int_64)*(*($22)) == (int_64)$1) ){ goto $label$10 }
	$23 = $22
	$12 = ($22 + [-24])
	$22 = $12
	if ( ((int_32)($12 + $11) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	$12 = ($21 + [8])
	if ( ((int_32)$23 == (int_32)$20) ){ goto $label$15 }
	$22 = *(($23 + [-24]))
	CALL eosio_assert(((int_32)*($22 + [24]) == (int_32)$12), [32])
	if ( $22 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$22 = CALL db_find_i64(*(($21 + [8])), *(($21 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$13 }
	$22 = CALL $227($12, $22)
	CALL eosio_assert(((int_32)*($22 + [24]) == (int_32)$12), [32])
	
.LABEL $label$14
	$22 = ($22 + [12])
	goto $label$12 
	
.LABEL $label$13
	$22 = ($21 + [112])
	
.LABEL $label$12
	$12 = ($19 + [8])
	$7 = *($3 + [4])
	$8 = *($7 + [20])
	$22 = *($7 + [8])
	$11 = ($19 + [8])
	$23 = ($19 + [12])
	CALL eosio_assert(((int_32)(int_32((*($23) - *($11)) >> [4]) + ((int_32)(*($22 + [4]) - *($22)) / (int_32)[12])) <= (int_32)((( $22 ? [5] : ($22 <= [5]) ) << [2]) + [28])), [2768])
	$20 = [0]
	*(($31 + [296])) = [0]
	*($31 + [288]) = (int_64)0
	*($31 + [280]) = (int_64)-1
	$25 = *($0 + [8])
	*($31 + [264]) = $25
	*($31 + [272]) = $25
	$9 = [0]
	$22 = CALL db_find_i64($25, $25, (int_64)-4741615135682985984, *($7 + [10]))
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$16 }
	$9 = CALL $718(($31 + [264]), $22)
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($31 + [264])), [32])
	
.LABEL $label$16
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [7952])
	$17 = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) - *([0] + [12]))
	*($31 + [260]) = $17
	$22 = *(*($0))
	$27 = *($3)
	*($31 + [248]) = $27
	$3 = *($7 + [12])
	*($31) = *($31 + [248])
	CALL int_32 $0((int_32 $31), (int_32 $12), (int_32 ($31 + [304])), (int_32 $22))
	*($31 + [232]) = (int_64)0
	*($31 + [224]) = (int_64)0
	*($31 + [216]) = (int_64)0
	*($31 + [208]) = (int_64)0
	$21 = *($23)
	$22 = *($11)
	if ( ((int_32)$22 == (int_32)$21) ){ goto $label$17 }
	$12 = ($17 - $3)
	$20 = [0]
	
.LOOP $label$18:
	$11 = *(($22 + [10]))
	$11 = (CASTING int_32)(float_64 ((float_64)(CASTING float_64)(int_32 ((int_32)*(($22 + [12])) * (int_32)[60])) / (float_64)(float_64))((float_64)25 - ((float_64)((float_64)(CASTING float_64)(uint_32 $11) * (float_64)(float_64)25) / (float_64)(CASTING float_64)(int_32 ($11 + [1000])))))
	$11 = ((int_32)( $11) ? $12 : ((int_32)$12 > (int_32)$11) ) * (int_32)*(($22 + [8]))
	$11 = ( [1] ? ((int_32)$11) / (int_32)[12000]) : (($11 + [11999]) <= [23999]) 
	*((($31 + [224]) + ($23 = (*($22) << [2])))) = $11)
	*((($31 + [208]) + $23)) = *(($22 + [14]))
	$20 = ($11 + $20)
	$22 = ($22 + [16])
	if ( ((int_32)$21 != (int_32)$22) ){ goto $label$18 }
	
.LABEL $label$17
	$21 = [1]
	*($31 + [204]) = (((int_32)$20 / (int_32)[10]) + [1])
	if ( $4 ){ goto $label$19 }
	*($31 + [200]) = [1]
	*(($31 + [192])) = [0]
	*($31 + [176]) = (int_64)-1
	*($31 + [184]) = (int_64)0
	$22 = ($0 + [8])
	$25 = *($22)
	*($31 + [160]) = $25
	*($31 + [168]) = $25
	$12 = CALL db_find_i64($25, $25, (int_64)-6030912128183959552, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$20 }
	$12 = CALL $438(($31 + [160]), $12)
	CALL eosio_assert(((int_32)*($12 + [56]) == (int_32)($31 + [160])), [32])
	$25 = CALL current_time()
	$11 = (CASTING uint_32)(uint_64 ((uint_64)$25 / (uint_64)(int_64)1000000))
	$23 = *($12 + [12])
	if ( ((uint_32)$23 > (uint_32)$11) ){ goto $label$20 }
	if ( ((uint_32)(*($12 + [16]) + $23) <= (uint_32)$11) ){ goto $label$20 }
	*($31 + [200]) = [2]
	
.LABEL $label$20
	$25 = *($22)
	*($31 + [36]) = ($31 + [200])
	*($31 + [32]) = ($31 + [224])
	CALL eosio_assert($15, [352])
	CALL $719($10, $19, $25, ($31 + [32]))
	$18 = CALL $565(*(($0 + [76])))
	*($31 + [152]) = (int_64)0
	$22 = *($31 + [228])
	if ( ($22 == 0) ){ goto $label$23 }
	$30 = ((float_64)((float_64)((float_64)(CASTING float_64)(int_32 $22) / (float_64)(float_64)50) * (float_64)min ( (float_64)((float_64)((float_64)(CASTING float_64)(int_32 *($31 + [212])) / (float_64)(float_64)1e3) + (float_64)(float_64)1) , (float_64)(float_64)8 )) + (float_64)(float_64)0)
	*($31 + [152]) = $30
	$22 = *($31 + [232])
	if ( $22 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$30 = (float_64)0
	$22 = *($31 + [232])
	if ( ($22 == 0) ){ goto $label$21 }
	
.LABEL $label$22
	$30 = ((float_64)$30 + (float_64)((float_64)((float_64)(CASTING float_64)(int_32 $22) / (float_64)(float_64)50) * (float_64)min ( (float_64)((float_64)((float_64)(CASTING float_64)(int_32 *($31 + [216])) / (float_64)(float_64)1e3) + (float_64)(float_64)1) , (float_64)(float_64)8 )))
	*($31 + [152]) = $30
	
.LABEL $label$21
	$22 = *($31 + [236])
	if ( ($22 == 0) ){ goto $label$24 }
	$30 = ((float_64)$30 + (float_64)((float_64)((float_64)(CASTING float_64)(int_32 $22) / (float_64)(float_64)50) * (float_64)min ( (float_64)((float_64)((float_64)(CASTING float_64)(int_32 *($31 + [220])) / (float_64)(float_64)1e3) + (float_64)(float_64)1) , (float_64)(float_64)8 )))
	*($31 + [152]) = $30
	
.LABEL $label$24
	$6 = ($31 + [436])
	$22 = *($31 + [204])
	$22 = (CASTING int_32)(float_64 ((float_64)$18 * (float_64)((float_64)$30 * (float_64)((float_64)((float_64)(CASTING float_64)(int_32 ( $22 ? [1000] : ((int_32)$22 < (int_32)[1000]) )) / (float_64)(float_64)500) + (float_64)(float_64)1))))
	*($31 + [152]) = (CASTING float_64)(int_32 ( $22 ? [1] : ((int_32)$22 > (int_32)[1]) ))
	*($31 + [148]) = [0]
	*($31 + [144]) = $2
	*($31 + [136]) = (int_64)0
	$14 = (($31 + [32]) + [8])
	$15 = ($0 + [68])
	$4 = (($31 + [32]) + [80])
	$16 = ($31 + [444])
	$17 = ($31 + [440])
	$2 = (($31 + [32]) + [84])
	$21 = [1]
	
.LOOP $label$25:
	$10 = *(($3 + [32]))
	$3 = *($15)
	$23 = *(($3 + [36]))
	if ( ((int_32)$23 == (int_32)$10) ){ goto $label$26 }
	$22 = ($23 + [-24])
	$11 = ([0] - $10)
	
.LOOP $label$27:
	if ( ((int_64)*(*($22)) == (int_64)$1) ){ goto $label$26 }
	$23 = $22
	$12 = ($22 + [-24])
	$22 = $12
	if ( ((int_32)($12 + $11) != (int_32)[-24]) ){ goto $label$27 }
	
.LABEL $label$26
	$12 = ($3 + [8])
	if ( ((int_32)$23 == (int_32)$10) ){ goto $label$30 }
	$22 = *(($23 + [-24]))
	CALL eosio_assert(((int_32)*($22 + [20]) == (int_32)$12), [32])
	if ( $22 ){ goto $label$29 }
	$23 = [0]
	goto $label$28 
	
.LABEL $label$30
	$23 = [0]
	$22 = CALL db_find_i64(*($12), *(($3 + [16])), (int_64)-7695177867839143936, $1)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$28 }
	$22 = CALL $43($12, $22)
	CALL eosio_assert(((int_32)*($22 + [20]) == (int_32)$12), [32])
	
.LABEL $label$29
	$23 = [0]
	$22 = *($22 + [8])
	$12 = *(($22 + [12]))
	if ( ((int_32)$12 == (int_32)$22) ){ goto $label$28 }
	$23 = ((int_32)($12 - $22) / (int_32)[12])
	$12 = [0]
	
.LOOP $label$32:
	if ( ((int_32)*(($22 + [9])) == (int_32)$21) ){ goto $label$31 }
	$22 = ($22 + [12])
	$12 = ($12 + [1])
	if ( ($12 <= $23) ){ goto $label$32 }
	$23 = [0]
	goto $label$28 
	
.LABEL $label$31
	$23 = *($22)
	
.LABEL $label$28
	$22 = ($21 << [2])
	$12 = *((($31 + [224]) + $22))
	if ( ((int_32)$12 < (int_32)[1]) ){ goto $label$33 }
	CALL memset($14, [0], [88])
	*($4) = (int_64)0
	*((($31 + [32]) + [88])) = [0]
	*($31 + [32]) = (int_64)0
	*((($31 + [136]) + ($21 << [1]))) = CALL $720($0, $7, *($31 + [204]), *((($31 + [208]) + $22)), $12, $20, $9, ($31 + [144]), $23, $18, ($31 + [32]))
	$22 = *($17)
	if ( ((int_32)$22 == (int_32)*($16)) ){ goto $label$35 }
	*(($22 = CALL memcpy($22, ($31 + [32]), [80])) + [80 align=4]) = (int_64)0
	*(($11 = ($22 + [88]))) = [0]
	$12 = (*($2) - *($4))
	$23 = int_32($12 >> [5])
	if ( ($23 == 0) ){ goto $label$36 }
	$3 = ($22 + [80])
	if ( ((uint_32)$23 >= (uint_32)[134217728]) ){ goto $label$1 }
	$12 = CALL $866($12)
	*($3) = $12
	*($11) = ($12 + ($23 << [5]))
	*(($22 = ($22 + [84]))) = $12
	$11 = *($4)
	$23 = (*($2) - $11)
	if ( ((int_32)$23 < (int_32)[1]) ){ goto $label$36 }
	CALL memcpy($12, $11, $23)
	*($22) = (*($22) + $23)
	
.LABEL $label$36
	*($17) = (*($17) + [96])
	$22 = *($4)
	if ( $22 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	CALL $721($6, ($31 + [32]))
	$22 = *($4)
	if ( ($22 == 0) ){ goto $label$33 }
	
.LABEL $label$34
	*($2) = $22
	CALL $867($22)
	
.LABEL $label$33
	$21 = ($21 + [1])
	if ( ((int_32)$21 < (int_32)[4]) ){ goto $label$25 }
	$12 = [0]
	$23 = [0]
	$22 = *($31 + [138])
	if ( ((uint_32)$22 > (uint_32)[200]) ){ goto $label$37 }
	$23 = [1]
	$11 = ((uint_32)$22 % (uint_32)[20])
	if ( ($11 <= [5]) ){ goto $label$37 }
	$23 = [2]
	$21 = ($11 & [65535])
	if ( ($21 <= [8]) ){ goto $label$37 }
	$23 = [3]
	if ( ($21 <= [10]) ){ goto $label$37 }
	$23 = [4]
	if ( ((int_32)$11 == (int_32)[10]) ){ goto $label$37 }
	$23 = ( [5] ? [0] : (($11 & [65535]) <= [12]) )
	
.LABEL $label$37
	$23 = ((int_32)($23 | [1]) == (int_32)[5])
	$11 = *($31 + [140])
	if ( ((uint_32)$11 > (uint_32)[200]) ){ goto $label$38 }
	$12 = [1]
	$11 = ((uint_32)$11 % (uint_32)[20])
	if ( ($11 <= [5]) ){ goto $label$38 }
	$12 = [2]
	$21 = ($11 & [65535])
	if ( ($21 <= [8]) ){ goto $label$38 }
	$12 = [3]
	if ( ($21 <= [10]) ){ goto $label$38 }
	$12 = [4]
	if ( ((int_32)$11 == (int_32)[10]) ){ goto $label$38 }
	$12 = ( [5] ? [0] : (($11 & [65535]) <= [12]) )
	
.LABEL $label$38
	$23 = (((int_32)($12 | [1]) == (int_32)[5]) + $23)
	$12 = [0]
	$11 = *($31 + [142])
	if ( ((uint_32)$11 > (uint_32)[200]) ){ goto $label$39 }
	$12 = [1]
	$11 = ((uint_32)$11 % (uint_32)[20])
	if ( ($11 <= [5]) ){ goto $label$39 }
	$12 = [2]
	$21 = ($11 & [65535])
	if ( ($21 <= [8]) ){ goto $label$39 }
	$12 = [3]
	if ( ($21 <= [10]) ){ goto $label$39 }
	$12 = [4]
	if ( ((int_32)$11 == (int_32)[10]) ){ goto $label$39 }
	$12 = ( [5] ? [0] : (($11 & [65535]) <= [12]) )
	
.LABEL $label$39
	$12 = (((int_32)($12 | [1]) == (int_32)[5]) + $23)
	$23 = *($31 + [204])
	if ( ((int_32)$23 <= (int_32)[10999]) ){ goto $label$41 }
	if ( $12 ){ goto $label$40 }
	if ( ((int_32)$23 < (int_32)[15000]) ){ goto $label$43 }
	$22 = [100]
	if ( ((uint_32)*($31 + [360]) > (uint_32)[11]) ){ goto $label$42 }
	
.LABEL $label$43
	$22 = ( [80] ? [0] : ((uint_32)*($31 + [360]) > (uint_32)[11]) )
	
.LABEL $label$42
	$25 = ((uint_64)((int_64)((int_64)*($31 + [144]) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*($31 + [144]) = $25
	$12 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$25 * (int_64)100) >> (uint_64)(int_64)31)
	*($31 + [148]) = $12)
	if ( ((uint_32)$12 >= (uint_32)$22) ){ goto $label$40 }
	$25 = ((uint_64)((int_64)((int_64)((uint_64)((int_64)((int_64)$25 * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*($31 + [144]) = $25
	$22 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$25 * (int_64)5) >> (uint_64)(int_64)31)
	*($31 + [148]) = $22)
	*($31 + [138]) = (((int_32)$22 * (int_32)[20]) + [10])
	goto $label$40 
	
.LABEL $label$41
	if ( ($12 <= [2]) ){ goto $label$40 }
	if ( ((int_32)$23 > (int_32)[4999]) ){ goto $label$45 }
	$21 = ($12 + [-1])
	goto $label$44 
	
.LABEL $label$45
	if ( ((int_32)$23 > (int_32)[9999]) ){ goto $label$40 }
	$21 = ($12 + [-2])
	
.LABEL $label$44
	if ( ((int_32)$21 < (int_32)[1]) ){ goto $label$40 }
	$20 = (($31 + [32]) | [8])
	$10 = ($31 + [48])
	$11 = [1]
	
.LOOP $label$46:
	$22 = ($22 & [65535])
	if ( ((uint_32)$22 > (uint_32)[200]) ){ goto $label$47 }
	if ( ((int_32)(((uint_32)$22 % (uint_32)[20]) & [30]) != (int_32)[10]) ){ goto $label$47 }
	$3 = (($31 + [136]) + ($11 << [1]))
	CALL memset($10, [0], [64])
	*($31 + [32]) = (int_64)4604180019048125086
	*($31 + [40]) = (int_64)4599676419421690565
	$25 = ((uint_64)((int_64)((int_64)*($31 + [144]) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*($31 + [144]) = $25
	$23 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$25 * (int_64)1000000000) >> (uint_64)(int_64)31)
	*($31 + [148]) = $23)
	$22 = [2]
	$12 = $20
	
.LOOP $label$50:
	if ( ((int_32)$22 < (int_32)[2]) ){ goto $label$49 }
	$22 = ($22 + [-1])
	$18 = *($12)
	$12 = ($12 + [-8])
	if ( ((int_32)$23 >= (int_32)(CASTING int_32)(float_64 ((float_64)$18 * (float_64)(float_64)1e9))) ){ goto $label$50 }
	goto $label$48 
	
.LABEL $label$49
	$22 = [0]
	
.LABEL $label$48
	$25 = ((uint_64)((int_64)((int_64)$25 * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*($31 + [144]) = $25
	$12 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$25 * (int_64)5) >> (uint_64)(int_64)31)
	*($31 + [148]) = $12)
	*($3) = ((((int_32)$12 * (int_32)[20]) + $22) + [8])
	$21 = ($21 + [-1])
	
.LABEL $label$47
	if ( ((int_32)$21 < (int_32)[1]) ){ goto $label$40 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 > (int_32)[3]) ){ goto $label$40 }
	$22 = *((($31 + [136]) + ($11 << [1])))
	goto $label$46 
	
.LABEL $label$40
	CALL $722(*(($0 + [56])), $1, ($31 + [136]), [1])
	$22 = *($0 + [64])
	*($31 + [31]) = [0]
	$25 = *(($0 + [8]))
	*($31 + [36]) = ($31 + [152])
	*($31 + [32]) = ($31 + [260])
	*($31 + [40]) = ($31 + [204])
	*($31 + [44]) = ($31 + [31])
	$12 = (CASTING uint_32)(uint_64 (uint_64)$27 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$12) != (int_32)[0]), [352])
	CALL $723($22, $12, $25, ($31 + [32]))
	*($31 + [332]) = [0]
	if ( ((int_32)(*(($19 + [12])) - *(($19 + [8]))) != (int_32)[48]) ){ goto $label$51 }
	$22 = *($31 + [204])
	if ( ((int_32)$22 < (int_32)[11]) ){ goto $label$51 }
	CALL $724($0, ($31 + [304]), $8, $22)
	
.LABEL $label$51
	$11 = *($31 + [360])
	$23 = $11
	if ( (*($31 + [31]) == 0) ){ goto $label$52 }
	CALL $531(*(($0 + [64])), ($31 + [304]), $1, [1])
	$23 = *(($31 + [360]))
	
.LABEL $label$52
	$21 = *($31 + [204])
	if ( ((int_32)$21 < (int_32)[1]) ){ goto $label$53 }
	$13 = *(($0 + [8]))
	$25 = (int_64)0
	$24 = (int_64)59
	$22 = [1152]
	$26 = (int_64)0
	
.LOOP $label$54:
	if ( ((uint_64)$25 > (uint_64)(int_64)5) ){ goto $label$59 }
	$12 = *($22)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$58 }
	$12 = ($12 + [165])
	goto $label$57 
	
.LABEL $label$59
	$27 = (int_64)0
	if ( ((uint_64)$25 <= (uint_64)(int_64)11) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$58
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$57
	$27 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$56
	$27 = ((int_64)((int_64)$27 & (int_64)31) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$55
	$22 = ($22 + [1])
	$25 = ((int_64)$25 + (int_64)1)
	$26 = ((int_64)$27 | (int_64)$26)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$54 }
	$25 = (int_64)0
	$27 = (int_64)59
	$22 = [5472]
	$28 = (int_64)0
	
.LOOP $label$60:
	$24 = (int_64)0
	if ( ((uint_64)$25 > (uint_64)(int_64)11) ){ goto $label$61 }
	$12 = *($22)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$63 }
	$12 = ($12 + [165])
	goto $label$62 
	
.LABEL $label$63
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$62
	$24 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$27 & (int_64)4294967295))
	
.LABEL $label$61
	$22 = ($22 + [1])
	$25 = ((int_64)$25 + (int_64)1)
	$28 = ((int_64)$24 | (int_64)$28)
	$27 = ((int_64)$27 + (int_64)-5)
	if ( ((int_64)$27 != (int_64)-6) ){ goto $label$60 }
	$25 = (int_64)0
	$24 = (int_64)59
	$22 = [7968]
	$29 = (int_64)0
	
.LOOP $label$64:
	if ( ((uint_64)$25 > (uint_64)(int_64)8) ){ goto $label$69 }
	$12 = *($22)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$68 }
	$12 = ($12 + [165])
	goto $label$67 
	
.LABEL $label$69
	$27 = (int_64)0
	if ( ((uint_64)$25 <= (uint_64)(int_64)11) ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$68
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$67
	$27 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$66
	$27 = ((int_64)((int_64)$27 & (int_64)31) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$65
	$22 = ($22 + [1])
	$25 = ((int_64)$25 + (int_64)1)
	$29 = ((int_64)$27 | (int_64)$29)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$64 }
	*($31 + [16]) = $21
	*($31 + [20]) = $11
	*($31 + [22]) = $23
	*($31 + [8]) = $1
	*($31 + [40]) = $29
	*($31 + [32]) = $28
	*(($22 = CALL $866([16]))) = $13
	*($22 + [8]) = $26
	*(($12 = ($31 + [64]))) = [0]
	$23 = ($22 + [16])
	*(($31 + [56])) = $23
	*(($31 + [52])) = $23
	*($31 + [48]) = $22
	*($31 + [60]) = [0]
	*(($31 + [68])) = [0]
	CALL $83(($31 + [60]), [16])
	$22 = *($12)
	$12 = *($31 + [60])
	*($31 + [452]) = $12
	*($31 + [448]) = $12
	*($31 + [456]) = $22
	*($31 + [464]) = ($31 + [448])
	*($31 + [472]) = ($31 + [8])
	CALL $725(($31 + [472]), ($31 + [464]))
	CALL $65(($31 + [448]), ($31 + [32]))
	$22 = *($31 + [448])
	CALL send_inline($22, (*($31 + [452]) - $22))
	$22 = *($31 + [448])
	if ( ($22 == 0) ){ goto $label$70 }
	*($31 + [452]) = $22
	CALL $867($22)
	
.LABEL $label$70
	$22 = *($31 + [60])
	if ( ($22 == 0) ){ goto $label$71 }
	*(($31 + [64])) = $22
	CALL $867($22)
	
.LABEL $label$71
	$22 = *($31 + [48])
	if ( ($22 == 0) ){ goto $label$53 }
	*(($31 + [52])) = $22
	CALL $867($22)
	
.LABEL $label$53
	$12 = *(($0 + [76]))
	$1 = *($12)
	$22 = *($5 + [4])
	$21 = [0]
	*($31 + [32]) = ($31 + [304])
	CALL eosio_assert(((int_32)$22 != (int_32)[0]), [352])
	CALL $272(($12 + [128]), $22, $1, ($31 + [32]))
	CALL $726(*(($0 + [56])), *($31 + [204]), ($31 + [136]), (CASTING uint_32)(float_64 *($31 + [152])))
	$23 = *($31 + [184])
	if ( ($23 == 0) ){ goto $label$19 }
	$11 = ($31 + [188])
	$22 = *($11)
	if ( ((int_32)$22 == (int_32)$23) ){ goto $label$73 }
	
.LOOP $label$74:
	$22 = ($22 + [-24])
	$12 = *($22)
	*($22) = [0]
	if ( ($12 == 0) ){ goto $label$75 }
	CALL $867($12)
	
.LABEL $label$75
	if ( ((int_32)$23 != (int_32)$22) ){ goto $label$74 }
	$22 = *(($31 + [184]))
	goto $label$72 
	
.LABEL $label$73
	$22 = $23
	
.LABEL $label$72
	*($11) = $23
	CALL $867($22)
	
.LABEL $label$19
	$23 = *($31 + [288])
	if ( ($23 == 0) ){ goto $label$76 }
	$11 = ($31 + [292])
	$22 = *($11)
	if ( ((int_32)$22 == (int_32)$23) ){ goto $label$78 }
	
.LOOP $label$79:
	$22 = ($22 + [-24])
	$12 = *($22)
	*($22) = [0]
	if ( ($12 == 0) ){ goto $label$80 }
	CALL $867($12)
	
.LABEL $label$80
	if ( ((int_32)$23 != (int_32)$22) ){ goto $label$79 }
	$22 = *(($31 + [288]))
	goto $label$77 
	
.LABEL $label$78
	$22 = $23
	
.LABEL $label$77
	*($11) = $23
	CALL $867($22)
	
.LABEL $label$76
	$11 = *($31 + [436])
	if ( ($11 == 0) ){ goto $label$81 }
	$3 = ($31 + [440])
	$22 = *($3)
	if ( ((int_32)$22 == (int_32)$11) ){ goto $label$83 }
	$23 = ([0] - $11)
	$22 = ($22 + [-16])
	
.LOOP $label$84:
	$12 = *($22)
	if ( ($12 == 0) ){ goto $label$85 }
	*(($22 + [4])) = $12
	CALL $867($12)
	
.LABEL $label$85
	$22 = ($22 + [-96])
	if ( ((int_32)($22 + $23) != (int_32)[-16]) ){ goto $label$84 }
	$22 = *(($31 + [436]))
	goto $label$82 
	
.LABEL $label$83
	$22 = $11
	
.LABEL $label$82
	*($3) = $11
	CALL $867($22)
	
.LABEL $label$81
	if ( ((*(($31 + [376])) & [1]) == 0) ){ goto $label$86 }
	CALL $867(*(($31 + [384])))
	
.LABEL $label$86
	*([0] + [4]) = ($31 + [480])
	return $21
	
.LABEL $label$2
	CALL $868($12)
	
.LABEL $label$1
	CALL $882($3)
	(unreachable)
	return (unreachable)
}

void .FUNC $716 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([128])) + [8]) = (int_64)0
	*($3 + [20 align=4]) = (int_64)0
	*($3 + [28 align=4]) = (int_64)0
	*($3 + [36 align=4]) = (int_64)0
	*($3 + [80]) = [0]
	*($3 + [104]) = $1
	CALL $717(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [108])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $94(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$4 }
	CALL $867(*(($3 + [40])))
	
.LABEL $label$4
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*(($3 + [28])))
	
.LABEL $label$5
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $717 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [16])
	$7 = $6
	*([0] + [4]) = $6
	$5 = *($0 + [4])
	*($1) = *(*($5))
	*($1 + [8]) = *(*($5 + [4]))
	$2 = *($0)
	*($1 + [16]) = [1]
	CALL $869(($1 + [20]), *($5 + [8]))
	CALL $869(($1 + [32]), *($5 + [12]))
	$5 = *($5 + [16])
	*($1 + [48]) = *($5)
	*(($1 + [72])) = *(($5 + [24]))
	*(($1 + [64])) = *(($5 + [16]))
	*(($1 + [56])) = *(($5 + [8]))
	*($1 + [80]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$5 = *($1 + [20])
	$3 = ( *(($1 + [24])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($3 + [72])
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$3 = *(($1 + [32]))
	$3 = ( *(($1 + [36])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $5)
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($5 <= [513]) ){ goto $label$4 }
	$6 = CALL malloc($5)
	goto $label$3 
	
.LABEL $label$4
	$6 = ($6 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$3
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = ($6 + $5)
	CALL $101($7, $1)
	$4 = *($1)
	*($1 + [108]) = CALL db_store_i64(*($2 + [8]), (int_64)-6533188803235414016, *(*($0 + [8])), $4, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $710 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	*($7) = (int_64)0
	*($7 + [8]) = [0]
	$2 = *($1)
	$4 = (*(($1 + [12])) - *($1 + [8]))
	$3 = int_32($4 >> [2])
	if ( ($3 == 0) ){ goto $label$2 }
	if ( ((uint_32)$3 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$4 = CALL $866($4)
	*(($7 + [8])) = ($4 + ($3 << [2]))
	*($7) = $4
	*($7 + [4]) = $4
	$6 = *(($1 + [8]))
	$3 = (*(($1 + [12])) - $6)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($4, $6, $3)
	*($7 + [4]) = ($4 + $3)
	
.LABEL $label$2
	$4 = *($0 + [4])
	$3 = *($4 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$6 = *($1 + [24])
	$5 = *($1 + [20])
	$1 = *($4)
	if ( (($3 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($0) + $1))
	
.LABEL $label$3
	CALL void $0((int_32 $2), (int_64 $7), (int_32 $5), (int_32 $6), (int_32 $1))
	$1 = *($7)
	if ( ($1 == 0) ){ goto $label$4 }
	*($7 + [4]) = $1
	CALL $867($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $882($7)
}

void .FUNC $711 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	CALL $558(*($0 + [104]), $3, $1)
	$9 = *(($0 + [32]))
	$5 = *(($0 + [36]))
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$1 }
	$13 = ($5 + [-24])
	$8 = ([0] - $9)
	
.LOOP $label$2:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$1 }
	$5 = $13
	$14 = ($13 + [-24])
	$13 = $14
	if ( ((int_32)($14 + $8) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$13 = ($0 + [8])
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$6 }
	$14 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$13), [32])
	if ( $14 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$14 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$4 }
	$14 = CALL $227($13, $14)
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$13), [32])
	
.LABEL $label$5
	$11 = ($14 + [12])
	goto $label$3 
	
.LABEL $label$4
	$11 = ($0 + [112])
	
.LABEL $label$3
	$13 = *($2)
	if ( ((int_32)*($2 + [4]) == (int_32)$13) ){ goto $label$7 }
	$4 = ($0 + [124])
	$10 = ($11 + [4])
	$12 = [0]
	
.LOOP $label$8:
	$6 = *($11)
	$14 = (*($10) - $6)
	if ( ((int_32)$14 < (int_32)[12]) ){ goto $label$10 }
	$5 = *(($13 + ($12 << [2])))
	$14 = (((uint_32)$14 / (uint_32)[12]) + [-1])
	$13 = [0]
	
.LOOP $label$11:
	$7 = ($14 - $13)
	$8 = (((int_32)$7 / (int_32)[2]) + $13)
	$15 = ($6 + ((int_32)$8 * (int_32)[12]))
	$9 = *($15)
	if ( ($9 <= $5) ){ goto $label$12 }
	if ( ((uint_32)$9 <= (uint_32)$5) ){ goto $label$9 }
	$14 = ($8 + [-1])
	if ( ((int_32)$7 > (int_32)[1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$13 = ($8 + [1])
	if ( ((int_32)$14 > (int_32)$8) ){ goto $label$11 }
	
.LABEL $label$10
	CALL eosio_assert([0], [6944])
	$15 = $4
	
.LABEL $label$9
	if ( ((uint_32)((*($15 + [4]) + [-301]) & [65535]) > (uint_32)[2]) ){ goto $label$13 }
	CALL eosio_assert([0], [2656])
	
.LABEL $label$13
	$13 = *($2)
	$12 = ($12 + [1])
	if ( ($12 <= int_32((*(($2 + [4])) - $13) >> [2])) ){ goto $label$8 }
	
.LABEL $label$7
	CALL $712($0, $1, $2)
}

void .FUNC $712 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL require_auth($1)
	$4 = *($3 + [24])
	$3 = *($0 + [104])
	$8 = *(($3 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $13($3, $6)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$3), [32])
	
.LABEL $label$3
	$6 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($6, [2624])
	*($9 + [12]) = CALL $707($0, $1, $2, [0])
	$1 = *($0)
	*($9 + [8]) = ($9 + [12])
	CALL eosio_assert($6, [352])
	CALL $713($3, $7, $1, ($9 + [8]))
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $713 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [16]) = (*($1 + [16]) + *(*($3)))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [21])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $276(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $718 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([32]))) = (int_64)0
	*($6 + [8]) = [0]
	*($6 + [12]) = [0]
	*($6 + [14]) = [0]
	*($6 + [16]) = $0
	CALL $740(($8 + [32]), $6)
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $741(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $719 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [16])
	$12 = $13
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$5 = ($1 + [8])
	$4 = *($1)
	$10 = *($1 + [8])
	$7 = ($1 + [12])
	$9 = *($7)
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$1 }
	$6 = int_32(($9 - $10) >> [4])
	$9 = [0]
	
.LOOP $label$2:
	*(($8 = ($10 + [4]))) = (*($8) + ((int_32)*(*(($3 + [4]))) * (int_32)*((*($3) + (*($10) << [2])))))
	$10 = ($10 + [16])
	$9 = ($9 + [1])
	if ( ($9 <= $6) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert([1], [512])
	$9 = *($5)
	$3 = *($7)
	$8 = ($3 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	$10 = [22]
	
.LOOP $label$3:
	$10 = ($10 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$5 }
	$10 = (((int_32)uint_32(($8 + [-16]) >> [4]) * (int_32)[14]) + $10)
	goto $label$4 
	
.LABEL $label$5
	$10 = ($10 + [-14])
	
.LABEL $label$4
	if ( ($10 <= [513]) ){ goto $label$7 }
	$3 = CALL malloc($10)
	goto $label$6 
	
.LABEL $label$7
	$3 = ($13 - (($10 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$6
	*($12) = $3
	*($12 + [8]) = ($3 + $10)
	CALL eosio_assert(((int_32)$10 > (int_32)[7]), [576])
	CALL memcpy($3, $1, [8])
	*($12 + [4]) = ($3 + [8])
	CALL $446($12, $5)
	CALL db_update_i64(*($1 + [24]), $2, $3, $10)
	if ( ($10 <= [513]) ){ goto $label$8 }
	CALL free($3)
	
.LABEL $label$8
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($12 + [16])
}

void .FUNC $484 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [48])
	*([0] + [4]) = $12
	$11 = *($1 + [12])
	$10 = *(($1 + [16]))
	$8 = ($10 - $11)
	if ( ((int_32)$8 < (int_32)[12]) ){ goto $label$1 }
	$2 = *($0 + [4])
	$8 = ((uint_32)$8 / (uint_32)[12])
	$3 = *(*($0))
	$9 = [0]
	
.LOOP $label$2:
	$4 = ($8 + [-1])
	
.LOOP $label$4:
	$5 = ($4 - $9)
	$8 = (((int_32)$5 / (int_32)[2]) + $9)
	$6 = *(($11 + ((int_32)$8 * (int_32)[12])))
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$3 }
	$9 = ($8 + [1])
	if ( ((int_32)$4 > (int_32)$8) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$6) ){ goto $label$5 }
	if ( ((int_32)$5 >= (int_32)[2]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$3 = ((int_32)$8 * (int_32)[12])
	$4 = ($11 + $3)
	if ( ((uint_32)((*($4 + [4]) + [-1051]) & [65535]) > (uint_32)[5]) ){ goto $label$6 }
	$9 = [0]
	*(($12 + [40])) = [0]
	*($12 + [24]) = (int_64)-1
	*($12 + [32]) = (int_64)0
	$7 = *($2)
	*($12 + [8]) = $7
	*($12 + [16]) = $7
	$8 = CALL $485(($12 + [8]), CALL $fimport$19($7, $7, (int_64)-4315240091392933888, *(*($0 + [8]))))
	CALL eosio_assert(((int_32)*($8 + [20]) == (int_32)($12 + [8])), [32])
	$6 = [-1]
	$11 = *($8 + [8])
	$5 = *(($8 + [12]))
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$7 }
	$8 = ($11 + [2])
	$11 = int_32(($5 - $11) >> [2])
	$4 = (*(($4 + [4])) & [65535])
	
.LOOP $label$9:
	if ( ((int_32)*($8) == (int_32)$4) ){ goto $label$8 }
	$8 = ($8 + [4])
	$9 = ($9 + [1])
	if ( ($9 <= $11) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$6 = $9
	
.LABEL $label$7
	CALL eosio_assert(uint_32($6 >> [31]), [4912])
	$11 = *($12 + [32])
	if ( ($11 == 0) ){ goto $label$10 }
	$6 = ($12 + [36])
	$8 = *($6)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$12 }
	
.LOOP $label$13:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	$4 = *($9 + [8])
	if ( ($4 == 0) ){ goto $label$15 }
	*(($9 + [12])) = $4
	CALL $867($4)
	
.LABEL $label$15
	CALL $867($9)
	
.LABEL $label$14
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$13 }
	$8 = *(($12 + [32]))
	goto $label$11 
	
.LABEL $label$12
	$8 = $11
	
.LABEL $label$11
	*($6) = $11
	CALL $867($8)
	
.LABEL $label$10
	$10 = *(($1 + [16]))
	$11 = *(($1 + [12]))
	
.LABEL $label$6
	$8 = ($11 + $3)
	$11 = ($8 + [12])
	$9 = ($10 - $11)
	$4 = ((int_32)$9 / (int_32)[12])
	if ( ($9 == 0) ){ goto $label$16 }
	CALL memmove($8, $11, $9)
	
.LABEL $label$16
	*(($1 + [16])) = ($8 + ((int_32)$4 * (int_32)[12]))
	*(*($0 + [12])) = [1]
	
.LABEL $label$1
	*([0] + [4]) = ($12 + [48])
}

int_32 .FUNC $485 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $866([32]))) = (int_64)0
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [16]) = [0]
	*($6 + [20]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [160])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	CALL $486(($8 + [32]), ($6 + [8]))
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $487(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $7
	CALL $867($7)
	
.LABEL $label$10
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $486 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [592])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [2])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $488($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [2]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	$3 = ($0 + [8])
	
.LOOP $label$6:
	CALL eosio_assert(((int_32)*($3) != (int_32)$6), [160])
	CALL memcpy($7, *($4), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[1]), [160])
	CALL memcpy(($7 + [2]), *($4), [2])
	$6 = (*($4) + [2])
	*($4) = $6
	$7 = ($7 + [4])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $487 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $6
	CALL $867($6)
	
.LABEL $label$11
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $867($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $480 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $85($0, ($1 + [40]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $481 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $209($0, ($1 + [40]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $482 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = $1
	*($7 + [20]) = $2
	$3 = *(($0 + [32]))
	$6 = *(($0 + [36]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$2 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$1 }
	$6 = $2
	$5 = ($2 + [-24])
	$2 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [8])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	$2 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$2 = [0]
	$6 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-5915108674644213760, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $72($5, $6)
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$5), [32])
	
.LABEL $label$3
	$6 = ((int_32)$2 != (int_32)[0])
	CALL eosio_assert($6, [4304])
	*($7 + [16]) = [0]
	$1 = *($0)
	*($7 + [4]) = $0
	*($7) = ($7 + [20])
	*($7 + [8]) = ($7 + [24])
	*($7 + [12]) = ($7 + [16])
	CALL eosio_assert($6, [352])
	CALL $483($5, $2, $1, $7)
	CALL eosio_assert(((int_32)*($7 + [16]) != (int_32)[0]), [4304])
	$2 = *($7 + [16])
	*([0] + [4]) = ($7 + [32])
	return ((int_32)$2 != (int_32)[0])
}

void .FUNC $483 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	CALL $484($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$3 = [12]
	$5 = ($1 + [12])
	$7 = *($1 + [12])
	$6 = *(($1 + [16]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[12]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$2 }
	$3 = ((((int_32)((uint_32)($8 + [-12]) / (uint_32)[12]) * (int_32)[10]) + $3) + [10])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$10 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$10 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$3
	*($11) = $10
	$6 = ($10 + $3)
	*($11 + [8]) = $6
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [576])
	CALL memcpy($10, $1, [8])
	$7 = ($10 + [8])
	CALL eosio_assert(((int_32)($6 - $7) > (int_32)[3]), [576])
	CALL memcpy($7, ($1 + [8]), [4])
	*($11 + [4]) = ($10 + [12])
	CALL $76($11, $5)
	CALL db_update_i64(*($1 + [28]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $488 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [2]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [2])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$4 }
	$6 = [1073741823]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [2]) > (uint_32)[536870910]) ){ goto $label$7 }
	$6 = int_32($2 >> [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $866(($6 << [2]))
	goto $label$2 
	
.LABEL $label$6
	
.LOOP $label$8:
	*($6) = [0]
	*($6 + [2]) = [0]
	*($6) = [0]
	$6 = (*($6) + [4])
	*(($6 = ($0 + [4]))) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $882($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [2]))
	$5 = ($2 + ($3 << [2]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = [0]
	*($6 + [2]) = [0]
	*($6) = [0]
	$6 = ($6 + [4])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $867($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $489 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [128])
	*([0] + [4]) = $11
	*($11 + [112]) = $1
	CALL require_auth($1)
	$8 = *($2)
	CALL eosio_assert((( *($2 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) ) <= [101]), [4928])
	$8 = *($3)
	CALL eosio_assert((( *($3 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) ) <= [65]), [4976])
	$5 = *($4 + [24])
	$4 = *($0 + [52])
	$7 = *(($4 + [28]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$1 }
	$8 = ($7 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$1 }
	$7 = $8
	$10 = ($8 + [-24])
	$8 = $10
	if ( ((int_32)($10 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$4 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$10 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $13($4, $10)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$4), [32])
	
.LABEL $label$3
	$7 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($7, [1936])
	*($11 + [104]) = [0]
	*($11 + [96]) = (int_64)0
	CALL eosio_assert(CALL $490($0, $1, [1], ($11 + [96])), [5008])
	CALL $482($0, $1, *(*($11 + [96])))
	*(($11 + [88])) = [0]
	*($11 + [72]) = (int_64)-1
	*($11 + [80]) = (int_64)0
	$9 = *($0)
	*($11 + [56]) = $9
	*($11 + [64]) = $9
	$10 = CALL db_find_i64($9, $9, (int_64)-6147542903796033232, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$10 }
	$6 = CALL $491(($11 + [56]), $10)
	CALL eosio_assert(((int_32)*($6 + [56]) == (int_32)($11 + [56])), [32])
	$10 = *($6 + [32])
	*($11 + [55]) = $10
	if ( ($10 == 0) ){ goto $label$7 }
	$10 = *(($0 + [52]))
	*($11 + [8]) = [5000]
	CALL eosio_assert(((uint_32)*($8 + [16]) > (uint_32)[4999]), [5040])
	$1 = *($10 + [40])
	*($11 + [120]) = ($11 + [8])
	CALL eosio_assert($7, [352])
	CALL $493($10, $8, $1, ($11 + [120]))
	*(($11 + [40])) = [0]
	$1 = *($0)
	*($11 + [8]) = $1
	*($11 + [24]) = (int_64)-1
	*($11 + [32]) = (int_64)0
	*($11 + [16]) = $1
	$8 = CALL db_find_i64($1, $1, (int_64)-4995815907328317952, *($11 + [112]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$11 }
	$8 = CALL $494(($11 + [8]), $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($11 + [8])), [32])
	CALL eosio_assert([1], [2224])
	CALL eosio_assert([1], [960])
	$10 = CALL db_next_i64(*($8 + [28]), ($11 + [120]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	CALL $494(($11 + [8]), $10)
	
.LABEL $label$12
	CALL $495(($11 + [8]), $8)
	
.LABEL $label$11
	$7 = *($11 + [32])
	if ( ($7 == 0) ){ goto $label$7 }
	$4 = ($11 + [36])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$9 }
	
.LOOP $label$13:
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$14 }
	CALL $867($10)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$13 }
	$8 = *(($11 + [32]))
	goto $label$8 
	
.LABEL $label$10
	$1 = *($0)
	*($11 + [12]) = $2
	*($11 + [16]) = $3
	*($11 + [8]) = ($11 + [112])
	CALL $492(($11 + [120]), ($11 + [56]), $1, ($11 + [8]))
	$7 = *($11 + [80])
	if ( $7 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$9
	$8 = $7
	
.LABEL $label$8
	*($4) = $7
	CALL $867($8)
	
.LABEL $label$7
	$1 = *($0)
	*($11 + [12]) = $3
	*($11 + [8]) = $2
	*($11 + [16]) = ($11 + [55])
	CALL eosio_assert([1], [352])
	CALL $496(($11 + [56]), $6, $1, ($11 + [8]))
	$7 = *($11 + [80])
	if ( ($7 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$6 = (($11 + [56]) + [28])
	$10 = *($6)
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$17:
	$10 = ($10 + [-24])
	$8 = *($10)
	*($10) = [0]
	if ( ($8 == 0) ){ goto $label$18 }
	if ( ((*($8 + [20]) & [1]) == 0) ){ goto $label$19 }
	CALL $867(*(($8 + [28])))
	
.LABEL $label$19
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$20 }
	CALL $867(*(($8 + [16])))
	
.LABEL $label$20
	CALL $867($8)
	
.LABEL $label$18
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$17 }
	$8 = *(($11 + [80]))
	goto $label$15 
	
.LABEL $label$16
	$8 = $7
	
.LABEL $label$15
	*($6) = $7
	CALL $867($8)
	
.LABEL $label$5
	$8 = *($11 + [96])
	if ( ($8 == 0) ){ goto $label$21 }
	*($11 + [100]) = $8
	CALL $867($8)
	
.LABEL $label$21
	*([0] + [4]) = ($11 + [128])
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $68 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = *([0] + [4])
	$11 = $12
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$6 = *(($3 + [4]))
	$4 = *($1)
	$5 = *($3)
	$3 = *($5 + [4])
	if ( ($3 == 0) ){ goto $label$3 }
	$10 = ($5 + [4])
	$7 = *($6)
	
.LOOP $label$4:
	$8 = *($3 + [16])
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$6 }
	$9 = *($3)
	if ( $9 ){ goto $label$5 }
	goto $label$2 
	
.LABEL $label$6
	if ( ((uint_64)$8 >= (uint_64)$7) ){ goto $label$1 }
	$10 = ($3 + [4])
	$9 = *($3 + [4])
	if ( ($9 == 0) ){ goto $label$1 }
	$3 = $10
	
.LABEL $label$5
	$10 = $3
	$3 = $9
	goto $label$4 
	
.LABEL $label$3
	$3 = ($5 + [4])
	
.LABEL $label$2
	$10 = $3
	
.LABEL $label$1
	$7 = $4
	$9 = *($10)
	if ( $9 ){ goto $label$7 }
	*(($9 = CALL $866([32]))) = (int_64)0
	*($9 + [8]) = $3
	*($10) = $9
	*($9 + [24]) = [0]
	*($9 + [16]) = *($6)
	$3 = $9
	$6 = *(*($5))
	if ( ($6 == 0) ){ goto $label$8 }
	*($5) = $6
	$3 = *($10)
	
.LABEL $label$8
	CALL $60(*($5 + [4]), $3)
	*($5 + [8]) = (*($5 + [8]) + [1])
	$7 = *($1)
	
.LABEL $label$7
	*($1 + [8]) = *(($9 + [24]))
	CALL eosio_assert(((int_64)$4 == (int_64)$7), [512])
	$10 = $12
	$3 = ($10 + [-16])
	*([0] + [4]) = $3
	CALL eosio_assert([1], [576])
	CALL memcpy($3, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($10 + [-8]), ($1 + [8]), [4])
	CALL db_update_i64(*($1 + [16]), $2, $3, [12])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = $11
}

void .FUNC $786 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = [1]
	$3 = *(*($3))
	*($1 + [16]) = [259200]
	*($1 + [12]) = $3
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [72]) = ($5 + [52])
	*($5 + [68]) = $5
	*($5 + [64]) = $5
	CALL $440(($5 + [64]), $1)
	CALL db_update_i64(*($1 + [60]), $2, $5, [52])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $83($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [576])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [576])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $87(CALL $86($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $64 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $866([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [24])
	$1 = ( *(($4 + [28])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [24])
	$2 = (CASTING uint_64)(uint_32 $1)
	$5 = ($4 + [24])
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $83($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9) = $8
	*($9 + [8]) = $1
	CALL eosio_assert(((int_32)($1 - $8) > (int_32)[7]), [576])
	CALL memcpy($8, $4, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [576])
	CALL memcpy($6, ($4 + [8]), [8])
	$6 = ($8 + [16])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [576])
	CALL memcpy($6, ($4 + [16]), [8])
	*($9 + [4]) = ($8 + [24])
	CALL $85($9, $5)
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $67 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [64])
	*([0] + [4]) = $13
	*($13 + [56]) = $1
	$6 = *($11 + [24])
	$11 = *($0 + [52])
	$10 = *(($11 + [28]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$1 }
	$9 = ($10 + [-24])
	$4 = ([0] - $6)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$1 }
	$10 = $9
	$5 = ($9 + [-24])
	$9 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$4 }
	$9 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$11), [32])
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	$5 = CALL db_find_i64(*($11), *($11 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $13($11, $5)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$11), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [192])
	CALL eosio_assert(CALL $71($0, $2), [224])
	$11 = *(($0 + [32]))
	$10 = *(($0 + [36]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$5 }
	$9 = ($10 + [-24])
	$4 = ([0] - $11)
	
.LOOP $label$6:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$5 }
	$10 = $9
	$5 = ($9 + [-24])
	$9 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$6 = ($0 + [8])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$8 }
	$9 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$6), [32])
	goto $label$7 
	
.LABEL $label$8
	$9 = [0]
	$5 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-5915108674644213760, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	$9 = CALL $72($6, $5)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$6), [32])
	
.LABEL $label$7
	*($13 + [48]) = [0]
	*($13 + [40]) = (int_64)0
	$9 = ( ($9 + [12]) ? ($0 + [56]) : $9 )
	$5 = (*($9 + [4]) - *($9))
	$10 = ((int_32)$5 / (int_32)[12])
	$11 = [0]
	$12 = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	if ( ((uint_32)$10 >= (uint_32)[357913942]) ){ goto $label$9 }
	$11 = CALL $866($5)
	*(($13 + [48])) = ($11 + ((int_32)$10 * (int_32)[12]))
	*($13 + [40]) = $11
	*($13 + [44]) = $11
	$5 = *($9)
	$9 = (*(($9 + [4])) - $5)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$11 }
	CALL memcpy($11, $5, $9)
	$12 = ($11 + ((int_32)((uint_32)$9 / (uint_32)[12]) * (int_32)[12]))
	*($13 + [44]) = $12
	goto $label$10 
	
.LABEL $label$11
	$12 = $11
	
.LABEL $label$10
	$8 = ($12 - $11)
	CALL eosio_assert((((int_32)$8 / (int_32)[12]) <= [24]), [256])
	*($13 + [32]) = [0]
	*($13 + [24]) = [0]
	*($13 + [28]) = $2
	$7 = *(($0 + [32]))
	$10 = *(($0 + [36]))
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$12 }
	$9 = ($10 + [-24])
	$4 = ([0] - $7)
	
.LOOP $label$13:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$12 }
	$10 = $9
	$5 = ($9 + [-24])
	$9 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$18 }
	$7 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$6), [32])
	if ( $7 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$9 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-5915108674644213760, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$16 }
	$7 = CALL $72($6, $9)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$6), [32])
	
.LABEL $label$17
	if ( ((uint_32)(($2 + [-1051]) & [65535]) > (uint_32)[5]) ){ goto $label$19 }
	$9 = [1]
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$20 }
	$9 = ($11 + [4])
	$4 = ((int_32)$8 / (int_32)[12])
	$10 = [0]
	$11 = ($2 & [65535])
	$5 = [0]
	
.LOOP $label$21:
	$5 = (((int_32)*($9) == (int_32)$11) + $5)
	$9 = ($9 + [12])
	$10 = ($10 + [1])
	if ( ($10 <= $4) ){ goto $label$21 }
	$9 = (($5 & [65535]) == 0)
	
.LABEL $label$20
	CALL eosio_assert($9, [1312])
	
.LABEL $label$19
	$1 = *($0)
	*($13 + [20]) = ($13 + [56])
	*($13 + [16]) = ($13 + [24])
	CALL eosio_assert([1], [352])
	CALL $74($6, $7, $1, ($13 + [16]))
	$9 = *($13 + [40])
	if ( $9 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$1 = *($0)
	*($13 + [20]) = ($13 + [56])
	*($13 + [16]) = ($13 + [24])
	CALL $73(($13 + [8]), $6, $1, ($13 + [16]))
	$9 = *($13 + [40])
	if ( ($9 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	*($13 + [44]) = $9
	CALL $867($9)
	
.LABEL $label$14
	*([0] + [4]) = ($13 + [64])
	return (unreachable)
	
.LABEL $label$9
	CALL $882(($13 + [40]))
}

int_32 .FUNC $66 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $866([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $83($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $84(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $866(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $867($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $3
	if ( $3 ){ goto $label$3 }
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( *($2 + [12]) ){ goto $label$3 }
	$3 = *($2 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$8 }
	if ( *($4 + [12]) ){ goto $label$8 }
	$4 = ($4 + [12])
	goto $label$9 
	
.LABEL $label$10
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( *($4 + [12]) ){ goto $label$6 }
	$4 = ($4 + [12])
	
.LABEL $label$9
	*(($2 + [12])) = [1]
	$2 = ((int_32)$3 == (int_32)$0)
	*($3 + [12]) = $2
	*($4) = [1]
	$1 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$5 }
	$4 = $2
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$2 }
	$4 = *($2 + [4])
	$1 = *($4)
	*($2 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$11
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*($4) = $2
	$3 = *($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	$4 = *($2)
	$1 = *($4 + [4])
	*($2) = $1
	if ( ($1 == 0) ){ goto $label$12 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$12
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*(($4 + [4])) = $2
	$3 = *($4 + [8])
	
.LABEL $label$4
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3 + [4])
	$4 = *($2)
	*($3 + [4]) = $4
	if ( ($4 == 0) ){ goto $label$13 }
	*($4 + [8]) = $3
	
.LABEL $label$13
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*($2) = $3
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	$4 = $2
	
.LABEL $label$1
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3)
	$4 = *($2 + [4])
	*($3) = $4
	if ( ($4 == 0) ){ goto $label$14 }
	*($4 + [8]) = $3
	
.LABEL $label$14
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*(($2 + [4])) = $3
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([64]))) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [32]) = [0]
	*($6 + [40]) = (int_64)0
	*($6 + [48]) = $0
	CALL $88(($8 + [32]), $6)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $69(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [20]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC __mo_lookup (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0)
	$10 = ((int_32)$3 == (int_32)[-1794895138])
	$9 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	$4 = *($0 + [8])
	$5 = ( $4 ? $9 : $10 )
	if ( ((uint_32)$5 >= (uint_32)uint_32($1 >> [2])) ){ goto $label$4 }
	$12 = ($1 - ($5 << [2]))
	$11 = *($0 + [12])
	$6 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$6 >= (uint_32)$12) ){ goto $label$3 }
	$11 = *($0 + [16])
	$10 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$10 >= (uint_32)$12) ){ goto $label$2 }
	if ( ((($10 | $6) & [3]) == 0) ){ goto $label$1 }
	return [0]
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$12 = uint_32($6 >> [2])
	if ( ((int_32)$3 != (int_32)[-1794895138]) ){ goto $label$16 }
	$5 = uint_32($5 >> [1])
	$6 = ($5 << [1])
	$9 = ($0 + (($6 + $12) << [2]))
	$11 = *(($9 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$15 }
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)($1 - $11)) ){ goto $label$14 }
	$9 = $5
	$7 = [0]
	
.LOOP $label$17:
	if ( *(($0 + ($11 + $8))) ){ goto $label$9 }
	$11 = CALL strcmp($2, ($0 + $11))
	if ( ($11 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$7 }
	$13 = [0]
	$4 = ( $9 ? ($4 - $9) : $11 )
	$9 = uint_32($4 >> [1])
	$11 = ((int_32)$11 < (int_32)[0])
	$7 = ( $7 ? $5 : $11 )
	$5 = ($7 + $9)
	$6 = ($5 << [1])
	$8 = ($0 + (($6 + $12) << [2]))
	$11 = *(($8 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$10 }
	$8 = *($8)
	if ( ($8 <= ($1 - $11)) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	$8 = uint_32($9 >> [1])
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$13 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ((uint_32)$11 >= (uint_32)($1 - $4)) ){ goto $label$12 }
	$5 = $8
	$7 = [0]
	
.LOOP $label$18:
	if ( *(($0 + ($4 + $11))) ){ goto $label$8 }
	$4 = CALL strcmp($2, ($0 + $4))
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$6 }
	$13 = [0]
	$9 = ( $5 ? ($9 - $5) : $4 )
	$5 = uint_32($9 >> [1])
	$4 = ((int_32)$4 < (int_32)[0])
	$7 = ( $7 ? $8 : $4 )
	$8 = ($7 + $5)
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$10 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ($11 <= ($1 - $4)) ){ goto $label$18 }
	goto $label$10 
	
.LABEL $label$15
	return [0]
	
.LABEL $label$14
	return [0]
	
.LABEL $label$13
	return [0]
	
.LABEL $label$12
	return [0]
	
.LABEL $label$11
	$9 = ((int_32)$3 == (int_32)[-1794895138])
	$10 = ($0 + (($6 + uint_32($10 >> [2])) << [2]))
	$4 = *(($10 + [4]))
	$11 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$5 }
	$13 = [0]
	$4 = *($10)
	$4 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$4 >= (uint_32)($1 - $11)) ){ goto $label$10 }
	return ( [0] ? ($0 + $11) : *(($0 + ($11 + $4))) )
	
.LABEL $label$10
	return $13
	
.LABEL $label$9
	return [0]
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	return [0]
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	return [0]
}

int_32 .FUNC __lctrans_impl (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL __mo_lookup(*($1), *($1 + [4]), $0)
	return ( $1 ? $0 : $1 )
	
.LABEL $label$1
	return ( [0] ? $0 : [0] )
}

void .FUNC $337 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	*($1) = *(*($0))
	$2 = *($0 + [4])
	$3 = *(($2 + [48]))
	if ( ((int_32)(*($2 + [16]) & [254]) != (int_32)[2]) ){ goto $label$2 }
	CALL eosio_assert(((int_64)$3 == (int_64)*(($1 + [48]))), [3504])
	$3 = ((int_64)*($1 + [40]) + (int_64)*(($2 + [40])))
	*($1 + [40]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [40]) < (int_64)4611686018427387904), [3584])
	*($1 + [64]) = [1]
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert(((int_64)$3 == (int_64)*(($1 + [32]))), [3504])
	$3 = ((int_64)*($1 + [24]) + (int_64)*(($2 + [40])))
	*($1 + [24]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [3584])
	*($1 + [60]) = [1]
	
.LABEL $label$1
	$2 = *(($0 + [4]))
	$0 = ($1 + [84])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)*(($1 + [88]))) ){ goto $label$3 }
	CALL memcpy($4, $2, [56])
	*($0) = (*($0) + [56])
	return 
	
.LABEL $label$3
	CALL $333(($1 + [80]), $2)
}

int_32 .FUNC wctomb (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL wcrtomb($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC strnlen (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL memchr($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC __fpclassifyl (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [3] ? [2] : ((int_64)((int_64)$2 | (int_64)$0) != (int_64)0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

void .FUNC $780 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [144])
	*([0] + [4]) = $14
	CALL require_auth($1)
	$4 = *($7 + [24])
	$7 = *($0 + [12])
	$12 = *(($7 + [28]))
	if ( ((int_32)$12 == (int_32)$4) ){ goto $label$1 }
	$13 = ($12 + [-24])
	$3 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$1 }
	$12 = $13
	$5 = ($13 + [-24])
	$13 = $5
	if ( ((int_32)($5 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$12 == (int_32)$4) ){ goto $label$4 }
	$4 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$7), [32])
	goto $label$3 
	
.LABEL $label$4
	$4 = [0]
	$13 = CALL db_find_i64(*($7), *($7 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $13($7, $13)
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$7), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [192])
	*(($14 + [128])) = [0]
	*($14 + [112]) = (int_64)-1
	*($14 + [120]) = (int_64)0
	$9 = *($0)
	*($14 + [96]) = $9
	*($14 + [104]) = $9
	$12 = [0]
	$13 = CALL db_find_i64($9, $9, (int_64)7176374513427283968, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$5 }
	$12 = CALL $268(($14 + [96]), $13)
	CALL eosio_assert(((int_32)*($12 + [64]) == (int_32)($14 + [96])), [32])
	
.LABEL $label$5
	$3 = ((int_32)$12 != (int_32)[0])
	CALL eosio_assert($3, [2976])
	CALL eosio_assert(((int_32)*($12 + [8]) == (int_32)[1]), [8704])
	$13 = *($12 + [12])
	if ( ((int_32)$13 == (int_32)[-1]) ){ goto $label$6 }
	CALL eosio_assert(((int_32)$13 > (int_32)[0]), [3008])
	
.LABEL $label$6
	CALL $269(($14 + [88]), *($0 + [8]), $1, [1])
	if ( ((int_32)*($12 + [16]) != (int_32)[1]) ){ goto $label$7 }
	CALL eosio_assert(((*(*($14 + [92]) + [60]) & ([1] << ($2 + [-1]))) == 0), [3072])
	
.LABEL $label$7
	if ( (*($12 + [20]) == 0) ){ goto $label$8 }
	$9 = CALL current_time()
	$13 = [0]
	$6 = (CASTING uint_32)(uint_64 ((uint_64)$9 / (uint_64)(int_64)1000000))
	$5 = *(($12 + [20]))
	if ( ((uint_32)$5 > (uint_32)$6) ){ goto $label$9 }
	$13 = ((uint_32)(*($12 + [24]) + $5) > (uint_32)$6)
	
.LABEL $label$9
	CALL eosio_assert($13, [3040])
	
.LABEL $label$8
	$13 = *($12 + [28])
	if ( ($13 == 0) ){ goto $label$10 }
	CALL eosio_assert(((uint_32)*(*($14 + [92]) + [56]) >= (uint_32)$13), [3120])
	
.LABEL $label$10
	if ( ((int_32)$2 == (int_32)[15]) ){ goto $label$12 }
	if ( ((int_32)$2 != (int_32)[9]) ){ goto $label$11 }
	$9 = (int_64)0
	$8 = (int_64)59
	$13 = [8736]
	$10 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$18 }
	$5 = *($13)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$5 = ($5 + [165])
	goto $label$16 
	
.LABEL $label$18
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$14
	$13 = ($13 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$13 }
	CALL require_auth2($1, $10)
	goto $label$11 
	
.LABEL $label$12
	if ( CALL $749(*(($0 + [8])), $1) ){ goto $label$11 }
	CALL eosio_assert([0], [3008])
	
.LABEL $label$11
	*($14 + [84]) = $4
	*($14 + [80]) = $7
	*($14 + [8 align=4]) = *($14 + [80])
	CALL $270($0, $1, ($12 + [52]), ($14 + [8]))
	if ( ((int_32)*(($12 + [12])) < (int_32)[1]) ){ goto $label$19 }
	$9 = *($0)
	CALL eosio_assert($3, [352])
	CALL $781(($14 + [96]), $12, $9, ($14 + [16]))
	
.LABEL $label$19
	if ( ((int_32)*(($12 + [16])) != (int_32)[1]) ){ goto $label$20 }
	CALL memcpy(($14 + [16]), *($14 + [92]), [64])
	*($14 + [76]) = (*($14 + [76]) | ([1] << ($2 + [-1])))
	$5 = *(($0 + [8]))
	$9 = *($5)
	$13 = *($14 + [92])
	*($14 + [136]) = ($14 + [16])
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [352])
	CALL $272(($5 + [128]), $13, $9, ($14 + [136]))
	
.LABEL $label$20
	if ( ((int_32)$2 != (int_32)[16]) ){ goto $label$21 }
	CALL $782(*(($0 + [8])), $1)
	$7 = *(($2 + [32]))
	$2 = *($0 + [20])
	$12 = *(($2 + [36]))
	if ( ((int_32)$12 == (int_32)$7) ){ goto $label$22 }
	$13 = ($12 + [-24])
	$3 = ([0] - $7)
	
.LOOP $label$23:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$22 }
	$12 = $13
	$5 = ($13 + [-24])
	$13 = $5
	if ( ((int_32)($5 + $3) != (int_32)[-24]) ){ goto $label$23 }
	
.LABEL $label$22
	$13 = ($2 + [8])
	if ( ((int_32)$12 == (int_32)$7) ){ goto $label$27 }
	$5 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$13), [32])
	if ( $5 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$5 = CALL db_find_i64(*(($2 + [8])), *(($2 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$25 }
	$5 = CALL $227($13, $5)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$13), [32])
	
.LABEL $label$26
	$13 = ($5 + [12])
	goto $label$24 
	
.LABEL $label$25
	$13 = ($2 + [112])
	
.LABEL $label$24
	$13 = *($4 + [8])
	CALL eosio_assert(((int_32)((int_32)(*($13 + [4]) - *($13)) / (int_32)[12]) < (int_32)((( $13 ? [5] : ($13 <= [5]) ) << [2]) + [28])), [2768])
	CALL $228(*(($0 + [20])), $1, [401], [8])
	
.LABEL $label$21
	$2 = *($14 + [120])
	if ( ($2 == 0) ){ goto $label$28 }
	$6 = ($14 + [124])
	$12 = *($6)
	if ( ((int_32)$12 == (int_32)$2) ){ goto $label$30 }
	
.LOOP $label$31:
	$12 = ($12 + [-24])
	$3 = *($12)
	*($12) = [0]
	if ( ($3 == 0) ){ goto $label$32 }
	$0 = *($3 + [52])
	if ( ($0 == 0) ){ goto $label$33 }
	$13 = $0
	$7 = ($3 + [56])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$34 }
	$5 = ([0] - $0)
	$13 = ($4 + [-12])
	
.LOOP $label$35:
	if ( ((*($13) & [1]) == 0) ){ goto $label$36 }
	CALL $867(*(($13 + [8])))
	
.LABEL $label$36
	$13 = ($13 + [-20])
	if ( ((int_32)($13 + $5) != (int_32)[-12]) ){ goto $label$35 }
	$13 = *(($3 + [52]))
	
.LABEL $label$34
	*($7) = $0
	CALL $867($13)
	
.LABEL $label$33
	CALL $867($3)
	
.LABEL $label$32
	if ( ((int_32)$12 != (int_32)$2) ){ goto $label$31 }
	$13 = *(($14 + [120]))
	goto $label$29 
	
.LABEL $label$30
	$13 = $2
	
.LABEL $label$29
	*($6) = $2
	CALL $867($13)
	
.LABEL $label$28
	*([0] + [4]) = ($14 + [144])
}

int_32 .FUNC wcrtomb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL __errno_location()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL __errno_location()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

void .FUNC frexpl (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$5 = ($4) & [32767]
	if ( ((int_32)$5) == (int_32)[32767]) ){ goto $label$1 }
	if ( $5 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($6, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL frexpl(($6 + [16]), *($6), *(($6 + [8])), $3)
	$4 = (*($3) + [-120])
	$2 = *($6 + [24])
	$1 = *($6 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($4 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($4 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	*($3) = $4
	
.LABEL $label$1
	*($0) = $1
	*(($0 + [8])) = $2
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC __lctrans (int_32 $0, int_32 $1)
{
	return CALL __lctrans_impl($0, $1)
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

void .FUNC $331 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($2 + [4]), $3, [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$2 = *($0 + [32])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $2, [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	CALL eosio_assert(((int_32)(*($0 + [8]) - $1) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $549 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [224])
	*([0] + [4]) = $13
	*($13 + [200]) = $1
	CALL require_auth($1)
	$3 = *($5 + [24])
	$5 = *($0 + [328])
	$7 = *(($5 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$1 }
	$7 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$6 = CALL db_find_i64(*($5), *($5 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $13($5, $6)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$5), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [2624])
	$3 = *(($5 + [40]))
	$5 = *($0 + [336])
	$7 = *(($5 + [44]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$5 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$6:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$5 }
	$7 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$8 = ($5 + [16])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$8 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [20]) == (int_32)$8), [32])
	goto $label$7 
	
.LABEL $label$8
	$6 = [0]
	$7 = CALL db_find_i64(*(($5 + [16])), *(($5 + [24])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $225($8, $7)
	CALL eosio_assert(((int_32)*($6 + [20]) == (int_32)$8), [32])
	
.LABEL $label$7
	$7 = [0]
	*($13 + [192]) = [0]
	*($13 + [184]) = (int_64)0
	$4 = [0]
	$8 = [0]
	$6 = ( ($6 + [8]) ? ($5 + [80]) : $6 )
	$3 = (*($6 + [4]) - *($6))
	$5 = int_32($3 >> [4])
	if ( ($5 == 0) ){ goto $label$10 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$9 }
	$8 = CALL $866($3)
	*(($13 + [192])) = ($8 + ($5 << [4]))
	*($13 + [184]) = $8
	*($13 + [188]) = $8
	$4 = *($6)
	$6 = (*(($6 + [4])) - $4)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$11 }
	CALL memcpy($8, $4, $6)
	$4 = ($8 + $6)
	*($13 + [188]) = $4
	goto $label$10 
	
.LABEL $label$11
	$4 = $8
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$8 != (int_32)$4), [5536])
	$5 = ($0 + [88])
	$8 = ($0 + [96])
	$6 = CALL db_lowerbound_i64(*($0 + [88]), *($8), (int_64)-3732485072926388848, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	$7 = CALL $512($5, $6)
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [5312])
	$10 = (int_64)0
	CALL eosio_assert(((int_32)*(CALL $512($5, CALL $fimport$25(*($5), *($8), (int_64)-3732485072926388848, (int_64)0)) + [8]) == (int_32)[1]), [5344])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)1414222852), [5664])
	$6 = [0]
	if ( ((uint_64)((int_64)*($2) + (int_64)4611686018427387903) >= (uint_64)(int_64)9223372036854775807) ){ goto $label$13 }
	$9 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$6 = [0]
	
.LABEL $label$13
	CALL eosio_assert($6, [5360])
	CALL eosio_assert(((int_64)*($2) > (int_64)0), [5568])
	$9 = (int_64)59
	$8 = [1088]
	$11 = (int_64)0
	
.LOOP $label$18:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$19 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$6 = ($6 + [165])
	goto $label$20 
	
.LABEL $label$21
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$19
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$18 }
	*(($13 + [176])) = [0]
	*($13 + [152]) = $1
	*($13 + [144]) = $11
	*($13 + [160]) = (int_64)-1
	*($13 + [168]) = (int_64)0
	$8 = CALL $550(($13 + [144]), (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8), [5600]
	$12 = *($8) + [8])
	$9 = *($8)
	$10 = *($13 + [200])
	$3 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$22 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$23:
	if ( ((int_64)*(*($8)) == (int_64)$10) ){ goto $label$22 }
	$7 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$23 }
	
.LABEL $label$22
	$6 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$26 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$6), [32])
	if ( $8 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$8 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-3732452873091252224, $10)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$24 }
	$8 = CALL $511($6, $8)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$6), [32])
	
.LABEL $label$25
	CALL eosio_assert(((int_64)*(($8 + [16])) == (int_64)$12), [3360])
	$9 = (int_64)
	CALL eosio_assert(((int_64)$9($9 - *($8 + [8]))) > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)$9 < (int_64)4611686018427387904), [3440])
	
.LABEL $label$24
	CALL eosio_assert(((int_64)*($2) <= (int_64)$9), [5632])
	$10 = *($13 + [200])
	$3 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$27 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$28:
	if ( ((int_64)*(*($8)) == (int_64)$10) ){ goto $label$27 }
	$7 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$28 }
	
.LABEL $label$27
	$6 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$32 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [32])
	if ( $8 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	$8 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-3732485072939384832, $10)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$30 }
	$8 = CALL $523($6, $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [32])
	
.LABEL $label$31
	CALL eosio_assert(((int_64)*(($8 + [16])) == (int_64)$12), [3360])
	$10 = (int_64)
	CALL eosio_assert(((int_64)$10($9 - *($8 + [8]))) > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)$10 < (int_64)4611686018427387904), [3440])
	CALL eosio_assert(((int_64)*($2) <= (int_64)$10), [5632])
	$10 = *($0)
	*($13 + [72]) = $2
	CALL eosio_assert([1], [352])
	CALL $551($6, $8, $10, ($13 + [72]))
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert(((int_64)*($2) <= (int_64)$9), [5632])
	$10 = *($0)
	*($13 + [76]) = $2
	*($13 + [72]) = ($13 + [200])
	CALL $552(($13 + [32]), $6, $10, ($13 + [72]))
	
.LABEL $label$29
	$8 = [0]
	$6 = CALL db_lowerbound_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-3732485072926388848, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$33 }
	$8 = CALL $512($5, $6)
	
.LABEL $label$33
	$10 = *($0)
	*($13 + [72]) = $2
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [352])
	CALL $553($5, $8, $10, ($13 + [72]))
	CALL $269(($13 + [136]), *($0 + [340]), *($13 + [200]), [1])
	CALL memcpy(($13 + [72]), *($13 + [140]), [64])
	$7 = *($13 + [128])
	CALL $531(*(($0 + [328])), ($13 + [72]), *($13 + [200]), [1])
	$8 = *($13 + [140])
	$6 = *($0 + [340])
	$10 = *($6)
	$4 = *($13 + [128])
	*($13 + [32]) = ($13 + [72])
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [352])
	CALL $272(($6 + [128]), $8, $10, ($13 + [32]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$34 }
	$1 = *($0)
	$10 = (int_64)0
	$12 = (int_64)59
	$8 = [1152]
	$11 = (int_64)0
	
.LOOP $label$35:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$40 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$6 = ($6 + [165])
	goto $label$38 
	
.LABEL $label$40
	$9 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$39
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$37
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$36
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$9 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$35 }
	*($13 + [24]) = $11
	*($13 + [16]) = $1
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [5472]
	$11 = (int_64)0
	
.LOOP $label$41:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$42 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$44 }
	$6 = ($6 + [165])
	goto $label$43 
	
.LABEL $label$44
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$43
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$42
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$41 }
	$10 = (int_64)0
	$12 = (int_64)59
	$8 = [5488]
	$1 = (int_64)0
	
.LOOP $label$45:
	if ( ((uint_64)$10 > (uint_64)(int_64)8) ){ goto $label$50 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$49 }
	$6 = ($6 + [165])
	goto $label$48 
	
.LABEL $label$50
	$9 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$49
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$48
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$47
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$46
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$1 = ((int_64)$9 | (int_64)$1)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$45 }
	*($13 + [8]) = $7
	*($13 + [10]) = $4
	*($13) = *($13 + [200])
	$8 = CALL $532(($13 + [32]), ($13 + [16]), $11, $1, $13)
	CALL $65(($13 + [208]), $8)
	$6 = *($13 + [208])
	CALL send_inline($6, (*($13 + [212]) - $6))
	$6 = *($13 + [208])
	if ( ($6 == 0) ){ goto $label$51 }
	*($13 + [212]) = $6
	CALL $867($6)
	
.LABEL $label$51
	$6 = *($8 + [28])
	if ( ($6 == 0) ){ goto $label$52 }
	*(($8 + [32])) = $6
	CALL $867($6)
	
.LABEL $label$52
	$6 = *($8 + [16])
	if ( ($6 == 0) ){ goto $label$34 }
	*(($8 + [20])) = $6
	CALL $867($6)
	
.LABEL $label$34
	$0 = *($13 + [168])
	if ( ($0 == 0) ){ goto $label$53 }
	$7 = ($13 + [172])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$55 }
	
.LOOP $label$56:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$57 }
	CALL $867($6)
	
.LABEL $label$57
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$56 }
	$8 = *(($13 + [168]))
	goto $label$54 
	
.LABEL $label$55
	$8 = $0
	
.LABEL $label$54
	*($7) = $0
	CALL $867($8)
	
.LABEL $label$53
	$8 = *($13 + [184])
	if ( ($8 == 0) ){ goto $label$58 }
	*($13 + [188]) = $8
	CALL $867($8)
	
.LABEL $label$58
	*([0] + [4]) = ($13 + [224])
	return (unreachable)
	
.LABEL $label$9
	CALL $882(($13 + [184]))
}

int_32 .FUNC $621 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([72])) + [56]) = $0
	CALL $628(($8 + [32]), $6)
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $629(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $622 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([48]))) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = [0]
	*($6 + [28]) = [0]
	*($6 + [32]) = $0
	CALL $626(($8 + [32]), $6)
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $627(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $623 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([56])) + [40]) = $0
	CALL $624(($8 + [32]), $6)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $625(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $624 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [10]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [14]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [18]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [22]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [26]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [28]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [30]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [34]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [36]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC $625 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $239 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [36]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*(($1 + [44])))
	
.LABEL $label$11
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$12 }
	CALL $867(*(($1 + [32])))
	
.LABEL $label$12
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $867($6)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $238 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	$10 = $11
	*([0] + [4]) = $11
	$8 = *($0 + [4])
	*($1) = *(*($8))
	$2 = *($0)
	*($1 + [8]) = *(*($8 + [4]))
	*($1 + [12]) = *(*($8 + [8]))
	*($1 + [16]) = *(*($8 + [12]))
	*($1 + [48]) = *(*(*($8 + [16])))
	$5 = *($9)
	$9 = *($8 + [16])
	$6 = *($9 + [4])
	if ( (int_32(($6 - $5) >> [1]) <= [2]) ){ goto $label$1 }
	*($1 + [50]) = *($5 + [2])
	$9 = *(($8 + [16]))
	$5 = *($9)
	$6 = *($9 + [4])
	
.LABEL $label$1
	if ( (int_32(($6 - $5) >> [1]) <= [3]) ){ goto $label$2 }
	*($1 + [52]) = *(*($9) + [4])
	
.LABEL $label$2
	$8 = *($1 + [24])
	$9 = ( *(($1 + [28])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($9 + [39])
	$7 = (CASTING uint_64)(uint_32 $9)
	
.LOOP $label$3:
	$8 = ($8 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	$9 = *($1 + [36])
	$9 = ( *(($1 + [40])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$8 = ($9 + $8)
	$7 = (CASTING uint_64)(uint_32 $9)
	
.LOOP $label$4:
	$8 = ($8 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$4 }
	if ( ($8 <= [513]) ){ goto $label$6 }
	$9 = CALL malloc($8)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($11 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$5
	*($10 + [12]) = $9
	*($10 + [8]) = $9
	*($10 + [16]) = ($9 + $8)
	CALL $240(($10 + [8]), $1)
	$7 = *($1)
	*($1 + [72]) = CALL db_store_i64(*($2 + [8]), (int_64)6256973777754652672, *(*($0 + [8])), $7, $9, $8)
	if ( ($8 <= [513]) ){ goto $label$7 }
	CALL free($9)
	
.LABEL $label$7
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$7 = *(($2 + [8]))
	$3 = *(*(($0 + [8])))
	$4 = *($1)
	*($10 + [24]) = *(($1 + [12]))
	*($1 + [76]) = CALL db_idx64_store($7, (int_64)6256973777754652672, $3, $4, ($10 + [24]))
	*([0] + [4]) = ($10 + [32])
}

int_32 .FUNC $541 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

void .FUNC $236 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [2272])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [2320])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$4 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($4)) == (int_64)$2) ){ goto $label$1 }
	$7 = $4
	$8 = ($4 + [-24])
	$4 = $8
	if ( ((int_32)($8 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2384])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [36]) & [1]) == 0) ){ goto $label$7 }
	CALL $867(*(($4 + [44])))
	
.LABEL $label$7
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$8 }
	CALL $867(*(($4 + [32])))
	
.LABEL $label$8
	CALL $867($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	if ( ((*($4 + [36]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*(($4 + [44])))
	
.LABEL $label$11
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$12 }
	CALL $867(*(($4 + [32])))
	
.LABEL $label$12
	CALL $867($4)
	
.LABEL $label$10
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [72]))
	$7 = *($1 + [76])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$14 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6256973777754652672, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	
.LABEL $label$14
	CALL db_idx64_remove($7)
	
.LABEL $label$13
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $235 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [72]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2928])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)6256973777754652672)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2864])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2864])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $234(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $234 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([80])) + [8]) = [0]
	*($6) = (int_64)0
	*($6 + [12]) = [0]
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = [0]
	*($6 + [28]) = [0]
	*($6 + [32]) = [0]
	*($6 + [36]) = [0]
	*($6 + [40]) = [0]
	*($6 + [44]) = [0]
	*($6 + [68]) = $0
	CALL $241(($8 + [32]), $6)
	*($6 + [76]) = [-1]
	*($6 + [72]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [72])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $239(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [36]) & [1]) == 0) ){ goto $label$10 }
	CALL $867(*(($4 + [44])))
	
.LABEL $label$10
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*(($4 + [32])))
	
.LABEL $label$11
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $233 (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	*($7 + [88]) = $2
	*($7 + [84]) = $1
	*($7 + [80]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*(($7 + [72])) = [0]
	*($7 + [56]) = (int_64)-1
	$6 = (int_64)0
	*($7 + [64]) = (int_64)0
	$2 = *($0)
	*($7 + [40]) = $2
	*($7 + [48]) = $2
	*($7 + [76]) = [0]
	$1 = CALL db_lowerbound_i64($2, $2, (int_64)6256973777754652672, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	CALL $234(($7 + [40]), $1)
	*($7 + [12]) = [0]
	*($7 + [8]) = ($7 + [40])
	$2 = *(*(CALL $235(($7 + [8])) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*(($1 = ($7 + [56]))) = $6
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [2800])
	$2 = *($1)
	*($7 + [32]) = ( (int_64)1 ? $2 : (int_64)($2 == 0) )
	if ( ($4 == 0) ){ goto $label$2 }
	$4 = ($7 + [48])
	$1 = CALL db_lowerbound_i64(*($7 + [40]), *($4), (int_64)6256973777754652672, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	CALL $234(($7 + [40]), $1)
	$4 = CALL db_lowerbound_i64(*($7 + [40]), *($4), (int_64)6256973777754652672, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $234(($7 + [40]), $4)
	
.LOOP $label$3:
	if ( ((uint_32)(*($7 + [80]) - *($4 + [12])) <= (uint_32)((int_32)*([0] + [24]) * (int_32)[5])) ){ goto $label$2 }
	$1 = [0]
	$5 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($5, [2224])
	CALL eosio_assert($5, [960])
	$5 = CALL db_next_i64(*($4 + [72]), ($7 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $234(($7 + [40]), $5)
	
.LABEL $label$4
	CALL $236(($7 + [40]), $4)
	$4 = $1
	if ( $1 ){ goto $label$3 }
	
.LABEL $label$2
	$2 = *($0)
	*($7 + [24]) = $3
	*($7 + [12]) = ($7 + [84])
	*($7 + [8]) = ($7 + [32])
	*($7 + [16]) = ($7 + [80])
	*($7 + [20]) = ($7 + [88])
	CALL $237($7, ($7 + [40]), $2, ($7 + [8]))
	$5 = *($7 + [64])
	if ( ($5 == 0) ){ goto $label$5 }
	$0 = ($7 + [68])
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$1 = ($1 + [-24])
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [36]) & [1]) == 0) ){ goto $label$10 }
	CALL $867(*(($4 + [44])))
	
.LABEL $label$10
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*(($4 + [32])))
	
.LABEL $label$11
	CALL $867($4)
	
.LABEL $label$9
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$8 }
	$4 = *(($7 + [64]))
	goto $label$6 
	
.LABEL $label$7
	$4 = $5
	
.LABEL $label$6
	*($0) = $5
	CALL $867($4)
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [96])
}

int_32 .FUNC $544 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [576])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [576])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $87($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $547 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $230 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([40]))) = (int_64)0
	*($3 + [12 align=4]) = (int_64)0
	*($3 + [20]) = [0]
	*($3 + [24]) = $1
	CALL $258(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [28])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $259(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [12])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [16])) = $1
	CALL $867($1)
	
.LABEL $label$4
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $875 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $866($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $867($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $417 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $877 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = [0]
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [160])
	CALL memcpy($6, $4, [8])
	CALL eosio_assert(((int_32)($1 & [-4]) != (int_32)[8]), [160])
	$7 = ($6 + [8])
	CALL memcpy($7, ($4 + [8]), [4])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($7)
	$3 = *($6)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 $4), (int_32 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC $871 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $866(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $867($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $870 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $866($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $867($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $873 (int_32 $0, int_32 $1)
{
	return CALL $872($0, $1, CALL $914($1))
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = [0]
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [160])
	CALL memcpy($6, $4, [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [160])
	$7 = ($6 + [8])
	CALL memcpy($7, ($4 + [8]), [1])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($7)
	$3 = *($6)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 ($4 & [255])), (int_32 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC $112 (int_32 $0, int_32 $1)
{
	CALL $812(($0 + [864]), $1)
}

int_32 .FUNC $879 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$3 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$4 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$4 = *($0 + [4])
	
.LABEL $label$3
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$5 }
	CALL $875($0, $3, (($1 - $3) + $4), $4, $4, [0], [0])
	$5 = *($0)
	
.LABEL $label$5
	if ( ($5 & [1]) ){ goto $label$7 }
	$5 = ($0 + [1])
	goto $label$6 
	
.LABEL $label$7
	$5 = *($0 + [8])
	
.LABEL $label$6
	CALL memset(($5 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($1 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $1
	
.LABEL $label$8
	*(($5 + $1)) = [0]
	
.LABEL $label$1
	return $0
}

void .FUNC $415 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $237 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([80])) + [8]) = [0]
	*($3) = (int_64)0
	*($3 + [12]) = [0]
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = [0]
	*($3 + [28]) = [0]
	*($3 + [32]) = [0]
	*($3 + [36]) = [0]
	*($3 + [40]) = [0]
	*($3 + [44]) = [0]
	*($3 + [68]) = $1
	CALL $238(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [72])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $239(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((*($3 + [36]) & [1]) == 0) ){ goto $label$4 }
	CALL $867(*(($3 + [44])))
	
.LABEL $label$4
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*(($3 + [32])))
	
.LABEL $label$5
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[3]), [160])
	CALL memcpy(($5 + [8]), $3, [4])
	$6 = *($5 + [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 $6), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

int_32 .FUNC $414 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [36]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [41]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC $110 (int_32 $0)
{
	CALL $833(($0 + [864]))
}

int_32 .FUNC $413 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1397703940
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*($0 + [36]) = [0]
	*($0 + [32]) = [0]
	*($0 + [40]) = [0]
	return $0
}

int_32 .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

void .FUNC $412 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [160])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($2, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

int_32 .FUNC $303 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [96]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $302 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [12 align=4]) = (int_64)0
	*($0 + [20]) = [0]
	*($0 + [24]) = (int_64)0
	*(($3 = ($0 + [32]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*($0 + [48]) = (int_64)0
	*($0 + [40]) = [0]
	*($0 + [56]) = (int_64)0
	*(($2 = ($0 + [64]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [80]))) = (int_64)1398362884
	*($0 + [72]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [1120])
	return $0
}

void .FUNC $301 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [2])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$4 = [1073741823]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [2]) > (uint_32)[536870910]) ){ goto $label$5 }
	$4 = int_32($2 >> [1])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $866(($4 << [2]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [2])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [2]))
	$7 = ($3 + [4])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $867($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $300 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [20]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $307 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [4752]
	$6 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$5 > (uint_64)(int_64)9) ){ goto $label$6 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$8 }
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [4768]
	$6 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$5 > (uint_64)(int_64)9) ){ goto $label$14 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$2 = ($2 + [165])
	goto $label$12 
	
.LABEL $label$14
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$10
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$9 }
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$8 }
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [4784]
	$6 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$5 > (uint_64)(int_64)10) ){ goto $label$20 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$2 = ($2 + [165])
	goto $label$18 
	
.LABEL $label$20
	$7 = (int_64)0
	if ( ((int_64)$5 == (int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$16
	$3 = ($3 + [1])
	$4 = ((int_64)$4 + (int_64)-5)
	$6 = ((int_64)$7 | (int_64)$6)
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)$5 != (int_64)13) ){ goto $label$15 }
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$8 }
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [4800]
	$6 = (int_64)0
	
.LOOP $label$21:
	if ( ((uint_64)$5 > (uint_64)(int_64)8) ){ goto $label$26 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$2 = ($2 + [165])
	goto $label$24 
	
.LABEL $label$26
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$23
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$22
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$21 }
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$8 }
	$5 = (int_64)0
	$7 = (int_64)59
	$3 = [4816]
	$6 = (int_64)0
	
.LOOP $label$27:
	$4 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$28 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$2 = ($2 + [165])
	goto $label$29 
	
.LABEL $label$30
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$28
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$4 | (int_64)$6)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$27 }
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$8 }
	$5 = (int_64)0
	$7 = (int_64)59
	$3 = [4832]
	$6 = (int_64)0
	
.LOOP $label$31:
	$4 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$32 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$2 = ($2 + [165])
	goto $label$33 
	
.LABEL $label$34
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$32
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$4 | (int_64)$6)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$31 }
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$8 }
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [4848]
	$6 = (int_64)0
	
.LOOP $label$35:
	if ( ((uint_64)$5 > (uint_64)(int_64)10) ){ goto $label$40 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$2 = ($2 + [165])
	goto $label$38 
	
.LABEL $label$40
	$7 = (int_64)0
	if ( ((int_64)$5 == (int_64)11) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$39
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$37
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$36
	$3 = ($3 + [1])
	$4 = ((int_64)$4 + (int_64)-5)
	$6 = ((int_64)$7 | (int_64)$6)
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)$5 != (int_64)13) ){ goto $label$35 }
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$8 }
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [1824]
	$6 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$5 > (uint_64)(int_64)10) ){ goto $label$46 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$2 = ($2 + [165])
	goto $label$44 
	
.LABEL $label$46
	$7 = (int_64)0
	if ( ((int_64)$5 == (int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$42
	$3 = ($3 + [1])
	$4 = ((int_64)$4 + (int_64)-5)
	$6 = ((int_64)$7 | (int_64)$6)
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)$5 != (int_64)13) ){ goto $label$41 }
	if ( ((int_64)$6 != (int_64)$1) ){ goto $label$7 }
	
.LABEL $label$8
	return [1]
	
.LABEL $label$7
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [4864]
	$6 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$5 > (uint_64)(int_64)9) ){ goto $label$52 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$2 = ($2 + [165])
	goto $label$50 
	
.LABEL $label$52
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$48
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$47 }
	return ((int_64)$6 == (int_64)$1)
}

void .FUNC $411 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$5 = *($0 + [8])
	if ( ((uint_32)((int_32)($5 - $6) / (int_32)[20]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$2 = ((int_32)($6 - $4) / (int_32)[20])
	$3 = ($2 + $1)
	if ( ((uint_32)$3 >= (uint_32)[214748365]) ){ goto $label$3 }
	$6 = [214748364]
	$5 = ((int_32)($5 - $4) / (int_32)[20])
	if ( ((uint_32)$5 > (uint_32)[107374181]) ){ goto $label$6 }
	$6 = ($5 << [1])
	$6 = ( $3 ? $6 : ($6 <= $3) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$5 = CALL $866(((int_32)$6 * (int_32)[20]))
	goto $label$2 
	
.LABEL $label$5
	$5 = ($0 + [4])
	
.LOOP $label$7:
	*(($0 = ($6 + [8]))) = (int_64)0
	*($6) = (int_64)0
	*($6 + [16]) = [0]
	*($0) = [0]
	$6 = (*($5) + [20])
	*($5) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	$3 = ($5 + ((int_32)$6 * (int_32)[20]))
	$4 = ($5 + ((int_32)$2 * (int_32)[20]))
	$6 = $4
	
.LOOP $label$8:
	*(($5 = ($6 + [8]))) = (int_64)0
	*($6) = (int_64)0
	*($6 + [16]) = [0]
	*($5) = [0]
	$6 = ($6 + [20])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$2 = ($0 + [4])
	$5 = (*($2) - $1)
	$4 = ($4 + ((int_32)((int_32)$5 / (int_32)[-20]) * (int_32)[20]))
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($4, $1, $5)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $4
	*($2) = $6
	*(($0 + [8])) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $867($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $305 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [144])
	*([0] + [4]) = $14
	*($14 + [136]) = $3
	CALL $193(($14 + [88]))
	$3 = (($14 + [88]) + [24])
	CALL eosio_assert(((int_64)*($3) == (int_64)1397703940), [3696])
	$8 = [0]
	$4 = ($14 + [104])
	if ( ((uint_64)((int_64)*($4) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$11 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [1840])
	CALL eosio_assert(((int_64)*($4) > (int_64)0), [1872])
	$5 = *($14 + [96])
	$11 = *($0 + [40])
	$10 = *($14 + [88])
	if ( ((int_64)$10 != (int_64)$11) ){ goto $label$11 }
	$6 = *($0 + [24])
	$9 = *(($0 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$12 }
	$3 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$13:
	if ( ((int_64)*(*($3)) == (int_64)$5) ){ goto $label$12 }
	$9 = $3
	$8 = ($3 + [-24])
	$3 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$10 }
	$9 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$0), [32])
	goto $label$9 
	
.LABEL $label$11
	if ( ((int_64)$5 != (int_64)$11) ){ goto $label$6 }
	$6 = *($0 + [24])
	$9 = *(($0 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$14 }
	$3 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$15:
	if ( ((int_64)*(*($3)) == (int_64)$10) ){ goto $label$14 }
	$9 = $3
	$8 = ($3 + [-24])
	$3 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$15 }
	
.LABEL $label$14
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$8 }
	$3 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [32])
	goto $label$7 
	
.LABEL $label$10
	$9 = [0]
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6030912142679474176, $5)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$9 }
	$9 = CALL $13($0, $3)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$0), [32])
	
.LABEL $label$9
	CALL _ZN13admin_control15check_blacklistEN5eosio4nameE(*($0 + [52]), $5)
	$11 = (int_64)0
	$10 = (int_64)59
	$3 = [3664]
	$12 = (int_64)0
	
.LOOP $label$16:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$17 }
	$8 = *($3)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$8 = ($8 + [165])
	goto $label$18 
	
.LABEL $label$19
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$17
	$3 = ($3 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$16 }
	if ( ((int_64)$5 == (int_64)$12) ){ goto $label$6 }
	$11 = (int_64)0
	$10 = (int_64)59
	$3 = [3680]
	$12 = (int_64)0
	
.LOOP $label$20:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$21 }
	$8 = *($3)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$8 = ($8 + [165])
	goto $label$22 
	
.LABEL $label$23
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$21
	$3 = ($3 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$20 }
	if ( $9 ){ goto $label$6 }
	if ( ((int_64)$5 == (int_64)$12) ){ goto $label$6 }
	CALL $306(*(($0 + [52])), $4, $5, ($14 + [120]))
	goto $label$6 
	
.LABEL $label$8
	$3 = [0]
	$8 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6030912142679474176, $10)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$7 }
	$3 = CALL $13($0, $8)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [32])
	
.LABEL $label$7
	CALL _ZN13admin_control15check_blacklistEN5eosio4nameE(*($0 + [52]), $10)
	CALL $212(*($0 + [52]), $10)
	if ( ($3 == 0) ){ goto $label$30 }
	*(($14 + [40])) = (int_64)0
	*((($14 + [24]) + [24])) = (int_64)0
	*($14 + [24]) = (int_64)0
	*($14 + [32]) = (int_64)0
	*($14 + [64]) = (int_64)0
	*($14 + [72]) = (int_64)0
	*(($3 = ($14 + [80]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$11 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$8 = [0]
	
.LABEL $label$31
	CALL eosio_assert($8, [1120])
	$9 = CALL $876($3, [58], [0])
	$7 = ($9 + [1])
	$3 = ($14 + [120])
	$0 = CALL $876($3, [58], $7)
	*($14 + [24]) = $10
	CALL $884(($14 + [8]), $3, [0], $9, $3)
	$8 = ($14 + [32])
	if ( (*($14 + [32]) & [1]) ){ goto $label$29 }
	*($8) = [0]
	goto $label$28 
	
.LABEL $label$30
	if ( (CALL $307($0, *($14 + [88])) == 0) ){ goto $label$27 }
	CALL $308(*(($0 + [52])), $4, [8])
	goto $label$6 
	
.LABEL $label$29
	*(*(($14 + [40]))) = [0]
	*(($14 + [36])) = [0]
	
.LABEL $label$28
	CALL $871($8, [0])
	*(($8 + [8])) = *((($14 + [8]) + [8]))
	*($8) = *($14 + [8])
	if ( ((int_32)$0 == (int_32)[-1]) ){ goto $label$38 }
	CALL $884(($14 + [8]), $3, $7, [-1], $3)
	$3 = ($14 + [44])
	if ( (*($14 + [44]) & [1]) ){ goto $label$37 }
	*($3) = [0]
	goto $label$36 
	
.LABEL $label$38
	CALL $884(($14 + [8]), $3, $7, ([-2] - $9), $3)
	$8 = ($14 + [44])
	if ( (*($14 + [44]) & [1]) ){ goto $label$26 }
	*($8) = [0]
	goto $label$25 
	
.LABEL $label$37
	*(*(($14 + [52]))) = [0]
	*(($14 + [48])) = [0]
	
.LABEL $label$36
	CALL $871($3, [0])
	*(($3 + [8])) = *((($14 + [8]) + [8]))
	*($3) = *($14 + [8])
	goto $label$24 
	
.LABEL $label$27
	CALL eosio_assert([0], [1936])
	goto $label$6 
	
.LABEL $label$26
	*(*(($14 + [52]))) = [0]
	*(($14 + [48])) = [0]
	
.LABEL $label$25
	CALL $871($8, [0])
	$0 = (($14 + [8]) + [8])
	*(($8 + [8])) = *($0)
	*($8) = *($14 + [8])
	$9 = CALL $876($3, [58], $8)
	$8 = (CALL $876($3, [58], [0]) + [1])
	CALL $884(($14 + [8]), $3, $8, ($9 - $8), $3)
	$8 = (($14 + [8]) | [1])
	*($14 + [56]) = CALL atoi(( *($14 + [16]) ? $8 : (*($14 + [8]) & [1]) ))
	if ( ((*($14 + [8]) & [1]) == 0) ){ goto $label$39 }
	CALL $867(*($0))
	
.LABEL $label$39
	CALL $884(($14 + [8]), $3, ($9 + [1]), [-1], $3)
	*(($14 + [64])) = CALL atoll(( *($14 + [16]) ? $8 : (*($14 + [8]) & [1]) ))
	if ( ((*($14 + [8]) & [1]) == 0) ){ goto $label$24 }
	CALL $867(*(($14 + [16])))
	
.LABEL $label$24
	*(($14 + [80])) = *(($4 + [8]))
	*($14 + [72]) = *($4)
	CALL $309(($14 + [136]), ($14 + [24]))
	if ( ((*(($14 + [44])) & [1]) == 0) ){ goto $label$40 }
	CALL $867(*(($14 + [52])))
	
.LABEL $label$40
	if ( ((*((($14 + [24]) + [8])) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*(($14 + [40])))
	
.LABEL $label$6
	if ( ((*($14 + [120]) & [1]) == 0) ){ goto $label$41 }
	CALL $867(*(($14 + [128])))
	
.LABEL $label$41
	*([0] + [4]) = ($14 + [144])
}

void .FUNC $304 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $309 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [96])
	*([0] + [4]) = $11
	$2 = ($1 + [8])
	$0 = *($0)
	$6 = *($1 + [8])
	$7 = ($1 + [12])
	if ( ( *($7) ? uint_32($6 >> [1]) : ($6 & [1]) ) ){ goto $label$1 }
	CALL eosio_assert([0], [2032])
	
.LABEL $label$1
	$7 = *($2)
	$6 = *($0 + [1632])
	$3 = CALL strlen($6)
	if ( ((int_32)$3 != (int_32)( *($7) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$30 }
	if ( (CALL $877($2, [0], [-1], $6, $3) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$3 = ($1 + [8])
	$7 = *($3)
	$6 = ($1 + [12])
	$4 = *($0 + [1636])
	$5 = CALL strlen($4)
	if ( ((int_32)$5 != (int_32)( *($6) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$31 }
	if ( (CALL $877($2, [0], [-1], $4, $5) == 0) ){ goto $label$28 }
	
.LABEL $label$31
	$7 = *($3)
	$4 = *($0 + [1640])
	$5 = CALL strlen($4)
	if ( ((int_32)$5 != (int_32)( *($6) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$32 }
	if ( (CALL $877($2, [0], [-1], $4, $5) == 0) ){ goto $label$27 }
	
.LABEL $label$32
	$3 = ($1 + [8])
	$7 = *($3)
	$6 = ($1 + [12])
	$4 = *($0 + [1644])
	$5 = CALL strlen($4)
	if ( ((int_32)$5 != (int_32)( *($6) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$33 }
	if ( (CALL $877($2, [0], [-1], $4, $5) == 0) ){ goto $label$26 }
	
.LABEL $label$33
	$7 = *($3)
	$4 = *($0 + [1648])
	$5 = CALL strlen($4)
	if ( ((int_32)$5 != (int_32)( *($6) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$34 }
	if ( (CALL $877($2, [0], [-1], $4, $5) == 0) ){ goto $label$25 }
	
.LABEL $label$34
	$3 = ($1 + [8])
	$7 = *($3)
	$6 = ($1 + [12])
	$4 = *($0 + [1652])
	$5 = CALL strlen($4)
	if ( ((int_32)$5 != (int_32)( *($6) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$35 }
	if ( (CALL $877($2, [0], [-1], $4, $5) == 0) ){ goto $label$24 }
	
.LABEL $label$35
	$7 = *($3)
	$4 = *($0 + [1680])
	$5 = CALL strlen($4)
	if ( ((int_32)$5 != (int_32)( *($6) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$36 }
	if ( (CALL $877($2, [0], [-1], $4, $5) == 0) ){ goto $label$23 }
	
.LABEL $label$36
	$3 = ($1 + [8])
	$7 = *($3)
	$6 = ($1 + [12])
	$4 = *($0 + [1664])
	$5 = CALL strlen($4)
	if ( ((int_32)$5 != (int_32)( *($6) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$37 }
	if ( (CALL $877($2, [0], [-1], $4, $5) == 0) ){ goto $label$20 }
	
.LABEL $label$37
	$7 = *($3)
	$4 = *($0 + [1672])
	$5 = CALL strlen($4)
	if ( ((int_32)$5 != (int_32)( *($6) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$38 }
	if ( CALL $877($2, [0], [-1], $4, $5) ){ goto $label$38 }
	$2 = *($1 + [20])
	$7 = *($0 + [1676])
	$6 = CALL strlen($7)
	if ( ((int_32)$6 != (int_32)( *(($1 + [24])) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$38 }
	if ( (CALL $877(($1 + [20]), [0], [-1], $7, $6) == 0) ){ goto $label$7 }
	
.LABEL $label$38
	CALL eosio_assert([0], [2032])
	goto $label$2 
	
.LABEL $label$29
	$2 = ($1 + [48])
	CALL $310(($0 + [280]), *($1), (CALL $913(( *(($1 + [28])) ? ($1 + [21]) : (*($1 + [20]) & [1]) )) & [255]), $2)
	$7 = ($0 + [600])
	CALL $308($7, $2, [0])
	CALL $311($7, *($1), $2, [0])
	$8 = *($1)
	$9 = *($1 + [48])
	*(($11 + [88])) = [0]
	*($11 + [72]) = (int_64)-1
	$10 = *(($0 + [48]))
	*($11 + [56]) = $10
	*($11 + [64]) = $10
	*($11 + [80]) = (int_64)0
	CALL $313(($0 + [8]), $8, ((int_64)$9 * (int_64)*(CALL $312(($11 + [56]), CALL $fimport$25($10, $10, (int_64)-4728327042957836288, (int_64)0)))))
	$2 = *($11 + [80])
	if ( ($2 == 0) ){ goto $label$2 }
	$1 = *((($11 + [56]) + [28]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$22 }
	
.LOOP $label$39:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$40 }
	CALL $867($0)
	
.LABEL $label$40
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$39 }
	$1 = *(($11 + [80]))
	goto $label$21 
	
.LABEL $label$28
	$2 = ($1 + [48])
	$7 = ($0 + [8])
	CALL $314($7, *($1), (CALL $913(( *(($1 + [28])) ? ($1 + [21]) : (*($1 + [20]) & [1]) )) & [255]), $2)
	$6 = ($0 + [600])
	CALL $308($6, $2, [3])
	CALL $311($6, *($1), $2, [3])
	$8 = *($1)
	$9 = *($1 + [48])
	*(($11 + [88])) = [0]
	*($11 + [72]) = (int_64)-1
	$10 = *(($0 + [48]))
	*($11 + [56]) = $10
	*($11 + [64]) = $10
	*($11 + [80]) = (int_64)0
	CALL $313($7, $8, ((int_64)$9 * (int_64)*(CALL $312(($11 + [56]), CALL $fimport$25($10, $10, (int_64)-4728327042957836288, (int_64)0)))))
	$2 = *($11 + [80])
	if ( ($2 == 0) ){ goto $label$2 }
	$1 = *((($11 + [56]) + [28]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$19 }
	
.LOOP $label$41:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$42 }
	CALL $867($0)
	
.LABEL $label$42
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$41 }
	$1 = *(($11 + [80]))
	goto $label$18 
	
.LABEL $label$27
	CALL $315(($11 + [40]), ($0 + [488]), *($1), $1)
	$2 = ($0 + [600])
	CALL $308($2, ($11 + [40]), [2])
	CALL $316($2, ($1 + [48]))
	$8 = *($1)
	$9 = *($11 + [40])
	*(($11 + [88])) = [0]
	*($11 + [72]) = (int_64)-1
	$10 = *(($0 + [48]))
	*($11 + [56]) = $10
	*($11 + [64]) = $10
	*($11 + [80]) = (int_64)0
	CALL $313(($0 + [8]), $8, ((int_64)$9 * (int_64)*(CALL $312(($11 + [56]), CALL $fimport$25($10, $10, (int_64)-4728327042957836288, (int_64)0)))))
	$2 = *($11 + [80])
	if ( ($2 == 0) ){ goto $label$2 }
	$7 = ($11 + [84])
	$1 = *($7)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$17 }
	
.LOOP $label$43:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$44 }
	CALL $867($0)
	
.LABEL $label$44
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$43 }
	$1 = *(($11 + [80]))
	goto $label$16 
	
.LABEL $label$26
	CALL $317(($11 + [40]), ($0 + [488]), *($1), $1)
	$2 = ($0 + [600])
	CALL $308($2, ($11 + [40]), [1])
	CALL $316($2, ($1 + [48]))
	$8 = *($1)
	$9 = *($11 + [40])
	*(($11 + [88])) = [0]
	*($11 + [72]) = (int_64)-1
	$10 = *(($0 + [48]))
	*($11 + [56]) = $10
	*($11 + [64]) = $10
	*($11 + [80]) = (int_64)0
	CALL $313(($0 + [8]), $8, ((int_64)$9 * (int_64)*(CALL $312(($11 + [56]), CALL $fimport$25($10, $10, (int_64)-4728327042957836288, (int_64)0)))))
	$2 = *($11 + [80])
	if ( ($2 == 0) ){ goto $label$2 }
	$7 = ($11 + [84])
	$1 = *($7)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$15 }
	
.LOOP $label$45:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$46 }
	CALL $867($0)
	
.LABEL $label$46
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$45 }
	$1 = *(($11 + [80]))
	goto $label$14 
	
.LABEL $label$25
	CALL $318(($11 + [40]), ($0 + [488]), *($1), $1)
	$2 = ($0 + [600])
	CALL $308($2, ($11 + [40]), [1])
	CALL $316($2, ($1 + [48]))
	$8 = *($1)
	$9 = *($11 + [40])
	*(($11 + [88])) = [0]
	*($11 + [72]) = (int_64)-1
	$10 = *(($0 + [48]))
	*($11 + [56]) = $10
	*($11 + [64]) = $10
	*($11 + [80]) = (int_64)0
	CALL $313(($0 + [8]), $8, ((int_64)$9 * (int_64)*(CALL $312(($11 + [56]), CALL $fimport$25($10, $10, (int_64)-4728327042957836288, (int_64)0)))))
	$2 = *($11 + [80])
	if ( ($2 == 0) ){ goto $label$2 }
	$7 = ($11 + [84])
	$1 = *($7)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$47:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$48 }
	CALL $867($0)
	
.LABEL $label$48
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$47 }
	$1 = *(($11 + [80]))
	goto $label$12 
	
.LABEL $label$24
	$2 = ($1 + [20])
	$7 = *($1 + [20])
	$6 = ($1 + [24])
	$3 = *($0 + [1656])
	$4 = CALL strlen($3)
	if ( ((int_32)$4 != (int_32)( *($6) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$49 }
	if ( (CALL $877($2, [0], [-1], $3, $4) == 0) ){ goto $label$11 }
	
.LABEL $label$49
	$7 = *($2)
	$3 = *($0 + [1660])
	$4 = CALL strlen($3)
	if ( ((int_32)$4 != (int_32)( *($6) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$50 }
	if ( (CALL $877($2, [0], [-1], $3, $4) == 0) ){ goto $label$8 }
	
.LABEL $label$50
	CALL eosio_assert([0], [3728])
	goto $label$2 
	
.LABEL $label$23
	*($11 + [40]) = (int_64)0
	*($11 + [36]) = [0]
	$2 = ($0 + [1304])
	CALL $195($2, ($1 + [20]), ($11 + [40]), ($11 + [36]))
	*(($11 + [28])) = *(($1 + [60]))
	*(($7 = (($11 + [16]) + [8]))) = *(($1 + [56]))
	*($11 + [20]) = *(($1 + [52]))
	$6 = *($11 + [36])
	$10 = *($11 + [40])
	*($11 + [16]) = *($1 + [48])
	$8 = *($1)
	*(($11 + [8])) = *($7)
	*($11) = *($11 + [16])
	CALL $196($2, $8, $10, $6, $11)
	$7 = ($1 + [48])
	$2 = ($0 + [600])
	CALL $308($2, $7, [6])
	CALL $311($2, *($1), $7, [6])
	$8 = *($1)
	$9 = *($1 + [48])
	*(($11 + [88])) = [0]
	*($11 + [72]) = (int_64)-1
	*($11 + [80]) = (int_64)0
	$10 = *(($0 + [48]))
	*($11 + [56]) = $10
	*($11 + [64]) = $10
	CALL $313(($0 + [8]), $8, ((int_64)$9 * (int_64)*(CALL $312(($11 + [56]), CALL $fimport$25($10, $10, (int_64)-4728327042957836288, (int_64)0)))))
	$2 = *($11 + [80])
	if ( ($2 == 0) ){ goto $label$2 }
	$7 = ($11 + [84])
	$1 = *($7)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$51:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$52 }
	CALL $867($0)
	
.LABEL $label$52
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$51 }
	$1 = *(($11 + [80]))
	goto $label$9 
	
.LABEL $label$22
	$1 = $2
	
.LABEL $label$21
	*(($11 + [84])) = $2
	CALL $867($1)
	goto $label$2 
	
.LABEL $label$20
	$2 = ($1 + [48])
	CALL $224(($0 + [1360]), *($1), (CALL $913(( *(($1 + [28])) ? ($1 + [21]) : (*($1 + [20]) & [1]) )) & [255]), $2)
	$0 = ($0 + [600])
	CALL $308($0, $2, [6])
	CALL $311($0, *($1), $2, [6])
	goto $label$2 
	
.LABEL $label$19
	$1 = $2
	
.LABEL $label$18
	*(($11 + [84])) = $2
	CALL $867($1)
	goto $label$2 
	
.LABEL $label$17
	$1 = $2
	
.LABEL $label$16
	*($7) = $2
	CALL $867($1)
	goto $label$2 
	
.LABEL $label$15
	$1 = $2
	
.LABEL $label$14
	*($7) = $2
	CALL $867($1)
	goto $label$2 
	
.LABEL $label$13
	$1 = $2
	
.LABEL $label$12
	*($7) = $2
	CALL $867($1)
	goto $label$2 
	
.LABEL $label$11
	$2 = ($1 + [48])
	$7 = ($0 + [8])
	CALL $319($7, *($1), $2)
	$6 = ($0 + [600])
	CALL $308($6, $2, [5])
	CALL $311($6, *($1), $2, [5])
	$8 = *($1)
	$9 = *($1 + [48])
	*(($11 + [88])) = [0]
	*($11 + [72]) = (int_64)-1
	$10 = *(($0 + [48]))
	*($11 + [56]) = $10
	*($11 + [64]) = $10
	*($11 + [80]) = (int_64)0
	CALL $313($7, $8, ((int_64)$9 * (int_64)*(CALL $312(($11 + [56]), CALL $fimport$25($10, $10, (int_64)-4728327042957836288, (int_64)0)))))
	$2 = *($11 + [80])
	if ( ($2 == 0) ){ goto $label$2 }
	$7 = ($11 + [84])
	$1 = *($7)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$53:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$54 }
	CALL $867($0)
	
.LABEL $label$54
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$53 }
	$1 = *(($11 + [80]))
	goto $label$5 
	
.LABEL $label$10
	$1 = $2
	
.LABEL $label$9
	*($7) = $2
	CALL $867($1)
	goto $label$2 
	
.LABEL $label$8
	$2 = ($1 + [48])
	$7 = ($0 + [8])
	CALL $320($7, *($1), $2)
	$6 = ($0 + [600])
	CALL $308($6, $2, [4])
	CALL $311($6, *($1), $2, [4])
	$8 = *($1)
	$9 = *($1 + [48])
	*(($11 + [88])) = [0]
	*($11 + [72]) = (int_64)-1
	$10 = *(($0 + [48]))
	*($11 + [56]) = $10
	*($11 + [64]) = $10
	*($11 + [80]) = (int_64)0
	CALL $313($7, $8, ((int_64)$9 * (int_64)*(CALL $312(($11 + [56]), CALL $fimport$25($10, $10, (int_64)-4728327042957836288, (int_64)0)))))
	$2 = *($11 + [80])
	if ( ($2 == 0) ){ goto $label$2 }
	$7 = ($11 + [84])
	$1 = *($7)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$55:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$56 }
	CALL $867($0)
	
.LABEL $label$56
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$55 }
	$1 = *(($11 + [80]))
	goto $label$3 
	
.LABEL $label$7
	CALL $308(($0 + [600]), ($1 + [48]), [7])
	goto $label$2 
	
.LABEL $label$6
	$1 = $2
	
.LABEL $label$5
	*($7) = $2
	CALL $867($1)
	goto $label$2 
	
.LABEL $label$4
	$1 = $2
	
.LABEL $label$3
	*($7) = $2
	CALL $867($1)
	
.LABEL $label$2
	*([0] + [4]) = ($11 + [96])
}

int_32 .FUNC $410 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [592])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = ((int_32)($4 - $7) / (int_32)[20])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $411($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ((int_32)$6 * (int_32)[20]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($8 + [40])
	
.LOOP $label$6:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [6])
	*((($8 + [16]) + [12])) = ($7 + [7])
	*((($8 + [16]) + [16])) = ($7 + [8])
	*((($8 + [16]) + [20])) = ($7 + [12])
	*($6) = ($7 + [16])
	*($8 + [20]) = ($7 + [4])
	CALL $412(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [20])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [48])
	return $0
}

void .FUNC $435 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [48]))), [3504])
	$5 = ((int_64)*($1 + [40]) + (int_64)*($3))
	*($1 + [40]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [40]) < (int_64)4611686018427387904), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($6 + [72]) = ($6 + [56])
	*($6 + [68]) = $6
	*($6 + [64]) = $6
	CALL $424(($6 + [64]), $1)
	CALL db_update_i64(*($1 + [60]), $2, $6, [56])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [80])
}

void .FUNC $434 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	$4 = CALL $866([72])
	$6 = CALL $425($4)
	*($4 + [56]) = $1
	*($4) = *(*($3))
	$3 = *($3 + [4])
	*(($4 + [52])) = *(($3 + [12]))
	*(($4 + [48])) = *(($3 + [8]))
	*(($4 + [44])) = *(($3 + [4]))
	*($4 + [40]) = *($3)
	*($8 + [88]) = (($8 + [16]) + [56])
	*($8 + [84]) = ($8 + [16])
	*($8 + [80]) = ($8 + [16])
	CALL $424(($8 + [80]), $6)
	$5 = *($4)
	*($4 + [60]) = CALL db_store_i64(*($1 + [8]), (int_64)-4992616317593845760, $2, $5, ($8 + [16]), [56])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [80]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$6 = *($4 + [60])
	*($8 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [80]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $426(($1 + [24]), ($8 + [80]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [80])
	*($8 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $867($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [96])
}

void .FUNC $437 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*(($4 = CALL $866([72])) + [56]) = $1
	*($4) = (int_64)0
	*($4) = *(*($3))
	*($4 + [22]) = *(*($3 + [4]))
	*($8 + [88]) = (($8 + [16]) + [52])
	*($8 + [84]) = ($8 + [16])
	*($8 + [80]) = ($8 + [16])
	CALL $440(($8 + [80]), $4)
	$5 = *($4)
	*($4 + [60]) = CALL db_store_i64(*($1 + [8]), (int_64)-6030912128183959552, $2, $5, ($8 + [16]), [52])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [80]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$6 = *($4 + [60])
	*($8 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [80]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $442(($1 + [24]), ($8 + [80]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [80])
	*($8 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $867($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [96])
}

void .FUNC $436 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*($6 + [72]) = $1
	*($6 + [70]) = $2
	*(($6 + [56])) = [0]
	*($6 + [40]) = (int_64)-1
	*($6 + [48]) = (int_64)0
	$4 = *($0)
	*($6 + [24]) = $4
	*($6 + [32]) = $4
	$2 = CALL db_find_i64($4, $4, (int_64)-6030912128183959552, $1)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$3 }
	$2 = CALL $438(($6 + [24]), $2)
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)($6 + [24])), [32])
	$4 = *($0)
	*($6 + [16]) = ($6 + [70])
	CALL eosio_assert([1], [352])
	CALL $439(($6 + [24]), $2, $4, ($6 + [16]))
	$3 = *($6 + [48])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0)
	*($6 + [20]) = ($6 + [70])
	*($6 + [16]) = ($6 + [72])
	CALL $437(($6 + [8]), ($6 + [24]), $4, ($6 + [16]))
	$3 = *($6 + [48])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($6 + [52])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $867($2)
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [48]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $3
	
.LABEL $label$4
	*($5) = $3
	CALL $867($0)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [80])
}

int_32 .FUNC $431 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $866([40])
	$6 = CALL $443($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $444(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $430 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	$11 = $12
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$9 = *($1 + [8])
	$5 = *(($1 + [12]))
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$1 }
	$6 = int_32(($5 - $9) >> [4])
	$8 = [0]
	$7 = (*(*($3)) & [255])
	
.LOOP $label$3:
	if ( ((int_32)*($9) == (int_32)$7) ){ goto $label$2 }
	$9 = ($9 + [16])
	$8 = ($8 + [1])
	if ( ($8 <= $6) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*(*($3 + [4])) = [1]
	
.LABEL $label$1
	$7 = ($1 + [8])
	$9 = *($3 + [8])
	if ( ((int_32)$5 == (int_32)*(($1 + [16]))) ){ goto $label$5 }
	*($5) = *($9)
	*(($5 + [8])) = *(($9 + [8]))
	$8 = (*($9) + [16])
	*(($9 = ($1 + [12]))) = $8
	goto $label$4 
	
.LABEL $label$5
	CALL $445($7, $9)
	$8 = *(($1 + [12]))
	
.LABEL $label$4
	$9 = ($1 + [8])
	*(*($3 + [12])) = int_32(($8 - *($9)) >> [4])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$6 = *($9)
	$8 = *(($1 + [12]))
	$3 = ($8 - $6)
	$10 = (CASTING uint_64)(uint_32 int_32($3 >> [4]))
	$9 = [22]
	
.LOOP $label$6:
	$9 = ($9 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$8 }
	$9 = (((int_32)uint_32(($3 + [-16]) >> [4]) * (int_32)[14]) + $9)
	goto $label$7 
	
.LABEL $label$8
	$9 = ($9 + [-14])
	
.LABEL $label$7
	if ( ($9 <= [513]) ){ goto $label$10 }
	$8 = CALL malloc($9)
	goto $label$9 
	
.LABEL $label$10
	$8 = ($12 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$9
	*($11) = $8
	*($11 + [8]) = ($8 + $9)
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [576])
	CALL memcpy($8, $1, [8])
	*($11 + [4]) = ($8 + [8])
	CALL $446($11, $7)
	CALL db_update_i64(*($1 + [24]), $2, $8, $9)
	if ( ($9 <= [513]) ){ goto $label$11 }
	CALL free($8)
	
.LABEL $label$11
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $433 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [208])
	*([0] + [4]) = $12
	$2 = *(($0 + [152]))
	$7 = *(($0 + [156]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [128])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$5 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$4), [32])
	if ( $6 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-6030912128150405120, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $96($4, $6)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$4), [32])
	
.LABEL $label$4
	if ( ((int_32)*($6 + [12]) > (int_32)[-1]) ){ goto $label$3 }
	$5 = *($6 + [16])
	*($12 + [184]) = $5
	$2 = *(($0 + [112]))
	$7 = *(($0 + [116]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$6 = ($7 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$7:
	if ( ((int_64)*(*($6)) == (int_64)$5) ){ goto $label$6 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$4 = ($0 + [88])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$9 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$4), [32])
	if ( $6 ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$6 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-6030912142679474176, $5)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $13($4, $6)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$4), [32])
	
.LABEL $label$8
	if ( (*($6 + [12]) == 0) ){ goto $label$3 }
	*(($12 + [176])) = [0]
	*($12 + [160]) = (int_64)-1
	*($12 + [168]) = (int_64)0
	$10 = *($0)
	*($12 + [144]) = $10
	*($12 + [152]) = $10
	$6 = CALL db_find_i64($10, $10, (int_64)7687433457688903680, $5)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	$6 = CALL $225(($12 + [144]), $6)
	CALL eosio_assert(((int_32)*($6 + [20]) == (int_32)($12 + [144])), [32])
	if ( (int_32((*(($6 + [12])) - *($6 + [8])) >> [4]) <= [3]) ){ goto $label$12 }
	if ( CALL _ZN13admin_control12is_blacklistEN5eosio4nameE($0, $5) ){ goto $label$12 }
	*($12 + [136]) = (int_64)1397703940
	*($12 + [128]) = (int_64)1000
	CALL eosio_assert([1], [1248])
	$5 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$4 = [0]
	
.LABEL $label$13
	CALL eosio_assert($4, [1120])
	$11 = *($0)
	$5 = (int_64)0
	$8 = (int_64)59
	$6 = [1152]
	$9 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$5 > (uint_64)(int_64)5) ){ goto $label$23 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$4 = ($4 + [165])
	goto $label$21 
	
.LABEL $label$23
	$10 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$19
	$6 = ($6 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$18 }
	*($12 + [80]) = $9
	*($12 + [72]) = $11
	$5 = (int_64)0
	$8 = (int_64)59
	$6 = [1824]
	$9 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$5 > (uint_64)(int_64)10) ){ goto $label$29 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$4 = ($4 + [165])
	goto $label$27 
	
.LABEL $label$29
	$10 = (int_64)0
	if ( ((int_64)$5 == (int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$25
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)$5 != (int_64)13) ){ goto $label$24 }
	$5 = (int_64)0
	$8 = (int_64)59
	$6 = [1184]
	$11 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$5 > (uint_64)(int_64)7) ){ goto $label$35 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$4 = ($4 + [165])
	goto $label$33 
	
.LABEL $label$35
	$10 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$31
	$6 = ($6 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$30 }
	*(($12 + [16])) = [0]
	*($12 + [8]) = (int_64)0
	$6 = CALL strlen([4496])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$38 }
	*($12 + [8]) = ($6 << [1])
	$4 = (($12 + [8]) | [1])
	if ( $6 ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	$7 = (($6 + [16]) & [-16])
	$4 = CALL $866($7)
	*($12 + [8]) = ($7 | [1])
	*($12 + [16]) = $4
	*($12 + [12]) = $6
	
.LABEL $label$37
	CALL memcpy($4, [4496], $6)
	
.LABEL $label$36
	*(($4 + $6)) = [0]
	*(($12 + [44])) = *($12 + [132])
	*($12 + [24]) = *($0)
	*($12 + [32]) = *($12 + [184])
	*(($12 + [52])) = *(($12 + [140]))
	*(($12 + [48])) = *((($12 + [128]) + [8]))
	*($12 + [40]) = *($12 + [128])
	$6 = (($12 + [8]) + [8])
	*(($12 + [64])) = *($6)
	*($12 + [56]) = *($12 + [8])
	*($12 + [8]) = [0]
	*($12 + [12]) = [0]
	*($6) = [0]
	$6 = CALL $66(($12 + [88]), ($12 + [72]), $9, $11, ($12 + [24]))
	CALL $65(($12 + [192]), $6)
	$4 = *($12 + [192])
	CALL send_inline($4, (*($12 + [196]) - $4))
	$4 = *($12 + [192])
	if ( ($4 == 0) ){ goto $label$39 }
	*($12 + [196]) = $4
	CALL $867($4)
	
.LABEL $label$39
	$4 = *($6 + [28])
	if ( ($4 == 0) ){ goto $label$40 }
	*(($6 + [32])) = $4
	CALL $867($4)
	
.LABEL $label$40
	$4 = *($6 + [16])
	if ( ($4 == 0) ){ goto $label$41 }
	*(($6 + [20])) = $4
	CALL $867($4)
	
.LABEL $label$41
	if ( ((*(($12 + [56])) & [1]) == 0) ){ goto $label$42 }
	CALL $867(*(($12 + [64])))
	
.LABEL $label$42
	if ( ((*($12 + [8]) & [1]) == 0) ){ goto $label$43 }
	CALL $867(*(($12 + [16])))
	
.LABEL $label$43
	$5 = *($12 + [184])
	$2 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$44 }
	$6 = ($7 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$45:
	if ( ((int_64)*(*($6)) == (int_64)$5) ){ goto $label$44 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$45 }
	
.LABEL $label$44
	$6 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$50 }
	$4 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [56]) == (int_32)$6), [32])
	$5 = *($0)
	if ( $4 ){ goto $label$49 }
	goto $label$47 
	
.LABEL $label$50
	$4 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-4992616317593845760, $5)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$48 }
	$4 = CALL $420($6, $4)
	CALL eosio_assert(((int_32)*($4 + [56]) == (int_32)$6), [32])
	$5 = *($0)
	
.LABEL $label$49
	*($12 + [24]) = ($12 + [128])
	CALL eosio_assert([1], [352])
	CALL $435($6, $4, $5, ($12 + [24]))
	goto $label$46 
	
.LABEL $label$48
	$5 = *($0)
	
.LABEL $label$47
	*($12 + [28]) = ($12 + [128])
	*($12 + [24]) = ($12 + [184])
	CALL $434(($12 + [88]), $6, $5, ($12 + [24]))
	
.LABEL $label$46
	$5 = (int_64)0
	$10 = (int_64)59
	$6 = [176]
	$11 = *($12 + [184])
	$9 = (int_64)0
	
.LOOP $label$51:
	$8 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$52 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$4 = ($4 + [165])
	goto $label$53 
	
.LABEL $label$54
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$52
	$6 = ($6 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$51 }
	if ( ((int_64)$9 != (int_64)$11) ){ goto $label$55 }
	CALL $436($0, $1, [1])
	$3 = *($12 + [168])
	if ( $3 ){ goto $label$11 }
	goto $label$3 
	
.LABEL $label$55
	CALL $436($0, $11, [1])
	
.LABEL $label$12
	$3 = *($12 + [168])
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$11
	$0 = ($12 + [172])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$57 }
	
.LOOP $label$58:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$59 }
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$60 }
	*(($4 + [12])) = $7
	CALL $867($7)
	
.LABEL $label$60
	CALL $867($4)
	
.LABEL $label$59
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$58 }
	$6 = *(($12 + [168]))
	goto $label$56 
	
.LABEL $label$57
	$6 = $3
	
.LABEL $label$56
	*($0) = $3
	CALL $867($6)
	goto $label$3 
	
.LABEL $label$10
	CALL $868(($12 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($12 + [208])
	(unreachable)
}

void .FUNC $432 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [12]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [21])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $276(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $439 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [22]) = (*($1 + [22]) + *(*($3)))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [72]) = ($5 + [52])
	*($5 + [68]) = $5
	*($5 + [64]) = $5
	CALL $440(($5 + [64]), $1)
	CALL db_update_i64(*($1 + [60]), $2, $5, [52])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
}

int_32 .FUNC $438 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([72])) + [56]) = $0
	*($6) = (int_64)0
	CALL $441(($8 + [32]), $6)
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $442(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $282 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $283($0, ($1 + [52]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [9]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [28]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [29]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [1])
	return *($0 + [4]) = (*($0 + [4]) + [1])
}

int_32 .FUNC $283 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [592])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$6 = *($1)
	$2 = *($1 + [4])
	$7 = ((int_32)($2 - $6) / (int_32)[20])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$7) ){ goto $label$3 }
	CALL $284($1, ($4 - $7))
	$2 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$7) ){ goto $label$2 }
	$4 = ((int_32)$4 * (int_32)[20])
	$3 = ($6 + $4)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$4 }
	$7 = (([0] - $6) - $4)
	$4 = ($2 + [-12])
	
.LOOP $label$5:
	if ( ((*($4) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*(($4 + [8])))
	
.LABEL $label$6
	$4 = ($4 + [-20])
	if ( ((int_32)($4 + $7) != (int_32)[-12]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $3
	$2 = $3
	
.LABEL $label$2
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$7 }
	
.LOOP $label$8:
	$4 = ($0 + [4])
	$6 = ($0 + [8])
	CALL eosio_assert(((int_32)*($6) != (int_32)*($4)), [160])
	CALL memcpy($7, *($4), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[3]), [160])
	CALL memcpy(($7 + [4]), *($4), [4])
	*($4) = (*($4) + [4])
	CALL $209($0, ($7 + [8]))
	$7 = ($7 + [20])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$8 }
	
.LABEL $label$7
	return $0
}

void .FUNC $129 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	*([0] + [4]) = $12
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [5472]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($9)
	$4 = *(($0 + [32]))
	$11 = *(($0 + [36]))
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$5 }
	$6 = ($11 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$6:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$5 }
	$11 = $6
	$3 = ($6 + [-24])
	$6 = $3
	if ( ((int_32)($3 + $5) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$3 = ($0 + [8])
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$8 }
	$6 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$3), [32])
	goto $label$7 
	
.LABEL $label$8
	$6 = [0]
	$11 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $13($3, $11)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$3), [32])
	
.LABEL $label$7
	$11 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($11, [192])
	CALL eosio_assert(((uint_32)*($6 + [16]) >= (uint_32)$2), [8128])
	*($12 + [12]) = $2
	CALL eosio_assert(((uint_32)*($6 + [16]) >= (uint_32)$2), [5040])
	$8 = *(($0 + [48]))
	*($12 + [8]) = ($12 + [12])
	CALL eosio_assert($11, [352])
	CALL $493($3, $6, $8, ($12 + [8]))
	*([0] + [4]) = ($12 + [16])
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	*(($3 = $4) + [44]) = $0
	*($3 + [32]) = *($1)
	*($3 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($4 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [28])) = [0]
	*($3 + [16]) = [0]
	*($3 + [8]) = (int_64)0
	*($3 + [20 align=4]) = (int_64)0
	*($3 + [48]) = $1
	$4 = ($1 + $0)
	*($3 + [56]) = $4
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [160])
	CALL memcpy(($3 + [8]), $1, [8])
	$2 = ($1 + [8])
	CALL eosio_assert(((uint_32)($4 - $2) > (uint_32)[1]), [160])
	CALL memcpy((($3 + [8]) + [8]), $2, [2])
	*($3 + [52]) = ($1 + [10])
	$4 = ($3 + [20])
	CALL $687(($3 + [48]), $4)
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($3 + [52]) = ($3 + [32])
	*($3 + [48]) = ($3 + [44])
	CALL $791(($3 + [48]), ($3 + [8]))
	$1 = *($4)
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [24])) = $1
	CALL $867($1)
	
.LABEL $label$5
	*([0] + [4]) = ($3 + [64])
	return [1]
}

void .FUNC $286 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL $269(($3 + [8]), *($0 + [48]), $1, [1])
	$2 = ($2 + [-2])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$1 }
	goto $label$6 
	
.LABEL $label$6
	CALL eosio_assert(((uint_32)*(*($3 + [12]) + [56]) > (uint_32)[3]), [3120])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert(((uint_32)*(*($3 + [12]) + [56]) > (uint_32)[5]), [3120])
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((uint_32)*(*($3 + [12]) + [56]) > (uint_32)[7]), [3120])
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((uint_32)*(*($3 + [12]) + [56]) > (uint_32)[9]), [3120])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert(((uint_32)*(*($3 + [12]) + [56]) > (uint_32)[11]), [3120])
	
.LABEL $label$1
	*([0] + [4]) = ($3 + [16])
	$2
}

int_32 .FUNC $287 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *(($0 + [32]))
	$5 = *(($0 + [36]))
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$1 }
	$7 = ($5 + [-24])
	$6 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$5 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$8 = ($0 + [8])
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$8), [32])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	$5 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-5915108674644213760, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $72($8, $5)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$8), [32])
	
.LABEL $label$3
	$8 = *($4 + [4])
	$4 = ( ($7 + [12]) ? ($0 + [56]) : $7 )
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	$0 = ($3 + [8])
	
.LOOP $label$6:
	if ( ((int_32)*(($7 + [4])) != (int_32)$2) ){ goto $label$7 }
	$6 = ($3 + [4])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)*($0)) ){ goto $label$8 }
	*($6) = ($5 + [4])
	*($5) = *($7)
	goto $label$7 
	
.LABEL $label$8
	CALL $301($3, $7)
	$8 = *(($4 + [4]))
	
.LABEL $label$7
	$7 = ($7 + [12])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$6 }
	
.LABEL $label$5
	return ((int_32)*(($3 + [4])) != (int_32)*($3))
}

void .FUNC $284 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)((int_32)($7 - $6) / (int_32)[20]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($6 - $4) / (int_32)[20])
	$3 = ($5 + $1)
	if ( ((uint_32)$3 >= (uint_32)[214748365]) ){ goto $label$3 }
	$6 = [214748364]
	$7 = ((int_32)($7 - $4) / (int_32)[20])
	if ( ((uint_32)$7 > (uint_32)[107374181]) ){ goto $label$6 }
	$6 = ($7 << [1])
	$6 = ( $3 ? $6 : ($6 <= $3) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$7 = CALL $866(((int_32)$6 * (int_32)[20]))
	goto $label$2 
	
.LABEL $label$5
	$7 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = (int_64)0
	*($6 + [8 align=4]) = (int_64)0
	*($6) = [0]
	*(($6 + [16])) = [0]
	$6 = (*($7) + [20])
	*($7) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	$2 = ($7 + ((int_32)$6 * (int_32)[20]))
	$7 = ($7 + ((int_32)$5 * (int_32)[20]))
	$6 = $7
	
.LOOP $label$8:
	*($6) = (int_64)0
	*($6 + [8 align=4]) = (int_64)0
	*($6) = [0]
	*(($6 + [16])) = [0]
	$6 = ($6 + [20])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$10 }
	$3 = ([0] - $4)
	$1 = ($1 + [-20])
	
.LOOP $label$11:
	*(($7 + [-20])) = *($1)
	$4 = ($1 + [12])
	*(($7 + [-8])) = *($4)
	$5 = ($1 + [8])
	*(($7 + [-12])) = *($5)
	*($5) = [0]
	*(($1 + [16])) = [0]
	*($4) = [0]
	$7 = ($7 + [-20])
	$1 = ($1 + [-20])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$11 }
	$4 = *(($0 + [4]))
	$5 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$5 = $4
	
.LABEL $label$9
	*($0) = $7
	*(($0 + [4])) = $6
	*(($0 + [8])) = $2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$12 }
	$1 = ([0] - $5)
	$6 = ($4 + [-12])
	
.LOOP $label$13:
	if ( ((*($6) & [1]) == 0) ){ goto $label$14 }
	CALL $867(*(($6 + [8])))
	
.LABEL $label$14
	$6 = ($6 + [-20])
	if ( ((int_32)($6 + $1) != (int_32)[-12]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$1 }
	CALL $867($5)
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $285 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $866([120])
	$4 = CALL $302($6)
	*($6 + [104]) = $0
	CALL $303(($8 + [32]), $4)
	*($6 + [108]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [108])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $304(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $534 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([40])) + [8]) = [0]
	*($6) = (int_64)0
	*($6 + [12 align=4]) = (int_64)0
	*($6 + [20]) = [0]
	*($6 + [24]) = $0
	CALL $538(($8 + [32]), $6)
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $539(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $535 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$7 = [0]
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$4 = *($0 + [40])
	*($8 + [8]) = $4
	*($8 + [16]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)7687433457688903680, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $225(($8 + [8]), $0)
	CALL eosio_assert(((int_32)*($0 + [20]) == (int_32)($8 + [8])), [32])
	$3 = *($0 + [8])
	$5 = *(($0 + [12]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$1 }
	$0 = ($3 + [1])
	$2 = int_32(($5 - $3) >> [4])
	$3 = [0]
	$7 = [0]
	
.LOOP $label$2:
	$5 = *($0)
	$7 = ( $5 ? $7 : ((int_32)$5 > (int_32)$7) )
	$0 = ($0 + [16])
	$3 = ($3 + [1])
	if ( ($3 <= $2) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = *($8 + [32])
	if ( ($2 == 0) ){ goto $label$3 }
	$6 = ($8 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	$5 = *($3 + [8])
	if ( ($5 == 0) ){ goto $label$8 }
	*(($3 + [12])) = $5
	CALL $867($5)
	
.LABEL $label$8
	CALL $867($3)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($8 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($6) = $2
	CALL $867($0)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $7
}

void .FUNC $121 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	*([0] + [4]) = $9
	*($9 + [56]) = $1
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [5472]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($7)
	*(($9 + [48])) = [0]
	*($9 + [32]) = (int_64)-1
	*($9 + [40]) = (int_64)0
	$6 = *($0)
	*($9 + [16]) = $6
	*($9 + [24]) = $6
	$4 = CALL db_find_i64($6, $6, (int_64)-4992616317593845760, $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$7 }
	$4 = CALL $420(($9 + [16]), $4)
	CALL eosio_assert(((int_32)*($4 + [56]) == (int_32)($9 + [16])), [32])
	$6 = *($0)
	*($9 + [8]) = $2
	CALL eosio_assert([1], [352])
	CALL $802(($9 + [16]), $4, $6, ($9 + [8]))
	$0 = *($9 + [40])
	if ( $0 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$6 = *($0)
	*($9 + [12]) = $2
	*($9 + [8]) = ($9 + [56])
	CALL $801($9, ($9 + [16]), $6, ($9 + [8]))
	$0 = *($9 + [40])
	if ( ($0 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = ($9 + [44])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $867($3)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($9 + [40]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $0
	
.LABEL $label$8
	*($2) = $0
	CALL $867($4)
	
.LABEL $label$5
	*([0] + [4]) = ($9 + [64])
}

int_32 .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = [0]
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [160])
	CALL memcpy($6, $4, [8])
	CALL eosio_assert(((int_32)($1 & [-2]) != (int_32)[8]), [160])
	$7 = ($6 + [8])
	CALL memcpy($7, ($4 + [8]), [2])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($7)
	$3 = *($6)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 ($4 & [65535])), (int_32 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC $530 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	CALL $540($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($5 + [56]) = ($5 + [41])
	*($5 + [52]) = $5
	*($5 + [48]) = $5
	CALL $516(($5 + [48]), $1)
	CALL db_update_i64(*($1 + [52]), $2, $5, [41])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [64])
}

void .FUNC $126 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL $212(($0 + [600]), $1)
	CALL $797(($0 + [64]), $1, $2)
}

int_32 .FUNC $532 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$6 = CALL $866([16])
	*($0 + [16]) = $6
	*(($7 = ($0 + [20]))) = $6
	$8 = ($6 + [16])
	*($5) = $8
	*(($6 + [8])) = *(($1 + [8]))
	*($6) = *($1)
	*($7) = $8
	*($0 + [28]) = [0]
	*(($6 = ($0 + [32]))) = [0]
	*(($0 + [36])) = [0]
	CALL $83(($0 + [28]), [12])
	$6 = *($0 + [28])
	$1 = (*($6) - $6)
	CALL eosio_assert(((int_32)$1 > (int_32)[7]), [576])
	CALL memcpy($6, $4, [8])
	CALL eosio_assert(((int_32)($1 + [-8]) > (int_32)[1]), [576])
	CALL memcpy(($6 + [8]), ($4 + [8]), [2])
	CALL eosio_assert(((int_32)($1 + [-10]) > (int_32)[1]), [576])
	CALL memcpy(($6 + [10]), ($4 + [10]), [2])
	return $0
}

int_32 .FUNC $533 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $867($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $867($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $867($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $867($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $867($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $867($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $867($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $867($5)
	
.LABEL $label$12
	return $0
}

void .FUNC $722 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	*($7 + [72]) = $1
	*($7 + [68]) = $2
	*($7 + [64]) = $3
	*($7 + [62]) = [0]
	*($7 + [60]) = [0]
	*($7 + [56]) = [0]
	*($7 + [48]) = (int_64)0
	*($7 + [44]) = ((int_32)$3 == (int_32)[1])
	$4 = *(($0 + [32]))
	$6 = *(($0 + [36]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$1 }
	$3 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($3)) == (int_64)$1) ){ goto $label$1 }
	$6 = $3
	$2 = ($3 + [-24])
	$3 = $2
	if ( ((int_32)($2 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [8])
	$5 = ($0 + [48])
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$7 }
	$2 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$3), [32])
	$1 = *($0)
	if ( $2 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$2 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL $227($3, $2)
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$3), [32])
	$1 = *($0)
	
.LABEL $label$6
	*($7 + [12]) = $0
	*($7 + [24]) = $5
	*($7 + [8]) = ($7 + [68])
	*($7 + [16]) = ($7 + [64])
	*($7 + [20]) = ($7 + [44])
	*($7 + [28]) = ($7 + [62])
	*($7 + [32]) = ($7 + [60])
	*($7 + [36]) = ($7 + [48])
	*($7 + [40]) = ($7 + [72])
	CALL eosio_assert([1], [352])
	CALL $734($3, $2, $1, ($7 + [8]))
	goto $label$3 
	
.LABEL $label$5
	$1 = *($0)
	
.LABEL $label$4
	*($7 + [12]) = $0
	*($7 + [24]) = $5
	*($7 + [8]) = ($7 + [68])
	*($7 + [16]) = ($7 + [64])
	*($7 + [20]) = ($7 + [44])
	*($7 + [28]) = ($7 + [62])
	*($7 + [32]) = ($7 + [60])
	*($7 + [36]) = ($7 + [48])
	*($7 + [40]) = ($7 + [72])
	CALL $733($7, $3, $1, ($7 + [8]))
	
.LABEL $label$3
	if ( ((int_32)*($7 + [60]) != (int_32)[3]) ){ goto $label$8 }
	$3 = *($7 + [48])
	if ( ((int_32)$3 != (int_32)*($7 + [52])) ){ goto $label$8 }
	$6 = ($7 + [56])
	$2 = *($6)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$13 }
	*($3) = *($7 + [62])
	$3 = ($3 + [2])
	*($7 + [52]) = $3
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $232(($7 + [48]), ($7 + [62]))
	$2 = *($6)
	$3 = *($7 + [52])
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$11 }
	
.LABEL $label$12
	*($3) = *($7 + [62])
	$3 = ($3 + [2])
	*($7 + [52]) = $3
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $232(($7 + [48]), ($7 + [62]))
	$3 = *($7 + [52])
	if ( ((int_32)$3 == (int_32)*(($7 + [56]))) ){ goto $label$9 }
	
.LABEL $label$10
	*($3) = *($7 + [62])
	*($7 + [52]) = ($3 + [2])
	goto $label$8 
	
.LABEL $label$9
	CALL $232(($7 + [48]), ($7 + [62]))
	
.LABEL $label$8
	$3 = *($7 + [48])
	if ( ((int_32)$3 == (int_32)*($7 + [52])) ){ goto $label$14 }
	CALL $233($0, *($7 + [44]), *($7 + [72]), ($7 + [48]), [1])
	$3 = *($7 + [48])
	
.LABEL $label$14
	if ( ($3 == 0) ){ goto $label$15 }
	*($7 + [52]) = $3
	CALL $867($3)
	
.LABEL $label$15
	*([0] + [4]) = ($7 + [80])
}

int_64 .FUNC scalbn (float_64 $0, int_32 $1)
{
	int_32 $2
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	$2 = ($1 + [-1023])
	if ( ((int_32)$2 < (int_32)[1024]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	$2 = ($1 + [969])
	if ( ((int_32)$2 > (int_32)[-1023]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = $2
	goto $label$1 
	
.LABEL $label$2
	$1 = $2
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_32 .FUNC snprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [12]) = $3
	$3 = CALL vsnprintf($0, $1, $2, $3)
	*([0] + [4]) = ($4 + [16])
	return $3
}

void .FUNC _ZNSt3__19to_stringEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [18192], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $879(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $879(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $682 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$2 = *($0)
	*($1 + [16]) = [4]
	CALL $869(($1 + [20]), *($4 + [8]))
	CALL $869(($1 + [32]), *($4 + [12]))
	$5 = *($4 + [16])
	*($1 + [48]) = *($5)
	*(($1 + [72])) = *(($5 + [24]))
	*(($1 + [64])) = *(($5 + [16]))
	*(($1 + [56])) = *(($5 + [8]))
	*($1 + [80]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($1 + [88]) = *(*($4 + [20]))
	*($1 + [92]) = *(*($4 + [24]))
	$4 = *($1 + [20])
	$5 = ( *(($1 + [24])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($5 + [72])
	$3 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	$5 = *(($1 + [32]))
	$5 = ( *(($1 + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$4 = ($5 + $4)
	$3 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	if ( ($4 <= [513]) ){ goto $label$4 }
	$5 = CALL malloc($4)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($7 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$3
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $4)
	CALL $101($6, $1)
	$3 = *($1)
	*($1 + [108]) = CALL db_store_i64(*($2 + [8]), (int_64)-6533188803235414016, *(*($0 + [8])), $3, $5, $4)
	if ( ($4 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $882 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $883 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $866($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $884 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $866($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_64 .FUNC pow (float_64 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_64 $11
	float_64 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	int_32 $19
	float_64 $20
	float_64 $21
	$21 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $4)
	$4 = (CASTING int_64)(float_64 $1)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$8 = ($5) & [2147483647]
	if ( (($8) | $6) == 0) ){ goto $label$1 }
	$11 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)32))
	$3 = (CASTING uint_32)(uint_64 $11)
	if ( $3 ){ goto $label$2 }
	if ( ((int_32)$2 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 & [2147483647])
	if ( ((uint_32)$7 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$3 != (int_32)[0]) & ((int_32)$7 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$8 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$19 = [0]
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$19 = [2]
	if ( ((uint_32)$8 > (uint_32)[1128267775]) ){ goto $label$8 }
	$19 = [0]
	if ( ($8 <= [1072693248]) ){ goto $label$8 }
	$9 = uint_32($8 >> [20])
	if ( ((int_32)($9 + [-1023]) < (int_32)[21]) ){ goto $label$7 }
	$19 = ([1075] - $9)
	$9 = uint_32($6 >> $19)
	$19 = ( ([2] - ($9 & [1])) ? [0] : ((int_32)($9 << $19) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$19 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $9)
	$19 = uint_32($8 >> $6)
	$19 = ( ([2] - ($19 & [1])) ? [0] : ((int_32)($19 << $6) == (int_32)$8) )
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($7 + [-1072693248]) | $3) == 0) ){ goto $label$1 }
	if ( ($7 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL sqrt($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$21 = CALL fabs($0)
	if ( $3 ){ goto $label$18 }
	if ( ($7 == 0) ){ goto $label$17 }
	if ( ((int_32)($7 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$17 }
	
.LABEL $label$18
	$10 = (float_64)1
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$19 == (int_32)[1]) ){ goto $label$16 }
	if ( $19 ){ goto $label$14 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$17
	$21 = ( ((float_64)(float_64)1 / (float_64)$21) ? $21 : ((int_32)$5 < (int_32)[0]) )
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($19 | ($7 + [-1072693248])) == 0) ){ goto $label$15 }
	return ( !(float_64)$21 ? $21 : ((int_32)$19 == (int_32)[1]) )
	
.LABEL $label$16
	$10 = (float_64)-1
	goto $label$14 
	
.LABEL $label$15
	$1 = (float_64)
	return ((float_64)$1($21 - $21)) / (float_64)$1)
	
.LABEL $label$14
	if ( ($8 <= [1105199105]) ){ goto $label$28 }
	if ( ($8 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$7 > (uint_32)[1072693247]) ){ goto $label$24 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 < (int_32)[0]) )
	
.LABEL $label$28
	$8 = [0]
	if ( ((uint_32)$7 > (uint_32)[1048575]) ){ goto $label$26 }
	$21 = ((float_64)$21 * (float_64)(float_64)9007199254740992)
	$7 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $21) >> (uint_64)(int_64)32))
	$5 = [-53]
	goto $label$25 
	
.LABEL $label$27
	if ( ((uint_32)$7 > (uint_32)[1072693246]) ){ goto $label$23 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 < (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$26
	$5 = [0]
	
.LABEL $label$25
	$6 = ($7 & [1048575])
	$2 = ($6 | [1072693248])
	$5 = ((int_32($7 >> [20]) + $5) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$21 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$22 }
	$8 = [1]
	goto $label$21 
	
.LABEL $label$24
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 > (int_32)[0]) )
	
.LABEL $label$23
	if ( ($7 <= [1072693249]) ){ goto $label$20 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 > (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$22
	$2 = ($2 + [-1048576])
	$5 = ($5 + [1])
	
.LABEL $label$21
	$13 = ((float_64)*(($6 + [18240])) + (float_64)((float_64)((float_64)(float_64))($21 - (float_64))($0 - $14)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$21 = ((float_64)((float_64)$12 * (float_64)$0) + (float_64)((float_64)$21 * (float_64)(float_64))($13 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $17))
	$0 = ((float_64)$21 * (float_64)$21)
	$16 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($2 >> [1]) | [536870912]) + ($8 << [18])) + [524288])) << (int_64)32))
	$12 = ((float_64)$15 * (float_64)(float_64))((float_64))($14 - ((float_64)$0 * (float_64)$16)) - ((float_64)$0 * (float_64)(float_64))($12 - (float_64))($16 - $13)
	$13 = ((float_64)((float_64)((float_64)$21 + (float_64)$0) * (float_64)$12))
	$17 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$17 + (float_64)(float_64)3) + (float_64)$13)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$15 = ((float_64)(float_64)1 / (float_64)((float_64)$13 + (float_64)$12))
	$13 = *(($6 + [18224]))
	$12 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $21) & (int_64)4294967295)))
	$14 = (float_64)
	$21 = ((float_64)$14($12 - $13)) * (float_64)$15
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $21)) & (int_64)-4294967296)
	$14 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$14 & (int_64)-4294967296))))
	$12 = ((float_64)$0 + (float_64)$21)
	$6 = ($8 << [3])
	$18 = *(($6 + [18256]))
	$20 = (CASTING float_64)(int_32 $5)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$20 + (float_64)((float_64)$18 + (float_64)((float_64)$12)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$20 = (float_64))((float_64))((float_64))($0 + (float_64)$13)))))) & (int_64)-4294967296))) - $20) - $18) - $12)
	goto $label$19 
	
.LABEL $label$20
	$13 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$21 + (float_64)(float_64)-1)
	$21 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$21 + (float_64)$13))) & (int_64)-4294967296)
	$20 = (float_64))($0) - $21)
	
.LABEL $label$19
	$1 = ((float_64)((float_64)(float_64))($1 - $12) * (float_64)$0) + (float_64)((float_64)(float_64))($13 - $20) * (float_64)$1
	$12 = (CASTING float_64)(int_64 ((int_64)$4 & (int_64)-4294967296))
	$21 = ((float_64)$12 * (float_64)$0)
	$0 = ((float_64)$21 + (float_64)$1)
	$4 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 $4)))
	$2 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ((int_32)$2) < (int_32)[1083179008]) ){ goto $label$33 }
	if ( ((($2 + [-1083179008]) | $8) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$33
	if ( (($2 & [2147482624]) <= [1083231232]) ){ goto $label$30 }
	if ( ((($2 + [1064252416]) | $8) == 0) ){ goto $label$31 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$32
	$0 = (float_64)
	$12 = ((float_64)$1 + (float_64)(float_64)8.008566259537294e-17)
	if ( (((float_64)$12 <= (float_64)$0($0 - $21))) | (((float_64)$12 != (float_64)$12) | ((float_64)$0 != (float_64)$0))) ){ goto $label$30 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$31
	$0 = (float_64)
	if ( ((((float_64)$1 > (float_64)$0($0 - $21))) | (((float_64)$1 != (float_64)$1) | ((float_64)$0 != (float_64)$0))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$8 = ($2 & [2147483647])
	if ( ($8 <= [1071644673]) ){ goto $label$35 }
	$6 = (uint_32($8 >> [20]) & [2047])
	$8 = (uint_32([1048576] >> (uint_32($8 >> [20]) + [-1022])) + $2)
	$5 = uint_32((($8 & [1048575]) | [1048576]) >> ([1043] - $6))
	$2 = ( ([0] - $5) ? $5 : ((int_32)$2 < (int_32)[0]) )
	$21 = (float_64))($21 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($8 & ((int_32)uint_32([1048575] >> ($6 + [-1023])) ^ (int_32)[-1]))) << (int_64)32)))
	goto $label$34 
	
.LABEL $label$35
	$2 = [0]
	
.LABEL $label$34
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$21 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $21)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$1 + (float_64)$21)) & (int_64)-4294967296))
	$12 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$12 + (float_64)$21 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = (float_64)
	$4 = (CASTING int_64)(float_64 $1((float_64)1 - (float_64))((float_64))(((float_64)((float_64)$1)) * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$4 - ((float_64)$0($21 - (float_64))($1 - $12))) + (float_64)((float_64)$1 * (float_64)$0))
	if ( ((int_32)int_32($8 - $1))))) >> (uint_64)(int_64)32)) + ($2 << [20]))) >> [20]) <= (int_32)[0]) ){ goto $label$36 }
	return ((float_64)$10 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))))
	
.LABEL $label$36
	return ((float_64)$10 * (float_64)CALL scalbn($1, $2))
	
.LABEL $label$29
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $21
}

int_64 .FUNC sqrt (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($7) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$2 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$6 }
	$8 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $8) ){ goto $label$4 }
	$8 = [1]
	$9 = $2
	goto $label$5 
	
.LABEL $label$6
	if ( ((($7 & [2147483647]) | $2) == 0) ){ goto $label$3 }
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = [1]
	
.LOOP $label$7:
	$8 = ($8 + [-21])
	$7 = uint_32($2 >> [11])
	$9 = ($2 << [21])
	$2 = $9
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$5
	$5 = [0]
	if ( ($7 & [1048576]) ){ goto $label$8 }
	$5 = [0]
	
.LOOP $label$9:
	$5 = ($5 + [1])
	$7 = ($7 << [1])
	if ( (($7 & [1048576]) == 0) ){ goto $label$9 }
	
.LABEL $label$8
	$2 = ($9 << $5)
	$8 = ($8 - $5)
	$7 = (uint_32($9 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$7 = (($7 & [1048575]) | [1048576])
	$10 = ($8 + [-1023])
	if ( (($10 & [1]) == 0) ){ goto $label$10 }
	$7 = (($7 << [1]) | uint_32($2 >> [31]))
	$2 = ($2 << [1])
	
.LABEL $label$10
	$7 = (uint_32($2 >> [31]) | ($7 << [1]))
	$5 = ($2 << [1])
	$4 = [0]
	$9 = [2097152]
	$8 = [0]
	
.LOOP $label$11:
	$6 = $5
	$5 = ($9 + $8)
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$12 }
	$4 = ($9 + $4)
	$7 = ($7 - $5)
	$8 = ($5 + $9)
	
.LABEL $label$12
	$7 = (($7 << [1]) | (uint_32($2 >> [30]) & [1]))
	$5 = ($6 << [1])
	$2 = $6
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$11 }
	$3 = uint_32($10 >> [1])
	$9 = [-2147483648]
	$10 = [0]
	$2 = [0]
	
.LOOP $label$13:
	$6 = ($2 + $9)
	if ( ((int_32)$7 > (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$14 }
	if ( ($5 <= $6) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (($7 - $8) + ( [-1] ? [0] : ($5 <= $6) ))
	$2 = ($6 + $9)
	$8 = ((((int_32)$6 < (int_32)[0]) & ((int_32)$2 > (int_32)[-1])) + $8)
	$10 = ($10 + $9)
	$5 = ($5 - $6)
	
.LABEL $label$14
	$7 = (uint_32($5 >> [31]) | ($7 << [1]))
	$5 = ($5 << [1])
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$13 }
	if ( (($5 | $7) == 0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$17 }
	$10 = (($10 & [1]) + $10)
	goto $label$16 
	
.LABEL $label$17
	$4 = ($4 + [1])
	$10 = [0]
	
.LABEL $label$16
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($3 << [20]) + int_32($4 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($4 << [31])))))
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
}

void .FUNC $683 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	$6 = *(CALL $685($0, $1, $2) + [4])
	*(($9 + [40])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$1 = *($0)
	*($9 + [8]) = $1
	*($9 + [16]) = $1
	$8 = [0]
	$0 = CALL db_find_i64($1, $1, (int_64)-4796533164510019584, $6)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $81(($9 + [8]), $0)
	CALL eosio_assert(((int_32)*($8 + [12]) == (int_32)($9 + [8])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [3328])
	$5 = *($9 + [32])
	if ( ($5 == 0) ){ goto $label$2 }
	$7 = ($9 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	CALL $867($2)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($9 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $5
	
.LABEL $label$3
	*($7) = $5
	CALL $867($0)
	
.LABEL $label$2
	$0 = *($8 + [8])
	CALL eosio_assert((($0 == 0) | ((int_32)$0 == (int_32)$3)), [7408])
	$0 = *($8 + [9])
	CALL eosio_assert((($0 == 0) | ((int_32)$0 == (int_32)$4)), [7440])
	*([0] + [4]) = ($9 + [48])
}

void .FUNC $479 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*(($1 + [48])))
	
.LABEL $label$11
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $867($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $529 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $541($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $83($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $542($4, $1)
	CALL $544(CALL $543(CALL $543($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $478 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [16])
	$7 = $6
	*([0] + [4]) = $6
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$2 = *($0)
	$3 = *($4 + [8])
	*($1 + [16]) = *($3)
	*(($1 + [24])) = *(($3 + [8]))
	*($1 + [32]) = *(*($4 + [12]))
	CALL $869(($1 + [40]), *($4 + [16]))
	$4 = *($1 + [40])
	$3 = ( *(($1 + [44])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($3 + [36])
	$5 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($4)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($6 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = ($6 + $4)
	CALL $480($7, $1)
	$5 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($2 + [8]), (int_64)6299033814149437440, *(*($0 + [8])), $5, $6, $4)
	if ( ($4 <= [513]) ){ goto $label$4 }
	CALL free($6)
	
.LABEL $label$4
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $528 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $866(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $866([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $83(($8 + [28]), [8])
	$2 = *($8 + [28])
	CALL eosio_assert(((int_32)(*($2) - $2) > (int_32)[7]), [576])
	CALL memcpy($2, $4, [8])
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $867($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $867($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $867($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $876 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = *($0)
	if ( ($4 & [1]) ){ goto $label$2 }
	$4 = uint_32($4 >> [1])
	$3 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0 + [4])
	$3 = *($0 + [8])
	
.LABEL $label$1
	$0 = [-1]
	if ( ((uint_32)$4 <= (uint_32)$2) ){ goto $label$3 }
	$0 = ($4 - $2)
	if ( ($0 == 0) ){ goto $label$5 }
	$0 = CALL memchr(($3 + $2), ($1 & [255]), $0)
	goto $label$4 
	
.LABEL $label$5
	$0 = [0]
	
.LABEL $label$4
	$0 = ( ($0 - $3) ? [-1] : $0 )
	
.LABEL $label$3
	return $0
}

void .FUNC $758 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	CALL $759(*($0 + [4]), $1)
	$3 = ($1 + [8])
	$5 = *($1 + [8])
	$4 = *(($1 + [12]))
	$6 = ($4 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($6 >> [4]))
	$7 = [22]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$3 }
	$7 = (((int_32)uint_32(($6 + [-16]) >> [4]) * (int_32)[14]) + $7)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($7 + [-14])
	
.LABEL $label$2
	if ( ($7 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($7)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	*($10) = $9
	*($10 + [8]) = ($9 + $7)
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	*($10 + [4]) = ($9 + [8])
	CALL $446($10, $3)
	$8 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)7687433457688903680, *(*($0 + [8])), $8, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL free($9)
	
.LABEL $label$6
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$7 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $295 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [112])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$2 = *($0)
	*($1 + [8]) = *(*(*($4 + [4]) + [4]) + [8])
	*($1 + [12]) = *(*(*($4 + [4]) + [4]) + [12])
	$5 = *(*($4 + [4]) + [4])
	*($1 + [16]) = *($5 + [24])
	*(($1 + [24])) = *(($5 + [32]))
	*($1 + [32]) = *(*($4 + [8]))
	*($1 + [40]) = *(*(*($4 + [4]) + [4]) + [40])
	*($1 + [48]) = *(*(*($4 + [4]) + [4]) + [48])
	$4 = *(*($4 + [4]) + [4])
	*($1 + [56]) = *($4 + [56])
	*(($1 + [64])) = *(($4 + [64]))
	*($8 + [96]) = ($8 + [73])
	*($8 + [92]) = $8
	*($8 + [88]) = $8
	CALL $297(($8 + [88]), $1)
	$3 = *($1)
	*($1 + [84]) = CALL db_store_i64(*($2 + [8]), (int_64)3932090329950728704, *(*($0 + [8])), $3, $8, [73])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = *(($2 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($8 + [104]) = (int_64))((int_64)0 - *(($1 + [32])))
	*($1 + [88]) = CALL db_idx64_store($3, (int_64)3932090329950728704, $6, $7, ($8 + [104]))
	*([0] + [4]) = ($8 + [112])
}

void .FUNC $573 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$5 = (*(*(*($3) + [4]) + [9]) + [-1])
	if ( ((uint_32)$5 > (uint_32)[4]) ){ goto $label$1 }
	goto $label$7 
	
.LABEL $label$7
	*($1 + [8]) = (*($1 + [8]) + [1])
	goto $label$1 
	
.LABEL $label$6
	*($1 + [28]) = (*($1 + [28]) + [1])
	goto $label$1 
	
.LABEL $label$5
	*($1 + [12]) = (*($1 + [12]) + [1])
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)((uint_32)*(*($3 + [4])) % (uint_32)[20]) != (int_32)[9]) ){ goto $label$2 }
	*($1 + [20]) = (*($1 + [20]) + [1])
	goto $label$1 
	
.LABEL $label$3
	*($1 + [24]) = (*($1 + [24]) + [1])
	goto $label$1 
	
.LABEL $label$2
	*($1 + [16]) = (*($1 + [16]) + [1])
	
.LABEL $label$1
	*($1 + [40]) = ((int_64)*($1 + [40]) + (int_64)*(*($3 + [8])))
	CALL eosio_assert([1], [512])
	$7 = $7
	$3 = ($7 + [-48])
	*([0] + [4]) = $3
	*($6 + [4]) = $3
	*($6) = $3
	*($6 + [8]) = ($7 + [-4])
	CALL $62($6, $1)
	CALL db_update_i64(*($1 + [52]), $2, $3, [44])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
	$5
}

int_32 .FUNC $294 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [12]) = [0]
	*($0 + [16]) = (int_64)0
	*(($3 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*($0 + [40]) = [0]
	*($0 + [32]) = (int_64)0
	*($0 + [48]) = (int_64)0
	*($0 + [56]) = (int_64)0
	*(($2 = ($0 + [64]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1120])
	return $0
}

void .FUNC $750 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*($9 + [72]) = $1
	*(($9 + [64])) = [0]
	*($9 + [48]) = (int_64)-1
	*($9 + [56]) = (int_64)0
	$7 = *($0 + [8])
	*($9 + [32]) = $7
	*($9 + [40]) = $7
	$3 = *(($0 + [40]))
	$5 = *(($0 + [44]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$1 }
	$8 = ($5 + [-24])
	$2 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$1 }
	$5 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$8 = ($0 + [16])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$5 }
	$6 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [20]) == (int_32)$8), [32])
	if ( $6 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*(CALL $225($8, $6) + [20]) == (int_32)$8), [32])
	goto $label$3 
	
.LABEL $label$4
	$1 = *(($0 + [8]))
	*($9 + [24]) = $0
	*($9 + [20]) = ($9 + [32])
	*($9 + [16]) = ($9 + [72])
	CALL $756(($9 + [8]), $8, $1, ($9 + [16]))
	$1 = *($9 + [72])
	
.LABEL $label$3
	$4 = *($3 + [24])
	$3 = *($0 + [64])
	$5 = *(($3 + [28]))
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	$8 = ($5 + [-24])
	$2 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$6 }
	$5 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$9 }
	$8 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$3), [32])
	goto $label$8 
	
.LABEL $label$9
	$8 = [0]
	$6 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$8 }
	$8 = CALL $13($3, $6)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$3), [32])
	
.LABEL $label$8
	$6 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($6, [192])
	*($9 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) - *([0] + [12]))
	$1 = *(($0 + [8]))
	*($9 + [8]) = ($9 + [16])
	CALL eosio_assert($6, [352])
	CALL $757($3, $8, $1, ($9 + [8]))
	$5 = *($9 + [56])
	if ( ($5 == 0) ){ goto $label$10 }
	$2 = ($9 + [60])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$12 }
	
.LOOP $label$13:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $867($6)
	
.LABEL $label$14
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$13 }
	$8 = *(($9 + [56]))
	goto $label$11 
	
.LABEL $label$12
	$8 = $5
	
.LABEL $label$11
	*($2) = $5
	CALL $867($8)
	
.LABEL $label$10
	*([0] + [4]) = ($9 + [80])
}

void .FUNC $751 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [112])
	*([0] + [4]) = $9
	*($9 + [104]) = $1
	*($9 + [103]) = $2
	CALL eosio_assert(((($2 + [-1]) & [255]) <= [3]), [4528])
	*(($9 + [88])) = [0]
	*($9 + [72]) = (int_64)-1
	*($9 + [80]) = (int_64)0
	$7 = *($0 + [8])
	*($9 + [56]) = $7
	*($9 + [64]) = $7
	$8 = [0]
	$6 = CALL db_find_i64($7, $7, (int_64)-4947914475178033152, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $428(($9 + [56]), $6)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($9 + [56])), [32])
	$1 = *($9 + [104])
	$2 = *($9 + [103])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [4560])
	*($9 + [40]) = $2
	*($9 + [44]) = [0]
	*($9 + [41]) = [1]
	*($9 + [48]) = *($8 + [8])
	*($9 + [50]) = *($8 + [12])
	*($9 + [52]) = *($8 + [10])
	*($9 + [54]) = *($8 + [14])
	*($9 + [36]) = [1]
	$4 = *(($0 + [40]))
	$6 = *(($0 + [44]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$2 }
	$8 = ($6 + [-24])
	$3 = ([0] - $4)
	
.LOOP $label$3:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$2 }
	$6 = $8
	$2 = ($8 + [-24])
	$8 = $2
	if ( ((int_32)($2 + $3) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$8 = ($0 + [16])
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$7 }
	$2 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [20]) == (int_32)$8), [32])
	if ( $2 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$2 = CALL $225($8, $2)
	CALL eosio_assert(((int_32)*($2 + [20]) == (int_32)$8), [32])
	
.LABEL $label$6
	*($9 + [24]) = [0]
	$1 = *(($0 + [8]))
	*($9 + [12]) = ($9 + [24])
	*($9 + [8]) = ($9 + [103])
	*($9 + [16]) = ($9 + [40])
	*($9 + [20]) = ($9 + [36])
	CALL eosio_assert([1], [352])
	CALL $753($8, $2, $1, ($9 + [8]))
	CALL eosio_assert(((int_32)*($9 + [24]) ^ (int_32)[1]), [4576])
	goto $label$4 
	
.LABEL $label$5
	$1 = *(($0 + [8]))
	*($9 + [12]) = ($9 + [40])
	*($9 + [8]) = ($9 + [104])
	CALL $752(($9 + [24]), $8, $1, ($9 + [8]))
	
.LABEL $label$4
	$1 = *($9 + [104])
	$5 = *($4 + [24])
	$4 = *($0 + [64])
	$6 = *(($4 + [28]))
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$8 }
	$8 = ($6 + [-24])
	$3 = ([0] - $5)
	
.LOOP $label$9:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$8 }
	$6 = $8
	$2 = ($8 + [-24])
	$8 = $2
	if ( ((int_32)($2 + $3) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$11 }
	$8 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$4), [32])
	goto $label$10 
	
.LABEL $label$11
	$8 = [0]
	$2 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$10 }
	$8 = CALL $13($4, $2)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$4), [32])
	
.LABEL $label$10
	$2 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($2, [192])
	*($9 + [8]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) - *([0] + [12]))
	$1 = *(($0 + [8]))
	*($9 + [24]) = ($9 + [8])
	CALL eosio_assert($2, [352])
	CALL $754($4, $8, $1, ($9 + [24]))
	$6 = *($9 + [80])
	if ( ($6 == 0) ){ goto $label$12 }
	$3 = ($9 + [84])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$14 }
	
.LOOP $label$15:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$16 }
	CALL $867($2)
	
.LABEL $label$16
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$15 }
	$8 = *(($9 + [80]))
	goto $label$13 
	
.LABEL $label$14
	$8 = $6
	
.LABEL $label$13
	*($3) = $6
	CALL $867($8)
	
.LABEL $label$12
	*([0] + [4]) = ($9 + [112])
}

void .FUNC $752 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([32]))) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16]) = [0]
	*($3 + [20]) = $1
	CALL $755(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [24])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $265(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [12])) = $1
	CALL $867($1)
	
.LABEL $label$4
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $753 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	$11 = $12
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$9 = *($1 + [8])
	$5 = *(($1 + [12]))
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$1 }
	$6 = int_32(($5 - $9) >> [4])
	$8 = [0]
	$7 = (*(*($3)) & [255])
	
.LOOP $label$3:
	if ( ((int_32)*($9) == (int_32)$7) ){ goto $label$2 }
	$9 = ($9 + [16])
	$8 = ($8 + [1])
	if ( ($8 <= $6) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*(*($3 + [4])) = [1]
	
.LABEL $label$1
	$7 = ($1 + [8])
	$9 = *($3 + [8])
	if ( ((int_32)$5 == (int_32)*(($1 + [16]))) ){ goto $label$5 }
	*($5) = *($9)
	*(($5 + [8])) = *(($9 + [8]))
	$8 = (*($9) + [16])
	*(($9 = ($1 + [12]))) = $8
	goto $label$4 
	
.LABEL $label$5
	CALL $445($7, $9)
	$8 = *(($1 + [12]))
	
.LABEL $label$4
	$9 = ($1 + [8])
	*(*($3 + [12])) = int_32(($8 - *($9)) >> [4])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$6 = *($9)
	$8 = *(($1 + [12]))
	$3 = ($8 - $6)
	$10 = (CASTING uint_64)(uint_32 int_32($3 >> [4]))
	$9 = [22]
	
.LOOP $label$6:
	$9 = ($9 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$8 }
	$9 = (((int_32)uint_32(($3 + [-16]) >> [4]) * (int_32)[14]) + $9)
	goto $label$7 
	
.LABEL $label$8
	$9 = ($9 + [-14])
	
.LABEL $label$7
	if ( ($9 <= [513]) ){ goto $label$10 }
	$8 = CALL malloc($9)
	goto $label$9 
	
.LABEL $label$10
	$8 = ($12 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$9
	*($11) = $8
	*($11 + [8]) = ($8 + $9)
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [576])
	CALL memcpy($8, $1, [8])
	*($11 + [4]) = ($8 + [8])
	CALL $446($11, $7)
	CALL db_update_i64(*($1 + [24]), $2, $8, $9)
	if ( ($9 <= [513]) ){ goto $label$11 }
	CALL free($8)
	
.LABEL $label$11
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $754 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [12]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [21])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $276(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $297 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [76]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $756 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([32]))) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16]) = [0]
	*($3 + [20]) = $1
	CALL $758(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [24])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $265(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [12])) = $1
	CALL $867($1)
	
.LABEL $label$4
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $757 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [12]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [21])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $276(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN16activity_control13get_prop_ruleEm (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$3 = *($1)
	*($5 + [8]) = $3
	*($5 + [16]) = $3
	CALL $30($0, ($5 + [8]), (CASTING uint_64)(uint_32 $2))
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [704])
	$1 = *($5 + [32])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $867($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($5 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $867($0)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC _ZN16activity_control8get_propEN5eosio4nameEm (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	$5 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$6), [32])
	if ( $5 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$5 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)3617335885894254592, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $14($6, $5)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$6), [32])
	
.LABEL $label$5
	$5 = *(($5 + [16]))
	$6 = *($5 + [12])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	if ( ((int_32)*($6) == (int_32)$2) ){ goto $label$3 }
	$6 = ($6 + [8])
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$8 }
	
.LABEL $label$7
	CALL eosio_assert([0], [672])
	return ($0 + [116])
	
.LABEL $label$4
	$6 = ($0 + [116])
	
.LABEL $label$3
	return $6
}

void .FUNC $296 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [3]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [3])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$4 }
	$6 = [536870911]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$7 }
	$6 = int_32($2 >> [2])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $866(($6 << [3]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($6) = (int_64)0
	*($6 + [4]) = [0]
	*($6) = [0]
	$6 = (*($0) + [8])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $882($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [3]))
	$5 = ($2 + ($3 << [3]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = (int_64)0
	*($6 + [4]) = [0]
	*($6) = [0]
	$6 = ($6 + [8])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $867($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [592])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [3])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $21($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [3]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[1]), [160])
	CALL memcpy($7, *($4), [2])
	$6 = (*($4) + [2])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[3]), [160])
	CALL memcpy(($7 + [4]), *($4), [4])
	$6 = (*($4) + [4])
	*($4) = $6
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $23 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [9]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [10]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [9]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [10]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $27 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*(($7 = (($6 = *($1 + [12])) + (*(*($3)) << [3]))) + [4]) = (*($7 + [4]) - *(*($3 + [4])))
	$4 = *($1)
	$9 = $4
	$3 = ($6 + (*(*($3)) << [3]))
	if ( *($3 + [4]) ){ goto $label$1 }
	$9 = $4
	$5 = ($3 + [8])
	$6 = ($1 + [16])
	$8 = (*($6) - $5)
	$7 = int_32($8 >> [3])
	if ( ($7 == 0) ){ goto $label$2 }
	CALL memmove($3, $5, $8)
	$9 = *($1)
	
.LABEL $label$2
	*($6) = ($3 + ($7 << [3]))
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)$9), [512])
	$6 = ($1 + [12])
	$5 = *($1 + [12])
	$7 = *(($1 + [16]))
	$8 = ($7 - $5)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	$3 = [10]
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$4 }
	$3 = ((((int_32)uint_32(($8 + [-8]) >> [3]) * (int_32)[6]) + $3) + [6])
	
.LABEL $label$4
	if ( ($3 <= [513]) ){ goto $label$6 }
	$10 = CALL malloc($3)
	goto $label$5 
	
.LABEL $label$6
	$10 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$5
	*($11) = $10
	$7 = ($10 + $3)
	*($11 + [8]) = $7
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [576])
	CALL memcpy($10, $1, [8])
	$5 = ($10 + [8])
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[1]), [576])
	CALL memcpy($5, ($1 + [8]), [2])
	*($11 + [4]) = ($10 + [10])
	CALL $19($11, $6)
	CALL db_update_i64(*($1 + [28]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL free($10)
	
.LABEL $label$7
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($11 + [16])
}

int_32 .FUNC _ZN16activity_control14remove_actpropEN5eosio4nameEmm (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [16])
	*([0] + [4]) = $15
	*($15 + [12]) = $3
	$14 = *(($0 + [32]))
	$13 = *(($0 + [36]))
	if ( ((int_32)$13 == (int_32)$14) ){ goto $label$1 }
	$11 = ($13 + [-24])
	$7 = ([0] - $14)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$13 = $11
	$10 = ($11 + [-24])
	$11 = $10
	if ( ((int_32)($10 + $7) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [8])
	if ( ((int_32)$13 == (int_32)$14) ){ goto $label$4 }
	$9 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	$11 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)3617335885894254592, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $14($4, $11)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$4), [32])
	
.LABEL $label$3
	$5 = ((int_32)$9 != (int_32)[0])
	CALL eosio_assert($5, [608])
	$12 = [-1]
	*($15 + [8]) = [-1]
	$13 = *($9 + [12])
	$6 = ($9 + [16])
	$14 = *($6)
	if ( ((int_32)$14 == (int_32)$13) ){ goto $label$5 }
	$12 = [-1]
	$8 = ($9 + [12])
	$10 = [0]
	$11 = [0]
	
.LOOP $label$6:
	$7 = ($13 + $10)
	if ( ((int_32)*($7) != (int_32)$2) ){ goto $label$7 }
	*($15 + [8]) = $11
	$12 = $11
	if ( ((uint_32)*(($7 + [4])) >= (uint_32)$3) ){ goto $label$7 }
	CALL eosio_assert([0], [640])
	$13 = *($8)
	$14 = *($6)
	$12 = $11
	
.LABEL $label$7
	$10 = ($10 + [8])
	$11 = ($11 + [1])
	if ( ($11 <= int_32(($14 - $13) >> [3])) ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert(((int_32)uint_32($12 >> [31]) ^ (int_32)[1]), [608])
	$1 = *($0)
	*($15 + [4]) = ($15 + [12])
	*($15) = ($15 + [8])
	CALL eosio_assert($5, [352])
	CALL $27($4, $9, $1, $15)
	*([0] + [4]) = ($15 + [16])
	return [1]
}

void .FUNC $471 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $232 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = ($6 - $5)
	if ( ((int_32)$3 <= (int_32)[-3]) ){ goto $label$2 }
	$3 = (*($0 + [8]) - $5)
	$2 = int_32($3 >> [1])
	$4 = ($2 + [1])
	$3 = ( ( $4 ? $3 : ($3 <= $4) ) ? [2147483647] : (int_32($3 >> [1]) <= [1073741823]) )
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$7 = CALL $866(($3 << [1]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	
.LABEL $label$3
	*(($4 = ($7 + ($2 << [1])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($4 - $6)
	$3 = ($7 + ($3 << [1]))
	$4 = ($4 + [2])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $4
	*(($0 + [8])) = $3
	if ( ($5 == 0) ){ goto $label$6 }
	CALL $867($5)
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	CALL abort()
	(unreachable)
}

void .FUNC $293 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [104]) == (int_32)$0), [2272])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [2320])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2384])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $867($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $867($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [108]))
}

int_32 .FUNC $470 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1397703940
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [32]))) = (int_64)1397703940
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [48]))) = (int_64)1397703940
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [64]))) = (int_64)1397703940
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [80]))) = (int_64)1397703940
	*($0 + [72]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$3 = [0]
	
.LABEL $label$21
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [96]))) = (int_64)1397703940
	*($0 + [88]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$3 = [0]
	
.LABEL $label$26
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [112]))) = (int_64)1397703940
	*($0 + [104]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$3 = [0]
	
.LABEL $label$31
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [128]))) = (int_64)1397703940
	*($0 + [120]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$3 = [0]
	
.LABEL $label$36
	CALL eosio_assert($3, [1120])
	return $0
}

void .FUNC $292 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $866([96])
	CALL $294($3)
	*($3 + [80]) = $1
	CALL $295(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [84])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $296(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $727 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $866([64])
	CALL $729($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [52])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $69(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC _ZNSt3__19to_stringEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [18208], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $879(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $879(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $620 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	*(($10 + [40])) = [0]
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$9 = *($0)
	*($10 + [8]) = $9
	*($10 + [16]) = $9
	$0 = CALL db_find_i64($9, $9, (int_64)-4315240091392933888, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $485(($10 + [8]), $0)
	CALL eosio_assert(((int_32)*($0 + [20]) == (int_32)($10 + [8])), [32])
	$0 = *($0 + [8])
	$7 = *(($0 + [12]))
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$1 }
	$4 = ($1 + [4])
	$6 = int_32(($7 - $0) >> [2])
	$7 = [0]
	
.LOOP $label$2:
	if ( ((int_64)*($0) != (int_64)$3) ){ goto $label$3 }
	$8 = $1
	$5 = *(($0 + [2]))
	if ( ((($5 + [-1051]) & [65535]) <= [3]) ){ goto $label$4 }
	if ( ((uint_32)(($5 + [-1054]) & [65535]) > (uint_32)[2]) ){ goto $label$3 }
	$8 = *($1)
	*($1) = (((int_32)($8 << [3]) / (int_32)[100]) + $8)
	$8 = $4
	
.LABEL $label$4
	$5 = *($8)
	*($8) = (((int_32)$5 / (int_32)[20]) + $5)
	
.LABEL $label$3
	$0 = ($0 + [4])
	$7 = ($7 + [1])
	if ( ($7 <= $6) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = *($10 + [32])
	if ( ($6 == 0) ){ goto $label$5 }
	$1 = ($10 + [36])
	$0 = *($1)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$9 }
	$8 = *($7 + [8])
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [12])) = $8
	CALL $867($8)
	
.LABEL $label$10
	CALL $867($7)
	
.LABEL $label$9
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($10 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $6
	
.LABEL $label$6
	*($1) = $6
	CALL $867($0)
	
.LABEL $label$5
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $378 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$3 = *($3)
	*($1 + [8]) = *($3)
	*(($1 + [20])) = *(($3 + [12]))
	*(($5 = ($1 + [16]))) = *(($3 + [8]))
	*(($1 + [12])) = *(($3 + [4]))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 + [16]), $5, [8])
	CALL db_update_i64(*($1 + [28]), $2, $6, [24])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $379 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $866([48])
	CALL $365($3)
	*($3 + [32]) = $1
	CALL $381(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $367(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $548 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($0 + [16])) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [160])
	CALL memcpy($0, $1, [8])
	$4 = ($2 & [-8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [160])
	CALL memcpy(($0 + [8]), ($1 + [8]), [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[16]), [160])
	CALL memcpy(($0 + [16]), ($1 + [16]), [8])
}

void .FUNC $372 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	$11 = $12
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$6 = *($1 + [12])
	$5 = *(($1 + [16]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$1 }
	$9 = ($6 + [8])
	$7 = ((int_32)($5 - $6) / (int_32)[12])
	$10 = *(*($3))
	$8 = [0]
	
.LOOP $label$3:
	if ( ((int_64)*($9) == (int_64)$10) ){ goto $label$2 }
	$9 = ($9 + [12])
	$8 = ($8 + [1])
	if ( ($8 <= $7) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*(*($3 + [4])) = $8
	
.LABEL $label$1
	$10 = $4
	$9 = *(*($3 + [4]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$4 }
	$9 = ($6 + ((int_32)$9 * (int_32)[12]))
	$3 = ($9 + [12])
	$8 = ($5 - $3)
	$7 = ((int_32)$8 / (int_32)[12])
	$10 = $4
	if ( ($8 == 0) ){ goto $label$5 }
	CALL memmove($9, $3, $8)
	$10 = *($1)
	
.LABEL $label$5
	*(($1 + [16])) = ($9 + ((int_32)$7 * (int_32)[12]))
	
.LABEL $label$4
	$7 = ($1 + [12])
	CALL eosio_assert(((int_64)$4 == (int_64)$10), [512])
	$9 = [12]
	$3 = *(($1 + [12]))
	$8 = *(($1 + [16]))
	$6 = ($8 - $3)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[12]))
	
.LOOP $label$6:
	$9 = ($9 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$7 }
	$9 = ((((int_32)((uint_32)($6 + [-12]) / (uint_32)[12]) * (int_32)[10]) + $9) + [10])
	
.LABEL $label$7
	if ( ($9 <= [513]) ){ goto $label$9 }
	$8 = CALL malloc($9)
	goto $label$8 
	
.LABEL $label$9
	$8 = ($12 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$8
	*($11) = $8
	$3 = ($8 + $9)
	*($11 + [8]) = $3
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [576])
	CALL memcpy($8, $1, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($3 - $6) > (int_32)[3]), [576])
	CALL memcpy($6, ($1 + [8]), [4])
	*($11 + [4]) = ($8 + [12])
	CALL $244($11, $7)
	CALL db_update_i64(*($1 + [28]), $2, $8, $9)
	if ( ($9 <= [513]) ){ goto $label$10 }
	CALL free($8)
	
.LABEL $label$10
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($11 + [16])
}

int_32 .FUNC $373 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1397703940
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*($0 + [32]) = [0]
	return $0
}

void .FUNC $370 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $371 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = *($0 + [4])
	*($1) = *(*(*($4) + [4]) + [32])
	$2 = *($0)
	$4 = *($4 + [4])
	*($1 + [8]) = *($4)
	*(($5 = ($1 + [16]))) = *(($4 + [8]))
	CALL eosio_assert([1], [576])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 + [16]), $5, [8])
	$3 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-7947908067083943936, *(*($0 + [8])), $3, $6, [24])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $376 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $377 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $866([40])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = (int_64)1397703940
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5459781
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1120])
	*($4 + [24]) = $1
	CALL $382(($7 + [16]), $4)
	*($7 + [32]) = $4
	$2 = *($4)
	*($7 + [16]) = $2
	$6 = *($4 + [28])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $2
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $370(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $867($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $374 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC $375 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $839 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $838 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = [0]
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [56]) = ($5 + [41])
	*($5 + [52]) = $5
	*($5 + [48]) = $5
	CALL $516(($5 + [48]), $1)
	CALL db_update_i64(*($1 + [52]), $2, $5, [41])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [64])
}

void .FUNC $831 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0)
	$5 = *($0 + [4])
	*($1) = *(*(*($5) + [4]))
	$4 = *(*($5 + [4]))
	CALL eosio_assert([1], [1248])
	$3 = ((uint_64)$4 / (uint_64)(int_64)1000000)
	$4 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1120])
	*(($1 + [16])) = (int_64)1397703940
	*($1 + [8]) = $3
	$6 = $8
	$5 = ($6 + [-64])
	*([0] + [4]) = $5
	*($7 + [4]) = $5
	*($7) = $5
	*($7 + [8]) = ($6 + [-8])
	CALL $424($7, $1)
	$4 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($2 + [8]), (int_64)-4992616317593845760, *(*($0 + [8])), $4, $5, [56])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $830 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	$3 = *(*($0))
	CALL eosio_assert([1], [1248])
	$2 = ((uint_64)$3 / (uint_64)(int_64)1000000)
	$0 = [0]
	$3 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [1120])
	CALL eosio_assert(((int_64)1397703940 == (int_64)*(($1 + [16]))), [3504])
	$3 = ((int_64)*($1 + [8]) + (int_64)$2)
	*($1 + [8]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [3584])
}

void .FUNC $833 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [48])
	*([0] + [4]) = $12
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [8512]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$1 = *($6)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$1 = ($1 + [165])
	goto $label$3 
	
.LABEL $label$4
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($9)
	$2 = ($0 + [88])
	$6 = [0]
	$1 = [0]
	$3 = CALL db_lowerbound_i64(*($0 + [88]), *(($0 + [96])), (int_64)-3732485072926388848, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	CALL $512($2, $3)
	$1 = [1]
	
.LABEL $label$5
	CALL eosio_assert($1, [9280])
	$3 = ($0 + [168])
	$1 = CALL db_lowerbound_i64(*($0 + [168]), *(($0 + [176])), (int_64)-3732754643145121280, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$6 }
	CALL $455($3, $1)
	$6 = [1]
	
.LABEL $label$6
	CALL eosio_assert($6, [9344])
	$6 = ($0 + [208])
	$1 = [0]
	$11 = [0]
	$5 = ($0 + [216])
	$4 = CALL db_lowerbound_i64(*($0 + [208]), *($5), (int_64)-3732754643092393472, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	CALL $504($6, $4)
	$11 = [1]
	
.LABEL $label$7
	CALL eosio_assert($11, [5104])
	CALL eosio_assert((int_64)(*(CALL $504($6, CALL $fimport$25(*($6), *($5), (int_64)-3732754643092393472, (int_64)0)) + [8]) == 0), [9376])
	$5 = CALL db_lowerbound_i64(*($6), *($5), (int_64)-3732754643092393472, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	$1 = CALL $504($6, $5)
	
.LABEL $label$8
	$8 = *($0)
	*($12 + [8]) = $0
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [352])
	CALL $834($6, $1, $8, ($12 + [8]))
	$6 = [0]
	$1 = CALL db_lowerbound_i64(*(($0 + [168])), *(($0 + [176])), (int_64)-3732754643145121280, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$9 }
	$6 = CALL $455($3, $1)
	
.LABEL $label$9
	$8 = *($0)
	*($12 + [8]) = $0
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [352])
	CALL $835($3, $6, $8, ($12 + [8]))
	*(($12 + [40])) = [0]
	*($12 + [24]) = (int_64)-1
	$8 = *($0)
	*($12 + [8]) = $8
	*($12 + [16]) = $8
	*($12 + [32]) = (int_64)0
	$6 = CALL db_lowerbound_i64($8, $8, (int_64)-3732754643145121248, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$10 }
	CALL $836(($12 + [8]), $6)
	$6 = [0]
	$1 = CALL db_lowerbound_i64(*($12 + [8]), *(($12 + [16])), (int_64)-3732754643145121248, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$11 }
	$6 = CALL $836(($12 + [8]), $1)
	
.LABEL $label$11
	$8 = *($0)
	*($12) = $0
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [352])
	CALL $837(($12 + [8]), $6, $8, $12)
	
.LABEL $label$10
	$6 = [0]
	$1 = CALL db_lowerbound_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-3732485072926388848, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$12 }
	$6 = CALL $512($2, $1)
	
.LABEL $label$12
	$8 = *($0)
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [352])
	CALL $838($2, $6, $8, $12)
	$0 = *($12 + [32])
	if ( ($0 == 0) ){ goto $label$13 }
	$2 = ($12 + [36])
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = ($6 + [-24])
	$1 = *($6)
	*($6) = [0]
	if ( ($1 == 0) ){ goto $label$17 }
	CALL $867($1)
	
.LABEL $label$17
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$16 }
	$6 = *(($12 + [32]))
	goto $label$14 
	
.LABEL $label$15
	$6 = $0
	
.LABEL $label$14
	*($2) = $0
	CALL $867($6)
	
.LABEL $label$13
	*([0] + [4]) = ($12 + [48])
}

void .FUNC $832 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	$2 = *($0)
	$4 = *($0 + [4])
	*($1) = *(*(*($4) + [4]))
	$3 = *(*($4 + [4]))
	*($1 + [16]) = (int_64)0
	*($1 + [8]) = $3
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 + [16]), ($1 + [16]), [8])
	$3 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-6017485966751858688, *(*($0 + [8])), $3, $5, [24])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $835 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$8 = (*([0] + [4]) - [16])
	$11 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [36]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$10 = [0]
	$3 = *($3)
	$5 = CALL db_lowerbound_i64(*($3 + [208]), *(($3 + [216])), (int_64)-3732754643092393472, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$10 = CALL $504(($3 + [208]), $5)
	
.LABEL $label$1
	$3 = [24]
	CALL eosio_assert(((int_64)*(($10 + [24])) == (int_64)*(($1 + [16]))), [3360])
	$9 = (int_64)
	*($1 + [8]) = $9(*($1 + [8]) - *($10 + [16])))
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [3440])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$5 = ($1 + [24])
	$6 = *($1 + [24])
	$10 = *(($1 + [28]))
	$7 = ($10 - $6)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [1]))
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$3 }
	$3 = (($7 & [-2]) + $3)
	
.LABEL $label$3
	if ( ($3 <= [513]) ){ goto $label$5 }
	$10 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$10 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$4
	*($11) = $10
	$8 = ($10 + $3)
	*($11 + [8]) = $8
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [576])
	CALL memcpy($10, $1, [8])
	$6 = ($10 + [8])
	CALL eosio_assert(((int_32)($8 - $6) > (int_32)[7]), [576])
	CALL memcpy($6, ($1 + [8]), [8])
	$6 = ($10 + [16])
	CALL eosio_assert(((int_32)($8 - $6) > (int_32)[7]), [576])
	CALL memcpy($6, ($1 + [16]), [8])
	*($11 + [4]) = ($10 + [24])
	CALL $463($11, $5)
	CALL db_update_i64(*($1 + [40]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($10)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $834 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [32])
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$3 = *($3)
	$3 = CALL $455(($3 + [168]), CALL $fimport$25(*($3 + [168]), *(($3 + [176])), (int_64)-3732754643145121280, (int_64)0))
	$10 = *($3 + [8])
	$11 = $12
	CALL __multi3($11, $10, (int_64)$10 >> (int_64)63), (int_64)5, (int_64)0)
	$7 = *(($3 + [16]))
	$10 = *(($11 + [8]))
	$8 = *($11)
	CALL eosio_assert(( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$10 < (int_64)0) : (int_64)($10 == 0) ), [4000])
	CALL eosio_assert(( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$10 > (int_64)-1) : ((int_64)$10 == (int_64)-1) ), [4032])
	CALL eosio_assert([1], [4064])
	CALL eosio_assert([1], [4080])
	*(($1 + [24])) = $7
	*($1 + [16]) = ((int_64)$8 / (int_64)100)
	*($1 + [8]) = (int_64)1
	*($1 + [48]) = (int_64)0
	*($1 + [56]) = (int_64)0
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$5 = *($1 + [32])
	$6 = *(($1 + [36]))
	$9 = ($6 - $5)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [1]))
	$3 = [32]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	$3 = (($9 & [-2]) + $3)
	
.LABEL $label$2
	$6 = ($3 + [16])
	if ( ($6 <= [513]) ){ goto $label$4 }
	$3 = CALL malloc($6)
	goto $label$3 
	
.LABEL $label$4
	$3 = ($12 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$3
	*($11 + [20]) = $3
	*($11 + [16]) = $3
	*($11 + [24]) = ($3 + $6)
	CALL $822(($11 + [16]), $1)
	CALL db_update_i64(*($1 + [68]), $2, $3, $6)
	if ( ($6 <= [513]) ){ goto $label$5 }
	CALL free($3)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [32])
}

void .FUNC $837 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = *([0] + [4])
	$8 = $9
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$7 = [0]
	$3 = *($3)
	$5 = CALL db_lowerbound_i64(*($3 + [208]), *(($3 + [216])), (int_64)-3732754643092393472, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $504(($3 + [208]), $5)
	
.LABEL $label$1
	$5 = ($1 + [16])
	CALL eosio_assert(((int_64)*(($7 + [24])) == (int_64)*($5)), [3504])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($7 + [16]))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [3584])
	*($1 + [24]) = (*($1 + [24]) + [1])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$7 = $9
	$3 = ($7 + [-32])
	*([0] + [4]) = $3
	CALL eosio_assert([1], [576])
	CALL memcpy($3, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 + [-24]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 + [-16]), $5, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 + [-8]), ($1 + [24]), [4])
	CALL db_update_i64(*($1 + [32]), $2, $3, [28])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$2 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*([0] + [4]) = $8
}

int_32 .FUNC $836 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [128])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $866([40])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1120])
	*($4 + [28]) = $0
	*($4 + [24]) = [0]
	CALL $839(($8 + [32]), $4)
	*($4 + [32]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [32])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $840($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $867($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $867 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $626 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [10]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [14]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [18]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [28]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

int_32 .FUNC $290 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $866([96])
	$4 = CALL $294($6)
	*($6 + [80]) = $0
	CALL $298(($8 + [32]), $4)
	*($6 + [88]) = [-1]
	*($6 + [84]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [84])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $296(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $627 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $628 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [9]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [10]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [11]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [14]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [15]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [18]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [22]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [26]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [28]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [30]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [31]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [34]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [36]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [38]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [41]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [42]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [43]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [44]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [49]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [50]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [52]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $540 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = *($1 + [16])
	$2 = ($1 + [24])
	$6 = *($2)
	$4 = *($0)
	CALL eosio_assert(((int_64)*($4 + [8]) == (int_64)$6), [3360])
	$3 = (int_64)
	CALL eosio_assert(((int_64)$3($3 - *($4))) > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [3440])
	if ( ((int_64)$3 >= (int_64)0) ){ goto $label$1 }
	CALL eosio_assert([1], [1248])
	$3 = (int_64)5524308
	$6 = (int_64)1414222852
	$4 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$5 = [0]
	
.LABEL $label$2
	CALL eosio_assert($5, [1120])
	$3 = (int_64)0
	
.LABEL $label$1
	*($2) = $6
	*(($1 + [16])) = $3
	$4 = *($0)
	CALL eosio_assert(((int_64)*($4 + [8]) == (int_64)*(($1 + [40]))), [3504])
	$3 = ((int_64)*($1 + [32]) + (int_64)*($4))
	*($1 + [32]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [32]) < (int_64)4611686018427387904), [3584])
}

int_32 .FUNC $543 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [576])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [576])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [576])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $87(CALL $86($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $570 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [16]) = (*($1 + [16]) + *(*($3)))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [21])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $276(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $571 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	*($9 + [94]) = $2
	*($9 + [88]) = $3
	*(($9 + [80])) = [0]
	*($9 + [64]) = (int_64)-1
	*($9 + [72]) = (int_64)0
	$4 = *($0)
	*($9 + [48]) = $4
	*($9 + [56]) = $4
	$5 = ((int_64)(CASTING uint_64)(uint_32 $1) + (int_64)65529)
	*($9 + [40]) = $5
	$6 = (CASTING uint_64)(uint_32 $2)
	$7 = *(($0 + [72]))
	$3 = *(($0 + [76]))
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$1 }
	$2 = ($3 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$2:
	if ( ((int_64)*(*($2)) == (int_64)$6) ){ goto $label$1 }
	$3 = $2
	$1 = ($2 + [-24])
	$2 = $1
	if ( ((int_32)($1 + $8) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [48])
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$8 }
	$1 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*(($1 + [20])) == (int_32)$2), [32])
	*($9 + [36]) = $1
	*($9 + [32]) = $2
	if ( $1 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$8
	$1 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-4860070093188497408, $6)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$6 }
	$1 = CALL $229($2, $1)
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$2), [32])
	*($9 + [36]) = $1
	*($9 + [32]) = $2
	
.LABEL $label$7
	$2 = CALL db_find_i64($4, $4, (int_64)-7947854319410216960, $5)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL $63(($9 + [48]), $2)
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)($9 + [48])), [32])
	$6 = *($0)
	*($9 + [20]) = ($9 + [94])
	*($9 + [16]) = ($9 + [32])
	*($9 + [24]) = ($9 + [88])
	CALL eosio_assert([1], [352])
	CALL $573(($9 + [48]), $2, $6, ($9 + [16]))
	$3 = *($9 + [72])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$9
	$6 = *($0)
	*($9 + [20]) = ($9 + [32])
	*($9 + [16]) = ($9 + [40])
	*($9 + [24]) = ($9 + [94])
	*($9 + [28]) = ($9 + [88])
	CALL $572(($9 + [8]), ($9 + [48]), $6, ($9 + [16]))
	$3 = *($9 + [72])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	*($9 + [36]) = [0]
	*($9 + [32]) = $2
	
.LABEL $label$5
	$3 = *($9 + [72])
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = ($9 + [76])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $867($1)
	
.LABEL $label$13
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$12 }
	$2 = *(($9 + [72]))
	goto $label$10 
	
.LABEL $label$11
	$2 = $3
	
.LABEL $label$10
	*($8) = $3
	CALL $867($2)
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [96])
}

void .FUNC $572 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([64]))) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = [0]
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = $1
	CALL $574(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [52])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $69(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $542 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [576])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [576])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [576])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $574 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$5 = *($0 + [4])
	*($1) = *(*($5))
	$2 = *($0)
	$4 = (*(*(*($5 + [4]) + [4]) + [9]) + [-1])
	if ( ((uint_32)$4 > (uint_32)[4]) ){ goto $label$1 }
	goto $label$7 
	
.LABEL $label$7
	*($1 + [8]) = [1]
	goto $label$1 
	
.LABEL $label$6
	*($1 + [28]) = [1]
	goto $label$1 
	
.LABEL $label$5
	*($1 + [12]) = [1]
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)((uint_32)*(*($5 + [8])) % (uint_32)[20]) != (int_32)[9]) ){ goto $label$2 }
	*($1 + [20]) = [1]
	goto $label$1 
	
.LABEL $label$3
	*($1 + [24]) = [1]
	goto $label$1 
	
.LABEL $label$2
	*($1 + [16]) = [1]
	
.LABEL $label$1
	*($1 + [40]) = *(*($5 + [12]))
	$7 = $7
	$5 = ($7 + [-48])
	*([0] + [4]) = $5
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($7 + [-4])
	CALL $62($6, $1)
	$3 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-7947854319410216960, *(*($0 + [8])), $3, $5, [44])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
	$4
}

int_32 .FUNC $575 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [10]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [14]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [18]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [22]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC $576 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $577 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($2 + [4]), $3, [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$1 = *($1)
	*($4 + [15]) = *(*($0 + [12]))
	CALL eosio_assert(((int_32)(*($1 + [8]) - *($1 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($1 + [4]), ($4 + [15]), [1])
	*($1 + [4]) = (*($1 + [4]) + [1])
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $578 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [9]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [10]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [11]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [14]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [18]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [22]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $545 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$2 = *($0)
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$4 = *($4 + [4])
	*($1 + [8]) = *($4)
	*(($5 = ($1 + [16]))) = *(($4 + [8]))
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert([1], [576])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 + [16]), $5, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 + [24]), ($1 + [24]), [8])
	$3 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)-3732452873091252224, *(*($0 + [8])), $3, $6, [32])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $473 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [128])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$5 = *($3)
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*(($1 + [24]))), [3360])
	$6 = (int_64)
	*($1 + [16]) = $6(*($1 + [16]) - *($5)))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [3440])
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [56]))), [3504])
	$6 = ((int_64)*($1 + [48]) + (int_64)*($3))
	*($1 + [48]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [48]) < (int_64)4611686018427387904), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($7 + [120]) = ($7 + [101])
	*($7 + [116]) = $7
	*($7 + [112]) = $7
	CALL $384(($7 + [112]), $1)
	CALL db_update_i64(*($1 + [116]), $2, $7, [101])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [128])
}

int_32 .FUNC $472 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [96]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [104]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [112]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [120]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [128]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $475 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [56]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2928])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)6299033814149437440)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2864])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2864])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $474(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $474 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $866([64])
	$4 = CALL $477($6)
	*($6 + [52]) = $0
	CALL $481(($8 + [32]), $4)
	*($6 + [56]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [56])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $479(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [40]) & [1]) == 0) ){ goto $label$10 }
	CALL $867(*(($4 + [48])))
	
.LABEL $label$10
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $477 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($3 = ($0 + [24]))) = (int_64)1397703940
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*($0 + [32]) = (int_64)0
	*($0 + [40 align=4]) = (int_64)0
	*(($0 + [48])) = [0]
	return $0
}

void .FUNC $476 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $866([64])
	CALL $477($3)
	*($3 + [52]) = $1
	CALL $478(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [56])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $479(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$4 }
	CALL $867(*(($1 + [48])))
	
.LABEL $label$4
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $231 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	$11 = $12
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*(*($3)) = (*($1 + [8]) + [1])
	$5 = *($3 + [8])
	$4 = *($1)
	*($1) = *(*($3 + [4]))
	*($1 + [8]) = *(*($3))
	$10 = *($3)
	$8 = ($1 + [16])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)*(($1 + [20]))) ){ goto $label$2 }
	*($6) = *($10)
	*(($6 + [8])) = *(($10 + [8]))
	*($8) = (*($8) + [12])
	$8 = ($1 + [12])
	goto $label$1 
	
.LABEL $label$2
	$8 = ($1 + [12])
	CALL $242($8, $10)
	
.LABEL $label$1
	$6 = ($1 + [8])
	CALL $243(*($5 + [108]), *(*($3 + [12])), [1], *(*($3 + [16])))
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$3 = [12]
	$5 = *($8)
	$10 = *(($1 + [16]))
	$7 = ($10 - $5)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[12]))
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$5 == (int_32)$10) ){ goto $label$4 }
	$3 = ((((int_32)((uint_32)($7 + [-12]) / (uint_32)[12]) * (int_32)[10]) + $3) + [10])
	
.LABEL $label$4
	if ( ($3 <= [513]) ){ goto $label$6 }
	$10 = CALL malloc($3)
	goto $label$5 
	
.LABEL $label$6
	$10 = ($12 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$5
	*($11) = $10
	$12 = ($10 + $3)
	*($11 + [8]) = $12
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [576])
	CALL memcpy($10, $1, [8])
	$5 = ($10 + [8])
	CALL eosio_assert(((int_32)($12 - $5) > (int_32)[3]), [576])
	CALL memcpy($5, $6, [4])
	*($11 + [4]) = ($10 + [12])
	CALL $244($11, $8)
	CALL db_update_i64(*($1 + [28]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL free($10)
	
.LABEL $label$7
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($11 + [16])
}

int_32 .FUNC $679 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [208])
	*([0] + [4]) = $6
	*($6 + [200]) = $1
	*($6 + [196]) = $2
	*($6 + [192]) = $3
	CALL require_auth($1)
	CALL $269(($6 + [184]), *($0 + [60]), $1, [0])
	*($6 + [183]) = [0]
	$5 = *($6 + [184])
	*($6 + [168]) = $5
	*($6 + [8 align=4]) = $5
	if ( (CALL $680($0, $1, $2, $3, [1], [0], ($6 + [183]), ($6 + [8])) == 0) ){ goto $label$5 }
	$3 = ($0 + [60])
	$5 = CALL $91(*($3))
	*($6 + [160]) = $5
	$2 = *($3)
	CALL $883(($6 + [96]), $4)
	CALL $92(($6 + [112]), $2, $5, $1, ($6 + [96]), ($6 + [128]))
	if ( ((*($6 + [96]) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*($6 + [104]))
	
.LABEL $label$6
	*(($6 + [88])) = [0]
	*($6 + [72]) = (int_64)-1
	*($6 + [80]) = (int_64)0
	$1 = *($0)
	*($6 + [56]) = $1
	*($6 + [64]) = $1
	*($6 + [32]) = $4
	*($6 + [28]) = ($6 + [200])
	*($6 + [24]) = ($6 + [160])
	*($6 + [36]) = ($6 + [112])
	*($6 + [40]) = ($6 + [128])
	*($6 + [44]) = ($6 + [196])
	*($6 + [48]) = ($6 + [192])
	CALL $681(($6 + [16]), ($6 + [56]), $1, ($6 + [24]))
	CALL $95(*($3), *($6 + [200]), *($6 + [160]))
	$2 = *($6 + [80])
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = (($6 + [56]) + [28])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$7:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	if ( ((*($0 + [32]) & [1]) == 0) ){ goto $label$9 }
	CALL $867(*(($0 + [40])))
	
.LABEL $label$9
	if ( ((*($0 + [20]) & [1]) == 0) ){ goto $label$10 }
	CALL $867(*(($0 + [28])))
	
.LABEL $label$10
	CALL $867($0)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$7 }
	$0 = *(($6 + [80]))
	goto $label$3 
	
.LABEL $label$5
	$0 = *($6 + [183])
	goto $label$1 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $867($0)
	
.LABEL $label$2
	if ( ((*($6 + [112]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*($6 + [120]))
	
.LABEL $label$11
	$0 = [0]
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [208])
	return int_32(($0 << [24]) >> [24])
}

void .FUNC $551 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($7 + [24]) = (int_64))((int_64)0 - *($1 + [8]))
	$4 = *($1)
	$5 = ($1 + [16])
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [3504])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [576])
	$3 = ($1 + [8])
	CALL memcpy(($7 | [8]), $3, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 + [16]), $5, [8])
	CALL db_update_i64(*($1 + [28]), $2, $7, [24])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($7 + [40]) = (int_64))((int_64)0 - *($3))
	if ( (CALL memcmp(($7 + [24]), ($7 + [40]), [8]) == 0) ){ goto $label$2 }
	$3 = ($1 + [32])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3732485072939384832, ($7 + [32]), $4)
	*($3) = $1
	
.LABEL $label$3
	CALL db_idx64_update($1, $2, ($7 + [40]))
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $677 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [36]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [41]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

int_32 .FUNC $676 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	$5 = CALL $413($0)
	*($0 + [44]) = $1
	$1 = *($2 + [4])
	*($0) = *(*($1))
	$3 = *($2)
	$6 = *($1 + [4])
	*($0 + [16]) = *($6)
	*(($0 + [24])) = *(($6 + [8]))
	*($0 + [32]) = *(*($1 + [8]) + [4])
	*($0 + [36]) = *(*($1 + [8]) + [12])
	*($0 + [40]) = *(*($1 + [8]) + [7])
	*($0 + [41]) = *(*($1 + [8]) + [8])
	*($0 + [8]) = *(*($1 + [12]))
	*($7 + [56]) = ($7 + [40])
	*($7 + [52]) = $7
	*($7 + [48]) = $7
	CALL $677(($7 + [48]), $5)
	$4 = *($0)
	*($0 + [48]) = CALL db_store_i64(*($3 + [8]), (int_64)-7949128882289606656, *(*($2 + [8])), $4, $7, [40])
	if ( (uint_64)($4 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [64])
	return $0
}

void .FUNC $675 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	$11 = $12
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$5 = ($1 + [12])
	$4 = *($1)
	$9 = *($1 + [12])
	$7 = ($1 + [16])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$1 }
	$6 = ((int_32)($8 - $9) / (int_32)[20])
	$10 = *(*($3))
	$8 = [0]
	
.LOOP $label$3:
	if ( ((int_64)*($9) != (int_64)$10) ){ goto $label$4 }
	if ( (*(($9 + [6])) == 0) ){ goto $label$2 }
	
.LABEL $label$4
	$9 = ($9 + [20])
	$8 = ($8 + [1])
	if ( ($8 <= $6) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*(($9 + [16])) = *(*($3 + [4]))
	*(*($3 + [8])) = [1]
	
.LABEL $label$1
	CALL eosio_assert([1], [512])
	$6 = *($5)
	$8 = *($7)
	$7 = ($8 - $6)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[20]))
	$9 = [29]
	
.LOOP $label$5:
	$9 = ($9 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$7 }
	$8 = (((int_32)((uint_32)($7 + [-20]) / (uint_32)[20]) * (int_32)[17]) + $9)
	goto $label$6 
	
.LABEL $label$7
	$8 = ($9 + [-17])
	
.LABEL $label$6
	if ( ($8 <= [513]) ){ goto $label$9 }
	$9 = CALL malloc($8)
	goto $label$8 
	
.LABEL $label$9
	$9 = ($12 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$8
	*($11) = $9
	$6 = ($9 + $8)
	*($11 + [8]) = $6
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	$12 = ($9 + [8])
	CALL eosio_assert(((int_32)($6 - $12) > (int_32)[3]), [576])
	CALL memcpy($12, ($1 + [8]), [4])
	*($11 + [4]) = ($9 + [12])
	CALL $400($11, $5)
	CALL db_update_i64(*($1 + [28]), $2, $9, $8)
	if ( ($8 <= [513]) ){ goto $label$10 }
	CALL free($9)
	
.LABEL $label$10
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $674 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($9 + [24]) = $2
	*($9 + [16]) = $3
	$4 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [8])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$6), [32])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	$8 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)8526756653867991040, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $386($6, $8)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$6), [32])
	
.LABEL $label$3
	$8 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($8, [4304])
	*($9 + [15]) = [0]
	$1 = *($0)
	*($9 + [4]) = ($9 + [16])
	*($9) = ($9 + [24])
	*($9 + [8]) = ($9 + [15])
	CALL eosio_assert($8, [352])
	CALL $675($6, $7, $1, $9)
	CALL eosio_assert(*($9 + [15]), [4384])
	*([0] + [4]) = ($9 + [32])
}

void .FUNC $673 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $866([56])
	CALL $676($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [48])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $415(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $672 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [112])
	*([0] + [4]) = $15
	*($15 + [104]) = $1
	CALL require_auth($1)
	CALL _ZN13admin_control15check_blacklistEN5eosio4nameE(*($0 + [108]), $1)
	CALL $269(($15 + [64]), *($0 + [108]), $1, [1])
	$12 = *($15 + [68])
	$13 = *($12 + [32])
	$12 = *($12 + [36])
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$17() / (uint_64)(int_64)1000000)) - *([0] + [12])) >= (uint_32)($13 + (CASTING int_32)(float_64 ((float_64)((float_64)(CASTING float_64)(uint_32 $12) / (float_64)(float_64)100) * (float_64)(float_64)10)))), [6912])
	$7 = *(($8 + [32]))
	$8 = *($0 + [92])
	$14 = *(($8 + [36]))
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$1 }
	$12 = ($14 + [-24])
	$9 = ([0] - $7)
	
.LOOP $label$2:
	if ( ((int_64)*(*($12)) == (int_64)$1) ){ goto $label$1 }
	$14 = $12
	$13 = ($12 + [-24])
	$12 = $13
	if ( ((int_32)($13 + $9) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$13 = ($8 + [8])
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$4 }
	$12 = *(($14 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$13), [32])
	goto $label$3 
	
.LABEL $label$4
	$12 = [0]
	$14 = CALL db_find_i64(*(($8 + [8])), *(($8 + [16])), (int_64)8526756653867991040, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$3 }
	$12 = CALL $386($13, $14)
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$13), [32])
	
.LABEL $label$3
	$5 = *(($0 + [92]))
	$6 = *($4)
	$4 = ( ($12 + [12]) ? ($8 + [68]) : $12 )
	$12 = (*($4 + [4]) - $6)
	if ( ((int_32)$12 < (int_32)[20]) ){ goto $label$6 }
	$13 = (CASTING uint_32)(uint_64 $2)
	$14 = (((uint_32)$12 / (uint_32)[20]) + [-1])
	$12 = [0]
	
.LOOP $label$7:
	$7 = ($14 - $12)
	$9 = (((int_32)$7 / (int_32)[2]) + $12)
	$11 = ($6 + ((int_32)$9 * (int_32)[20]))
	$8 = *($11)
	if ( ($8 <= $13) ){ goto $label$8 }
	if ( ((uint_32)$8 <= (uint_32)$13) ){ goto $label$5 }
	$14 = ($9 + [-1])
	if ( ((int_32)$7 > (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$12 = ($9 + [1])
	if ( ((int_32)$14 > (int_32)$9) ){ goto $label$7 }
	
.LABEL $label$6
	CALL eosio_assert([0], [7184])
	$11 = ($5 + [80])
	
.LABEL $label$5
	CALL eosio_assert((*($11 + [16]) == 0), [6976])
	CALL eosio_assert((*($11 + [6]) == 0), [7216])
	$13 = [0]
	*(($15 + [96])) = [0]
	*($15 + [88]) = (int_64)0
	*($15 + [80]) = (int_64)-1
	$1 = *($0)
	*($15 + [64]) = $1
	*($15 + [72]) = $1
	$12 = [0]
	$14 = CALL db_find_i64($1, $1, (int_64)-4921685625297436672, *($11 + [4]))
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$9 }
	$12 = CALL $621(($15 + [64]), $14)
	CALL eosio_assert(((int_32)*($12 + [56]) == (int_32)($15 + [64])), [32])
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [7248])
	$10 = *(($3 + [8]))
	*((($15 + [48]) + [8])) = $10
	$12 = *($12 + [10])
	$1 = *($3)
	*(($15 + [8])) = $10
	*($15 + [48]) = $1
	*($15) = $1
	CALL $654($0, $15, $12, [0])
	$14 = *($4)
	$9 = *(($4 + [4]))
	if ( ((int_32)$9 == (int_32)$14) ){ goto $label$10 }
	$12 = ($14 + [16])
	$9 = ((int_32)($9 - $14) / (int_32)[20])
	$13 = [0]
	$14 = [0]
	
.LOOP $label$11:
	$13 = (((int_32)*($12) != (int_32)[0]) + $13)
	$12 = ($12 + [20])
	$14 = ($14 + [1])
	if ( ($14 <= $9) ){ goto $label$11 }
	
.LABEL $label$10
	$1 = *($15 + [104])
	$6 = *(($7 + [40]))
	$7 = *($0 + [104])
	$9 = *(($7 + [44]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$12 }
	$12 = ($9 + [-24])
	$8 = ([0] - $6)
	
.LOOP $label$13:
	if ( ((int_64)*(*($12)) == (int_64)$1) ){ goto $label$12 }
	$9 = $12
	$14 = ($12 + [-24])
	$12 = $14
	if ( ((int_32)($14 + $8) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	$12 = ($7 + [16])
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$15 }
	CALL eosio_assert(((int_32)*(*(($9 + [-24])) + [20]) == (int_32)$12), [32])
	goto $label$14 
	
.LABEL $label$15
	$14 = CALL db_find_i64(*(($7 + [16])), *(($7 + [24])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert(((int_32)*(CALL $225($12, $14) + [20]) == (int_32)$12), [32])
	
.LABEL $label$14
	CALL eosio_assert(((int_32)$13 < (int_32)CALL $655($0, *($15 + [104]))), [7024])
	$1 = CALL $659($0, [2])
	*($15 + [40]) = ( (int_64)1 ? $1 : (int_64)($1 == 0) )
	$1 = *($0)
	*($15 + [28]) = $3
	*($15 + [32]) = $11
	*($15 + [24]) = ($15 + [40])
	*($15 + [36]) = ($15 + [104])
	CALL $673(($15 + [16]), ($0 + [8]), $1, ($15 + [24]))
	CALL $674(*(($0 + [92])), *($15 + [104]), $2, *($15 + [40]))
	$14 = *($15 + [88])
	if ( ($14 == 0) ){ goto $label$16 }
	$9 = ($15 + [92])
	$12 = *($9)
	if ( ((int_32)$12 == (int_32)$14) ){ goto $label$18 }
	
.LOOP $label$19:
	$12 = ($12 + [-24])
	$13 = *($12)
	*($12) = [0]
	if ( ($13 == 0) ){ goto $label$20 }
	CALL $867($13)
	
.LABEL $label$20
	if ( ((int_32)$14 != (int_32)$12) ){ goto $label$19 }
	$12 = *(($15 + [88]))
	goto $label$17 
	
.LABEL $label$18
	$12 = $14
	
.LABEL $label$17
	*($9) = $14
	CALL $867($12)
	
.LABEL $label$16
	*([0] + [4]) = ($15 + [112])
}

void .FUNC $671 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($0 + [32]), *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($0 + [36]), *($3 + [4]), [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
}

void .FUNC $670 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	$11 = $12
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$5 = ($1 + [12])
	$4 = *($1)
	$8 = *($1 + [12])
	$7 = ($1 + [16])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$1 }
	$9 = ($8 + [16])
	$6 = ((int_32)($6 - $8) / (int_32)[20])
	$10 = *(*($3))
	$8 = [0]
	
.LOOP $label$3:
	if ( ((int_64)*($9) == (int_64)$10) ){ goto $label$2 }
	$9 = ($9 + [20])
	$8 = ($8 + [1])
	if ( ($8 <= $6) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($9) = [0]
	*(*($3 + [4])) = [1]
	
.LABEL $label$1
	CALL eosio_assert([1], [512])
	$6 = *($5)
	$8 = *($7)
	$7 = ($8 - $6)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[20]))
	$9 = [29]
	
.LOOP $label$4:
	$9 = ($9 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$6 }
	$8 = (((int_32)((uint_32)($7 + [-20]) / (uint_32)[20]) * (int_32)[17]) + $9)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($9 + [-17])
	
.LABEL $label$5
	if ( ($8 <= [513]) ){ goto $label$8 }
	$9 = CALL malloc($8)
	goto $label$7 
	
.LABEL $label$8
	$9 = ($12 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$7
	*($11) = $9
	$6 = ($9 + $8)
	*($11 + [8]) = $6
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	$12 = ($9 + [8])
	CALL eosio_assert(((int_32)($6 - $12) > (int_32)[3]), [576])
	CALL memcpy($12, ($1 + [8]), [4])
	*($11 + [4]) = ($9 + [12])
	CALL $400($11, $5)
	CALL db_update_i64(*($1 + [28]), $2, $9, $8)
	if ( ($8 <= [513]) ){ goto $label$9 }
	CALL free($9)
	
.LABEL $label$9
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($11 + [16])
}

int_32 .FUNC $848 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $849($0, ($1 + [20]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [4])
	return *($0 + [4]) = (*($0 + [4]) + [4])
}

int_32 .FUNC $849 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	$7 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [6]))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$8 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($9 + [16]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [576])
	CALL memcpy(*($8), ($9 + [16]), [1])
	$6 = (*($8) + [1])
	*($8) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$8 = *($1)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$2 }
	$3 = ($9 + [28])
	$4 = ($9 + [36])
	$1 = ($9 + [40])
	$5 = ($9 + [44])
	
.LOOP $label$3:
	*($9 + [8]) = $0
	*($9 + [16]) = $8
	*((($9 + [16]) + [8])) = ($8 + [4])
	*($3) = ($8 + [6])
	*((($9 + [16]) + [16])) = ($8 + [7])
	*($4) = ($8 + [8])
	*($1) = ($8 + [16])
	*($9 + [20]) = ($8 + [2])
	*($5) = ($8 + [32])
	CALL $850(($9 + [16]), ($9 + [8]))
	$6 = ($0 + [4])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - *($6)) > (int_32)[1]), [576])
	CALL memcpy(*($6), ($8 + [48]), [2])
	*($6) = (*($6) + [2])
	CALL $851($0, ($8 + [52]))
	$8 = ($8 + [64])
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [48])
	return $0
}

void .FUNC $874 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = *($0)
	$2 = ($4 & [1])
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ((*($0) & [-2]) + [-1])
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [10]
	$4 = uint_32($4 >> [1])
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $875($0, $3, [1], $3, $3, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($4 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($4 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $4)) + [1]) = [0]
	*($0) = $1
}

int_32 .FUNC $844 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [36]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2928])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-5290167705893076992)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2864])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2864])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $843(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $845 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$5 = [0]
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$6 = *($0)
	*($8 + [8]) = $6
	*($8 + [16]) = $6
	$0 = [0]
	$1 = CALL db_find_i64($6, $6, (int_64)-4921685625297436672, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $621(($8 + [8]), $1)
	CALL eosio_assert(((int_32)*($0 + [56]) == (int_32)($8 + [8])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [6448])
	$3 = *($0 + [24])
	$1 = ($2 & [255])
	$4 = ((uint_32)(((int_32)( $1 ? [100] : ($1 <= [100]) ) * (int_32)$3) << [1]) / (uint_32)[100])
	$1 = uint_32($2 >> [24])
	$7 = ($1 & [4])
	if ( (($1 & [2]) == 0) ){ goto $label$2 }
	$1 = (uint_32($2 >> [8]) & [255])
	$5 = *($0 + [26])
	$5 = ((*($0 + [20]) - $5) + ((uint_32)(((int_32)( $1 ? [100] : ($1 <= [100]) ) * (int_32)$5) << [1]) / (uint_32)[100]))
	
.LABEL $label$2
	$1 = *($0 + [22])
	if ( $7 ){ goto $label$4 }
	$7 = *($0 + [28])
	$2 = [0]
	goto $label$3 
	
.LABEL $label$4
	$2 = (uint_32($2 >> [16]) & [255])
	$7 = *($0 + [28])
	$2 = (($1 - $7) + ((uint_32)(((int_32)( $2 ? [100] : ($2 <= [100]) ) * (int_32)$7) << [1]) / (uint_32)[100]))
	
.LABEL $label$3
	$1 = ((int_32)((int_32)(($5 + $4) + $2) * (int_32)[100]) / (int_32)((((($3 << [1]) + *($0 + [20])) + *($0 + [26])) + $1) + ($7 & [65535])))
	$5 = *($8 + [32])
	if ( ($5 == 0) ){ goto $label$5 }
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$9 }
	CALL $867($2)
	
.LABEL $label$9
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($8 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $5
	
.LABEL $label$6
	*($7) = $5
	CALL $867($0)
	
.LABEL $label$5
	*([0] + [4]) = ($8 + [48])
	return $1
}

void .FUNC $846 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [16])
	$14 = $15
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$12 = *($9 + [52])
	$6 = *(*($3))
	$10 = *($1 + [20])
	$9 = ($10 + ($6 << [6]))
	$5 = ($9 + [56])
	$8 = *($5)
	if ( ((int_32)$8 != (int_32)$12) ){ goto $label$5 }
	$11 = *(($3 + [4]))
	goto $label$4 
	
.LABEL $label$5
	$7 = int_32(($8 - $12) >> [4])
	$11 = *(($3 + [4]))
	$13 = *($11)
	$3 = [0]
	
.LOOP $label$6:
	if ( ((int_64)*($12) == (int_64)$13) ){ goto $label$3 }
	$12 = ($12 + [16])
	$3 = ($3 + [1])
	if ( ($3 <= $7) ){ goto $label$6 }
	
.LABEL $label$4
	*($14) = (int_64)0
	*($14 + [8]) = [0]
	*($14) = *($11)
	*($14 + [8]) = [1]
	if ( ((int_32)$8 == (int_32)*((($10 + ($6 << [6])) + [60]))) ){ goto $label$2 }
	*($8) = *($14)
	*(($8 + [8])) = *(($14 + [8]))
	*($5) = (*($5) + [16])
	goto $label$1 
	
.LABEL $label$3
	$12 = ($12 + [8])
	CALL eosio_assert((*($12) <= *(($10 + ($6 << [6])) + [4])), [9616])
	*($12) = (*($12) + [1])
	goto $label$1 
	
.LABEL $label$2
	CALL $847(($9 + [52]), $14)
	
.LABEL $label$1
	*(($12 = ($10 + ($6 << [6]))) + [48]) = (*($12 + [48]) + [1])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$3 = *($1 + [20])
	$6 = *(($1 + [24]))
	$13 = (CASTING uint_64)(uint_32 int_32(($6 - $3) >> [6]))
	$12 = [18]
	
.LOOP $label$7:
	$12 = ($12 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$12 = ($12 + [43])
	$8 = *($3 + [52])
	$7 = *(($3 + [56]))
	$10 = ($7 - $8)
	$13 = (CASTING uint_64)(uint_32 int_32($10 >> [4]))
	
.LOOP $label$10:
	$12 = ($12 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$10 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$11 }
	$12 = ((((int_32)uint_32(($10 + [-16]) >> [4]) * (int_32)[10]) + $12) + [10])
	
.LABEL $label$11
	$3 = ($3 + [64])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($12 <= [513]) ){ goto $label$13 }
	$3 = CALL malloc($12)
	goto $label$12 
	
.LABEL $label$13
	$3 = ($15 - (($12 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$12
	*($14 + [4]) = $3
	*($14) = $3
	*($14 + [8]) = ($3 + $12)
	CALL $848($14, $1)
	CALL db_update_i64(*($1 + [36]), $2, $3, $12)
	if ( ($12 <= [513]) ){ goto $label$14 }
	CALL free($3)
	
.LABEL $label$14
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*([0] + [4]) = ($14 + [16])
}

void .FUNC $847 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$2 = int_32(($6 - $5) >> [4])
	$3 = ($2 + [1])
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$3 }
	$4 = [268435455]
	$7 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($7 >> [4]) > (uint_32)[134217726]) ){ goto $label$5 }
	$4 = int_32($7 >> [3])
	$4 = ( $3 ? $4 : ($4 <= $3) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $866(($4 << [4]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($2 << [4])))) = *($1)
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($6 - $5)
	$6 = ($3 - $1)
	$4 = ($7 + ($4 << [4]))
	$3 = ($3 + [16])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($6, $5, $1)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $867($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $840 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $841 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($3 + [8]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [160])
	CALL memcpy(($3 + [12]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($3 + [16]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($3 + [20]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($3 + [24]), *($1 + [4]), [4])
	*($1 + [4]) = (*($1 + [4]) + [4])
}

void .FUNC $842 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [96])
	*([0] + [4]) = $15
	*($15 + [88]) = $1
	*($15 + [87]) = $3
	*($15 + [80]) = $4
	CALL require_auth($1)
	CALL $558(*($0 + [16]), $5, $1)
	$3 = [0]
	*(($15 + [72])) = [0]
	*($15 + [56]) = (int_64)-1
	$1 = *($0)
	*($15 + [40]) = $1
	*($15 + [48]) = $1
	*($15 + [64]) = (int_64)0
	$4 = [0]
	$14 = CALL db_lowerbound_i64($1, $1, (int_64)-5290167705893076992, (int_64)0)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$1 }
	CALL $843(($15 + [40]), $14)
	$4 = [1]
	
.LABEL $label$1
	CALL eosio_assert($4, [9408])
	*($15 + [36]) = [0]
	*($15 + [32]) = ($15 + [40])
	$6 = *(CALL $844(($15 + [32])) + [4])
	$1 = CALL current_time()
	CALL eosio_assert(((int_64)*($6) == (int_64)(CASTING uint_64)(uint_32 $2)), [9424])
	$2 = (CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000))
	$4 = *($6 + [12])
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$2 }
	$3 = ((uint_32)(*($6 + [16]) + $4) > (uint_32)$2)
	
.LABEL $label$2
	CALL eosio_assert($3, [9456])
	$7 = *($15 + [87])
	CALL eosio_assert(($7 <= int_32((*(($6 + [24])) - *($6 + [20])) >> [6])), [9488])
	$8 = *($6 + [20])
	$4 = ($8 + ($7 << [6]))
	CALL eosio_assert((*($4 + [48]) <= *($4 + [2])), [9504])
	$1 = *($15 + [88])
	$12 = *(($11 + [32]))
	$11 = *($0 + [8])
	$2 = *(($11 + [36]))
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$3 }
	$4 = ($2 + [-24])
	$14 = ([0] - $12)
	
.LOOP $label$4:
	if ( ((int_64)*(*($4)) == (int_64)$1) ){ goto $label$3 }
	$2 = $4
	$3 = ($4 + [-24])
	$4 = $3
	if ( ((int_32)($3 + $14) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	$3 = ($11 + [8])
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$6 }
	$4 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$3), [32])
	goto $label$5 
	
.LABEL $label$6
	$4 = [0]
	$2 = CALL db_find_i64(*(($11 + [8])), *(($11 + [16])), (int_64)8526756653867991040, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = CALL $386($3, $2)
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$3), [32])
	
.LABEL $label$5
	$9 = *(($0 + [8]))
	$13 = *($4)
	$4 = ( ($4 + [12]) ? ($11 + [68]) : $4 )
	$3 = (*($4 + [4]) - $13)
	if ( ((int_32)$3 < (int_32)[20]) ){ goto $label$8 }
	$4 = *($15 + [80])
	$14 = (((uint_32)$3 / (uint_32)[20]) + [-1])
	$2 = [0]
	
.LOOP $label$9:
	$12 = ($14 - $2)
	$11 = (((int_32)$12 / (int_32)[2]) + $2)
	$10 = ($13 + ((int_32)$11 * (int_32)[20]))
	$3 = *($10)
	if ( ($3 <= $4) ){ goto $label$10 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$7 }
	$14 = ($11 + [-1])
	if ( ((int_32)$12 > (int_32)[1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$2 = ($11 + [1])
	if ( ((int_32)$14 > (int_32)$11) ){ goto $label$9 }
	
.LABEL $label$8
	CALL eosio_assert([0], [7184])
	$10 = ($9 + [80])
	$3 = *($9 + [80])
	$4 = *($15 + [80])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$3 == (int_32)$4), [7184])
	$4 = ($8 + ($7 << [6]))
	CALL eosio_assert(((int_32)*($4) == (int_32)*($10 + [4])), [9520])
	CALL eosio_assert(((int_32)*($4 + [8]) == (int_32)*($10 + [7])), [9552])
	$2 = ($0 + [8])
	$3 = CALL $845(*($2), *($10 + [4]), *($10 + [12]))
	CALL eosio_assert(((int_32)*($4 + [6]) <= (int_32)$3), [9584])
	CALL eosio_assert(((int_32)*($4 + [7]) >= (int_32)$3), [9584])
	*($15 + [16]) = (int_64)0
	*($15 + [24]) = [0]
	CALL $301(($15 + [16]), ($15 + [80]))
	CALL $692(*($2), *($15 + [88]), ($15 + [16]))
	$1 = *($0)
	*($15 + [8]) = $0
	*($15 + [4]) = ($15 + [88])
	*($15) = ($15 + [87])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [352])
	CALL $846(($15 + [40]), $6, $1, $15)
	$4 = *($15 + [16])
	if ( ($4 == 0) ){ goto $label$11 }
	*($15 + [20]) = $4
	CALL $867($4)
	
.LABEL $label$11
	$10 = *($15 + [64])
	if ( ($10 == 0) ){ goto $label$12 }
	$6 = ($15 + [68])
	$14 = *($6)
	if ( ((int_32)$14 == (int_32)$10) ){ goto $label$14 }
	
.LOOP $label$15:
	$14 = ($14 + [-24])
	$11 = *($14)
	*($14) = [0]
	if ( ($11 == 0) ){ goto $label$16 }
	$12 = *($11 + [20])
	if ( ($12 == 0) ){ goto $label$17 }
	$13 = ($11 + [24])
	$4 = *($13)
	if ( ((int_32)$4 == (int_32)$12) ){ goto $label$19 }
	$2 = ([0] - $12)
	$4 = ($4 + [-12])
	
.LOOP $label$20:
	$3 = *($4)
	if ( ($3 == 0) ){ goto $label$21 }
	*(($4 + [4])) = $3
	CALL $867($3)
	
.LABEL $label$21
	$4 = ($4 + [-64])
	if ( ((int_32)($4 + $2) != (int_32)[-12]) ){ goto $label$20 }
	$4 = *(($11 + [20]))
	goto $label$18 
	
.LABEL $label$19
	$4 = $12
	
.LABEL $label$18
	*($13) = $12
	CALL $867($4)
	
.LABEL $label$17
	CALL $867($11)
	
.LABEL $label$16
	if ( ((int_32)$14 != (int_32)$10) ){ goto $label$15 }
	$4 = *(($15 + [64]))
	goto $label$13 
	
.LABEL $label$14
	$4 = $10
	
.LABEL $label$13
	*($6) = $10
	CALL $867($4)
	
.LABEL $label$12
	*([0] + [4]) = ($15 + [96])
}

int_32 .FUNC $843 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$7 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($7 = CALL $866([48])) + [8]) = [0]
	*($7) = (int_64)0
	*($7 + [12 align=4]) = (int_64)0
	*($7 + [20 align=4]) = (int_64)0
	*($7 + [28]) = [0]
	*($7 + [32]) = $0
	CALL $852(($8 + [32]), $7)
	*($7 + [36]) = $1
	*($8 + [24]) = $7
	$5 = *($7)
	*($8 + [16]) = $5
	$4 = *($7 + [36])
	*($8 + [12]) = $4
	$1 = ($0 + [28])
	$6 = *($1)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($6 + [8]) = $5
	*($6 + [16]) = $4
	*($8 + [24]) = [0]
	*($6) = $7
	*($1) = ($6 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $853(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$3 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$0 = *($3 + [20])
	if ( ($0 == 0) ){ goto $label$10 }
	$2 = ($3 + [24])
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$12 }
	$1 = ([0] - $0)
	$6 = ($6 + [-12])
	
.LOOP $label$13:
	$4 = *($6)
	if ( ($4 == 0) ){ goto $label$14 }
	*(($6 + [4])) = $4
	CALL $867($4)
	
.LABEL $label$14
	$6 = ($6 + [-64])
	if ( ((int_32)($6 + $1) != (int_32)[-12]) ){ goto $label$13 }
	$6 = *(($3 + [20]))
	goto $label$11 
	
.LABEL $label$12
	$6 = $0
	
.LABEL $label$11
	*($2) = $0
	CALL $867($6)
	
.LABEL $label$10
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $7
}

int_32 .FUNC $273 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $274($0, ($1 + [52]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [9]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [20]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [29]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [1])
	return *($0 + [4]) = (*($0 + [4]) + [1])
}

void .FUNC $272 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$1 = CALL memcpy($1, *($3), [62])
	$4 = *($1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($5 + [72]) = ($5 + [54])
	*($5 + [68]) = $5
	*($5 + [64]) = $5
	CALL $98(($5 + [64]), $1)
	CALL db_update_i64(*($1 + [68]), $2, $5, [54])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
}

void .FUNC $271 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [12]) = (*($1 + [12]) + [-1])
	$4 = *($1)
	CALL eosio_assert([1], [512])
	$8 = *($1 + [52])
	$5 = *(($1 + [56]))
	$9 = (CASTING uint_64)(uint_32 ((int_32)($5 - $8) / (int_32)[20]))
	$7 = [43]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$3:
	$6 = *($8 + [8])
	$6 = ( *($8 + [12]) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$7 = (($6 + $7) + [5])
	$9 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	$8 = ($8 + [20])
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ($7 <= [513]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$5
	*($10 + [4]) = $8
	*($10) = $8
	*($10 + [8]) = ($8 + $7)
	CALL $273($10, $1)
	CALL db_update_i64(*($1 + [68]), $2, $8, $7)
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL free($8)
	
.LABEL $label$7
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $270 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_64 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_64 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	$33 = (*([0] + [4]) - [144])
	*([0] + [4]) = $33
	$24 = *($2)
	if ( ((int_32)*($2 + [4]) == (int_32)$24) ){ goto $label$4 }
	$8 = (($33 + [8]) + [32])
	$7 = (($33 + [56]) | [1])
	$6 = (($33 + [8]) | [1])
	$5 = (($33 + [72]) + [24])
	$4 = (($33 + [56]) | [1])
	$23 = ($2 + [4])
	$22 = ($0 + [12])
	$19 = (($33 + [112]) + [8])
	$20 = (($33 + [72]) + [16])
	$21 = (($33 + [8]) + [28])
	$18 = ($33 + [48])
	$9 = [0]
	
.LOOP $label$5:
	$16 = ((int_32)$9 * (int_32)[20])
	$24 = ($24 + $16)
	$10 = (*($24) + [-1])
	if ( ((uint_32)$10 > (uint_32)[3]) ){ goto $label$6 }
	goto $label$23 
	
.LABEL $label$23
	$10 = *($22)
	$30 = *($3 + [4])
	*($33 + [8]) = *($24 + [4])
	$27 = *($10 + [40])
	*($33 + [72]) = ($33 + [8])
	CALL eosio_assert(((int_32)$30 != (int_32)[0]), [352])
	CALL $275($10, $30, $27, ($33 + [72]))
	goto $label$6 
	
.LABEL $label$22
	$24 = *($24 + [4])
	CALL eosio_assert([1], [1248])
	$15 = (CASTING uint_64)(uint_32 ((int_32)$24 * (int_32)[10000]))
	$27 = (int_64)5524308
	$24 = [0]
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$10 = [1]
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$24 }
	goto $label$18 
	
.LABEL $label$21
	CALL $67(*(($0 + [16])), $1, *($24 + [4]), [3])
	goto $label$6 
	
.LABEL $label$20
	*(($17 = (($33 + [8]) + [8]))) = [0]
	*($33 + [8]) = (int_64)0
	$10 = CALL strlen([3184])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$3 }
	$11 = ($24 + [8])
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$17 }
	*($33 + [8]) = ($10 << [1])
	$30 = $6
	if ( $10 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$19
	$10 = [0]
	
.LABEL $label$18
	CALL eosio_assert($10, [1120])
	$27 = (int_64)0
	$29 = (int_64)59
	$24 = [1088]
	$25 = (int_64)0
	
.LOOP $label$27:
	$26 = (int_64)0
	if ( ((uint_64)$27 > (uint_64)(int_64)11) ){ goto $label$28 }
	$10 = *($24)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$10 = ($10 + [165])
	goto $label$29 
	
.LABEL $label$30
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$26 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$29 & (int_64)4294967295))
	
.LABEL $label$28
	$24 = ($24 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$26 | (int_64)$25)
	$29 = ((int_64)$29 + (int_64)-5)
	if ( ((int_64)$29 != (int_64)-6) ){ goto $label$27 }
	$27 = (int_64)0
	$26 = (int_64)59
	$24 = [1104]
	$28 = (int_64)0
	
.LOOP $label$31:
	if ( ((uint_64)$27 > (uint_64)(int_64)4) ){ goto $label$36 }
	$10 = *($24)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$10 = ($10 + [165])
	goto $label$34 
	
.LABEL $label$36
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$35
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$34
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$33
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	
.LABEL $label$32
	$24 = ($24 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$28 = ((int_64)$29 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$31 }
	*($19) = $28
	*($33 + [112]) = $25
	$27 = (int_64)0
	$29 = (int_64)59
	$24 = [1088]
	$25 = (int_64)0
	
.LOOP $label$37:
	$26 = (int_64)0
	if ( ((uint_64)$27 > (uint_64)(int_64)11) ){ goto $label$38 }
	$10 = *($24)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$10 = ($10 + [165])
	goto $label$39 
	
.LABEL $label$40
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$26 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$29 & (int_64)4294967295))
	
.LABEL $label$38
	$24 = ($24 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$26 | (int_64)$25)
	$29 = ((int_64)$29 + (int_64)-5)
	if ( ((int_64)$29 != (int_64)-6) ){ goto $label$37 }
	$27 = (int_64)0
	$26 = (int_64)59
	$24 = [1104]
	$28 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$27 > (uint_64)(int_64)4) ){ goto $label$46 }
	$10 = *($24)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$10 = ($10 + [165])
	goto $label$44 
	
.LABEL $label$46
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	
.LABEL $label$42
	$24 = ($24 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$28 = ((int_64)$29 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$41 }
	*(($10 = (($33 + [56]) + [8]))) = [0]
	*($33 + [56]) = (int_64)0
	$24 = CALL strlen([3152])
	if ( ((uint_32)$24 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$24 >= (uint_32)[11]) ){ goto $label$14 }
	*($33 + [56]) = ($24 << [1])
	$30 = $4
	if ( $24 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$17
	$31 = (($10 + [16]) & [-16])
	$30 = CALL $866($31)
	*($17) = $30
	*($33 + [8]) = ($31 | [1])
	*($33 + [12]) = $10
	
.LABEL $label$16
	CALL memcpy($30, [3184], $10)
	
.LABEL $label$15
	$32 = [0]
	*(($30 + $10)) = [0]
	$10 = ($31 & [1])
	$31 = *($33 + [8])
	$12 = ($10 & [1])
	$10 = *($11)
	$13 = uint_32($10 >> [1])
	$14 = ( *(($24 + [12])) ? $13 : $12 )
	if ( ((int_32)$14 != (int_32)( *($33 + [12]) ? uint_32($31 >> [1]) : $10 )) ){ goto $label$9 }
	$10 = ( *($17) ? $6 : $10 )
	$30 = ($11 + [1])
	if ( $12 ){ goto $label$11 }
	if ( ($14 == 0) ){ goto $label$10 }
	$24 = ([0] - $13)
	
.LOOP $label$47:
	if ( ((int_32)*($30) != (int_32)*($10)) ){ goto $label$9 }
	$10 = ($10 + [1])
	$30 = ($30 + [1])
	$24 = ($24 + [1])
	if ( $24 ){ goto $label$47 }
	goto $label$10 
	
.LABEL $label$14
	$16 = (($24 + [16]) & [-16])
	$30 = CALL $866($16)
	*($10) = $30
	*($33 + [56]) = ($16 | [1])
	*($33 + [60]) = $24
	
.LABEL $label$13
	CALL memcpy($30, [3152], $24)
	
.LABEL $label$12
	*(($30 + $24)) = [0]
	*((($33 + [72]) + [8])) = $15
	*($20) = (int_64)1414222852
	*(($5 + [4])) = *($33 + [60])
	*(($5 + [8])) = *($10)
	*($33 + [72]) = $1
	*($5) = *($33 + [56])
	*($33 + [56]) = [0]
	*($33 + [60]) = [0]
	*($10) = [0]
	CALL $65(($33 + [128]), CALL $64(($33 + [8]), ($33 + [112]), $25, $28, ($33 + [72])))
	$24 = *($33 + [128])
	CALL send_inline($24, (*($33 + [132]) - $24))
	$24 = *($33 + [128])
	if ( ($24 == 0) ){ goto $label$48 }
	*($33 + [132]) = $24
	CALL $867($24)
	
.LABEL $label$48
	$24 = *($21)
	if ( ($24 == 0) ){ goto $label$49 }
	*($8) = $24
	CALL $867($24)
	
.LABEL $label$49
	$24 = *((($33 + [8]) + [16]))
	if ( ($24 == 0) ){ goto $label$50 }
	*((($33 + [8]) + [20])) = $24
	CALL $867($24)
	
.LABEL $label$50
	if ( ((*($5) & [1]) == 0) ){ goto $label$51 }
	CALL $867(*((($33 + [72]) + [32])))
	
.LABEL $label$51
	if ( ((*($33 + [56]) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*($10))
	goto $label$6 
	
.LABEL $label$11
	if ( ($14 == 0) ){ goto $label$10 }
	$32 = (CALL memcmp(( *(($24 + [16])) ? $30 : $12 ), $10, $14) == 0)
	if ( ((*($33 + [8]) & [1]) == 0) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$10
	$32 = [1]
	
.LABEL $label$9
	if ( (($31 & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $867(*($17))
	
.LABEL $label$7
	if ( ($32 == 0) ){ goto $label$54 }
	$24 = *((*($2) + $16) + [4])
	CALL eosio_assert([1], [1248])
	$15 = (CASTING uint_64)(uint_32 ((int_32)$24 * (int_32)[10000]))
	$27 = (int_64)5525588
	$24 = [0]
	
.LOOP $label$55:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$53 }
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$56 }
	
.LOOP $label$57:
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$53 }
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$57 }
	
.LABEL $label$56
	$10 = [1]
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$55 }
	goto $label$52 
	
.LABEL $label$54
	CALL eosio_assert([0], [3200])
	goto $label$6 
	
.LABEL $label$53
	$10 = [0]
	
.LABEL $label$52
	CALL eosio_assert($10, [1120])
	$28 = *($0)
	$27 = (int_64)0
	$26 = (int_64)59
	$24 = [1152]
	$25 = (int_64)0
	
.LOOP $label$58:
	if ( ((uint_64)$27 > (uint_64)(int_64)5) ){ goto $label$63 }
	$10 = *($24)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$10 = ($10 + [165])
	goto $label$61 
	
.LABEL $label$63
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$62
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$61
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$60
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	
.LABEL $label$59
	$24 = ($24 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$29 | (int_64)$25)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$58 }
	*($19) = $25
	*($33 + [112]) = $28
	$27 = (int_64)0
	$29 = (int_64)59
	$24 = [1168]
	$25 = (int_64)0
	
.LOOP $label$64:
	$26 = (int_64)0
	if ( ((uint_64)$27 > (uint_64)(int_64)11) ){ goto $label$65 }
	$10 = *($24)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$10 = ($10 + [165])
	goto $label$66 
	
.LABEL $label$67
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$66
	$26 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$29 & (int_64)4294967295))
	
.LABEL $label$65
	$24 = ($24 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$25 = ((int_64)$26 | (int_64)$25)
	$29 = ((int_64)$29 + (int_64)-5)
	if ( ((int_64)$29 != (int_64)-6) ){ goto $label$64 }
	$27 = (int_64)0
	$26 = (int_64)59
	$24 = [1184]
	$28 = (int_64)0
	
.LOOP $label$68:
	if ( ((uint_64)$27 > (uint_64)(int_64)7) ){ goto $label$73 }
	$10 = *($24)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$72 }
	$10 = ($10 + [165])
	goto $label$71 
	
.LABEL $label$73
	$29 = (int_64)0
	if ( ((uint_64)$27 <= (uint_64)(int_64)11) ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$72
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$71
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$70
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	
.LABEL $label$69
	$24 = ($24 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$28 = ((int_64)$29 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$68 }
	*(($10 = (($33 + [56]) + [8]))) = [0]
	*($33 + [56]) = (int_64)0
	$24 = CALL strlen([3152])
	if ( ((uint_32)$24 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$24 >= (uint_32)[11]) ){ goto $label$76 }
	*($33 + [56]) = ($24 << [1])
	$30 = $7
	if ( $24 ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	$16 = (($24 + [16]) & [-16])
	$30 = CALL $866($16)
	*($10) = $30
	*($33 + [56]) = ($16 | [1])
	*($33 + [60]) = $24
	
.LABEL $label$75
	CALL memcpy($30, [3152], $24)
	
.LABEL $label$74
	*(($30 + $24)) = [0]
	*($17) = $1
	*((($33 + [8]) + [16])) = $15
	*((($33 + [8]) + [24])) = (int_64)1414550532
	*(($8 + [4])) = *($33 + [60])
	*(($8 + [8])) = *($10)
	*($33 + [8]) = *($0)
	*($8) = *($33 + [56])
	*($33 + [56]) = [0]
	*($33 + [60]) = [0]
	*($10) = [0]
	CALL $65(($33 + [128]), CALL $66(($33 + [72]), ($33 + [112]), $25, $28, ($33 + [8])))
	$24 = *($33 + [128])
	CALL send_inline($24, (*($33 + [132]) - $24))
	$24 = *($33 + [128])
	if ( ($24 == 0) ){ goto $label$77 }
	*($33 + [132]) = $24
	CALL $867($24)
	
.LABEL $label$77
	$24 = *((($33 + [72]) + [28]))
	if ( ($24 == 0) ){ goto $label$78 }
	*((($33 + [72]) + [32])) = $24
	CALL $867($24)
	
.LABEL $label$78
	$24 = *($20)
	if ( ($24 == 0) ){ goto $label$79 }
	*((($33 + [72]) + [20])) = $24
	CALL $867($24)
	
.LABEL $label$79
	if ( ((*($8) & [1]) == 0) ){ goto $label$80 }
	CALL $867(*($18))
	
.LABEL $label$80
	if ( ((*($33 + [56]) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*($10))
	
.LABEL $label$6
	$24 = *($2)
	$9 = ($9 + [1])
	if ( ($9 <= ((int_32)(*($23) - $24) / (int_32)[20])) ){ goto $label$5 }
	
.LABEL $label$4
	*([0] + [4]) = ($33 + [144])
	return (unreachable)
	
.LABEL $label$3
	CALL $868(($33 + [8]))
	
.LABEL $label$2
	CALL $868(($33 + [56]))
	
.LABEL $label$1
	CALL $868(($33 + [56]))
	$10
	(unreachable)
	(unreachable)
}

void .FUNC $277 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $866([80])
	CALL $279($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [68])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $100(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $276 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [9]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [10]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [20]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC $275 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [16]) = (*($1 + [16]) + *(*($3)))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [21])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $276(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $274 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[20]))
	$5 = *($0 + [4])
	$4 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $5) > (int_32)[0]), [576])
	CALL memcpy(*($7), ($8 + [15]), [1])
	$5 = (*($7) + [1])
	*($7) = $5
	if ( $3 ){ goto $label$1 }
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [576])
	$5 = ($0 + [4])
	CALL memcpy(*($5), $7, [1])
	$3 = (*($5) + [1])
	*($5) = $3
	CALL eosio_assert(((int_32)(*($2) - $3) > (int_32)[3]), [576])
	CALL memcpy(*($5), ($7 + [4]), [4])
	*($5) = (*($5) + [4])
	CALL $85($0, ($7 + [8]))
	$7 = ($7 + [20])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	$5 = *($5)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $279 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [12]) = [0]
	*($0 + [24]) = [0]
	*($0 + [28]) = [0]
	*($0 + [32]) = [0]
	*($0 + [36]) = [0]
	*($0 + [38]) = [0]
	*($0 + [40]) = [0]
	*($0 + [44]) = [0]
	*($0 + [48]) = [0]
	*($0 + [52]) = [0]
	*($0 + [56]) = [1]
	*($0 + [58]) = [0]
	*($0 + [60]) = [0]
	*($0 + [16]) = (int_64)0
	*($0 + [64]) = $1
	$3 = *($2)
	$1 = *($2 + [4])
	*($0) = *(*($1))
	*($0 + [12]) = *(*($1 + [4]))
	*($0 + [24]) = *(*($1 + [8]))
	*($0 + [16]) = *(*($1 + [12]))
	*($5 + [72]) = ($5 + [54])
	*($5 + [68]) = $5
	*($5 + [64]) = $5
	CALL $98(($5 + [64]), $0)
	$4 = *($0)
	*($0 + [68]) = CALL db_store_i64(*($3 + [8]), (int_64)-6030912128150405120, *(*($2 + [8])), $4, $5, [54])
	if ( (uint_64)($4 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
	return $0
}

void .FUNC $278 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($1 + [24])
	$7 = *(($1 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$1), [32])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-6030912128150405120, $2)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$4 }
	$6 = CALL $96($1, $6)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$1), [32])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $798 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1248])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	*(($0 + [24])) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [1120])
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $799(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $799 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [160])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [16]), *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [24]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $794 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [592])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [3])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $796($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [3]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)*($3) != (int_32)$6), [160])
	CALL memcpy($7, *($4), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[3]), [160])
	CALL memcpy(($7 + [4]), *($4), [4])
	$6 = (*($4) + [4])
	*($4) = $6
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $795 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $6
	CALL $867($6)
	
.LABEL $label$11
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $867($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $796 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [3]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [3])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$4 }
	$6 = [536870911]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$7 }
	$6 = int_32($2 >> [2])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $866(($6 << [3]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($6) = (int_64)0
	*($6 + [4]) = [0]
	*($6) = [0]
	$6 = (*($0) + [8])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $882($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [3]))
	$5 = ($2 + ($3 << [3]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = (int_64)0
	*($6 + [4]) = [0]
	*($6) = [0]
	$6 = ($6 + [8])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $867($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $797 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [160])
	*([0] + [4]) = $16
	*($16 + [140]) = $2
	CALL require_auth($1)
	$15 = *($4 + [24])
	$4 = *($0 + [104])
	$5 = *(($4 + [28]))
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$1 }
	$9 = ($5 + [-24])
	$6 = ([0] - $15)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$1 }
	$5 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$4 }
	$9 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	$7 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $13($4, $7)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$4), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [2624])
	$4 = *(($0 + [32]))
	$5 = *(($0 + [36]))
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$5 }
	$9 = ($5 + [-24])
	$6 = ([0] - $4)
	
.LOOP $label$6:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$5 }
	$5 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$7 = ($0 + [8])
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	$9 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$7), [32])
	if ( $9 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$9 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$8 }
	$9 = CALL $227($7, $9)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$7), [32])
	
.LABEL $label$9
	$9 = ($9 + [12])
	goto $label$7 
	
.LABEL $label$8
	$9 = ($0 + [112])
	
.LABEL $label$7
	$3 = *($9)
	$9 = (*($9 + [4]) - $3)
	if ( ((int_32)$9 < (int_32)[12]) ){ goto $label$12 }
	$7 = (((uint_32)$9 / (uint_32)[12]) + [-1])
	$9 = [0]
	
.LOOP $label$13:
	$4 = ($7 - $9)
	$5 = (((int_32)$4 / (int_32)[2]) + $9)
	$15 = ($3 + ((int_32)$5 * (int_32)[12]))
	$6 = *($15)
	if ( ($6 <= $2) ){ goto $label$14 }
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$11 }
	$7 = ($5 + [-1])
	if ( ((int_32)$4 > (int_32)[1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$9 = ($5 + [1])
	if ( ((int_32)$7 > (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$12
	CALL eosio_assert([0], [6944])
	$15 = ($0 + [124])
	
.LABEL $label$11
	CALL eosio_assert((((*($15 + [4]) + [-301]) & [65535]) <= [3]), [2656])
	$9 = *($15 + [4])
	CALL eosio_assert([1], [1248])
	$8 = ( (int_64)1000000000 ? ( (int_64)100000000 ? (int_64)10000000 : ((int_32)$9 == (int_32)[302]) ) : ((int_32)$9 == (int_32)[303]) )
	$11 = (int_64)5524308
	$9 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$7 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$7 = [0]
	
.LABEL $label$15
	CALL eosio_assert($7, [1120])
	*($16 + [136]) = [0]
	$11 = (int_64)0
	*($16 + [128]) = (int_64)0
	CALL $301(($16 + [128]), ($16 + [140]))
	CALL $707($0, $1, ($16 + [128]), [0])
	$14 = *($0)
	$10 = (int_64)59
	$9 = [1152]
	$12 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$25 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$7 = ($7 + [165])
	goto $label$23 
	
.LABEL $label$25
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$21
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$20 }
	*($16 + [80]) = $12
	*($16 + [72]) = $14
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [1088]
	$12 = (int_64)0
	
.LOOP $label$26:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$27 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$7 = ($7 + [165])
	goto $label$28 
	
.LABEL $label$29
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$27
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$26 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1184]
	$14 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$11 > (uint_64)(int_64)7) ){ goto $label$35 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$7 = ($7 + [165])
	goto $label$33 
	
.LABEL $label$35
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$31
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$30 }
	*(($16 + [16])) = [0]
	*($16 + [8]) = (int_64)0
	$9 = CALL strlen([9104])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$36 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$39 }
	*($16 + [8]) = ($9 << [1])
	$7 = (($16 + [8]) | [1])
	if ( $9 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	$2 = (($9 + [16]) & [-16])
	$7 = CALL $866($2)
	*($16 + [8]) = ($2 | [1])
	*($16 + [16]) = $7
	*($16 + [12]) = $9
	
.LABEL $label$38
	CALL memcpy($7, [9104], $9)
	
.LABEL $label$37
	*(($7 + $9)) = [0]
	*(($16 + [48])) = (int_64)1414222852
	*(($16 + [60])) = *($16 + [12])
	*($16 + [32]) = $1
	$9 = ($16 + [16])
	*(($16 + [64])) = *($9)
	*($16 + [24]) = *($0)
	*($16 + [40]) = $8
	*($16 + [56]) = *($16 + [8])
	*($16 + [8]) = [0]
	*($16 + [12]) = [0]
	*($9) = [0]
	$9 = CALL $66(($16 + [88]), ($16 + [72]), $12, $14, ($16 + [24]))
	CALL $65(($16 + [144]), $9)
	$7 = *($16 + [144])
	CALL send_inline($7, (*($16 + [148]) - $7))
	$7 = *($16 + [144])
	if ( ($7 == 0) ){ goto $label$40 }
	*($16 + [148]) = $7
	CALL $867($7)
	
.LABEL $label$40
	$7 = *($9 + [28])
	if ( ($7 == 0) ){ goto $label$41 }
	*(($9 + [32])) = $7
	CALL $867($7)
	
.LABEL $label$41
	$7 = *($9 + [16])
	if ( ($7 == 0) ){ goto $label$42 }
	*(($9 + [20])) = $7
	CALL $867($7)
	
.LABEL $label$42
	if ( ((*(($16 + [56])) & [1]) == 0) ){ goto $label$43 }
	CALL $867(*(($16 + [64])))
	
.LABEL $label$43
	if ( ((*($16 + [8]) & [1]) == 0) ){ goto $label$44 }
	CALL $867(*(($16 + [16])))
	
.LABEL $label$44
	$9 = *($16 + [128])
	if ( ($9 == 0) ){ goto $label$45 }
	*($16 + [132]) = $9
	CALL $867($9)
	
.LABEL $label$45
	*([0] + [4]) = ($16 + [160])
	return (unreachable)
	
.LABEL $label$36
	CALL $868(($16 + [8]))
}

int_32 .FUNC $790 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($2 + [24])
	$2 = *($0 + [104])
	$6 = *(($2 + [28]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$0 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($0)) == (int_64)$1) ){ goto $label$1 }
	$6 = $0
	$5 = ($0 + [-24])
	$0 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	$0 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)$2), [32])
	goto $label$3 
	
.LABEL $label$4
	$0 = [0]
	$5 = CALL db_find_i64(*($2), *($2 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $13($2, $5)
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)$2), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [192])
	$0 = *($0 + [8])
	return ((( $0 ? [5] : ($0 <= [5]) ) << [2]) + [28])
}

void .FUNC $791 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*($6) = (int_64)0
	*($6 + [8]) = [0]
	$3 = *($1 + [8])
	$2 = *($1)
	$5 = (*(($1 + [16])) - *($1 + [12]))
	$4 = int_32($5 >> [2])
	if ( ($4 == 0) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$5 = CALL $866($5)
	*(($6 + [8])) = ($5 + ($4 << [2]))
	*($6) = $5
	*($6 + [4]) = $5
	$4 = *(($1 + [12]))
	$1 = (*(($1 + [16])) - $4)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($5, $4, $1)
	*($6 + [4]) = ($5 + $1)
	
.LABEL $label$2
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*(*($0)) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($0) + $1))
	
.LABEL $label$3
	CALL void $0((int_32 $2), (int_64 ($3 & [65535])), (int_32 $6), (int_32 $1))
	$1 = *($6)
	if ( ($1 == 0) ){ goto $label$4 }
	*($6 + [4]) = $1
	CALL $867($1)
	
.LABEL $label$4
	*([0] + [4]) = ($6 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $882($6)
}

void .FUNC $792 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_64 $22
	int_32 $23
	$23 = (*([0] + [4]) - [176])
	*([0] + [4]) = $23
	CALL require_auth($1)
	$7 = *($9 + [24])
	$9 = *($0 + [104])
	$5 = *(($9 + [28]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$1 }
	$12 = ($5 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$2:
	if ( ((int_64)*(*($12)) == (int_64)$1) ){ goto $label$1 }
	$5 = $12
	$19 = ($12 + [-24])
	$12 = $19
	if ( ((int_32)($19 + $8) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$4 }
	$12 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$9), [32])
	goto $label$3 
	
.LABEL $label$4
	$12 = [0]
	$19 = CALL db_find_i64(*($9), *($9 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$3 }
	$12 = CALL $13($9, $19)
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$9), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [2624])
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [5472]
	$15 = (int_64)0
	
.LOOP $label$5:
	$16 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$6 }
	$19 = *($12)
	if ( ((uint_32)(($19 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$19 = ($19 + [165])
	goto $label$7 
	
.LABEL $label$8
	$19 = ( ($19 + [208]) ? [0] : ((($19 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$16 = ((int_64)(CASTING uint_64)(uint_32 ($19 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$6
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$5 }
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [5472]
	$17 = (int_64)0
	
.LOOP $label$9:
	$16 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$10 }
	$19 = *($12)
	if ( ((uint_32)(($19 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$19 = ($19 + [165])
	goto $label$11 
	
.LABEL $label$12
	$19 = ( ($19 + [208]) ? [0] : ((($19 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$16 = ((int_64)(CASTING uint_64)(uint_32 ($19 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$10
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$16 | (int_64)$17)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$9 }
	*((($23 + [120]) + [32])) = [0]
	*($23 + [136]) = (int_64)-1
	*($23 + [144]) = (int_64)0
	*($23 + [128]) = $17
	*($23 + [120]) = $15
	$12 = CALL db_find_i64($15, $17, (int_64)4409460236643352576, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$13 }
	$19 = CALL $793(($23 + [120]), $12)
	CALL eosio_assert(((int_32)*($19 + [20]) == (int_32)($23 + [120])), [32])
	$19 = *(($19 + [12]))
	$12 = *($19 + [8])
	if ( ((int_32)$12 == (int_32)$19) ){ goto $label$13 }
	
.LOOP $label$15:
	if ( ((int_32)*($12) == (int_32)$2) ){ goto $label$14 }
	$12 = ($12 + [8])
	if ( ((int_32)$19 != (int_32)$12) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	CALL eosio_assert((*(($12 + [4])) <= [10]), [8928])
	
.LABEL $label$13
	CALL eosio_assert(((int_32)*($3 + [4]) != (int_32)*($3)), [8960])
	CALL eosio_assert((int_32((*($3 + [4]) - *($3)) >> [2]) <= [11]), [8960])
	$7 = *(($0 + [32]))
	$5 = *(($0 + [36]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$16 }
	$12 = ($5 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$17:
	if ( ((int_64)*(*($12)) == (int_64)$1) ){ goto $label$16 }
	$5 = $12
	$19 = ($12 + [-24])
	$12 = $19
	if ( ((int_32)($19 + $8) != (int_32)[-24]) ){ goto $label$17 }
	
.LABEL $label$16
	$9 = ($0 + [8])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$19 }
	$12 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$9), [32])
	goto $label$18 
	
.LABEL $label$19
	$12 = [0]
	$19 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$18 }
	$12 = CALL $227($9, $19)
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$9), [32])
	
.LABEL $label$18
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [6944])
	$7 = *(($0 + [32]))
	$5 = *(($0 + [36]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$20 }
	$12 = ($5 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$21:
	if ( ((int_64)*(*($12)) == (int_64)$1) ){ goto $label$20 }
	$5 = $12
	$19 = ($12 + [-24])
	$12 = $19
	if ( ((int_32)($19 + $8) != (int_32)[-24]) ){ goto $label$21 }
	
.LABEL $label$20
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$25 }
	$12 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$9), [32])
	if ( $12 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$12 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$23 }
	$12 = CALL $227($9, $12)
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$9), [32])
	
.LABEL $label$24
	$19 = ($12 + [12])
	goto $label$22 
	
.LABEL $label$23
	$19 = ($0 + [112])
	
.LABEL $label$22
	$21 = [0]
	*($23 + [112]) = [0]
	*($23 + [104]) = (int_64)0
	$5 = (*($19 + [4]) - *($19))
	$8 = ((int_32)$5 / (int_32)[12])
	$12 = [0]
	if ( ($5 == 0) ){ goto $label$30 }
	if ( ((uint_32)$8 >= (uint_32)[357913942]) ){ goto $label$29 }
	$12 = CALL $866($5)
	*(($23 + [112])) = ($12 + ((int_32)$8 * (int_32)[12]))
	*($23 + [104]) = $12
	*($23 + [108]) = $12
	$5 = *($19)
	$19 = (*(($19 + [4])) - $5)
	if ( ((int_32)$19 < (int_32)[1]) ){ goto $label$30 }
	CALL memcpy($12, $5, $19)
	$12 = (*($23 + [108]) + ((int_32)((uint_32)$19 / (uint_32)[12]) * (int_32)[12]))
	*($23 + [108]) = $12
	
.LABEL $label$30
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$27 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$28 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$26 }
	$19 = *($3)
	$11 = ($3 + [4])
	if ( ((int_32)*($11) == (int_32)$19) ){ goto $label$26 }
	$4 = ($0 + [124])
	$21 = [0]
	$18 = [0]
	
.LOOP $label$31:
	$6 = *($23 + [104])
	$12 = ($12 - $6)
	if ( ((int_32)$12 < (int_32)[12]) ){ goto $label$33 }
	$5 = *(($19 + ($18 << [2])))
	$19 = (((uint_32)$12 / (uint_32)[12]) + [-1])
	$12 = [0]
	
.LOOP $label$34:
	$7 = ($19 - $12)
	$8 = (((int_32)$7 / (int_32)[2]) + $12)
	$20 = ($6 + ((int_32)$8 * (int_32)[12]))
	$9 = *($20)
	if ( ($9 <= $5) ){ goto $label$35 }
	if ( ((uint_32)$9 <= (uint_32)$5) ){ goto $label$32 }
	$19 = ($8 + [-1])
	if ( ((int_32)$7 > (int_32)[1]) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	$12 = ($8 + [1])
	if ( ((int_32)$19 > (int_32)$8) ){ goto $label$34 }
	
.LABEL $label$33
	CALL eosio_assert([0], [6944])
	$20 = $4
	
.LABEL $label$32
	CALL eosio_assert((*($20 + [8]) == 0), [9024])
	CALL eosio_assert(((int_32)*($20 + [4]) != (int_32)[0]), [9056])
	$12 = *($20 + [4])
	if ( ((uint_32)$12 > (uint_32)[199]) ){ goto $label$37 }
	$12 = ((uint_32)$12 % (uint_32)[20])
	CALL eosio_assert(((($12 + [-9]) & [65535]) <= [2]), [8992])
	$21 = (( [100] ? [20] : ((int_32)$12 == (int_32)[10]) ) + $21)
	goto $label$36 
	
.LABEL $label$37
	if ( ((uint_32)$12 > (uint_32)[299]) ){ goto $label$38 }
	if ( ((uint_32)(($12 + [-201]) & [65535]) > (uint_32)[4]) ){ goto $label$39 }
	$21 = ($21 + [20])
	goto $label$36 
	
.LABEL $label$39
	if ( ((uint_32)(($12 + [-206]) & [65535]) > (uint_32)[4]) ){ goto $label$38 }
	$21 = ($21 + [100])
	goto $label$36 
	
.LABEL $label$38
	CALL eosio_assert([0], [8992])
	
.LABEL $label$36
	$19 = *($3)
	$18 = ($18 + [1])
	if ( ((uint_32)$18 >= (uint_32)int_32((*($11) - $19) >> [2])) ){ goto $label$26 }
	$12 = *($23 + [108])
	goto $label$31 
	
.LABEL $label$29
	CALL $882(($23 + [104]))
	
.LABEL $label$28
	$19 = *($3)
	$11 = ($3 + [4])
	if ( ((int_32)*($11) == (int_32)$19) ){ goto $label$26 }
	$4 = ($0 + [124])
	$21 = [0]
	$18 = [0]
	
.LOOP $label$40:
	$6 = *($23 + [104])
	$12 = ($12 - $6)
	if ( ((int_32)$12 < (int_32)[12]) ){ goto $label$42 }
	$5 = *(($19 + ($18 << [2])))
	$19 = (((uint_32)$12 / (uint_32)[12]) + [-1])
	$12 = [0]
	
.LOOP $label$43:
	$7 = ($19 - $12)
	$8 = (((int_32)$7 / (int_32)[2]) + $12)
	$20 = ($6 + ((int_32)$8 * (int_32)[12]))
	$9 = *($20)
	if ( ($9 <= $5) ){ goto $label$44 }
	if ( ((uint_32)$9 <= (uint_32)$5) ){ goto $label$41 }
	$19 = ($8 + [-1])
	if ( ((int_32)$7 > (int_32)[1]) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	$12 = ($8 + [1])
	if ( ((int_32)$19 > (int_32)$8) ){ goto $label$43 }
	
.LABEL $label$42
	CALL eosio_assert([0], [6944])
	$20 = $4
	
.LABEL $label$41
	CALL eosio_assert((*($20 + [8]) == 0), [9024])
	CALL eosio_assert(((int_32)*($20 + [4]) != (int_32)[0]), [9056])
	$12 = *($20 + [4])
	if ( ((uint_32)$12 > (uint_32)[199]) ){ goto $label$46 }
	$12 = ((uint_32)$12 % (uint_32)[20])
	CALL eosio_assert(((int_32)($12 | [1]) == (int_32)[9]), [8992])
	$21 = (( [40] ? [20] : ((int_32)$12 == (int_32)[9]) ) + $21)
	goto $label$45 
	
.LABEL $label$46
	if ( ((uint_32)$12 > (uint_32)[299]) ){ goto $label$47 }
	CALL eosio_assert(((($12 + [-201]) & [65535]) <= [5]), [8992])
	$21 = ($21 + [40])
	goto $label$45 
	
.LABEL $label$47
	CALL eosio_assert([0], [8992])
	
.LABEL $label$45
	$19 = *($3)
	$18 = ($18 + [1])
	if ( ((uint_32)$18 >= (uint_32)int_32((*($11) - $19) >> [2])) ){ goto $label$26 }
	$12 = *($23 + [108])
	goto $label$40 
	
.LABEL $label$27
	$19 = *($3)
	$11 = ($3 + [4])
	if ( ((int_32)*($11) == (int_32)$19) ){ goto $label$26 }
	$4 = ($0 + [124])
	$21 = [0]
	$18 = [0]
	
.LOOP $label$48:
	$6 = *($23 + [104])
	$12 = ($12 - $6)
	if ( ((int_32)$12 < (int_32)[12]) ){ goto $label$50 }
	$5 = *(($19 + ($18 << [2])))
	$19 = (((uint_32)$12 / (uint_32)[12]) + [-1])
	$12 = [0]
	
.LOOP $label$51:
	$7 = ($19 - $12)
	$8 = (((int_32)$7 / (int_32)[2]) + $12)
	$20 = ($6 + ((int_32)$8 * (int_32)[12]))
	$9 = *($20)
	if ( ($9 <= $5) ){ goto $label$52 }
	if ( ((uint_32)$9 <= (uint_32)$5) ){ goto $label$49 }
	$19 = ($8 + [-1])
	if ( ((int_32)$7 > (int_32)[1]) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	$12 = ($8 + [1])
	if ( ((int_32)$19 > (int_32)$8) ){ goto $label$51 }
	
.LABEL $label$50
	CALL eosio_assert([0], [6944])
	$20 = $4
	
.LABEL $label$49
	$12 = [0]
	$19 = *($20 + [4])
	if ( ((uint_32)$19 > (uint_32)[200]) ){ goto $label$53 }
	$12 = [1]
	$19 = ((uint_32)$19 % (uint_32)[20])
	if ( ($19 <= [5]) ){ goto $label$53 }
	$12 = [2]
	$5 = ($19 & [65535])
	if ( ($5 <= [8]) ){ goto $label$53 }
	$12 = [3]
	if ( ($5 <= [10]) ){ goto $label$53 }
	$12 = [4]
	if ( ((int_32)$19 == (int_32)[10]) ){ goto $label$53 }
	$12 = ( [5] ? [0] : ($5 <= [12]) )
	
.LABEL $label$53
	CALL eosio_assert(((int_32)$12 == (int_32)[2]), [8992])
	CALL eosio_assert((*($20 + [8]) == 0), [9024])
	$12 = ($20 + [4])
	CALL eosio_assert(((int_32)*($12) != (int_32)[0]), [9056])
	$12 = ((uint_32)*($12) % (uint_32)[20])
	CALL eosio_assert(((int_32)($12 | [1]) == (int_32)[7]), [8992])
	$21 = (( [20] ? [10] : ((int_32)$12 == (int_32)[7]) ) + $21)
	$19 = *($3)
	$18 = ($18 + [1])
	if ( ((uint_32)$18 >= (uint_32)int_32((*($11) - $19) >> [2])) ){ goto $label$26 }
	$12 = *($23 + [108])
	goto $label$48 
	
.LABEL $label$26
	$12 = CALL read_transaction([0], [0])
	$19 = CALL malloc($12)
	CALL read_transaction($19, $12)
	CALL sha256($19, $12, ($23 + [64]))
	$14 = *($23 + [71])
	$13 = *($23 + [70])
	$16 = *($23 + [65])
	$15 = *($23 + [64])
	CALL $707($0, $1, $3, [0])
	if ( ((uint_32)(CASTING uint_32)(uint_64 (uint_64)((int_64)((uint_64)((int_64)((int_64)((int_64)$14 | (int_64)((int_64)((int_64)((int_64)$16 << (int_64)16) | (int_64)((int_64)$15 << (int_64)24)) | (int_64)((int_64)$13 << (int_64)8))) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647) * (int_64)100) >> (uint_64)(int_64)31)) >= (uint_32)$21) ){ goto $label$54 }
	$10 = *($0)
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [1152]
	$15 = (int_64)0
	
.LOOP $label$55:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$60 }
	$19 = *($12)
	if ( ((uint_32)(($19 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$19 = ($19 + [165])
	goto $label$58 
	
.LABEL $label$60
	$13 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	$19 = ( ($19 + [208]) ? [0] : ((($19 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $19) << (int_64)56) >> (int_64)56)
	
.LABEL $label$57
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$56
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$55 }
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [5472]
	$17 = (int_64)0
	
.LOOP $label$61:
	$16 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$62 }
	$19 = *($12)
	if ( ((uint_32)(($19 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$64 }
	$19 = ($19 + [165])
	goto $label$63 
	
.LABEL $label$64
	$19 = ( ($19 + [208]) ? [0] : ((($19 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$63
	$16 = ((int_64)(CASTING uint_64)(uint_32 ($19 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$62
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$16 | (int_64)$17)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$61 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [9088]
	$22 = (int_64)0
	
.LOOP $label$65:
	if ( ((uint_64)$14 > (uint_64)(int_64)9) ){ goto $label$70 }
	$19 = *($12)
	if ( ((uint_32)(($19 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$69 }
	$19 = ($19 + [165])
	goto $label$68 
	
.LABEL $label$70
	$13 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$69
	$19 = ( ($19 + [208]) ? [0] : ((($19 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$68
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $19) << (int_64)56) >> (int_64)56)
	
.LABEL $label$67
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$66
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$22 = ((int_64)$13 | (int_64)$22)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$65 }
	*($23 + [16]) = $2
	*($23 + [8]) = $1
	*($23 + [32]) = $22
	*($23 + [24]) = $17
	*(($12 = CALL $866([16]))) = $10
	*($12 + [8]) = $15
	*(($19 = ($23 + [56]))) = [0]
	$5 = ($12 + [16])
	*(($23 + [48])) = $5
	*(($23 + [44])) = $5
	*($23 + [40]) = $12
	*($23 + [52]) = [0]
	*(($23 + [60])) = [0]
	CALL $83(($23 + [52]), [10])
	$12 = *($23 + [52])
	$19 = (*($19) - $12)
	CALL eosio_assert(((int_32)$19 > (int_32)[7]), [576])
	CALL memcpy($12, ($23 + [8]), [8])
	CALL eosio_assert(((int_32)($19 + [-8]) > (int_32)[1]), [576])
	CALL memcpy(($12 + [8]), (($23 + [8]) + [8]), [2])
	CALL $65(($23 + [160]), ($23 + [24]))
	$12 = *($23 + [160])
	CALL send_inline($12, (*($23 + [164]) - $12))
	$12 = *($23 + [160])
	if ( ($12 == 0) ){ goto $label$71 }
	*($23 + [164]) = $12
	CALL $867($12)
	
.LABEL $label$71
	$12 = *($23 + [52])
	if ( ($12 == 0) ){ goto $label$72 }
	*(($23 + [56])) = $12
	CALL $867($12)
	
.LABEL $label$72
	$12 = *($23 + [40])
	if ( ($12 == 0) ){ goto $label$54 }
	*(($23 + [44])) = $12
	CALL $867($12)
	
.LABEL $label$54
	$12 = *($23 + [104])
	if ( ($12 == 0) ){ goto $label$73 }
	*($23 + [108]) = $12
	CALL $867($12)
	
.LABEL $label$73
	$8 = *($23 + [144])
	if ( ($8 == 0) ){ goto $label$74 }
	$9 = ($23 + [148])
	$12 = *($9)
	if ( ((int_32)$12 == (int_32)$8) ){ goto $label$76 }
	
.LOOP $label$77:
	$12 = ($12 + [-24])
	$19 = *($12)
	*($12) = [0]
	if ( ($19 == 0) ){ goto $label$78 }
	$5 = *($19 + [8])
	if ( ($5 == 0) ){ goto $label$79 }
	*(($19 + [12])) = $5
	CALL $867($5)
	
.LABEL $label$79
	CALL $867($19)
	
.LABEL $label$78
	if ( ((int_32)$8 != (int_32)$12) ){ goto $label$77 }
	$12 = *(($23 + [144]))
	goto $label$75 
	
.LABEL $label$76
	$12 = $8
	
.LABEL $label$75
	*($9) = $8
	CALL $867($12)
	
.LABEL $label$74
	*([0] + [4]) = ($23 + [176])
	(unreachable)
}

int_32 .FUNC $793 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $866([32]))) = (int_64)0
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [16]) = [0]
	*($6 + [20]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [160])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	CALL $794(($8 + [32]), ($6 + [8]))
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $795(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $7
	CALL $867($7)
	
.LABEL $label$10
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $152 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL $212(($0 + [600]), $1)
	CALL $699(($0 + [384]), $1, $2)
}

void .FUNC $153 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	CALL $212(($0 + [600]), $1)
	CALL $698(($0 + [280]), $1, $2, $3)
}

void .FUNC $150 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$5 = ($0 + [600])
	CALL $212($5, $1)
	CALL $558(($0 + [8]), ((int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $4)), $1)
	CALL eosio_assert((CALL $559($5, $1) == 0), [5696])
	*((($6 + [16]) + [8])) = [0]
	*($6 + [16]) = (int_64)0
	$4 = CALL strlen([7808])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($6 + [16]) = ($4 << [1])
	$3 = (($6 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($4 + [16]) & [-16])
	$3 = CALL $866($5)
	*($6 + [16]) = ($5 | [1])
	*($6 + [24]) = $3
	*($6 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($3, [7808], $4)
	
.LABEL $label$2
	*(($3 + $4)) = [0]
	CALL $883($6, ($6 + [16]))
	CALL $702(($0 + [384]), $1, $2, $6)
	if ( ((*($6) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*($6 + [8]))
	
.LABEL $label$5
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $867(*($6 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $868(($6 + [16]))
}

int_32 .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($6 + [16]) = [0]
	*($6 + [8]) = (int_64)0
	*($6 + [20 align=4]) = (int_64)0
	*($6 + [36]) = $1
	*($6 + [32]) = $1
	*($6 + [40]) = ($1 + $3)
	*($6 + [48]) = ($6 + [32])
	*($6 + [56]) = ($6 + [8])
	CALL $701(($6 + [56]), ($6 + [48]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($6 + [24]))
	$7 = *(($6 + [20]))
	$0 = *(($6 + [16]))
	$4 = *($6 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_64 ($0 & [65535])), (int_32 $7), (int_32 $3), (int_32 $5))
	*([0] + [4]) = ($6 + [64])
	return [1]
}

void .FUNC $408 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [12])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [16])) = $6
	CALL $867($6)
	
.LABEL $label$11
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $867($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $409 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	$11 = $12
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$6 = *($1 + [12])
	$5 = *(($1 + [16]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$1 }
	$9 = ($6 + [16])
	$7 = ((int_32)($5 - $6) / (int_32)[20])
	$10 = *(*($3))
	$8 = [0]
	
.LOOP $label$3:
	if ( ((int_64)*($9) == (int_64)$10) ){ goto $label$2 }
	$9 = ($9 + [20])
	$8 = ($8 + [1])
	if ( ($8 <= $7) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*(*($3 + [4])) = $8
	
.LABEL $label$1
	$10 = $4
	$9 = *(*($3 + [4]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$4 }
	$9 = ($6 + ((int_32)$9 * (int_32)[20]))
	$3 = ($9 + [20])
	$8 = ($5 - $3)
	$7 = ((int_32)$8 / (int_32)[20])
	$10 = $4
	if ( ($8 == 0) ){ goto $label$5 }
	CALL memmove($9, $3, $8)
	$10 = *($1)
	
.LABEL $label$5
	*(($1 + [16])) = ($9 + ((int_32)$7 * (int_32)[20]))
	
.LABEL $label$4
	$7 = ($1 + [12])
	CALL eosio_assert(((int_64)$4 == (int_64)$10), [512])
	$3 = *(($1 + [12]))
	$8 = *(($1 + [16]))
	$6 = ($8 - $3)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[20]))
	$9 = [29]
	
.LOOP $label$6:
	$9 = ($9 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$8 }
	$8 = (((int_32)((uint_32)($6 + [-20]) / (uint_32)[20]) * (int_32)[17]) + $9)
	goto $label$7 
	
.LABEL $label$8
	$8 = ($9 + [-17])
	
.LABEL $label$7
	if ( ($8 <= [513]) ){ goto $label$10 }
	$9 = CALL malloc($8)
	goto $label$9 
	
.LABEL $label$10
	$9 = ($12 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$9
	*($11) = $9
	$3 = ($9 + $8)
	*($11 + [8]) = $3
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	$6 = ($9 + [8])
	CALL eosio_assert(((int_32)($3 - $6) > (int_32)[3]), [576])
	CALL memcpy($6, ($1 + [8]), [4])
	*($11 + [4]) = ($9 + [12])
	CALL $400($11, $7)
	CALL db_update_i64(*($1 + [28]), $2, $9, $8)
	if ( ($8 <= [513]) ){ goto $label$11 }
	CALL free($9)
	
.LABEL $label$11
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*([0] + [4]) = ($11 + [16])
}

int_32 .FUNC $154 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$6 = *($1)
	$5 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $1)
	
.LABEL $label$1
	*($7 + [8]) = [0]
	*($7) = (int_64)0
	*($7 + [12]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [160])
	CALL memcpy($7, $5, [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [160])
	$8 = ($7 + [8])
	CALL memcpy($8, ($5 + [8]), [1])
	CALL eosio_assert(((uint_32)($1 + [-9]) > (uint_32)[3]), [160])
	$4 = ($7 + [12])
	CALL memcpy($4, ($5 + [9]), [4])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($5)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($4)
	$8 = *($8)
	$3 = *($7)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($1) + $6))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 ($8 & [255])), (int_32 $5), (int_32 $6))
	*([0] + [4]) = ($7 + [16])
	return [1]
}

void .FUNC $155 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL $212(($0 + [600]), $1)
	CALL $696(($0 + [280]), $1, $2)
}

void .FUNC $404 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)*(*($3)))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $5, [16])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $405 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $158 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$5 = ($0 + [600])
	CALL $212($5, $1)
	CALL $558(($0 + [8]), ((int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $4)), $1)
	CALL eosio_assert((CALL $559($5, $1) == 0), [5696])
	*((($6 + [16]) + [8])) = [0]
	*($6 + [16]) = (int_64)0
	$4 = CALL strlen([7472])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($6 + [16]) = ($4 << [1])
	$3 = (($6 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($4 + [16]) & [-16])
	$3 = CALL $866($5)
	*($6 + [16]) = ($5 | [1])
	*($6 + [24]) = $3
	*($6 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($3, [7472], $4)
	
.LABEL $label$2
	*(($3 + $4)) = [0]
	CALL $883($6, ($6 + [16]))
	$4 = CALL $679(($0 + [384]), $1, $2, [0], $6)
	if ( ((*($6) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*($6 + [8]))
	
.LABEL $label$5
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$6 }
	CALL $608(($0 + [280]), $1, ($4 & [255]))
	
.LABEL $label$6
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$7 }
	CALL $867(*($6 + [24]))
	
.LABEL $label$7
	*([0] + [4]) = ($6 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $868(($6 + [16]))
}

int_32 .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = [0]
	*($6 + [36]) = $1
	*($6 + [32]) = $1
	*($6 + [40]) = ($1 + $3)
	*($6 + [48]) = ($6 + [32])
	*($6 + [56]) = ($6 + [8])
	CALL $686(($6 + [56]), ($6 + [48]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($6 + [24]))
	$7 = *(($6 + [20]))
	$0 = *(($6 + [16]))
	$4 = *($6 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_64 $0), (int_32 $7), (int_32 $3), (int_32 $5))
	*([0] + [4]) = ($6 + [64])
	return [1]
}

int_32 .FUNC $400 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[20]))
	$5 = *($0 + [4])
	$4 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [16]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $5) > (int_32)[0]), [576])
	CALL memcpy(*($7), ($8 + [16]), [1])
	$5 = (*($7) + [1])
	*($7) = $5
	if ( $3 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$2 = ($8 + [40])
	
.LOOP $label$3:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [6])
	*((($8 + [16]) + [12])) = ($7 + [7])
	*((($8 + [16]) + [16])) = ($7 + [8])
	*((($8 + [16]) + [20])) = ($7 + [12])
	*($2) = ($7 + [16])
	*($8 + [20]) = ($7 + [4])
	CALL $401(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [20])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [48])
	return $0
}

void .FUNC $401 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($2 + [4]), $3, [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), $2, [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $402 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $866([32])
	CALL $406($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [20])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $405(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $867($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $403 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [160])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $405(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $343 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)int_32(($8 - $7) >> [6]) >= (uint_32)$1) ){ goto $label$6 }
	$2 = *($0)
	$3 = int_32(($7 - $2) >> [6])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[67108864]) ){ goto $label$4 }
	$7 = [67108863]
	$8 = ($8 - $2)
	if ( ((uint_32)int_32($8 >> [6]) > (uint_32)[33554430]) ){ goto $label$7 }
	$7 = int_32($8 >> [5])
	$7 = ( $4 ? $7 : ($7 <= $4) )
	if ( ($7 == 0) ){ goto $label$5 }
	if ( ((uint_32)$7 >= (uint_32)[67108864]) ){ goto $label$3 }
	
.LABEL $label$7
	$8 = CALL $866(($7 << [6]))
	goto $label$2 
	
.LABEL $label$6
	$2 = ($0 + [4])
	
.LOOP $label$8:
	*(($7 = CALL memset($7, [0], [64])) + [40]) = (int_64)0
	*($7 + [8]) = (int_64)0
	*(($7 = ($7 + [48]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$6 = (uint_64)*($7) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$8 = [0]
	
.LABEL $label$9
	CALL eosio_assert($8, [1120])
	$7 = (*($2) + [64])
	*($2) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$7 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $882($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($8 + ($7 << [6]))
	$3 = ($8 + ($3 << [6]))
	$7 = $3
	
.LOOP $label$14:
	*(($2 = CALL memset($7, [0], [64])) + [40]) = (int_64)0
	*($2 + [8]) = (int_64)0
	*(($7 = ($2 + [48]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$6 = (uint_64)*($7) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$8 = [0]
	
.LABEL $label$15
	CALL eosio_assert($8, [1120])
	$7 = ($2 + [64])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$14 }
	$8 = *($0)
	$5 = ($0 + [4])
	$1 = (*($5) - $8)
	$2 = ($3 - $1)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$20 }
	CALL memcpy($2, $8, $1)
	$8 = *($0)
	
.LABEL $label$20
	*($0) = $2
	*($5) = $7
	*(($0 + [8])) = $4
	if ( ($8 == 0) ){ goto $label$1 }
	CALL $867($8)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC _ZNSt3__19to_stringEi (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [18176], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $879(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $879(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $347 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [9]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [21])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $276(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $346 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $345 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	*($0 + [24]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

void .FUNC $344 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [160])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [160])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [36])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [160])
	CALL memcpy($2, *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
}

void .FUNC $89 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [576])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [576])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [576])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [576])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [576])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [576])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [576])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $85(*($1), ($0 + [32]))
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $866($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $867($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $82 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([24])) + [12]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [160])
	CALL memcpy(($6 + [8]), ($7 + [8]), [1])
	CALL eosio_assert(((int_32)$4 != (int_32)[9]), [160])
	CALL memcpy(($6 + [9]), ($7 + [9]), [1])
	*($6 + [16]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [16])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $82(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $6) / (int_32)[12]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ((int_32)($6 - $5) / (int_32)[12])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$3 }
	$6 = [357913941]
	$2 = ((int_32)($2 - $5) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $866(((int_32)$6 * (int_32)[12]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = (int_64)0
	*($6 + [8]) = [0]
	*($6 + [4]) = [0]
	*($6) = [0]
	$6 = (*($0) + [12])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$6 * (int_32)[12]))
	$5 = ($2 + ((int_32)$3 * (int_32)[12]))
	$6 = $5
	
.LOOP $label$8:
	*($6) = (int_64)0
	*($6 + [8]) = [0]
	*($6 + [4]) = [0]
	*($6) = [0]
	$6 = ($6 + [12])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 + ((int_32)((int_32)$2 / (int_32)[-12]) * (int_32)[12]))
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $867($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $707 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [32])
	*([0] + [4]) = $20
	$7 = *(($0 + [32]))
	$6 = *(($0 + [36]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$1 }
	$16 = ($6 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$2:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$1 }
	$6 = $16
	$4 = ($16 + [-24])
	$16 = $4
	if ( ((int_32)($4 + $8) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [8])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	$17 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$4
	$17 = [0]
	$16 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$3 }
	$17 = CALL $227($4, $16)
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$4), [32])
	
.LABEL $label$3
	$16 = [0]
	$6 = ((int_32)$17 != (int_32)[0])
	CALL eosio_assert($6, [4208])
	*($20 + [28]) = [0]
	*($20 + [24]) = [0]
	$5 = ($0 + [48])
	if ( ($3 == 0) ){ goto $label$8 }
	$4 = *($2)
	if ( ((int_32)*($2 + [4]) == (int_32)$4) ){ goto $label$5 }
	$9 = ($17 + [16])
	$11 = ($0 + [72])
	$12 = ($0 + [76])
	$13 = ($0 + [56])
	$14 = ($0 + [48])
	$15 = ($2 + [4])
	$18 = [0]
	$19 = [0]
	
.LOOP $label$9:
	$3 = *(($17 + [12]))
	$16 = (*($9) - $3)
	if ( ((int_32)$16 < (int_32)[12]) ){ goto $label$7 }
	$6 = *(($4 + ($19 << [2])))
	$4 = (((uint_32)$16 / (uint_32)[12]) + [-1])
	$16 = [0]
	
.LOOP $label$11:
	$7 = ($4 - $16)
	$8 = (((int_32)$7 / (int_32)[2]) + $16)
	$10 = ($3 + ((int_32)$8 * (int_32)[12]))
	$0 = *($10)
	if ( ($0 <= $6) ){ goto $label$12 }
	if ( ((uint_32)$6 >= (uint_32)$0) ){ goto $label$10 }
	$4 = ($8 + [-1])
	if ( ((int_32)$7 >= (int_32)[2]) ){ goto $label$11 }
	goto $label$7 
	
.LABEL $label$12
	$16 = ($8 + [1])
	if ( ((int_32)$4 > (int_32)$8) ){ goto $label$11 }
	goto $label$7 
	
.LABEL $label$10
	if ( *($10 + [8]) ){ goto $label$7 }
	$1 = *($10 + [4])
	$0 = *($11)
	$6 = *($12)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$13 }
	$16 = ($6 + [-24])
	$8 = ([0] - $0)
	
.LOOP $label$14:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$13 }
	$6 = $16
	$4 = ($16 + [-24])
	$16 = $4
	if ( ((int_32)($4 + $8) != (int_32)[-24]) ){ goto $label$14 }
	
.LABEL $label$13
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$16 }
	$16 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*(($16 + [20])) == (int_32)$5), [32])
	if ( $16 ){ goto $label$15 }
	goto $label$7 
	
.LABEL $label$16
	$16 = CALL db_find_i64(*($14), *($13), (int_64)-4860070093188497408, $1)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$7 }
	$16 = CALL $229($5, $16)
	CALL eosio_assert(((int_32)*($16 + [20]) == (int_32)$5), [32])
	
.LABEL $label$15
	$18 = ($18 + *($16 + [16]))
	*($20 + [28]) = $18
	$4 = *($2)
	$19 = ($19 + [1])
	if ( ($19 <= int_32((*($15) - $4) >> [2])) ){ goto $label$9 }
	$16 = [1]
	goto $label$6 
	
.LABEL $label$8
	$1 = *($0)
	*($20 + [8]) = $2
	*($20 + [16]) = $5
	*($20 + [12]) = ($20 + [24])
	*($20 + [20]) = ($20 + [28])
	CALL eosio_assert($6, [352])
	CALL $708($4, $17, $1, ($20 + [8]))
	$16 = ((int_32)*($20 + [24]) != (int_32)[0])
	goto $label$5 
	
.LABEL $label$7
	$16 = [0]
	
.LABEL $label$6
	*($20 + [24]) = $16
	
.LABEL $label$5
	CALL eosio_assert($16, [4208])
	$16 = *($20 + [28])
	*([0] + [4]) = ($20 + [32])
	return $16
}

int_32 .FUNC $706 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$8 = *($1 + [4])
	$9 = *($1)
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$2 }
	$13 = *($2 + [40])
	$10 = *($2 + [41])
	$11 = *($2 + [42])
	$12 = *($2 + [43])
	$4 = ($2 + [32])
	$5 = ($2 + [34])
	$6 = ($2 + [36])
	$7 = ($2 + [38])
	
.LOOP $label$3:
	if ( *(($9 + [8])) ){ goto $label$4 }
	if ( ((int_32)$13 < (int_32)[1]) ){ goto $label$16 }
	if ( ((int_32)*(($9 + [4])) != (int_32)*($4)) ){ goto $label$16 }
	$2 = ($3 + [4])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)*(($3 + [8]))) ){ goto $label$15 }
	*($2) = ($8 + [4])
	*($8) = *($9)
	goto $label$14 
	
.LABEL $label$16
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$17 }
	if ( ((int_32)*(($9 + [4])) != (int_32)*($5)) ){ goto $label$17 }
	$2 = ($3 + [4])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)*(($3 + [8]))) ){ goto $label$13 }
	*($2) = ($8 + [4])
	*($8) = *($9)
	goto $label$12 
	
.LABEL $label$17
	if ( ((int_32)$11 < (int_32)[1]) ){ goto $label$18 }
	if ( ((int_32)*(($9 + [4])) != (int_32)*($6)) ){ goto $label$18 }
	$2 = ($3 + [4])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)*(($3 + [8]))) ){ goto $label$11 }
	*($2) = ($8 + [4])
	*($8) = *($9)
	goto $label$10 
	
.LABEL $label$18
	if ( ((int_32)$12 < (int_32)[1]) ){ goto $label$7 }
	if ( ((int_32)*(($9 + [4])) != (int_32)*($7)) ){ goto $label$7 }
	$2 = ($3 + [4])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)*(($3 + [8]))) ){ goto $label$9 }
	*($2) = ($8 + [4])
	*($8) = *($9)
	goto $label$8 
	
.LABEL $label$15
	CALL $301($3, $9)
	
.LABEL $label$14
	$13 = ($13 + [-1])
	if ( ((int_32)$12 <= (int_32)[0]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$13
	CALL $301($3, $9)
	
.LABEL $label$12
	$10 = ($10 + [-1])
	if ( ((int_32)$12 <= (int_32)[0]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$11
	CALL $301($3, $9)
	
.LABEL $label$10
	$11 = ($11 + [-1])
	if ( ((int_32)$12 <= (int_32)[0]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$9
	CALL $301($3, $9)
	
.LABEL $label$8
	$12 = ($12 + [-1])
	
.LABEL $label$7
	if ( ((int_32)$12 > (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((int_32)$11 > (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$10 > (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$13 < (int_32)[1]) ){ goto $label$1 }
	
.LABEL $label$5
	$8 = *(($1 + [4]))
	
.LABEL $label$4
	$9 = ($9 + [12])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return [1]
}

void .FUNC $705 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$2 = *($0)
	*($1 + [16]) = [5]
	CALL $869(($1 + [20]), *($4 + [8]))
	CALL $869(($1 + [32]), *($4 + [12]))
	$5 = *($4 + [16])
	*($1 + [48]) = *($5)
	*(($1 + [72])) = *(($5 + [24]))
	*(($1 + [64])) = *(($5 + [16]))
	*(($1 + [56])) = *(($5 + [8]))
	*($1 + [80]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($1 + [84]) = *(*($4 + [20]))
	$4 = *($1 + [20])
	$5 = ( *(($1 + [24])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($5 + [72])
	$3 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	$5 = *(($1 + [32]))
	$5 = ( *(($1 + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$4 = ($5 + $4)
	$3 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	if ( ($4 <= [513]) ){ goto $label$4 }
	$5 = CALL malloc($4)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($7 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$3
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $4)
	CALL $101($6, $1)
	$3 = *($1)
	*($1 + [108]) = CALL db_store_i64(*($2 + [8]), (int_64)-6533188803235414016, *(*($0 + [8])), $3, $5, $4)
	if ( ($4 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $704 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([128])) + [8]) = (int_64)0
	*($3 + [20 align=4]) = (int_64)0
	*($3 + [28 align=4]) = (int_64)0
	*($3 + [36 align=4]) = (int_64)0
	*($3 + [80]) = [0]
	*($3 + [104]) = $1
	CALL $705(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [108])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $94(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$4 }
	CALL $867(*(($3 + [40])))
	
.LABEL $label$4
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*(($3 + [28])))
	
.LABEL $label$5
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $703 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [64])
	*([0] + [4]) = $14
	$1 = *($1 + [4])
	$6 = *($1)
	CALL $564(*($0 + [60]), [1])
	*((($14 + [24]) + [32])) = [0]
	*($14 + [40]) = (int_64)-1
	*($14 + [48]) = (int_64)0
	$12 = *($0)
	*($14 + [24]) = $12
	*($14 + [32]) = $12
	$13 = [0]
	$11 = CALL db_find_i64($12, $12, (int_64)-4921685625297436672, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$1 }
	$13 = CALL $621(($14 + [24]), $11)
	CALL eosio_assert(((int_32)*($13 + [56]) == (int_32)($14 + [24])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [7840])
	$1 = *($1 + [9])
	$9 = (( $1 ? [5] : ($1 <= [5]) ) << [2])
	$8 = *(($0 + [32]))
	$10 = *(($0 + [36]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$2 }
	$1 = ($10 + [-24])
	$7 = ([0] - $8)
	
.LOOP $label$3:
	if ( ((int_64)*(*($1)) == (int_64)$6) ){ goto $label$2 }
	$10 = $1
	$11 = ($1 + [-24])
	$1 = $11
	if ( ((int_32)($11 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$11 = ($0 + [8])
	$7 = ($9 + [12])
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$5 }
	$1 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$11), [32])
	goto $label$4 
	
.LABEL $label$5
	$1 = [0]
	$10 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)8526756653867991040, $6)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $386($11, $10)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$11), [32])
	
.LABEL $label$4
	$1 = ( ($1 + [12]) ? ($0 + [68]) : $1 )
	CALL eosio_assert((((int_32)(*($1 + [4]) - *($1)) / (int_32)[20]) <= $7), [3904])
	*($14 + [16]) = [0]
	*($14 + [8]) = (int_64)0
	$9 = *(($8 + [32]))
	$8 = *($0 + [48])
	$10 = *(($8 + [36]))
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$6 }
	$1 = ($10 + [-24])
	$7 = ([0] - $9)
	
.LOOP $label$7:
	if ( ((int_64)*(*($1)) == (int_64)$6) ){ goto $label$6 }
	$10 = $1
	$11 = ($1 + [-24])
	$1 = $11
	if ( ((int_32)($11 + $7) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$1 = ($8 + [8])
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$11 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$1), [32])
	if ( $11 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$11 = CALL db_find_i64(*(($8 + [8])), *(($8 + [16])), (int_64)-7948290392355504128, $6)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$9 }
	$11 = CALL $227($1, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$1), [32])
	
.LABEL $label$10
	$11 = ($11 + [12])
	goto $label$8 
	
.LABEL $label$9
	$11 = ($8 + [112])
	
.LABEL $label$8
	$1 = ($0 + [48])
	CALL eosio_assert(CALL $706(*($1), $11, $13, ($14 + [8])), [7872])
	CALL $707(*($1), $6, ($14 + [8]), $3)
	$7 = [1]
	if ( $3 ){ goto $label$12 }
	$7 = [0]
	$12 = ((uint_64)((int_64)((int_64)$12 * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	$12 = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $4) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	CALL $388($0, $6, $2, ((((((CASTING uint_32)(uint_64 (uint_64)((int_64)$12 * (int_64)101) >> (uint_64)(int_64)31)) | ((CASTING uint_32)(uint_64 (uint_64)((int_64)$12 * (int_64)101) >> (uint_64)(int_64)23)) & [32512])) | ((CASTING uint_32)(uint_64 (uint_64)((int_64)$12 * (int_64)101) >> (uint_64)(int_64)15)) & [8323072])) | (((CASTING uint_32)(uint_64 (uint_64)((int_64)$12 * (int_64)100) >> (uint_64)(int_64)31)) <= *($13 + [30])) << [25])) | (((CASTING uint_32)(uint_64 (uint_64)((int_64)((uint_64)((int_64)((int_64)$12 * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647) * (int_64)100) >> (uint_64)(int_64)31)) <= *($13 + [31])) << [26])) | [16777216]), [1], [0], [1])
	
.LABEL $label$12
	$1 = *($14 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	*($14 + [12]) = $1
	CALL $867($1)
	
.LABEL $label$13
	$10 = *($14 + [48])
	if ( ($10 == 0) ){ goto $label$14 }
	$0 = ($14 + [52])
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)$10) ){ goto $label$16 }
	
.LOOP $label$17:
	$1 = ($1 + [-24])
	$11 = *($1)
	*($1) = [0]
	if ( ($11 == 0) ){ goto $label$18 }
	CALL $867($11)
	
.LABEL $label$18
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$17 }
	$1 = *(($14 + [48]))
	goto $label$15 
	
.LABEL $label$16
	$1 = $10
	
.LABEL $label$15
	*($0) = $10
	CALL $867($1)
	
.LABEL $label$14
	*([0] + [4]) = ($14 + [64])
	return $7
}

void .FUNC $341 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $7) / (int_32)[56]) >= (uint_32)$1) ){ goto $label$5 }
	$8 = *($0)
	$3 = ((int_32)($7 - $8) / (int_32)[56])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[76695845]) ){ goto $label$3 }
	$7 = [76695844]
	$2 = ((int_32)($2 - $8) / (int_32)[56])
	if ( ((uint_32)$2 > (uint_32)[38347921]) ){ goto $label$6 }
	$7 = ($2 << [1])
	$7 = ( $4 ? $7 : ($7 <= $4) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $866(((int_32)$7 * (int_32)[56]))
	goto $label$2 
	
.LABEL $label$5
	$8 = ($0 + [4])
	
.LOOP $label$7:
	*(($7 = CALL memset($7, [0], [40])) + [8]) = (int_64)0
	*($7) = [0]
	*($7 + [16]) = [0]
	*($7 + [20]) = [0]
	*($7 + [24]) = [0]
	*($7 + [28]) = [0]
	*($7 + [32]) = [0]
	*($7 + [33]) = [0]
	*($7 + [40]) = (int_64)0
	*(($7 = ($7 + [48]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$6 = (uint_64)*($7) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$2 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$2 = [0]
	
.LABEL $label$8
	CALL eosio_assert($2, [1120])
	$7 = (*($8) + [56])
	*($8) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$7 * (int_32)[56]))
	$3 = ($2 + ((int_32)$3 * (int_32)[56]))
	$7 = $3
	
.LOOP $label$13:
	*(($2 = CALL memset($7, [0], [40])) + [8]) = (int_64)0
	*($2) = [0]
	*($2 + [16]) = [0]
	*($2 + [20]) = [0]
	*($2 + [24]) = [0]
	*($2 + [28]) = [0]
	*($2 + [32]) = [0]
	*($2 + [33]) = [0]
	*($2 + [40]) = (int_64)0
	*(($7 = ($2 + [48]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$6 = (uint_64)*($7) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$8 = [0]
	
.LABEL $label$14
	CALL eosio_assert($8, [1120])
	$7 = ($2 + [56])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$13 }
	$2 = *($0)
	$5 = ($0 + [4])
	$8 = (*($5) - $2)
	$1 = ($3 + ((int_32)((int_32)$8 / (int_32)[-56]) * (int_32)[56]))
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$19 }
	CALL memcpy($1, $2, $8)
	$2 = *($0)
	
.LABEL $label$19
	*($0) = $1
	*($5) = $7
	*(($0 + [8])) = $4
	if ( ($2 == 0) ){ goto $label$1 }
	CALL $867($2)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $701 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [160])
	CALL memcpy(($0 + [8]), *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($0 + [12]), *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($0 + [16]), *($1 + [4]), [4])
	*($1 + [4]) = (*($1 + [4]) + [4])
}

void .FUNC $700 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [16]) = (*($1 + [16]) + *(*($3)))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [21])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $276(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $340 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [592])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = ((int_32)($4 - $7) / (int_32)[56])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $341($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ((int_32)$6 * (int_32)[56]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($8 + [20])
	
.LOOP $label$6:
	*($8) = $0
	*($8 + [8]) = $7
	*((($8 + [8]) + [8])) = ($7 + [16])
	*($6) = ($7 + [20])
	*((($8 + [8]) + [16])) = ($7 + [24])
	*((($8 + [8]) + [20])) = ($7 + [28])
	*((($8 + [8]) + [24])) = ($7 + [32])
	*($8 + [12]) = ($7 + [8])
	*((($8 + [8]) + [28])) = ($7 + [33])
	*((($8 + [8]) + [32])) = ($7 + [40])
	CALL $342(($8 + [8]), $8)
	$7 = ($7 + [56])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [48])
	return $0
}

void .FUNC $709 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$15 = *($0)
	if ( ((int_32)*($15 + [4]) == (int_32)*($15)) ){ goto $label$1 }
	$15 = *($0 + [4])
	$9 = ($1 + [16])
	$13 = ($0 + [4])
	$12 = ($0 + [8])
	$14 = [0]
	
.LOOP $label$2:
	*($15) = [0]
	$8 = ($1 + [12])
	$3 = *($8)
	$15 = (*($9) - $3)
	if ( ((int_32)$15 < (int_32)[12]) ){ goto $label$3 }
	$2 = *((*(*($0)) + ($14 << [2])))
	$16 = (((uint_32)$15 / (uint_32)[12]) + [-1])
	$15 = [0]
	
.LOOP $label$5:
	$4 = ($16 - $15)
	$5 = (((int_32)$4 / (int_32)[2]) + $15)
	$10 = ((int_32)$5 * (int_32)[12])
	$11 = ($3 + $10)
	$6 = *($11)
	if ( ($6 <= $2) ){ goto $label$6 }
	if ( ((uint_32)$2 >= (uint_32)$6) ){ goto $label$4 }
	$16 = ($5 + [-1])
	if ( ((int_32)$4 >= (int_32)[2]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$15 = ($5 + [1])
	if ( ((int_32)$16 > (int_32)$5) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( *($11 + [8]) ){ goto $label$3 }
	$7 = *($11 + [4])
	$4 = *($6 + [24])
	$6 = *($12)
	$2 = *(($6 + [28]))
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$7 }
	$15 = ($2 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$8:
	if ( ((int_64)*(*($15)) == (int_64)$7) ){ goto $label$7 }
	$2 = $15
	$16 = ($15 + [-24])
	$15 = $16
	if ( ((int_32)($16 + $5) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$10 }
	$15 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*(($15 + [20])) == (int_32)$6), [32])
	if ( $15 ){ goto $label$9 }
	goto $label$3 
	
.LABEL $label$10
	$15 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-4860070093188497408, $7)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$3 }
	$15 = CALL $229($6, $15)
	CALL eosio_assert(((int_32)*($15 + [20]) == (int_32)$6), [32])
	
.LABEL $label$9
	*(($16 = *(($0 + [12])))) = (*($16) + *($15 + [16]))
	$15 = (*($8) + $10)
	$5 = ($15 + [12])
	$16 = (*($9) - $5)
	$2 = ((int_32)$16 / (int_32)[12])
	if ( ($16 == 0) ){ goto $label$11 }
	CALL memmove($15, $5, $16)
	
.LABEL $label$11
	*($9) = ($15 + ((int_32)$2 * (int_32)[12]))
	*(*($13)) = [1]
	
.LABEL $label$3
	$15 = *($13)
	if ( (*($15) == 0) ){ goto $label$1 }
	$16 = *($0)
	$14 = ($14 + [1])
	if ( ($14 <= int_32((*($16 + [4]) - *($16)) >> [2])) ){ goto $label$2 }
	
.LABEL $label$1
}

void .FUNC $708 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	CALL $709($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$3 = [12]
	$5 = ($1 + [12])
	$7 = *($1 + [12])
	$6 = *(($1 + [16]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[12]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$2 }
	$3 = ((((int_32)((uint_32)($8 + [-12]) / (uint_32)[12]) * (int_32)[10]) + $3) + [10])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$10 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$10 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$3
	*($11) = $10
	$6 = ($10 + $3)
	*($11 + [8]) = $6
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [576])
	CALL memcpy($10, $1, [8])
	$7 = ($10 + [8])
	CALL eosio_assert(((int_32)($6 - $7) > (int_32)[3]), [576])
	CALL memcpy($7, ($1 + [8]), [4])
	*($11 + [4]) = ($10 + [12])
	CALL $244($11, $5)
	CALL db_update_i64(*($1 + [28]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [16])
}

int_32 .FUNC $497 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $85(CALL $85($0, ($1 + [8])), ($1 + [20]))
	*($3 + [15]) = *($1 + [32])
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [36]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $496 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [16])
	$8 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$5 = ($1 + [8])
	CALL $869($5, *($3))
	CALL $869(($1 + [20]), *($3 + [4]))
	*($1 + [40]) = (*($1 + [40]) + [1])
	if ( (*(*($3 + [8])) == 0) ){ goto $label$1 }
	*($1 + [32]) = [0]
	*($1 + [36]) = [0]
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$3 = *($5)
	$5 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($5 + [25])
	$6 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$2 }
	$5 = *(($1 + [20]))
	$5 = ( *(($1 + [24])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$3 = ($5 + $3)
	$6 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($3 <= [513]) ){ goto $label$5 }
	$7 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$7 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$4
	*($8 + [4]) = $7
	*($8) = $7
	*($8 + [8]) = ($7 + $3)
	CALL $497($8, $1)
	CALL db_update_i64(*($1 + [60]), $2, $7, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($7)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $495 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [2272])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [2320])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2384])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $867($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $867($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	$5 = [0]
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$3 = *($0)
	*($6 + [8]) = $3
	*($6 + [16]) = $3
	$1 = CALL db_find_i64($3, $3, (int_64)-4796533164510019584, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $81(($6 + [8]), $1) + [12]) == (int_32)($6 + [8])), [32])
	$5 = [1]
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	$4 = ($6 + [36])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$4:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	CALL $867($0)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$4 }
	$1 = *(($6 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$1 = $2
	
.LABEL $label$2
	*($4) = $2
	CALL $867($1)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [48])
	return $5
}

void .FUNC $493 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [16]) = (*($1 + [16]) - *(*($3)))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [21])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $276(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $492 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([72]))) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16 align=4]) = (int_64)0
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [32]) = [0]
	*($3 + [36]) = [0]
	*($3 + [40]) = [0]
	*($3 + [48]) = (int_64)0
	*($3 + [56]) = $1
	CALL $500(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [60])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $501(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$4 }
	CALL $867(*(($3 + [28])))
	
.LABEL $label$4
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*(($3 + [16])))
	
.LABEL $label$5
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $491 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([72]))) = (int_64)0
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [16 align=4]) = (int_64)0
	*($6 + [24 align=4]) = (int_64)0
	*($6 + [32]) = [0]
	*($6 + [36]) = [0]
	*($6 + [40]) = [0]
	*($6 + [48]) = (int_64)0
	*($6 + [56]) = $0
	CALL $502(($8 + [32]), $6)
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $501(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [20]) & [1]) == 0) ){ goto $label$10 }
	CALL $867(*(($4 + [28])))
	
.LABEL $label$10
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*(($4 + [16])))
	
.LABEL $label$11
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $490 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$17 = (*([0] + [4]) - [48])
	*([0] + [4]) = $17
	$14 = *(($0 + [32]))
	$5 = *(($0 + [36]))
	if ( ((int_32)$5 == (int_32)$14) ){ goto $label$1 }
	$16 = ($5 + [-24])
	$15 = ([0] - $14)
	
.LOOP $label$2:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$1 }
	$5 = $16
	$6 = ($16 + [-24])
	$16 = $6
	if ( ((int_32)($6 + $15) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [8])
	if ( ((int_32)$5 == (int_32)$14) ){ goto $label$4 }
	$16 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)$6), [32])
	goto $label$3 
	
.LABEL $label$4
	$16 = [0]
	$5 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-5915108674644213760, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$16 = CALL $72($6, $5)
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)$6), [32])
	
.LABEL $label$3
	$4 = ( ($16 + [12]) ? ($0 + [56]) : $16 )
	$14 = *($4)
	if ( ((int_32)$14 == (int_32)*($4 + [4])) ){ goto $label$6 }
	$13 = ($3 + [4])
	$8 = ($17 + [24])
	$9 = ($17 + [32])
	$10 = ($17 + [40])
	$11 = (($17 + [8]) + [8])
	$12 = ($17 + [36])
	
.LOOP $label$7:
	$7 = *($14 + [4])
	*($8) = (int_64)-1
	*($9) = (int_64)0
	*($10) = [0]
	$1 = *($0)
	*($11) = $1
	*($17 + [8]) = $1
	$15 = [0]
	$16 = CALL db_find_i64($1, $1, (int_64)-4796533164510019584, $7)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$8 }
	$15 = CALL $81(($17 + [8]), $16)
	CALL eosio_assert(((int_32)*($15 + [12]) == (int_32)($17 + [8])), [32])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [3328])
	$5 = *($9)
	if ( ($5 == 0) ){ goto $label$9 }
	$16 = *($12)
	if ( ((int_32)$16 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$16 = ($16 + [-24])
	$6 = *($16)
	*($16) = [0]
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $867($6)
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$16) ){ goto $label$12 }
	$16 = *($9)
	goto $label$10 
	
.LABEL $label$11
	$16 = $5
	
.LABEL $label$10
	*($12) = $5
	CALL $867($16)
	
.LABEL $label$9
	if ( ((int_32)*($15 + [8]) != (int_32)$2) ){ goto $label$14 }
	$16 = *(($3 + [4]))
	if ( ((int_32)$16 == (int_32)*(($3 + [8]))) ){ goto $label$15 }
	*($13) = ($16 + [4])
	*($16) = *($14)
	goto $label$14 
	
.LABEL $label$15
	CALL $301($3, $14)
	
.LABEL $label$14
	$14 = ($14 + [12])
	if ( ((int_32)$14 != (int_32)*(($4 + [4]))) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = ($3 + [4])
	
.LABEL $label$5
	$16 = *($3)
	$6 = *($13)
	*([0] + [4]) = ($17 + [48])
	return ((int_32)$6 != (int_32)$16)
}

void .FUNC $78 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [12])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [16])) = $6
	CALL $867($6)
	
.LABEL $label$11
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $867($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [592])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = ((int_32)($2 - $7) / (int_32)[12])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $80($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ((int_32)$4 * (int_32)[12]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$3 = *($4)
	
.LOOP $label$6:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[3]), [160])
	CALL memcpy($7, *($4), [4])
	$3 = (*($4) + [4])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[1]), [160])
	CALL memcpy(($7 + [4]), *($4), [2])
	$3 = (*($4) + [2])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[3]), [160])
	CALL memcpy(($7 + [8]), *($4), [4])
	$3 = (*($4) + [4])
	*($4) = $3
	$7 = ($7 + [12])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $499 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $498 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [12]) = ((int_32)*($3 + [15]) != (int_32)[0])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [12])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [16])) = $6
	CALL $867($6)
	
.LABEL $label$11
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $867($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $280 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0) = (int_64)0
	$4 = [0]
	*($0 + [8]) = [0]
	*($0 + [12]) = [0]
	*($0 + [16]) = [0]
	*($0 + [20]) = [0]
	*($0 + [24]) = [0]
	*($0 + [28]) = [0]
	*($0 + [29]) = [0]
	*($0 + [32]) = (int_64)0
	*(($5 = ($0 + [40]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$3 = (uint_64)*($5) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	*($0 + [48]) = [0]
	*($0 + [52 align=4]) = (int_64)0
	*(($0 + [60])) = [0]
	*($0 + [64]) = $1
	CALL $282(*($2 + [4]), $0)
	*($0 + [68]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC $692 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*((($9 + [40]) + [32])) = [0]
	*($9 + [56]) = (int_64)-1
	*($9 + [64]) = (int_64)0
	$7 = *($0)
	*($9 + [40]) = $7
	*($9 + [48]) = $7
	$3 = *(($0 + [32]))
	$5 = *(($0 + [36]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$1 }
	$8 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$1 }
	$5 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [8])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$4 }
	$8 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [32])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$5 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)8526756653867991040, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $386($6, $5)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [32])
	
.LABEL $label$3
	$5 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($5, [4384])
	*($9 + [36]) = [0]
	*($9 + [32]) = [0]
	$1 = *($0)
	*($9 + [8]) = $2
	*($9 + [16]) = $0
	*($9 + [12]) = ($9 + [32])
	*($9 + [20]) = ($9 + [40])
	*($9 + [24]) = ($9 + [36])
	CALL eosio_assert($5, [352])
	CALL $694($6, $8, $1, ($9 + [8]))
	CALL eosio_assert(((int_32)*($9 + [32]) != (int_32)[0]), [4384])
	$4 = *($9 + [36])
	$5 = *($9 + [64])
	if ( ($5 == 0) ){ goto $label$5 }
	$0 = ($9 + [68])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$9 }
	CALL $867($6)
	
.LABEL $label$9
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$8 }
	$8 = *(($9 + [64]))
	goto $label$6 
	
.LABEL $label$7
	$8 = $5
	
.LABEL $label$6
	*($0) = $5
	CALL $867($8)
	
.LABEL $label$5
	*([0] + [4]) = ($9 + [80])
	return $4
}

void .FUNC $35 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$7 = (*([0] + [4]) - [48])
	$11 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$10 = *(*($3))
	*($1) = $10
	*($1 + [8]) = (*($1 + [8]) + [1])
	$8 = [12]
	$3 = *($3 + [4])
	$6 = ($1 + [12])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	CALL $36($6, *($3), *($3 + [4]))
	$10 = *($1)
	
.LABEL $label$1
	$3 = ($1 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$10), [512])
	$6 = *($6)
	$5 = *(($1 + [16]))
	$9 = ($5 - $6)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	
.LOOP $label$2:
	$8 = ($8 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$3 }
	$8 = (($9 & [-8]) + $8)
	
.LABEL $label$3
	if ( ($8 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($8)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($7 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	*($11 + [8]) = $9
	$5 = ($9 + $8)
	*($11 + [16]) = $5
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	$6 = ($9 + [8])
	CALL eosio_assert(((int_32)($5 - $6) > (int_32)[3]), [576])
	CALL memcpy($6, $3, [4])
	$3 = ($9 + [12])
	*($11 + [12]) = $3
	$10 = (CASTING uint_64)(uint_32 int_32((*(($1 + [16])) - *(($1 + [12]))) >> [3]))
	
.LOOP $label$6:
	$6 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$7 = ((int_64)$10) != (int_64)0
	*($11 + [32]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)($5 - $3) > (int_32)[0]), [576])
	CALL memcpy($3, ($11 + [32]), [1])
	$3 = ($3 + [1])
	*($11 + [12]) = $3
	if ( $7 ){ goto $label$6 }
	$6 = *(($1 + [16]))
	$3 = *(($1 + [12]))
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$7 = (($11 + [32]) + [12])
	
.LOOP $label$8:
	*($11 + [24]) = ($11 + [8])
	*($11 + [32]) = $3
	*((($11 + [32]) + [8])) = ($3 + [2])
	*($7) = ($3 + [4])
	*($11 + [36]) = ($3 + [1])
	CALL $37(($11 + [32]), ($11 + [24]))
	$3 = ($3 + [8])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	
.LABEL $label$7
	CALL db_update_i64(*($1 + [28]), $2, $9, $8)
	if ( ($8 <= [513]) ){ goto $label$9 }
	CALL free($9)
	
.LABEL $label$9
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($11 + [48])
}

void .FUNC $228 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	*([0] + [4]) = $9
	*($9 + [56]) = $1
	*($9 + [54]) = $2
	*($9 + [48]) = $3
	$4 = (CASTING uint_64)(uint_32 $2)
	$8 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$1 }
	$3 = ($7 + [-24])
	$5 = ([0] - $8)
	
.LOOP $label$2:
	if ( ((int_64)*(*($3)) == (int_64)$4) ){ goto $label$1 }
	$7 = $3
	$6 = ($3 + [-24])
	$3 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$4 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*(($8 + [20])) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-4860070093188497408, $4)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $229($3, $6)
	CALL eosio_assert(((int_32)*($8 + [20]) == (int_32)$3), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [2656])
	*($9 + [36]) = $2
	*($9 + [32]) = [0]
	*($9 + [40]) = [0]
	$2 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$5 }
	$3 = ($7 + [-24])
	$5 = ([0] - $2)
	
.LOOP $label$6:
	if ( ((int_64)*(*($3)) == (int_64)$1) ){ goto $label$5 }
	$7 = $3
	$6 = ($3 + [-24])
	$3 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$3 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$11 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$3), [32])
	$1 = *($0)
	if ( $6 ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$6 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7948290392355504128, $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$9 }
	$6 = CALL $227($3, $6)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$3), [32])
	$1 = *($0)
	
.LABEL $label$10
	*($9 + [16]) = $0
	*($9 + [12]) = ($9 + [56])
	*($9 + [8]) = ($9 + [32])
	*($9 + [20]) = ($9 + [54])
	*($9 + [24]) = ($9 + [48])
	CALL eosio_assert([1], [352])
	CALL $231($3, $6, $1, ($9 + [8]))
	goto $label$7 
	
.LABEL $label$9
	$1 = *($0)
	
.LABEL $label$8
	*($9 + [16]) = $0
	*($9 + [12]) = ($9 + [56])
	*($9 + [8]) = ($9 + [32])
	*($9 + [20]) = ($9 + [54])
	*($9 + [24]) = ($9 + [48])
	CALL $230($9, $3, $1, ($9 + [8]))
	
.LABEL $label$7
	if ( ((int_32)*($9 + [48]) != (int_32)[1]) ){ goto $label$12 }
	if ( ((*($8 + [9]) & [255]) <= [4]) ){ goto $label$12 }
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	CALL $232(($9 + [8]), ($9 + [54]))
	CALL $233($0, [1], *($9 + [56]), ($9 + [8]), [1])
	$3 = *($9 + [8])
	if ( ($3 == 0) ){ goto $label$12 }
	*($9 + [12]) = $3
	CALL $867($3)
	
.LABEL $label$12
	*([0] + [4]) = ($9 + [64])
}

void .FUNC $342 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [160])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [160])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$2 = *($0 + [32])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($2, *($0 + [4]), [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]), [160])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $306 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [96])
	*([0] + [4]) = $10
	*($10 + [88]) = $2
	$6 = ($0 + [8])
	$5 = [0]
	$8 = [0]
	$7 = ($0 + [16])
	$4 = CALL db_lowerbound_i64(*($0 + [8]), *($7), (int_64)3631284361385115648, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	CALL $214($6, $4)
	$8 = [1]
	
.LABEL $label$1
	CALL eosio_assert($8, [4880])
	$8 = CALL db_lowerbound_i64(*($6), *($7), (int_64)3631284361385115648, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $214($6, $8)
	
.LABEL $label$2
	$2 = *($0)
	*($10 + [48]) = $1
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [352])
	CALL $473($6, $5, $2, ($10 + [48]))
	*(($10 + [80])) = [0]
	*($10 + [64]) = (int_64)-1
	$9 = (int_64)0
	*($10 + [72]) = (int_64)0
	$2 = *($0)
	*($10 + [48]) = $2
	*($10 + [56]) = $2
	$6 = CALL db_lowerbound_i64($2, $2, (int_64)6299033814149437440, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	CALL $474(($10 + [48]), $6)
	*($10 + [20]) = [0]
	*($10 + [16]) = ($10 + [48])
	$2 = *(*(CALL $475(($10 + [16])) + [4]))
	$9 = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*(($6 = ($10 + [64]))) = $9
	CALL eosio_assert((uint_64)($9 <= (int_64)-2), [2800])
	*($10 + [40]) = *($6)
	*($10 + [36]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) - *([0] + [12]))
	$2 = *($0)
	*($10 + [24]) = $1
	*($10 + [32]) = $3
	*($10 + [20]) = ($10 + [36])
	*($10 + [16]) = ($10 + [40])
	*($10 + [28]) = ($10 + [88])
	CALL $476(($10 + [8]), ($10 + [48]), $2, ($10 + [16]))
	$5 = *($10 + [72])
	if ( ($5 == 0) ){ goto $label$4 }
	$1 = ($10 + [76])
	$0 = *($1)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$8 }
	if ( ((*($6 + [40]) & [1]) == 0) ){ goto $label$9 }
	CALL $867(*(($6 + [48])))
	
.LABEL $label$9
	CALL $867($6)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($10 + [72]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($1) = $5
	CALL $867($0)
	
.LABEL $label$4
	*([0] + [4]) = ($10 + [96])
}

int_32 .FUNC $633 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([48])) + [8]) = [0]
	*($6) = (int_64)0
	*($6 + [12 align=4]) = (int_64)0
	*($6 + [20 align=4]) = (int_64)0
	*($6 + [28]) = [0]
	*($6 + [32]) = $0
	CALL $635(($8 + [32]), $6)
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $636(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $632 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [112])
	*([0] + [4]) = $14
	CALL require_auth($1)
	$11 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$1 }
	$13 = ($8 + [-24])
	$4 = ([0] - $11)
	
.LOOP $label$2:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$1 }
	$8 = $13
	$9 = ($13 + [-24])
	$13 = $9
	if ( ((int_32)($9 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [8])
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$4 }
	$11 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [20]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$11 = [0]
	$13 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-7695177867839143936, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$3 }
	$11 = CALL $43($3, $13)
	CALL eosio_assert(((int_32)*($11 + [20]) == (int_32)$3), [32])
	
.LABEL $label$3
	$12 = [0]
	*($14 + [92]) = [0]
	$13 = [0]
	$6 = *($4)
	$4 = ( ($11 + [8]) ? ($0 + [68]) : $11 )
	$7 = *($4 + [4])
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$5 }
	$8 = ((int_32)($7 - $6) / (int_32)[12])
	$13 = [0]
	$9 = $6
	
.LOOP $label$6:
	if ( ((int_32)*($9) == (int_32)$2) ){ goto $label$5 }
	$9 = ($9 + [12])
	$13 = ($13 + [1])
	*($14 + [92]) = $13
	if ( ($13 <= $8) ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert(($13 <= ((int_32)($7 - $6) / (int_32)[12])), [6608])
	$9 = *($4)
	*((($14 + [48]) + [32])) = [0]
	*($14 + [64]) = (int_64)-1
	*($14 + [72]) = (int_64)0
	$10 = *($0)
	*($14 + [48]) = $10
	*($14 + [56]) = $10
	$8 = CALL db_find_i64($10, $10, (int_64)-4852160326797361152, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$7 }
	$12 = CALL $567(($14 + [48]), $8)
	CALL eosio_assert(((int_32)*($12 + [28]) == (int_32)($14 + [48])), [32])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [5808])
	$8 = ($9 + ((int_32)$13 * (int_32)[12]))
	$5 = *($8 + [9])
	*((($14 + [8]) + [32])) = [0]
	*($14 + [32]) = (int_64)0
	*($14 + [24]) = (int_64)-1
	$10 = *($0)
	*($14 + [8]) = $10
	*($14 + [16]) = $10
	$4 = ($8 + [8])
	$2 = [0]
	$8 = CALL db_find_i64($10, $10, (int_64)-4852160317217570816, ((int_64)*($8 + [8]) + (int_64)1))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	$2 = CALL $633(($14 + [8]), $8)
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)($14 + [8])), [32])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [6640])
	if ( ((int_32)*($4) != (int_32)[4]) ){ goto $label$10 }
	if ( ((int_32)*(($12 + [8])) != (int_32)[5]) ){ goto $label$10 }
	CALL eosio_assert(((uint_32)*(($9 + ((int_32)$13 * (int_32)[12])) + [4]) > (uint_32)[15]), [6672])
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert(((uint_32)*(($9 + ((int_32)$13 * (int_32)[12])) + [4]) >= (uint_32)*($2 + [8])), [6672])
	
.LABEL $label$9
	CALL eosio_assert((*($4) <= (uint_32([354441] >> ((*(($12 + [8])) << [2]) + [-4])) & [15])), [6704])
	$7 = *($6 + [24])
	$6 = *($0 + [48])
	$8 = *(($6 + [28]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$11 }
	$13 = ($8 + [-24])
	$4 = ([0] - $7)
	
.LOOP $label$12:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$11 }
	$8 = $13
	$9 = ($13 + [-24])
	$13 = $9
	if ( ((int_32)($9 + $4) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$14 }
	$9 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$6), [32])
	goto $label$13 
	
.LABEL $label$14
	$9 = [0]
	$13 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$13 }
	$9 = CALL $13($6, $13)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$6), [32])
	
.LABEL $label$13
	$13 = [0]
	$4 = ((int_32)$9 != (int_32)[0])
	CALL eosio_assert($4, [192])
	$8 = (*(($12 + [8])) + [-1])
	if ( ((uint_32)$8 > (uint_32)[4]) ){ goto $label$15 }
	goto $label$20 
	
.LABEL $label$20
	$13 = *($2 + [12])
	goto $label$15 
	
.LABEL $label$19
	$13 = *($2 + [16])
	goto $label$15 
	
.LABEL $label$18
	$13 = *($2 + [20])
	goto $label$15 
	
.LABEL $label$17
	$13 = *($2 + [24])
	goto $label$15 
	
.LABEL $label$16
	$13 = *($2 + [28])
	
.LABEL $label$15
	CALL eosio_assert(((uint_32)$13 <= (uint_32)*($9 + [16])), [5040])
	if ( ((int_32)$13 < (int_32)[1]) ){ goto $label$21 }
	$8 = *(($0 + [48]))
	*($14 + [104]) = $13
	CALL eosio_assert(((uint_32)*(($9 + [16])) >= (uint_32)$13), [5040])
	$1 = *($8 + [40])
	*($14 + [96]) = ($14 + [104])
	CALL eosio_assert($4, [352])
	CALL $493($8, $9, $1, ($14 + [96]))
	
.LABEL $label$21
	$1 = *($0)
	*($14 + [104]) = ($14 + [92])
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [352])
	CALL $634($3, $11, $1, ($14 + [104]))
	$8 = *($14 + [32])
	if ( ($8 == 0) ){ goto $label$22 }
	$4 = ($14 + [36])
	$13 = *($4)
	if ( ((int_32)$13 == (int_32)$8) ){ goto $label$24 }
	
.LOOP $label$25:
	$13 = ($13 + [-24])
	$9 = *($13)
	*($13) = [0]
	if ( ($9 == 0) ){ goto $label$26 }
	CALL $867($9)
	
.LABEL $label$26
	if ( ((int_32)$8 != (int_32)$13) ){ goto $label$25 }
	$13 = *(($14 + [32]))
	goto $label$23 
	
.LABEL $label$24
	$13 = $8
	
.LABEL $label$23
	*($4) = $8
	CALL $867($13)
	
.LABEL $label$22
	$8 = *($14 + [72])
	if ( ($8 == 0) ){ goto $label$27 }
	$4 = ($14 + [76])
	$13 = *($4)
	if ( ((int_32)$13 == (int_32)$8) ){ goto $label$29 }
	
.LOOP $label$30:
	$13 = ($13 + [-24])
	$9 = *($13)
	*($13) = [0]
	if ( ($9 == 0) ){ goto $label$31 }
	CALL $867($9)
	
.LABEL $label$31
	if ( ((int_32)$8 != (int_32)$13) ){ goto $label$30 }
	$13 = *(($14 + [72]))
	goto $label$28 
	
.LABEL $label$29
	$13 = $8
	
.LABEL $label$28
	*($4) = $8
	CALL $867($13)
	
.LABEL $label$27
	*([0] + [4]) = ($14 + [112])
	$8
	return int_32(($5 << [24]) >> [24])
}

void .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [160])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $209(*($1), *($0 + [12]))
}

int_32 .FUNC $209 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $210($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $871($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $866($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $871($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $867($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $868($7)
	return (unreachable)
}

void .FUNC $637 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [160])
	CALL memcpy(($2 + [8]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [160])
	CALL memcpy(($2 + [10]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($2 + [12]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($2 + [16]), *($1 + [4]), [4])
	*($1 + [4]) = (*($1 + [4]) + [4])
}

void .FUNC $636 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $635 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $634 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$9 = (*([0] + [4]) - [48])
	$11 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*(($3 = (*($1 + [8]) + ((int_32)*(*($3)) * (int_32)[12]))) + [8]) = (*($3 + [8]) + [1])
	$4 = *($1)
	CALL eosio_assert([1], [512])
	$7 = *($1 + [8])
	$6 = *(($1 + [12]))
	$5 = ($6 - $7)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[12]))
	$3 = [8]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$2 }
	$3 = ((((int_32)((uint_32)($5 + [-12]) / (uint_32)[12]) * (int_32)[7]) + $3) + [7])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$8 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$8 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$3
	*($11 + [8]) = $8
	$5 = ($8 + $3)
	*($11 + [16]) = $5
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [576])
	CALL memcpy($8, $1, [8])
	$9 = ($8 + [8])
	*($11 + [12]) = $9
	$10 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [12])) - *(($1 + [8]))) / (int_32)[12]))
	
.LOOP $label$5:
	$6 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$7 = ((int_64)$10) != (int_64)0
	*($11 + [32]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)($5 - $9) > (int_32)[0]), [576])
	CALL memcpy($9, ($11 + [32]), [1])
	$9 = ($9 + [1])
	*($11 + [12]) = $9
	if ( $7 ){ goto $label$5 }
	$6 = *(($1 + [12]))
	$9 = *(($1 + [8]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	*($11 + [24]) = ($11 + [8])
	*($11 + [32]) = $9
	*((($11 + [32]) + [8])) = ($9 + [8])
	*((($11 + [32]) + [12])) = ($9 + [9])
	*($11 + [36]) = ($9 + [4])
	CALL $47(($11 + [32]), ($11 + [24]))
	$9 = ($9 + [12])
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$7 }
	
.LABEL $label$6
	CALL db_update_i64(*($1 + [24]), $2, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($8)
	
.LABEL $label$8
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($11 + [48])
}

int_32 .FUNC $202 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $203 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $200 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [2272])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [2320])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2384])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $867($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $867($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $201 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [16]) = (*($1 + [16]) - *(*($3)))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [56]) = ($5 + [33])
	*($5 + [52]) = $5
	*($5 + [48]) = $5
	CALL $202(($5 + [48]), $1)
	CALL db_update_i64(*($1 + [44]), $2, $5, [33])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [64])
}

void .FUNC $206 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$7 = *($0 + [4])
	$8 = ((int_32)($7 - $4) / (int_32)[12])
	$6 = ($8 + [1])
	if ( ((uint_32)$6 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[12])
	if ( ((uint_32)$3 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($3 << [1])
	$5 = ( $6 ? $5 : ($5 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$5 * (int_32)[12]))
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$2 = *($1)
	*($1) = (int_64)0
	*(($8 = ($6 + ((int_32)$8 * (int_32)[12])))) = $2
	$1 = ($1 + [8])
	$3 = *($1)
	*($1) = [0]
	*(($8 + [8])) = $3
	$5 = ($6 + ((int_32)$5 * (int_32)[12]))
	$6 = ($8 + [12])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$1 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$7:
	*(($8 + [-12])) = *($7)
	$4 = ($7 + [8])
	*(($8 + [-4])) = *($4)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($4) = [0]
	$8 = ($8 + [-12])
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	$8 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$9:
	if ( ((*($7) & [1]) == 0) ){ goto $label$10 }
	CALL $867(*(($7 + [8])))
	
.LABEL $label$10
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $8) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $867($4)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $207 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [12]) = $1
	*($6 + [8]) = $1
	*($6 + [16]) = ($1 + $2)
	*($6 + [24]) = ($6 + [8])
	*($6 + [36]) = ($0 + [8])
	*($6 + [32]) = $0
	*($6 + [40]) = ($0 + [16])
	*($6 + [44]) = ($0 + [32])
	CALL $208(($6 + [32]), ($6 + [24]))
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $204 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $205 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$4 = *($1)
	if ( (( *($1 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ) == 0) ){ goto $label$1 }
	$4 = CALL $876($1, $3, [0])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	$5 = ($2 + [8])
	$6 = ($2 + [4])
	$7 = [0]
	
.LOOP $label$4:
	CALL $884($8, $1, $7, ($4 - $7), $1)
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*($5)) ){ goto $label$6 }
	*($7) = *($8)
	$7 = ($8 + [8])
	*(($7 + [8])) = *($7)
	*($7) = [0]
	*($8) = [0]
	*($8 + [4]) = [0]
	*($6) = (*($6) + [12])
	goto $label$5 
	
.LABEL $label$6
	CALL $206($2, $8)
	if ( ((*($8) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*(($8 + [8])))
	
.LABEL $label$5
	$7 = *($1)
	if ( ((int_32)$4 == (int_32)(( *(($1 + [4])) ? uint_32($7 >> [1]) : ($7 & [1]) ) + [-1])) ){ goto $label$1 }
	$7 = ($4 + [1])
	$4 = CALL $876($1, $3, $7)
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$5 = ($2 + [8])
	$6 = ($2 + [4])
	$7 = [0]
	
.LABEL $label$2
	$4 = *($1)
	CALL $884($8, $1, $7, (( *(($1 + [4])) ? uint_32($4 >> [1]) : ($4 & [1]) ) - $7), $1)
	$1 = *($6)
	if ( ((uint_32)$1 >= (uint_32)*($5)) ){ goto $label$7 }
	*($1) = *($8)
	$1 = ($8 + [8])
	*(($1 + [8])) = *($1)
	*($1) = [0]
	*($8) = [0]
	*($8 + [4]) = [0]
	*($6) = (*($6) + [12])
	goto $label$1 
	
.LABEL $label$7
	CALL $206($2, $8)
	if ( ((*($8) & [1]) == 0) ){ goto $label$1 }
	CALL $867(*($8 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $800 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$5 = *($3)
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*(($1 + [16]))), [3360])
	$6 = (int_64)
	*($1 + [8]) = $6(*($1 + [8]) - *($5)))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [3440])
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [48]))), [3360])
	$6 = (int_64)
	*($1 + [40]) = $6(*($1 + [40]) - *($3)))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)*($1 + [40]) < (int_64)4611686018427387904), [3440])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($7 + [88]) = ($7 + [72])
	*($7 + [84]) = $7
	*($7 + [80]) = $7
	CALL $459(($7 + [80]), $1)
	CALL db_update_i64(*($1 + [76]), $2, $7, [72])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [96])
}

void .FUNC $801 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	$4 = CALL $866([72])
	$6 = CALL $425($4)
	*($4 + [56]) = $1
	*($4) = *(*($3))
	$3 = *($3 + [4])
	*(($4 + [36])) = *(($3 + [12]))
	*(($4 + [32])) = *(($3 + [8]))
	*(($4 + [28])) = *(($3 + [4]))
	*($4 + [24]) = *($3)
	*($7 + [88]) = (($7 + [16]) + [56])
	*($7 + [84]) = ($7 + [16])
	*($7 + [80]) = ($7 + [16])
	CALL $424(($7 + [80]), $6)
	$5 = *($4)
	*($4 + [60]) = CALL db_store_i64(*($1 + [8]), (int_64)-4992616317593845760, $2, $5, ($7 + [16]), [56])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($7 + [80]) = $4
	$5 = *($4)
	*($7 + [16]) = $5
	$6 = *($4 + [60])
	*($7 + [12]) = $6
	$3 = *(($1 + [28]))
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($7 + [80]) = [0]
	*($3) = $4
	*(($1 + [28])) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $426(($1 + [24]), ($7 + [80]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($7 + [80])
	*($7 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $867($4)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [96])
}

void .FUNC $802 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))), [3504])
	$5 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	*($6 + [72]) = ($6 + [56])
	*($6 + [68]) = $6
	*($6 + [64]) = $6
	CALL $424(($6 + [64]), $1)
	CALL db_update_i64(*($1 + [60]), $2, $6, [56])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [80])
}

int_32 .FUNC $803 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [48])
	*([0] + [4]) = $11
	CALL require_auth($1)
	$9 = *($8 + [24])
	$8 = *($0 + [52])
	$6 = *(($8 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$10 = ($6 + [-24])
	$4 = ([0] - $9)
	
.LOOP $label$2:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$1 }
	$6 = $10
	$5 = ($10 + [-24])
	$10 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$10 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$8), [32])
	goto $label$3 
	
.LABEL $label$4
	$10 = [0]
	$5 = CALL db_find_i64(*($8), *($8 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$10 = CALL $13($8, $5)
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$8), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [1936])
	$6 = *(CALL $685($0, $1, $2) + [4])
	CALL eosio_assert(((($6 + [-1051]) & [65535]) <= [6]), [9168])
	*(($11 + [40])) = [0]
	*($11 + [24]) = (int_64)-1
	*($11 + [32]) = (int_64)0
	$7 = *($0)
	*($11 + [8]) = $7
	*($11 + [16]) = $7
	$8 = [0]
	$10 = CALL db_find_i64($7, $7, (int_64)-4315240091392933888, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $485(($11 + [8]), $10)
	CALL eosio_assert(((int_32)*($8 + [20]) == (int_32)($11 + [8])), [32])
	
.LABEL $label$5
	$3 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($3, [9200])
	$9 = [-1]
	*($11 + [4]) = [-1]
	$2 = *($8 + [8])
	$5 = *(($8 + [12]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$6 }
	$10 = ($2 + [2])
	$4 = int_32(($5 - $2) >> [2])
	$5 = [0]
	$6 = ($6 & [65535])
	
.LOOP $label$8:
	if ( ((int_32)*($10) == (int_32)$6) ){ goto $label$7 }
	$10 = ($10 + [4])
	$5 = ($5 + [1])
	if ( ($5 <= $4) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$9 = $5
	
.LABEL $label$6
	*($11 + [4]) = $9
	$2 = *(($2 + ($9 << [2])))
	CALL eosio_assert(((int_32)uint_32($9 >> [31]) ^ (int_32)[1]), [9200])
	$1 = *($0)
	*($11) = ($11 + [4])
	CALL eosio_assert($3, [352])
	CALL $804(($11 + [8]), $8, $1, $11)
	$4 = *($11 + [32])
	if ( ($4 == 0) ){ goto $label$9 }
	$8 = ($11 + [36])
	$10 = *($8)
	if ( ((int_32)$10 == (int_32)$4) ){ goto $label$11 }
	
.LOOP $label$12:
	$10 = ($10 + [-24])
	$5 = *($10)
	*($10) = [0]
	if ( ($5 == 0) ){ goto $label$13 }
	$6 = *($5 + [8])
	if ( ($6 == 0) ){ goto $label$14 }
	*(($5 + [12])) = $6
	CALL $867($6)
	
.LABEL $label$14
	CALL $867($5)
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)$10) ){ goto $label$12 }
	$10 = *(($11 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$10 = $4
	
.LABEL $label$10
	*($8) = $4
	CALL $867($10)
	
.LABEL $label$9
	*([0] + [4]) = ($11 + [48])
	return int_32(($2 << [24]) >> [24])
}

void .FUNC $804 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$8 = $4
	$3 = (*($1 + [8]) + (*(*($3)) << [2]))
	$7 = ($3 + [4])
	$9 = ($1 + [12])
	$5 = (*($9) - $7)
	$6 = int_32($5 >> [2])
	if ( ($6 == 0) ){ goto $label$1 }
	CALL memmove($3, $7, $5)
	$8 = *($1)
	
.LABEL $label$1
	*($9) = ($3 + ($6 << [2]))
	CALL eosio_assert(((int_64)$4 == (int_64)$8), [512])
	$3 = [8]
	$6 = ($1 + [8])
	$7 = *($1 + [8])
	$9 = *($9)
	$5 = ($9 - $7)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [2]))
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$3 }
	$3 = ((((int_32)uint_32(($5 + [-4]) >> [2]) * (int_32)[3]) + $3) + [3])
	
.LABEL $label$3
	if ( ($3 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [576])
	CALL memcpy($9, $1, [8])
	*($10 + [4]) = ($9 + [8])
	CALL $805($10, $6)
	CALL db_update_i64(*($1 + [24]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($9)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $805 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [2]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [576])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$2 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[0]), [576])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $7, [1])
	$6 = (*($4) + [1])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[1]), [576])
	CALL memcpy(*($4), ($7 + [2]), [2])
	$6 = (*($4) + [2])
	*($4) = $6
	$7 = ($7 + [4])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $806 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [96])
	*([0] + [4]) = $10
	*($10 + [88]) = $1
	CALL require_auth($1)
	*($10 + [87]) = [0]
	$4 = *($3 + [24])
	$3 = *($0 + [52])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$9 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$1 }
	$7 = $9
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$9 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	$6 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $13($3, $6)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$3), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [1936])
	$9 = CALL $685($0, $1, $2)
	*((($10 + [72]) + [8])) = *(($9 + [8]))
	*($10 + [72]) = *($9)
	CALL eosio_assert((((*($10 + [76]) + [-1051]) & [65535]) <= [6]), [9168])
	*(($10 + [64])) = [0]
	*($10 + [48]) = (int_64)-1
	*($10 + [56]) = (int_64)0
	$8 = *($0)
	*($10 + [32]) = $8
	*($10 + [40]) = $8
	$9 = CALL db_find_i64($8, $8, (int_64)-4315240091392933888, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$8 }
	$3 = CALL $485(($10 + [32]), $9)
	CALL eosio_assert(((int_32)*($3 + [20]) == (int_32)($10 + [32])), [32])
	$4 = [-1]
	*($10) = [-1]
	$6 = *($3 + [8])
	$7 = *(($3 + [12]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$6 }
	$9 = ($6 + [2])
	$5 = int_32(($7 - $6) >> [2])
	$6 = [0]
	$7 = (*($10 + [76]) & [65535])
	
.LOOP $label$9:
	if ( ((int_32)*($9) == (int_32)$7) ){ goto $label$7 }
	$9 = ($9 + [4])
	$6 = ($6 + [1])
	if ( ($6 <= $5) ){ goto $label$9 }
	goto $label$6 
	
.LABEL $label$8
	$1 = *($0)
	*($10 + [12]) = $0
	*($10 + [8]) = ($10 + [88])
	*($10 + [16]) = ($10 + [72])
	*($10 + [20]) = ($10 + [87])
	CALL $809($10, ($10 + [32]), $1, ($10 + [8]))
	goto $label$5 
	
.LABEL $label$7
	$4 = $6
	
.LABEL $label$6
	*($10) = $4
	CALL eosio_assert(uint_32($4 >> [31]), [9216])
	$9 = [0]
	$6 = ((*($10 + [76]) + [-1051]) & [65535])
	if ( ((uint_32)$6 > (uint_32)[5]) ){ goto $label$10 }
	$9 = (CASTING uint_32)(uint_64 (uint_64)(int_64)3307141792257 >> (uint_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)3)))
	
.LABEL $label$10
	$7 = ($9 & [255])
	*($10 + [28]) = $7
	*($10 + [87]) = $9
	$9 = *(($3 + [8]))
	$6 = *(($3 + [12]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$13 }
	$5 = int_32(($6 - $9) >> [2])
	$6 = [0]
	
.LOOP $label$14:
	if ( ((int_32)*($9) == (int_32)$7) ){ goto $label$12 }
	$9 = ($9 + [4])
	$6 = ($6 + [1])
	if ( ($6 <= $5) ){ goto $label$14 }
	
.LABEL $label$13
	*($10) = [-1]
	goto $label$11 
	
.LABEL $label$12
	*($10) = $6
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$11 }
	$1 = *($0)
	*($10 + [12]) = ($10 + [72])
	*($10 + [8]) = $10
	CALL eosio_assert([1], [352])
	CALL $808(($10 + [32]), $3, $1, ($10 + [8]))
	goto $label$5 
	
.LABEL $label$11
	$1 = *($0)
	*($10 + [12]) = ($10 + [72])
	*($10 + [8]) = ($10 + [28])
	CALL eosio_assert([1], [352])
	CALL $807(($10 + [32]), $3, $1, ($10 + [8]))
	
.LABEL $label$5
	$0 = *($10 + [87])
	$5 = *($10 + [56])
	if ( ($5 == 0) ){ goto $label$15 }
	$3 = ($10 + [60])
	$9 = *($3)
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$17 }
	
.LOOP $label$18:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$19 }
	$7 = *($6 + [8])
	if ( ($7 == 0) ){ goto $label$20 }
	*(($6 + [12])) = $7
	CALL $867($7)
	
.LABEL $label$20
	CALL $867($6)
	
.LABEL $label$19
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$18 }
	$9 = *(($10 + [56]))
	goto $label$16 
	
.LABEL $label$17
	$9 = $5
	
.LABEL $label$16
	*($3) = $5
	CALL $867($9)
	
.LABEL $label$15
	*([0] + [4]) = ($10 + [96])
	return int_32(($0 << [24]) >> [24])
}

void .FUNC $807 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	*(($11 = $10)) = *(*($3))
	*($11 + [2]) = *(*($3 + [4]) + [4])
	$3 = ($1 + [12])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)*(($1 + [16]))) ){ goto $label$2 }
	*($8) = *($11)
	*($3) = (*($3) + [4])
	$8 = ($1 + [8])
	goto $label$1 
	
.LABEL $label$2
	$8 = ($1 + [8])
	CALL $811($8, $11)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	$6 = *($8)
	$5 = *(($1 + [12]))
	$7 = ($5 - $6)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [2]))
	$3 = [8]
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$3 = ((((int_32)uint_32(($7 + [-4]) >> [2]) * (int_32)[3]) + $3) + [3])
	
.LABEL $label$4
	if ( ($3 <= [513]) ){ goto $label$6 }
	$10 = CALL malloc($3)
	goto $label$5 
	
.LABEL $label$6
	$10 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$5
	*($11) = $10
	*($11 + [8]) = ($10 + $3)
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [576])
	CALL memcpy($10, $1, [8])
	*($11 + [4]) = ($10 + [8])
	CALL $805($11, $8)
	CALL db_update_i64(*($1 + [24]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL free($10)
	
.LABEL $label$7
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $808 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*((*($1 + [8]) + (*(*($3)) << [2])) + [2]) = *(*($3 + [4]) + [4])
	$4 = *($1)
	CALL eosio_assert([1], [512])
	$3 = [8]
	$5 = ($1 + [8])
	$7 = *($1 + [8])
	$6 = *(($1 + [12]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [2]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$2 }
	$3 = ((((int_32)uint_32(($8 + [-4]) >> [2]) * (int_32)[3]) + $3) + [3])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$10 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$10 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$3
	*($11) = $10
	*($11 + [8]) = ($10 + $3)
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [576])
	CALL memcpy($10, $1, [8])
	*($11 + [4]) = ($10 + [8])
	CALL $805($11, $5)
	CALL db_update_i64(*($1 + [24]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $809 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([32]))) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16]) = [0]
	*($3 + [20]) = $1
	CALL $810(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [24])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $487(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [12])) = $1
	CALL $867($1)
	
.LABEL $label$4
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $308 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [240])
	*([0] + [4]) = $13
	*($13 + [220]) = $2
	if ( (int_64)(*($1) == 0) ){ goto $label$2 }
	$2 = ($0 + [8])
	$4 = [0]
	$6 = [0]
	$5 = ($0 + [16])
	$3 = CALL db_lowerbound_i64(*($0 + [8]), *($5), (int_64)3631284361385115648, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $214($2, $3)
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [4272])
	$6 = CALL db_lowerbound_i64(*($2), *($5), (int_64)3631284361385115648, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $214($2, $6)
	
.LABEL $label$4
	$7 = *($0)
	*($13 + [16]) = $1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [352])
	CALL $451($2, $4, $7, ($13 + [16]))
	*(($13 + [208])) = [0]
	*($13 + [192]) = (int_64)-1
	$7 = *($0)
	*($13 + [176]) = $7
	*($13 + [184]) = $7
	*($13 + [200]) = (int_64)0
	$2 = CALL db_lowerbound_i64($7, $7, (int_64)-4992616317463298048, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	CALL $452(($13 + [176]), $2)
	goto $label$5 
	
.LABEL $label$6
	CALL $453(($13 + [16]), ($13 + [176]), *($0), ($13 + [136]))
	
.LABEL $label$5
	$2 = [0]
	$4 = CALL db_lowerbound_i64(*($13 + [176]), *((($13 + [176]) + [8])), (int_64)-4992616317463298048, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	$2 = CALL $452(($13 + [176]), $4)
	
.LABEL $label$7
	$7 = *($0)
	*($13 + [20]) = $1
	*($13 + [16]) = ($13 + [220])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [352])
	CALL $454(($13 + [176]), $2, $7, ($13 + [16]))
	if ( ((int_32)*($13 + [220]) == (int_32)[8]) ){ goto $label$8 }
	$4 = [0]
	*(($13 + [168])) = [0]
	*($13 + [152]) = (int_64)-1
	$7 = *($0)
	*($13 + [136]) = $7
	*($13 + [144]) = $7
	*($13 + [160]) = (int_64)0
	$2 = CALL db_lowerbound_i64($7, $7, (int_64)-3732754643145121280, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$9 }
	CALL $455(($13 + [136]), $2)
	*($13 + [128]) = (int_64)1397703940
	$7 = ((int_64)*($1) / (int_64)5)
	*($13 + [120]) = $7
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1248])
	$7 = (uint_64)*($13 + [128]) >> (uint_64)(int_64)8)
	
.LOOP $label$12:
	$2 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$6 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$6 = [0]
	
.LABEL $label$10
	CALL eosio_assert($6, [1120])
	CALL eosio_assert([1], [1248])
	$7 = (int_64)5459781
	
.LOOP $label$16:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$4 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	CALL eosio_assert($4, [1120])
	CALL eosio_assert(((int_64)*((($13 + [120]) + [8])) == (int_64)1397703940), [2688])
	if ( ((int_64)*($13 + [120]) < (int_64)1) ){ goto $label$9 }
	$7 = (int_64)0
	$2 = [0]
	$4 = CALL db_lowerbound_i64(*($13 + [136]), *((($13 + [136]) + [8])), (int_64)-3732754643145121280, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$19 }
	$2 = CALL $455(($13 + [136]), $4)
	
.LABEL $label$19
	$10 = *($0)
	*($13 + [16]) = ($13 + [120])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [352])
	CALL $456(($13 + [136]), $2, $10, ($13 + [16]))
	$11 = *($0)
	$8 = (int_64)59
	$2 = [1152]
	$9 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$25 }
	$4 = *($2)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$4 = ($4 + [165])
	goto $label$23 
	
.LABEL $label$25
	$10 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$21
	$2 = ($2 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$20 }
	*($13 + [72]) = $9
	*($13 + [64]) = $11
	$7 = (int_64)0
	$8 = (int_64)59
	$2 = [1824]
	$9 = (int_64)0
	
.LOOP $label$26:
	if ( ((uint_64)$7 > (uint_64)(int_64)10) ){ goto $label$31 }
	$4 = *($2)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$4 = ($4 + [165])
	goto $label$29 
	
.LABEL $label$31
	$10 = (int_64)0
	if ( ((int_64)$7 == (int_64)11) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$30
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$28
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$27
	$2 = ($2 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$26 }
	$7 = (int_64)0
	$8 = (int_64)59
	$2 = [1184]
	$11 = (int_64)0
	
.LOOP $label$32:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$37 }
	$4 = *($2)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$36 }
	$4 = ($4 + [165])
	goto $label$35 
	
.LABEL $label$37
	$10 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$36
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$35
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$34
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$33
	$2 = ($2 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$32 }
	$7 = (int_64)0
	$10 = (int_64)59
	$2 = [3664]
	$12 = (int_64)0
	
.LOOP $label$38:
	$8 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$39 }
	$4 = *($2)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$4 = ($4 + [165])
	goto $label$40 
	
.LABEL $label$41
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$39
	$2 = ($2 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$12 = ((int_64)$8 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$38 }
	*(($13 + [8])) = [0]
	*($13) = (int_64)0
	$2 = CALL strlen([4672])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$44 }
	*($13) = ($2 << [1])
	$4 = ($13 | [1])
	if ( $2 ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	$6 = (($2 + [16]) & [-16])
	$4 = CALL $866($6)
	*($13) = ($6 | [1])
	*($13 + [8]) = $4
	*($13 + [4]) = $2
	
.LABEL $label$43
	CALL memcpy($4, [4672], $2)
	
.LABEL $label$42
	*(($4 + $2)) = [0]
	*(($13 + [36])) = *($13 + [124])
	*($13 + [24]) = $12
	*(($13 + [44])) = *(($13 + [132]))
	*(($13 + [40])) = *((($13 + [120]) + [8]))
	*($13 + [16]) = *($0)
	*($13 + [32]) = *($13 + [120])
	$2 = ($13 + [8])
	*(($13 + [56])) = *($2)
	*($13 + [48]) = *($13)
	*($13) = [0]
	*($13 + [4]) = [0]
	*($2) = [0]
	$2 = CALL $197(($13 + [80]), ($13 + [64]), $9, $11, ($13 + [16]))
	CALL $65(($13 + [224]), $2)
	$4 = *($13 + [224])
	CALL send_inline($4, (*($13 + [228]) - $4))
	$4 = *($13 + [224])
	if ( ($4 == 0) ){ goto $label$45 }
	*($13 + [228]) = $4
	CALL $867($4)
	
.LABEL $label$45
	$4 = *($2 + [28])
	if ( ($4 == 0) ){ goto $label$46 }
	*(($2 + [32])) = $4
	CALL $867($4)
	
.LABEL $label$46
	$4 = *($2 + [16])
	if ( ($4 == 0) ){ goto $label$47 }
	*(($2 + [20])) = $4
	CALL $867($4)
	
.LABEL $label$47
	if ( ((*(($13 + [48])) & [1]) == 0) ){ goto $label$48 }
	CALL $867(*(($13 + [56])))
	
.LABEL $label$48
	if ( ((*($13) & [1]) == 0) ){ goto $label$9 }
	CALL $867(*(($13 + [8])))
	
.LABEL $label$9
	*($13 + [128]) = (int_64)1397703940
	$10 = *($1)
	$7 = ((int_64)$10 / (int_64)10)
	*($13 + [120]) = $7
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1248])
	$7 = (int_64)5459781
	$2 = [0]
	
.LOOP $label$51:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$50 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$52 }
	
.LOOP $label$53:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$50 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$53 }
	
.LABEL $label$52
	$4 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$50
	$4 = [0]
	
.LABEL $label$49
	CALL eosio_assert($4, [1120])
	CALL eosio_assert([1], [1248])
	$7 = (int_64)5459781
	$2 = [0]
	
.LOOP $label$56:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$55 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$57 }
	
.LOOP $label$58:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$55 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$58 }
	
.LABEL $label$57
	$4 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$56 }
	goto $label$54 
	
.LABEL $label$55
	$4 = [0]
	
.LABEL $label$54
	CALL eosio_assert($4, [1120])
	CALL eosio_assert(((int_64)1397703940 == (int_64)1397703940), [2688])
	if ( ((int_64)$10 < (int_64)10) ){ goto $label$59 }
	$11 = *($0)
	$7 = (int_64)0
	$8 = (int_64)59
	$2 = [1152]
	$9 = (int_64)0
	
.LOOP $label$60:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$65 }
	$4 = *($2)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$64 }
	$4 = ($4 + [165])
	goto $label$63 
	
.LABEL $label$65
	$10 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$64
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$63
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$62
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$61
	$2 = ($2 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$60 }
	*($13 + [72]) = $9
	*($13 + [64]) = $11
	$7 = (int_64)0
	$8 = (int_64)59
	$2 = [1824]
	$9 = (int_64)0
	
.LOOP $label$66:
	if ( ((uint_64)$7 > (uint_64)(int_64)10) ){ goto $label$71 }
	$4 = *($2)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$70 }
	$4 = ($4 + [165])
	goto $label$69 
	
.LABEL $label$71
	$10 = (int_64)0
	if ( ((int_64)$7 == (int_64)11) ){ goto $label$68 }
	goto $label$67 
	
.LABEL $label$70
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$69
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$68
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$67
	$2 = ($2 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$66 }
	$7 = (int_64)0
	$8 = (int_64)59
	$2 = [1184]
	$11 = (int_64)0
	
.LOOP $label$72:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$77 }
	$4 = *($2)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$4 = ($4 + [165])
	goto $label$75 
	
.LABEL $label$77
	$10 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$74 }
	goto $label$73 
	
.LABEL $label$76
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$75
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$74
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$73
	$2 = ($2 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$72 }
	$7 = (int_64)0
	$10 = (int_64)59
	$2 = [3680]
	$12 = (int_64)0
	
.LOOP $label$78:
	$8 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$79 }
	$4 = *($2)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$81 }
	$4 = ($4 + [165])
	goto $label$80 
	
.LABEL $label$81
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$80
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$79
	$2 = ($2 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$12 = ((int_64)$8 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$78 }
	*(($13 + [8])) = [0]
	*($13) = (int_64)0
	$2 = CALL strlen([4704])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$84 }
	*($13) = ($2 << [1])
	$4 = ($13 | [1])
	if ( $2 ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$84
	$1 = (($2 + [16]) & [-16])
	$4 = CALL $866($1)
	*($13) = ($1 | [1])
	*($13 + [8]) = $4
	*($13 + [4]) = $2
	
.LABEL $label$83
	CALL memcpy($4, [4704], $2)
	
.LABEL $label$82
	*(($4 + $2)) = [0]
	*(($13 + [36])) = *($13 + [124])
	*($13 + [24]) = $12
	*(($13 + [44])) = *(($13 + [132]))
	*(($13 + [40])) = *((($13 + [120]) + [8]))
	*($13 + [16]) = *($0)
	*($13 + [32]) = *($13 + [120])
	$2 = ($13 + [8])
	*(($13 + [56])) = *($2)
	*($13 + [48]) = *($13)
	*($13) = [0]
	*($13 + [4]) = [0]
	*($2) = [0]
	$2 = CALL $197(($13 + [80]), ($13 + [64]), $9, $11, ($13 + [16]))
	CALL $65(($13 + [224]), $2)
	$4 = *($13 + [224])
	CALL send_inline($4, (*($13 + [228]) - $4))
	$4 = *($13 + [224])
	if ( ($4 == 0) ){ goto $label$85 }
	*($13 + [228]) = $4
	CALL $867($4)
	
.LABEL $label$85
	$4 = *($2 + [28])
	if ( ($4 == 0) ){ goto $label$86 }
	*(($2 + [32])) = $4
	CALL $867($4)
	
.LABEL $label$86
	$4 = *($2 + [16])
	if ( ($4 == 0) ){ goto $label$87 }
	*(($2 + [20])) = $4
	CALL $867($4)
	
.LABEL $label$87
	if ( ((*(($13 + [48])) & [1]) == 0) ){ goto $label$88 }
	CALL $867(*(($13 + [56])))
	
.LABEL $label$88
	if ( ((*($13) & [1]) == 0) ){ goto $label$59 }
	CALL $867(*(($13 + [8])))
	
.LABEL $label$59
	$2 = [0]
	*(($13 + [48])) = [0]
	*($13 + [32]) = (int_64)-1
	$7 = *($0)
	*($13 + [16]) = $7
	*($13 + [24]) = $7
	*($13 + [40]) = (int_64)0
	$4 = CALL db_lowerbound_i64($7, $7, (int_64)7865338449953106192, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$89 }
	CALL $457(($13 + [16]), $4)
	CALL eosio_assert([1], [1248])
	$7 = (int_64)5459781
	
.LOOP $label$91:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$90 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$92 }
	
.LOOP $label$93:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$90 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$93 }
	
.LABEL $label$92
	$4 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$91 }
	
.LABEL $label$90
	CALL eosio_assert($4, [1120])
	CALL eosio_assert(((int_64)*((($13 + [120]) + [8])) == (int_64)1397703940), [2688])
	if ( ((int_64)*($13 + [120]) < (int_64)1) ){ goto $label$89 }
	$2 = [0]
	$4 = CALL db_lowerbound_i64(*($13 + [16]), *((($13 + [16]) + [8])), (int_64)7865338449953106192, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$94 }
	$2 = CALL $457(($13 + [16]), $4)
	
.LABEL $label$94
	$7 = *($0)
	*($13 + [80]) = ($13 + [120])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [352])
	CALL $458(($13 + [16]), $2, $7, ($13 + [80]))
	
.LABEL $label$89
	$0 = *($13 + [40])
	if ( ($0 == 0) ){ goto $label$95 }
	$1 = ($13 + [44])
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$97 }
	
.LOOP $label$98:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$99 }
	CALL $867($4)
	
.LABEL $label$99
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$98 }
	$2 = *(($13 + [40]))
	goto $label$96 
	
.LABEL $label$97
	$2 = $0
	
.LABEL $label$96
	*($1) = $0
	CALL $867($2)
	
.LABEL $label$95
	$1 = *($13 + [160])
	if ( ($1 == 0) ){ goto $label$8 }
	$6 = (($13 + [136]) + [28])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$101 }
	
.LOOP $label$102:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$103 }
	$0 = *($4 + [24])
	if ( ($0 == 0) ){ goto $label$104 }
	*(($4 + [28])) = $0
	CALL $867($0)
	
.LABEL $label$104
	CALL $867($4)
	
.LABEL $label$103
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$102 }
	$2 = *(($13 + [160]))
	goto $label$100 
	
.LABEL $label$101
	$2 = $1
	
.LABEL $label$100
	*($6) = $1
	CALL $867($2)
	
.LABEL $label$8
	$0 = *($13 + [200])
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = ($13 + [204])
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$106 }
	
.LOOP $label$107:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$108 }
	CALL $867($4)
	
.LABEL $label$108
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$107 }
	$2 = *(($13 + [200]))
	goto $label$105 
	
.LABEL $label$106
	$2 = $0
	
.LABEL $label$105
	*($1) = $0
	CALL $867($2)
	
.LABEL $label$2
	*([0] + [4]) = ($13 + [240])
	return (unreachable)
	
.LABEL $label$1
	CALL $868($13)
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [592])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = int_32(($4 - $7) >> [3])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $39($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ($6 << [3]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($8 + [28])
	
.LOOP $label$6:
	*($8 + [8]) = $0
	*($8 + [16]) = $7
	*((($8 + [16]) + [8])) = ($7 + [2])
	*($6) = ($7 + [4])
	*($8 + [20]) = ($7 + [1])
	CALL $40(($8 + [16]), ($8 + [8]))
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [3]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [3])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$4 }
	$6 = [536870911]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$7 }
	$6 = int_32($2 >> [2])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $866(($6 << [3]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($6) = (int_64)0
	*($6 + [2]) = [0]
	*($6) = [0]
	*($6 + [4]) = [0]
	$6 = (*($0) + [8])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $882($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [3]))
	$5 = ($2 + ($3 << [3]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = (int_64)0
	*($6 + [2]) = [0]
	*($6) = [0]
	*($6 + [4]) = [0]
	$6 = ($6 + [8])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $867($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $338 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $340(CALL $339($0, ($1 + [68])), ($1 + [80]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [56]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [60]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [64]), *($0 + [4]), [2])
	return *($0 + [4]) = (*($0 + [4]) + [2])
}

int_32 .FUNC $339 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [592])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = int_32(($4 - $7) >> [6])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $343($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ($6 << [6]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($8 + [20])
	$3 = ($8 + [44])
	
.LOOP $label$6:
	*($8) = $0
	*($8 + [8]) = $7
	*((($8 + [8]) + [8])) = ($7 + [16])
	*($6) = ($7 + [20])
	*((($8 + [8]) + [16])) = ($7 + [24])
	*((($8 + [8]) + [20])) = ($7 + [28])
	*((($8 + [8]) + [24])) = ($7 + [32])
	*($8 + [12]) = ($7 + [8])
	*((($8 + [8]) + [28])) = ($7 + [33])
	*((($8 + [8]) + [32])) = ($7 + [40])
	*($3) = ($7 + [56])
	CALL $344(($8 + [8]), $8)
	$7 = ($7 + [64])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [48])
	return $0
}

void .FUNC $336 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [80])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [84])) = $6
	CALL $867($6)
	
.LABEL $label$11
	$6 = *($1 + [68])
	if ( ($6 == 0) ){ goto $label$12 }
	*(($1 + [72])) = $6
	CALL $867($6)
	
.LABEL $label$12
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $867($2)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $156 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	CALL $212(($0 + [600]), $1)
	CALL $690(($0 + [384]), $1, $2, $3)
}

int_32 .FUNC $334 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1397703940
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [32]))) = (int_64)1397703940
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [48]))) = (int_64)1397703940
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [1248])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [1120])
	*($0 + [68 align=4]) = (int_64)0
	*(($0 + [76])) = (int_64)0
	*(($0 + [84])) = (int_64)0
	return $0
}

void .FUNC $335 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = (*([0] + [4]) - [16])
	$9 = $8
	*([0] + [4]) = $8
	$2 = *($0)
	CALL $337(*($0 + [4]), $1)
	$4 = *($1 + [68])
	$3 = *(($1 + [72]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 int_32($5 >> [6]))
	$7 = [66]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	$7 = ((((int_32)uint_32(($5 + [-64]) >> [6]) * (int_32)[42]) + $7) + [42])
	
.LABEL $label$2
	$4 = *($1 + [80])
	$3 = *(($1 + [84]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[56]))
	
.LOOP $label$3:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$4 }
	$7 = ((((int_32)((uint_32)($5 + [-56]) / (uint_32)[56]) * (int_32)[41]) + $7) + [41])
	
.LABEL $label$4
	if ( ($7 <= [513]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($8 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$5
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = ($8 + $7)
	CALL $328($9, $1)
	$6 = *($1)
	*($1 + [96]) = CALL db_store_i64(*($2 + [8]), (int_64)-4992616317627400192, *(*($0 + [8])), $6, $8, $7)
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL free($8)
	
.LABEL $label$7
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $332 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($2 + [4]), $3, [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [36])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), $2, [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
}

void .FUNC $333 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$2 = ((int_32)($5 - $4) / (int_32)[56])
	$7 = ($2 + [1])
	if ( ((uint_32)$7 >= (uint_32)[76695845]) ){ goto $label$2 }
	$6 = [76695844]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[56])
	if ( ((uint_32)$3 > (uint_32)[38347921]) ){ goto $label$4 }
	$6 = ($3 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $866(((int_32)$6 * (int_32)[56]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = ($5 - $4)
	$2 = CALL memcpy(($7 + ((int_32)$2 * (int_32)[56])), $1, [56])
	$1 = ($2 + ((int_32)((int_32)$5 / (int_32)[-56]) * (int_32)[56]))
	$6 = ($7 + ((int_32)$6 * (int_32)[56]))
	$7 = ($2 + [56])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $4, $5)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $867($4)
	
.LABEL $label$6
	(unreachable)
}

int_32 .FUNC $330 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[56]))
	$5 = *($0 + [4])
	$4 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [8]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $5) > (int_32)[0]), [576])
	CALL memcpy(*($7), ($8 + [8]), [1])
	$5 = (*($7) + [1])
	*($7) = $5
	if ( $3 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$2 = ($8 + [20])
	
.LOOP $label$3:
	*($8) = $0
	*($8 + [8]) = $7
	*((($8 + [8]) + [8])) = ($7 + [16])
	*($2) = ($7 + [20])
	*((($8 + [8]) + [16])) = ($7 + [24])
	*((($8 + [8]) + [20])) = ($7 + [28])
	*((($8 + [8]) + [24])) = ($7 + [32])
	*($8 + [12]) = ($7 + [8])
	*((($8 + [8]) + [28])) = ($7 + [33])
	*((($8 + [8]) + [32])) = ($7 + [40])
	CALL $331(($8 + [8]), $8)
	$7 = ($7 + [56])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [48])
	return $0
}

int_32 .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	*(($3 = $4) + [44]) = $0
	*($3 + [32]) = *($1)
	*($3 + [36]) = *($1 + [4])
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$4 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($4 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [24])) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [48]) = $1
	$4 = ($1 + $0)
	*($3 + [56]) = $4
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [160])
	CALL memcpy(($3 + [8]), $1, [8])
	$2 = ($1 + [8])
	CALL eosio_assert(((uint_32)($4 - $2) > (uint_32)[3]), [160])
	CALL memcpy((($3 + [8]) + [8]), $2, [4])
	*($3 + [52]) = ($1 + [12])
	$4 = (($3 + [8]) + [12])
	CALL $687(($3 + [48]), $4)
	if ( ($0 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	*($3 + [52]) = ($3 + [32])
	*($3 + [48]) = ($3 + [44])
	CALL $688(($3 + [48]), ($3 + [8]))
	$1 = *($4)
	if ( ($1 == 0) ){ goto $label$6 }
	*(($3 + [24])) = $1
	CALL $867($1)
	
.LABEL $label$6
	*([0] + [4]) = ($3 + [64])
	return [1]
}

int_32 .FUNC $440 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [9]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [20]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [21]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [22]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [26]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [36]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [44]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $441 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [9]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [21]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [22]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [26]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [28]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [36]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [44]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $442 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $443 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	*($0 + [24]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

void .FUNC $444 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $445 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$2 = int_32(($6 - $5) >> [4])
	$3 = ($2 + [1])
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$3 }
	$4 = [268435455]
	$7 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($7 >> [4]) > (uint_32)[134217726]) ){ goto $label$5 }
	$4 = int_32($7 >> [3])
	$4 = ( $3 ? $4 : ($4 <= $3) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $866(($4 << [4]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($2 << [4])))) = *($1)
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($6 - $5)
	$6 = ($3 - $1)
	$4 = ($7 + ($4 << [4]))
	$3 = ($3 + [16])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($6, $5, $1)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $867($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $446 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [16]) = (($2) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $4) > (int_32)[0]), [576])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ($7 + [16]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $2 ){ goto $label$1 }
	$4 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$2 }
	$2 = ($7 + [36])
	$3 = ($7 + [40])
	
.LOOP $label$3:
	*($7 + [8]) = $0
	*($7 + [16]) = $6
	*((($7 + [16]) + [8])) = ($6 + [4])
	*((($7 + [16]) + [12])) = ($6 + [8])
	*((($7 + [16]) + [16])) = ($6 + [10])
	*($2) = ($6 + [12])
	*($3) = ($6 + [14])
	*($7 + [20]) = ($6 + [1])
	CALL $447(($7 + [16]), ($7 + [8]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [48])
	return $0
}

void .FUNC $447 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($2 + [4]), $3, [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($2 + [4]), $3, [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($2 + [4]), $3, [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$2 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($0 + [4]), $2, [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
}

void .FUNC $448 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$6 = *($0 + [4])
	*($1) = *(*($6))
	$6 = *($6 + [4])
	$3 = ($1 + [12])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)*(($1 + [16]))) ){ goto $label$2 }
	*($8) = *($6)
	*(($8 + [8])) = *(($6 + [8]))
	$8 = (*($3) + [16])
	*($3) = $8
	$5 = ($1 + [8])
	goto $label$1 
	
.LABEL $label$2
	$5 = ($1 + [8])
	CALL $445($5, $6)
	$8 = *($3)
	
.LABEL $label$1
	$3 = *($5)
	$4 = ($8 - $3)
	$7 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [22]
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$5 }
	$6 = (((int_32)uint_32(($4 + [-16]) >> [4]) * (int_32)[14]) + $6)
	goto $label$4 
	
.LABEL $label$5
	$6 = ($6 + [-14])
	
.LABEL $label$4
	if ( ($6 <= [513]) ){ goto $label$7 }
	$8 = CALL malloc($6)
	goto $label$6 
	
.LABEL $label$7
	$8 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$6
	*($9) = $8
	*($9 + [8]) = ($8 + $6)
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [576])
	CALL memcpy($8, $1, [8])
	*($9 + [4]) = ($8 + [8])
	CALL $446($9, $5)
	$7 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)7687433457688903680, *(*($0 + [8])), $7, $8, $6)
	if ( ($6 <= [513]) ){ goto $label$8 }
	CALL free($8)
	
.LABEL $label$8
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$9 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $449 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [10]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [14]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [18]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

int_32 .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$6 = *($1)
	$5 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $1)
	
.LABEL $label$1
	*($7) = (int_64)0
	*($7 + [8]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [160])
	CALL memcpy($7, $5, [8])
	$8 = ($1 & [-2])
	CALL eosio_assert(((int_32)$8 != (int_32)[8]), [160])
	$4 = ($7 + [8])
	CALL memcpy($4, ($5 + [8]), [2])
	CALL eosio_assert(((int_32)$8 != (int_32)[10]), [160])
	$8 = ($7 + [10])
	CALL memcpy($8, ($5 + [10]), [2])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($5)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($8)
	$8 = *($4)
	$3 = *($7)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($1) + $6))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 ($8 & [65535])), (int_32 ($5 & [65535])), (int_32 $6))
	*([0] + [4]) = ($7 + [16])
	return [1]
}

void .FUNC $119 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL require_auth($1)
	CALL _ZN16activity_control13jointfragmentEN5eosio4nameEm(($0 + [1504]), $1, $2)
}

void .FUNC $686 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($0 + [8]), *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($0 + [12]), *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[3]), [160])
	CALL memcpy(($0 + [16]), *($1 + [4]), [4])
	*($1 + [4]) = (*($1 + [4]) + [4])
}

int_32 .FUNC $687 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [592])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [2])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $689($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [2]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	$2 = ($0 + [8])
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*($2) - $7) > (uint_32)[3]), [160])
	CALL memcpy($4, *($5), [4])
	$7 = (*($5) + [4])
	*($5) = $7
	$4 = ($4 + [4])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $684 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [16])
	$12 = $13
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$5 = ($1 + [12])
	$4 = *($1)
	$10 = *($1 + [12])
	$8 = ($1 + [16])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$1 }
	$7 = ((int_32)($9 - $10) / (int_32)[20])
	$6 = *(*($3))
	$9 = [0]
	
.LOOP $label$3:
	if ( ((int_32)*($10) == (int_32)$6) ){ goto $label$2 }
	$10 = ($10 + [20])
	$9 = ($9 + [1])
	if ( ($9 <= $7) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( (*(*($3 + [4])) == 0) ){ goto $label$4 }
	*(($10 = ($10 + [7]))) = (*($10) + [1])
	goto $label$1 
	
.LABEL $label$4
	if ( *(*($3 + [8])) ){ goto $label$1 }
	$11 = ((uint_64)((int_64)((int_64)*($9) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*(($9 = *($3 + [16]))) = $11
	$6 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$11 * (int_64)3) >> (uint_64)(int_64)31)
	*($9 + [4]) = $6)
	*(($10 = ($10 + [8]))) = ((([1] - *(*($3 + [20]))) + *($10)) + $6)
	
.LABEL $label$1
	CALL eosio_assert([1], [512])
	$6 = *($5)
	$9 = *($8)
	$7 = ($9 - $6)
	$11 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[20]))
	$10 = [29]
	
.LOOP $label$5:
	$10 = ($10 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$7 }
	$9 = (((int_32)((uint_32)($7 + [-20]) / (uint_32)[20]) * (int_32)[17]) + $10)
	goto $label$6 
	
.LABEL $label$7
	$9 = ($10 + [-17])
	
.LABEL $label$6
	if ( ($9 <= [513]) ){ goto $label$9 }
	$10 = CALL malloc($9)
	goto $label$8 
	
.LABEL $label$9
	$10 = ($13 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$8
	*($12) = $10
	$6 = ($10 + $9)
	*($12 + [8]) = $6
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [576])
	CALL memcpy($10, $1, [8])
	$7 = ($10 + [8])
	CALL eosio_assert(((int_32)($6 - $7) > (int_32)[3]), [576])
	CALL memcpy($7, ($1 + [8]), [4])
	*($12 + [4]) = ($10 + [12])
	CALL $400($12, $5)
	CALL db_update_i64(*($1 + [28]), $2, $10, $9)
	if ( ($9 <= [513]) ){ goto $label$10 }
	CALL free($10)
	
.LABEL $label$10
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($12 + [16])
}

int_32 .FUNC $685 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = *(($0 + [32]))
	$6 = *(($0 + [36]))
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$1 }
	$8 = ($6 + [-24])
	$7 = ([0] - $5)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$1 }
	$6 = $8
	$3 = ($8 + [-24])
	$8 = $3
	if ( ((int_32)($3 + $7) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [8])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$8 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$6 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-5915108674644213760, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $72($3, $6)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$3), [32])
	
.LABEL $label$3
	$4 = *($8)
	$8 = ( ($8 + [12]) ? ($0 + [56]) : $8 )
	$8 = (*($8 + [4]) - $4)
	if ( ((int_32)$8 < (int_32)[12]) ){ goto $label$6 }
	$3 = (((uint_32)$8 / (uint_32)[12]) + [-1])
	$8 = [0]
	
.LOOP $label$7:
	$5 = ($3 - $8)
	$6 = (((int_32)$5 / (int_32)[2]) + $8)
	$9 = ($4 + ((int_32)$6 * (int_32)[12]))
	$7 = *($9)
	if ( ($7 <= $2) ){ goto $label$8 }
	if ( ((uint_32)$7 <= (uint_32)$2) ){ goto $label$5 }
	$3 = ($6 + [-1])
	if ( ((int_32)$5 > (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$8 = ($6 + [1])
	if ( ((int_32)$3 > (int_32)$6) ){ goto $label$7 }
	
.LABEL $label$6
	CALL eosio_assert([0], [5008])
	$9 = ($0 + [68])
	
.LABEL $label$5
	return $9
}

void .FUNC $299 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	*($1 + [40]) = *(*($0))
	*($1 + [48]) = *(*($0 + [4]))
	$2 = *($0 + [8])
	*($1 + [56]) = *($2)
	*(($1 + [64])) = *(($2 + [8]))
	$2 = *($0 + [8])
	$4 = *($2)
	if ( (*(*($0 + [12])) == 0) ){ goto $label$2 }
	$5 = *($2 + [8])
	goto $label$1 
	
.LABEL $label$2
	$4 = ((int_64)*(*(*($0 + [16]) + [4]) + [88]) + (int_64)$4)
	CALL eosio_assert((uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1248])
	$3 = (int_64)5524308
	$5 = (int_64)1414222852
	$0 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$2 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$2 = [0]
	
.LABEL $label$3
	CALL eosio_assert($2, [1120])
	
.LABEL $label$1
	*($1 + [72]) = $4
	*(($1 + [80])) = $5
}

int_32 .FUNC $298 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [40]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [72]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [76]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $680 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	$21 = (*([0] + [4]) - [208])
	*([0] + [4]) = $21
	*($21 + [196]) = $2
	CALL $564(*($0 + [60]), [1])
	$10 = *(($0 + [32]))
	$11 = *(($0 + [36]))
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$1 }
	$20 = ($11 + [-24])
	$12 = ([0] - $10)
	
.LOOP $label$2:
	if ( ((int_64)*(*($20)) == (int_64)$1) ){ goto $label$1 }
	$11 = $20
	$16 = ($20 + [-24])
	$20 = $16
	if ( ((int_32)($16 + $12) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$8 = ($0 + [8])
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$4 }
	$17 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$8), [32])
	goto $label$3 
	
.LABEL $label$4
	$17 = [0]
	$20 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)8526756653867991040, $1)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$3 }
	$17 = CALL $386($8, $20)
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$8), [32])
	
.LABEL $label$3
	$9 = *($20)
	$20 = ( ($17 + [12]) ? ($0 + [68]) : $17 )
	$20 = (*($20 + [4]) - $9)
	if ( ((int_32)$20 < (int_32)[20]) ){ goto $label$6 }
	$16 = (((uint_32)$20 / (uint_32)[20]) + [-1])
	$20 = [0]
	
.LOOP $label$7:
	$10 = ($16 - $20)
	$11 = (((int_32)$10 / (int_32)[2]) + $20)
	$18 = ($9 + ((int_32)$11 * (int_32)[20]))
	$12 = *($18)
	if ( ($12 <= $2) ){ goto $label$8 }
	if ( ((uint_32)$12 <= (uint_32)$2) ){ goto $label$5 }
	$16 = ($11 + [-1])
	if ( ((int_32)$10 > (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$20 = ($11 + [1])
	if ( ((int_32)$16 > (int_32)$11) ){ goto $label$7 }
	
.LABEL $label$6
	CALL eosio_assert([0], [7184])
	$18 = ($0 + [80])
	
.LABEL $label$5
	CALL eosio_assert((*($18 + [16]) == 0), [7312])
	$13 = *($18 + [6])
	$12 = [0]
	*(($21 + [184])) = [0]
	*($21 + [176]) = (int_64)0
	*($21 + [168]) = (int_64)-1
	$14 = *($0)
	*($21 + [152]) = $14
	*($21 + [160]) = $14
	$20 = CALL db_find_i64($14, $14, (int_64)-4921685318744145920, *($18 + [7]))
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$10 }
	$10 = CALL $622(($21 + [152]), $20)
	CALL eosio_assert(((int_32)*($10 + [32]) == (int_32)($21 + [152])), [32])
	$12 = *(($21 + [176]))
	$2 = *(($21 + [180]))
	goto $label$9 
	
.LABEL $label$10
	$2 = [0]
	$10 = [0]
	
.LABEL $label$9
	$14 = ((int_64)*(($18 + [7])) + (int_64)1)
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$11 }
	$20 = ($2 + [-24])
	$11 = ([0] - $12)
	
.LOOP $label$12:
	if ( ((int_64)*(*($20)) == (int_64)$14) ){ goto $label$11 }
	$2 = $20
	$16 = ($20 + [-24])
	$20 = $16
	if ( ((int_32)($16 + $11) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$14 }
	$12 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)($21 + [152])), [32])
	goto $label$13 
	
.LABEL $label$14
	$12 = [0]
	$20 = CALL db_find_i64(*($21 + [152]), *(($21 + [160])), (int_64)-4921685318744145920, $14)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$13 }
	$12 = CALL $622(($21 + [152]), $20)
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)($21 + [152])), [32])
	
.LABEL $label$13
	$19 = [0]
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [7328])
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [7328])
	CALL eosio_assert(((uint_32)*($18 + [8]) >= (uint_32)*($12 + [8])), [7360])
	*($21 + [148]) = (*($12 + [8]) - *($10 + [8]))
	*(($21 + [136])) = [0]
	*($21 + [128]) = (int_64)0
	*($21 + [120]) = (int_64)-1
	$14 = *($0)
	*($21 + [104]) = $14
	*($21 + [112]) = $14
	$10 = [0]
	$20 = CALL db_find_i64($14, $14, (int_64)-4921685625297436672, *($18 + [4]))
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$15 }
	$10 = CALL $621(($21 + [104]), $20)
	CALL eosio_assert(((int_32)*($10 + [56]) == (int_32)($21 + [104])), [32])
	
.LABEL $label$15
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [7392])
	$20 = (*($10 + [10]) + [-1])
	if ( ((uint_32)$20 > (uint_32)[5]) ){ goto $label$16 }
	goto $label$22 
	
.LABEL $label$22
	$19 = *($12 + [12])
	goto $label$16 
	
.LABEL $label$21
	$19 = *($12 + [14])
	goto $label$16 
	
.LABEL $label$20
	$19 = *($12 + [16])
	goto $label$16 
	
.LABEL $label$19
	$19 = *($12 + [18])
	goto $label$16 
	
.LABEL $label$18
	$19 = *($12 + [20])
	goto $label$16 
	
.LABEL $label$17
	$19 = *($12 + [24])
	
.LABEL $label$16
	$15 = *($9 + [24])
	$9 = *($0 + [52])
	$2 = *(($9 + [28]))
	if ( ((int_32)$2 == (int_32)$15) ){ goto $label$23 }
	$20 = ($2 + [-24])
	$11 = ([0] - $15)
	
.LOOP $label$24:
	if ( ((int_64)*(*($20)) == (int_64)$1) ){ goto $label$23 }
	$2 = $20
	$16 = ($20 + [-24])
	$20 = $16
	if ( ((int_32)($16 + $11) != (int_32)[-24]) ){ goto $label$24 }
	
.LABEL $label$23
	if ( ((int_32)$2 == (int_32)$15) ){ goto $label$26 }
	$20 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($20 + [24]) == (int_32)$9), [32])
	goto $label$25 
	
.LABEL $label$26
	$20 = [0]
	$16 = CALL db_find_i64(*($9), *($9 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$25 }
	$20 = CALL $13($9, $16)
	CALL eosio_assert(((int_32)*($20 + [24]) == (int_32)$9), [32])
	
.LABEL $label$25
	CALL eosio_assert(((uint_32)$19 <= (uint_32)*($20 + [16])), [5040])
	*($21 + [103]) = [1]
	CALL memcpy(($21 + [32]), *($7 + [4]), [64])
	*($21 + [24]) = (int_64)0
	$16 = [0]
	$2 = *($12 + [28])
	if ( ((uint_32)$2 > (uint_32)[9999]) ){ goto $label$31 }
	if ( ($4 == 0) ){ goto $label$32 }
	$11 = [1]
	if ( ($3 == 0) ){ goto $label$30 }
	$20 = *(($18 + [7]))
	if ( ((int_32)$20 == (int_32)[5]) ){ goto $label$29 }
	if ( ((int_32)$20 != (int_32)[4]) ){ goto $label$30 }
	CALL $683(*($0 + [64]), $1, $3, [2], *(($10 + [10])))
	$2 = *($21 + [128])
	if ( $2 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$32
	$14 = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $5) * (int_64)1103515245) + (int_64)12345) % (uint_64)(int_64)2147483647)
	*($21 + [24]) = $14
	$16 = (CASTING uint_32)(uint_64 (uint_64)((int_64)$14 * (int_64)10000) >> (uint_64)(int_64)31)
	*($21 + [28]) = $16)
	*($21 + [103]) = ($16 <= $2)
	$16 = ((uint_32)$16 >= (uint_32)$2)
	
.LABEL $label$31
	$16 = uint_32($19 >> $16)
	if ( ($16 == 0) ){ goto $label$33 }
	$2 = *(($0 + [52]))
	*($21) = $16
	CALL eosio_assert(((uint_32)*(($20 + [16])) >= (uint_32)$16), [5040])
	$14 = *($2 + [40])
	*($21 + [200]) = $21
	CALL eosio_assert(((int_32)$20 != (int_32)[0]), [352])
	CALL $493($2, $20, $14, ($21 + [200]))
	
.LABEL $label$33
	$11 = [0]
	*($21 + [200]) = [0]
	if ( ($3 == 0) ){ goto $label$34 }
	$20 = *(($18 + [7]))
	if ( ((int_32)$20 == (int_32)[5]) ){ goto $label$35 }
	if ( ((int_32)$20 != (int_32)[4]) ){ goto $label$34 }
	CALL $683(*($0 + [64]), $1, $3, [2], *(($10 + [10])))
	CALL $482(*($0 + [64]), $1, $3)
	*($21 + [200]) = [1]
	goto $label$34 
	
.LABEL $label$35
	CALL $683(*($0 + [64]), $1, $3, [3], *(($10 + [10])))
	CALL $482(*($0 + [64]), $1, $3)
	*($21 + [200]) = [1]
	
.LABEL $label$34
	$1 = *($0)
	*($21 + [12]) = $0
	*($21 + [4]) = ($21 + [103])
	*($21) = ($21 + [196])
	*($21 + [8]) = ($21 + [200])
	*($21 + [16]) = ($21 + [24])
	*($21 + [20]) = ($21 + [148])
	CALL eosio_assert(((int_32)$17 != (int_32)[0]), [352])
	CALL $684($8, $17, $1, $21)
	*($6) = $13
	*($21 + [60]) = [0]
	$16 = *(($0 + [60]))
	$1 = *($16)
	$20 = *($7 + [4])
	*($21) = ($21 + [32])
	CALL eosio_assert(((int_32)$20 != (int_32)[0]), [352])
	CALL $272(($16 + [128]), $20, $1, $21)
	
.LABEL $label$30
	$2 = *($21 + [128])
	if ( ($2 == 0) ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$29
	CALL $683(*($0 + [64]), $1, $3, [3], *(($10 + [10])))
	$2 = *($21 + [128])
	if ( ($2 == 0) ){ goto $label$27 }
	
.LABEL $label$28
	$12 = ($21 + [132])
	$20 = *($12)
	if ( ((int_32)$20 == (int_32)$2) ){ goto $label$37 }
	
.LOOP $label$38:
	$20 = ($20 + [-24])
	$16 = *($20)
	*($20) = [0]
	if ( ($16 == 0) ){ goto $label$39 }
	CALL $867($16)
	
.LABEL $label$39
	if ( ((int_32)$2 != (int_32)$20) ){ goto $label$38 }
	$20 = *(($21 + [128]))
	goto $label$36 
	
.LABEL $label$37
	$20 = $2
	
.LABEL $label$36
	*($12) = $2
	CALL $867($20)
	
.LABEL $label$27
	$2 = *($21 + [176])
	if ( ($2 == 0) ){ goto $label$40 }
	$12 = ($21 + [180])
	$20 = *($12)
	if ( ((int_32)$20 == (int_32)$2) ){ goto $label$42 }
	
.LOOP $label$43:
	$20 = ($20 + [-24])
	$16 = *($20)
	*($20) = [0]
	if ( ($16 == 0) ){ goto $label$44 }
	CALL $867($16)
	
.LABEL $label$44
	if ( ((int_32)$2 != (int_32)$20) ){ goto $label$43 }
	$20 = *(($21 + [176]))
	goto $label$41 
	
.LABEL $label$42
	$20 = $2
	
.LABEL $label$41
	*($12) = $2
	CALL $867($20)
	
.LABEL $label$40
	*([0] + [4]) = ($21 + [208])
	$20
	return $11
}

void .FUNC $681 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $866([128])) + [8]) = (int_64)0
	*($3 + [20 align=4]) = (int_64)0
	*($3 + [28 align=4]) = (int_64)0
	*($3 + [36 align=4]) = (int_64)0
	*($3 + [80]) = [0]
	*($3 + [104]) = $1
	CALL $682(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [108])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $94(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$4 }
	CALL $867(*(($3 + [40])))
	
.LABEL $label$4
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$5 }
	CALL $867(*(($3 + [28])))
	
.LABEL $label$5
	CALL $867($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $527 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$16()), [288])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $866([48])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$2 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1120])
	*($4 + [32]) = $1
	CALL $545(($7 + [16]), $4)
	*($7 + [32]) = $4
	$2 = *($4)
	*($7 + [16]) = $2
	$6 = *($4 + [36])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $2
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $521(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $867($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $526 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1)
	$5 = ($1 + [16])
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [3504])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [3552])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [3584])
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 + [16]), $5, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 + [24]), ($1 + [24]), [8])
	CALL db_update_i64(*($1 + [36]), $2, $7, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $525 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$4 = *($1 + [8])
	$3 = *($3)
	*($1 + [8]) = *($3)
	*(($5 = ($1 + [16]))) = *(($3 + [8]))
	*(($1 + [20])) = *(($3 + [12]))
	*(($1 + [12])) = *(($3 + [4]))
	*($6 + [24]) = (int_64))((int_64)0 - $4)
	$4 = *($1)
	CALL eosio_assert([1], [512])
	CALL eosio_assert([1], [576])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [576])
	$3 = ($1 + [8])
	CALL memcpy(($6 | [8]), $3, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy(($6 + [16]), $5, [8])
	CALL db_update_i64(*($1 + [28]), $2, $6, [24])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($6 + [40]) = (int_64))((int_64)0 - *($3))
	if ( (CALL memcmp(($6 + [24]), ($6 + [40]), [8]) == 0) ){ goto $label$2 }
	$3 = ($1 + [32])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3732485072939384832, ($6 + [32]), $4)
	*($3) = $1
	
.LABEL $label$3
	CALL db_idx64_update($1, $2, ($6 + [40]))
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $524 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [2272])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [2320])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2384])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $867($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $867($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$7 = *(($1 + [32]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3732485072939384832, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $291 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [84]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2928])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)3932090329950728704)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2864])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2864])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $290(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $522 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [256])
	*([0] + [4]) = $13
	*($13 + [232]) = $1
	CALL require_auth($1)
	$3 = *($5 + [24])
	$5 = *($0 + [328])
	$7 = *(($5 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$1 }
	$7 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$6 = CALL db_find_i64(*($5), *($5 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $13($5, $6)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$5), [32])
	
.LABEL $label$3
	$6 = [0]
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [2624])
	$5 = ($0 + [88])
	$8 = [0]
	$7 = ($0 + [96])
	$4 = CALL db_lowerbound_i64(*($0 + [88]), *($7), (int_64)-3732485072926388848, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $512($5, $4)
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [5312])
	CALL eosio_assert(((int_32)*(CALL $512($5, CALL $fimport$25(*($5), *($7), (int_64)-3732485072926388848, (int_64)0)) + [8]) == (int_32)[1]), [5344])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)1414222852), [5504])
	if ( ((uint_64)((int_64)*($2) + (int_64)4611686018427387903) >= (uint_64)(int_64)9223372036854775807) ){ goto $label$6 }
	$10 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$6 = [0]
	
.LABEL $label$6
	CALL eosio_assert($6, [5360])
	CALL eosio_assert(((int_64)*($2) > (int_64)0), [5376])
	$3 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$11 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$12:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$11 }
	$7 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = ($0 + [8])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$14 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [32])
	goto $label$13 
	
.LABEL $label$14
	$8 = [0]
	$7 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-3732485072939384832, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	$8 = CALL $523($6, $7)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [32])
	
.LABEL $label$13
	$7 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($7, [5408])
	$3 = ($8 + [16])
	$4 = ($2 + [8])
	CALL eosio_assert(((int_64)*($4) == (int_64)*($3)), [2688])
	CALL eosio_assert(((int_64)*($2) <= (int_64)*($8 + [8])), [5424])
	$10 = *($3)
	*((($13 + [216]) + [8])) = $10
	*($13 + [216]) = *($8 + [8])
	CALL eosio_assert(((int_64)$10 == (int_64)*($4)), [3360])
	$10 = (int_64)
	*($13 + [216]) = $10(*($13 + [216]) - *($2)))
	CALL eosio_assert(((int_64)$10 > (int_64)-4611686018427387904), [3408])
	CALL eosio_assert(((int_64)$10 < (int_64)4611686018427387904), [3440])
	if ( ((int_64)$10 == (int_64)0) ){ goto $label$16 }
	if ( ((int_64)$10 < (int_64)1) ){ goto $label$15 }
	$10 = *($0)
	*($13 + [80]) = ($13 + [216])
	CALL eosio_assert($7, [352])
	CALL $525($6, $8, $10, ($13 + [80]))
	goto $label$15 
	
.LABEL $label$16
	CALL eosio_assert($7, [2224])
	CALL eosio_assert($7, [960])
	$7 = CALL db_next_i64(*($8 + [28]), ($13 + [80]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$17 }
	CALL $523($6, $7)
	
.LABEL $label$17
	CALL $524($6, $8)
	
.LABEL $label$15
	$10 = *($13 + [232])
	$3 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$18 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$19:
	if ( ((int_64)*(*($8)) == (int_64)$10) ){ goto $label$18 }
	$7 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$19 }
	
.LABEL $label$18
	$8 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$24 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$8), [32])
	$10 = *($0)
	if ( $6 ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$24
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-3732452873091252224, $10)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$22 }
	$6 = CALL $511($8, $6)
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$8), [32])
	$10 = *($0)
	
.LABEL $label$23
	*($13 + [80]) = $2
	CALL eosio_assert([1], [352])
	CALL $526($8, $6, $10, ($13 + [80]))
	goto $label$20 
	
.LABEL $label$22
	$10 = *($0)
	
.LABEL $label$21
	*($13 + [84]) = $2
	*($13 + [80]) = ($13 + [232])
	CALL $527(($13 + [152]), $8, $10, ($13 + [80]))
	
.LABEL $label$20
	$10 = (int_64)0
	*($13 + [88]) = (int_64)0
	*($13 + [80]) = *($13 + [232])
	CALL cancel_deferred(($13 + [80]))
	$1 = CALL current_time()
	*(($13 + [180])) = [0]
	*(($13 + [184])) = [0]
	*($13 + [164]) = [0]
	*($13 + [168]) = [0]
	*($13 + [172]) = [0]
	*($13 + [176]) = [0]
	*($13 + [152]) = ((CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [188]) = [0]
	*(($13 + [192])) = [0]
	*(($13 + [196])) = [0]
	*($13 + [200]) = [0]
	*(($13 + [204])) = [0]
	*(($13 + [208])) = [0]
	$7 = ($13 + [188])
	$12 = *($0)
	$9 = (int_64)59
	$8 = [1152]
	$11 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$30 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$6 = ($6 + [165])
	goto $label$28 
	
.LABEL $label$30
	$1 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$26
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$1 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$25 }
	*($13 + [88]) = $11
	*($13 + [80]) = $12
	$10 = (int_64)0
	$1 = (int_64)59
	$8 = [5456]
	$11 = (int_64)0
	
.LOOP $label$31:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$32 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$6 = ($6 + [165])
	goto $label$33 
	
.LABEL $label$34
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$32
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$9 | (int_64)$11)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$31 }
	*($13 + [40]) = $11
	*($13 + [24]) = *($13 + [232])
	CALL $528($7, ($13 + [80]), $0, ($13 + [40]), ($13 + [24]))
	$10 = *($13 + [232])
	*(($13 + [172])) = [259200]
	*($13 + [88]) = (int_64)0
	*($13 + [80]) = $10
	CALL $529(($13 + [40]), ($13 + [152]))
	$8 = [0]
	$6 = *($13 + [40])
	CALL send_deferred(($13 + [80]), $10, $6, (*($13 + [44]) - $6), [0])
	$6 = *($13 + [40])
	if ( ($6 == 0) ){ goto $label$35 }
	*($13 + [44]) = $6
	CALL $867($6)
	
.LABEL $label$35
	$6 = CALL db_lowerbound_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-3732485072926388848, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$36 }
	$8 = CALL $512($5, $6)
	
.LABEL $label$36
	$10 = *($0)
	*($13 + [80]) = $2
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [352])
	CALL $530($5, $8, $10, ($13 + [80]))
	CALL $269(($13 + [144]), *($0 + [340]), *($13 + [232]), [1])
	CALL memcpy(($13 + [80]), *($13 + [148]), [64])
	$7 = *($13 + [136])
	CALL $531(*(($0 + [328])), ($13 + [80]), *($13 + [232]), [0])
	$8 = *($13 + [148])
	$6 = *($0 + [340])
	$10 = *($6)
	$4 = *($13 + [136])
	*($13 + [40]) = ($13 + [80])
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [352])
	CALL $272(($6 + [128]), $8, $10, ($13 + [40]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$37 }
	$12 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1152]
	$11 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$43 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$6 = ($6 + [165])
	goto $label$41 
	
.LABEL $label$43
	$1 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$39
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$1 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$38 }
	*($13 + [32]) = $11
	*($13 + [24]) = $12
	$10 = (int_64)0
	$1 = (int_64)59
	$8 = [5472]
	$11 = (int_64)0
	
.LOOP $label$44:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$45 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$6 = ($6 + [165])
	goto $label$46 
	
.LABEL $label$47
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$45
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$9 | (int_64)$11)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$44 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [5488]
	$12 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$10 > (uint_64)(int_64)8) ){ goto $label$53 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$6 = ($6 + [165])
	goto $label$51 
	
.LABEL $label$53
	$1 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$49
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$12 = ((int_64)$1 | (int_64)$12)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$48 }
	*($13 + [16]) = $7
	*($13 + [18]) = $4
	*($13 + [8]) = *($13 + [232])
	$8 = CALL $532(($13 + [40]), ($13 + [24]), $11, $12, ($13 + [8]))
	CALL $65(($13 + [240]), $8)
	$6 = *($13 + [240])
	CALL send_inline($6, (*($13 + [244]) - $6))
	$6 = *($13 + [240])
	if ( ($6 == 0) ){ goto $label$54 }
	*($13 + [244]) = $6
	CALL $867($6)
	
.LABEL $label$54
	$6 = *($8 + [28])
	if ( ($6 == 0) ){ goto $label$55 }
	*(($8 + [32])) = $6
	CALL $867($6)
	
.LABEL $label$55
	$6 = *($8 + [16])
	if ( ($6 == 0) ){ goto $label$37 }
	*(($8 + [20])) = $6
	CALL $867($6)
	
.LABEL $label$37
	CALL $533(($13 + [152]))
	*([0] + [4]) = ($13 + [256])
}

void .FUNC $521 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $520 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $407 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	*(*(($7 = *($0 + [4])))) = [1]
	$2 = *($0)
	$4 = *($7 + [12])
	*($1) = *(*($7 + [4]))
	*($1 + [8]) = *(*($7))
	$9 = *($7)
	$5 = ($1 + [16])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)*(($1 + [20]))) ){ goto $label$2 }
	*($3) = *($9)
	*(($3 + [16])) = *(($9 + [16]))
	*(($3 + [8])) = *(($9 + [8]))
	*($5) = (*($5) + [20])
	goto $label$1 
	
.LABEL $label$2
	CALL $398(($1 + [12]), $9)
	
.LABEL $label$1
	if ( ((int_32)*(*($7 + [8])) != (int_32)[1]) ){ goto $label$3 }
	CALL $399(*($4 + [60]), *(*($7 + [16])), [1])
	
.LABEL $label$3
	$3 = ($1 + [8])
	$5 = ($1 + [12])
	$4 = *($1 + [12])
	$9 = *(($1 + [16]))
	$6 = ($9 - $4)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[20]))
	$7 = [29]
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$6 }
	$9 = (((int_32)((uint_32)($6 + [-20]) / (uint_32)[20]) * (int_32)[17]) + $7)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($7 + [-17])
	
.LABEL $label$5
	if ( ($9 <= [513]) ){ goto $label$8 }
	$7 = CALL malloc($9)
	goto $label$7 
	
.LABEL $label$8
	$7 = ($11 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$7
	*($10) = $7
	$11 = ($7 + $9)
	*($10 + [8]) = $11
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [576])
	CALL memcpy($7, $1, [8])
	$4 = ($7 + [8])
	CALL eosio_assert(((int_32)($11 - $4) > (int_32)[3]), [576])
	CALL memcpy($4, $3, [4])
	*($10 + [4]) = ($7 + [12])
	CALL $400($10, $5)
	$8 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)8526756653867991040, *(*($0 + [8])), $8, $7, $9)
	if ( ($9 <= [513]) ){ goto $label$9 }
	CALL free($7)
	
.LABEL $label$9
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$10 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $699 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	CALL require_auth($1)
	*($8 + [12]) = CALL $692($0, $1, $2)
	$4 = *($3 + [24])
	$3 = *($0 + [52])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$2 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$1 }
	$7 = $2
	$6 = ($2 + [-24])
	$2 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$2 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$2 = [0]
	$6 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $13($3, $6)
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$3), [32])
	
.LABEL $label$3
	$6 = ((int_32)$2 != (int_32)[0])
	CALL eosio_assert($6, [2624])
	$1 = *($0)
	*($8 + [8]) = ($8 + [12])
	CALL eosio_assert($6, [352])
	CALL $700($3, $2, $1, ($8 + [8]))
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $546 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [1248])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	*($0 + [24]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [160])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *(*($2 + [8]))
	*($0 + [32]) = [-1]
	*($0 + [28]) = $4
	return $0
}

int_32 .FUNC atoi (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$1 = [1]
	goto $label$4 
	
.LABEL $label$5
	$1 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$1 = [0]
	
.LABEL $label$2
	$2 = [0]
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$2 = [0]
	
.LOOP $label$7:
	$2 = (((int_32)$2 * (int_32)[10]) - $3)
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $2 ? ([0] - $2) : $1 )
}

int_32 .FUNC strerror (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL __lctrans($3, *([0] + [20]))
	$2 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*(($2 + [18896])) == (int_32)$0) ){ goto $label$4 }
	$1 = [87]
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[87]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$1 = $2
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = [18992]
	
.LOOP $label$6:
	$0 = *($2)
	$3 = ($2 + [1])
	$2 = $3
	if ( $0 ){ goto $label$6 }
	$2 = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [18992]
	return .LABEL $label$1
}

void .FUNC $898 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$1 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$18
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$16
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$15
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$9
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$8
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$7
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$5
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$1 
	
.LABEL $label$2
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$3 = *($1)
	*(($0 + [8])) = *($1 + [8])
	*($0) = $3
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	$1
}

int_32 .FUNC vfprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [288])
	*([0] + [4]) = $7
	*($7 + [284]) = $2
	$6 = [0]
	CALL memset(($7 + [240]), [0], [40])
	*($7 + [280]) = *($7 + [284])
	$2 = [-1]
	if ( ((int_32)CALL $894([0], $1, ($7 + [280]), ($7 + [80]), ($7 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL __lockfile($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) > (int_32)[0]) ){ goto $label$3 }
	*($0) = ($2 & [-33])
	
.LABEL $label$3
	$3 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	$2 = CALL $894($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	goto $label$4 
	
.LABEL $label$5
	*(($5 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($7 + [80])
	*($0 + [28]) = $7
	*($0 + [20]) = $7
	$4 = *($0 + [44])
	*($0 + [44]) = $7
	$2 = CALL $894($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	if ( ($4 == 0) ){ goto $label$4 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $4
	*($5) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$4 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $4 )
	
.LABEL $label$4
	$1 = *($0)
	*($0) = ($1 | $3)
	$1 = ($1 & [32])
	if ( ($6 == 0) ){ goto $label$6 }
	CALL __unlockfile($0)
	
.LABEL $label$6
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [288])
	return $2
}

int_32 .FUNC __errno_location ()
{
	return [20796]
}

int_32 .FUNC $891 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0 + [28])
	$6 = (*($0 + [20]) - $4)
	$3 = *($0 + [84])
	$5 = *($3 + [4])
	$6 = ( $5 ? $6 : ($5 <= $6) )
	if ( ($6 == 0) ){ goto $label$1 }
	CALL memcpy(*($3), $4, $6)
	*($3) = (*($3) + $6)
	$5 = (*($5) - $6)
	*(($5 = ($3 + [4]))) = $5
	
.LABEL $label$1
	$6 = *($3)
	$5 = ( $5 ? $2 : ($5 <= $2) )
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memcpy($6, $1, $5)
	$6 = (*($3) + $5)
	*($3) = $6
	*(($3 = ($3 + [4]))) = (*($3) - $5)
	
.LABEL $label$2
	*($6) = [0]
	$3 = *($0 + [44])
	*(($0 + [28])) = $3
	*(($0 + [20])) = $3
	return $2
}

int_32 .FUNC vsnprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [160])
	*([0] + [4]) = $4
	$5 = [-1]
	*($4 + [148]) = ( ($1 + [-1]) ? [0] : $1 )
	$0 = ( $0 ? ($4 + [158]) : $1 )
	*($4 + [144]) = $0
	*(($4 = CALL memset($4, [0], [144])) + [36]) = [52]
	*($4 + [75]) = [255]
	*($4 + [76]) = [-1]
	*($4 + [44]) = ($4 + [159])
	*($4 + [84]) = ($4 + [144])
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	*($0) = [0]
	$5 = CALL vfprintf($4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*(CALL __errno_location()) = [75]
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [160])
	return $5
}

int_32 .FUNC __fwritex (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($2 + [16])
	if ( $6 ){ goto $label$2 }
	$6 = [0]
	if ( CALL __towrite($2) ){ goto $label$1 }
	$6 = *(($2 + [16]))
	
.LABEL $label$2
	$7 = *($2 + [20])
	if ( ((uint_32)($6 - $7) >= (uint_32)$1) ){ goto $label$3 }
	return CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	
.LABEL $label$3
	$8 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$4 }
	$3 = ($0 + $1)
	$8 = [0]
	$6 = [0]
	
.LOOP $label$5:
	if ( (($1 + $6) == 0) ){ goto $label$4 }
	$5 = ($3 + $6)
	$4 = ($6 + [-1])
	$6 = $4
	if ( ((int_32)*(($5 + [-1])) != (int_32)[10]) ){ goto $label$5 }
	$8 = (($1 + $4) + [1])
	$6 = CALL int_32 $2((int_32 $0), (int_32 $8), (int_32 *($2 + [36])))
	if ( ($6 <= $8) ){ goto $label$1 }
	$1 = ((int_32)$4 ^ (int_32)[-1])
	$0 = (($3 + $4) + [1])
	$7 = *(($2 + [20]))
	
.LABEL $label$4
	CALL memcpy($7, $0, $1)
	*(($6 = ($2 + [20]))) = (*($6) + $1)
	return ($8 + $1)
	
.LABEL $label$1
	return $6
}

void .FUNC __unlockfile (int_32 $0)
{
}

int_32 .FUNC __lockfile (int_32 $0)
{
	int_32 $1
	return $1
}

int_32 .FUNC $894 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	$39 = (*([0] + [4]) - [8128])
	*([0] + [4]) = $39
	$12 = (($39 + [692]) + [11])
	$11 = (($39 + [704]) | [8])
	$10 = (($39 + [704]) | [9])
	$9 = ($39 + [7664])
	$8 = ([-2] - ($39 + [704]))
	$7 = (($39 + [692]) + [12])
	$6 = (($39 + [352]) + [54])
	$5 = (($39 + [352]) + [55])
	$30 = [0]
	$38 = [0]
	$32 = [0]
	
.LOOP $label$17:
	$38 = ($30 + $38)
	$37 = $1
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$16 }
	$1 = $37
	$30 = ($30 & [255])
	if ( ($30 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	if ( ((int_32)$30 == (int_32)[37]) ){ goto $label$19 }
	$1 = ($1 + [1])
	$30 = (*($1) & [255])
	if ( $30 ){ goto $label$21 }
	
.LABEL $label$20
	$30 = $1
	goto $label$18 
	
.LABEL $label$19
	$30 = $1
	
.LOOP $label$22:
	if ( ((int_32)*(($1 + [1])) != (int_32)[37]) ){ goto $label$18 }
	$30 = ($30 + [1])
	$1 = ($1 + [2])
	if ( ((int_32)*($1) == (int_32)[37]) ){ goto $label$22 }
	
.LABEL $label$18
	$13 = ([2147483647] - $38)
	$30 = ($30 - $37)
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	if ( ($0 == 0) ){ goto $label$23 }
	if ( (*($0) & [32]) ){ goto $label$23 }
	CALL __fwritex($37, $30, $0)
	
.LABEL $label$23
	if ( $30 ){ goto $label$24 }
	$36 = ($1 + [1])
	$27 = [-1]
	$30 = *($1 + [1])
	$17 = ($30 + [-48])
	if ( ((uint_32)$17 > (uint_32)[9]) ){ goto $label$25 }
	$1 = ((int_32)*($1 + [2]) == (int_32)[36])
	$36 = ( ($1 + [3]) ? $36 : $1 )
	$30 = *($36)
	$27 = ( $17 ? [-1] : $1 )
	$32 = ( [1] ? $32 : $1 )
	
.LABEL $label$25
	$14 = [0]
	$1 = (int_32(($30 << [24]) >> [24]) + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$26 }
	$14 = [0]
	
.LOOP $label$27:
	if ( ((([1] << $1) & [75913]) == 0) ){ goto $label$26 }
	$14 = (([1] << (int_32(($30 << [24]) >> [24]) + [-32])) | $14)
	$36 = ($36 + [1])
	$30 = *($36)
	$1 = ($30 + [-32])
	if ( ($1 <= [32]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)($30 & [255]) != (int_32)[42]) ){ goto $label$33 }
	$1 = (*($36 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$32 }
	if ( ((int_32)*($36 + [2]) != (int_32)[36]) ){ goto $label$32 }
	*(($4 + ($1 << [2]))) = [10]
	$17 = ($36 + [3])
	$32 = [1]
	$15 = *((($3 + (*(($36 + [1])) << [4])) + [-768]))
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	goto $label$31 
	
.LABEL $label$33
	$15 = [0]
	$30 = (int_32(($30 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$30 > (uint_32)[9]) ){ goto $label$30 }
	$1 = [0]
	$17 = $36
	
.LOOP $label$34:
	$15 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$35 }
	$1 = ((int_32)$1 * (int_32)[10])
	$15 = ( [-1] ? ($1 + $30) : ((int_32)$30 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$35
	$1 = $15
	$17 = ($17 + [1])
	$30 = (*($17) + [-48])
	if ( ($30 <= [10]) ){ goto $label$34 }
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$28 }
	goto $label$15 
	
.LABEL $label$32
	if ( $32 ){ goto $label$3 }
	$17 = ($36 + [1])
	if ( ($0 == 0) ){ goto $label$29 }
	$1 = *($2)
	*($2) = ($1 + [4])
	$32 = [0]
	$15 = *($1)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$31
	$15 = ([0] - $15)
	$14 = ($14 | [8192])
	goto $label$28 
	
.LABEL $label$30
	$17 = $36
	goto $label$28 
	
.LABEL $label$29
	$32 = [0]
	$15 = [0]
	
.LABEL $label$28
	$30 = [0]
	$36 = [-1]
	if ( ((int_32)*($17) != (int_32)[46]) ){ goto $label$42 }
	$36 = *($17 + [1])
	if ( ((int_32)$36 != (int_32)[42]) ){ goto $label$41 }
	$1 = (*($17 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$40 }
	if ( ((int_32)*($17 + [3]) != (int_32)[36]) ){ goto $label$40 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($17 + [4])
	$36 = *((($3 + (*(($17 + [2])) << [4])) + [-768]))
	goto $label$37 
	
.LABEL $label$42
	$1 = $17
	$16 = [0]
	goto $label$36 
	
.LABEL $label$41
	$1 = ($17 + [1])
	$31 = ($36 + [-48])
	if ( ((uint_32)$31 > (uint_32)[9]) ){ goto $label$39 }
	$17 = [0]
	
.LOOP $label$43:
	$36 = [-1]
	if ( ((uint_32)$17 > (uint_32)[214748364]) ){ goto $label$44 }
	$17 = ((int_32)$17 * (int_32)[10])
	$36 = ( [-1] ? ($17 + $31) : ((int_32)$31 > (int_32)([2147483647] - $17)) )
	
.LABEL $label$44
	$16 = [1]
	$17 = $36
	$1 = ($1 + [1])
	$31 = (*($1) + [-48])
	if ( ($31 <= [10]) ){ goto $label$43 }
	goto $label$36 
	
.LABEL $label$40
	if ( $32 ){ goto $label$3 }
	$1 = ($17 + [2])
	if ( ($0 == 0) ){ goto $label$38 }
	$17 = *($2)
	*($2) = ($17 + [4])
	$36 = *($17)
	goto $label$37 
	
.LABEL $label$39
	$16 = [1]
	$36 = [0]
	goto $label$36 
	
.LABEL $label$38
	$36 = [0]
	
.LABEL $label$37
	$16 = ((int_32)uint_32($36 >> [31]) ^ (int_32)[1])
	
.LABEL $label$36
	
.LOOP $label$45:
	$17 = $30
	$30 = (*($1) + [-65])
	if ( ((uint_32)$30 > (uint_32)[57]) ){ goto $label$3 }
	$1 = ($1 + [1])
	$30 = *(((((int_32)$17 * (int_32)[58]) + $30) + [18272]))
	if ( (($30 + [-1]) <= [8]) ){ goto $label$45 }
	if ( ($30 == 0) ){ goto $label$3 }
	if ( ((int_32)$30 != (int_32)[27]) ){ goto $label$49 }
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$48 }
	goto $label$3 
	
.LABEL $label$49
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$47 }
	*(($4 + ($27 << [2]))) = $30
	$30 = ($3 + ($27 << [4]))
	*($39 + [428]) = *(($30 + [12]))
	*($39 + [424]) = *(($30 + [8]))
	*($39 + [420]) = *(($30 + [4]))
	*($39 + [416]) = *($30)
	
.LABEL $label$48
	if ( $0 ){ goto $label$46 }
	$30 = [0]
	goto $label$24 
	
.LABEL $label$47
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $898(($39 + [416]), $30, $2)
	
.LABEL $label$46
	$31 = ($14 & [-65537])
	$18 = ( $31 ? $14 : ($14 & [8192]) )
	$26 = [0]
	$24 = [18752]
	$30 = *(($1 + [-1]))
	$29 = ( ( ($30 & [-33]) ? $30 : ((int_32)($30 & [15]) == (int_32)[3]) ) ? $30 : $17 )
	$30 = ($29 + [-65])
	if ( ((uint_32)$30 > (uint_32)[55]) ){ goto $label$80 }
	$14 = $5
	goto $label$111 
	
.LABEL $label$111
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$112 }
	if ( $16 ){ goto $label$15 }
	
.LABEL $label$112
	$35 = *($39 + [424])
	$23 = *($39 + [416])
	*($39 + [748]) = [0]
	if ( (CALL __signbitl($23, $35) == 0) ){ goto $label$113 }
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	$20 = [1]
	$19 = [18784]
	goto $label$108 
	
.LABEL $label$113
	if ( ($18 & [2048]) ){ goto $label$109 }
	$20 = ($18 & [1])
	$19 = ( [18790] ? [18785] : $20 )
	goto $label$108 
	
.LABEL $label$110
	$35 = *($39 + [416])
	if ( ((int_64)$35 <= (int_64)-1) ){ goto $label$92 }
	if ( ($18 & [2048]) ){ goto $label$88 }
	$26 = ($18 & [1])
	$24 = ( [18754] ? [18752] : $26 )
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$109
	$20 = [1]
	$19 = [18787]
	
.LABEL $label$108
	if ( ((int_32)CALL __fpclassifyl($23, $35) <= (int_32)[1]) ){ goto $label$115 }
	CALL frexpl(($39 + [320]), $23, $35, ($39 + [748]))
	$23 = *($39 + [328])
	$35 = *($39 + [320])
	CALL __addtf3(($39 + [304]), $35, $23, $35, $23)
	$23 = *((($39 + [304]) + [8]))
	$35 = *($39 + [304])
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$116 }
	*($39 + [748]) = (*($39 + [748]) + [-1])
	
.LABEL $label$116
	$21 = ($29 | [32])
	if ( ((int_32)$21 != (int_32)[97]) ){ goto $label$114 }
	$37 = ($29 & [32])
	$24 = ( ($19 + [9]) ? $19 : $37 )
	if ( ((uint_32)$36 > (uint_32)[26]) ){ goto $label$77 }
	if ( (([27] - $36) == 0) ){ goto $label$77 }
	$30 = ($36 + [-27])
	$34 = (int_64)4612248968380809216
	$33 = (int_64)0
	
.LOOP $label$117:
	CALL __multf3(($39 + [208]), $33, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($39 + [208]) + [8]))
	$33 = *($39 + [208])
	$30 = ($30 + [1])
	if ( $30 ){ goto $label$117 }
	if ( ((int_32)*($24) != (int_32)[45]) ){ goto $label$78 }
	CALL __subtf3(($39 + [160]), $35, ((int_64)$23 ^ (int_64)-9223372036854775808), $33, $34)
	CALL __addtf3(($39 + [144]), $33, $34, *($39 + [160]), *((($39 + [160]) + [8])))
	$23 = ((int_64)*((($39 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$35 = *($39 + [144])
	goto $label$77 
	
.LABEL $label$115
	$16 = CALL __unordtf2($23, $35, $23, $35)
	$37 = ($20 + [3])
	if ( ($18 & [8192]) ){ goto $label$93 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$93 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$95 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$118:
	if ( (($30 & [1]) == 0) ){ goto $label$119 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$119
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$118 }
	if ( $14 ){ goto $label$93 }
	$31 = ($31 & [255])
	goto $label$94 
	
.LABEL $label$114
	$30 = ((int_32)$36 < (int_32)[0])
	if ( (CALL __netf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$90 }
	CALL __multf3(($39 + [288]), $35, $23, (int_64)0, (int_64)4619285842798575616)
	$31 = (*($39 + [748]) + [-28])
	*($39 + [748]) = $31
	$23 = *((($39 + [288]) + [8]))
	$35 = *($39 + [288])
	goto $label$89 
	
.LABEL $label$107
	$35 = *($39 + [416])
	*((($39 + [344]) + [4])) = [0]
	*($39 + [344]) = $35
	*($39 + [416]) = ($39 + [344])
	$36 = [-1]
	$37 = ($39 + [344])
	goto $label$105 
	
.LABEL $label$106
	$37 = *($39 + [416])
	if ( ($36 == 0) ){ goto $label$74 }
	
.LABEL $label$105
	$30 = [0]
	$14 = $37
	$17 = [0]
	
.LOOP $label$121:
	$31 = *($14)
	if ( ($31 == 0) ){ goto $label$120 }
	$17 = CALL wctomb(($39 + [340]), $31)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$120 }
	if ( ((uint_32)$17 > (uint_32)($36 - $30)) ){ goto $label$120 }
	$14 = ($14 + [4])
	$30 = ($17 + $30)
	if ( ((uint_32)$36 > (uint_32)$30) ){ goto $label$121 }
	
.LABEL $label$120
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$104
	*((($39 + [352]) + [54])) = *($39 + [416])
	$36 = [1]
	$37 = $6
	$14 = $5
	$18 = $31
	goto $label$79 
	
.LABEL $label$103
	$37 = CALL strerror(*(CALL $892()))
	goto $label$97 
	
.LABEL $label$102
	$30 = ($17 & [255])
	if ( ((uint_32)$30 > (uint_32)[7]) ){ goto $label$56 }
	goto $label$122 
	
.LABEL $label$122
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$101
	$37 = $5
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$123 }
	$37 = $5
	
.LOOP $label$124:
	*(($37 = ($37 + [-1]))) = ((int_64)((int_64)$35 & (int_64)7) | (int_64)48)
	$35 = (uint_64)$35 >> (uint_64)(int_64)3
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	if ( ($18 & [8]) ){ goto $label$84 }
	$26 = [0]
	$24 = [18752]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$100
	$36 = ( $36 ? [8] : ((uint_32)$36 > (uint_32)[8]) )
	$18 = ($18 | [8])
	$29 = [120]
	
.LABEL $label$99
	$26 = [0]
	$24 = [18752]
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$125 }
	$30 = ($29 & [32])
	$37 = $5
	
.LOOP $label$126:
	*(($37 = ($37 + [-1]))) = (*((((CASTING uint_32)(uint_64 $35) & [15]) + [18736])) | $30)
	$35 = (uint_64)$35 >> (uint_64)(int_64)4
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$126 }
	if ( (($18 & [8]) == 0) ){ goto $label$83 }
	if ( (int_64)(*($39 + [416]) == 0) ){ goto $label$83 }
	$24 = (int_32($29 >> [4]) + [18752])
	$26 = [2]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$125
	$37 = $5
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$98
	$30 = *($39 + [416])
	$37 = ( $30 ? [18768] : $30 )
	
.LABEL $label$97
	$26 = [0]
	$30 = CALL strnlen($37, ( [2147483647] ? $36 : ((int_32)$36 < (int_32)[0]) ))
	$14 = ($37 + $30)
	if ( ((int_32)$36 <= (int_32)[-1]) ){ goto $label$91 }
	$18 = $31
	$36 = $30
	goto $label$79 
	
.LABEL $label$96
	$26 = [0]
	$24 = [18752]
	$35 = *($39 + [416])
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$95
	if ( $17 ){ goto $label$93 }
	
.LABEL $label$94
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$93
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$127 }
	CALL __fwritex($19, $20, $0)
	$30 = *($0)
	
.LABEL $label$127
	if ( ($30 & [32]) ){ goto $label$128 }
	$30 = uint_32(($29 & [32]) >> [5])
	CALL __fwritex(( ( [18848] ? [18864] : $30 ) ? ( [18816] ? [18832] : $30 ) : $16 ), [3], $0)
	
.LABEL $label$128
	if ( ((int_32)($18 & [73728]) != (int_32)[8192]) ){ goto $label$129 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$129 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$131 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$132:
	if ( (($30 & [1]) == 0) ){ goto $label$133 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$133
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$132 }
	if ( $14 ){ goto $label$129 }
	$31 = ($31 & [255])
	goto $label$130 
	
.LABEL $label$131
	if ( $17 ){ goto $label$129 }
	
.LABEL $label$130
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$129
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$92
	$35 = (int_64)
	*($39 + [416]) = $35((int_64)0 - $35))
	$26 = [1]
	$24 = [18752]
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$91
	$18 = $31
	$36 = $30
	if ( (*($14) == 0) ){ goto $label$79 }
	goto $label$15 
	
.LABEL $label$90
	$31 = *($39 + [748])
	
.LABEL $label$89
	$28 = ( [6] ? $36 : $30 )
	$22 = ( ($39 + [752]) ? $9 : ((int_32)$31 < (int_32)[0]) )
	$36 = $22
	
.LOOP $label$134:
	$30 = CALL __fixunstfsi($35, $23)
	CALL __floatunsitf(($39 + [272]), $30)
	CALL __subtf3(($39 + [256]), $35, $23, *($39 + [272]), *((($39 + [272]) + [8])))
	CALL __multf3(($39 + [240]), *($39 + [256]), *((($39 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($36) = $30
	$36 = ($36 + [4])
	$23 = *((($39 + [240]) + [8]))
	$35 = *($39 + [240])
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$134 }
	if ( ((int_32)$31 < (int_32)[1]) ){ goto $label$137 }
	$17 = $22
	
.LOOP $label$138:
	$14 = ( $31 ? [29] : ((int_32)$31 < (int_32)[29]) )
	$30 = ($36 + [-4])
	if ( ($30 <= $17) ){ goto $label$139 }
	$23 = (CASTING uint_64)(uint_32 $14)
	$35 = (int_64)0
	
.LOOP $label$140:
	$35 = ((int_64)((int_64)*($30) << (int_64)$23) + (int_64)((int_64)$35 & (int_64)4294967295))
	*($30) = ((uint_64)$35 % (uint_64)(int_64)1000000000)
	$35 = ((uint_64)$35 / (uint_64)(int_64)1000000000)
	$30 = ($30 + [-4])
	if ( ((uint_32)$30 >= (uint_32)$17) ){ goto $label$140 }
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( ($30 == 0) ){ goto $label$139 }
	*(($17 = ($17 + [-4]))) = $30
	
.LABEL $label$139
	
.LOOP $label$142:
	$30 = $36
	if ( ((uint_32)$30 <= (uint_32)$17) ){ goto $label$141 }
	$36 = ($30 + [-4])
	if ( (*($36) == 0) ){ goto $label$142 }
	
.LABEL $label$141
	$36 = $30
	$31 = ($31 - $14)
	if ( ((int_32)$31 > (int_32)[0]) ){ goto $label$138 }
	*($39 + [748]) = $31
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$137
	$30 = $36
	$17 = $22
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	
.LABEL $label$136
	$24 = (((uint_32)($28 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$21 != (int_32)[102]) ){ goto $label$144 }
	$25 = ($22 + ($24 << [2]))
	
.LOOP $label$145:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$147 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$148:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$148 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$146 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$146 
	
.LABEL $label$147
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$146
	$30 = ( $25 ? $30 : ((int_32)int_32(($30 - $22) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$145 }
	goto $label$143 
	
.LABEL $label$144
	
.LOOP $label$149:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$151 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$152:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$152 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$150 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$150 
	
.LABEL $label$151
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$150
	$30 = ( ($17 + ($24 << [2])) ? $30 : ((int_32)int_32(($30 - $17) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$149 }
	
.LABEL $label$143
	*($39 + [748]) = $31
	
.LABEL $label$135
	$36 = [0]
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$153 }
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$153 }
	$14 = [10]
	
.LOOP $label$154:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$154 }
	
.LABEL $label$153
	$16 = ((int_32)$21 == (int_32)[103])
	$14 = (($28 - ( $36 ? [0] : ((int_32)$21 != (int_32)[102]) )) - (((int_32)$28 != (int_32)[0]) & $16))
	if ( ((int_32)$14 >= (int_32)(((int_32)int_32(($30 - $22) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$155 }
	$37 = ($14 + [147456])
	$24 = ($22 + (((int_32)$37 / (int_32)[9]) << [2]))
	$31 = ($24 + [-65532])
	$14 = [10]
	$37 = ((int_32)$37 % (int_32)[9])
	if ( ((int_32)($37 + [1]) > (int_32)[8]) ){ goto $label$156 }
	$37 = ([8] - $37)
	$14 = [10]
	
.LOOP $label$157:
	$14 = ((int_32)$14 * (int_32)[10])
	$37 = ($37 + [-1])
	if ( $37 ){ goto $label$157 }
	
.LABEL $label$156
	$27 = *($31)
	$37 = ((uint_32)$27 % (uint_32)$14)
	$26 = ($31 + [4])
	if ( ((int_32)$26 != (int_32)$30) ){ goto $label$159 }
	if ( ($37 == 0) ){ goto $label$158 }
	
.LABEL $label$159
	if ( (((uint_32)$27 / (uint_32)$14) & [1]) ){ goto $label$161 }
	$35 = (int_64)4643211215818981376
	$23 = (int_64)0
	if ( ((uint_32)$31 <= (uint_32)$17) ){ goto $label$160 }
	if ( ((int_32)$14 != (int_32)[1000000000]) ){ goto $label$160 }
	if ( ((*(($31 + [-4])) & [1]) == 0) ){ goto $label$160 }
	
.LABEL $label$161
	$35 = (int_64)4643211215818981376
	$23 = (int_64)1
	
.LABEL $label$160
	$34 = (int_64)4611123068473966592
	$25 = ((int_32)$14 / (int_32)[2])
	if ( ($37 <= $25) ){ goto $label$162 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$37 == (int_32)$25) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$30) )
	
.LABEL $label$162
	if ( ($20 == 0) ){ goto $label$163 }
	if ( ((int_32)*($19) != (int_32)[45]) ){ goto $label$163 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	
.LABEL $label$163
	CALL __addtf3(($39 + [224]), $23, $35, (int_64)0, $34)
	$37 = ($27 - $37)
	*($31) = $37
	if ( (CALL __eqtf2(*($39 + [224]), *((($39 + [224]) + [8])), $23, $35) == 0) ){ goto $label$158 }
	$36 = ($37 + $14)
	*($31) = $36
	if ( ($36 <= [1000000000]) ){ goto $label$164 }
	$36 = ($24 + [-65536])
	
.LOOP $label$165:
	*(($36 + [4])) = [0]
	if ( ((uint_32)$36 >= (uint_32)$17) ){ goto $label$166 }
	*(($17 = ($17 + [-4]))) = [0]
	
.LABEL $label$166
	$14 = (*($36) + [1])
	*($36) = $14
	$36 = ($36 + [-4])
	if ( ((uint_32)$14 > (uint_32)[999999999]) ){ goto $label$165 }
	$31 = ($36 + [4])
	
.LABEL $label$164
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$158 }
	$14 = [10]
	
.LOOP $label$167:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$167 }
	
.LABEL $label$158
	$14 = ($31 + [4])
	$30 = ( $14 ? $30 : ((uint_32)$30 > (uint_32)$14) )
	
.LABEL $label$155
	$31 = ([0] - $36)
	
.LOOP $label$171:
	$14 = $30
	if ( ((uint_32)$14 <= (uint_32)$17) ){ goto $label$170 }
	$30 = ($14 + [-4])
	if ( (*($30) == 0) ){ goto $label$171 }
	$27 = [1]
	if ( $16 ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$170
	$27 = [0]
	if ( ($16 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$30 = (($28 == 0) + $28)
	if ( ((int_32)$30 <= (int_32)$36) ){ goto $label$76 }
	if ( ((int_32)$36 < (int_32)[-4]) ){ goto $label$76 }
	$29 = ($29 + [-1])
	$28 = (($30 + [-1]) - $36)
	$16 = ($18 & [8])
	if ( ($16 == 0) ){ goto $label$75 }
	goto $label$68 
	
.LABEL $label$168
	$16 = ($18 & [8])
	goto $label$68 
	
.LABEL $label$88
	$26 = [1]
	$24 = [18753]
	if ( (uint_64)($35 <= (int_64)4294967296) ){ goto $label$86 }
	
.LABEL $label$87
	$37 = $5
	
.LOOP $label$172:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$172 }
	goto $label$85 
	
.LABEL $label$86
	$23 = $35
	$37 = $5
	
.LABEL $label$85
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$83 }
	
.LOOP $label$173:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $17 ){ goto $label$173 }
	goto $label$83 
	
.LABEL $label$84
	$30 = ($5 - $37)
	$24 = ( [18752] ? [18757] : ((int_32)$36 > (int_32)$30) )
	$26 = ((int_32)$36 <= (int_32)$30)
	
.LABEL $label$83
	if ( ($16 == 0) ){ goto $label$81 }
	
.LABEL $label$82
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$81
	$18 = ( ($18 & [-65537]) ? $18 : ((int_32)$36 > (int_32)[-1]) )
	$35 = *($39 + [416])
	if ( $36 ){ goto $label$174 }
	if ( ((int_64)($35 == 0) == 0) ){ goto $label$174 }
	$37 = $5
	$14 = $5
	$36 = [0]
	goto $label$79 
	
.LABEL $label$174
	$30 = ((int_64)($35 == 0) + ($5 - $37))
	$36 = ( $36 ? $30 : ((int_32)$36 > (int_32)$30) )
	
.LABEL $label$80
	$14 = $5
	
.LABEL $label$79
	$29 = ($14 - $37)
	$28 = ( $29 ? $36 : ((int_32)$36 < (int_32)$29) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$15 }
	$27 = ($26 + $28)
	$30 = ( $27 ? $15 : ((int_32)$15 < (int_32)$27) )
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$175 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$175 }
	$17 = ($22 <= [256])
	$22 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $22 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$177 }
	$17 = ($14 == 0)
	$14 = $22
	
.LOOP $label$178:
	if ( (($17 & [1]) == 0) ){ goto $label$179 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$179
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$178 }
	if ( $16 ){ goto $label$175 }
	$22 = ($22 & [255])
	goto $label$176 
	
.LABEL $label$177
	if ( $14 ){ goto $label$175 }
	
.LABEL $label$176
	CALL __fwritex(($39 + [432]), $22, $0)
	
.LABEL $label$175
	if ( (*($0) & [32]) ){ goto $label$180 }
	CALL __fwritex($24, $26, $0)
	
.LABEL $label$180
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$181 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$181 }
	$17 = ($26 <= [256])
	$26 = ($30 - $27)
	CALL memset(($39 + [432]), [48], ( $26 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$183 }
	$17 = ($14 == 0)
	$14 = $26
	
.LOOP $label$184:
	if ( (($17 & [1]) == 0) ){ goto $label$185 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$185
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$184 }
	if ( $16 ){ goto $label$181 }
	$26 = ($26 & [255])
	goto $label$182 
	
.LABEL $label$183
	if ( $14 ){ goto $label$181 }
	
.LABEL $label$182
	CALL __fwritex(($39 + [432]), $26, $0)
	
.LABEL $label$181
	if ( ((int_32)$29 >= (int_32)$36) ){ goto $label$186 }
	$17 = ($16 <= [256])
	$16 = ($28 - $29)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$188 }
	$17 = ($36 == 0)
	$36 = $16
	
.LOOP $label$189:
	if ( (($17 & [1]) == 0) ){ goto $label$190 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$190
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$189 }
	if ( $31 ){ goto $label$186 }
	$16 = ($16 & [255])
	goto $label$187 
	
.LABEL $label$188
	if ( $36 ){ goto $label$186 }
	
.LABEL $label$187
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$186
	if ( (*($0) & [32]) ){ goto $label$191 }
	CALL __fwritex($37, $29, $0)
	
.LABEL $label$191
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$24 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$24 }
	$17 = ($37 <= [256])
	$37 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $17 ))
	$36 = *($0)
	$15 = ($36 & [32])
	if ( $17 ){ goto $label$193 }
	$17 = ($15 == 0)
	$15 = $37
	
.LOOP $label$194:
	if ( (($17 & [1]) == 0) ){ goto $label$195 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$195
	$14 = ($36 & [32])
	$17 = ($14 == 0)
	$15 = ($15 + [-256])
	if ( ((uint_32)$15 > (uint_32)[255]) ){ goto $label$194 }
	if ( $14 ){ goto $label$24 }
	$37 = ($37 & [255])
	goto $label$192 
	
.LABEL $label$193
	if ( $15 ){ goto $label$24 }
	
.LABEL $label$192
	CALL __fwritex(($39 + [432]), $37, $0)
	goto $label$24 
	
.LABEL $label$78
	CALL __addtf3(($39 + [192]), $35, $23, $33, $34)
	CALL __subtf3(($39 + [176]), *($39 + [192]), *((($39 + [192]) + [8])), $33, $34)
	$23 = *((($39 + [176]) + [8]))
	$35 = *($39 + [176])
	
.LABEL $label$77
	$30 = int_32($31 >> [31])
	$31 = *($39 + [748])
	$17 = ((int_32)($31 + $30) ^ (int_32)$30)
	$34 = (CASTING int_64)(int_32 $17)
	$30 = [0]
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$198 }
	$17 = (CASTING uint_32)(uint_64 $34)
	if ( $17 ){ goto $label$197 }
	goto $label$196 
	
.LABEL $label$198
	$30 = [0]
	
.LOOP $label$199:
	*(($12 + $30)) = ((int_64)((uint_64)$34 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ($30 + [-1])
	$17 = ((uint_64)$34 > (uint_64)(int_64)42949672959)
	$33 = ((uint_64)$34 / (uint_64)(int_64)10)
	$34 = $33
	if ( $17 ){ goto $label$199 }
	$17 = (CASTING uint_32)(uint_64 $33)
	if ( ($17 == 0) ){ goto $label$196 }
	
.LABEL $label$197
	
.LOOP $label$200:
	*(((($39 + [692]) + $30) + [11])) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$30 = ($30 + [-1])
	$14 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $14 ){ goto $label$200 }
	
.LABEL $label$196
	$17 = ($7 + $30)
	if ( $30 ){ goto $label$201 }
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$201
	$16 = ($20 | [2])
	*(($27 = ($17 + [-2]))) = ($29 + [15])
	*(($17 + [-1])) = ((uint_32($31 >> [30]) & [2]) + [43])
	if ( ($18 & [8]) ){ goto $label$202 }
	if ( ((int_32)$36 < (int_32)[1]) ){ goto $label$71 }
	$30 = ($39 + [704])
	
.LOOP $label$203:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [80]), $17)
	CALL __subtf3(($39 + [64]), $35, $23, *($39 + [80]), *((($39 + [80]) + [8])))
	CALL __multf3(($39 + [48]), *($39 + [64]), *((($39 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [18736])) | $37)
	$23 = *((($39 + [48]) + [8]))
	$35 = *($39 + [48])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$204 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$204
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$203 }
	goto $label$70 
	
.LABEL $label$202
	$30 = ($39 + [704])
	
.LOOP $label$205:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [128]), $17)
	CALL __subtf3(($39 + [112]), $35, $23, *($39 + [128]), *((($39 + [128]) + [8])))
	CALL __multf3(($39 + [96]), *($39 + [112]), *((($39 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [18736])) | $37)
	$23 = *((($39 + [96]) + [8]))
	$35 = *($39 + [96])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$206 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$206
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$205 }
	goto $label$70 
	
.LABEL $label$76
	$28 = ($30 + [-1])
	$29 = ($29 + [-2])
	$16 = ($18 & [8])
	if ( $16 ){ goto $label$68 }
	
.LABEL $label$75
	$30 = [9]
	if ( ($27 == 0) ){ goto $label$207 }
	$16 = *(($14 + [-4]))
	if ( ($16 == 0) ){ goto $label$207 }
	$30 = [0]
	if ( ((uint_32)$16 % (uint_32)[10]) ){ goto $label$207 }
	$37 = [10]
	$30 = [0]
	
.LOOP $label$208:
	$30 = ($30 + [1])
	$37 = ((int_32)$37 * (int_32)[10])
	if ( (((uint_32)$16 % (uint_32)$37) == 0) ){ goto $label$208 }
	
.LABEL $label$207
	$37 = (((int_32)int_32(($14 - $22) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($29 | [32]) != (int_32)[102]) ){ goto $label$69 }
	$16 = [0]
	$30 = ($37 - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	goto $label$68 
	
.LABEL $label$74
	$30 = [0]
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	
.LABEL $label$73
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$72 }
	$17 = ($27 <= [256])
	$27 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $27 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$210 }
	$17 = ($36 == 0)
	$36 = $27
	
.LOOP $label$211:
	if ( (($17 & [1]) == 0) ){ goto $label$212 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$212
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$211 }
	if ( $31 ){ goto $label$72 }
	$27 = ($27 & [255])
	goto $label$209 
	
.LABEL $label$210
	if ( $36 ){ goto $label$72 }
	
.LABEL $label$209
	CALL __fwritex(($39 + [432]), $27, $0)
	
.LABEL $label$72
	if ( ($30 == 0) ){ goto $label$213 }
	$17 = [0]
	
.LOOP $label$214:
	$36 = *($37)
	if ( ($36 == 0) ){ goto $label$213 }
	$36 = CALL wctomb(($39 + [340]), $36)
	$17 = ($36 + $17)
	if ( ((uint_32)$17 > (uint_32)$30) ){ goto $label$213 }
	if ( (*($0) & [32]) ){ goto $label$215 }
	CALL __fwritex(($39 + [340]), $36, $0)
	
.LABEL $label$215
	$37 = ($37 + [4])
	if ( ($17 <= $30) ){ goto $label$214 }
	
.LABEL $label$213
	if ( ((int_32)$16 != (int_32)[8192]) ){ goto $label$216 }
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$216 }
	$17 = ($31 <= [256])
	$31 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$218 }
	$17 = ($36 == 0)
	$36 = $31
	
.LOOP $label$219:
	if ( (($17 & [1]) == 0) ){ goto $label$220 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$220
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$219 }
	if ( $37 ){ goto $label$216 }
	$31 = ($31 & [255])
	goto $label$217 
	
.LABEL $label$218
	if ( $36 ){ goto $label$216 }
	
.LABEL $label$217
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$216
	$30 = ( $15 ? $30 : ((int_32)$15 > (int_32)$30) )
	goto $label$24 
	
.LABEL $label$71
	$17 = ($39 + [704])
	
.LOOP $label$221:
	$14 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [32]), $14)
	CALL __subtf3(($39 + [16]), $35, $23, *($39 + [32]), *((($39 + [32]) + [8])))
	CALL __multf3($39, *($39 + [16]), *((($39 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($30 = $17)) = (*(($14 + [18736])) | $37)
	$23 = *(($39 + [8]))
	$35 = *($39)
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$222 }
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$222 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$222
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$221 }
	
.LABEL $label$70
	$30 = [-1]
	$31 = ($7 - $27)
	if ( ((int_32)(([2147483645] - $16) - $31) < (int_32)$36) ){ goto $label$50 }
	$26 = ($17 - ($39 + [704]))
	$29 = ( ( ($36 + [2]) ? $26 : ((int_32)($8 + $17) < (int_32)$36) ) ? $26 : $36 )
	$37 = (($31 + $16) + $29)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$65 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$65 }
	$30 = ($28 <= [256])
	$28 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$67 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$223:
	if ( (($30 & [1]) == 0) ){ goto $label$224 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$224
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$223 }
	if ( $14 ){ goto $label$65 }
	$28 = ($28 & [255])
	goto $label$66 
	
.LABEL $label$69
	$16 = [0]
	$30 = (($37 + $36) - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	
.LABEL $label$68
	$30 = [-1]
	$24 = ($28 | $16)
	$37 = ((int_32)$24 != (int_32)[0])
	if ( ((int_32)$28 > (int_32)([2147483646] - $37)) ){ goto $label$50 }
	$26 = (($28 + $37) + [1])
	$21 = ((int_32)($29 | [32]) != (int_32)[102])
	if ( $21 ){ goto $label$225 }
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	$36 = ( $36 ? [0] : ((int_32)$36 > (int_32)[0]) )
	goto $label$61 
	
.LABEL $label$225
	$30 = ( $31 ? $36 : ((int_32)$36 < (int_32)[0]) )
	$35 = (CASTING int_64)(int_32 $30)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$64 }
	$37 = $7
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( $30 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$67
	if ( $17 ){ goto $label$65 }
	
.LABEL $label$66
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$65
	if ( (*($0) & [32]) ){ goto $label$226 }
	CALL __fwritex($24, $16, $0)
	
.LABEL $label$226
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$227 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$227 }
	$30 = ($16 <= [256])
	$16 = ($15 - $37)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$229 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$230:
	if ( (($30 & [1]) == 0) ){ goto $label$231 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$231
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$230 }
	if ( $14 ){ goto $label$227 }
	$16 = ($16 & [255])
	goto $label$228 
	
.LABEL $label$229
	if ( $17 ){ goto $label$227 }
	
.LABEL $label$228
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$227
	if ( (*($0) & [32]) ){ goto $label$232 }
	CALL __fwritex(($39 + [704]), $26, $0)
	
.LABEL $label$232
	$16 = ($29 - $26)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$233 }
	$30 = ($16 <= [256])
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$235 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$236:
	if ( (($30 & [1]) == 0) ){ goto $label$237 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$237
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$236 }
	if ( $14 ){ goto $label$233 }
	$16 = ($16 & [255])
	goto $label$234 
	
.LABEL $label$235
	if ( $17 ){ goto $label$233 }
	
.LABEL $label$234
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$233
	if ( (*($0) & [32]) ){ goto $label$238 }
	CALL __fwritex($27, $31, $0)
	
.LABEL $label$238
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$239 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$239 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$241 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$242:
	if ( (($30 & [1]) == 0) ){ goto $label$243 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$243
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$242 }
	if ( $14 ){ goto $label$239 }
	$31 = ($31 & [255])
	goto $label$240 
	
.LABEL $label$241
	if ( $17 ){ goto $label$239 }
	
.LABEL $label$240
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$239
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$64
	$37 = $7
	
.LOOP $label$244:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$244 }
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	
.LOOP $label$245:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$31 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $31 ){ goto $label$245 }
	
.LABEL $label$62
	if ( ((int_32)($7 - $37) > (int_32)[1]) ){ goto $label$246 }
	$30 = ($37 + [-1])
	
.LOOP $label$247:
	*($30) = [48]
	$37 = ($7 - $30)
	$31 = ($30 + [-1])
	$30 = $31
	if ( ((int_32)$37 < (int_32)[2]) ){ goto $label$247 }
	$37 = ($31 + [1])
	
.LABEL $label$246
	*(($25 = ($37 + [-2]))) = $29
	$30 = [-1]
	*(($37 + [-1])) = ((uint_32($36 >> [30]) & [2]) + [43])
	$36 = ($7 - $25)
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	
.LABEL $label$61
	$30 = [-1]
	$36 = ($36 + $26)
	if ( ((int_32)$36 > (int_32)((int_32)$20 ^ (int_32)[2147483647])) ){ goto $label$50 }
	$26 = ($36 + $20)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$51 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$51 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$53 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$248:
	if ( (($30 & [1]) == 0) ){ goto $label$249 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$249
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$248 }
	if ( $31 ){ goto $label$51 }
	$29 = ($29 & [255])
	goto $label$52 
	
.LABEL $label$60
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$59
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$58
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$57
	*(*($39 + [416])) = $38
	
.LABEL $label$56
	$30 = [0]
	goto $label$24 
	
.LABEL $label$55
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$54
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$53
	if ( $36 ){ goto $label$51 }
	
.LABEL $label$52
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$51
	if ( (*($0) & [32]) ){ goto $label$250 }
	CALL __fwritex($19, $20, $0)
	
.LABEL $label$250
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$251 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$251 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [48], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$253 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$254:
	if ( (($30 & [1]) == 0) ){ goto $label$255 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$255
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$254 }
	if ( $31 ){ goto $label$251 }
	$29 = ($29 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $36 ){ goto $label$251 }
	
.LABEL $label$252
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$251
	if ( $21 ){ goto $label$266 }
	$31 = ( $22 ? $17 : ((uint_32)$17 > (uint_32)$22) )
	$37 = $31
	
.LOOP $label$267:
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$269 }
	$17 = [0]
	
.LOOP $label$270:
	*(($11 + $17)) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ($17 + [-1])
	$36 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $36 ){ goto $label$270 }
	goto $label$268 
	
.LABEL $label$269
	$17 = [0]
	
.LABEL $label$268
	$30 = ($10 + $17)
	if ( ((int_32)$37 == (int_32)$31) ){ goto $label$272 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$271 }
	
.LOOP $label$273:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$273 }
	$30 = ($39 + [704])
	goto $label$271 
	
.LABEL $label$272
	if ( $17 ){ goto $label$271 }
	*(($30 = ($30 + [-1]))) = [48]
	
.LABEL $label$271
	if ( (*($0) & [32]) ){ goto $label$274 }
	CALL __fwritex($30, ($10 - $30), $0)
	
.LABEL $label$274
	$37 = ($37 + [4])
	if ( ((uint_32)$37 <= (uint_32)$22) ){ goto $label$267 }
	if ( ($24 == 0) ){ goto $label$275 }
	if ( (*($0) & [32]) ){ goto $label$275 }
	CALL __fwritex([18880], [1], $0)
	
.LABEL $label$275
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$265 }
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$264 }
	
.LOOP $label$276:
	$30 = $10
	$17 = *($37)
	if ( ($17 == 0) ){ goto $label$278 }
	$30 = $10
	
.LOOP $label$279:
	*(($30 = ($30 + [-1]))) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$36 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $36 ){ goto $label$279 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$277 }
	
.LABEL $label$278
	
.LOOP $label$280:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$280 }
	
.LABEL $label$277
	if ( (*($0) & [32]) ){ goto $label$281 }
	CALL __fwritex($30, ( $28 ? [9] : ((int_32)$28 < (int_32)[9]) ), $0)
	
.LABEL $label$281
	$30 = ($28 + [-9])
	if ( ((int_32)$28 < (int_32)[10]) ){ goto $label$263 }
	$28 = $30
	$37 = ($37 + [4])
	if ( ($37 <= $14) ){ goto $label$276 }
	goto $label$263 
	
.LABEL $label$266
	if ( ((int_32)$28 <= (int_32)[-1]) ){ goto $label$259 }
	$31 = ( $14 ? ($17 + [4]) : $27 )
	if ( ($16 == 0) ){ goto $label$261 }
	$37 = $17
	
.LOOP $label$282:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$284 }
	$36 = [0]
	
.LOOP $label$285:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$285 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$283 }
	
.LABEL $label$284
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$283
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$287 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$286 }
	
.LOOP $label$288:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$288 }
	goto $label$286 
	
.LABEL $label$287
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$289 }
	CALL __fwritex($14, [1], $0)
	$30 = *($0)
	
.LABEL $label$289
	$14 = ($14 + [1])
	if ( ($30 & [32]) ){ goto $label$286 }
	CALL __fwritex([18880], [1], $0)
	
.LABEL $label$286
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$290 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$290
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$282 }
	goto $label$260 
	
.LABEL $label$265
	$30 = $28
	if ( ((int_32)$30 >= (int_32)[1]) ){ goto $label$262 }
	goto $label$258 
	
.LABEL $label$264
	$30 = $28
	
.LABEL $label$263
	if ( ((int_32)$30 < (int_32)[1]) ){ goto $label$258 }
	
.LABEL $label$262
	$17 = ($30 <= [256])
	CALL memset(($39 + [432]), [48], ( $30 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$292 }
	$17 = ($36 == 0)
	$36 = $30
	
.LOOP $label$293:
	if ( (($17 & [1]) == 0) ){ goto $label$294 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$294
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$293 }
	if ( $37 ){ goto $label$258 }
	$30 = ($30 & [255])
	goto $label$291 
	
.LABEL $label$292
	if ( $36 ){ goto $label$258 }
	
.LABEL $label$291
	CALL __fwritex(($39 + [432]), $30, $0)
	if ( ((int_32)$18 == (int_32)[8192]) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$261
	$37 = $17
	
.LOOP $label$295:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$297 }
	$36 = [0]
	
.LOOP $label$298:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$298 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$296 }
	
.LABEL $label$297
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$296
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$300 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$299 }
	
.LOOP $label$301:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$301 }
	goto $label$299 
	
.LABEL $label$300
	if ( (*($0) & [32]) ){ goto $label$302 }
	CALL __fwritex($14, [1], $0)
	
.LABEL $label$302
	$14 = ($14 + [1])
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$299 }
	if ( (*($0) & [32]) ){ goto $label$299 }
	CALL __fwritex([18880], [1], $0)
	
.LABEL $label$299
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$303 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$303
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$295 }
	
.LABEL $label$260
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$259 }
	$30 = ($28 <= [256])
	CALL memset(($39 + [432]), [48], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$305 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$306:
	if ( (($30 & [1]) == 0) ){ goto $label$307 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$307
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$306 }
	if ( $14 ){ goto $label$259 }
	$28 = ($28 & [255])
	goto $label$304 
	
.LABEL $label$305
	if ( $17 ){ goto $label$259 }
	
.LABEL $label$304
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$259
	if ( (*($0) & [32]) ){ goto $label$258 }
	CALL __fwritex($25, ($7 - $25), $0)
	
.LABEL $label$258
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$256 }
	
.LABEL $label$257
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$256 }
	$30 = ($37 <= [256])
	$37 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$309 }
	$30 = ($17 == 0)
	$17 = $37
	
.LOOP $label$310:
	if ( (($30 & [1]) == 0) ){ goto $label$311 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$311
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$310 }
	if ( $14 ){ goto $label$256 }
	$37 = ($37 & [255])
	goto $label$308 
	
.LABEL $label$309
	if ( $17 ){ goto $label$256 }
	
.LABEL $label$308
	CALL __fwritex(($39 + [432]), $37, $0)
	
.LABEL $label$256
	$30 = ( $15 ? $26 : ((int_32)$15 > (int_32)$26) )
	
.LABEL $label$50
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$24
	if ( ((int_32)$30 <= (int_32)$13) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( $0 ){ goto $label$1 }
	if ( ($32 == 0) ){ goto $label$14 }
	$30 = [1]
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $898(($3 + [16]), $1, $2)
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $898(($3 + [32]), $1, $2)
	$1 = *($4 + [12])
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $898(($3 + [48]), $1, $2)
	$1 = *($4 + [16])
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $898(($3 + [64]), $1, $2)
	$1 = *($4 + [20])
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $898(($3 + [80]), $1, $2)
	$1 = *($4 + [24])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $898(($3 + [96]), $1, $2)
	$1 = *($4 + [28])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $898(($3 + [112]), $1, $2)
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $898(($3 + [128]), $1, $2)
	$1 = *($4 + [36])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $898(($3 + [144]), $1, $2)
	$38 = [1]
	goto $label$1 
	
.LABEL $label$15
	*(CALL __errno_location()) = [75]
	goto $label$2 
	
.LABEL $label$14
	$38 = [0]
	goto $label$1 
	
.LABEL $label$13
	$30 = [2]
	goto $label$4 
	
.LABEL $label$12
	$30 = [3]
	goto $label$4 
	
.LABEL $label$11
	$38 = [0]
	goto $label$1 
	
.LABEL $label$10
	$30 = [4]
	goto $label$4 
	
.LABEL $label$9
	$30 = [5]
	goto $label$4 
	
.LABEL $label$8
	$30 = [6]
	goto $label$4 
	
.LABEL $label$7
	$30 = [7]
	goto $label$4 
	
.LABEL $label$6
	$30 = [8]
	goto $label$4 
	
.LABEL $label$5
	$30 = [9]
	
.LABEL $label$4
	$1 = ($4 + ($30 << [2]))
	
.LOOP $label$312:
	if ( *($1) ){ goto $label$3 }
	$1 = ($1 + [4])
	$38 = [1]
	$30 = ($30 + [1])
	if ( ((uint_32)$30 <= (uint_32)[9]) ){ goto $label$312 }
	goto $label$1 
	
.LABEL $label$3
	*(CALL __errno_location()) = [22]
	
.LABEL $label$2
	$38 = [-1]
	
.LABEL $label$1
	*([0] + [4]) = ($39 + [8128])
	$30
	$30
	return $38
}

int_32 .FUNC $749 (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [592])
	*([0] + [4]) = $9
	*($9 + [72]) = (($9 + [80]) + CALL read_transaction(($9 + [80]), [512]))
	*($9 + [68]) = ($9 + [80])
	*($9 + [64]) = ($9 + [80])
	$6 = CALL current_time()
	*(($9 + [28])) = [0]
	*(($9 + [32])) = [0]
	*($9 + [12]) = [0]
	*($9 + [16]) = [0]
	*($9 + [20]) = [0]
	*($9 + [24]) = [0]
	*($9) = ((CASTING uint_32)(uint_64 ((uint_64)$6 / (uint_64)(int_64)1000000)) + [60])
	*($9 + [36]) = [0]
	*(($9 + [40])) = [0]
	*(($9 + [44])) = [0]
	*($9 + [48]) = [0]
	*(($9 + [52])) = [0]
	*(($9 + [56])) = [0]
	CALL $587(($9 + [64]), $9)
	CALL $589(CALL $588(CALL $588(($9 + [64]), ($9 + [24])), ($9 + [36])), ($9 + [48]))
	$2 = *(*($9 + [36]))
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [6128]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$4 = [1]
	if ( ((int_64)$2 == (int_64)$7) ){ goto $label$5 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [6144]
	$7 = (int_64)0
	
.LOOP $label$6:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$7 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$3 = ($3 + [165])
	goto $label$8 
	
.LABEL $label$9
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$7
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$6 }
	$4 = ((int_64)$2 == (int_64)$7)
	
.LABEL $label$5
	CALL $533($9)
	*([0] + [4]) = ($9 + [592])
	return $4
}

void .FUNC $748 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	*($5 + [72]) = $1
	$3 = [0]
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	$1 = *($0 + [40])
	*($5 + [32]) = $1
	*($5 + [40]) = $1
	$2 = CALL db_find_i64($1, $1, (int_64)-4749717907502530560, (int_64)22)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $348(($5 + [32]), $2)
	CALL eosio_assert(((int_32)*($3 + [12]) == (int_32)($5 + [32])), [32])
	$2 = [1]
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	
.LABEL $label$1
	*($5 + [28]) = $3
	*($5 + [24]) = ($5 + [32])
	CALL eosio_assert($2, [8192])
	$1 = *(($0 + [40]))
	*($5 + [12]) = ($5 + [24])
	*($5 + [8]) = ($5 + [72])
	CALL $760(($5 + [16]), $0, $1, ($5 + [8]))
	CALL $761(*($0 + [52]))
	$2 = *($5 + [56])
	if ( ($2 == 0) ){ goto $label$3 }
	$4 = ($5 + [60])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $867($3)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($5 + [56]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($4) = $2
	CALL $867($0)
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [80])
}

void .FUNC $743 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [10]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [40]) = ($5 + [21])
	*($5 + [36]) = $5
	*($5 + [32]) = $5
	CALL $276(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [28]), $2, $5, [21])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $742 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	*([0] + [4]) = $9
	*($9 + [63]) = $2
	CALL require_auth($1)
	*(($9 + [48])) = [0]
	*($9 + [32]) = (int_64)-1
	*($9 + [40]) = (int_64)0
	$5 = *($0 + [8])
	*($9 + [16]) = $5
	*($9 + [24]) = $5
	$8 = [0]
	$2 = CALL db_find_i64($5, $5, (int_64)-4741615135682985984, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $718(($9 + [16]), $2)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [16])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [7952])
	$4 = *($8 + [8])
	$6 = *(($0 + [40]))
	$7 = *(($0 + [44]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$2 }
	$8 = ($7 + [-24])
	$3 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$2 }
	$7 = $8
	$2 = ($8 + [-24])
	$8 = $2
	if ( ((int_32)($2 + $3) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$8 = ($0 + [16])
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$5 }
	$7 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [20]) == (int_32)$8), [32])
	goto $label$4 
	
.LABEL $label$5
	$7 = [0]
	$2 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $225($8, $2)
	CALL eosio_assert(((int_32)*($7 + [20]) == (int_32)$8), [32])
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [7696])
	$3 = *(($7 + [12]))
	$8 = *($7 + [8])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$6 }
	$2 = [0]
	$6 = ($4 & [255])
	
.LOOP $label$7:
	$7 = ((uint_32)*(($8 + [1])) >= (uint_32)$6)
	$2 = ($2 | $7)
	if ( $7 ){ goto $label$6 }
	$8 = ($8 + [16])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$6
	CALL eosio_assert(($2 & [1]), [7984])
	$4 = *($6 + [24])
	$6 = *($0 + [64])
	$7 = *(($6 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	$8 = ($7 + [-24])
	$3 = ([0] - $4)
	
.LOOP $label$9:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$8 }
	$7 = $8
	$2 = ($8 + [-24])
	$8 = $2
	if ( ((int_32)($2 + $3) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$11 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [32])
	goto $label$10 
	
.LABEL $label$11
	$8 = [0]
	$2 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$10 }
	$8 = CALL $13($6, $2)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [32])
	
.LABEL $label$10
	$1 = *(($0 + [8]))
	*($9 + [8]) = ($9 + [63])
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [352])
	CALL $743($6, $8, $1, ($9 + [8]))
	$7 = *($9 + [40])
	if ( ($7 == 0) ){ goto $label$12 }
	$3 = ($9 + [44])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$14 }
	
.LOOP $label$15:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$16 }
	CALL $867($2)
	
.LABEL $label$16
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$15 }
	$8 = *(($9 + [40]))
	goto $label$13 
	
.LABEL $label$14
	$8 = $7
	
.LABEL $label$13
	*($3) = $7
	CALL $867($8)
	
.LABEL $label$12
	*([0] + [4]) = ($9 + [64])
}

void .FUNC $741 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $740 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [9]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [10]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [11]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [13]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [160])
	CALL memcpy(($1 + [14]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC $747 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $746 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [48])
	$15 = $16
	*([0] + [4]) = $16
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	$6 = ($1 + [8])
	$4 = *($1)
	$14 = $4
	$7 = *($1 + [8])
	$9 = ($1 + [12])
	$13 = *($9)
	if ( ((int_32)$13 == (int_32)$7) ){ goto $label$1 }
	$5 = *($3 + [16])
	$8 = int_32(($13 - $7) >> [4])
	$12 = [0]
	$13 = [14]
	$10 = (*(*($3)) & [255])
	
.LOOP $label$3:
	$11 = ($7 + $13)
	if ( ((int_32)*(($11 + [-14])) == (int_32)$10) ){ goto $label$2 }
	$13 = ($13 + [16])
	$12 = ($12 + [1])
	if ( ($12 <= $8) ){ goto $label$3 }
	$14 = $4
	goto $label$1 
	
.LABEL $label$2
	*(($11 + [-13])) = *(*($3 + [4]))
	if ( ((uint_64)*(*($3 + [4])) <= (uint_64)*(*($3 + [8]))) ){ goto $label$4 }
	*(*($3 + [12])) = [1]
	
.LABEL $label$4
	CALL $609(($15 + [8]), $5, *(*($3 + [20])), *($3 + [24]))
	*((($13 = (*(($1 + [8])) + $13)) + [-6])) = *($15 + [8])
	*(($13 + [-4])) = *($15 + [12])
	*(($13 + [-2])) = *($15 + [16])
	*($13) = *($15 + [20])
	$14 = *($1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)$14), [512])
	$7 = *($6)
	$12 = *($9)
	$10 = ($12 - $7)
	$14 = (CASTING uint_64)(uint_32 int_32($10 >> [4]))
	$13 = [22]
	
.LOOP $label$5:
	$13 = ($13 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$7 == (int_32)$12) ){ goto $label$7 }
	$13 = (((int_32)uint_32(($10 + [-16]) >> [4]) * (int_32)[14]) + $13)
	goto $label$6 
	
.LABEL $label$7
	$13 = ($13 + [-14])
	
.LABEL $label$6
	if ( ($13 <= [513]) ){ goto $label$9 }
	$12 = CALL malloc($13)
	goto $label$8 
	
.LABEL $label$9
	$12 = ($16 - (($13 + [15]) & [-16]))
	*([0] + [4]) = $12
	
.LABEL $label$8
	*($15 + [8]) = $12
	*($15 + [16]) = ($12 + $13)
	CALL eosio_assert(((int_32)$13 > (int_32)[7]), [576])
	CALL memcpy($12, $1, [8])
	*($15 + [12]) = ($12 + [8])
	CALL $446(($15 + [8]), $6)
	CALL db_update_i64(*($1 + [24]), $2, $12, $13)
	if ( ($13 <= [513]) ){ goto $label$10 }
	CALL free($12)
	
.LABEL $label$10
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($15 + [48])
}

int_32 .FUNC $745 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [128])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $866([32]))) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [160])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-4])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [160])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	CALL eosio_assert(((int_32)$4 != (int_32)[12]), [160])
	CALL memcpy(($6 + [12]), ($7 + [12]), [4])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $747(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $744 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [240])
	*([0] + [4]) = $16
	*($16 + [216]) = $1
	*($16 + [215]) = $2
	CALL require_auth($1)
	CALL eosio_assert(((($2 + [-1]) & [255]) <= [3]), [4528])
	$10 = *(($0 + [40]))
	$8 = *(($0 + [44]))
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$1 }
	$15 = ($8 + [-24])
	$4 = ([0] - $10)
	
.LOOP $label$2:
	if ( ((int_64)*(*($15)) == (int_64)$1) ){ goto $label$1 }
	$8 = $15
	$9 = ($15 + [-24])
	$15 = $9
	if ( ((int_32)($9 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [16])
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$4 }
	$10 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [20]) == (int_32)$3), [32])
	goto $label$3 
	
.LABEL $label$4
	$10 = [0]
	$15 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)7687433457688903680, $1)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$3 }
	$10 = CALL $225($3, $15)
	CALL eosio_assert(((int_32)*($10 + [20]) == (int_32)$3), [32])
	
.LABEL $label$3
	$15 = [0]
	$5 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($5, [7696])
	$9 = *($10 + [8])
	$8 = *(($10 + [12]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$6 }
	$8 = int_32(($8 - $9) >> [4])
	
.LOOP $label$7:
	if ( ((int_32)*($9) == (int_32)$2) ){ goto $label$5 }
	$9 = ($9 + [16])
	$15 = ($15 + [1])
	if ( ($15 <= $8) ){ goto $label$7 }
	
.LABEL $label$6
	CALL eosio_assert([0], [6368])
	$9 = *($10 + [8])
	
.LABEL $label$5
	$7 = *($6 + [24])
	$6 = *($0 + [64])
	$2 = *(($6 + [28]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$8 }
	$15 = ($2 + [-24])
	$4 = ([0] - $7)
	
.LOOP $label$9:
	if ( ((int_64)*(*($15)) == (int_64)$1) ){ goto $label$8 }
	$2 = $15
	$8 = ($15 + [-24])
	$15 = $8
	if ( ((int_32)($8 + $4) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$11 }
	$8 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [32])
	goto $label$10 
	
.LABEL $label$11
	$8 = [0]
	$15 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$10 }
	$8 = CALL $13($6, $15)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [32])
	
.LABEL $label$10
	$4 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($4, [192])
	$13 = ((int_64)*($9 + [1]) + (int_64)1)
	*($16 + [200]) = $13
	CALL eosio_assert((uint_64)($13 <= (int_64)19), [8032])
	*(($16 + [192])) = [0]
	*($16 + [176]) = (int_64)-1
	*($16 + [184]) = (int_64)0
	$1 = *($0 + [8])
	*($16 + [160]) = $1
	*($16 + [168]) = $1
	$15 = [0]
	$2 = CALL db_find_i64($1, $1, (int_64)-4947914168624742400, $13)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$12 }
	$15 = CALL $745(($16 + [160]), $2)
	CALL eosio_assert(((int_32)*($15 + [16]) == (int_32)($16 + [160])), [32])
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [8064])
	$2 = *($15 + [12])
	CALL eosio_assert(((uint_32)*($9 + [4]) >= (uint_32)*($15 + [8])), [8096])
	CALL eosio_assert(((uint_32)$2 <= (uint_32)*($8 + [16])), [8128])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$13 }
	$15 = *(($0 + [64]))
	*($16 + [80]) = $2
	CALL eosio_assert(((uint_32)*(($8 + [16])) >= (uint_32)$2), [5040])
	$1 = *($15 + [40])
	*($16 + [40]) = ($16 + [80])
	CALL eosio_assert($4, [352])
	CALL $493($15, $8, $1, ($16 + [40]))
	
.LABEL $label$13
	*($16 + [159]) = [0]
	*($16 + [152]) = CALL $600($0, *($16 + [216]))
	$1 = *(($0 + [8]))
	*($16 + [96]) = $0
	*($16 + [104]) = $9
	*($16 + [84]) = ($16 + [200])
	*($16 + [80]) = ($16 + [215])
	*($16 + [88]) = ($16 + [152])
	*($16 + [92]) = ($16 + [159])
	*($16 + [100]) = ($16 + [216])
	CALL eosio_assert($5, [352])
	CALL $746($3, $10, $1, ($16 + [80]))
	if ( (*($16 + [159]) == 0) ){ goto $label$14 }
	CALL $269(($16 + [144]), *($0 + [76]), *($16 + [216]), [1])
	CALL memcpy(($16 + [80]), *($16 + [148]), [64])
	$8 = *($16 + [136])
	CALL $531(*(($0 + [64])), ($16 + [80]), *($16 + [216]), [1])
	$15 = *($16 + [148])
	$9 = *($0 + [76])
	$1 = *($9)
	$2 = *($16 + [136])
	*($16 + [40]) = ($16 + [80])
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [352])
	CALL $272(($9 + [128]), $15, $1, ($16 + [40]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$14 }
	$14 = *(($0 + [8]))
	$1 = (int_64)0
	$11 = (int_64)59
	$15 = [1152]
	$12 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$20 }
	$9 = *($15)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$9 = ($9 + [165])
	goto $label$18 
	
.LABEL $label$20
	$13 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$16
	$15 = ($15 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$15 }
	*($16 + [32]) = $12
	*($16 + [24]) = $14
	$1 = (int_64)0
	$13 = (int_64)59
	$15 = [5472]
	$12 = (int_64)0
	
.LOOP $label$21:
	$11 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$22 }
	$9 = *($15)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$9 = ($9 + [165])
	goto $label$23 
	
.LABEL $label$24
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$22
	$15 = ($15 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$21 }
	$1 = (int_64)0
	$11 = (int_64)59
	$15 = [5488]
	$14 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$1 > (uint_64)(int_64)8) ){ goto $label$30 }
	$9 = *($15)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$9 = ($9 + [165])
	goto $label$28 
	
.LABEL $label$30
	$13 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$26
	$15 = ($15 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$25 }
	*($16 + [16]) = $8
	*($16 + [18]) = $2
	*($16 + [8]) = *($16 + [216])
	$15 = CALL $532(($16 + [40]), ($16 + [24]), $12, $14, ($16 + [8]))
	CALL $65(($16 + [224]), $15)
	$9 = *($16 + [224])
	CALL send_inline($9, (*($16 + [228]) - $9))
	$9 = *($16 + [224])
	if ( ($9 == 0) ){ goto $label$31 }
	*($16 + [228]) = $9
	CALL $867($9)
	
.LABEL $label$31
	$9 = *($15 + [28])
	if ( ($9 == 0) ){ goto $label$32 }
	*(($15 + [32])) = $9
	CALL $867($9)
	
.LABEL $label$32
	$9 = *($15 + [16])
	if ( ($9 == 0) ){ goto $label$14 }
	*(($15 + [20])) = $9
	CALL $867($9)
	
.LABEL $label$14
	$8 = *($16 + [184])
	if ( ($8 == 0) ){ goto $label$33 }
	$2 = ($16 + [188])
	$15 = *($2)
	if ( ((int_32)$15 == (int_32)$8) ){ goto $label$35 }
	
.LOOP $label$36:
	$15 = ($15 + [-24])
	$9 = *($15)
	*($15) = [0]
	if ( ($9 == 0) ){ goto $label$37 }
	CALL $867($9)
	
.LABEL $label$37
	if ( ((int_32)$8 != (int_32)$15) ){ goto $label$36 }
	$15 = *(($16 + [184]))
	goto $label$34 
	
.LABEL $label$35
	$15 = $8
	
.LABEL $label$34
	*($2) = $8
	CALL $867($15)
	
.LABEL $label$33
	*([0] + [4]) = ($16 + [240])
}

int_32 .FUNC $592 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [592])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $593($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [160])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [160])
	CALL memcpy(($7 + [8]), *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $593 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$6 = *($0)
	$3 = int_32(($7 - $6) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$3 }
	$5 = [268435455]
	$2 = ($2 - $6)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = int_32($2 >> [3])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $866(($5 << [4]))
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$1 
	
.LABEL $label$5
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$7 = ($7 - $6)
	$3 = ($2 + ($3 << [4]))
	$4 = ($3 - $7)
	$1 = ($3 + ($1 << [4]))
	$5 = ($2 + ($5 << [4]))
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($4, $6, $7)
	$6 = *($0)
	
.LABEL $label$7
	*($0) = $4
	*(($0 + [4])) = $1
	*(($0 + [8])) = $5
	if ( ($6 == 0) ){ goto $label$8 }
	CALL $867($6)
	
.LABEL $label$8
	(unreachable)
}

void .FUNC $590 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)int_32(($8 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$4 = int_32(($7 - $5) >> [4])
	$7 = ($4 + $1)
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$8 = ($8 - $5)
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($8 >> [3])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$8 = CALL $866(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $7
	$8 = $1
	
.LOOP $label$7:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$7 }
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$2 = ($8 + ($6 << [4]))
	$8 = ($8 + ($4 << [4]))
	$6 = $8
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$3 = ($8 + ($1 << [4]))
	$6 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$10 }
	$4 = ([0] - $6)
	$6 = ($7 + [-16])
	
.LOOP $label$11:
	*(($8 + [-16])) = *($6)
	*(($7 = ($8 + [-12]))) = (int_64)0
	*(($1 = ($8 + [-4]))) = [0]
	$5 = ($6 + [4])
	*($7) = *($5)
	*(($8 + [-8])) = *(($6 + [8]))
	$7 = ($6 + [12])
	*($1) = *($7)
	*($7) = [0]
	*($5) = (int_64)0
	$8 = ($8 + [-16])
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $4) != (int_32)[-16]) ){ goto $label$11 }
	$6 = *(($0 + [4]))
	$1 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$1 = $6
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$12 }
	$7 = ([0] - $1)
	$6 = ($6 + [-12])
	
.LOOP $label$13:
	$8 = *($6)
	if ( ($8 == 0) ){ goto $label$14 }
	*(($6 + [4])) = $8
	CALL $867($8)
	
.LABEL $label$14
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $7) != (int_32)[-12]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $867($1)
	
.LABEL $label$15
	(unreachable)
}

void .FUNC $591 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)((int_32)($8 - $7) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($7 - $4) / (int_32)[40])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$3 }
	$7 = [107374182]
	$8 = ((int_32)($8 - $4) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$6 }
	$7 = ($8 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$8 = CALL $866(((int_32)$7 * (int_32)[40]))
	goto $label$2 
	
.LABEL $label$5
	$8 = ($0 + [4])
	
.LOOP $label$7:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = (*($8) + [40])
	*($8) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $882($0)
	
.LABEL $label$2
	$2 = ($8 + ((int_32)$7 * (int_32)[40]))
	$8 = ($8 + ((int_32)$5 * (int_32)[40]))
	$7 = $8
	
.LOOP $label$8:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = ($7 + [40])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$10 }
	$3 = ([0] - $4)
	$1 = ($1 + [-20])
	
.LOOP $label$11:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($4 = ($8 + [-24]))) = (int_64)0
	*(($5 = ($8 + [-16]))) = [0]
	$6 = ($1 + [-4])
	*($4) = *($6)
	*(($8 + [-20])) = *($1)
	$4 = ($1 + [4])
	*($5) = *($4)
	*($4) = [0]
	*(($4 = ($8 + [-12]))) = (int_64)0
	*($6) = (int_64)0
	*(($5 = ($8 + [-4]))) = [0]
	$6 = ($1 + [8])
	*($4) = *($6)
	*(($8 + [-8])) = *(($1 + [12]))
	$4 = ($1 + [16])
	*($5) = *($4)
	*($4) = [0]
	*($6) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$11 }
	$4 = *(($0 + [4]))
	$5 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$5 = $4
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $7
	*(($0 + [8])) = $2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$12 }
	$1 = ([0] - $5)
	$7 = ($4 + [-24])
	
.LOOP $label$13:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$14 }
	*(($7 + [16])) = $8
	CALL $867($8)
	
.LABEL $label$14
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$15 }
	*(($7 + [4])) = $8
	CALL $867($8)
	
.LABEL $label$15
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $1) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$1 }
	CALL $867($5)
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $596 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	$0 = CALL $209(CALL $209($0, ($1 + [20])), ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[31]), [160])
	CALL memcpy(($1 + [48]), *($0 + [4]), [32])
	$2 = (*($0 + [4]) + [32])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [80]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [84]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [86]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [88]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [92]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [96]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [100]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $597 (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$25 = (*([0] + [4]) - [64])
	*([0] + [4]) = $25
	$20 = *($0 + [24])
	$22 = *(($0 + [28]))
	if ( ((int_32)$22 == (int_32)$20) ){ goto $label$1 }
	$24 = ($22 + [-24])
	$15 = ([0] - $20)
	
.LOOP $label$2:
	if ( ((int_64)*(*($24)) == (int_64)$2) ){ goto $label$1 }
	$22 = $24
	$23 = ($24 + [-24])
	$24 = $23
	if ( ((int_32)($23 + $15) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$22 == (int_32)$20) ){ goto $label$4 }
	$24 = *(($22 + [-24]))
	CALL eosio_assert(((int_32)*($24 + [24]) == (int_32)$0), [32])
	goto $label$3 
	
.LABEL $label$4
	$24 = [0]
	$23 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6030912142679474176, $2)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$3 }
	$24 = CALL $13($0, $23)
	CALL eosio_assert(((int_32)*($24 + [24]) == (int_32)$0), [32])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$24 != (int_32)[0]), [192])
	$23 = *($24 + [16])
	$22 = *($24 + [12])
	$2 = *($24)
	CALL _ZNSt3__19to_stringEy(($25 + [48]), $2)
	*(($25 + [40])) = [0]
	*($25 + [32]) = (int_64)0
	$24 = CALL strlen([1408])
	if ( ((uint_32)$24 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$24 >= (uint_32)[11]) ){ goto $label$9 }
	*($25 + [32]) = ($24 << [1])
	$15 = (($25 + [32]) | [1])
	if ( $24 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$0 = (($24 + [16]) & [-16])
	$15 = CALL $866($0)
	*($25 + [32]) = ($0 | [1])
	*($25 + [40]) = $15
	*($25 + [36]) = $24
	
.LABEL $label$8
	CALL memcpy($15, [1408], $24)
	
.LABEL $label$7
	*(($15 + $24)) = [0]
	*(($25 + [24])) = [0]
	*($25 + [16]) = (int_64)0
	$24 = CALL strlen([1408])
	if ( ((uint_32)$24 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$24 >= (uint_32)[11]) ){ goto $label$12 }
	*($25 + [16]) = ($24 << [1])
	$15 = (($25 + [16]) | [1])
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$0 = (($24 + [16]) & [-16])
	$15 = CALL $866($0)
	*($25 + [16]) = ($0 | [1])
	*($25 + [24]) = $15
	*($25 + [20]) = $24
	
.LABEL $label$11
	CALL memcpy($15, [1408], $24)
	
.LABEL $label$10
	*(($15 + $24)) = [0]
	$3 = ((int_64)$2 * (int_64)(CASTING uint_64)(uint_32 $1))
	$16 = ((int_64)(CASTING uint_64)(uint_32 ((int_32)$23 * (int_32)$22)) + (int_64)$3)
	$24 = (int_64)($16 == 0)
	if ( ((uint_32)$22 > (uint_32)[1]) ){ goto $label$18 }
	CALL _ZNSt3__19to_stringEy($25, (uint_64)$3 >> (uint_64)(int_64)32))
	if ( (*($25 + [32]) & [1]) ){ goto $label$17 }
	*($25 + [32]) = [0]
	goto $label$16 
	
.LABEL $label$18
	CALL _ZNSt3__19to_stringEm($25, $22)
	if ( (*($25 + [32]) & [1]) ){ goto $label$15 }
	*($25 + [32]) = [0]
	goto $label$14 
	
.LABEL $label$17
	*(*($25 + [40])) = [0]
	*($25 + [36]) = [0]
	
.LABEL $label$16
	CALL $871(($25 + [32]), [0])
	*((($25 + [32]) + [8])) = *(($25 + [8]))
	*($25 + [32]) = *($25)
	goto $label$13 
	
.LABEL $label$15
	*(*($25 + [40])) = [0]
	*($25 + [36]) = [0]
	
.LABEL $label$14
	CALL $871(($25 + [32]), [0])
	*((($25 + [32]) + [8])) = *(($25 + [8]))
	*($25 + [32]) = *($25)
	
.LABEL $label$13
	$2 = ( $2 ? $16 : $24 )
	if ( ((uint_32)$23 > (uint_32)[1]) ){ goto $label$24 }
	CALL _ZNSt3__19to_stringEy($25, ((int_64)$3 & (int_64)4294967295))
	if ( (*($25 + [16]) & [1]) ){ goto $label$23 }
	*($25 + [16]) = [0]
	goto $label$22 
	
.LABEL $label$24
	CALL _ZNSt3__19to_stringEm($25, $23)
	if ( (*($25 + [16]) & [1]) ){ goto $label$21 }
	*($25 + [16]) = [0]
	goto $label$20 
	
.LABEL $label$23
	*(*($25 + [24])) = [0]
	*($25 + [20]) = [0]
	
.LABEL $label$22
	CALL $871(($25 + [16]), [0])
	*((($25 + [16]) + [8])) = *(($25 + [8]))
	*($25 + [16]) = *($25)
	goto $label$19 
	
.LABEL $label$21
	*(*($25 + [24])) = [0]
	*($25 + [20]) = [0]
	
.LABEL $label$20
	CALL $871(($25 + [16]), [0])
	*((($25 + [16]) + [8])) = *(($25 + [8]))
	*($25 + [16]) = *($25)
	
.LABEL $label$19
	$19 = *($25 + [32])
	$15 = ($19 & [1])
	$4 = ( *($25 + [40]) ? (($25 + [32]) | [1]) : $15 )
	$20 = *($4)
	$24 = *($25 + [16])
	$5 = ($24 & [1])
	$6 = *($25 + [24])
	$7 = ( $6 ? (($25 + [16]) | [1]) : $5 )
	$0 = *($7)
	$21 = (((int_32)$0 * (int_32)$20) + $1)
	$15 = (CASTING uint_32)(uint_64 ((int_64)((uint_64)$2 % (uint_64)(int_64)5) + (int_64)4))
	$15 = ( *($25 + [36]) ? uint_32($19 >> [1]) : $15 )
	$24 = ( *($25 + [20]) ? uint_32($24 >> [1]) : $5 )
	$24 = ( $24 ? $15 : ($24 <= $15) )
	$1 = ( $24 ? $15 : ((int_32)$24 < (int_32)$15) )
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$25 }
	$24 = ($24 & [1])
	$24 = *($25 + [48])
	$11 = (( *($25 + [52]) ? uint_32($24 >> [1]) : $24 ) + [-1])
	$8 = ( *($25 + [56]) ? (($25 + [48]) | [1]) : $24 )
	$10 = ($22 + [255])
	$9 = ($23 + [3855])
	
.LOOP $label$26:
	$24 = ((int_32)$20 ^ (int_32)$0)
	$17 = ( $24 ? ((int_32)$20 * (int_32)$0) : $24 )
	$18 = *(($8 + ( $11 ? [0] : $24 )))
	$12 = ($1 + [-1])
	$13 = *(($7 + $12))
	$14 = ((int_32)$13 % (int_32)[3])
	$24 = [1]
	$23 = [1]
	$15 = *(($4 + $12))
	$22 = ((int_32)$15 % (int_32)[3])
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$27 }
	$23 = [1]
	$22 = ($22 + [1])
	$15 = (CASTING uint_32)(uint_64 ((int_64)(CASTING uint_64)(uint_32 ($10 + $15)) & (int_64)$2))
	
.LOOP $label$28:
	$23 = ((int_32)$15 * (int_32)$23)
	$22 = ($22 + [-1])
	if ( $22 ){ goto $label$28 }
	
.LABEL $label$27
	$17 = ($18 + $17)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$29 }
	$24 = [1]
	$22 = ($14 + [1])
	$15 = (CASTING uint_32)(uint_64 ((int_64)(CASTING uint_64)(uint_32 ($9 + $13)) & (int_64)$2))
	
.LOOP $label$30:
	$24 = ((int_32)$15 * (int_32)$24)
	$22 = ($22 + [-1])
	if ( $22 ){ goto $label$30 }
	
.LABEL $label$29
	$21 = ((int_32)$17 * (int_32)$21)
	$20 = ($23 + $20)
	$0 = ($24 + $0)
	$24 = ((int_32)$1 > (int_32)[1])
	$1 = $12
	if ( $24 ){ goto $label$26 }
	
.LABEL $label$25
	if ( ($5 == 0) ){ goto $label$31 }
	CALL $867($6)
	$19 = *($25 + [32])
	
.LABEL $label$31
	if ( (($19 & [1]) == 0) ){ goto $label$32 }
	CALL $867(*(($25 + [40])))
	
.LABEL $label$32
	if ( ((*($25 + [48]) & [1]) == 0) ){ goto $label$33 }
	CALL $867(*($25 + [56]))
	
.LABEL $label$33
	*([0] + [4]) = ($25 + [64])
	return $21
	
.LABEL $label$6
	CALL $868(($25 + [32]))
	
.LABEL $label$5
	CALL $868(($25 + [16]))
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $594 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $866([128])) + [8]) = (int_64)0
	*($6 + [20 align=4]) = (int_64)0
	*($6 + [28 align=4]) = (int_64)0
	*($6 + [36 align=4]) = (int_64)0
	*($6 + [80]) = [0]
	*($6 + [104]) = $0
	CALL $596(($8 + [32]), $6)
	*($6 + [108]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [108])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $94(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $867(*(($4 + [40])))
	
.LABEL $label$10
	if ( ((*($4 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL $867(*(($4 + [28])))
	
.LABEL $label$11
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $595 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [52]) = [0]
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [72]) = ($5 + [54])
	*($5 + [68]) = $5
	*($5 + [64]) = $5
	CALL $98(($5 + [64]), $1)
	CALL db_update_i64(*($1 + [68]), $2, $5, [54])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
}

void .FUNC $36 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [3])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [3])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $867($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$5 = [536870911]
	if ( ((uint_32)int_32($8 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [2])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [3])
	$5 = CALL $866($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [3])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [3])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $882($0)
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [576])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[1]), [576])
	CALL memcpy(*($2 + [4]), $3, [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), $2, [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $598 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	*([0] + [4]) = $10
	*($10 + [12]) = $2
	$5 = *(($0 + [152]))
	$9 = *(($0 + [156]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$1 }
	$2 = ($9 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$2:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$1 }
	$9 = $2
	$7 = ($2 + [-24])
	$2 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [128])
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [64]) == (int_32)$4), [32])
	if ( $2 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-6030912128150405120, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$2 = CALL $96($4, $2)
	CALL eosio_assert(((int_32)*($2 + [64]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$4
	*($10 + [56]) = $1
	*($10 + [48]) = (int_64)0
	*($10 + [47]) = [0]
	*($10 + [44]) = [0]
	$8 = *($0)
	*($10 + [28]) = ($10 + [47])
	*($10 + [24]) = ($10 + [56])
	*($10 + [32]) = ($10 + [44])
	*($10 + [36]) = ($10 + [48])
	CALL $277(($10 + [16]), $4, $8, ($10 + [24]))
	$5 = *(($0 + [152]))
	$9 = *(($0 + [156]))
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$6 }
	$2 = ($9 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$7:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$6 }
	$9 = $2
	$7 = ($2 + [-24])
	$2 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$8 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [64]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$8
	$2 = [0]
	$7 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)-6030912128150405120, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $96($4, $7)
	CALL eosio_assert(((int_32)*($2 + [64]) == (int_32)$4), [32])
	
.LABEL $label$3
	$1 = *($0)
	*($10 + [24]) = ($10 + [12])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [352])
	CALL $599($4, $2, $1, ($10 + [24]))
	*($0 + [168]) = $3
	*([0] + [4]) = ($10 + [64])
}

void .FUNC $599 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [400])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$16()), [448])
	*($1 + [40]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [512])
	*($5 + [72]) = ($5 + [54])
	*($5 + [68]) = $5
	*($5 + [64]) = $5
	CALL $98(($5 + [64]), $1)
	CALL db_update_i64(*($1 + [68]), $2, $5, [54])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [128])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $866([40]))) = (int_64)0
	*($6 + [12 align=4]) = (int_64)0
	*($6 + [20]) = [0]
	*($6 + [24]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [160])
	CALL memcpy($6, $4, [8])
	$3 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $3) > (uint_32)[3]), [160])
	CALL memcpy(($6 + [8]), $3, [4])
	*($8 + [36]) = ($4 + [12])
	CALL $38(($8 + [32]), ($6 + [12]))
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $34(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [12])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [16])) = $7
	CALL $867($7)
	
.LABEL $label$10
	CALL $867($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = (*([0] + [4]) - [48])
	$10 = $4
	*([0] + [4]) = $4
	$5 = *($0 + [4])
	$9 = *(*($5))
	*($1 + [8]) = [1]
	$2 = *($0)
	*($1) = $9
	$6 = [12]
	$5 = *($5 + [4])
	$8 = ($1 + [12])
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$1 }
	CALL $36($8, *($5), *($5 + [4]))
	
.LABEL $label$1
	$5 = ($1 + [8])
	$8 = *($8)
	$3 = *(($1 + [16]))
	$7 = ($3 - $8)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$3 }
	$6 = (($7 & [-8]) + $6)
	
.LABEL $label$3
	if ( ($6 <= [513]) ){ goto $label$5 }
	$7 = CALL malloc($6)
	goto $label$4 
	
.LABEL $label$5
	$7 = ($4 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$4
	*($10 + [8]) = $7
	$3 = ($7 + $6)
	*($10 + [16]) = $3
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [576])
	CALL memcpy($7, $1, [8])
	$8 = ($7 + [8])
	CALL eosio_assert(((int_32)($3 - $8) > (int_32)[3]), [576])
	CALL memcpy($8, $5, [4])
	$8 = ($7 + [12])
	*($10 + [12]) = $8
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [16])) - *(($1 + [12]))) >> [3]))
	
.LOOP $label$6:
	$4 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$5 = ((int_64)$9) != (int_64)0
	*($10 + [32]) = (($5) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)($3 - $8) > (int_32)[0]), [576])
	CALL memcpy($8, ($10 + [32]), [1])
	$8 = ($8 + [1])
	*($10 + [12]) = $8
	if ( $5 ){ goto $label$6 }
	$4 = *(($1 + [16]))
	$8 = *(($1 + [12]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$7 }
	$5 = (($10 + [32]) + [12])
	
.LOOP $label$8:
	*($10 + [24]) = ($10 + [8])
	*($10 + [32]) = $8
	*((($10 + [32]) + [8])) = ($8 + [2])
	*($5) = ($8 + [4])
	*($10 + [36]) = ($8 + [1])
	CALL $37(($10 + [32]), ($10 + [24]))
	$8 = ($8 + [8])
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$9 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)4851938822258688000, *(*($0 + [8])), $9, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$9 }
	CALL free($7)
	
.LABEL $label$9
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$10 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $30 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($1 + [24])
	$7 = *(($1 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [20]) == (int_32)$1), [32])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-5075105024296615936, $2)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$4 }
	$6 = CALL $12($1, $6)
	CALL eosio_assert(((int_32)*($6 + [20]) == (int_32)$1), [32])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC _ZN16activity_control13add_chestdropEN5eosio4nameERKNSt3__16vectorI12chestdroprowNS2_9allocatorIS4_EEEE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	*($8 + [16]) = $1
	$3 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$6), [32])
	$1 = *($0)
	if ( $5 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4851938822258688000, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $32($6, $5)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$6), [32])
	$1 = *($0)
	
.LABEL $label$6
	*($8 + [36]) = $2
	*($8 + [32]) = ($8 + [16])
	CALL eosio_assert([1], [352])
	CALL $35($6, $5, $1, ($8 + [32]))
	goto $label$3 
	
.LABEL $label$5
	$1 = *($0)
	
.LABEL $label$4
	*($8 + [12]) = $2
	*($8 + [8]) = ($8 + [16])
	*($8 + [56]) = $1
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$16()), [288])
	*($8 + [32]) = $6
	*($8 + [36]) = ($8 + [8])
	*($8 + [40]) = ($8 + [56])
	*(($5 = CALL $866([40]))) = (int_64)0
	*($5 + [12 align=4]) = (int_64)0
	*($5 + [20]) = [0]
	*($5 + [24]) = $6
	CALL $33(($8 + [32]), $5)
	*($8 + [48]) = $5
	$1 = *($5)
	*($8 + [32]) = $1
	$7 = *($5 + [28])
	*($8 + [28]) = $7
	$4 = ($0 + [76])
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [80]))) ){ goto $label$9 }
	*($6 + [8]) = $1
	*($6 + [16]) = $7
	*($8 + [48]) = [0]
	*($6) = $5
	*($4) = ($6 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $34(($0 + [72]), ($8 + [48]), ($8 + [32]), ($8 + [28]))
	
.LABEL $label$8
	$6 = *($8 + [48])
	*($8 + [48]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	$5 = *($6 + [12])
	if ( ($5 == 0) ){ goto $label$10 }
	*(($6 + [16])) = $5
	CALL $867($5)
	
.LABEL $label$10
	CALL $867($6)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
}

void .FUNC $281 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $8) / (int_32)[24])
	$5 = ($7 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$6 = [178956970]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[24])
	if ( ((uint_32)$8 > (uint_32)[89478484]) ){ goto $label$4 }
	$6 = ($8 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $866(((int_32)$6 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($8 + ((int_32)$7 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($8 + ((int_32)$6 * (int_32)[24]))
	$4 = ($1 + [24])
	$8 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$7 }
	$8 = *(($0 + [4]))
	$7 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$7 = $8
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $4
	*(($0 + [8])) = $5
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	$3 = *($2 + [52])
	if ( ($3 == 0) ){ goto $label$11 }
	$1 = $3
	$0 = ($2 + [56])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$12 }
	$6 = ([0] - $3)
	$1 = ($5 + [-12])
	
.LOOP $label$13:
	if ( ((*($1) & [1]) == 0) ){ goto $label$14 }
	CALL $867(*(($1 + [8])))
	
.LABEL $label$14
	$1 = ($1 + [-20])
	if ( ((int_32)($1 + $6) != (int_32)[-12]) ){ goto $label$13 }
	$1 = *(($2 + [52]))
	
.LABEL $label$12
	*($0) = $3
	CALL $867($1)
	
.LABEL $label$11
	CALL $867($2)
	
.LABEL $label$10
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($7 == 0) ){ goto $label$15 }
	CALL $867($7)
	
.LABEL $label$15
	(unreachable)
}

int_32 .FUNC $538 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [160])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [8]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [160])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [160])
	CALL memcpy(($1 + [20]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC $539 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $866(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $882($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $867($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $867($6)
	
.LABEL $label$11
	(unreachable)
}