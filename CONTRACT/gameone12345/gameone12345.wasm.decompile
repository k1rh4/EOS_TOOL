(data (i32.const 4) "\e0l\00\00")
(data (i32.const 16) "invalid supply\00")
(data (i32.const 32) "max-supply must be positive\00")
(data (i32.const 64) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 128) "token with symbol already exists\00")
(data (i32.const 176) "cannot create objects in table of another contract\00")
(data (i32.const 240) "issue token to contract\00")
(data (i32.const 272) "token market already created\00")
(data (i32.const 304) "invalid symbol name\00")
(data (i32.const 336) ",\00")
(data (i32.const 352) "write\00")
(data (i32.const 368) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 432) "error reading iterator\00")
(data (i32.const 464) "read\00")
(data (i32.const 480) "memo has more than 256 bytes\00")
(data (i32.const 512) "token with symbol does not exist, create token before issue\00")
(data (i32.const 576) "invalid quantity\00")
(data (i32.const 608) "must issue positive quantity\00")
(data (i32.const 640) "symbol precision mismatch\00")
(data (i32.const 672) "quantity exceeds available supply\00")
(data (i32.const 720) "object passed to modify is not in multi_index\00")
(data (i32.const 768) "cannot modify objects in table of another contract\00")
(data (i32.const 832) "attempt to add asset with different symbol\00")
(data (i32.const 880) "addition underflow\00")
(data (i32.const 912) "addition overflow\00")
(data (i32.const 944) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1008) "cannot transfer to self\00")
(data (i32.const 1040) "to account does not exist\00")
(data (i32.const 1072) "unable to find key\00")
(data (i32.const 1104) "must transfer positive quantity\00")
(data (i32.const 1136) "no balance object found\00")
(data (i32.const 1168) "overdrawn balance\00")
(data (i32.const 1200) "attempt to subtract asset with different symbol\00")
(data (i32.const 1248) "subtraction underflow\00")
(data (i32.const 1280) "subtraction overflow\00")
(data (i32.const 1312) "object passed to erase is not in multi_index\00")
(data (i32.const 1360) "cannot erase objects in table of another contract\00")
(data (i32.const 1424) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1488) "cannot pass end iterator to modify\00")
(data (i32.const 1536) "amount must >= 1.0000 EOS\00")
(data (i32.const 1568) "gameone54321\00")
(data (i32.const 1584) "multiplication overflow\00")
(data (i32.const 1616) "multiplication underflow\00")
(data (i32.const 1648) "divide by zero\00")
(data (i32.const 1664) "signed division overflow\00")
(data (i32.const 1696) "token market has not created\00")
(data (i32.const 1728) "must reserve a positive amount\00")
(data (i32.const 1760) "send token to referrer\00")
(data (i32.const 1792) "send token to account\00")
(data (i32.const 1824) "active\00")
(data (i32.const 1840) "eosio.token\00")
(data (i32.const 1856) "transfer\00")
(data (i32.const 1872) "send token to platform account\00")
(data (i32.const 1904) "symbol must be EOS\00")
(data (i32.const 1936) "amount must be a positive amount\00")
(data (i32.const 1984) "send YZB to contract\00")
(data (i32.const 2016) "send EOS to account\00")
(data (i32.const 2048) "send EOS fee to platform account\00")
(data (i32.const 2096) "cannot pass end iterator to erase\00")
(data (i32.const 2144) "cannot increment end iterator\00")
(data (i32.const 2176) "symbol must be YZB\00")
(data (i32.const 2208) ".\00")
(data (i32.const 2224) " \00")
(data (i32.const 2240) "price must be a positive amount\00")
(data (i32.const 2272) "please end last game\00")
(data (i32.const 2304) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 2368) "cannot decrement iterator at beginning of table\00")
(data (i32.const 2416) "get\00")
(data (i32.const 2432) "join to contrace\00")
(data (i32.const 2464) "game not starts\00")
(data (i32.const 2480) "game is ended\00")
(data (i32.const 2496) "game over\00")
(data (i32.const 2512) "flag errors\00")
(data (i32.const 2528) "game should be ended 5 minutes after the begin_time\00")
(data (i32.const 2608) "\nguessapply,\00")
(data (i32.const 2624) "\n\00")
(data (i32.const 2640) "eosio.stake\00")
(data (i32.const 2656) "Function name and other command must be separated with space or colon\00")
(data (i32.const 2736) "buy\00")
(data (i32.const 2752) "onerror\00")
(data (i32.const 2768) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 2832) "invalid symbol name\00")
(data (i32.const 2864) "invalid sell\00")
(data (i32.const 2880) "invalid conversion\00")
(data (i32.const 2912) "unexpected asset symbol input\00")
(data (i32.const 11344) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 11440) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 11456) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 11472) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(import "env" "__multi3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "abort" (func $fimport$1))
(import "env" "action_data_size" (func $fimport$2 (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "current_time" (func $fimport$4 (result i64)))
(import "env" "db_end_i64" (func $fimport$5 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$8 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$9 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$10 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$11 (param i32)))
(import "env" "db_store_i64" (func $fimport$12 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$13 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$14 (param i32 i32)))
(import "env" "is_account" (func $fimport$15 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$16 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$17 (param i32 i32 i32) (result i32)))
(import "env" "printi" (func $fimport$18 (param i64)))
(import "env" "printn" (func $fimport$19 (param i64)))
(import "env" "prints" (func $fimport$20 (param i32)))
(import "env" "prints_l" (func $fimport$21 (param i32 i32)))
(import "env" "printui" (func $fimport$22 (param i64)))
(import "env" "read_action_data" (func $fimport$23 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$24 (param i64)))
(import "env" "require_auth2" (func $fimport$25 (param i64 i64)))
(import "env" "send_inline" (func $fimport$26 (param i32 i32)))
(export "memory" (memory $0))
(export "now" (func $0))
(export "_ZeqRK11checksum256S1_" (func $1))
(export "_ZeqRK11checksum160S1_" (func $2))
(export "_ZneRK11checksum160S1_" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN8eosguess5guess6createEN5eosio5assetE" (func $5))
(export "_ZN8eosguess5guess5issueEyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $10))
(export "_ZN8eosguess5guess11add_balanceEyN5eosio5assetEy" (func $17))
(export "_ZN8eosguess5guess8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $18))
(export "_ZN8eosguess5guess11sub_balanceEyN5eosio5assetE" (func $20))
(export "_ZN8eosguess5guess3buyEyN5eosio5assetEy" (func $27))
(export "_ZN8eosguess5guess4sellEyN5eosio5assetE" (func $37))
(export "_ZN8eosguess5guess5startEx" (func $40))
(export "_ZN8eosguess5guess4joinEyN5eosio5assetEc" (func $52))
(export "_ZN8eosguess5guess3endEx" (func $56))
(export "_ZN8eosguess5guess8snapshotEv" (func $59))
(export "apply" (func $63))
(export "_ZN8eosguess14exchange_state7convertEN5eosio5assetENS1_11symbol_typeE" (func $75))
(export "_ZN8eosguess14exchange_state21convert_from_exchangeERNS0_9connectorEN5eosio5assetE" (func $76))
(export "malloc" (func $77))
(export "free" (func $80))
(export "isspace" (func $91))
(export "pow" (func $92))
(export "sqrt" (func $93))
(export "fabs" (func $94))
(export "scalbn" (func $95))
(export "memcmp" (func $96))
(export "memchr" (func $97))
(export "strlen" (func $98))
(table $0 6 6 anyfunc)
(elem (i32.const 0) $99 $5 $40 $52 $56 $37)



int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $99 ()
{
	(unreachable)
}

int_64 .FUNC fabs (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_64 .FUNC scalbn (float_64 $0, int_32 $1)
{
	int_32 $2
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	$2 = ($1 + [-1023])
	if ( ((int_32)$2 < (int_32)[1024]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	$2 = ($1 + [969])
	if ( ((int_32)$2 > (int_32)[-1023]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = $2
	goto $label$1 
	
.LABEL $label$2
	$1 = $2
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC $90 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $81($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC isspace (int_32 $0)
{
	return (((int_32)$0 == (int_32)[32]) | (($0 + [-9]) <= [5]))
}

int_64 .FUNC pow (float_64 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_64 $11
	float_64 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	int_32 $19
	float_64 $20
	float_64 $21
	$21 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $4)
	$4 = (CASTING int_64)(float_64 $1)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$8 = ($5) & [2147483647]
	if ( (($8) | $6) == 0) ){ goto $label$1 }
	$11 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)32))
	$3 = (CASTING uint_32)(uint_64 $11)
	if ( $3 ){ goto $label$2 }
	if ( ((int_32)$2 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 & [2147483647])
	if ( ((uint_32)$7 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$3 != (int_32)[0]) & ((int_32)$7 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$8 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$19 = [0]
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$19 = [2]
	if ( ((uint_32)$8 > (uint_32)[1128267775]) ){ goto $label$8 }
	$19 = [0]
	if ( ($8 <= [1072693248]) ){ goto $label$8 }
	$9 = uint_32($8 >> [20])
	if ( ((int_32)($9 + [-1023]) < (int_32)[21]) ){ goto $label$7 }
	$19 = ([1075] - $9)
	$9 = uint_32($6 >> $19)
	$19 = ( ([2] - ($9 & [1])) ? [0] : ((int_32)($9 << $19) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$19 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $9)
	$19 = uint_32($8 >> $6)
	$19 = ( ([2] - ($19 & [1])) ? [0] : ((int_32)($19 << $6) == (int_32)$8) )
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($7 + [-1072693248]) | $3) == 0) ){ goto $label$1 }
	if ( ($7 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL sqrt($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$21 = CALL fabs($0)
	if ( $3 ){ goto $label$18 }
	if ( ($7 == 0) ){ goto $label$17 }
	if ( ((int_32)($7 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$17 }
	
.LABEL $label$18
	$10 = (float_64)1
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$19 == (int_32)[1]) ){ goto $label$16 }
	if ( $19 ){ goto $label$14 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$17
	$21 = ( ((float_64)(float_64)1 / (float_64)$21) ? $21 : ((int_32)$5 < (int_32)[0]) )
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($19 | ($7 + [-1072693248])) == 0) ){ goto $label$15 }
	return ( !(float_64)$21 ? $21 : ((int_32)$19 == (int_32)[1]) )
	
.LABEL $label$16
	$10 = (float_64)-1
	goto $label$14 
	
.LABEL $label$15
	$1 = (float_64)
	return ((float_64)$1($21 - $21)) / (float_64)$1)
	
.LABEL $label$14
	if ( ($8 <= [1105199105]) ){ goto $label$28 }
	if ( ($8 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$7 > (uint_32)[1072693247]) ){ goto $label$24 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 < (int_32)[0]) )
	
.LABEL $label$28
	$8 = [0]
	if ( ((uint_32)$7 > (uint_32)[1048575]) ){ goto $label$26 }
	$21 = ((float_64)$21 * (float_64)(float_64)9007199254740992)
	$7 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $21) >> (uint_64)(int_64)32))
	$5 = [-53]
	goto $label$25 
	
.LABEL $label$27
	if ( ((uint_32)$7 > (uint_32)[1072693246]) ){ goto $label$23 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 < (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$26
	$5 = [0]
	
.LABEL $label$25
	$6 = ($7 & [1048575])
	$2 = ($6 | [1072693248])
	$5 = ((int_32($7 >> [20]) + $5) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$21 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$22 }
	$8 = [1]
	goto $label$21 
	
.LABEL $label$24
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 > (int_32)[0]) )
	
.LABEL $label$23
	if ( ($7 <= [1072693249]) ){ goto $label$20 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 > (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$22
	$2 = ($2 + [-1048576])
	$5 = ($5 + [1])
	
.LABEL $label$21
	$13 = ((float_64)*(($6 + [11456])) + (float_64)((float_64)((float_64)(float_64))($21 - (float_64))($0 - $14)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$21 = ((float_64)((float_64)$12 * (float_64)$0) + (float_64)((float_64)$21 * (float_64)(float_64))($13 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $17))
	$0 = ((float_64)$21 * (float_64)$21)
	$16 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($2 >> [1]) | [536870912]) + ($8 << [18])) + [524288])) << (int_64)32))
	$12 = ((float_64)$15 * (float_64)(float_64))((float_64))($14 - ((float_64)$0 * (float_64)$16)) - ((float_64)$0 * (float_64)(float_64))($12 - (float_64))($16 - $13)
	$13 = ((float_64)((float_64)((float_64)$21 + (float_64)$0) * (float_64)$12))
	$17 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$17 + (float_64)(float_64)3) + (float_64)$13)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$15 = ((float_64)(float_64)1 / (float_64)((float_64)$13 + (float_64)$12))
	$13 = *(($6 + [11440]))
	$12 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $21) & (int_64)4294967295)))
	$14 = (float_64)
	$21 = ((float_64)$14($12 - $13)) * (float_64)$15
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $21)) & (int_64)-4294967296)
	$14 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$14 & (int_64)-4294967296))))
	$12 = ((float_64)$0 + (float_64)$21)
	$6 = ($8 << [3])
	$18 = *(($6 + [11472]))
	$20 = (CASTING float_64)(int_32 $5)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$20 + (float_64)((float_64)$18 + (float_64)((float_64)$12)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$20 = (float_64))((float_64))((float_64))($0 + (float_64)$13)))))) & (int_64)-4294967296))) - $20) - $18) - $12)
	goto $label$19 
	
.LABEL $label$20
	$13 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$21 + (float_64)(float_64)-1)
	$21 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$21 + (float_64)$13))) & (int_64)-4294967296)
	$20 = (float_64))($0) - $21)
	
.LABEL $label$19
	$1 = ((float_64)((float_64)(float_64))($1 - $12) * (float_64)$0) + (float_64)((float_64)(float_64))($13 - $20) * (float_64)$1
	$12 = (CASTING float_64)(int_64 ((int_64)$4 & (int_64)-4294967296))
	$21 = ((float_64)$12 * (float_64)$0)
	$0 = ((float_64)$21 + (float_64)$1)
	$4 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 $4)))
	$2 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ((int_32)$2) < (int_32)[1083179008]) ){ goto $label$33 }
	if ( ((($2 + [-1083179008]) | $8) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$33
	if ( (($2 & [2147482624]) <= [1083231232]) ){ goto $label$30 }
	if ( ((($2 + [1064252416]) | $8) == 0) ){ goto $label$31 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$32
	$0 = (float_64)
	$12 = ((float_64)$1 + (float_64)(float_64)8.008566259537294e-17)
	if ( (((float_64)$12 <= (float_64)$0($0 - $21))) | (((float_64)$12 != (float_64)$12) | ((float_64)$0 != (float_64)$0))) ){ goto $label$30 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$31
	$0 = (float_64)
	if ( ((((float_64)$1 > (float_64)$0($0 - $21))) | (((float_64)$1 != (float_64)$1) | ((float_64)$0 != (float_64)$0))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$8 = ($2 & [2147483647])
	if ( ($8 <= [1071644673]) ){ goto $label$35 }
	$6 = (uint_32($8 >> [20]) & [2047])
	$8 = (uint_32([1048576] >> (uint_32($8 >> [20]) + [-1022])) + $2)
	$5 = uint_32((($8 & [1048575]) | [1048576]) >> ([1043] - $6))
	$2 = ( ([0] - $5) ? $5 : ((int_32)$2 < (int_32)[0]) )
	$21 = (float_64))($21 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($8 & ((int_32)uint_32([1048575] >> ($6 + [-1023])) ^ (int_32)[-1]))) << (int_64)32)))
	goto $label$34 
	
.LABEL $label$35
	$2 = [0]
	
.LABEL $label$34
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$21 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $21)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$1 + (float_64)$21)) & (int_64)-4294967296))
	$12 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$12 + (float_64)$21 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = (float_64)
	$4 = (CASTING int_64)(float_64 $1((float_64)1 - (float_64))((float_64))(((float_64)((float_64)$1)) * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$4 - ((float_64)$0($21 - (float_64))($1 - $12))) + (float_64)((float_64)$1 * (float_64)$0))
	if ( ((int_32)int_32($8 - $1))))) >> (uint_64)(int_64)32)) + ($2 << [20]))) >> [20]) <= (int_32)[0]) ){ goto $label$36 }
	return ((float_64)$10 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))))
	
.LABEL $label$36
	return ((float_64)$10 * (float_64)CALL scalbn($1, $2))
	
.LABEL $label$29
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $21
}

int_64 .FUNC sqrt (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($7) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$2 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$6 }
	$8 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $8) ){ goto $label$4 }
	$8 = [1]
	$9 = $2
	goto $label$5 
	
.LABEL $label$6
	if ( ((($7 & [2147483647]) | $2) == 0) ){ goto $label$3 }
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = [1]
	
.LOOP $label$7:
	$8 = ($8 + [-21])
	$7 = uint_32($2 >> [11])
	$9 = ($2 << [21])
	$2 = $9
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$5
	$5 = [0]
	if ( ($7 & [1048576]) ){ goto $label$8 }
	$5 = [0]
	
.LOOP $label$9:
	$5 = ($5 + [1])
	$7 = ($7 << [1])
	if ( (($7 & [1048576]) == 0) ){ goto $label$9 }
	
.LABEL $label$8
	$2 = ($9 << $5)
	$8 = ($8 - $5)
	$7 = (uint_32($9 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$7 = (($7 & [1048575]) | [1048576])
	$10 = ($8 + [-1023])
	if ( (($10 & [1]) == 0) ){ goto $label$10 }
	$7 = (($7 << [1]) | uint_32($2 >> [31]))
	$2 = ($2 << [1])
	
.LABEL $label$10
	$7 = (uint_32($2 >> [31]) | ($7 << [1]))
	$5 = ($2 << [1])
	$4 = [0]
	$9 = [2097152]
	$8 = [0]
	
.LOOP $label$11:
	$6 = $5
	$5 = ($9 + $8)
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$12 }
	$4 = ($9 + $4)
	$7 = ($7 - $5)
	$8 = ($5 + $9)
	
.LABEL $label$12
	$7 = (($7 << [1]) | (uint_32($2 >> [30]) & [1]))
	$5 = ($6 << [1])
	$2 = $6
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$11 }
	$3 = uint_32($10 >> [1])
	$9 = [-2147483648]
	$10 = [0]
	$2 = [0]
	
.LOOP $label$13:
	$6 = ($2 + $9)
	if ( ((int_32)$7 > (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$14 }
	if ( ($5 <= $6) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (($7 - $8) + ( [-1] ? [0] : ($5 <= $6) ))
	$2 = ($6 + $9)
	$8 = ((((int_32)$6 < (int_32)[0]) & ((int_32)$2 > (int_32)[-1])) + $8)
	$10 = ($10 + $9)
	$5 = ($5 - $6)
	
.LABEL $label$14
	$7 = (uint_32($5 >> [31]) | ($7 << [1]))
	$5 = ($5 << [1])
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$13 }
	if ( (($5 | $7) == 0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$17 }
	$10 = (($10 & [1]) + $10)
	goto $label$16 
	
.LABEL $label$17
	$4 = ($4 + [1])
	$10 = [0]
	
.LABEL $label$16
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($3 << [20]) + int_32($4 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($4 << [31])))))
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
}

void .FUNC $38 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = *([0] + [4])
	$10 = $2
	$7 = (int_64)1
	$8 = *($0 + [8])
	$5 = (int_64)($8 == 0)
	if ( $5 ){ goto $label$1 }
	$9 = ((int_64)$8 + (int_64)1)
	$7 = (int_64)1
	
.LOOP $label$2:
	$7 = ((int_64)$7 * (int_64)10)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [8])
	$2 = ($2 - (((CASTING uint_32)(uint_64 ((int_64)$8 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $8))))) = [0]
	$4 = *($0)
	if ( $5 ){ goto $label$3 }
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$4 % (int_64)$7)
	$0 = ($6 + [-1])
	
.LOOP $label$4:
	*($0) = ((int_64)((int_64)$9 % (int_64)10) + (int_64)48)
	$0 = ($0 + [-1])
	$9 = ((int_64)$9 / (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL printi(((int_64)$4 / (int_64)$7))
	CALL prints([2208])
	CALL prints_l($2, $3)
	CALL prints([2224])
	CALL $15($1, [0])
	*([0] + [4]) = $10
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [464])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [464])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [464])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $50(*($1), *($0 + [44]))
	CALL $50(*($1), *($0 + [48]))
	CALL $50(*($1), *($0 + [52]))
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$3 = *($1 + [8])
	$2 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$5 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($8 + [15]) = (($7) << [7]) | ($5 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $4) > (int_32)[0]), [352])
	CALL memcpy(*($6), ($8 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $7 ){ goto $label$1 }
	$1 = ($1 + [4])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$2 }
	$2 = ($0 + [4])
	
.LOOP $label$3:
	$6 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($6) - $4) > (int_32)[7]), [352])
	$7 = $5
	CALL memcpy(*($2), ($7 + [16]), [8])
	$5 = (*($2) + [8])
	*($2) = $5
	CALL eosio_assert(((int_32)(*($6) - $5) > (int_32)[7]), [352])
	CALL memcpy(*($2), ($7 + [24]), [8])
	$4 = (*($2) + [8])
	*($2) = $4
	$6 = *($7 + [4])
	if ( ($6 == 0) ){ goto $label$5 }
	
.LOOP $label$6:
	$5 = $6
	$6 = *($5)
	if ( $6 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$5 = *($7 + [8])
	if ( ((int_32)*($5) == (int_32)$7) ){ goto $label$4 }
	$7 = ($7 + [8])
	
.LOOP $label$7:
	$6 = *($7)
	$7 = ($6 + [8])
	$5 = *($6 + [8])
	if ( ((int_32)$6 != (int_32)*($5)) ){ goto $label$7 }
	
.LABEL $label$4
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_32 $18
	int_32 $19
	$18 = (*([0] + [4]) - [80])
	*([0] + [4]) = $18
	$2 = *($0)
	$19 = *($0 + [4])
	$17 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($1 + [8]) = $17
	*($1) = ((int_64)$17 & (int_64)4294967295)
	*($1 + [16]) = *(*($19))
	*(($19 = $18) + [16]) = [0]
	*($19) = ($19 + [16])
	$4 = ($1 + [8])
	*($19 + [28]) = $4
	*($19 + [24]) = $1
	$5 = ($1 + [12])
	*($19 + [32]) = $5
	$3 = ($1 + [16])
	*($19 + [36]) = $3
	$6 = ($1 + [24])
	*($19 + [40]) = $6
	$7 = ($1 + [32])
	*($19 + [44]) = $7
	$8 = ($1 + [40])
	*($19 + [48]) = $8
	$9 = ($1 + [48])
	*($19 + [52]) = $9
	$10 = ($1 + [56])
	*($19 + [56]) = $10
	$11 = ($1 + [64])
	*($19 + [60]) = $11
	$12 = ($1 + [72])
	*($19 + [64]) = $12
	$13 = ($1 + [80])
	*($19 + [68]) = $13
	$14 = ($1 + [92])
	*($19 + [72]) = $14
	$15 = ($1 + [104])
	*($19 + [76]) = $15
	CALL $46(($19 + [24]), $19)
	$16 = *($19 + [16])
	if ( ($16 <= [513]) ){ goto $label$2 }
	$18 = CALL malloc($16)
	goto $label$1 
	
.LABEL $label$2
	$18 = ($18 - (($16 + [15]) & [-16]))
	*([0] + [4]) = $18
	
.LABEL $label$1
	*($19 + [4]) = $18
	*($19) = $18
	*($19 + [8]) = ($18 + $16)
	*($19 + [16]) = $19
	*($19 + [28]) = $4
	*($19 + [24]) = $1
	*($19 + [32]) = $5
	*($19 + [36]) = $3
	*($19 + [40]) = $6
	*($19 + [44]) = $7
	*($19 + [48]) = $8
	*($19 + [52]) = $9
	*($19 + [56]) = $10
	*($19 + [60]) = $11
	*($19 + [64]) = $12
	*($19 + [68]) = $13
	*($19 + [72]) = $14
	*($19 + [76]) = $15
	CALL $47(($19 + [24]), ($19 + [16]))
	$17 = *($1)
	*($1 + [120]) = CALL db_store_i64(*($2 + [8]), (int_64)7035938290743508992, *(*($0 + [8])), $17, $18, $16)
	if ( ($16 <= [513]) ){ goto $label$3 }
	CALL free($18)
	
.LABEL $label$3
	if ( (uint_64)($17 <= *($2 + [16])) ){ goto $label$4 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$17 + (int_64)1) : ((uint_64)$17 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*([0] + [4]) = ($19 + [80])
}

int_32 .FUNC $42 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [120]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2368])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)7035938290743508992)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2304])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2304])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $41(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [432])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $81([128])) + [84]) = [0]
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [88]) = [0]
	*($6 + [96]) = [0]
	*($6 + [100]) = [0]
	*($6 + [80]) = ($6 + [84])
	*($6 + [92]) = ($6 + [96])
	*($6 + [108]) = [0]
	*($6 + [112]) = [0]
	*($6 + [104]) = ($6 + [108])
	*($6 + [116]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [8])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [12])
	*($8 + [52]) = ($6 + [16])
	*($8 + [56]) = ($6 + [24])
	*($8 + [60]) = ($6 + [32])
	*($8 + [64]) = ($6 + [40])
	*($8 + [68]) = ($6 + [48])
	*($8 + [72]) = ($6 + [56])
	*($8 + [76]) = ($6 + [64])
	*($8 + [80]) = ($6 + [72])
	*($8 + [84]) = ($6 + [80])
	*($8 + [88]) = ($6 + [92])
	*($8 + [92]) = ($6 + [104])
	CALL $49(($8 + [40]), ($8 + [32]))
	*($6 + [120]) = $1
	*($8 + [32]) = $6
	$5 = *($6)
	*($8 + [40]) = $5
	$7 = *($6 + [120])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $44(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $45(($4 + [104]), *(($4 + [108])))
	CALL $45(($4 + [92]), *(($4 + [96])))
	CALL $45(($4 + [80]), *(($4 + [84])))
	CALL $82($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [96])
	return $6
}

void .FUNC _ZN8eosguess5guess5startEx (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [96])
	*([0] + [4]) = $10
	*($10 + [48]) = $1
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1568]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$9 = *($4)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$9 = ($9 + [165])
	goto $label$3 
	
.LABEL $label$4
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($7)
	CALL eosio_assert(((int_64)$1 > (int_64)0), [2240])
	*(($2 = ($10 + [40]))) = [0]
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$6 = *($0)
	*($10 + [8]) = $6
	*($10 + [16]) = $6
	$4 = CALL db_lowerbound_i64($6, $6, (int_64)7035938290743508992, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$5 }
	CALL $41(($10 + [8]), $4)
	*($10 + [64]) = ($10 + [8])
	*($10 + [68]) = [0]
	CALL eosio_assert(((int_32)*(*(CALL $42(($10 + [64])) + [4]) + [12]) != (int_32)[0]), [2272])
	
.LABEL $label$5
	$6 = *($0)
	*($10) = ($10 + [48])
	*($10 + [88]) = $6
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)CALL $fimport$3()), [176])
	*($10 + [68]) = $10
	*($10 + [64]) = ($10 + [8])
	*($10 + [72]) = ($10 + [88])
	*(($4 = CALL $81([128])) + [84]) = [0]
	*($4 + [8 align=4]) = (int_64)0
	*($4 + [88]) = [0]
	*($4 + [96]) = [0]
	*($4 + [100]) = [0]
	*($4 + [80]) = ($4 + [84])
	*($4 + [92]) = ($4 + [96])
	*($4 + [108]) = [0]
	*($4 + [112]) = [0]
	*($4 + [104]) = ($4 + [108])
	*($4 + [116]) = ($10 + [8])
	CALL $43(($10 + [64]), $4)
	*($10 + [80]) = $4
	$6 = *($4)
	*($10 + [64]) = $6
	$0 = *($4 + [120])
	*($10 + [60]) = $0
	$3 = ($10 + [36])
	$9 = *($3)
	if ( ((uint_32)$9 >= (uint_32)*($2)) ){ goto $label$7 }
	*($9 + [8]) = $6
	*($9 + [16]) = $0
	*($10 + [80]) = [0]
	*($9) = $4
	*($3) = ($9 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $44(($10 + [32]), ($10 + [80]), ($10 + [64]), ($10 + [60]))
	
.LABEL $label$6
	$4 = *($10 + [80])
	*($10 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $45(($4 + [104]), *(($4 + [108])))
	CALL $45(($4 + [92]), *(($4 + [96])))
	CALL $45(($4 + [80]), *(($4 + [84])))
	CALL $82($4)
	
.LABEL $label$8
	$0 = *($10 + [32])
	if ( ($0 == 0) ){ goto $label$9 }
	$2 = ($10 + [36])
	$9 = *($2)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$11 }
	
.LOOP $label$12:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $45(($4 + [104]), *(($4 + [108])))
	CALL $45(($4 + [92]), *(($4 + [96])))
	CALL $45(($4 + [80]), *(($4 + [84])))
	CALL $82($4)
	
.LABEL $label$13
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$12 }
	$4 = *(($10 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$4 = $0
	
.LABEL $label$10
	*($2) = $0
	CALL $82($4)
	
.LABEL $label$9
	*([0] + [4]) = ($10 + [96])
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [352])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [352])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [352])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $48(*($1), *($0 + [44]))
	CALL $48(*($1), *($0 + [48]))
	CALL $48(*($1), *($0 + [52]))
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*(($7 = *($1))) = (*($7) + [8])
	*(($7 = *($1))) = (*($7) + [4])
	*(($7 = *($1))) = (*($7) + [4])
	*(($7 = *($1))) = (*($7) + [8])
	*(($7 = *($1))) = (*($7) + [8])
	*(($7 = *($1))) = (*($7) + [1])
	*(($7 = *($1))) = (*($7) + [8])
	*(($7 = *($1))) = (*($7) + [8])
	*(($7 = *($1))) = (*($7) + [8])
	*(($7 = *($1))) = (*($7) + [8])
	*(($7 = *($1))) = (*($7) + [8])
	$2 = *($1)
	$5 = *($2)
	$7 = *($0 + [44])
	$4 = *($7 + [8])
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	*($2) = $5
	$3 = ($7 + [4])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$2 }
	
.LOOP $label$3:
	$8 = $6
	$7 = *($8 + [4])
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$6:
	$6 = $7
	$7 = *($6)
	if ( $7 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$6 = *($8 + [8])
	if ( ((int_32)*($6) == (int_32)$8) ){ goto $label$4 }
	$8 = ($8 + [8])
	
.LOOP $label$7:
	$7 = *($8)
	$8 = ($7 + [8])
	$6 = *($7 + [8])
	if ( ((int_32)$7 != (int_32)*($6)) ){ goto $label$7 }
	
.LABEL $label$4
	$5 = ($5 + [16])
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$3 }
	*($2) = $5
	
.LABEL $label$2
	$2 = *($1)
	$5 = *($2)
	$7 = *($0 + [48])
	$4 = *($7 + [8])
	
.LOOP $label$8:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$8 }
	*($2) = $5
	$3 = ($7 + [4])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$8 = $6
	$7 = *($8 + [4])
	if ( ($7 == 0) ){ goto $label$12 }
	
.LOOP $label$13:
	$6 = $7
	$7 = *($6)
	if ( $7 ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$6 = *($8 + [8])
	if ( ((int_32)*($6) == (int_32)$8) ){ goto $label$11 }
	$8 = ($8 + [8])
	
.LOOP $label$14:
	$7 = *($8)
	$8 = ($7 + [8])
	$6 = *($7 + [8])
	if ( ((int_32)$7 != (int_32)*($6)) ){ goto $label$14 }
	
.LABEL $label$11
	$5 = ($5 + [16])
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$10 }
	*($2) = $5
	
.LABEL $label$9
	$1 = *($1)
	$5 = *($1)
	$7 = *($0 + [52])
	$4 = *($7 + [8])
	
.LOOP $label$15:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$15 }
	*($1) = $5
	$3 = ($7 + [4])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$16 }
	
.LOOP $label$17:
	$8 = $6
	$7 = *($8 + [4])
	if ( ($7 == 0) ){ goto $label$19 }
	
.LOOP $label$20:
	$6 = $7
	$7 = *($6)
	if ( $7 ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$6 = *($8 + [8])
	if ( ((int_32)*($6) == (int_32)$8) ){ goto $label$18 }
	$8 = ($8 + [8])
	
.LOOP $label$21:
	$7 = *($8)
	$8 = ($7 + [8])
	$6 = *($7 + [8])
	if ( ((int_32)$7 != (int_32)*($6)) ){ goto $label$21 }
	
.LABEL $label$18
	$5 = ($5 + [16])
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$17 }
	*($1) = $5
	
.LABEL $label$16
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $45($0, *($1))
	CALL $45($0, *($1 + [4]))
	CALL $82($1)
	
.LABEL $label$1
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $81(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $88($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $45(($1 + [104]), *(($1 + [108])))
	CALL $45(($1 + [92]), *(($1 + [96])))
	CALL $45(($1 + [80]), *(($1 + [84])))
	CALL $82($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $82($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [352])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [352])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $9 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $81(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $88($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $82($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $82($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [432])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $81([56])
	CALL $7($6)
	*($6 + [40]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [16])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [32])
	CALL $26(($8 + [32]), ($8 + [24]))
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [32]) = $5)
	$7 = *($6 + [44])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $9(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $82($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $7 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [368])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [304])
	*(($2 = ($0 + [24]))) = (int_64)1397703940
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [368])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [304])
	return $0
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _ZN8eosguess5guess6createEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [224])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	$2 = *($1 + [8])
	CALL eosio_assert(((int_64)$2 == (int_64)1113217284), [304])
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = [0]
	$6 = [0]
	$3 = *($1)
	if ( ((uint_64)((int_64)$3 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$8 = [0]
	$5 = $4
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [16])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [32])
	*((($9 + [88]) + [32])) = [0]
	*($9 + [104]) = (int_64)-1
	*($9 + [112]) = (int_64)0
	$5 = *($0)
	*($9 + [88]) = $5
	*($9 + [96]) = $4
	$8 = CALL db_find_i64($5, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$7 = CALL $6(($9 + [88]), $8)
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)($9 + [88])), [64])
	
.LABEL $label$6
	CALL eosio_assert(($7 == 0), [128])
	$4 = *($0)
	CALL eosio_assert(((int_64)*($9 + [88]) == (int_64)CALL $fimport$3()), [176])
	$8 = CALL $81([56])
	CALL $7($8)
	*($8 + [40]) = ($9 + [88])
	*($8 + [8]) = $2
	*(($8 + [28])) = *(($1 + [12]))
	*(($8 + [24])) = *(($1 + [8]))
	*(($8 + [20])) = *(($1 + [4]))
	*($8 + [16]) = *($1)
	*($8 + [32]) = *($0)
	*($9 + [208]) = (($9 + [128]) + [40])
	*($9 + [204]) = ($9 + [128])
	*($9 + [200]) = ($9 + [128])
	*($9 + [216]) = ($9 + [200])
	*($9 + [20]) = ($8 + [16])
	*($9 + [16]) = $8
	*($9 + [24]) = ($8 + [32])
	CALL $8(($9 + [16]), ($9 + [216]))
	$5 = (uint_64)*($8 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*((($9 + [88]) + [8])), (int_64)-4157508551318700032, $4, $5), ($9 + [128]), [40]
	*($8 + [44]) = $7)
	$6 = (($9 + [88]) + [16])
	if ( (uint_64)($5 <= *($6)) ){ goto $label$7 }
	*($6) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	*($9 + [16]) = $8
	$5 = (uint_64)*(($8 + [8])) >> (uint_64)(int_64)8
	*($9 + [128]) = $5)
	*($9 + [200]) = $7
	$6 = *((($9 + [88]) + [28]))
	if ( ((uint_32)$6 >= (uint_32)*(($9 + [120]))) ){ goto $label$9 }
	*($6 + [8]) = $5
	*($6 + [16]) = $7
	*($9 + [16]) = [0]
	*($6) = $8
	*(($9 + [116])) = ($6 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $9(($9 + [112]), ($9 + [16]), ($9 + [128]), ($9 + [200]))
	
.LABEL $label$8
	$8 = *($9 + [16])
	*($9 + [16]) = [0]
	if ( ($8 == 0) ){ goto $label$10 }
	CALL $82($8)
	
.LABEL $label$10
	*((($9 + [72]) + [12])) = *(($1 + [12]))
	*((($9 + [72]) + [8])) = *(($1 + [8]))
	*($9 + [72]) = *($1)
	*($9 + [76]) = *(($1 + [4]))
	$5 = *($0)
	*((($9 + [56]) + [8])) = [0]
	*($9 + [56]) = (int_64)0
	$8 = CALL strlen([240])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$14 }
	*($9 + [56]) = ($8 << [1])
	$6 = (($9 + [56]) | [1])
	if ( $8 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$7 = (($8 + [16]) & [-16])
	$6 = CALL $81($7)
	*($9 + [56]) = ($7 | [1])
	*($9 + [64]) = $6
	*($9 + [60]) = $8
	
.LABEL $label$13
	CALL memcpy($6, [240], $8)
	
.LABEL $label$12
	*(($6 + $8)) = [0]
	*(($9 + [8])) = *((($9 + [72]) + [8]))
	*($9) = *($9 + [72])
	CALL _ZN8eosguess5guess5issueEyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $5, $9, ($9 + [56]))
	$8 = [1]
	if ( ((*($9 + [56]) & [1]) == 0) ){ goto $label$15 }
	CALL $82(*($9 + [64]))
	
.LABEL $label$15
	*(($9 + [48])) = [0]
	*($9 + [32]) = (int_64)-1
	*($9 + [40]) = (int_64)0
	$5 = *($0)
	*($9 + [16]) = $5
	*($9 + [24]) = $5
	*($9 + [128]) = (int_64)1113217284
	CALL $15(($9 + [128]), [1])
	$6 = CALL db_find_i64($5, $5, (int_64)-7949128877345865728, (int_64)4348505)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$16 }
	CALL eosio_assert(((int_32)*(CALL $11(($9 + [16]), $6) + [72]) == (int_32)($9 + [16])), [64])
	$8 = [0]
	
.LABEL $label$16
	CALL eosio_assert($8, [272])
	$4 = *($0)
	CALL eosio_assert(((int_64)*($9 + [16]) == (int_64)CALL $fimport$3()), [176])
	$8 = CALL $81([88])
	CALL $12(($8 + [8]))
	*($8 + [72]) = ($9 + [16])
	*($8 + [8]) = (int_64)100000000000000
	*($8) = (int_64)1113217284
	*($8 + [16]) = (int_64)4995142087001921796
	*($8 + [32]) = (int_64)1113217284
	*($8 + [48]) = (int_64)10000000000
	*($8 + [24]) = *($1)
	*($8 + [56]) = (int_64)1397703940
	*($9 + [208]) = (($9 + [128]) + [72])
	*($9 + [204]) = ($9 + [128])
	*($9 + [200]) = ($9 + [128])
	CALL $13(($9 + [200]), $8)
	$5 = (uint_64)*($8) >> (uint_64)(int_64)8
	$0 = CALL db_store_i64(*((($9 + [16]) + [8])), (int_64)-7949128877345865728, $4, $5), ($9 + [128]), [72]
	*($8 + [76]) = $0)
	$1 = ($9 + [32])
	if ( (uint_64)($5 <= *($1)) ){ goto $label$17 }
	*($1) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$17
	*($9 + [200]) = $8
	$5 = (uint_64)*($8) >> (uint_64)(int_64)8
	*($9 + [128]) = $5)
	*($9 + [216]) = $0
	$6 = ($9 + [44])
	$1 = *($6)
	if ( ((uint_32)$1 >= (uint_32)*(($9 + [48]))) ){ goto $label$19 }
	*($1 + [8]) = $5
	*($1 + [16]) = $0
	*($9 + [200]) = [0]
	*($1) = $8
	*($6) = ($1 + [24])
	goto $label$18 
	
.LABEL $label$19
	CALL $14(($9 + [40]), ($9 + [200]), ($9 + [128]), ($9 + [216]))
	
.LABEL $label$18
	$8 = *($9 + [200])
	*($9 + [200]) = [0]
	if ( ($8 == 0) ){ goto $label$20 }
	CALL $82($8)
	
.LABEL $label$20
	$0 = *($9 + [40])
	if ( ($0 == 0) ){ goto $label$21 }
	$6 = ($9 + [44])
	$8 = *($6)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$23 }
	
.LOOP $label$24:
	$8 = ($8 + [-24])
	$1 = *($8)
	*($8) = [0]
	if ( ($1 == 0) ){ goto $label$25 }
	CALL $82($1)
	
.LABEL $label$25
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$24 }
	$8 = *(($9 + [40]))
	goto $label$22 
	
.LABEL $label$23
	$8 = $0
	
.LABEL $label$22
	*($6) = $0
	CALL $82($8)
	
.LABEL $label$21
	$0 = *($9 + [112])
	if ( ($0 == 0) ){ goto $label$26 }
	$6 = ($9 + [116])
	$8 = *($6)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$28 }
	
.LOOP $label$29:
	$8 = ($8 + [-24])
	$1 = *($8)
	*($8) = [0]
	if ( ($1 == 0) ){ goto $label$30 }
	CALL $82($1)
	
.LABEL $label$30
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$29 }
	$8 = *(($9 + [112]))
	goto $label$27 
	
.LABEL $label$28
	$8 = $0
	
.LABEL $label$27
	*($6) = $0
	CALL $82($8)
	
.LABEL $label$26
	*([0] + [4]) = ($9 + [224])
	return (unreachable)
	
.LABEL $label$11
	CALL $83(($9 + [56]))
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC memory ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC _ZeqRK11checksum256S1_ (int_32 $0, int_32 _ZeqRK11checksum256S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $14 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $81(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $88($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $82($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $82($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([336])
	
.LABEL $label$1
	$2 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	*($3 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	
.LABEL $label$2
	*([0] + [4]) = ($3 + [16])
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [464])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [464])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [464])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [464])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [464])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [464])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [464])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [464])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN8eosguess5guess11add_balanceEyN5eosio5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	$8 = [0]
	*((($9 + [8]) + [32])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$6 = *($0)
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$4 = *($2 + [8])
	$0 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $23(($9 + [8]), $0)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [64])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [720])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [768])
	$1 = *($8 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$1), [832])
	$6 = ((int_64)*($8) + (int_64)*($2))
	*($8) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [880])
	CALL eosio_assert(((int_64)*($8) < (int_64)4611686018427387904), [912])
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$1) == (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)), [944])
	CALL eosio_assert([1], [352])
	CALL memcpy(($9 + [64]), $8, [8])
	CALL eosio_assert([1], [352])
	CALL memcpy((($9 + [64]) | [8]), ($8 + [8]), [8])
	CALL db_update_i64(*($8 + [20]), (int_64)0, ($9 + [64]), [16])
	$8 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$3 }
	*($8) = ((int_64)$1 + (int_64)1)
	$2 = *($9 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [176])
	*(($0 = CALL $81([32])) + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [368])
	$5 = ($0 + [8])
	$1 = (int_64)5459781
	
.LOOP $label$6:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert($7, [304])
	*($0 + [16]) = ($9 + [8])
	*(($8 = ($0 + [8]))) = *(($2 + [8]))
	*($0) = *($2)
	CALL eosio_assert([1], [352])
	CALL memcpy(($9 + [64]), $0, [8])
	CALL eosio_assert([1], [352])
	CALL memcpy((($9 + [64]) | [8]), $5, [8])
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	$2 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)3607749779137757184, $3, $1), ($9 + [64]), [16]
	*($0 + [20]) = $2)
	$7 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$9 }
	*($7) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$9
	*($9 + [56]) = $0
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	*($9 + [64]) = $1)
	*($9 + [52]) = $2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($9 + [40]))) ){ goto $label$11 }
	*($8 + [8]) = $1
	*($8 + [16]) = $2
	*($9 + [56]) = [0]
	*($8) = $0
	*($7) = ($8 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $25(($9 + [32]), ($9 + [56]), ($9 + [64]), ($9 + [52]))
	
.LABEL $label$10
	$8 = *($9 + [56])
	*($9 + [56]) = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $82($8)
	
.LABEL $label$3
	$2 = *($9 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$8 = ($8 + [-24])
	$0 = *($8)
	*($8) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $82($0)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$14 }
	$8 = *(($9 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$8 = $2
	
.LABEL $label$12
	*($7) = $2
	CALL $82($8)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

void .FUNC _ZN8eosguess5guess5issueEyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [208])
	*([0] + [4]) = $11
	$8 = [0]
	$4 = *($2 + [8])
	$9 = (uint_64)$4 >> (uint_64)(int_64)8
	$7 = $9)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [304])
	$8 = *($3)
	if ( ($8 & [1]) ){ goto $label$7 }
	$8 = uint_32($8 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$8 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($8 <= [257]), [480])
	$10 = [0]
	*(($11 + [120])) = [0]
	*($11 + [104]) = (int_64)-1
	*($11 + [112]) = (int_64)0
	$7 = *($0)
	*($11 + [88]) = $7
	*($11 + [96]) = $9
	$5 = [0]
	$8 = CALL db_find_i64($7, $9, (int_64)-4157508551318700032, $9)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	$5 = CALL $6(($11 + [88]), $8)
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)($11 + [88])), [64])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [512])
	$7 = *($2)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$8 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$10 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$10 = [0]
	
.LABEL $label$9
	CALL eosio_assert($10, [576])
	CALL eosio_assert(((int_64)$7 > (int_64)0), [608])
	CALL eosio_assert(((int_64)$4 == (int_64)*($5 + [8])), [640])
	CALL eosio_assert(((int_64)$7 <= (int_64))(*($5 + [16]) - *($5))), [672])
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)($11 + [88])), [720])
	CALL eosio_assert(((int_64)*($11 + [88]) == (int_64)CALL $fimport$3()), [768])
	$9 = *($5 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$9), [832])
	$7 = ((int_64)*($5) + (int_64)$7)
	*($5) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [880])
	CALL eosio_assert(((int_64)*($5) < (int_64)4611686018427387904), [912])
	$7 = (uint_64)$9 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$7) == (int_64)(uint_64)*($5 + [8]) >> (uint_64)(int_64)8)), [944])
	*($11 + [176]) = (($11 + [128]) + [40])
	*($11 + [172]) = ($11 + [128])
	*($11 + [168]) = ($11 + [128])
	*($11 + [184]) = ($11 + [168])
	*($11 + [196]) = ($5 + [16])
	*($11 + [192]) = $5
	$8 = ($5 + [32])
	*($11 + [200]) = $8
	CALL $8(($11 + [192]), ($11 + [184]))
	CALL db_update_i64(*($5 + [44]), (int_64)0, ($11 + [128]), [40])
	$5 = (($11 + [88]) + [16])
	if ( (uint_64)($7 <= *($5)) ){ goto $label$14 }
	*($5) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$14
	*(($5 = (($11 + [72]) + [12]))) = *(($2 + [12]))
	$6 = ($2 + [8])
	*(($10 = (($11 + [72]) + [8]))) = *($6)
	*($11 + [76]) = *(($2 + [4]))
	*($11 + [72]) = *($2)
	$7 = *($8)
	*((($11 + [24]) + [12])) = *($5)
	*((($11 + [24]) + [8])) = *($10)
	*($11 + [28]) = *($11 + [76])
	*($11 + [24]) = *($11 + [72])
	CALL _ZN8eosguess5guess11add_balanceEyN5eosio5assetEy($0, $7, ($11 + [24]), $7)
	$7 = *($8)
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$15 }
	*(($8 = (($11 + [56]) + [8]))) = *($6)
	*($11 + [56]) = *($2)
	CALL $89(($11 + [40]), $3)
	*((($11 + [8]) + [8])) = *($8)
	*($11 + [8]) = *($11 + [56])
	CALL _ZN8eosguess5guess8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $7, $1, ($11 + [8]), ($11 + [40]))
	if ( ((*($11 + [40]) & [1]) == 0) ){ goto $label$15 }
	CALL $82(*($11 + [48]))
	
.LABEL $label$15
	$2 = *($11 + [112])
	if ( ($2 == 0) ){ goto $label$16 }
	$10 = ($11 + [116])
	$8 = *($10)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$18 }
	
.LOOP $label$19:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$20 }
	CALL $82($5)
	
.LABEL $label$20
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$19 }
	$8 = *(($11 + [112]))
	goto $label$17 
	
.LABEL $label$18
	$8 = $2
	
.LABEL $label$17
	*($10) = $2
	CALL $82($8)
	
.LABEL $label$16
	*([0] + [4]) = ($11 + [208])
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [432])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $81([88])
	CALL $12(($6 + [8]))
	*($6 + [72]) = $0
	CALL $16(($8 + [32]), $6)
	*($6 + [76]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6) >> (uint_64)(int_64)8
	*($8 + [16]) = $5)
	$7 = *($6 + [76])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $14(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $82($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $12 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [368])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [304])
	*(($2 = ($0 + [24]))) = (int_64)1397703940
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [368])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [304])
	*($0 + [40]) = (int_64)0
	*(($0 + [32])) = (int_64)4602678819172646912
	*(($2 = ($0 + [48]))) = (int_64)1397703940
	CALL eosio_assert([1], [368])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [304])
	*(($0 + [56])) = (int_64)4602678819172646912
	return $0
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [352])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [352])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [352])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [352])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [352])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [352])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [352])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [352])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN8eosguess14exchange_state7convertEN5eosio5assetENS1_11symbol_typeE (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_64 $5
	float_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [112])
	*([0] + [4]) = $10
	$5 = *(($1 + [48]))
	$7 = *(($1 + [24]))
	$4 = *($2 + [8])
	if ( ((int_64)$4 != (int_64)*($1 + [8])) ){ goto $label$10 }
	if ( ((int_64)$7 != (int_64)$3) ){ goto $label$9 }
	$9 = ($2 + [8])
	*(($8 = (($10 + [80]) + [8]))) = *($9)
	$7 = *($2)
	*((($10 + [16]) + [12])) = *((($10 + [80]) + [12]))
	*((($10 + [16]) + [8])) = *($8)
	*($10 + [80]) = $7
	*($10 + [20]) = *($10 + [84])
	*($10 + [16]) = *($10 + [80])
	CALL _ZN8eosguess14exchange_state21convert_from_exchangeERNS0_9connectorEN5eosio5assetE(($10 + [96]), $1, ($1 + [16]), ($10 + [16]))
	*($9) = *((($10 + [96]) + [8]))
	*($2) = *($10 + [96])
	goto $label$1 
	
.LABEL $label$10
	if ( ((int_64)$4 != (int_64)$7) ){ goto $label$8 }
	$4 = *($1)
	$8 = ($1 + [16])
	$7 = *($2)
	$6 = CALL pow(((float_64)((float_64)(CASTING float_64)(int_64 $7) / (float_64)(CASTING float_64)(int_64 ((int_64)*($8) + (int_64)$7))) + (float_64)(float_64)1), ((float_64)*(($1 + [32])) / (float_64)(float_64)1e3))
	*($8) = ((int_64)$7 + (int_64)*($8))
	$4 = (Rounds 0)(!(float_64)((float_64)(CASTING float_64)(int_64 $4) * (float_64)(float_64))((float_64)1 - $6))
	*($1) = ((int_64)$4) + (int_64)*($1))
	$5 = *(($1 + [8]))
	CALL eosio_assert((uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$7 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$9 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$11 }
	goto $label$6 
	
.LABEL $label$9
	if ( ((int_64)$5 != (int_64)$3) ){ goto $label$5 }
	$9 = ($2 + [8])
	*(($8 = (($10 + [64]) + [8]))) = *($9)
	$7 = *($2)
	*((($10 + [32]) + [12])) = *((($10 + [64]) + [12]))
	*((($10 + [32]) + [8])) = *($8)
	*($10 + [64]) = $7
	*($10 + [36]) = *($10 + [68])
	*($10 + [32]) = *($10 + [64])
	CALL _ZN8eosguess14exchange_state21convert_from_exchangeERNS0_9connectorEN5eosio5assetE(($10 + [96]), $1, ($1 + [40]), ($10 + [32]))
	*($9) = *((($10 + [96]) + [8]))
	*($2) = *($10 + [96])
	goto $label$1 
	
.LABEL $label$8
	if ( ((int_64)$4 != (int_64)$5) ){ goto $label$4 }
	$4 = *($1)
	$8 = ($1 + [40])
	$7 = *($2)
	$6 = CALL pow(((float_64)((float_64)(CASTING float_64)(int_64 $7) / (float_64)(CASTING float_64)(int_64 ((int_64)*($8) + (int_64)$7))) + (float_64)(float_64)1), ((float_64)*(($1 + [56])) / (float_64)(float_64)1e3))
	*($8) = ((int_64)$7 + (int_64)*($8))
	$4 = (Rounds 0)(!(float_64)((float_64)(CASTING float_64)(int_64 $4) * (float_64)(float_64))((float_64)1 - $6))
	*($1) = ((int_64)$4) + (int_64)*($1))
	$5 = *(($1 + [8]))
	CALL eosio_assert((uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$7 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$9 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$14 }
	goto $label$2 
	
.LABEL $label$7
	$9 = [0]
	
.LABEL $label$6
	CALL eosio_assert($9, [2832])
	*(($2 + [8])) = $5
	*($2) = $4
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert([0], [2880])
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert([0], [2864])
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	
.LABEL $label$2
	CALL eosio_assert($9, [2832])
	*(($2 + [8])) = $5
	*($2) = $4
	
.LABEL $label$1
	$8 = ($2 + [8])
	if ( ((int_64)*($8) != (int_64)$3) ){ goto $label$18 }
	*($0) = *($2)
	*(($0 + [8])) = *($8)
	goto $label$17 
	
.LABEL $label$18
	$7 = *($8)
	*((($10 + [48]) + [8])) = $7
	$4 = *($2)
	*(($10 + [8])) = $7
	*($10 + [48]) = $4
	*($10 + [4]) = *($10 + [52])
	*($10) = *($10 + [48])
	CALL _ZN8eosguess14exchange_state7convertEN5eosio5assetENS1_11symbol_typeE($0, $1, $10, $3)
	
.LABEL $label$17
	*([0] + [4]) = ($10 + [112])
}

void .FUNC _ZN8eosguess5guess8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [112])
	*([0] + [4]) = $11
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [1008])
	CALL eosio_assert(CALL $fimport$15($2), [1040])
	$5 = *($3 + [8])
	$8 = [0]
	*(($11 + [104])) = [0]
	$9 = (uint_64)$5 >> (uint_64)(int_64)8
	*($11 + [80]) = $9)
	*($11 + [88]) = (int_64)-1
	*($11 + [96]) = (int_64)0
	*($11 + [72]) = *($0)
	$6 = CALL $19(($11 + [72]), $9, [1072])
	$7 = *($3)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$10 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [576])
	CALL eosio_assert(((int_64)$7 > (int_64)0), [1104])
	CALL eosio_assert(((int_64)$5 == (int_64)*($6 + [8])), [640])
	$10 = *($4)
	if ( ($10 & [1]) ){ goto $label$7 }
	$10 = uint_32($10 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$10 = *($4 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($10 <= [257]), [480])
	$8 = ($3 + [8])
	*(($10 = (($11 + [56]) + [8]))) = *($8)
	$9 = *($3)
	*((($11 + [24]) + [12])) = *((($11 + [56]) + [12]))
	*((($11 + [24]) + [8])) = *($10)
	*($11 + [56]) = $9
	*($11 + [28]) = *($11 + [60])
	*($11 + [24]) = *($11 + [56])
	CALL _ZN8eosguess5guess11sub_balanceEyN5eosio5assetE($0, $1, ($11 + [24]))
	*(($10 = (($11 + [40]) + [8]))) = *($8)
	$9 = *($3)
	*((($11 + [8]) + [12])) = *((($11 + [40]) + [12]))
	*((($11 + [8]) + [8])) = *($10)
	*($11 + [40]) = $9
	*($11 + [12]) = *($11 + [44])
	*($11 + [8]) = *($11 + [40])
	CALL _ZN8eosguess5guess11add_balanceEyN5eosio5assetEy($0, $2, ($11 + [8]), $1)
	$8 = *($11 + [96])
	if ( ($8 == 0) ){ goto $label$8 }
	$0 = ($11 + [100])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$10 }
	
.LOOP $label$11:
	$10 = ($10 + [-24])
	$3 = *($10)
	*($10) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $82($3)
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$11 }
	$10 = *(($11 + [96]))
	goto $label$9 
	
.LABEL $label$10
	$10 = $8
	
.LABEL $label$9
	*($0) = $8
	CALL $82($10)
	
.LABEL $label$8
	*([0] + [4]) = ($11 + [112])
}

int_32 .FUNC $19 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [64])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $6($0, $5)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [64])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [432])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $81([32])) + [16]) = $0
	*($6) = [0]
	CALL eosio_assert(((uint_32)$4 > (uint_32)[3]), [464])
	CALL memcpy($6, $7, [4])
	CALL eosio_assert(((uint_32)($4 + [-4]) > (uint_32)[7]), [464])
	CALL memcpy(($6 + [8]), ($7 + [4]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $60(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $82($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN8eosguess5guess8snapshotEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_32 $18
	int_32 $19
	$19 = (*([0] + [4]) - [208])
	*([0] + [4]) = $19
	*(($19 + [160])) = [0]
	*($19 + [144]) = (int_64)-1
	$17 = *($0)
	*($19 + [128]) = $17
	*($19 + [136]) = $17
	*($19 + [152]) = (int_64)0
	$18 = CALL db_lowerbound_i64($17, $17, (int_64)-4373710648386892288, (int_64)0)
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$1 }
	$1 = CALL $58(($19 + [128]), $18)
	$2 = *($1 + [8])
	if ( (int_64)($2 == 0) ){ goto $label$2 }
	*((($19 + [88]) + [32])) = [0]
	*($19 + [104]) = (int_64)-1
	*($19 + [112]) = (int_64)0
	$17 = *($0)
	*($19 + [88]) = $17
	*($19 + [96]) = $17
	$5 = [0]
	$18 = CALL db_find_i64($17, $17, (int_64)-7949128877345865728, (int_64)4348505)
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $11(($19 + [88]), $18)
	CALL eosio_assert(((int_32)*($5 + [72]) == (int_32)($19 + [88])), [64])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1696])
	*((($19 + [168]) + [32])) = [0]
	*($19 + [184]) = (int_64)-1
	*($19 + [192]) = (int_64)0
	*($19 + [168]) = *($0)
	*($19 + [176]) = (int_64)4348505
	$12 = *(CALL $19(($19 + [168]), (int_64)4348505, [1072]))
	$6 = *($19 + [192])
	if ( ($6 == 0) ){ goto $label$4 }
	$11 = ($19 + [196])
	$18 = *($11)
	if ( ((int_32)$18 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	$18 = ($18 + [-24])
	$7 = *($18)
	*($18) = [0]
	if ( ($7 == 0) ){ goto $label$8 }
	CALL $82($7)
	
.LABEL $label$8
	if ( ((int_32)$6 != (int_32)$18) ){ goto $label$7 }
	$18 = *(($19 + [192]))
	goto $label$5 
	
.LABEL $label$6
	$18 = $6
	
.LABEL $label$5
	*($11) = $6
	CALL $82($18)
	
.LABEL $label$4
	$8 = *(($5 + [24]))
	*((($19 + [168]) + [32])) = [0]
	*($19 + [184]) = (int_64)-1
	$17 = *($0)
	*($19 + [168]) = $17
	*($19 + [176]) = $17
	*($19 + [192]) = (int_64)0
	$18 = CALL db_lowerbound_i64($17, $17, (int_64)3607749779158204416, (int_64)0)
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$9 }
	$3 = (int_64))($12 - $8)
	$4 = (($19 + [16]) | [1])
	$5 = CALL $30(($19 + [168]), $18)
	$9 = (($19 + [48]) + [8])
	$10 = (($19 + [48]) + [16])
	$11 = (($19 + [48]) + [24])
	$13 = ($19 + [76])
	$14 = (($19 + [48]) + [32])
	
.LOOP $label$10:
	$17 = *($5)
	*($9) = $17
	*($10) = (int_64)-1
	*($11) = [0]
	$12 = *($0)
	*($19 + [48]) = $12
	*($13) = [0]
	*($14) = [0]
	$18 = CALL db_find_i64($12, $17, (int_64)3607749779137757184, (int_64)4348505)
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$15 }
	$18 = CALL $23(($19 + [48]), $18)
	CALL eosio_assert(((int_32)*($18 + [16]) == (int_32)($19 + [48])), [64])
	$17 = ((int_64)((int_64)*($18) * (int_64)$2) / (int_64)$3)
	if ( ((int_64)$17 <= (int_64)0) ){ goto $label$15 }
	*(($6 = (($19 + [32]) + [8]))) = (int_64)1113217284
	*($19 + [32]) = $17
	$12 = *($5)
	$8 = *($0)
	CALL eosio_assert((uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$17 = (int_64)4348505
	$18 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$7 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$7 = [0]
	
.LABEL $label$16
	CALL eosio_assert($7, [304])
	*(($15 = (($19 + [16]) + [8]))) = [0]
	*($19 + [16]) = (int_64)0
	$18 = CALL strlen([2592])
	if ( ((uint_32)$18 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$18 >= (uint_32)[11]) ){ goto $label$23 }
	*($19 + [16]) = ($18 << [1])
	$7 = $4
	if ( $18 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$16 = (($18 + [16]) & [-16])
	$7 = CALL $81($16)
	*($15) = $7
	*($19 + [16]) = ($16 | [1])
	*($19 + [20]) = $18
	
.LABEL $label$22
	CALL memcpy($7, [2592], $18)
	
.LABEL $label$21
	*(($7 + $18)) = [0]
	*(($19 + [8])) = *($6)
	*($19) = *($19 + [32])
	CALL _ZN8eosguess5guess8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $8, $12, $19, ($19 + [16]))
	if ( ((*($19 + [16]) & [1]) == 0) ){ goto $label$15 }
	CALL $82(*($15))
	
.LABEL $label$15
	$6 = *($11)
	if ( ($6 == 0) ){ goto $label$11 }
	$18 = *($13)
	if ( ((int_32)$18 != (int_32)$6) ){ goto $label$24 }
	$18 = $6
	goto $label$12 
	
.LABEL $label$24
	
.LOOP $label$25:
	$18 = ($18 + [-24])
	$7 = *($18)
	*($18) = [0]
	if ( ($7 == 0) ){ goto $label$26 }
	CALL $82($7)
	
.LABEL $label$26
	if ( ((int_32)$6 != (int_32)$18) ){ goto $label$25 }
	goto $label$13 
	
.LABEL $label$14
	CALL $83(($19 + [16]))
	
.LABEL $label$13
	$18 = *($11)
	
.LABEL $label$12
	*($13) = $6
	CALL $82($18)
	
.LABEL $label$11
	CALL eosio_assert([1], [2144])
	$18 = CALL db_next_i64(*($5 + [12]), ($19 + [48]))
	if ( ((int_32)$18 <= (int_32)[-1]) ){ goto $label$9 }
	$5 = CALL $30(($19 + [168]), $18)
	goto $label$10 
	
.LABEL $label$9
	$6 = *($19 + [192])
	if ( ($6 == 0) ){ goto $label$27 }
	$5 = ($19 + [196])
	$18 = *($5)
	if ( ((int_32)$18 == (int_32)$6) ){ goto $label$29 }
	
.LOOP $label$30:
	$18 = ($18 + [-24])
	$7 = *($18)
	*($18) = [0]
	if ( ($7 == 0) ){ goto $label$31 }
	CALL $82($7)
	
.LABEL $label$31
	if ( ((int_32)$6 != (int_32)$18) ){ goto $label$30 }
	$18 = *(($19 + [192]))
	goto $label$28 
	
.LABEL $label$29
	$18 = $6
	
.LABEL $label$28
	*($5) = $6
	CALL $82($18)
	
.LABEL $label$27
	$6 = *($19 + [112])
	if ( ($6 == 0) ){ goto $label$2 }
	$5 = ($19 + [116])
	$18 = *($5)
	if ( ((int_32)$18 == (int_32)$6) ){ goto $label$33 }
	
.LOOP $label$34:
	$18 = ($18 + [-24])
	$7 = *($18)
	*($18) = [0]
	if ( ($7 == 0) ){ goto $label$35 }
	CALL $82($7)
	
.LABEL $label$35
	if ( ((int_32)$6 != (int_32)$18) ){ goto $label$34 }
	$18 = *(($19 + [112]))
	goto $label$32 
	
.LABEL $label$33
	$18 = $6
	
.LABEL $label$32
	*($5) = $6
	CALL $82($18)
	
.LABEL $label$2
	CALL eosio_assert([1], [2096])
	CALL eosio_assert([1], [2144])
	$18 = CALL db_next_i64(*($1 + [20]), ($19 + [168]))
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$36 }
	CALL $58(($19 + [128]), $18)
	
.LABEL $label$36
	CALL $62(($19 + [128]), $1)
	$6 = *($19 + [152])
	if ( ($6 == 0) ){ goto $label$1 }
	$5 = ($19 + [156])
	$18 = *($5)
	if ( ((int_32)$18 == (int_32)$6) ){ goto $label$38 }
	
.LOOP $label$39:
	$18 = ($18 + [-24])
	$7 = *($18)
	*($18) = [0]
	if ( ($7 == 0) ){ goto $label$40 }
	CALL $82($7)
	
.LABEL $label$40
	if ( ((int_32)$6 != (int_32)$18) ){ goto $label$39 }
	$18 = *(($19 + [152]))
	goto $label$37 
	
.LABEL $label$38
	$18 = $6
	
.LABEL $label$37
	*($5) = $6
	CALL $82($18)
	
.LABEL $label$1
	*([0] + [4]) = ($19 + [208])
	(unreachable)
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	*([0] + [4]) = $12
	CALL $45($1, *($1 + [4]))
	$2 = ($1 + [4])
	*($1) = $2
	$10 = [0]
	*($1 + [8]) = [0]
	*($1 + [4]) = [0]
	$6 = *($0 + [4])
	$5 = (int_64)0
	$9 = ($0 + [8])
	
.LOOP $label$1:
	CALL eosio_assert(($6 <= *($9)), [2416])
	$8 = ($0 + [4])
	$6 = *($8)
	$11 = *($6)
	$6 = ($6 + [1])
	*($8) = $6
	$10 = ($10 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($11 & [127]) << $10)) | (int_64)$5)
	$10 = ($10 + [7])
	if ( uint_32($11 >> [7]) ){ goto $label$1 }
	$3 = (CASTING uint_32)(uint_64 $5)
	if ( ($3 == 0) ){ goto $label$2 }
	$4 = ($1 + [4])
	$9 = [0]
	
.LOOP $label$3:
	$11 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($11) - $6) > (uint_32)[7]), [464])
	$8 = ($0 + [4])
	CALL memcpy(($12 + [8]), *($8), [8])
	$6 = (*($8) + [8])
	*($8) = $6
	CALL eosio_assert(((uint_32)(*($11) - $6) > (uint_32)[7]), [464])
	CALL memcpy($12, *($8), [8])
	*($8) = (*($8) + [8])
	$6 = *($2)
	if ( ($6 == 0) ){ goto $label$8 }
	$5 = *($12 + [8])
	$11 = $4
	
.LOOP $label$9:
	$7 = *($6 + [16])
	if ( ((uint_64)$5 >= (uint_64)$7) ){ goto $label$11 }
	$10 = *($6)
	if ( $10 ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$11
	if ( ((uint_64)$7 >= (uint_64)$5) ){ goto $label$6 }
	$11 = ($6 + [4])
	$10 = *($6 + [4])
	if ( ($10 == 0) ){ goto $label$6 }
	$6 = $11
	
.LABEL $label$10
	$11 = $6
	$6 = $10
	goto $label$9 
	
.LABEL $label$8
	$6 = $2
	$11 = $2
	if ( *($11) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$7
	$11 = $6
	
.LABEL $label$6
	if ( *($11) ){ goto $label$4 }
	
.LABEL $label$5
	*(($10 = CALL $81([32]))) = (int_64)0
	*($10 + [8]) = $6
	*($10 + [16]) = *($12 + [8])
	*($10 + [24]) = *($12)
	*($11) = $10
	$6 = *(*($1))
	if ( ($6 == 0) ){ goto $label$12 }
	*($1) = $6
	$10 = *($11)
	
.LABEL $label$12
	CALL $51(*(($1 + [4])), $10)
	*(($6 = ($1 + [8]))) = (*($6) + [1])
	
.LABEL $label$4
	$9 = ($9 + [1])
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$2 }
	$6 = *($8)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($12 + [16])
	return $0
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $3
	if ( $3 ){ goto $label$3 }
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( *($2 + [12]) ){ goto $label$3 }
	$3 = *($2 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$8 }
	if ( *($4 + [12]) ){ goto $label$8 }
	$4 = ($4 + [12])
	goto $label$9 
	
.LABEL $label$10
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( *($4 + [12]) ){ goto $label$6 }
	$4 = ($4 + [12])
	
.LABEL $label$9
	*(($2 + [12])) = [1]
	$2 = ((int_32)$3 == (int_32)$0)
	*($3 + [12]) = $2
	*($4) = [1]
	$1 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$5 }
	$4 = $2
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$2 }
	$4 = *($2 + [4])
	$1 = *($4)
	*($2 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$11
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*($4) = $2
	$3 = *($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	$4 = *($2)
	$1 = *($4 + [4])
	*($2) = $1
	if ( ($1 == 0) ){ goto $label$12 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$12
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*(($4 + [4])) = $2
	$3 = *($4 + [8])
	
.LABEL $label$4
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3 + [4])
	$4 = *($2)
	*($3 + [4]) = $4
	if ( ($4 == 0) ){ goto $label$13 }
	*($4 + [8]) = $3
	
.LABEL $label$13
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*($2) = $3
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	$4 = $2
	
.LABEL $label$1
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3)
	$4 = *($2 + [4])
	*($3) = $4
	if ( ($4 == 0) ){ goto $label$14 }
	*($4 + [8]) = $3
	
.LABEL $label$14
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*(($2 + [4])) = $3
}

void .FUNC _ZN8eosguess5guess4joinEyN5eosio5assetEc (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [224])
	*([0] + [4]) = $9
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($2) > (int_64)9999), [1536])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)1113217284), [2176])
	*((($9 + [200]) + [12])) = *(($2 + [12]))
	*((($9 + [200]) + [8])) = *($2 + [8])
	*($9 + [204]) = *(($2 + [4]))
	*($9 + [200]) = *($2)
	$4 = *($0)
	*((($9 + [184]) + [8])) = [0]
	*($9 + [184]) = (int_64)0
	$8 = CALL strlen([2432])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$4 }
	*($9 + [184]) = ($8 << [1])
	$7 = (($9 + [184]) | [1])
	if ( $8 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $81($6)
	*($9 + [184]) = ($6 | [1])
	*($9 + [192]) = $7
	*($9 + [188]) = $8
	
.LABEL $label$3
	CALL memcpy($7, [2432], $8)
	
.LABEL $label$2
	$6 = [0]
	*(($7 + $8)) = [0]
	*((($9 + [8]) + [8])) = *((($9 + [200]) + [8]))
	*($9 + [8]) = *($9 + [200])
	CALL _ZN8eosguess5guess8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1, $4, ($9 + [8]), ($9 + [184]))
	if ( ((*($9 + [184]) & [1]) == 0) ){ goto $label$5 }
	CALL $82(*($9 + [192]))
	
.LABEL $label$5
	*(($9 + [176])) = [0]
	*($9 + [160]) = (int_64)-1
	$4 = *($0)
	*($9 + [144]) = $4
	*($9 + [152]) = $4
	*($9 + [168]) = (int_64)0
	$8 = CALL db_lowerbound_i64($4, $4, (int_64)7035938290743508992, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$6 = CALL $41(($9 + [144]), $8)
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [2464])
	*($9 + [28]) = [0]
	*($9 + [24]) = ($9 + [144])
	CALL eosio_assert((*(*(CALL $42(($9 + [24])) + [4]) + [12]) == 0), [2480])
	*($9 + [28]) = [0]
	*($9 + [24]) = ($9 + [144])
	$8 = CALL $53(($9 + [24]), *(CALL $42(($9 + [24])) + [4]))
	CALL eosio_assert(((uint_64)((int_64)((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000) & (int_64)4294967295) <= (uint_64)((int_64)*($8 + [8]) + (int_64)240)), [2496])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$24 }
	if ( ($3 == 0) ){ goto $label$25 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$23 }
	$5 = *($2)
	*($8 + [56]) = ((int_64)*($8 + [56]) + (int_64)$5)
	$0 = ($8 + [84])
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$22 }
	$0 = ($8 + [84])
	
.LOOP $label$26:
	$4 = *($2 + [16])
	if ( ((uint_64)$4 <= (uint_64)$1) ){ goto $label$28 }
	$7 = *($2)
	if ( $7 ){ goto $label$27 }
	goto $label$19 
	
.LABEL $label$28
	if ( ((uint_64)$4 >= (uint_64)$1) ){ goto $label$18 }
	$0 = ($2 + [4])
	$7 = *($2 + [4])
	if ( ($7 == 0) ){ goto $label$18 }
	$2 = $0
	
.LABEL $label$27
	$0 = $2
	$2 = $7
	goto $label$26 
	
.LABEL $label$25
	$5 = *($2)
	*($8 + [64]) = ((int_64)*($8 + [64]) + (int_64)$5)
	$0 = ($8 + [96])
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$21 }
	$0 = ($8 + [96])
	
.LOOP $label$29:
	$4 = *($2 + [16])
	if ( ((uint_64)$4 <= (uint_64)$1) ){ goto $label$31 }
	$7 = *($2)
	if ( $7 ){ goto $label$30 }
	goto $label$15 
	
.LABEL $label$31
	if ( ((uint_64)$4 >= (uint_64)$1) ){ goto $label$14 }
	$0 = ($2 + [4])
	$7 = *($2 + [4])
	if ( ($7 == 0) ){ goto $label$14 }
	$2 = $0
	
.LABEL $label$30
	$0 = $2
	$2 = $7
	goto $label$29 
	
.LABEL $label$24
	$5 = *($2)
	*($8 + [72]) = ((int_64)*($8 + [72]) + (int_64)$5)
	$0 = ($8 + [108])
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$20 }
	$0 = ($8 + [108])
	
.LOOP $label$32:
	$4 = *($2 + [16])
	if ( ((uint_64)$4 <= (uint_64)$1) ){ goto $label$34 }
	$7 = *($2)
	if ( $7 ){ goto $label$33 }
	goto $label$11 
	
.LABEL $label$34
	if ( ((uint_64)$4 >= (uint_64)$1) ){ goto $label$10 }
	$0 = ($2 + [4])
	$7 = *($2 + [4])
	if ( ($7 == 0) ){ goto $label$10 }
	$2 = $0
	
.LABEL $label$33
	$0 = $2
	$2 = $7
	goto $label$32 
	
.LABEL $label$23
	CALL eosio_assert([0], [2512])
	goto $label$7 
	
.LABEL $label$22
	$2 = $0
	$7 = *($0)
	if ( $7 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$21
	$2 = $0
	$7 = *($0)
	if ( $7 ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$20
	$2 = $0
	$7 = *($0)
	if ( $7 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$19
	$0 = $2
	
.LABEL $label$18
	$7 = *($0)
	if ( $7 ){ goto $label$16 }
	
.LABEL $label$17
	*(($7 = CALL $81([32]))) = (int_64)0
	*($7 + [8]) = $2
	*($0) = $7
	*($7 + [24]) = (int_64)0
	*($7 + [16]) = $1
	$2 = $7
	$3 = ($8 + [80])
	$6 = *(*($3))
	if ( ($6 == 0) ){ goto $label$35 }
	*($3) = $6
	$2 = *($0)
	
.LABEL $label$35
	CALL $51(*(($8 + [84])), $2)
	*(($2 = ($8 + [88]))) = (*($2) + [1])
	
.LABEL $label$16
	*(($2 = ($7 + [24]))) = ((int_64)*($2) + (int_64)$5)
	goto $label$7 
	
.LABEL $label$15
	$0 = $2
	
.LABEL $label$14
	$7 = *($0)
	if ( $7 ){ goto $label$12 }
	
.LABEL $label$13
	*(($7 = CALL $81([32]))) = (int_64)0
	*($7 + [8]) = $2
	*($0) = $7
	*($7 + [24]) = (int_64)0
	*($7 + [16]) = $1
	$2 = $7
	$3 = ($8 + [92])
	$6 = *(*($3))
	if ( ($6 == 0) ){ goto $label$36 }
	*($3) = $6
	$2 = *($0)
	
.LABEL $label$36
	CALL $51(*(($8 + [96])), $2)
	*(($2 = ($8 + [100]))) = (*($2) + [1])
	
.LABEL $label$12
	*(($2 = ($7 + [24]))) = ((int_64)*($2) + (int_64)$5)
	goto $label$7 
	
.LABEL $label$11
	$0 = $2
	
.LABEL $label$10
	$7 = *($0)
	if ( $7 ){ goto $label$8 }
	
.LABEL $label$9
	*(($7 = CALL $81([32]))) = (int_64)0
	*($7 + [8]) = $2
	*($0) = $7
	*($7 + [24]) = (int_64)0
	*($7 + [16]) = $1
	$2 = $7
	$3 = ($8 + [104])
	$6 = *(*($3))
	if ( ($6 == 0) ){ goto $label$37 }
	*($3) = $6
	$2 = *($0)
	
.LABEL $label$37
	CALL $51(*(($8 + [108])), $2)
	*(($2 = ($8 + [112]))) = (*($2) + [1])
	
.LABEL $label$8
	*(($2 = ($7 + [24]))) = ((int_64)*($2) + (int_64)$5)
	
.LABEL $label$7
	*($9 + [220]) = [0]
	*($9 + [216]) = ($9 + [144])
	$2 = *(CALL $42(($9 + [216])) + [4])
	*($9 + [216]) = $8
	CALL $54(($9 + [144]), $2, ($9 + [216]))
	CALL $45(($8 + [104]), *(($8 + [108])))
	CALL $45(($8 + [92]), *(($8 + [96])))
	CALL $45(($8 + [80]), *(($8 + [84])))
	$0 = *($9 + [168])
	if ( ($0 == 0) ){ goto $label$38 }
	$7 = ($9 + [172])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$40 }
	
.LOOP $label$41:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$42 }
	CALL $45(($2 + [104]), *(($2 + [108])))
	CALL $45(($2 + [92]), *(($2 + [96])))
	CALL $45(($2 + [80]), *(($2 + [84])))
	CALL $82($2)
	
.LABEL $label$42
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$41 }
	$2 = *(($9 + [168]))
	goto $label$39 
	
.LABEL $label$40
	$2 = $0
	
.LABEL $label$39
	*($7) = $0
	CALL $82($2)
	
.LABEL $label$38
	*([0] + [4]) = ($9 + [224])
	return (unreachable)
	
.LABEL $label$1
	CALL $83(($9 + [184]))
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$7 = [0]
	*(($6 = (($2 = CALL memcpy($0, $1, [80])) + [84]))) = [0]
	*($2 + [80]) = $6
	*(($9 = ($2 + [88]))) = [0]
	$3 = ($1 + [84])
	$13 = *($1 + [80])
	if ( ((int_32)$13 == (int_32)$3) ){ goto $label$1 }
	$11 = ($2 + [80])
	$12 = ($2 + [84])
	$0 = $6
	
.LOOP $label$2:
	$4 = ($13 + [16])
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$13 }
	$14 = $7
	if ( ($7 == 0) ){ goto $label$12 }
	
.LOOP $label$14:
	$0 = $14
	$14 = *($0 + [4])
	if ( $14 ){ goto $label$14 }
	goto $label$11 
	
.LABEL $label$13
	$0 = $6
	if ( $7 ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$12
	$14 = $6
	
.LOOP $label$15:
	$0 = *($14 + [8])
	$10 = ((int_32)*($0) == (int_32)$14)
	$14 = $0
	if ( $10 ){ goto $label$15 }
	
.LABEL $label$11
	$5 = *($4)
	if ( ((uint_64)*($0 + [16]) >= (uint_64)$5) ){ goto $label$9 }
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$10
	$7 = ($0 + [4])
	if ( *($7) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$9
	if ( ($7 == 0) ){ goto $label$8 }
	$14 = $6
	
.LOOP $label$16:
	$8 = *($7 + [16])
	if ( ((uint_64)$5 >= (uint_64)$8) ){ goto $label$18 }
	$0 = *($7)
	if ( $0 ){ goto $label$17 }
	goto $label$7 
	
.LABEL $label$18
	if ( ((uint_64)$8 >= (uint_64)$5) ){ goto $label$6 }
	$14 = ($7 + [4])
	$0 = *($7 + [4])
	if ( ($0 == 0) ){ goto $label$5 }
	$7 = $14
	
.LABEL $label$17
	$14 = $7
	$7 = $0
	goto $label$16 
	
.LABEL $label$8
	$0 = $6
	$7 = $6
	if ( *($7) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$7
	$0 = $7
	if ( *($7) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$6
	$0 = $7
	$7 = $14
	if ( *($7) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = $7
	$7 = $14
	if ( *($7) ){ goto $label$3 }
	
.LABEL $label$4
	$14 = CALL $81([32])
	$5 = *(($4 + [8]))
	$8 = *($4)
	*($14) = (int_64)0
	*(($14 + [24])) = $5
	*($14 + [16]) = $8
	*($14 + [8]) = $0
	*($7) = $14
	$0 = *(*($11))
	if ( ($0 == 0) ){ goto $label$19 }
	*($11) = $0
	$14 = *($7)
	
.LABEL $label$19
	CALL $51(*($12), $14)
	*($9) = (*($9) + [1])
	
.LABEL $label$3
	$0 = *($13 + [4])
	if ( ($0 == 0) ){ goto $label$21 }
	
.LOOP $label$22:
	$14 = $0
	$0 = *($14)
	if ( $0 ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$14 = *($13 + [8])
	if ( ((int_32)*($14) == (int_32)$13) ){ goto $label$20 }
	$7 = ($13 + [8])
	
.LOOP $label$23:
	$0 = *($7)
	$7 = ($0 + [8])
	$14 = *($0 + [8])
	if ( ((int_32)$0 != (int_32)*($14)) ){ goto $label$23 }
	
.LABEL $label$20
	if ( ((int_32)$14 == (int_32)$3) ){ goto $label$1 }
	$7 = *($12)
	$0 = *($11)
	$13 = $14
	goto $label$2 
	
.LABEL $label$1
	$7 = [0]
	*(($6 = ($2 + [96]))) = [0]
	*($2 + [92]) = $6
	*(($9 = ($2 + [100]))) = [0]
	$3 = ($1 + [96])
	$13 = *($1 + [92])
	if ( ((int_32)$13 == (int_32)$3) ){ goto $label$24 }
	$11 = ($2 + [92])
	$12 = ($2 + [96])
	$0 = $6
	
.LOOP $label$25:
	$4 = ($13 + [16])
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$36 }
	$14 = $7
	if ( ($7 == 0) ){ goto $label$35 }
	
.LOOP $label$37:
	$0 = $14
	$14 = *($0 + [4])
	if ( $14 ){ goto $label$37 }
	goto $label$34 
	
.LABEL $label$36
	$0 = $6
	if ( $7 ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$35
	$14 = $6
	
.LOOP $label$38:
	$0 = *($14 + [8])
	$10 = ((int_32)*($0) == (int_32)$14)
	$14 = $0
	if ( $10 ){ goto $label$38 }
	
.LABEL $label$34
	$5 = *($4)
	if ( ((uint_64)*($0 + [16]) >= (uint_64)$5) ){ goto $label$32 }
	if ( ($7 == 0) ){ goto $label$31 }
	
.LABEL $label$33
	$7 = ($0 + [4])
	if ( *($7) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$32
	if ( ($7 == 0) ){ goto $label$31 }
	$14 = $6
	
.LOOP $label$39:
	$8 = *($7 + [16])
	if ( ((uint_64)$5 >= (uint_64)$8) ){ goto $label$41 }
	$0 = *($7)
	if ( $0 ){ goto $label$40 }
	goto $label$30 
	
.LABEL $label$41
	if ( ((uint_64)$8 >= (uint_64)$5) ){ goto $label$29 }
	$14 = ($7 + [4])
	$0 = *($7 + [4])
	if ( ($0 == 0) ){ goto $label$28 }
	$7 = $14
	
.LABEL $label$40
	$14 = $7
	$7 = $0
	goto $label$39 
	
.LABEL $label$31
	$0 = $6
	$7 = $6
	if ( *($7) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$30
	$0 = $7
	if ( *($7) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$29
	$0 = $7
	$7 = $14
	if ( *($7) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$28
	$0 = $7
	$7 = $14
	if ( *($7) ){ goto $label$26 }
	
.LABEL $label$27
	$14 = CALL $81([32])
	$5 = *(($4 + [8]))
	$8 = *($4)
	*($14) = (int_64)0
	*(($14 + [24])) = $5
	*($14 + [16]) = $8
	*($14 + [8]) = $0
	*($7) = $14
	$0 = *(*($11))
	if ( ($0 == 0) ){ goto $label$42 }
	*($11) = $0
	$14 = *($7)
	
.LABEL $label$42
	CALL $51(*($12), $14)
	*($9) = (*($9) + [1])
	
.LABEL $label$26
	$0 = *($13 + [4])
	if ( ($0 == 0) ){ goto $label$44 }
	
.LOOP $label$45:
	$14 = $0
	$0 = *($14)
	if ( $0 ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	$14 = *($13 + [8])
	if ( ((int_32)*($14) == (int_32)$13) ){ goto $label$43 }
	$7 = ($13 + [8])
	
.LOOP $label$46:
	$0 = *($7)
	$7 = ($0 + [8])
	$14 = *($0 + [8])
	if ( ((int_32)$0 != (int_32)*($14)) ){ goto $label$46 }
	
.LABEL $label$43
	if ( ((int_32)$14 == (int_32)$3) ){ goto $label$24 }
	$7 = *($12)
	$0 = *($11)
	$13 = $14
	goto $label$25 
	
.LABEL $label$24
	$7 = [0]
	*(($6 = ($2 + [108]))) = [0]
	*($2 + [104]) = $6
	*(($9 = ($2 + [112]))) = [0]
	$3 = ($1 + [108])
	$13 = *($1 + [104])
	if ( ((int_32)$13 == (int_32)$3) ){ goto $label$47 }
	$11 = ($2 + [104])
	$12 = ($2 + [108])
	$0 = $6
	
.LOOP $label$48:
	$4 = ($13 + [16])
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$59 }
	$14 = $7
	if ( ($7 == 0) ){ goto $label$58 }
	
.LOOP $label$60:
	$0 = $14
	$14 = *($0 + [4])
	if ( $14 ){ goto $label$60 }
	goto $label$57 
	
.LABEL $label$59
	$0 = $6
	if ( $7 ){ goto $label$56 }
	goto $label$54 
	
.LABEL $label$58
	$14 = $6
	
.LOOP $label$61:
	$0 = *($14 + [8])
	$10 = ((int_32)*($0) == (int_32)$14)
	$14 = $0
	if ( $10 ){ goto $label$61 }
	
.LABEL $label$57
	$5 = *($4)
	if ( ((uint_64)*($0 + [16]) >= (uint_64)$5) ){ goto $label$55 }
	if ( ($7 == 0) ){ goto $label$54 }
	
.LABEL $label$56
	$7 = ($0 + [4])
	if ( *($7) ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$55
	if ( ($7 == 0) ){ goto $label$54 }
	$14 = $6
	
.LOOP $label$62:
	$8 = *($7 + [16])
	if ( ((uint_64)$5 >= (uint_64)$8) ){ goto $label$64 }
	$0 = *($7)
	if ( $0 ){ goto $label$63 }
	goto $label$53 
	
.LABEL $label$64
	if ( ((uint_64)$8 >= (uint_64)$5) ){ goto $label$52 }
	$14 = ($7 + [4])
	$0 = *($7 + [4])
	if ( ($0 == 0) ){ goto $label$51 }
	$7 = $14
	
.LABEL $label$63
	$14 = $7
	$7 = $0
	goto $label$62 
	
.LABEL $label$54
	$0 = $6
	$7 = $6
	if ( *($7) ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$53
	$0 = $7
	if ( *($7) ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$52
	$0 = $7
	$7 = $14
	if ( *($7) ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$51
	$0 = $7
	$7 = $14
	if ( *($7) ){ goto $label$49 }
	
.LABEL $label$50
	$14 = CALL $81([32])
	$5 = *(($4 + [8]))
	$8 = *($4)
	*($14) = (int_64)0
	*(($14 + [24])) = $5
	*($14 + [16]) = $8
	*($14 + [8]) = $0
	*($7) = $14
	$0 = *(*($11))
	if ( ($0 == 0) ){ goto $label$65 }
	*($11) = $0
	$14 = *($7)
	
.LABEL $label$65
	CALL $51(*($12), $14)
	*($9) = (*($9) + [1])
	
.LABEL $label$49
	$0 = *($13 + [4])
	if ( ($0 == 0) ){ goto $label$67 }
	
.LOOP $label$68:
	$14 = $0
	$0 = *($14)
	if ( $0 ){ goto $label$68 }
	goto $label$66 
	
.LABEL $label$67
	$14 = *($13 + [8])
	if ( ((int_32)*($14) == (int_32)$13) ){ goto $label$66 }
	$7 = ($13 + [8])
	
.LOOP $label$69:
	$0 = *($7)
	$7 = ($0 + [8])
	$14 = *($0 + [8])
	if ( ((int_32)$0 != (int_32)*($14)) ){ goto $label$69 }
	
.LABEL $label$66
	if ( ((int_32)$14 == (int_32)$3) ){ goto $label$47 }
	$7 = *($12)
	$0 = *($11)
	$13 = $14
	goto $label$48 
	
.LABEL $label$47
	return $2
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$19 = (*([0] + [4]) - [80])
	$18 = $19
	*([0] + [4]) = $19
	CALL eosio_assert(((int_32)*($1 + [116]) == (int_32)$0), [720])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [768])
	$3 = *($1)
	$1 = CALL memcpy($1, $2, [80])
	$2 = *($2)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$1 }
	CALL $55(($1 + [80]), *($2 + [80]), ($2 + [84]))
	CALL $55(($1 + [92]), *($2 + [92]), ($2 + [96]))
	CALL $55(($1 + [104]), *($2 + [104]), ($2 + [108]))
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [944])
	*($18 + [16]) = [0]
	*($18) = ($18 + [16])
	$4 = ($1 + [8])
	*($18 + [28]) = $4
	*($18 + [24]) = $1
	$5 = ($1 + [12])
	*($18 + [32]) = $5
	$6 = ($1 + [16])
	*($18 + [36]) = $6
	$7 = ($1 + [24])
	*($18 + [40]) = $7
	$8 = ($1 + [32])
	*($18 + [44]) = $8
	$9 = ($1 + [40])
	*($18 + [48]) = $9
	$10 = ($1 + [48])
	*($18 + [52]) = $10
	$11 = ($1 + [56])
	*($18 + [56]) = $11
	$12 = ($1 + [64])
	*($18 + [60]) = $12
	$13 = ($1 + [72])
	*($18 + [64]) = $13
	$14 = ($1 + [80])
	*($18 + [68]) = $14
	$15 = ($1 + [92])
	*($18 + [72]) = $15
	$16 = ($1 + [104])
	*($18 + [76]) = $16
	CALL $46(($18 + [24]), $18)
	$17 = *($18 + [16])
	if ( ($17 <= [513]) ){ goto $label$3 }
	$2 = CALL malloc($17)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($19 - (($17 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$2
	*($18 + [4]) = $2
	*($18) = $2
	*($18 + [8]) = ($2 + $17)
	*($18 + [16]) = $18
	*($18 + [28]) = $4
	*($18 + [32]) = $5
	*($18 + [36]) = $6
	*($18 + [40]) = $7
	*($18 + [44]) = $8
	*($18 + [48]) = $9
	*($18 + [24]) = $1
	*($18 + [52]) = $10
	*($18 + [56]) = $11
	*($18 + [60]) = $12
	*($18 + [64]) = $13
	*($18 + [68]) = $14
	*($18 + [72]) = $15
	*($18 + [76]) = $16
	CALL $47(($18 + [24]), ($18 + [16]))
	CALL db_update_i64(*($1 + [120]), (int_64)0, $2, $17)
	if ( ($17 <= [513]) ){ goto $label$4 }
	CALL free($2)
	
.LABEL $label$4
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($18 + [80])
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [352])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [352])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC _ZN8eosguess5guess3endEx (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [416])
	*([0] + [4]) = $14
	*($14 + [368]) = $1
	$10 = (int_64)0
	$7 = (int_64)59
	$11 = [1568]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$2 }
	$13 = *($11)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$13 = ($13 + [165])
	goto $label$3 
	
.LABEL $label$4
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($13 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$11 = ($11 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($8)
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [2240])
	$13 = [0]
	*((($14 + [328]) + [32])) = [0]
	*($14 + [344]) = (int_64)-1
	$10 = *($0)
	*($14 + [328]) = $10
	*($14 + [336]) = $10
	*($14 + [352]) = (int_64)0
	*(($14 + [312])) = [0]
	*(($12 = ($14 + [320]))) = [0]
	*($14 + [308]) = ($14 + [328])
	*($14 + [316]) = ($14 + [328])
	$11 = [0]
	$6 = CALL db_lowerbound_i64($10, $10, (int_64)7035938290743508992, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$11 = CALL $41(($14 + [328]), $6)
	
.LABEL $label$5
	CALL eosio_assert(((int_32)*($12) != (int_32)$11), [2464])
	$11 = ($14 + [316])
	*($14 + [240]) = *($11)
	CALL eosio_assert((*(*(CALL $42(($14 + [240])) + [4]) + [12]) == 0), [2480])
	$10 = CALL current_time()
	*($14 + [240]) = *($11)
	CALL eosio_assert(((uint_64)((int_64)((uint_64)$10 / (uint_64)(int_64)1000000) & (int_64)4294967295) >= (uint_64)((int_64)*(*(CALL $42(($14 + [240])) + [4]) + [8]) + (int_64)300)), [2528])
	*($14 + [296]) = [0]
	*($14 + [292]) = [0]
	$3 = (($14 + [288]) | [4])
	*($14 + [288]) = $3
	*($14 + [280]) = (int_64)0
	*($14 + [240]) = *($11)
	$12 = *(CALL $42(($14 + [240])) + [4])
	*($14 + [244]) = ($14 + [304])
	*($14 + [240]) = ($14 + [368])
	*($14 + [248]) = ($14 + [288])
	*($14 + [252]) = ($14 + [280])
	CALL $57(($14 + [328]), $12, ($14 + [240]))
	*((($14 + [240]) + [32])) = [0]
	*($14 + [256]) = (int_64)-1
	*($14 + [264]) = (int_64)0
	$10 = *($0)
	*($14 + [240]) = $10
	*($14 + [248]) = $10
	$12 = CALL db_find_i64($10, $10, (int_64)-7949128877345865728, (int_64)4348505)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$6 }
	$13 = CALL $11(($14 + [240]), $12)
	CALL eosio_assert(((int_32)*($13 + [72]) == (int_32)($14 + [240])), [64])
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [1696])
	*(($14 + [232])) = [0]
	*($14 + [216]) = (int_64)-1
	*($14 + [224]) = (int_64)0
	$10 = *($0)
	*($14 + [200]) = $10
	*($14 + [208]) = $10
	*($14 + [384]) = *($11)
	$10 = ((int_64)(CASTING uint_64)(uint_32 ((uint_32)*(*(CALL $42(($14 + [384])) + [4]) + [12]) / (uint_32)[86400])) * (int_64)86400)
	$4 = *($14 + [224])
	$12 = *(($14 + [228]))
	if ( ((int_32)$12 == (int_32)$4) ){ goto $label$7 }
	$11 = ($12 + [-24])
	$6 = ([0] - $4)
	
.LOOP $label$8:
	if ( ((int_64)*(*($11)) == (int_64)$10) ){ goto $label$7 }
	$12 = $11
	$13 = ($11 + [-24])
	$11 = $13
	if ( ((int_32)($13 + $6) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$12 == (int_32)$4) ){ goto $label$12 }
	$11 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($14 + [200])), [64])
	if ( $11 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$11 = CALL db_find_i64(*($14 + [200]), *(($14 + [208])), (int_64)-4373710648386892288, $10)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$10 }
	$11 = CALL $58(($14 + [200]), $11)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($14 + [200])), [64])
	
.LABEL $label$11
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($14 + [200])), [720])
	CALL eosio_assert(((int_64)*($14 + [200]) == (int_64)CALL $fimport$3()), [768])
	$13 = *($11)
	*($14 + [408]) = *((($14 + [304]) + [12]))
	$12 = CALL $42(($14 + [408]))
	*($11 + [8]) = ((int_64)*($11 + [8]) + (int_64)*(*($12 + [4]) + [48]))
	CALL eosio_assert(((int_32)$13 == (int_32)*($11)), [944])
	CALL eosio_assert([1], [352])
	CALL memcpy(($14 + [384]), $11, [4])
	CALL eosio_assert([1], [352])
	CALL memcpy((($14 + [384]) | [4]), ($11 + [8]), [8])
	CALL db_update_i64(*($11 + [20]), (int_64)0, ($14 + [384]), [12])
	$11 = ($14 + [216])
	$10 = (CASTING uint_64)(uint_32 $13)
	if ( (uint_64)($10 <= *($11)) ){ goto $label$9 }
	*($11) = ((int_64)$10 + (int_64)1)
	goto $label$9 
	
.LABEL $label$10
	CALL _ZN8eosguess5guess8snapshotEv($0)
	$7 = *($0)
	CALL eosio_assert(((int_64)*($14 + [200]) == (int_64)CALL $fimport$3()), [176])
	*(($11 = CALL $81([32])) + [16]) = ($14 + [200])
	*($11) = $10
	*($14 + [408]) = *((($14 + [304]) + [12]))
	*($11 + [8]) = *(*(CALL $42(($14 + [408])) + [4]) + [48])
	CALL eosio_assert([1], [352])
	CALL memcpy(($14 + [384]), $11, [4])
	CALL eosio_assert([1], [352])
	CALL memcpy((($14 + [384]) | [4]), ($11 + [8]), [8])
	$10 = *($11)
	$12 = CALL db_store_i64(*((($14 + [200]) + [8])), (int_64)-4373710648386892288, $7, $10, ($14 + [384]), [12])
	*($11 + [20]) = $12
	$13 = ($14 + [216])
	if ( (uint_64)($10 <= *($13)) ){ goto $label$13 }
	*($13) = ((int_64)$10 + (int_64)1)
	
.LABEL $label$13
	*($14 + [408]) = $11
	$10 = *($11)
	*($14 + [384]) = $10
	*($14 + [380]) = $12
	$6 = ($14 + [228])
	$13 = *($6)
	if ( ((uint_32)$13 >= (uint_32)*((($14 + [200]) + [32]))) ){ goto $label$15 }
	*($13 + [8]) = $10
	*($13 + [16]) = $12
	*($14 + [408]) = [0]
	*($13) = $11
	*($6) = ($13 + [24])
	goto $label$14 
	
.LABEL $label$15
	CALL $60(($14 + [224]), ($14 + [408]), ($14 + [384]), ($14 + [380]))
	
.LABEL $label$14
	$11 = *($14 + [408])
	*($14 + [408]) = [0]
	if ( ($11 == 0) ){ goto $label$9 }
	CALL $82($11)
	
.LABEL $label$9
	$11 = ($14 + [316])
	*($14 + [384]) = *($11)
	if ( ((int_32)*(*(CALL $42(($14 + [384])) + [4]) + [32]) != (int_32)[254]) ){ goto $label$21 }
	*($14 + [384]) = *($11)
	if ( (*((*(CALL $42(($14 + [384])) + [4]) + [88])) == 0) ){ goto $label$22 }
	$3 = ($14 + [316])
	*($14 + [384]) = *($3)
	$13 = *(*(CALL $42(($14 + [384])) + [4]) + [80])
	*($14 + [408]) = $13
	*($14 + [384]) = *($3)
	if ( ((int_32)$13 == (int_32)(*(CALL $42(($14 + [384])) + [4]) + [84])) ){ goto $label$22 }
	$5 = (($14 + [168]) | [1])
	$6 = (($14 + [184]) + [8])
	
.LOOP $label$23:
	*($6) = (int_64)1113217284
	$10 = *($13 + [24])
	*($14 + [184]) = $10
	$7 = *($13 + [16])
	$9 = *($0)
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$10 = (int_64)4348505
	$11 = [0]
	
.LOOP $label$25:
	$13 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	
.LOOP $label$27:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$27 }
	
.LABEL $label$26
	$13 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	CALL eosio_assert($13, [304])
	*(($12 = (($14 + [168]) + [8]))) = [0]
	*($14 + [168]) = (int_64)0
	$11 = CALL strlen([2592])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$19 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$30 }
	*($14 + [168]) = ($11 << [1])
	$13 = $5
	if ( $11 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$4 = (($11 + [16]) & [-16])
	$13 = CALL $81($4)
	*($12) = $13
	*($14 + [168]) = ($4 | [1])
	*($14 + [172]) = $11
	
.LABEL $label$29
	CALL memcpy($13, [2592], $11)
	
.LABEL $label$28
	*(($13 + $11)) = [0]
	*((($14 + [40]) + [8])) = *($6)
	*($14 + [40]) = *($14 + [184])
	CALL _ZN8eosguess5guess8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $9, $7, ($14 + [40]), ($14 + [168]))
	if ( ((*($14 + [168]) & [1]) == 0) ){ goto $label$31 }
	CALL $82(*($12))
	
.LABEL $label$31
	$12 = *($14 + [408])
	$11 = *($12 + [4])
	if ( ($11 == 0) ){ goto $label$33 }
	
.LOOP $label$34:
	$13 = $11
	$11 = *($13)
	if ( $11 ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	$13 = *($12 + [8])
	if ( ((int_32)*($13) == (int_32)$12) ){ goto $label$32 }
	$12 = ($12 + [8])
	
.LOOP $label$35:
	$11 = *($12)
	$12 = ($11 + [8])
	$13 = *($11 + [8])
	if ( ((int_32)$11 != (int_32)*($13)) ){ goto $label$35 }
	
.LABEL $label$32
	*($14 + [408]) = $13
	*($14 + [384]) = *($3)
	if ( ((int_32)$13 != (int_32)(*(CALL $42(($14 + [384])) + [4]) + [84])) ){ goto $label$23 }
	
.LABEL $label$22
	$2 = ($14 + [316])
	*($14 + [384]) = *($2)
	if ( (*((*(CALL $42(($14 + [384])) + [4]) + [100])) == 0) ){ goto $label$36 }
	*($14 + [384]) = *($2)
	$13 = *(*(CALL $42(($14 + [384])) + [4]) + [92])
	*($14 + [408]) = $13
	*($14 + [384]) = *($2)
	if ( ((int_32)$13 == (int_32)(*(CALL $42(($14 + [384])) + [4]) + [96])) ){ goto $label$36 }
	$5 = (($14 + [136]) | [1])
	$6 = (($14 + [152]) + [8])
	$3 = ($14 + [316])
	
.LOOP $label$37:
	*($6) = (int_64)1113217284
	$10 = *($13 + [24])
	*($14 + [152]) = $10
	$7 = *($13 + [16])
	$9 = *($0)
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$10 = (int_64)4348505
	$11 = [0]
	
.LOOP $label$39:
	$13 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$38 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$40 }
	
.LOOP $label$41:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$38 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$41 }
	
.LABEL $label$40
	$13 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$39 }
	
.LABEL $label$38
	CALL eosio_assert($13, [304])
	*(($12 = (($14 + [136]) + [8]))) = [0]
	*($14 + [136]) = (int_64)0
	$11 = CALL strlen([2592])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$18 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$44 }
	*($14 + [136]) = ($11 << [1])
	$13 = $5
	if ( $11 ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	$4 = (($11 + [16]) & [-16])
	$13 = CALL $81($4)
	*($12) = $13
	*($14 + [136]) = ($4 | [1])
	*($14 + [140]) = $11
	
.LABEL $label$43
	CALL memcpy($13, [2592], $11)
	
.LABEL $label$42
	*(($13 + $11)) = [0]
	*((($14 + [24]) + [8])) = *($6)
	*($14 + [24]) = *($14 + [152])
	CALL _ZN8eosguess5guess8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $9, $7, ($14 + [24]), ($14 + [136]))
	if ( ((*($14 + [136]) & [1]) == 0) ){ goto $label$45 }
	CALL $82(*($12))
	
.LABEL $label$45
	$12 = *($14 + [408])
	$11 = *($12 + [4])
	if ( ($11 == 0) ){ goto $label$47 }
	
.LOOP $label$48:
	$13 = $11
	$11 = *($13)
	if ( $11 ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$47
	$13 = *($12 + [8])
	if ( ((int_32)*($13) == (int_32)$12) ){ goto $label$46 }
	$12 = ($12 + [8])
	
.LOOP $label$49:
	$11 = *($12)
	$12 = ($11 + [8])
	$13 = *($11 + [8])
	if ( ((int_32)$11 != (int_32)*($13)) ){ goto $label$49 }
	
.LABEL $label$46
	*($14 + [408]) = $13
	*($14 + [384]) = *($3)
	if ( ((int_32)$13 != (int_32)(*(CALL $42(($14 + [384])) + [4]) + [96])) ){ goto $label$37 }
	
.LABEL $label$36
	*($14 + [384]) = *($2)
	if ( (*((*(CALL $42(($14 + [384])) + [4]) + [112])) == 0) ){ goto $label$20 }
	$3 = ($14 + [316])
	*($14 + [384]) = *($3)
	$13 = *(*(CALL $42(($14 + [384])) + [4]) + [104])
	*($14 + [408]) = $13
	*($14 + [384]) = *($3)
	if ( ((int_32)$13 == (int_32)(*(CALL $42(($14 + [384])) + [4]) + [108])) ){ goto $label$20 }
	$5 = (($14 + [104]) | [1])
	$6 = (($14 + [120]) + [8])
	
.LOOP $label$50:
	*($6) = (int_64)1113217284
	$10 = *($13 + [24])
	*($14 + [120]) = $10
	$7 = *($13 + [16])
	$9 = *($0)
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$10 = (int_64)4348505
	$11 = [0]
	
.LOOP $label$52:
	$13 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$51 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$53 }
	
.LOOP $label$54:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$51 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$54 }
	
.LABEL $label$53
	$13 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$52 }
	
.LABEL $label$51
	CALL eosio_assert($13, [304])
	*(($12 = (($14 + [104]) + [8]))) = [0]
	*($14 + [104]) = (int_64)0
	$11 = CALL strlen([2592])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$57 }
	*($14 + [104]) = ($11 << [1])
	$13 = $5
	if ( $11 ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$57
	$4 = (($11 + [16]) & [-16])
	$13 = CALL $81($4)
	*($12) = $13
	*($14 + [104]) = ($4 | [1])
	*($14 + [108]) = $11
	
.LABEL $label$56
	CALL memcpy($13, [2592], $11)
	
.LABEL $label$55
	*(($13 + $11)) = [0]
	*((($14 + [8]) + [8])) = *($6)
	*($14 + [8]) = *($14 + [120])
	CALL _ZN8eosguess5guess8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $9, $7, ($14 + [8]), ($14 + [104]))
	if ( ((*($14 + [104]) & [1]) == 0) ){ goto $label$58 }
	CALL $82(*($12))
	
.LABEL $label$58
	$12 = *($14 + [408])
	$11 = *($12 + [4])
	if ( ($11 == 0) ){ goto $label$60 }
	
.LOOP $label$61:
	$13 = $11
	$11 = *($13)
	if ( $11 ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$60
	$13 = *($12 + [8])
	if ( ((int_32)*($13) == (int_32)$12) ){ goto $label$59 }
	$12 = ($12 + [8])
	
.LOOP $label$62:
	$11 = *($12)
	$12 = ($11 + [8])
	$13 = *($11 + [8])
	if ( ((int_32)$11 != (int_32)*($13)) ){ goto $label$62 }
	
.LABEL $label$59
	*($14 + [408]) = $13
	*($14 + [384]) = *($3)
	if ( ((int_32)$13 != (int_32)(*(CALL $42(($14 + [384])) + [4]) + [108])) ){ goto $label$50 }
	goto $label$20 
	
.LABEL $label$21
	if ( (*(($14 + [296])) == 0) ){ goto $label$20 }
	$13 = *($14 + [288])
	*($14 + [408]) = $13
	if ( ((int_32)$13 == (int_32)$3) ){ goto $label$20 }
	$2 = (($14 + [72]) | [1])
	$4 = ($14 + [316])
	$6 = (($14 + [88]) + [8])
	
.LOOP $label$63:
	$10 = *($13 + [24])
	*($14 + [384]) = *($4)
	$11 = *(CALL $42(($14 + [384])) + [4])
	*($6) = (int_64)1113217284
	$10 = (int_64)((int_64)((int_64)$10 + (int_64)((int_64)((int_64)$10 * (int_64)*($11 + [40])) / (int_64)*($14 + [280]))) << (int_64)32) >> (int_64)32
	*($14 + [88]) = $10)
	$7 = *($13 + [16])
	$9 = *($0)
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [368])
	$10 = (int_64)4348505
	$11 = [0]
	
.LOOP $label$65:
	$13 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$64 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$66 }
	
.LOOP $label$67:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$64 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$67 }
	
.LABEL $label$66
	$13 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$65 }
	
.LABEL $label$64
	CALL eosio_assert($13, [304])
	*(($12 = (($14 + [72]) + [8]))) = [0]
	*($14 + [72]) = (int_64)0
	$11 = CALL strlen([2592])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$70 }
	*($14 + [72]) = ($11 << [1])
	$13 = $2
	if ( $11 ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$70
	$5 = (($11 + [16]) & [-16])
	$13 = CALL $81($5)
	*($12) = $13
	*($14 + [72]) = ($5 | [1])
	*($14 + [76]) = $11
	
.LABEL $label$69
	CALL memcpy($13, [2592], $11)
	
.LABEL $label$68
	*(($13 + $11)) = [0]
	*((($14 + [56]) + [8])) = *($6)
	*($14 + [56]) = *($14 + [88])
	CALL _ZN8eosguess5guess8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $9, $7, ($14 + [56]), ($14 + [72]))
	if ( ((*($14 + [72]) & [1]) == 0) ){ goto $label$71 }
	CALL $82(*($12))
	
.LABEL $label$71
	$12 = *($14 + [408])
	$11 = *($12 + [4])
	if ( ($11 == 0) ){ goto $label$73 }
	
.LOOP $label$74:
	$13 = $11
	$11 = *($13)
	if ( $11 ){ goto $label$74 }
	goto $label$72 
	
.LABEL $label$73
	$13 = *($12 + [8])
	if ( ((int_32)*($13) == (int_32)$12) ){ goto $label$72 }
	$12 = ($12 + [8])
	
.LOOP $label$75:
	$11 = *($12)
	$12 = ($11 + [8])
	$13 = *($11 + [8])
	if ( ((int_32)$11 != (int_32)*($13)) ){ goto $label$75 }
	
.LABEL $label$72
	*($14 + [408]) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$63 }
	
.LABEL $label$20
	*($14 + [384]) = *(($14 + [316]))
	CALL $61(($14 + [328]), *(CALL $42(($14 + [384])) + [4]))
	$12 = *($14 + [224])
	if ( ($12 == 0) ){ goto $label$76 }
	$0 = ($14 + [228])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$78 }
	
.LOOP $label$79:
	$11 = ($11 + [-24])
	$13 = *($11)
	*($11) = [0]
	if ( ($13 == 0) ){ goto $label$80 }
	CALL $82($13)
	
.LABEL $label$80
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$79 }
	$11 = *(($14 + [224]))
	goto $label$77 
	
.LABEL $label$78
	$11 = $12
	
.LABEL $label$77
	*($0) = $12
	CALL $82($11)
	
.LABEL $label$76
	$12 = *($14 + [264])
	if ( ($12 == 0) ){ goto $label$81 }
	$0 = ($14 + [268])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$83 }
	
.LOOP $label$84:
	$11 = ($11 + [-24])
	$13 = *($11)
	*($11) = [0]
	if ( ($13 == 0) ){ goto $label$85 }
	CALL $82($13)
	
.LABEL $label$85
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$84 }
	$11 = *(($14 + [264]))
	goto $label$82 
	
.LABEL $label$83
	$11 = $12
	
.LABEL $label$82
	*($0) = $12
	CALL $82($11)
	
.LABEL $label$81
	CALL $45(($14 + [288]), *($14 + [292]))
	$12 = *($14 + [352])
	if ( ($12 == 0) ){ goto $label$86 }
	$0 = ($14 + [356])
	$13 = *($0)
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$88 }
	
.LOOP $label$89:
	$13 = ($13 + [-24])
	$11 = *($13)
	*($13) = [0]
	if ( ($11 == 0) ){ goto $label$90 }
	CALL $45(($11 + [104]), *(($11 + [108])))
	CALL $45(($11 + [92]), *(($11 + [96])))
	CALL $45(($11 + [80]), *(($11 + [84])))
	CALL $82($11)
	
.LABEL $label$90
	if ( ((int_32)$12 != (int_32)$13) ){ goto $label$89 }
	$11 = *(($14 + [352]))
	goto $label$87 
	
.LABEL $label$88
	$11 = $12
	
.LABEL $label$87
	*($0) = $12
	CALL $82($11)
	
.LABEL $label$86
	*([0] + [4]) = ($14 + [416])
	return (unreachable)
	
.LABEL $label$19
	CALL $83(($14 + [168]))
	
.LABEL $label$18
	CALL $83(($14 + [136]))
	
.LABEL $label$17
	CALL $83(($14 + [104]))
	
.LABEL $label$16
	CALL $83(($14 + [72]))
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $57 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	$22 = (*([0] + [4]) - [80])
	*([0] + [4]) = $22
	CALL eosio_assert(((int_32)*($1 + [116]) == (int_32)$0), [720])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [768])
	$3 = *($1)
	*($1 + [12]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($1 + [24]) = *(*($2))
	*(($21 = $22) + [24]) = *(*($2 + [4]) + [12 align=4])
	$4 = ($1 + [24])
	if ( ((int_64)*(*(CALL $42(($21 + [24])) + [4]) + [56]) != (int_64)0) ){ goto $label$7 }
	*($21 + [24]) = *(*(($2 + [4])) + [12 align=4])
	if ( (int_64)(*(*(CALL $42(($21 + [24])) + [4]) + [64]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$13 = ($2 + [4])
	*($21 + [24]) = *(*($13) + [12 align=4])
	if ( ((int_64)*(*(CALL $42(($21 + [24])) + [4]) + [56]) != (int_64)0) ){ goto $label$8 }
	*($21 + [24]) = *(*($13) + [12 align=4])
	if ( (int_64)(*(*(CALL $42(($21 + [24])) + [4]) + [72]) == 0) ){ goto $label$6 }
	
.LABEL $label$8
	*($21 + [24]) = *(*($13) + [12 align=4])
	if ( ((int_64)*(*(CALL $42(($21 + [24])) + [4]) + [64]) != (int_64)0) ){ goto $label$9 }
	*($21 + [24]) = *(*(($2 + [4])) + [12 align=4])
	if ( ((int_64)*(*(CALL $42(($21 + [24])) + [4]) + [72]) == (int_64)0) ){ goto $label$6 }
	
.LABEL $label$9
	$20 = ($1 + [16])
	$6 = *($1 + [16])
	$5 = *(*($2))
	if ( ((int_64)$5 <= (int_64)$6) ){ goto $label$5 }
	*($1 + [32]) = [1]
	$15 = ($1 + [72])
	$16 = ($1 + [64])
	$17 = ($1 + [56])
	$19 = ($1 + [32])
	$5 = ((int_64)*($1 + [72]) + (int_64)*($1 + [64]))
	$6 = *($1 + [56])
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$4 }
	$14 = ((int_64)((int_64)$5 * (int_64)9) / (int_64)10)
	*($1 + [40]) = $14
	*($1 + [48]) = (int_64))($5 - $14)
	$18 = ($1 + [80])
	$13 = *($2 + [8])
	if ( ((int_32)$13 == (int_32)$18) ){ goto $label$10 }
	CALL $55($13, *($18), ($1 + [84]))
	$6 = *(($1 + [56]))
	
.LABEL $label$10
	$18 = ($1 + [48])
	*(*($2 + [12])) = $6
	goto $label$1 
	
.LABEL $label$6
	*($1 + [48]) = (int_64)0
	*($1 + [32]) = [254]
	*($1 + [40]) = (int_64)0
	$15 = ($1 + [72])
	$16 = ($1 + [64])
	$17 = ($1 + [56])
	$20 = ($1 + [16])
	$18 = ($1 + [48])
	$19 = ($1 + [32])
	goto $label$1 
	
.LABEL $label$5
	$19 = ($1 + [32])
	if ( ((int_64)$5 != (int_64)$6) ){ goto $label$11 }
	*(($1 + [32])) = [0]
	$15 = ($1 + [72])
	$17 = ($1 + [56])
	$16 = ($1 + [64])
	$5 = ((int_64)*($1 + [72]) + (int_64)*($1 + [56]))
	$6 = *($1 + [64])
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$3 }
	$14 = ((int_64)((int_64)$5 * (int_64)9) / (int_64)10)
	*($1 + [40]) = $14
	*($1 + [48]) = (int_64))($5 - $14)
	$18 = ($1 + [92])
	$13 = *($2 + [8])
	if ( ((int_32)$13 == (int_32)$18) ){ goto $label$12 }
	CALL $55($13, *($18), ($1 + [96]))
	$6 = *(($1 + [64]))
	
.LABEL $label$12
	$18 = ($1 + [48])
	*(*($2 + [12])) = $6
	goto $label$1 
	
.LABEL $label$11
	*(($1 + [32])) = [255]
	$16 = ($1 + [64])
	$17 = ($1 + [56])
	$15 = ($1 + [72])
	$5 = ((int_64)*($1 + [64]) + (int_64)*($1 + [56]))
	$6 = *($1 + [72])
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$2 }
	$14 = ((int_64)((int_64)$5 * (int_64)9) / (int_64)10)
	*($1 + [40]) = $14
	*($1 + [48]) = (int_64))($5 - $14)
	$18 = ($1 + [104])
	$13 = *($2 + [8])
	if ( ((int_32)$13 == (int_32)$18) ){ goto $label$13 }
	CALL $55($13, *($18), ($1 + [108]))
	$6 = *(($1 + [72]))
	
.LABEL $label$13
	$18 = ($1 + [48])
	*(*($2 + [12])) = $6
	goto $label$1 
	
.LABEL $label$4
	*($1 + [48]) = $5
	$18 = ($1 + [48])
	goto $label$1 
	
.LABEL $label$3
	*($1 + [48]) = $5
	$18 = ($1 + [48])
	goto $label$1 
	
.LABEL $label$2
	*($1 + [48]) = $5
	$18 = ($1 + [48])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [944])
	*($21 + [16]) = [0]
	*($21) = ($21 + [16])
	$7 = ($1 + [8])
	*($21 + [28]) = $7
	*($21 + [24]) = $1
	$8 = ($1 + [12])
	*($21 + [32]) = $8
	*($21 + [36]) = $20
	*($21 + [40]) = $4
	*($21 + [44]) = $19
	$9 = ($1 + [40])
	*($21 + [48]) = $9
	*($21 + [52]) = $18
	*($21 + [56]) = $17
	*($21 + [60]) = $16
	*($21 + [64]) = $15
	$10 = ($1 + [80])
	*($21 + [68]) = $10
	$11 = ($1 + [92])
	*($21 + [72]) = $11
	$12 = ($1 + [104])
	*($21 + [76]) = $12
	CALL $46(($21 + [24]), $21)
	$13 = *($21 + [16])
	if ( ($13 <= [513]) ){ goto $label$15 }
	$2 = CALL malloc($13)
	goto $label$14 
	
.LABEL $label$15
	$2 = ($22 - (($13 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$14
	*($21 + [4]) = $2
	*($21) = $2
	*($21 + [8]) = ($2 + $13)
	*($21 + [16]) = $21
	*($21 + [28]) = $7
	*($21 + [32]) = $8
	*($21 + [36]) = $20
	*($21 + [40]) = $4
	*($21 + [44]) = $19
	*($21 + [48]) = $9
	*($21 + [24]) = $1
	*($21 + [52]) = $18
	*($21 + [56]) = $17
	*($21 + [60]) = $16
	*($21 + [64]) = $15
	*($21 + [68]) = $10
	*($21 + [72]) = $11
	*($21 + [76]) = $12
	CALL $47(($21 + [24]), ($21 + [16]))
	CALL db_update_i64(*($1 + [120]), (int_64)0, $2, $13)
	if ( ($13 <= [513]) ){ goto $label$16 }
	CALL free($2)
	
.LABEL $label$16
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$17 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*([0] + [4]) = ($21 + [80])
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [352])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [352])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $36(*($1), ($0 + [32]))
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $32($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [352])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [352])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $34(CALL $33($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $28 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $81([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $32($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $35(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (*($0 + [8]) == 0) ){ goto $label$2 }
	$10 = *($0)
	$3 = ($0 + [4])
	*($0) = $3
	$8 = *($0 + [4])
	*($0 + [4]) = [0]
	*(($4 = ($0 + [8]))) = [0]
	*($8 + [8]) = [0]
	$8 = *($10 + [4])
	$10 = ( $8 ? $10 : $8 )
	if ( ($10 == 0) ){ goto $label$2 }
	$6 = ($0 + [4])
	
.LOOP $label$3:
	$9 = $10
	$7 = $1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$5 = *($7 + [16])
	*($9 + [16]) = $5
	*(($9 + [24])) = *($7 + [24])
	$10 = *($9 + [8])
	if ( ($10 == 0) ){ goto $label$9 }
	$1 = *($10)
	if ( ((int_32)$1 == (int_32)$9) ){ goto $label$8 }
	*($10 + [4]) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	
.LOOP $label$10:
	$10 = $1
	$1 = *($10)
	if ( $1 ){ goto $label$10 }
	$1 = *($10 + [4])
	if ( $1 ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$9
	$10 = [0]
	$1 = *($3)
	if ( $1 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$8
	*($10) = [0]
	
.LOOP $label$11:
	$1 = *($10 + [4])
	if ( ($1 == 0) ){ goto $label$7 }
	
.LOOP $label$12:
	$10 = $1
	$1 = *($10)
	if ( $1 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$7
	$1 = *($3)
	if ( $1 ){ goto $label$5 }
	
.LABEL $label$6
	$1 = $3
	$8 = $3
	goto $label$4 
	
.LABEL $label$5
	
.LOOP $label$15:
	if ( ((uint_64)$5 >= (uint_64)*($1 + [16])) ){ goto $label$17 }
	$8 = *($1)
	if ( $8 ){ goto $label$16 }
	goto $label$13 
	
.LABEL $label$17
	$8 = *($1 + [4])
	if ( ($8 == 0) ){ goto $label$14 }
	
.LABEL $label$16
	$1 = $8
	goto $label$15 
	
.LABEL $label$14
	$8 = ($1 + [4])
	goto $label$4 
	
.LABEL $label$13
	$8 = $1
	
.LABEL $label$4
	*($9) = (int_64)0
	*(($9 + [8])) = $1
	*($8) = $9
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$18 }
	*($0) = $1
	$9 = *($8)
	
.LABEL $label$18
	CALL $51(*($6), $9)
	*($4) = (*($4) + [1])
	$8 = *($7 + [4])
	if ( ($8 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	$1 = $8
	$8 = *($1)
	if ( $8 ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$1 = *($7 + [8])
	if ( ((int_32)*($1) == (int_32)$7) ){ goto $label$19 }
	$9 = ($7 + [8])
	
.LOOP $label$22:
	$8 = *($9)
	$9 = ($8 + [8])
	$1 = *($8 + [8])
	if ( ((int_32)$8 != (int_32)*($1)) ){ goto $label$22 }
	
.LABEL $label$19
	if ( $10 ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$23 }
	$4 = ($0 + [4])
	$7 = ($0 + [8])
	
.LOOP $label$24:
	$9 = $1
	*((($8 = CALL $81([32])) + [24])) = *(($9 + [24]))
	*($8 + [16]) = *($9 + [16])
	$1 = *($4)
	if ( ($1 == 0) ){ goto $label$27 }
	$5 = *(($8 + [16]))
	
.LOOP $label$29:
	if ( ((uint_64)$5 >= (uint_64)*($1 + [16])) ){ goto $label$31 }
	$10 = *($1)
	if ( $10 ){ goto $label$30 }
	goto $label$26 
	
.LABEL $label$31
	$10 = *($1 + [4])
	if ( ($10 == 0) ){ goto $label$28 }
	
.LABEL $label$30
	$1 = $10
	goto $label$29 
	
.LABEL $label$28
	$10 = ($1 + [4])
	goto $label$25 
	
.LABEL $label$27
	$1 = $4
	$10 = $4
	goto $label$25 
	
.LABEL $label$26
	$10 = $1
	
.LABEL $label$25
	*($8 + [8]) = $1
	*($8) = (int_64)0
	*($10) = $8
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$32 }
	*($0) = $1
	$8 = *($10)
	
.LABEL $label$32
	CALL $51(*(($0 + [4])), $8)
	*($7) = (*($7) + [1])
	$10 = *($9 + [4])
	if ( ($10 == 0) ){ goto $label$34 }
	
.LOOP $label$35:
	$1 = $10
	$10 = *($1)
	if ( $10 ){ goto $label$35 }
	goto $label$33 
	
.LABEL $label$34
	$1 = *($9 + [8])
	if ( ((int_32)*($1) == (int_32)$9) ){ goto $label$33 }
	$8 = ($9 + [8])
	
.LOOP $label$36:
	$10 = *($8)
	$8 = ($10 + [8])
	$1 = *($10 + [8])
	if ( ((int_32)$10 != (int_32)*($1)) ){ goto $label$36 }
	
.LABEL $label$33
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$24 }
	
.LABEL $label$23
	return 
	
.LABEL $label$1
	
.LOOP $label$38:
	$1 = *($9 + [8])
	if ( ($1 == 0) ){ goto $label$37 }
	$9 = $1
	goto $label$38 
	
.LABEL $label$37
	CALL $45($0, $9)
}

int_32 .FUNC $21 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [64])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $23($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [64])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN8eosguess5guess11sub_balanceEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	*(($8 + [40])) = [0]
	*($8 + [16]) = $1
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	*($8 + [8]) = *($0)
	$4 = *($2)
	$3 = *($2 + [8])
	$0 = CALL $21(($8 + [8]), (uint_64)$3 >> (uint_64)(int_64)8), [1136]
	CALL eosio_assert(((int_64)*($0)) >= (int_64)$4), [1168])
	if ( ((int_64)$4 != (int_64)*($0)) ){ goto $label$3 }
	CALL $22(($8 + [8]), $0)
	$5 = *($8 + [32])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($8 + [8])), [720])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$3()), [768])
	$6 = *($0 + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)$6), [1200])
	$4 = (int_64)
	*($0) = $4(*($0) - $4))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1248])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [1280])
	$4 = (uint_64)$6 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$4) == (int_64)(uint_64)*($0 + [8]) >> (uint_64)(int_64)8)), [944])
	CALL eosio_assert([1], [352])
	CALL memcpy(($8 + [48]), $0, [8])
	CALL eosio_assert([1], [352])
	CALL memcpy((($8 + [48]) | [8]), ($0 + [8]), [8])
	CALL db_update_i64(*($0 + [20]), $1, ($8 + [48]), [16])
	$0 = (($8 + [8]) + [16])
	if ( (uint_64)($4 <= *($0)) ){ goto $label$4 }
	*($0) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$4
	$5 = *($8 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $82($2)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($8 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($7) = $5
	CALL $82($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [64])
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [432])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $81([32])
	$6 = CALL $24($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $25(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $82($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $22 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1312])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1360])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1424])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $82($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $82($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $81(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $88($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $82($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $82($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $24 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [368])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [304])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [464])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC _ZN8eosguess5guess3buyEyN5eosio5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [368])
	*([0] + [4]) = $17
	CALL require_auth($1)
	$15 = *($2)
	CALL __multi3(($17 + [80]), $15, (int_64)$15 >> (int_64)63), (int_64)9, (int_64)0)
	CALL eosio_assert(((int_64)$15 > (int_64)9999), [1536])
	$9 = (int_64)1397703940
	$4 = *($2 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)1397703940), [1904])
	$12 = *(($17 + [88]))
	$14 = *($17 + [80])
	CALL eosio_assert(( (uint_64)($14 <= (int_64)4611686018427387904) ? ((int_64)$12 < (int_64)0) : (int_64)($12 == 0) ), [1584])
	CALL eosio_assert(( ((uint_64)$14 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$12 > (int_64)-1) : ((int_64)$12 == (int_64)-1) ), [1616])
	CALL eosio_assert([1], [1648])
	CALL eosio_assert([1], [1664])
	CALL eosio_assert([1], [368])
	$16 = ((int_64)$14 / (int_64)10)
	$2 = [0]
	$12 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [304])
	$2 = CALL is_account($3)
	if ( ((int_64)$3 == (int_64)$1) ){ goto $label$7 }
	if ( ((int_32)$2 ^ (int_32)[1]) ){ goto $label$7 }
	$12 = (int_64)0
	$14 = (int_64)59
	$2 = [1568]
	$13 = (int_64)0
	
.LOOP $label$8:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$9 }
	$5 = *($2)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$5 = ($5 + [165])
	goto $label$10 
	
.LABEL $label$11
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$9
	$2 = ($2 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$8 }
	$11 = (int_64)0
	if ( ((int_64)$13 == (int_64)$3) ){ goto $label$6 }
	CALL __multi3(($17 + [64]), $15, (int_64)$15 >> (int_64)63), (int_64)3, (int_64)0)
	$12 = *(($17 + [72]))
	$14 = *($17 + [64])
	CALL eosio_assert(( (uint_64)($14 <= (int_64)4611686018427387904) ? ((int_64)$12 < (int_64)0) : (int_64)($12 == 0) ), [1584])
	CALL eosio_assert(( ((uint_64)$14 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$12 > (int_64)-1) : ((int_64)$12 == (int_64)-1) ), [1616])
	CALL eosio_assert([1], [1648])
	CALL eosio_assert([1], [1664])
	$11 = ((int_64)$14 / (int_64)100)
	$9 = $4
	goto $label$6 
	
.LABEL $label$7
	$11 = (int_64)0
	
.LABEL $label$6
	CALL eosio_assert([1], [1200])
	$12 = (int_64)
	CALL eosio_assert(((int_64)$12($15 - $16)) > (int_64)-4611686018427387904), [1248])
	CALL eosio_assert(((int_64)$12 < (int_64)4611686018427387904), [1280])
	$8 = ((int_64)$9 == (int_64)$4)
	CALL eosio_assert($8, [1200])
	$9 = (int_64)
	CALL eosio_assert(((int_64)$9($12 - $11)) > (int_64)-4611686018427387904), [1248])
	CALL eosio_assert(((int_64)$9 < (int_64)4611686018427387904), [1280])
	$2 = [0]
	*(($17 + [264])) = [0]
	*($17 + [248]) = (int_64)-1
	*($17 + [256]) = (int_64)0
	$14 = *($0)
	*($17 + [232]) = $14
	*($17 + [240]) = $14
	$12 = (int_64)4348505
	$5 = [0]
	$6 = CALL db_find_i64($14, $14, (int_64)-7949128877345865728, (int_64)4348505)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	$5 = CALL $11(($17 + [232]), $6)
	CALL eosio_assert(((int_32)*($5 + [72]) == (int_32)($17 + [232])), [64])
	
.LABEL $label$12
	$7 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($7, [1696])
	CALL eosio_assert([1], [368])
	
.LOOP $label$14:
	$6 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$6 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	CALL eosio_assert($6, [304])
	CALL eosio_assert($7, [1488])
	CALL eosio_assert(((int_32)*($5 + [72]) == (int_32)($17 + [232])), [720])
	CALL eosio_assert(((int_64)*($17 + [232]) == (int_64)CALL $fimport$3()), [768])
	$15 = *($5)
	*($17 + [136]) = $4
	CALL eosio_assert($8, [832])
	$12 = ((int_64)$16 + (int_64)$11)
	*($17 + [128]) = $12
	CALL eosio_assert(((int_64)$12 > (int_64)-4611686018427387904), [880])
	CALL eosio_assert(((int_64)$12 < (int_64)4611686018427387904), [912])
	*((($17 + [48]) + [8])) = *($17 + [136])
	*($17 + [48]) = *($17 + [128])
	CALL _ZN8eosguess14exchange_state7convertEN5eosio5assetENS1_11symbol_typeE(($17 + [272]), ($5 + [8]), ($17 + [48]), (int_64)1113217284)
	$13 = *($17 + [280])
	$14 = *($17 + [272])
	$12 = (uint_64)$15 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$12) == (int_64)(uint_64)*($5) >> (uint_64)(int_64)8)), [944])
	*($17 + [136]) = (($17 + [272]) + [72])
	*($17 + [132]) = ($17 + [272])
	*($17 + [128]) = ($17 + [272])
	CALL $13(($17 + [128]), $5)
	CALL db_update_i64(*($5 + [76]), (int_64)0, ($17 + [272]), [72])
	$2 = ($17 + [248])
	if ( (uint_64)($12 <= *($2)) ){ goto $label$17 }
	*($2) = ((int_64)$12 + (int_64)1)
	
.LABEL $label$17
	CALL eosio_assert(((int_64)$14 > (int_64)0), [1728])
	CALL eosio_assert([1], [368])
	$12 = (int_64)4348505
	$2 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$5 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$5 = [0]
	
.LABEL $label$18
	CALL eosio_assert($5, [304])
	if ( ((int_64)$11 < (int_64)1) ){ goto $label$29 }
	CALL __multi3(($17 + [32]), $14, (int_64)$14 >> (int_64)63), (int_64)3, (int_64)0)
	$11 = *((($17 + [32]) + [8]))
	$12 = *($17 + [32])
	CALL eosio_assert(( (uint_64)($12 <= (int_64)4611686018427387904) ? ((int_64)$11 < (int_64)0) : (int_64)($11 == 0) ), [1584])
	CALL eosio_assert(( ((uint_64)$12 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$11 > (int_64)-1) : ((int_64)$11 == (int_64)-1) ), [1616])
	CALL eosio_assert([1], [1648])
	CALL eosio_assert([1], [1664])
	$10 = ((int_64)$12 / (int_64)93)
	if ( ((int_64)$12 < (int_64)93) ){ goto $label$25 }
	*($17 + [224]) = $13
	*((($17 + [200]) + [8])) = [0]
	*($17 + [216]) = $10
	*($17 + [200]) = (int_64)0
	$12 = *($0)
	$2 = CALL strlen([1760])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$23 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$28 }
	*($17 + [200]) = ($2 << [1])
	$5 = (($17 + [200]) | [1])
	if ( $2 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$10 = (int_64)0
	goto $label$24 
	
.LABEL $label$28
	$6 = (($2 + [16]) & [-16])
	$5 = CALL $81($6)
	*($17 + [200]) = ($6 | [1])
	*($17 + [208]) = $5
	*($17 + [204]) = $2
	
.LABEL $label$27
	CALL memcpy($5, [1760], $2)
	
.LABEL $label$26
	*(($5 + $2)) = [0]
	*((($17 + [16]) + [8])) = *((($17 + [216]) + [8]))
	*($17 + [16]) = *($17 + [216])
	CALL _ZN8eosguess5guess8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $12, $3, ($17 + [16]), ($17 + [200]))
	if ( ((*($17 + [200]) & [1]) == 0) ){ goto $label$25 }
	CALL $82(*($17 + [208]))
	
.LABEL $label$25
	CALL eosio_assert([1], [1200])
	$14 = (int_64)
	CALL eosio_assert(((int_64)$14($14 - $10)) > (int_64)-4611686018427387904), [1248])
	CALL eosio_assert(((int_64)$14 < (int_64)4611686018427387904), [1280])
	
.LABEL $label$24
	*($17 + [192]) = $13
	*(($17 + [176])) = [0]
	*($17 + [184]) = $14
	*($17 + [168]) = (int_64)0
	$12 = *($0)
	$2 = CALL strlen([1792])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$31 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$34 }
	*($17 + [168]) = ($2 << [1])
	$5 = (($17 + [168]) | [1])
	if ( $2 ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	$6 = (($2 + [16]) & [-16])
	$5 = CALL $81($6)
	*($17 + [168]) = ($6 | [1])
	*($17 + [176]) = $5
	*($17 + [172]) = $2
	
.LABEL $label$33
	CALL memcpy($5, [1792], $2)
	
.LABEL $label$32
	*(($5 + $2)) = [0]
	*(($17 + [8])) = *((($17 + [184]) + [8]))
	*($17) = *($17 + [184])
	CALL _ZN8eosguess5guess8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $12, $1, $17, ($17 + [168]))
	if ( ((*($17 + [168]) & [1]) == 0) ){ goto $label$35 }
	CALL $82(*($17 + [176]))
	
.LABEL $label$35
	$15 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$2 = [1824]
	$13 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$41 }
	$5 = *($2)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$5 = ($5 + [165])
	goto $label$39 
	
.LABEL $label$41
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$37
	$2 = ($2 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$36 }
	*($17 + [120]) = $13
	*($17 + [112]) = $15
	$12 = (int_64)0
	$11 = (int_64)59
	$2 = [1840]
	$13 = (int_64)0
	
.LOOP $label$42:
	if ( ((uint_64)$12 > (uint_64)(int_64)10) ){ goto $label$47 }
	$5 = *($2)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$5 = ($5 + [165])
	goto $label$45 
	
.LABEL $label$47
	$14 = (int_64)0
	if ( ((int_64)$12 == (int_64)11) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$46
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$44
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$43
	$2 = ($2 + [1])
	$11 = ((int_64)$11 + (int_64)-5)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((int_64)$12 != (int_64)13) ){ goto $label$42 }
	$12 = (int_64)0
	$11 = (int_64)59
	$2 = [1856]
	$15 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$53 }
	$5 = *($2)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$5 = ($5 + [165])
	goto $label$51 
	
.LABEL $label$53
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$49
	$2 = ($2 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$48 }
	$12 = (int_64)0
	$14 = (int_64)59
	$2 = [1568]
	$16 = (int_64)0
	
.LOOP $label$54:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$55 }
	$5 = *($2)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$5 = ($5 + [165])
	goto $label$56 
	
.LABEL $label$57
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$55
	$2 = ($2 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$11 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$54 }
	*(($17 + [104])) = [0]
	*($17 + [96]) = (int_64)0
	$2 = CALL strlen([1872])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$30 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$60 }
	*($17 + [96]) = ($2 << [1])
	$5 = (($17 + [96]) | [1])
	if ( $2 ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$60
	$6 = (($2 + [16]) & [-16])
	$5 = CALL $81($6)
	*($17 + [96]) = ($6 | [1])
	*($17 + [104]) = $5
	*($17 + [100]) = $2
	
.LABEL $label$59
	CALL memcpy($5, [1872], $2)
	
.LABEL $label$58
	*(($5 + $2)) = [0]
	*(($17 + [296])) = $4
	*(($17 + [308])) = *($17 + [100])
	*($17 + [280]) = $16
	$2 = ($17 + [104])
	*(($17 + [312])) = *($2)
	*($17 + [272]) = *($0)
	*($17 + [288]) = $9
	*($17 + [304]) = *($17 + [96])
	*($17 + [96]) = [0]
	*($17 + [100]) = [0]
	*($2) = [0]
	$2 = CALL $28(($17 + [128]), ($17 + [112]), $13, $15, ($17 + [272]))
	CALL $29(($17 + [352]), $2)
	$5 = *($17 + [352])
	CALL send_inline($5, (*($17 + [356]) - $5))
	$5 = *($17 + [352])
	if ( ($5 == 0) ){ goto $label$61 }
	*($17 + [356]) = $5
	CALL $82($5)
	
.LABEL $label$61
	$5 = *($2 + [28])
	if ( ($5 == 0) ){ goto $label$62 }
	*(($2 + [32])) = $5
	CALL $82($5)
	
.LABEL $label$62
	$5 = *($2 + [16])
	if ( ($5 == 0) ){ goto $label$63 }
	*(($2 + [20])) = $5
	CALL $82($5)
	
.LABEL $label$63
	if ( ((*(($17 + [304])) & [1]) == 0) ){ goto $label$64 }
	CALL $82(*(($17 + [312])))
	
.LABEL $label$64
	if ( ((*($17 + [96]) & [1]) == 0) ){ goto $label$65 }
	CALL $82(*(($17 + [104])))
	
.LABEL $label$65
	*(($17 + [304])) = [0]
	*($17 + [288]) = (int_64)-1
	*($17 + [296]) = (int_64)0
	$12 = *($0)
	*($17 + [272]) = $12
	*($17 + [280]) = $12
	$2 = CALL db_find_i64($12, $12, (int_64)3607749779158204416, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$67 }
	CALL eosio_assert(((int_32)*(CALL $30(($17 + [272]), $2) + [8]) == (int_32)($17 + [272])), [64])
	goto $label$66 
	
.LABEL $label$67
	CALL eosio_assert(((int_64)*($17 + [272]) == (int_64)CALL $fimport$3()), [176])
	*(($2 = CALL $81([24])) + [8]) = ($17 + [272])
	*($2) = $1
	CALL eosio_assert([1], [352])
	CALL memcpy(($17 + [128]), $2, [8])
	$12 = *($2)
	$6 = CALL db_store_i64(*((($17 + [272]) + [8])), (int_64)3607749779158204416, $1, $12, ($17 + [128]), [8])
	*($2 + [12]) = $6
	$5 = ($17 + [288])
	if ( (uint_64)($12 <= *($5)) ){ goto $label$68 }
	*($5) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$68
	*($17 + [112]) = $2
	$12 = *($2)
	*($17 + [128]) = $12
	*($17 + [352]) = $6
	$0 = ($17 + [300])
	$5 = *($0)
	if ( ((uint_32)$5 >= (uint_32)*(($17 + [304]))) ){ goto $label$70 }
	*($5 + [8]) = $12
	*($5 + [16]) = $6
	*($17 + [112]) = [0]
	*($5) = $2
	*($0) = ($5 + [24])
	goto $label$69 
	
.LABEL $label$70
	CALL $31(($17 + [296]), ($17 + [112]), ($17 + [128]), ($17 + [352]))
	
.LABEL $label$69
	$2 = *($17 + [112])
	*($17 + [112]) = [0]
	if ( ($2 == 0) ){ goto $label$66 }
	CALL $82($2)
	
.LABEL $label$66
	if ( ((int_64)$10 < (int_64)1) ){ goto $label$73 }
	$8 = *(($17 + [296]))
	$6 = *(($17 + [300]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$74 }
	$2 = ($6 + [-24])
	$0 = ([0] - $8)
	
.LOOP $label$75:
	if ( ((int_64)*(*($2)) == (int_64)$3) ){ goto $label$74 }
	$6 = $2
	$5 = ($2 + [-24])
	$2 = $5
	if ( ((int_32)($5 + $0) != (int_32)[-24]) ){ goto $label$75 }
	
.LABEL $label$74
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$77 }
	$2 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)($17 + [272])), [64])
	if ( $2 ){ goto $label$73 }
	goto $label$76 
	
.LABEL $label$77
	$2 = CALL db_find_i64(*($17 + [272]), *(($17 + [280])), (int_64)3607749779158204416, $3)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$76 }
	CALL eosio_assert(((int_32)*(CALL $30(($17 + [272]), $2) + [8]) == (int_32)($17 + [272])), [64])
	$6 = *($17 + [296])
	if ( $6 ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$76
	CALL eosio_assert(((int_64)*($17 + [272]) == (int_64)CALL $fimport$3()), [176])
	*(($2 = CALL $81([24])) + [8]) = ($17 + [272])
	*($2) = $3
	CALL eosio_assert([1], [352])
	CALL memcpy(($17 + [128]), $2, [8])
	$12 = *($2)
	$6 = CALL db_store_i64(*((($17 + [272]) + [8])), (int_64)3607749779158204416, $1, $12, ($17 + [128]), [8])
	*($2 + [12]) = $6
	$5 = ($17 + [288])
	if ( (uint_64)($12 <= *($5)) ){ goto $label$78 }
	*($5) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$78
	*($17 + [112]) = $2
	$12 = *($2)
	*($17 + [128]) = $12
	*($17 + [352]) = $6
	$0 = ($17 + [300])
	$5 = *($0)
	if ( ((uint_32)$5 >= (uint_32)*(($17 + [304]))) ){ goto $label$80 }
	*($5 + [8]) = $12
	*($5 + [16]) = $6
	*($17 + [112]) = [0]
	*($5) = $2
	*($0) = ($5 + [24])
	goto $label$79 
	
.LABEL $label$80
	CALL $31(($17 + [296]), ($17 + [112]), ($17 + [128]), ($17 + [352]))
	
.LABEL $label$79
	$2 = *($17 + [112])
	*($17 + [112]) = [0]
	if ( ($2 == 0) ){ goto $label$73 }
	CALL $82($2)
	
.LABEL $label$73
	$6 = *($17 + [296])
	if ( ($6 == 0) ){ goto $label$71 }
	
.LABEL $label$72
	$0 = ($17 + [300])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$82 }
	
.LOOP $label$83:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$84 }
	CALL $82($5)
	
.LABEL $label$84
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$83 }
	$2 = *(($17 + [296]))
	goto $label$81 
	
.LABEL $label$82
	$2 = $6
	
.LABEL $label$81
	*($0) = $6
	CALL $82($2)
	
.LABEL $label$71
	$6 = *($17 + [256])
	if ( ($6 == 0) ){ goto $label$85 }
	$0 = ($17 + [260])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$87 }
	
.LOOP $label$88:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$89 }
	CALL $82($5)
	
.LABEL $label$89
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$88 }
	$2 = *(($17 + [256]))
	goto $label$86 
	
.LABEL $label$87
	$2 = $6
	
.LABEL $label$86
	*($0) = $6
	CALL $82($2)
	
.LABEL $label$85
	*([0] + [4]) = ($17 + [368])
	return (unreachable)
	
.LABEL $label$31
	CALL $83(($17 + [168]))
	
.LABEL $label$30
	CALL $83(($17 + [96]))
	
.LABEL $label$23
	CALL $83(($17 + [200]))
	(unreachable)
	(unreachable)
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [464])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [464])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [464])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [464])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [464])
	CALL memcpy(($0 + [24]), *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
}

int_32 .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [32])) = (int_64)1397703940
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = (int_64)0
	CALL eosio_assert([1], [368])
	$6 = (int_64)5459781
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$7 = [0]
	
.LABEL $label$4
	CALL eosio_assert($7, [304])
	*($9 + [40]) = [0]
	*($9 + [84]) = $5
	*($9 + [80]) = $5
	*($9 + [88]) = ($5 + $3)
	*($9 + [48]) = ($9 + [80])
	*($9 + [64]) = ($9 + [16])
	CALL $69(($9 + [64]), ($9 + [48]))
	if ( ($3 <= [513]) ){ goto $label$9 }
	CALL free($5)
	
.LABEL $label$9
	*(($1 = (($9 + [48]) + [8]))) = *(($9 + [32]))
	$6 = *($9 + [16])
	*($9 + [48]) = *($9 + [24])
	$5 = *(($9 + [40]))
	*((($9 + [64]) + [8])) = *($1)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$10 }
	$8 = *((*($1) + $8))
	
.LABEL $label$10
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*(($9 + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9) = $4
	CALL void $1((int_32 $6), (int_64 $9), (int_32 int_32(($5 << [24]) >> [24])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [80])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	CALL $70(($6 + [16]), $4, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	*(($1 = (($6 + [32]) + [8]))) = *((($6 + [16]) + [8]))
	*($6 + [32]) = *($6 + [16])
	*((($6 + [48]) + [8])) = *($1)
	*($6 + [48]) = *($6 + [32])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	$3 = *((($6 + [48]) + [8]))
	*((($6 + [64]) + [8])) = $3
	*(($6 + [8])) = $3
	$3 = *($6 + [48])
	*($6 + [64]) = $3
	*($6) = $3
	CALL void $1((int_32 $6), (int_32 $5))
	*([0] + [4]) = ($6 + [80])
	return [1]
}

void .FUNC $64 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *([0] + [4])
	$3 = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	CALL $71($0, $2, $1)
	if ( ($1 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = $3
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [464])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1397703940
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [368])
	$6 = (int_64)5459781
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [304])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [464])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [464])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [464])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [116]) == (int_32)$0), [1312])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1360])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$4 = *($5)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$7 = ($4 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$2) ){ goto $label$1 }
	$4 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [1424])
	$8 = ($4 + [-24])
	$7 = *($5)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$4 }
	$3 = ([0] - $7)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $45(($4 + [104]), *(($4 + [108])))
	CALL $45(($4 + [92]), *(($4 + [96])))
	CALL $45(($4 + [80]), *(($4 + [84])))
	CALL $82($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$4 = ($4 + [-24])
	$7 = *($4)
	*($4) = [0]
	if ( ($7 == 0) ){ goto $label$8 }
	CALL $45(($7 + [104]), *(($7 + [108])))
	CALL $45(($7 + [92]), *(($7 + [96])))
	CALL $45(($7 + [80]), *(($7 + [84])))
	CALL $82($7)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [120]))
}

void .FUNC $60 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $81(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $88($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $82($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $82($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [256])
	*([0] + [4]) = $14
	CALL prints([2608])
	CALL printn($0)
	CALL prints([2624])
	*($14 + [248]) = $0
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1840]
	$9 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$6 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$1 }
	if ( ((int_64)$9 != (int_64)$1) ){ goto $label$15 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1856]
	$9 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$21 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$3 = ($3 + [165])
	goto $label$19 
	
.LABEL $label$21
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$17
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$16 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$15 }
	CALL $64(($14 + [200]))
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [2640]
	$0 = *($14 + [200])
	$9 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$27 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$3 = ($3 + [165])
	goto $label$25 
	
.LABEL $label$27
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$23
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$22 }
	if ( ((int_64)$0 != (int_64)$9) ){ goto $label$14 }
	if ( ((*($14 + [232]) & [1]) == 0) ){ goto $label$7 }
	CALL $82(*(($14 + [240])))
	goto $label$7 
	
.LABEL $label$15
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$28 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [2752]
	$9 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$8 > (uint_64)(int_64)6) ){ goto $label$34 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$3 = ($3 + [165])
	goto $label$32 
	
.LABEL $label$34
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$30
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$29 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$7 }
	
.LABEL $label$28
	if ( ((int_64)$2 <= (int_64)5031766152489992191) ){ goto $label$35 }
	if ( ((int_64)$2 == (int_64)9015414805623734272) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)6111947644295184384) ){ goto $label$12 }
	if ( ((int_64)$2 != (int_64)5031766152489992192) ){ goto $label$7 }
	*($14 + [116]) = [0]
	*($14 + [112]) = [1]
	*($14 + [40 align=4]) = *($14 + [112])
	CALL $65(($14 + [248]), ($14 + [40]))
	goto $label$7 
	
.LABEL $label$35
	if ( ((int_64)$2 == (int_64)-4421672816961650688) ){ goto $label$11 }
	if ( ((int_64)$2 != (int_64)-4157529991795441664) ){ goto $label$7 }
	*($14 + [100]) = [0]
	*($14 + [96]) = [2]
	*($14 + [56 align=4]) = *($14 + [96])
	CALL $67(($14 + [248]), ($14 + [56]))
	goto $label$7 
	
.LABEL $label$14
	CALL $89(($14 + [184]), ($14 + [232]))
	$5 = *($14 + [184])
	$3 = ($5 & [1])
	$4 = (($14 + [184]) | [1])
	$11 = *($14 + [192])
	$12 = ( $11 ? $4 : $3 )
	$6 = $12
	$3 = ( *($14 + [188]) ? uint_32($5 >> [1]) : $3 )
	if ( ($3 == 0) ){ goto $label$36 }
	$5 = ($12 + $3)
	$6 = $12
	
.LOOP $label$38:
	if ( (CALL isspace(*($6)) == 0) ){ goto $label$37 }
	$6 = ($6 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$38 }
	$6 = $5
	
.LABEL $label$37
	$11 = *(($14 + [192]))
	$5 = *($14 + [184])
	
.LABEL $label$36
	CALL $85(($14 + [184]), ($12 - ( $11 ? $4 : ($5 & [1]) )), ($6 - $12))
	$13 = *($14 + [188])
	$6 = ( $13 ? uint_32($3 >> [1]) : $6 )
	$3 = *($14 + [184])
	$6 = ($3 & [1])
	$11 = *(($14 + [192]))
	$5 = ( $11 ? $4 : $6 )
	$12 = ($5 + $6)
	if ( ($6 == 0) ){ goto $label$39 }
	
.LOOP $label$41:
	$3 = (($5 + $6) + [-1])
	if ( (CALL isspace(*($3)) == 0) ){ goto $label$40 }
	$12 = $3
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$41 }
	
.LABEL $label$40
	$11 = *(($14 + [192]))
	$13 = *($14 + [188])
	$3 = *($14 + [184])
	
.LABEL $label$39
	$6 = ($3 & [1])
	$5 = ( $11 ? $4 : $6 )
	CALL $85(($14 + [184]), ($12 - $5), (($5 + ( $13 ? uint_32(($3 & [254]) >> [1]) : $6 )) - $12))
	$6 = CALL $86(($14 + [184]), [32], [0])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$42 }
	$6 = CALL $86(($14 + [184]), [58], [0])
	
.LABEL $label$42
	CALL eosio_assert(((int_32)$6 != (int_32)[-1]), [2656])
	CALL $90(($14 + [168]), ($14 + [184]), [0], $6, ($14 + [184]))
	if ( CALL $87(($14 + [168]), [2736]) ){ goto $label$8 }
	CALL $90(($14 + [152]), ($14 + [184]), ($6 + [1]), [12], ($14 + [184]))
	$6 = ($14 + [216])
	$2 = *($14 + [200])
	$3 = ($3 & [1])
	$3 = *($14 + [152])
	if ( ((int_32)( *($14 + [156]) ? uint_32($3 >> [1]) : $3 ) != (int_32)[12]) ){ goto $label$10 }
	*((($14 + [120]) + [8])) = *(($6 + [8]))
	*($14 + [120]) = *($6)
	$6 = ( *($14 + [160]) ? (($14 + [152]) | [1]) : $3 )
	$3 = [-1]
	
.LOOP $label$43:
	$12 = ($6 + $3)
	$5 = ($3 + [1])
	$3 = $5
	if ( *(($12 + [1])) ){ goto $label$43 }
	$0 = (CASTING uint_64)(uint_32 $5)
	$8 = (int_64)0
	$10 = (int_64)59
	$9 = (int_64)0
	
.LOOP $label$44:
	$7 = (int_64)0
	if ( ((uint_64)$8 >= (uint_64)$0) ){ goto $label$45 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$3 = ($3 + [165])
	goto $label$46 
	
.LABEL $label$47
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$49 }
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	goto $label$48 
	
.LABEL $label$49
	$7 = ((int_64)$7 & (int_64)15)
	
.LABEL $label$48
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$44 }
	*((($14 + [8]) + [8])) = *((($14 + [120]) + [8]))
	*($14 + [8]) = *($14 + [120])
	CALL _ZN8eosguess5guess3buyEyN5eosio5assetEy(($14 + [248]), $2, ($14 + [8]), $9)
	goto $label$9 
	
.LABEL $label$13
	*($14 + [92]) = [0]
	*($14 + [88]) = [3]
	*($14 + [64 align=4]) = *($14 + [88])
	CALL $68(($14 + [248]), ($14 + [64]))
	goto $label$7 
	
.LABEL $label$12
	*($14 + [84]) = [0]
	*($14 + [80]) = [4]
	*($14 + [72 align=4]) = *($14 + [80])
	CALL $67(($14 + [248]), ($14 + [72]))
	goto $label$7 
	
.LABEL $label$11
	*($14 + [108]) = [0]
	*($14 + [104]) = [5]
	*($14 + [48 align=4]) = *($14 + [104])
	CALL $66(($14 + [248]), ($14 + [48]))
	goto $label$7 
	
.LABEL $label$10
	*((($14 + [136]) + [8])) = *(($6 + [8]))
	*($14 + [136]) = *($6)
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [1568]
	$9 = (int_64)0
	
.LOOP $label$50:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$51 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$3 = ($3 + [165])
	goto $label$52 
	
.LABEL $label$53
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$51
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$50 }
	*((($14 + [24]) + [8])) = *((($14 + [136]) + [8]))
	*($14 + [24]) = *($14 + [136])
	CALL _ZN8eosguess5guess3buyEyN5eosio5assetEy(($14 + [248]), $2, ($14 + [24]), $9)
	
.LABEL $label$9
	if ( ((*($14 + [152]) & [1]) == 0) ){ goto $label$8 }
	CALL $82(*($14 + [160]))
	
.LABEL $label$8
	if ( ((*($14 + [168]) & [1]) == 0) ){ goto $label$54 }
	CALL $82(*($14 + [176]))
	
.LABEL $label$54
	if ( ((*($14 + [184]) & [1]) == 0) ){ goto $label$55 }
	CALL $82(*(($14 + [192])))
	
.LABEL $label$55
	if ( ((*(($14 + [232])) & [1]) == 0) ){ goto $label$7 }
	CALL $82(*(($14 + [240])))
	
.LABEL $label$7
	*([0] + [4]) = ($14 + [256])
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1312])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1360])
	$2 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$6 = *($1)
	$3 = ([0] - $2)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(*($8)) == (int_32)$6) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$2), [1424])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $82($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $82($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $81($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $88 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL strlen($1)
	$5 = *($0)
	$3 = ($5 & [1])
	if ( $3 ){ goto $label$2 }
	$5 = uint_32($5 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$5 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$3 }
	if ( $3 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$4 = ((uint_32)$5 > (uint_32)$2)
	$3 = ( $2 ? $5 : $4 )
	if ( ($3 == 0) ){ goto $label$7 }
	$0 = CALL memcmp($0, $1, $3)
	if ( $0 ){ goto $label$6 }
	
.LABEL $label$7
	$0 = ( [-1] ? $4 : ($5 <= $2) )
	
.LABEL $label$6
	return $0
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $86 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = *($0)
	if ( ($4 & [1]) ){ goto $label$2 }
	$4 = uint_32($4 >> [1])
	$3 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0 + [4])
	$3 = *($0 + [8])
	
.LABEL $label$1
	$0 = [-1]
	if ( ((uint_32)$4 <= (uint_32)$2) ){ goto $label$3 }
	$0 = ($4 - $2)
	if ( ($0 == 0) ){ goto $label$5 }
	$0 = CALL memchr(($3 + $2), ($1 & [255]), $0)
	goto $label$4 
	
.LABEL $label$5
	$0 = [0]
	
.LABEL $label$4
	$0 = ( ($0 - $3) ? [-1] : $0 )
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $85 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$3 = ($6 & [1])
	if ( $3 ){ goto $label$3 }
	$4 = uint_32($6 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $3 ){ goto $label$6 }
	$5 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $3 ? $2 : ($3 <= $2) )
	$3 = ($4 - $1)
	$3 = ($3 - $2)
	if ( ($3 == 0) ){ goto $label$7 }
	$1 = ($5 + $1)
	CALL memmove($1, ($1 + $2), $3)
	$6 = *($0)
	
.LABEL $label$7
	$2 = ($4 - $2)
	if ( ($6 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($5 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $81(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $82($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $83 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $82 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $81 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [11436])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [11328])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [11136]
	$1 = (((int_32)$2 * (int_32)[12]) + [11136])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [464])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [464])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $73(*($1), *($0 + [12]))
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $74($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $84($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $81($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $84($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $82($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $83($7)
	return (unreachable)
}

void .FUNC $70 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [368])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [304])
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [464])
	CALL memcpy($0, $1, [8])
	CALL eosio_assert(((int_32)($2 & [-8]) != (int_32)[8]), [464])
	CALL memcpy(($0 + [8]), ($1 + [8]), [8])
}

void .FUNC $71 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)1397703940
	CALL eosio_assert([1], [368])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [304])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [12]) = $1
	*($6 + [8]) = $1
	*($6 + [16]) = ($1 + $2)
	*($6 + [24]) = ($6 + [8])
	*($6 + [36]) = ($0 + [8])
	*($6 + [32]) = $0
	*($6 + [40]) = ($0 + [16])
	*($6 + [44]) = ($0 + [32])
	CALL $72(($6 + [32]), ($6 + [24]))
	*([0] + [4]) = ($6 + [48])
}

void .FUNC _ZN8eosguess14exchange_state21convert_from_exchangeERNS0_9connectorEN5eosio5assetE (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	float_64 $5
	int_64 $6
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($1 + [8])), [2912])
	$4 = *($2)
	$6 = *($3)
	$5 = CALL pow(((float_64)((float_64)(CASTING float_64)(int_64 $6) / (float_64)(CASTING float_64)(int_64 (int_64))(*($1) - $6))) + (float_64)(float_64)1), ((float_64)(float_64)1e3 / (float_64)*($2 + [16])))
	*($1) = (int_64))(*($1) - $6)
	$6 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $4) * (float_64)((float_64)$5 + (float_64)(float_64)-1)))
	*($0) = $6
	*($2) = (int_64))(*($2) - $6)
	$4 = *($2 + [8])
	*($0 + [8]) = $4
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [2768])
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$1 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$1 = [0]
	
.LABEL $label$1
	CALL eosio_assert($1, [2832])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $78([2944], $0)
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [2416])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $32($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [464])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1312])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1360])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1424])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $82($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $82($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [352])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [352])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC _ZN8eosguess5guess4sellEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [288])
	*([0] + [4]) = $15
	CALL require_auth($1)
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($2) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [1936])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)1113217284), [2176])
	*(($15 + [184])) = [0]
	*($15 + [168]) = (int_64)-1
	*($15 + [176]) = (int_64)0
	$10 = *($0)
	*($15 + [152]) = $10
	*($15 + [160]) = $10
	$3 = [0]
	$8 = CALL db_find_i64($10, $10, (int_64)-7949128877345865728, (int_64)4348505)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $11(($15 + [152]), $8)
	CALL eosio_assert(((int_32)*($3 + [72]) == (int_32)($15 + [152])), [64])
	
.LABEL $label$1
	$4 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($4, [1696])
	*((($15 + [136]) + [12])) = *(($2 + [12]))
	*((($15 + [136]) + [8])) = *(($2 + [8]))
	*($15 + [140]) = *(($2 + [4]))
	*($15 + [136]) = *($2)
	$10 = *($0)
	*((($15 + [120]) + [8])) = [0]
	*($15 + [120]) = (int_64)0
	$7 = CALL strlen([1984])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$7 }
	*($15 + [120]) = ($7 << [1])
	$6 = (($15 + [120]) | [1])
	if ( $7 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = (($7 + [16]) & [-16])
	$6 = CALL $81($8)
	*($15 + [120]) = ($8 | [1])
	*($15 + [128]) = $6
	*($15 + [124]) = $7
	
.LABEL $label$6
	CALL memcpy($6, [1984], $7)
	
.LABEL $label$5
	$8 = [0]
	*(($6 + $7)) = [0]
	*((($15 + [16]) + [8])) = *((($15 + [136]) + [8]))
	*($15 + [16]) = *($15 + [136])
	CALL _ZN8eosguess5guess8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($0, $1, $10, ($15 + [16]), ($15 + [120]))
	if ( ((*($15 + [120]) & [1]) == 0) ){ goto $label$8 }
	CALL $82(*($15 + [128]))
	
.LABEL $label$8
	CALL eosio_assert([1], [368])
	$10 = (int_64)5459781
	
.LOOP $label$10:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	CALL eosio_assert($7, [304])
	CALL eosio_assert($4, [1488])
	CALL eosio_assert(((int_32)*($3 + [72]) == (int_32)($15 + [152])), [720])
	CALL eosio_assert(((int_64)*($15 + [152]) == (int_64)CALL $fimport$3()), [768])
	$10 = *($3)
	*(($8 = (($15 + [64]) + [8]))) = *(($2 + [8]))
	$12 = *($2)
	*(($15 + [12])) = *((($15 + [64]) + [12]))
	*(($15 + [8])) = *($8)
	*($15 + [64]) = $12
	*($15 + [4]) = *($15 + [68])
	*($15) = *($15 + [64])
	CALL _ZN8eosguess14exchange_state7convertEN5eosio5assetENS1_11symbol_typeE(($15 + [192]), ($3 + [8]), $15, (int_64)1397703940)
	$14 = *($15 + [200])
	$12 = *($15 + [192])
	$9 = (uint_64)$10 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$9) == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)), [944])
	*($15 + [72]) = (($15 + [192]) + [72])
	*($15 + [68]) = ($15 + [192])
	*($15 + [64]) = ($15 + [192])
	CALL $13(($15 + [64]), $3)
	$10 = (int_64)0
	CALL db_update_i64(*($3 + [76]), (int_64)0, ($15 + [192]), [72])
	$8 = ($15 + [168])
	if ( (uint_64)($9 <= *($8)) ){ goto $label$13 }
	*($8) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$13
	CALL eosio_assert(((int_64)$12 < (int_64)4611686018427387904), [1584])
	CALL eosio_assert(((int_64)$12 > (int_64)-4611686018427387904), [1616])
	*($15 + [104]) = $12
	*($15 + [112]) = $14
	CALL eosio_assert([1], [1648])
	CALL eosio_assert([1], [1664])
	$9 = ((int_64)$12 / (int_64)10)
	*($15 + [104]) = ( $9 ? (int_64)1 : ((int_64)$9 > (int_64)1) )
	CALL eosio_assert(((int_64)*($15 + [112]) == (int_64)$14), [1200])
	$5 = (int_64)
	CALL eosio_assert(((int_64)$5($12 - *($15 + [104]))) > (int_64)-4611686018427387904), [1248])
	CALL eosio_assert(((int_64)$5 < (int_64)4611686018427387904), [1280])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [1728])
	$13 = *($0)
	$9 = (int_64)59
	$8 = [1824]
	$11 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$19 }
	$2 = *($8)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$2 = ($2 + [165])
	goto $label$17 
	
.LABEL $label$19
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$15
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$14 }
	*($15 + [56]) = $11
	*($15 + [48]) = $13
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1840]
	$11 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$25 }
	$2 = *($8)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$2 = ($2 + [165])
	goto $label$23 
	
.LABEL $label$25
	$12 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$21
	$8 = ($8 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$20 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1856]
	$13 = (int_64)0
	
.LOOP $label$26:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$31 }
	$2 = *($8)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$2 = ($2 + [165])
	goto $label$29 
	
.LABEL $label$31
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$30
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$28
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$27
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$26 }
	*(($15 + [40])) = [0]
	*($15 + [32]) = (int_64)0
	$8 = CALL strlen([2016])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$34 }
	*($15 + [32]) = ($8 << [1])
	$2 = (($15 + [32]) | [1])
	if ( $8 ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	$3 = (($8 + [16]) & [-16])
	$2 = CALL $81($3)
	*($15 + [32]) = ($3 | [1])
	*($15 + [40]) = $2
	*($15 + [36]) = $8
	
.LABEL $label$33
	CALL memcpy($2, [2016], $8)
	
.LABEL $label$32
	*(($2 + $8)) = [0]
	*(($15 + [216])) = $14
	*(($15 + [228])) = *($15 + [36])
	*($15 + [200]) = $1
	$8 = ($15 + [40])
	*(($15 + [232])) = *($8)
	*($15 + [192]) = *($0)
	*($15 + [208]) = $5
	*($15 + [224]) = *($15 + [32])
	*($15 + [32]) = [0]
	*($15 + [36]) = [0]
	*($8) = [0]
	$8 = CALL $28(($15 + [64]), ($15 + [48]), $11, $13, ($15 + [192]))
	CALL $29(($15 + [272]), $8)
	$2 = *($15 + [272])
	CALL send_inline($2, (*($15 + [276]) - $2))
	$2 = *($15 + [272])
	if ( ($2 == 0) ){ goto $label$35 }
	*($15 + [276]) = $2
	CALL $82($2)
	
.LABEL $label$35
	$2 = *($8 + [28])
	if ( ($2 == 0) ){ goto $label$36 }
	*(($8 + [32])) = $2
	CALL $82($2)
	
.LABEL $label$36
	$2 = *($8 + [16])
	if ( ($2 == 0) ){ goto $label$37 }
	*(($8 + [20])) = $2
	CALL $82($2)
	
.LABEL $label$37
	if ( ((*(($15 + [224])) & [1]) == 0) ){ goto $label$38 }
	CALL $82(*(($15 + [232])))
	
.LABEL $label$38
	if ( ((*($15 + [32]) & [1]) == 0) ){ goto $label$39 }
	CALL $82(*(($15 + [40])))
	
.LABEL $label$39
	CALL $38(($15 + [104]))
	$13 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1824]
	$11 = (int_64)0
	
.LOOP $label$40:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$45 }
	$2 = *($8)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$44 }
	$2 = ($2 + [165])
	goto $label$43 
	
.LABEL $label$45
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$44
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$43
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$42
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$41
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$40 }
	*($15 + [56]) = $11
	*($15 + [48]) = $13
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1840]
	$11 = (int_64)0
	
.LOOP $label$46:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$51 }
	$2 = *($8)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$50 }
	$2 = ($2 + [165])
	goto $label$49 
	
.LABEL $label$51
	$12 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$50
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$49
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$48
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$47
	$8 = ($8 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$46 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1856]
	$13 = (int_64)0
	
.LOOP $label$52:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$57 }
	$2 = *($8)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$2 = ($2 + [165])
	goto $label$55 
	
.LABEL $label$57
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$56
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$54
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$53
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$52 }
	$10 = (int_64)0
	$12 = (int_64)59
	$8 = [1568]
	$14 = (int_64)0
	
.LOOP $label$58:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$59 }
	$2 = *($8)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$2 = ($2 + [165])
	goto $label$60 
	
.LABEL $label$61
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$59
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$14 = ((int_64)$9 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$58 }
	*(($15 + [40])) = [0]
	*($15 + [32]) = (int_64)0
	$8 = CALL strlen([2048])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$64 }
	*($15 + [32]) = ($8 << [1])
	$2 = (($15 + [32]) | [1])
	if ( $8 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$64
	$3 = (($8 + [16]) & [-16])
	$2 = CALL $81($3)
	*($15 + [32]) = ($3 | [1])
	*($15 + [40]) = $2
	*($15 + [36]) = $8
	
.LABEL $label$63
	CALL memcpy($2, [2048], $8)
	
.LABEL $label$62
	*(($2 + $8)) = [0]
	*(($15 + [212])) = *($15 + [108])
	*($15 + [200]) = $14
	*(($15 + [220])) = *(($15 + [116]))
	*(($15 + [216])) = *((($15 + [104]) + [8]))
	*($15 + [192]) = *($0)
	*($15 + [208]) = *($15 + [104])
	$8 = (($15 + [32]) + [8])
	*(($15 + [232])) = *($8)
	*($15 + [224]) = *($15 + [32])
	*($15 + [32]) = [0]
	*($15 + [36]) = [0]
	*($8) = [0]
	$8 = CALL $28(($15 + [64]), ($15 + [48]), $11, $13, ($15 + [192]))
	CALL $29(($15 + [272]), $8)
	$2 = *($15 + [272])
	CALL send_inline($2, (*($15 + [276]) - $2))
	$2 = *($15 + [272])
	if ( ($2 == 0) ){ goto $label$65 }
	*($15 + [276]) = $2
	CALL $82($2)
	
.LABEL $label$65
	$2 = *($8 + [28])
	if ( ($2 == 0) ){ goto $label$66 }
	*(($8 + [32])) = $2
	CALL $82($2)
	
.LABEL $label$66
	$2 = *($8 + [16])
	if ( ($2 == 0) ){ goto $label$67 }
	*(($8 + [20])) = $2
	CALL $82($2)
	
.LABEL $label$67
	if ( ((*(($15 + [224])) & [1]) == 0) ){ goto $label$68 }
	CALL $82(*(($15 + [232])))
	
.LABEL $label$68
	if ( ((*($15 + [32]) & [1]) == 0) ){ goto $label$69 }
	CALL $82(*(($15 + [40])))
	
.LABEL $label$69
	*((($15 + [192]) + [32])) = [0]
	*($15 + [208]) = (int_64)-1
	*($15 + [216]) = (int_64)0
	$10 = *($0)
	*($15 + [192]) = $10
	*($15 + [200]) = $1
	$8 = CALL db_find_i64($10, $1, (int_64)3607749779137757184, (int_64)4348505)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$72 }
	CALL eosio_assert(((int_32)*(CALL $23(($15 + [192]), $8) + [16]) == (int_32)($15 + [192])), [64])
	$0 = *($15 + [216])
	if ( $0 ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$72
	$10 = *($0)
	*((($15 + [64]) + [32])) = [0]
	*($15 + [72]) = $10
	*($15 + [64]) = $10
	*($15 + [80]) = (int_64)-1
	*($15 + [88]) = (int_64)0
	$8 = CALL db_find_i64($10, $10, (int_64)3607749779158204416, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$73 }
	$8 = CALL $30(($15 + [64]), $8)
	CALL eosio_assert(((int_32)*($8 + [8]) == (int_32)($15 + [64])), [64])
	CALL eosio_assert([1], [2096])
	CALL eosio_assert([1], [2144])
	$2 = CALL db_next_i64(*($8 + [12]), ($15 + [48]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$74 }
	CALL $30(($15 + [64]), $2)
	
.LABEL $label$74
	CALL $39(($15 + [64]), $8)
	
.LABEL $label$73
	$0 = *($15 + [88])
	if ( ($0 == 0) ){ goto $label$75 }
	$3 = ($15 + [92])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$77 }
	
.LOOP $label$78:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$79 }
	CALL $82($2)
	
.LABEL $label$79
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$78 }
	$8 = *(($15 + [88]))
	goto $label$76 
	
.LABEL $label$77
	$8 = $0
	
.LABEL $label$76
	*($3) = $0
	CALL $82($8)
	
.LABEL $label$75
	$0 = *($15 + [216])
	if ( ($0 == 0) ){ goto $label$70 }
	
.LABEL $label$71
	$3 = ($15 + [220])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$81 }
	
.LOOP $label$82:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$83 }
	CALL $82($2)
	
.LABEL $label$83
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$82 }
	$8 = *(($15 + [216]))
	goto $label$80 
	
.LABEL $label$81
	$8 = $0
	
.LABEL $label$80
	*($3) = $0
	CALL $82($8)
	
.LABEL $label$70
	$0 = *($15 + [176])
	if ( ($0 == 0) ){ goto $label$84 }
	$3 = ($15 + [180])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$86 }
	
.LOOP $label$87:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$88 }
	CALL $82($2)
	
.LABEL $label$88
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$87 }
	$8 = *(($15 + [176]))
	goto $label$85 
	
.LABEL $label$86
	$8 = $0
	
.LABEL $label$85
	*($3) = $0
	CALL $82($8)
	
.LABEL $label$84
	*([0] + [4]) = ($15 + [288])
	return (unreachable)
	
.LABEL $label$4
	CALL $83(($15 + [120]))
	
.LABEL $label$3
	CALL $83(($15 + [32]))
	
.LABEL $label$2
	CALL $83(($15 + [32]))
	(unreachable)
	(unreachable)
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $79($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [11344])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $79 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [11430]) == 0) ){ goto $label$2 }
	$7 = *([0] + [11432])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [11430]) = [1]
	$7 = ($7 << [16])
	*([0] + [11432]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [11432])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [11432]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [11430]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [11430]) = [1]
	$3 = ($3 << [16])
	*([0] + [11432]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [11432])
	
.LABEL $label$8
	*([0] + [11432]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $81($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $88($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $82($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [352])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [352])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [352])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [432])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $81([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [464])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $31(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $82($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $31 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $81(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $88($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $82($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $82($6)
	
.LABEL $label$11
	(unreachable)
}