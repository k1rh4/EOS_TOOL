(data (i32.const 8232) "failed to allocate pages\00transfer\00")
(data (i32.const 8266) "newdexstaked\00")
(data (i32.const 8279) "Invalid symbol name\00")
(data (i32.const 8299) "NDX\00")
(data (i32.const 8303) "Please transfer NDX, symbol error\00")
(data (i32.const 8337) "newdexissuer\00")
(data (i32.const 8350) "Please transfer NDX, code error\00")
(data (i32.const 8382) "Vip level should be 1 to 10\00")
(data (i32.const 8410) "Month should be 1 to 12\00")
(data (i32.const 8434) "The account you want to consume does not exist\00")
(data (i32.const 8481) "Sorry, There is no corresponding month in the discount table\00")
(data (i32.const 8542) "Sorry, There is no corresponding level in the vip level table\00")
(data (i32.const 8604) "newdexpublic\00")
(data (i32.const 8617) "changelevel\00")
(data (i32.const 8629) "newdexadmin1\00")
(data (i32.const 8642) "modifylevel\00")
(data (i32.const 8654) "vip level should be 1 to 10\00")
(data (i32.const 8682) "vip level is not exist\00")
(data (i32.const 8705) "month should be 1 to 12\00")
(data (i32.const 8729) "rate should be 1 to 100\00")
(data (i32.const 8753) "can not delete 1 month\00")
(data (i32.const 8776) "month is not exist\00")
(data (i32.const 8795) "invalid symbol name\00")
(data (i32.const 8815) "please stake NDX\00")
(data (i32.const 8832) "must stake positive quantity\00")
(data (i32.const 8861) "only support EOS now\00")
(data (i32.const 8882) "EOS account not exists\00")
(data (i32.const 8905) "your balance is not enough\00")
(data (i32.const 8932) "please unstake NDX\00")
(data (i32.const 8951) "must unstake positive quantity\00")
(data (i32.const 8982) "you have not staked\00")
(data (i32.const 9002) "you don\'t have stake enough NDX\00")
(data (i32.const 9034) "string is too long to be a valid name\00")
(data (i32.const 9072) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 9139) "character is not in allowed character set for names\00")
(data (i32.const 9191) "string is too long to be a valid symbol_code\00")
(data (i32.const 9236) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9289) "invalid memo\00")
(data (i32.const 9302) "invalid first pos\00")
(data (i32.const 9320) "parse memo error\00")
(data (i32.const 9337) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9386) "Newdex: Remain quantity refund\00")
(data (i32.const 9417) "Sorry, You NDX quantity is not enough\00")
(data (i32.const 9455) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 9514) "attempt to subtract asset with different symbol\00")
(data (i32.const 9562) "subtraction underflow\00")
(data (i32.const 9584) "subtraction overflow\00")
(data (i32.const 9605) "write\00")
(data (i32.const 9611) "match discount table should not be null \00")
(data (i32.const 9652) "error reading iterator\00")
(data (i32.const 9675) "get\00")
(data (i32.const 9679) "read\00")
(data (i32.const 9684) "cannot increment end iterator\00")
(data (i32.const 9714) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9765) "multiplication overflow\00")
(data (i32.const 9789) "multiplication underflow\00")
(data (i32.const 9814) "cannot create objects in table of another contract\00")
(data (i32.const 9865) "cannot pass end iterator to modify\00")
(data (i32.const 9900) "object passed to modify is not in multi_index\00")
(data (i32.const 9946) "cannot modify objects in table of another contract\00")
(data (i32.const 9997) "updater cannot change primary key when modifying an object\00")
(data (i32.const 10056) "Sorry, Your membership time has reached maximum\00")
(data (i32.const 10104) "Sorry, Upgrade level should be higher than before\00")
(data (i32.const 10154) "attempt to add asset with different symbol\00")
(data (i32.const 10197) "addition underflow\00")
(data (i32.const 10216) "addition overflow\00")
(data (i32.const 10234) "cannot pass end iterator to erase\00")
(data (i32.const 10268) "object passed to erase is not in multi_index\00")
(data (i32.const 10313) "cannot erase objects in table of another contract\00")
(data (i32.const 10363) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10416) "next primary key in table is at autoincrement limit\00")
(data (i32.const 10468) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 10522) "cannot decrement iterator at beginning of table\00")
(data (i32.const 0) "P)\00\00")
(import "env" "abort" (func $fimport$0))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$5 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$8 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$11 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$13 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$14 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$15 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$16 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$18 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$19 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$20 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$21 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$22 (param i64 i64) (result i32)))
(import "env" "action_data_size" (func $fimport$23 (result i32)))
(import "env" "read_action_data" (func $fimport$24 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$25 (param i64)))
(import "env" "is_account" (func $fimport$26 (param i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$27 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$28 (result i64)))
(import "env" "db_store_i64" (func $fimport$29 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$30 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$31 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$32 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$33 (result i64)))
(import "env" "get_active_producers" (func $fimport$34 (param i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$35 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$36 (param i32 i32) (result i32)))
(import "env" "cancel_deferred" (func $fimport$37 (param i32) (result i32)))
(import "env" "has_auth" (func $fimport$38 (param i64) (result i32)))
(import "env" "send_inline" (func $fimport$39 (param i32 i32)))
(import "env" "send_deferred" (func $fimport$40 (param i32 i64 i32 i32 i32)))
(import "env" "eosio_assert_code" (func $fimport$41 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$42 (param i32 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$43 (param i32 i64 i32 i32)))
(import "env" "db_remove_i64" (func $fimport$44 (param i32)))
(import "env" "db_previous_i64" (func $fimport$45 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$46 (param i64 i64 i64) (result i32)))
(export "apply" (func $28))
(table $0 13 13 anyfunc)
(elem (i32.const 1) $30 $34 $36 $38 $40 $41 $43 $45 $47 $48 $50 $52)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 10570))
(global $global$2 i32 (i32.const 10570))


void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	*($1 + [32]) = (int_64)0
	*($1 + [40]) = [0]
	$4 = *($1)
	$5 = $2
	$2 = ($5 + [-48])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($5 + [-4])
	CALL $75($3, $1)
	CALL db_update_i64(*($1 + [48]), (int_64)0, $2, [44])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9679])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9679])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9679])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9679])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	*($2) = $4
	CALL $138($2, $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $94 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $10($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $10($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $10($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $10($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $10($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10268])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10313])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10363])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [48]))
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9679])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9679])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9679])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9679])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [32])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	*($2) = $0
	CALL $137($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9605])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *(($5 + [16]))
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9605])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $90 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	*($1 + [8]) = (int_64))(*($1 + [8]) - *(*($2)))
	$5 = *($1)
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($2 + [-4])
	CALL $75($4, $1)
	CALL db_update_i64(*($1 + [48]), (int_64)0, $3, [44])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [16])
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9562])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9584])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [9997])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $92 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $8(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	*(($6 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16 align=4]) = (int_64)0
	*(($3 = ($6 + [24]))) = [0]
	$2 = CALL $8([16])
	*($6 + [16]) = $2
	*($6 + [28 align=4]) = (int_64)0
	*(($6 + [36])) = [0]
	$7 = ($2 + [16])
	*($3) = $7
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($6 + [20])) = $7
	CALL $66(($6 + [28]), [8])
	$2 = ((int_32)$8 * (int_32)[40])
	$8 = *($6 + [28])
	if ( ((int_32)(*(($6 + [32])) - $8) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$5
	$9 = ($5 + $2)
	CALL memcpy($8, $4, [8])
	$10 = ($6 + [40])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$7 }
	$11 = ($2 - $7)
	$1 = [0]
	
.LOOP $label$8:
	$8 = ($7 + $1)
	*((($2 = ($6 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($8 + [-24])
	*($5) = *($4)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($4) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$8 }
	$6 = ($6 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$5 = $2
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$11 }
	*(($2 + [-8])) = $8
	CALL $10($8)
	
.LABEL $label$11
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$12 }
	*(($2 + [-20])) = $1
	CALL $10($1)
	
.LABEL $label$12
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ($5 == 0) ){ goto $label$13 }
	CALL $10($5)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $93 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $113(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $66($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $114(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL $10($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

void .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [9679])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0)
	$3 = ($4 + [40])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [9679])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9679])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [14]), $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*(($4 + [41])) = ((int_32)*($2 + [14]) != (int_32)[0])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [9679])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy(($2 + [15]), $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*(($4 + [42])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$3 = ($4 + [43])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$0 = ($4 + [44])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [9679])
	$4 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $4, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $123 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [9679])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	CALL memcpy(($3 + [47]), $2, [1])
	$5 = ($2 + [1])
	$6 = ($2 + $4)
	if ( ((uint_32)($4 + [-1]) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL memcpy(($3 + [32]), $5, [8])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [9])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $30($3, *($3 + [47]), *($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $115 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*(($3 + [20])) = $2
	*(($3 + [24])) = ($2 + $4)
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	CALL $38($3)
	$global$0 = ($3 + [32])
}

void .FUNC $122 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$6
	CALL memcpy(($3 + [8]), $6, [1])
	$4 = *($3 + [8])
	*(($3 + [32])) = $5
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [9])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	CALL $43(($3 + [8]), *($3 + [40]), ((int_32)$4 != (int_32)[0]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $131($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $8($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $20($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $20($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $17($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $10($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9675])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $66($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

int_32 .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9605])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9605])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9605])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $134 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $121 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	CALL $34(($3 + [8]), *($3 + [40]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [9605])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $133($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

void .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [40])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9679])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9679])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 + [48])) = *($2)
	*($6) = (*($6) + [8])
	$5 = *($0)
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((int_32)*($6 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [9679])
	$4 = *(($6 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [15]), $4, [1])
	*(($6 = ($6 + [4]))) = (*($6) + [1])
	*(($5 + [56])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$0 = ($5 + [57])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((int_32)*($6 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [9679])
	$4 = *(($6 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $4, [1])
	*(($6 = ($6 + [4]))) = (*($6) + [1])
	$6 = ($5 + [58])
	$5 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	$5 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $120 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [112]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$6
	CALL memcpy(($3 + [112]), $5, [8])
	*($3 + [104]) = (int_64)0
	*($3 + [96]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$7
	CALL memcpy(($3 + [96]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$8
	CALL memcpy(($3 + [40]), $5, [8])
	*((($3 + [96]) + [8])) = *($3 + [40])
	*($3 + [88]) = [0]
	$6 = ($2 + [32])
	$5 = ($4 & [-4])
	if ( ((int_32)$5 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$9
	CALL memcpy(($3 + [88]), $6, [4])
	*($3 + [80]) = [0]
	$6 = ($2 + [36])
	if ( ((int_32)$5 != (int_32)[36]) ){ goto $label$10 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$10
	CALL memcpy(($3 + [80]), $6, [4])
	$6 = ($2 + [40])
	if ( ((int_32)$4 != (int_32)[40]) ){ goto $label$11 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$11
	CALL memcpy(($3 + [79]), $6, [1])
	$6 = ($2 + [41])
	if ( ((int_32)$4 != (int_32)[41]) ){ goto $label$12 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$12
	CALL memcpy(($3 + [40]), $6, [1])
	$6 = ($2 + [42])
	if ( ((int_32)$4 != (int_32)[42]) ){ goto $label$13 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$13
	CALL memcpy(($3 + [40]), $6, [1])
	$6 = ($2 + [43])
	$5 = *($3 + [40])
	if ( ((int_32)$4 != (int_32)[43]) ){ goto $label$14 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$14
	$7 = ($2 + $4)
	CALL memcpy(($3 + [78]), $6, [1])
	$6 = ($2 + [44])
	if ( ((int_32)$4 != (int_32)[44]) ){ goto $label$15 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$15
	CALL memcpy(($3 + [77]), $6, [1])
	*(($3 + [64])) = $7
	*((($3 + [8]) + [8])) = *((($3 + [24]) + [8]))
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [45])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	*($3 + [8]) = *($3 + [24])
	CALL $45(($3 + [40]), *($3 + [120]), $0, ($3 + [8]), $3, $3, [0], [0], ((int_32)($5 & [255]) != (int_32)[0]), [0], *($3 + [77]))
	$global$0 = ($3 + [128])
}

void .FUNC $38 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = ($global$0 - [96])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = *($0)
	$3 = CALL $1([8299])
	if ( ($3 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9191])
	goto $label$3 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = (int_64)0
	
.LOOP $label$5:
	$5 = *(($3 + [8298]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9236])
	
.LABEL $label$6
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$5 }
	$4 = ((int_64)$4 & (int_64)72057594037927935)
	goto $label$1 
	
.LABEL $label$2
	$4 = (int_64)0
	
.LABEL $label$1
	*(($6 = (($1 + [16]) + [32]))) = [0]
	*($1 + [24]) = $4
	*($1 + [32]) = (int_64)-1
	*($1 + [40]) = (int_64)0
	*($1 + [16]) = $2
	*($1 + [88]) = *($0)
	if ( ((int_64)$2 == (int_64)CALL current_receiver()) ){ goto $label$7 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$7
	*($1 + [68]) = ($1 + [8])
	*($1 + [64]) = ($1 + [16])
	*($1 + [72]) = ($1 + [88])
	*(($3 = CALL $8([32])) + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = ($1 + [16])
	CALL $69(($1 + [64]), $3)
	*($1 + [80]) = $3
	$4 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8
	*($1 + [64]) = $4)
	$0 = *($3 + [20])
	*($1 + [60]) = $0
	$7 = ($1 + [44])
	$5 = *($7)
	if ( ((uint_32)$5 >= (uint_32)*($6)) ){ goto $label$10 }
	*($5 + [8]) = $4
	*($5 + [16]) = $0
	*($1 + [80]) = [0]
	*($5) = $3
	*($7) = ($5 + [24])
	$3 = *($1 + [80])
	*($1 + [80]) = [0]
	if ( $3 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $70(($1 + [40]), ($1 + [80]), ($1 + [64]), ($1 + [60]))
	$3 = *($1 + [80])
	*($1 + [80]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $10($3)
	
.LABEL $label$8
	$0 = *($1 + [40])
	if ( ($0 == 0) ){ goto $label$11 }
	$6 = ($1 + [44])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$15 }
	CALL $10($5)
	
.LABEL $label$15
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$14 }
	$3 = *(($1 + [40]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $0
	
.LABEL $label$12
	*($6) = $0
	CALL $10($3)
	
.LABEL $label$11
	$global$0 = ($1 + [96])
}

void .FUNC $126 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [9679])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	CALL memcpy(($3 + [47]), $2, [1])
	*(($3 + [28])) = ($2 + [1])
	*(($3 + [32])) = ($2 + $4)
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	CALL $50(($3 + [8]), *($3 + [47]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $49 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$3 = ($global$0 - [256])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [128]))) = (int_64)0
	*(($8 = ($4 + [144]))) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [136]) = (int_64)0
	*($4 + [152]) = [0]
	*($4 + [154]) = [0]
	*($4 + [84]) = $2
	*($4 + [80]) = $2
	*($4 + [88]) = ($2 + $7)
	*($4 + [240]) = ($4 + [80])
	*($4 + [48]) = ($4 + [96])
	CALL $96(($4 + [48]), ($4 + [240]))
	*(($9 = (($4 + [32]) + [8]))) = *($4 + [88])
	*($4 + [32]) = *($4 + [80])
	*(($10 = (($4 + [224]) + [8]))) = *($9)
	*($4 + [224]) = *($4 + [32])
	$9 = *($10)
	*((($4 + [240]) + [8])) = $9
	*(($4 + [72])) = $9
	*($4 + [48]) = $0
	*($4 + [56]) = $1
	$0 = *($4 + [224])
	*($4 + [64]) = $0
	*($4 + [240]) = $0
	*(($9 = (($4 + [176]) + [8]))) = *($3)
	*(($3 = (($4 + [160]) + [8]))) = *($8)
	*($4 + [176]) = *($4 + [120])
	*($4 + [160]) = *($4 + [136])
	$0 = *($4 + [112])
	$1 = *($4 + [104])
	$11 = *($4 + [96])
	$8 = *($4 + [152])
	$10 = *($4 + [153])
	$12 = *($4 + [154])
	*((($4 + [208]) + [8])) = *($3)
	*((($4 + [192]) + [8])) = *($9)
	*($4 + [208]) = *($4 + [160])
	*($4 + [192]) = *($4 + [176])
	$3 = (($4 + [48]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$13 = *((($4 + [192]) + [8]))
	*((($4 + [240]) + [8])) = $13
	$14 = *((($4 + [208]) + [8]))
	*((($4 + [224]) + [8])) = $14
	*((($4 + [16]) + [8])) = $13
	*(($4 + [8])) = $14
	$13 = *($4 + [192])
	*($4 + [240]) = $13
	$14 = *($4 + [208])
	*($4 + [224]) = $14
	*($4 + [16]) = $13
	*($4) = $14
	CALL void $3((int_32 $11), (int_64 $1), (int_64 $0), (int_64 ($4 + [16])), (int_32 $4), (int_32 ((int_32)($8 & [255]) != (int_32)[0])), (int_32 ($10 & [255])), (int_32 ($12 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	$global$0 = ($4 + [256])
	return [1]
}

void .FUNC $48 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	$9 = ($global$0 - [144])
	$global$0 = $9
	CALL require_auth(*($0))
	if ( ((int_64)$2 != (int_64)6138406292105986048) ){ goto $label$1 }
	if ( ($6 == 0) ){ goto $label$1 }
	$2 = *($0)
	*($9 + [56]) = [8604]
	*($9 + [60]) = CALL $1([8604])
	*($9 + [8]) = *($9 + [56])
	$0 = CALL $29(($9 + [64]), ($9 + [8]))
	*($9 + [40]) = [8642]
	*($9 + [44]) = CALL $1([8642])
	*($9) = *($9 + [40])
	$6 = CALL $29(($9 + [48]), $9)
	*((($9 + [16]) + [16])) = *(($5 + [8]))
	*($9 + [16]) = $3
	*($9 + [24]) = *($5)
	*($9 + [72]) = *($0)
	*($9 + [80]) = *($6)
	*(($0 = CALL $8([16]))) = $2
	*($0 + [8]) = (int_64)3617214756542218240
	*(($9 + [108])) = [0]
	$5 = ($0 + [16])
	*((($9 + [72]) + [24])) = $5
	*(($9 + [92])) = $5
	*($9 + [88]) = $0
	*($9 + [100 align=4]) = (int_64)0
	CALL $66(($9 + [100]), [24])
	$6 = ($9 + [104])
	$0 = *($6)
	$5 = *($9 + [100])
	*($9 + [116]) = $5
	*($9 + [112]) = $5
	*($9 + [120]) = $0
	*($9 + [128]) = ($9 + [112])
	*($9 + [136]) = ($9 + [16])
	CALL $97(($9 + [136]), ($9 + [128]))
	CALL $68(($9 + [72]))
	$0 = *($9 + [100])
	if ( ($0 == 0) ){ goto $label$2 }
	*($6) = $0
	CALL $10($0)
	
.LABEL $label$2
	$0 = *($9 + [88])
	if ( ($0 == 0) ){ goto $label$1 }
	*(($9 + [92])) = $0
	CALL $10($0)
	
.LABEL $label$1
	$global$0 = ($9 + [144])
}

void .FUNC $125 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [9679])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	CALL memcpy(($3 + [47]), $2, [1])
	$5 = ($2 + [1])
	$6 = ($2 + $4)
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL memcpy(($3 + [46]), $5, [1])
	*(($3 + [32])) = $6
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [2])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	CALL $41(($3 + [8]), *($3 + [47]), *($3 + [46]))
	$global$0 = ($3 + [48])
}

void .FUNC $43 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [256])
	$global$0 = $3
	CALL require_auth($1)
	$4 = [0]
	*($3 + [223]) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	*($3 + [223]) = [1]
	$2 = CALL $1([8299])
	if ( ($2 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9191])
	goto $label$6 
	
.LABEL $label$8
	*($3 + [223]) = [0]
	*((($3 + [176]) + [32])) = [0]
	*($3 + [192]) = (int_64)-1
	*($3 + [200]) = (int_64)0
	$5 = *($0)
	*($3 + [176]) = $5
	*($3 + [184]) = $5
	$2 = CALL db_find_i64($5, $5, (int_64)4983106858454614016, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$9 }
	$2 = CALL $59(($3 + [176]), $2)
	if ( ((int_32)*($2 + [44]) == (int_32)($3 + [176])) ){ goto $label$10 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$10
	$4 = *($2 + [8])
	
.LABEL $label$9
	$5 = *($0)
	*($3 + [56]) = [8604]
	*($3 + [60]) = CALL $1([8604])
	*($3 + [32]) = *($3 + [56])
	$2 = CALL $29(($3 + [64]), ($3 + [32]))
	*($3 + [40]) = [8617]
	*($3 + [44]) = CALL $1([8617])
	*($3 + [24]) = *($3 + [40])
	$6 = CALL $29(($3 + [48]), ($3 + [24]))
	*(($7 = ($3 + [152]))) = [0]
	*($3 + [80]) = $4
	*($3 + [72]) = $1
	*($3 + [144]) = (int_64)0
	*($3 + [128]) = *($2)
	*($3 + [136]) = *($6)
	*(($2 = CALL $8([16]))) = $5
	*($2 + [8]) = (int_64)3617214756542218240
	*(($3 + [164])) = [0]
	$4 = ($2 + [16])
	*($7) = $4
	*(($3 + [148])) = $4
	*($3 + [144]) = $2
	*($3 + [156 align=4]) = (int_64)0
	CALL $66(($3 + [156]), [9])
	$2 = *($3 + [156])
	$4 = (*((($3 + [128]) + [32])) - $2)
	if ( ((int_32)$4 > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$11
	$6 = (($3 + [72]) + [8])
	CALL memcpy($2, ($3 + [72]), [8])
	$2 = ($2 + [8])
	if ( ((int_32)($4 + [-8]) > (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$12
	CALL memcpy($2, $6, [1])
	CALL $68(($3 + [128]))
	$2 = *($3 + [156])
	if ( ($2 == 0) ){ goto $label$13 }
	*(($3 + [160])) = $2
	CALL $10($2)
	
.LABEL $label$13
	$2 = *($3 + [144])
	if ( ($2 == 0) ){ goto $label$14 }
	*(($3 + [148])) = $2
	CALL $10($2)
	
.LABEL $label$14
	$6 = *($3 + [200])
	if ( ($6 == 0) ){ goto $label$1 }
	$7 = ($3 + [204])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$15:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $10($4)
	
.LABEL $label$16
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$15 }
	$2 = *(($3 + [200]))
	goto $label$4 
	
.LABEL $label$7
	if ( ($2 == 0) ){ goto $label$3 }
	
.LABEL $label$6
	$5 = (int_64)0
	
.LOOP $label$17:
	$4 = *(($2 + [8298]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [9236])
	
.LABEL $label$18
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$17 }
	$8 = ((int_64)$5 << (int_64)8)
	goto $label$2 
	
.LABEL $label$5
	$2 = $6
	
.LABEL $label$4
	*($7) = $6
	CALL $10($2)
	goto $label$1 
	
.LABEL $label$3
	$8 = (int_64)0
	
.LABEL $label$2
	$5 = (uint_64)$8 >> (uint_64)(int_64)8)
	$9 = ((int_64)$8 | (int_64)4)
	$2 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$5 = $8
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	$5 = $8
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$20 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$23 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [8795])
	
.LABEL $label$19
	*((($3 + [176]) + [32])) = [0]
	*($3 + [192]) = (int_64)-1
	*($3 + [200]) = (int_64)0
	$5 = *($0)
	*($3 + [176]) = $5
	*($3 + [184]) = $1
	$10 = (int_64)0
	$2 = CALL db_find_i64($5, $1, (int_64)-4157660971118100480, (int_64)6138406292105986048)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$24 }
	$2 = CALL $64(($3 + [176]), $2)
	if ( ((int_32)*($2 + [44]) == (int_32)($3 + [176])) ){ goto $label$25 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$25
	$10 = *($2 + [8])
	$2 = CALL $1([8299])
	if ( ($2 <= [8]) ){ goto $label$29 }
	CALL eosio_assert([0], [9191])
	goto $label$28 
	
.LABEL $label$29
	if ( ($2 == 0) ){ goto $label$27 }
	
.LABEL $label$28
	$5 = (int_64)0
	
.LOOP $label$30:
	$4 = *(($2 + [8298]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$31 }
	CALL eosio_assert([0], [9236])
	
.LABEL $label$31
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$30 }
	$5 = ((int_64)$5 << (int_64)8)
	goto $label$26 
	
.LABEL $label$27
	$5 = (int_64)0
	
.LABEL $label$26
	if ( (uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$32 }
	CALL eosio_assert([0], [9337])
	
.LABEL $label$32
	$9 = ((int_64)$5 | (int_64)4)
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$35 }
	$5 = $8
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$34 }
	goto $label$24 
	
.LABEL $label$35
	$5 = $8
	
.LOOP $label$36:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$33 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$36 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$34 }
	goto $label$24 
	
.LABEL $label$33
	CALL eosio_assert([0], [8795])
	
.LABEL $label$24
	$5 = *($0)
	*($3 + [112]) = [8604]
	*($3 + [116]) = CALL $1([8604])
	*($3 + [16]) = *($3 + [112])
	$2 = CALL $29(($3 + [120]), ($3 + [16]))
	*($3 + [96]) = [8642]
	*($3 + [100]) = CALL $1([8642])
	*($3 + [8]) = *($3 + [96])
	$4 = CALL $29(($3 + [104]), ($3 + [8]))
	*((($3 + [72]) + [16])) = $9
	*(($6 = (($3 + [128]) + [24]))) = [0]
	*($3 + [80]) = $10
	*($3 + [72]) = $1
	*($3 + [144]) = (int_64)0
	*($3 + [128]) = *($2)
	*($3 + [136]) = *($4)
	*(($2 = CALL $8([16]))) = $5
	*($2 + [8]) = (int_64)3617214756542218240
	*(($3 + [164])) = [0]
	$4 = ($2 + [16])
	*($6) = $4
	*(($3 + [148])) = $4
	*($3 + [144]) = $2
	*($3 + [156 align=4]) = (int_64)0
	CALL $66(($3 + [156]), [24])
	$2 = *((($3 + [128]) + [32]))
	$4 = *($3 + [156])
	*($3 + [228]) = $4
	*($3 + [224]) = $4
	*($3 + [232]) = $2
	*($3 + [240]) = ($3 + [224])
	*($3 + [248]) = ($3 + [72])
	CALL $97(($3 + [248]), ($3 + [240]))
	CALL $68(($3 + [128]))
	$2 = *($3 + [156])
	if ( ($2 == 0) ){ goto $label$37 }
	*(($3 + [160])) = $2
	CALL $10($2)
	
.LABEL $label$37
	$2 = *($3 + [144])
	if ( ($2 == 0) ){ goto $label$38 }
	*(($3 + [148])) = $2
	CALL $10($2)
	
.LABEL $label$38
	$6 = *($3 + [200])
	if ( ($6 == 0) ){ goto $label$1 }
	$7 = ($3 + [204])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$40 }
	
.LOOP $label$41:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$42 }
	CALL $10($4)
	
.LABEL $label$42
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$41 }
	$2 = *(($3 + [200]))
	goto $label$39 
	
.LABEL $label$40
	$2 = $6
	
.LABEL $label$39
	*($7) = $6
	CALL $10($2)
	
.LABEL $label$1
	*(($3 + [208])) = [0]
	*($3 + [192]) = (int_64)-1
	*($3 + [200]) = (int_64)0
	$5 = *($0)
	*($3 + [176]) = $5
	*($3 + [184]) = $5
	$2 = CALL db_find_i64($5, $5, (int_64)-2617952418909913088, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$45 }
	$2 = CALL $57(($3 + [176]), $2)
	if ( ((int_32)*($2 + [12]) == (int_32)($3 + [176])) ){ goto $label$46 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$46
	*($3 + [128]) = ($3 + [223])
	CALL $108(($3 + [176]), $2, ($3 + [128]))
	$6 = *($3 + [200])
	if ( $6 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [176])) ){ goto $label$47 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$47
	*(($2 = CALL $8([24])) + [12]) = ($3 + [176])
	*($2) = $1
	*($2 + [8]) = *($3 + [223])
	CALL memcpy(($3 + [128]), $2, [8])
	CALL memcpy((($3 + [128]) | [8]), ($2 + [8]), [1])
	$5 = *($2)
	$6 = CALL db_store_i64(*((($3 + [176]) + [8])), (int_64)-2617952418909913088, $1, $5, ($3 + [128]), [9])
	*($2 + [16]) = $6
	$4 = ($3 + [192])
	if ( (uint_64)($5 <= *($4)) ){ goto $label$48 }
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$48
	*($3 + [72]) = $2
	$5 = *($2)
	*($3 + [128]) = $5
	*($3 + [224]) = $6
	$0 = ($3 + [204])
	$4 = *($0)
	if ( ((uint_32)$4 >= (uint_32)*(($3 + [208]))) ){ goto $label$51 }
	*($4 + [8]) = $5
	*($4 + [16]) = $6
	*($3 + [72]) = [0]
	*($4) = $2
	*($0) = ($4 + [24])
	$2 = *($3 + [72])
	*($3 + [72]) = [0]
	if ( $2 ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	CALL $58(($3 + [200]), ($3 + [72]), ($3 + [128]), ($3 + [224]))
	$2 = *($3 + [72])
	*($3 + [72]) = [0]
	if ( ($2 == 0) ){ goto $label$49 }
	
.LABEL $label$50
	CALL $10($2)
	
.LABEL $label$49
	$6 = *($3 + [200])
	if ( ($6 == 0) ){ goto $label$43 }
	
.LABEL $label$44
	$0 = ($3 + [204])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$53 }
	
.LOOP $label$54:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$55 }
	CALL $10($4)
	
.LABEL $label$55
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$54 }
	$2 = *(($3 + [200]))
	goto $label$52 
	
.LABEL $label$53
	$2 = $6
	
.LABEL $label$52
	*($0) = $6
	CALL $10($2)
	
.LABEL $label$43
	$global$0 = ($3 + [256])
}

int_32 .FUNC $42 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = [0]
	$3 = ($2 + $7)
	$8 = (($4 + [40]) | [1])
	if ( ($7 == 0) ){ goto $label$5 }
	CALL memcpy(($4 + [40]), $2, [1])
	$9 = ($2 + [1])
	if ( ((int_32)$7 != (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [9679])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [9679])
	CALL memcpy(($4 + [40]), $2, [1])
	$9 = ($2 + [1])
	
.LABEL $label$4
	CALL memcpy($8, $9, [1])
	*(($4 + [32])) = $3
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [2])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$8 = *($4 + [41])
	$9 = *($4 + [40])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 ($9 & [255])), (int_32 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $3($2)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC $41 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [96])
	$global$0 = $3
	*($3 + [75]) = $2
	*($3 + [56]) = [8629]
	*($3 + [60]) = CALL $1([8629])
	*($3 + [8]) = *($3 + [56])
	CALL require_auth(*(CALL $29(($3 + [64]), ($3 + [8]))))
	if ( ((($1 + [-1]) & [255]) <= [12]) ){ goto $label$1 }
	CALL eosio_assert([0], [8705])
	$2 = *($3 + [75])
	
.LABEL $label$1
	if ( ((($2 + [-1]) & [255]) <= [100]) ){ goto $label$2 }
	CALL eosio_assert([0], [8729])
	
.LABEL $label$2
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	$4 = *($0)
	*($3 + [16]) = $4
	*($3 + [24]) = $4
	$2 = CALL db_find_i64($4, $4, (int_64)5454011338646880256, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$2 = CALL $56(($3 + [16]), $2)
	if ( ((int_32)*($2 + [4]) == (int_32)($3 + [16])) ){ goto $label$6 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$6
	*($3 + [80]) = ($3 + [75])
	CALL $104(($3 + [16]), $2, ($3 + [80]))
	$0 = *($3 + [40])
	if ( $0 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [16])) ){ goto $label$7 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$7
	*(($2 = CALL $8([16])) + [4]) = ($3 + [16])
	*($2) = $1
	*($2 + [1]) = *($3 + [75])
	CALL memcpy(($3 + [80]), $2, [1])
	CALL memcpy((($3 + [80]) | [1]), ($2 + [1]), [1])
	$4 = *($2)
	$0 = CALL db_store_i64(*(($3 + [24])), (int_64)5454011338646880256, $5, $4, ($3 + [80]), [2])
	*($2 + [8]) = $0
	$1 = (($3 + [16]) + [16])
	if ( ((uint_64)*($1) > (uint_64)$4) ){ goto $label$8 }
	*($1) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$8
	*($3 + [88]) = $2
	$4 = *($2)
	*($3 + [80]) = $4
	*($3 + [76]) = $0
	$6 = ($3 + [44])
	$1 = *($6)
	if ( ((uint_32)$1 >= (uint_32)*(($3 + [48]))) ){ goto $label$11 }
	*($1 + [8]) = $4
	*($1 + [16]) = $0
	*($3 + [88]) = [0]
	*($1) = $2
	*($6) = ($1 + [24])
	$2 = *($3 + [88])
	*($3 + [88]) = [0]
	if ( $2 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $105(($3 + [40]), ($3 + [88]), ($3 + [80]), ($3 + [76]))
	$2 = *($3 + [88])
	*($3 + [88]) = [0]
	if ( ($2 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $10($2)
	
.LABEL $label$9
	$0 = *($3 + [40])
	if ( ($0 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($3 + [44])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $10($1)
	
.LABEL $label$15
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$14 }
	$2 = *(($3 + [40]))
	goto $label$12 
	
.LABEL $label$13
	$2 = $0
	
.LABEL $label$12
	*($6) = $0
	CALL $10($2)
	
.LABEL $label$3
	$global$0 = ($3 + [96])
}

void .FUNC $40 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	*($2 + [72]) = [8629]
	*($2 + [76]) = CALL $1([8629])
	*($2 + [8]) = *($2 + [72])
	if ( (CALL has_auth(*(CALL $29(($2 + [80]), ($2 + [8])))) == 0) ){ goto $label$2 }
	*($2 + [56]) = [8629]
	*($2 + [60]) = CALL $1([8629])
	*($2) = *($2 + [56])
	CALL require_auth(*(CALL $29(($2 + [64]), $2)))
	goto $label$1 
	
.LABEL $label$2
	CALL require_auth(*($0))
	
.LABEL $label$1
	*(($2 + [48])) = [0]
	*($2 + [32]) = (int_64)-1
	*($2 + [40]) = (int_64)0
	$3 = *($0)
	*($2 + [16]) = $3
	*($2 + [24]) = $1
	$0 = CALL db_find_i64($3, $1, (int_64)-4157660971118100480, (int_64)6138406292105986048)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	$0 = CALL $64(($2 + [16]), $0)
	if ( ((int_32)*($0 + [44]) == (int_32)($2 + [16])) ){ goto $label$7 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$7
	$1 = CALL $25()
	$4 = *($0 + [40])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((uint_32)$4 > (uint_32)(CASTING uint_32)(uint_64 ((int_64)$1 / (int_64)1000000))) ){ goto $label$6 }
	if ( ((int_64)*($0 + [8]) != (int_64)0) ){ goto $label$8 }
	if ( ((int_64)*($0 + [16]) != (int_64)0) ){ goto $label$8 }
	if ( ((int_64)*($0 + [24]) == (int_64)0) ){ goto $label$5 }
	
.LABEL $label$8
	CALL $98(($2 + [16]), $0)
	
.LABEL $label$6
	$5 = *($2 + [40])
	if ( ($5 == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$4 = CALL db_next_i64(*($0 + [48]), ($2 + [88]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$9 }
	CALL $64(($2 + [16]), $4)
	
.LABEL $label$9
	CALL $95(($2 + [16]), $0)
	$5 = *($2 + [40])
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($2 + [44])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $10($4)
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($2 + [40]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $5
	
.LABEL $label$10
	*($6) = $5
	CALL $10($0)
	
.LABEL $label$3
	$global$0 = ($2 + [96])
}

void .FUNC $47 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$5 = ($global$0 - [416])
	$global$0 = $5
	*($5 + [368]) = $3
	*($5 + [376]) = $2
	CALL require_auth($1)
	$6 = *($4 + [8])
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$5 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8795])
	
.LABEL $label$1
	$8 = CALL $1([8299])
	if ( ($8 <= [8]) ){ goto $label$10 }
	CALL eosio_assert([0], [9191])
	goto $label$9 
	
.LABEL $label$10
	if ( ($8 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$7 = (int_64)0
	
.LOOP $label$11:
	$10 = *(($8 + [8298]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$12 }
	CALL eosio_assert([0], [9236])
	
.LABEL $label$12
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$11 }
	if ( ((int_64)$6 == (int_64)((int_64)((int_64)$7 << (int_64)8) | (int_64)4)) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_64)$6 == (int_64)((int_64)0 | (int_64)4)) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [8815])
	
.LABEL $label$6
	if ( ((int_64)*($4) <= (int_64)0) ){ goto $label$16 }
	if ( ((int_64)$2 != (int_64)6138406292105986048) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL eosio_assert([0], [8832])
	if ( ((int_64)$2 == (int_64)6138406292105986048) ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], [8861])
	goto $label$13 
	
.LABEL $label$14
	if ( CALL is_account($3) ){ goto $label$13 }
	CALL eosio_assert([0], [8882])
	
.LABEL $label$13
	*(($5 + [360])) = [0]
	*($5 + [344]) = (int_64)-1
	$7 = (int_64)0
	*($5 + [352]) = (int_64)0
	$9 = *($0)
	*($5 + [328]) = $9
	*($5 + [336]) = $1
	$8 = CALL db_find_i64($9, $1, (int_64)-4157660971118100480, (int_64)6138406292105986048)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$18 }
	$8 = CALL $64(($5 + [328]), $8)
	if ( ((int_32)*($8 + [44]) == (int_32)($5 + [328])) ){ goto $label$19 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$19
	*($5 + [324]) = $8
	$7 = ((int_64)*($8 + [24]) + (int_64)*($8 + [16]))
	*($5 + [320]) = ($5 + [328])
	$8 = (($5 + [320]) | [4])
	goto $label$17 
	
.LABEL $label$18
	*($5 + [324]) = [0]
	*($5 + [320]) = ($5 + [328])
	$8 = (($5 + [320]) | [4])
	
.LABEL $label$17
	*($5 + [288]) = [8337]
	*($5 + [292]) = CALL $1([8337])
	*($5 + [24]) = *($5 + [288])
	CALL $72(($5 + [304]), *(CALL $29(($5 + [296]), ($5 + [24]))), $1, $6)
	if ( ((uint_64)(int_64))(*($5 + [304]) - $7) >= (uint_64)*($4)) ){ goto $label$20 }
	CALL eosio_assert([0], [8905])
	
.LABEL $label$20
	$7 = CALL $25()
	$8 = *($8)
	$10 = *($8 + [40])
	if ( ($10 == 0) ){ goto $label$21 }
	if ( ((uint_32)$10 > (uint_32)(CASTING uint_32)(uint_64 ((int_64)$7 / (int_64)1000000))) ){ goto $label$21 }
	if ( $8 ){ goto $label$22 }
	CALL eosio_assert([0], [9865])
	
.LABEL $label$22
	CALL $73(($5 + [328]), $8)
	$8 = *($5 + [324])
	
.LABEL $label$21
	$2 = *(($4 + [8]))
	$9 = *($4)
	$10 = (((int_64)*($5 + [376]) == (int_64)6138406292105986048) & ((int_64)*($5 + [368]) == (int_64)$1))
	*($5 + [287]) = $10
	if ( ($8 == 0) ){ goto $label$28 }
	if ( ($10 == 0) ){ goto $label$29 }
	$9 = ((int_64)*($8 + [8]) + (int_64)$9)
	
.LABEL $label$29
	*($5 + [36]) = $4
	*($5 + [32]) = ($5 + [287])
	*($5 + [40]) = ($5 + [320])
	CALL $74(($5 + [328]), $8, ($5 + [32]))
	if ( *($5 + [287]) ){ goto $label$25 }
	goto $label$27 
	
.LABEL $label$28
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [328])) ){ goto $label$30 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$30
	*(($8 = CALL $8([56])) + [44]) = ($5 + [328])
	*($8) = (int_64)6138406292105986048
	*($8 + [32]) = (int_64)0
	*($8 + [40]) = [0]
	$10 = *($5 + [287])
	$7 = *($4)
	$6 = ( $7 ? (int_64)0 : $10 )
	*($8 + [8]) = $6
	*($8 + [16]) = $6
	*($8 + [24]) = ( (int_64)0 ? $7 : $10 )
	*($5 + [248]) = (($5 + [32]) + [44])
	*($5 + [244]) = ($5 + [32])
	*($5 + [240]) = ($5 + [32])
	CALL $75(($5 + [240]), $8)
	$7 = *($8)
	$11 = CALL db_store_i64(*(($5 + [336])), (int_64)-4157660971118100480, $1, $7, ($5 + [32]), [44])
	*($8 + [48]) = $11
	$10 = ($5 + [344])
	if ( (uint_64)($7 <= *($10)) ){ goto $label$31 }
	*($10) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$31
	*($5 + [240]) = $8
	$7 = *($8)
	*($5 + [32]) = $7
	*($5 + [200]) = $11
	$12 = ($5 + [356])
	$10 = *($12)
	if ( ((uint_32)$10 >= (uint_32)*(($5 + [360]))) ){ goto $label$34 }
	*($10 + [8]) = $7
	*($10 + [16]) = $11
	*($5 + [240]) = [0]
	*($10) = $8
	*($12) = ($10 + [24])
	$8 = *($5 + [240])
	*($5 + [240]) = [0]
	if ( $8 ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	CALL $76(($5 + [352]), ($5 + [240]), ($5 + [32]), ($5 + [200]))
	$8 = *($5 + [240])
	*($5 + [240]) = [0]
	if ( ($8 == 0) ){ goto $label$32 }
	
.LABEL $label$33
	CALL $10($8)
	
.LABEL $label$32
	if ( *($5 + [287]) ){ goto $label$26 }
	
.LABEL $label$27
	*(($5 + [272])) = [0]
	*($5 + [256]) = (int_64)-1
	*($5 + [264]) = (int_64)0
	$7 = *($0)
	*($5 + [240]) = $7
	$6 = *($5 + [368])
	*($5 + [248]) = $6
	$8 = CALL db_find_i64($7, $6, (int_64)-4157660971118100480, *($5 + [376]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$36 }
	$8 = CALL $64(($5 + [240]), $8)
	if ( ((int_32)*($8 + [44]) == (int_32)($5 + [240])) ){ goto $label$37 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$37
	$7 = *($8 + [8])
	*($5 + [32]) = $4
	CALL $77(($5 + [240]), $8, ($5 + [32]))
	$9 = ((int_64)$7 + (int_64)$9)
	goto $label$35 
	
.LABEL $label$36
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [240])) ){ goto $label$38 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$38
	*(($8 = CALL $8([56])) + [40]) = [0]
	*($8 + [44]) = ($5 + [240])
	*($8 + [16]) = (int_64)0
	*($8 + [24]) = (int_64)0
	*($8 + [32]) = (int_64)0
	*($8) = *($5 + [376])
	*($8 + [8]) = *($4)
	*($5 + [208]) = (($5 + [32]) + [44])
	*($5 + [204]) = ($5 + [32])
	*($5 + [200]) = ($5 + [32])
	CALL $75(($5 + [200]), $8)
	$7 = *($8)
	$11 = CALL db_store_i64(*(($5 + [248])), (int_64)-4157660971118100480, $1, $7, ($5 + [32]), [44])
	*($8 + [48]) = $11
	$10 = ($5 + [256])
	if ( (uint_64)($7 <= *($10)) ){ goto $label$39 }
	*($10) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$39
	*($5 + [200]) = $8
	$7 = *($8)
	*($5 + [32]) = $7
	*($5 + [144]) = $11
	$12 = ($5 + [268])
	$10 = *($12)
	if ( ((uint_32)$10 >= (uint_32)*(($5 + [272]))) ){ goto $label$41 }
	*($10 + [8]) = $7
	*($10 + [16]) = $11
	*($5 + [200]) = [0]
	*($10) = $8
	*($12) = ($10 + [24])
	$8 = *($5 + [200])
	*($5 + [200]) = [0]
	if ( $8 ){ goto $label$40 }
	goto $label$35 
	
.LABEL $label$41
	CALL $76(($5 + [264]), ($5 + [200]), ($5 + [32]), ($5 + [144]))
	$8 = *($5 + [200])
	*($5 + [200]) = [0]
	if ( ($8 == 0) ){ goto $label$35 }
	
.LABEL $label$40
	CALL $10($8)
	
.LABEL $label$35
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	$7 = *($0)
	*($5 + [32]) = $7
	*($5 + [40]) = $1
	*($5 + [56]) = (int_64)0
	$8 = CALL db_lowerbound_i64($7, $1, (int_64)-4157661337911382144, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$24 }
	$8 = CALL $78(($5 + [32]), $8)
	if ( ((int_64)*($8 + [8]) != (int_64)*($5 + [376])) ){ goto $label$42 }
	$13 = [2]
	goto $label$23 
	
.LABEL $label$42
	$13 = [0]
	goto $label$23 
	
.LABEL $label$26
	$13 = [19]
	goto $label$23 
	
.LABEL $label$25
	$13 = [19]
	goto $label$23 
	
.LABEL $label$24
	$13 = [95]
	
.LABEL $label$23
	
.LOOP $label$43:
	goto $label$209 
	
.LABEL $label$211
	$8 = CALL $78(($5 + [32]), $8)
	if ( ((int_64)*($8 + [8]) != (int_64)*($5 + [376])) ){ goto $label$107 }
	$13 = [2]
	goto $label$43 
	
.LABEL $label$210
	if ( ((int_64)*($8 + [16]) == (int_64)*($5 + [368])) ){ goto $label$108 }
	$13 = [0]
	goto $label$43 
	
.LABEL $label$209
	$8 = CALL db_next_i64(*($8 + [36]), ($5 + [200]))
	if ( ((int_32)$8 >= (int_32)[0]) ){ goto $label$109 }
	$13 = [95]
	goto $label$43 
	
.LABEL $label$208
	*($5 + [212]) = $4
	*($5 + [204]) = ($5 + [376])
	*($5 + [200]) = ($5 + [32])
	*($5 + [208]) = ($5 + [368])
	*($5 + [104]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [32])) ){ goto $label$48 }
	$13 = [96]
	goto $label$43 
	
.LABEL $label$207
	CALL eosio_assert([0], [9814])
	$13 = [97]
	goto $label$43 
	
.LABEL $label$206
	*($5 + [148]) = ($5 + [200])
	*($5 + [144]) = ($5 + [32])
	*($5 + [152]) = ($5 + [104])
	*(($8 = CALL $8([48])) + [16]) = (int_64)0
	*($8 + [8]) = (int_64)0
	*($8 + [32]) = ($5 + [32])
	CALL $79(($5 + [144]), $8)
	*($5 + [384]) = $8
	$7 = *($8)
	*($5 + [144]) = $7
	$11 = *($8 + [36])
	*($5 + [408]) = $11
	$12 = ($5 + [60])
	$10 = *($12)
	if ( ((uint_32)$10 >= (uint_32)*(($5 + [64]))) ){ goto $label$47 }
	$13 = [101]
	goto $label$43 
	
.LABEL $label$205
	*($10 + [8]) = $7
	*($10 + [16]) = $11
	*($5 + [384]) = [0]
	*($10) = $8
	*($12) = ($10 + [24])
	$8 = *($5 + [384])
	*($5 + [384]) = [0]
	if ( $8 ){ goto $label$44 }
	goto $label$45 
	
.LABEL $label$204
	CALL $80(($5 + [56]), ($5 + [384]), ($5 + [144]), ($5 + [408]))
	$8 = *($5 + [384])
	*($5 + [384]) = [0]
	if ( ($8 == 0) ){ goto $label$46 }
	$13 = [99]
	goto $label$43 
	
.LABEL $label$203
	CALL $10($8)
	$13 = [100]
	goto $label$43 
	
.LABEL $label$202
	$11 = *($5 + [56])
	if ( ($11 == 0) ){ goto $label$106 }
	$13 = [4]
	goto $label$43 
	
.LABEL $label$201
	$12 = ($5 + [60])
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$103 }
	$13 = [5]
	goto $label$43 
	
.LABEL $label$200
	$13 = [6]
	goto $label$43 
	
.LABEL $label$199
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$101 }
	$13 = [7]
	goto $label$43 
	
.LABEL $label$198
	CALL $10($10)
	$13 = [8]
	goto $label$43 
	
.LABEL $label$197
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$102 }
	$13 = [9]
	goto $label$43 
	
.LABEL $label$196
	$8 = *(($5 + [56]))
	goto $label$100 
	
.LABEL $label$195
	$8 = $11
	$13 = [10]
	goto $label$43 
	
.LABEL $label$194
	*($12) = $11
	CALL $10($8)
	$13 = [11]
	goto $label$43 
	
.LABEL $label$193
	$11 = *($5 + [264])
	if ( ($11 == 0) ){ goto $label$99 }
	$13 = [12]
	goto $label$43 
	
.LABEL $label$192
	$12 = ($5 + [268])
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$98 }
	$13 = [13]
	goto $label$43 
	
.LABEL $label$191
	$13 = [14]
	goto $label$43 
	
.LABEL $label$190
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$96 }
	$13 = [15]
	goto $label$43 
	
.LABEL $label$189
	CALL $10($10)
	$13 = [16]
	goto $label$43 
	
.LABEL $label$188
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$97 }
	$13 = [17]
	goto $label$43 
	
.LABEL $label$187
	$8 = *(($5 + [264]))
	goto $label$95 
	
.LABEL $label$186
	$8 = $11
	$13 = [18]
	goto $label$43 
	
.LABEL $label$185
	*($12) = $11
	CALL $10($8)
	$13 = [19]
	goto $label$43 
	
.LABEL $label$184
	$8 = [0]
	*(($5 + [272])) = [0]
	*($5 + [256]) = (int_64)-1
	*($5 + [264]) = (int_64)0
	$6 = *($0)
	*($5 + [240]) = $6
	$7 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($5 + [248]) = $7)
	$10 = CALL db_find_i64($6, $7, (int_64)-4157508551318700032, $7)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$94 }
	$13 = [20]
	goto $label$43 
	
.LABEL $label$183
	$8 = CALL $81(($5 + [240]), $10)
	if ( ((int_32)*($8 + [16]) == (int_32)($5 + [240])) ){ goto $label$93 }
	$13 = [21]
	goto $label$43 
	
.LABEL $label$182
	CALL eosio_assert([0], [9714])
	$13 = [22]
	goto $label$43 
	
.LABEL $label$181
	$7 = *($0)
	*($5 + [32]) = $4
	if ( $8 ){ goto $label$92 }
	$13 = [92]
	goto $label$43 
	
.LABEL $label$180
	CALL eosio_assert([0], [9865])
	$13 = [23]
	goto $label$43 
	
.LABEL $label$179
	CALL $82(($5 + [240]), $8, $7, ($5 + [32]))
	*(($5 + [232])) = [0]
	*($5 + [216]) = (int_64)-1
	*($5 + [224]) = (int_64)0
	$7 = *($0)
	*($5 + [200]) = $7
	*($5 + [208]) = $7
	$8 = CALL db_find_i64($7, $7, (int_64)-2617952418909913088, *($5 + [368]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$91 }
	$13 = [24]
	goto $label$43 
	
.LABEL $label$178
	if ( ((int_32)*(CALL $57(($5 + [200]), $8) + [12]) == (int_32)($5 + [200])) ){ goto $label$90 }
	$13 = [25]
	goto $label$43 
	
.LABEL $label$177
	CALL eosio_assert([0], [9714])
	goto $label$89 
	
.LABEL $label$176
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [200])) ){ goto $label$51 }
	$13 = [85]
	goto $label$43 
	
.LABEL $label$175
	CALL eosio_assert([0], [9814])
	$13 = [86]
	goto $label$43 
	
.LABEL $label$174
	*(($8 = CALL $8([24])) + [12]) = ($5 + [200])
	*($8 + [8]) = [1]
	*($8) = *($5 + [368])
	CALL memcpy(($5 + [32]), $8, [8])
	CALL memcpy((($5 + [32]) | [8]), ($8 + [8]), [1])
	$7 = *($8)
	$11 = CALL db_store_i64(*((($5 + [200]) + [8])), (int_64)-2617952418909913088, $1, $7, ($5 + [32]), [9])
	*($8 + [16]) = $11
	$10 = ($5 + [216])
	if ( (uint_64)($7 <= *($10)) ){ goto $label$50 }
	$13 = [87]
	goto $label$43 
	
.LABEL $label$173
	*($10) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$13 = [88]
	goto $label$43 
	
.LABEL $label$172
	*($5 + [144]) = $8
	$7 = *($8)
	*($5 + [32]) = $7
	*($5 + [104]) = $11
	$12 = ($5 + [228])
	$10 = *($12)
	if ( ((uint_32)$10 >= (uint_32)*(($5 + [232]))) ){ goto $label$49 }
	$13 = [91]
	goto $label$43 
	
.LABEL $label$171
	*($10 + [8]) = $7
	*($10 + [16]) = $11
	*($5 + [144]) = [0]
	*($10) = $8
	*($12) = ($10 + [24])
	$8 = *($5 + [144])
	*($5 + [144]) = [0]
	if ( $8 ){ goto $label$86 }
	goto $label$87 
	
.LABEL $label$170
	CALL $58(($5 + [224]), ($5 + [144]), ($5 + [32]), ($5 + [104]))
	$8 = *($5 + [144])
	*($5 + [144]) = [0]
	if ( ($8 == 0) ){ goto $label$88 }
	$13 = [90]
	goto $label$43 
	
.LABEL $label$169
	CALL $10($8)
	$13 = [26]
	goto $label$43 
	
.LABEL $label$168
	*(($5 + [16])) = $2
	*($5 + [192]) = $2
	*($5 + [8]) = $9
	*($5 + [184]) = $9
	$14 = CALL $65($0, ($5 + [8]))
	$15 = [0]
	*(($5 + [176])) = [0]
	*($5 + [160]) = (int_64)-1
	*($5 + [168]) = (int_64)0
	$7 = *($0)
	*($5 + [144]) = $7
	*($5 + [152]) = $7
	$8 = CALL db_find_i64($7, $7, (int_64)4983106858454614016, *($5 + [368]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$85 }
	$13 = [27]
	goto $label$43 
	
.LABEL $label$167
	$8 = CALL $59(($5 + [144]), $8)
	if ( ((int_32)*($8 + [44]) == (int_32)($5 + [144])) ){ goto $label$84 }
	$13 = [28]
	goto $label$43 
	
.LABEL $label$166
	CALL eosio_assert([0], [9714])
	$13 = [29]
	goto $label$43 
	
.LABEL $label$165
	$15 = *($8 + [8])
	$13 = [30]
	goto $label$43 
	
.LABEL $label$164
	$7 = *($5 + [368])
	$10 = *(($5 + [228]))
	$12 = *(($5 + [224]))
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$83 }
	$13 = [31]
	goto $label$43 
	
.LABEL $label$163
	$13 = [32]
	goto $label$43 
	
.LABEL $label$162
	$8 = ($10 + [-24])
	$11 = *($8)
	if ( ((int_64)*($11) == (int_64)$7) ){ goto $label$80 }
	$13 = [33]
	goto $label$43 
	
.LABEL $label$161
	$10 = $8
	if ( ((int_32)$12 != (int_32)$8) ){ goto $label$81 }
	goto $label$82 
	
.LABEL $label$160
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$79 }
	$13 = [80]
	goto $label$43 
	
.LABEL $label$159
	if ( ((int_32)*(($11 + [12])) == (int_32)($5 + [200])) ){ goto $label$52 }
	$13 = [81]
	goto $label$43 
	
.LABEL $label$158
	CALL eosio_assert([0], [9714])
	$13 = [82]
	goto $label$43 
	
.LABEL $label$157
	if ( $11 ){ goto $label$76 }
	$13 = [83]
	goto $label$43 
	
.LABEL $label$156
	$8 = [0]
	goto $label$75 
	
.LABEL $label$155
	$8 = [0]
	$10 = CALL db_find_i64(*($5 + [200]), *(($5 + [208])), (int_64)-2617952418909913088, $7)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$78 }
	$13 = [35]
	goto $label$43 
	
.LABEL $label$154
	$11 = CALL $57(($5 + [200]), $10)
	if ( ((int_32)*($11 + [12]) == (int_32)($5 + [200])) ){ goto $label$77 }
	$13 = [36]
	goto $label$43 
	
.LABEL $label$153
	CALL eosio_assert([0], [9714])
	$13 = [37]
	goto $label$43 
	
.LABEL $label$152
	$8 = ((int_32)*($11 + [8]) == (int_32)[1])
	$13 = [38]
	goto $label$43 
	
.LABEL $label$151
	$7 = *($0)
	*(($5 + [80])) = $2
	*(($10 = ($5 + [128]))) = [0]
	*((($5 + [32]) + [32])) = *(($4 + [8]))
	*($5 + [32]) = $1
	*($5 + [72]) = $9
	*($5 + [88]) = $8
	*($5 + [89]) = $14
	*($5 + [90]) = $15
	*($5 + [104]) = $7
	*($5 + [112]) = (int_64)-4157661080438439936
	*($5 + [120]) = (int_64)0
	*($5 + [40]) = *($5 + [376])
	*($5 + [48]) = *($5 + [368])
	*($5 + [56]) = *($4)
	*(($8 = CALL $8([16]))) = $7
	*($8 + [8]) = (int_64)3617214756542218240
	*(($5 + [140])) = [0]
	$11 = ($8 + [16])
	*($10) = $11
	*(($5 + [124])) = $11
	*($5 + [120]) = $8
	*($5 + [132 align=4]) = (int_64)0
	CALL $66(($5 + [132]), [59])
	$11 = (($5 + [104]) + [32])
	$8 = *($11)
	$10 = *($5 + [132])
	*($5 + [388]) = $10
	*($5 + [384]) = $10
	*($5 + [392]) = $8
	*($5 + [400]) = ($5 + [384])
	*($5 + [408]) = ($5 + [32])
	CALL $83(($5 + [408]), ($5 + [400]))
	CALL $68(($5 + [104]))
	$8 = *($5 + [132])
	if ( ($8 == 0) ){ goto $label$74 }
	$13 = [39]
	goto $label$43 
	
.LABEL $label$150
	*($11) = $8
	CALL $10($8)
	$13 = [40]
	goto $label$43 
	
.LABEL $label$149
	$8 = *($5 + [120])
	if ( ($8 == 0) ){ goto $label$73 }
	$13 = [41]
	goto $label$43 
	
.LABEL $label$148
	*(($5 + [124])) = $8
	CALL $10($8)
	$13 = [42]
	goto $label$43 
	
.LABEL $label$147
	$11 = *($5 + [168])
	if ( ($11 == 0) ){ goto $label$72 }
	$13 = [43]
	goto $label$43 
	
.LABEL $label$146
	$4 = ($5 + [172])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$71 }
	$13 = [44]
	goto $label$43 
	
.LABEL $label$145
	$13 = [45]
	goto $label$43 
	
.LABEL $label$144
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$69 }
	$13 = [46]
	goto $label$43 
	
.LABEL $label$143
	CALL $10($10)
	$13 = [47]
	goto $label$43 
	
.LABEL $label$142
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$70 }
	$13 = [48]
	goto $label$43 
	
.LABEL $label$141
	$8 = *(($5 + [168]))
	goto $label$68 
	
.LABEL $label$140
	$8 = $11
	$13 = [49]
	goto $label$43 
	
.LABEL $label$139
	*($4) = $11
	CALL $10($8)
	$13 = [50]
	goto $label$43 
	
.LABEL $label$138
	$11 = *($5 + [224])
	if ( ($11 == 0) ){ goto $label$67 }
	$13 = [51]
	goto $label$43 
	
.LABEL $label$137
	$4 = ($5 + [228])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$66 }
	$13 = [52]
	goto $label$43 
	
.LABEL $label$136
	$13 = [53]
	goto $label$43 
	
.LABEL $label$135
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$64 }
	$13 = [54]
	goto $label$43 
	
.LABEL $label$134
	CALL $10($10)
	$13 = [55]
	goto $label$43 
	
.LABEL $label$133
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$65 }
	$13 = [56]
	goto $label$43 
	
.LABEL $label$132
	$8 = *(($5 + [224]))
	goto $label$63 
	
.LABEL $label$131
	$8 = $11
	$13 = [57]
	goto $label$43 
	
.LABEL $label$130
	*($4) = $11
	CALL $10($8)
	$13 = [58]
	goto $label$43 
	
.LABEL $label$129
	$11 = *($5 + [264])
	if ( ($11 == 0) ){ goto $label$62 }
	$13 = [59]
	goto $label$43 
	
.LABEL $label$128
	$4 = ($5 + [268])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$61 }
	$13 = [60]
	goto $label$43 
	
.LABEL $label$127
	$13 = [61]
	goto $label$43 
	
.LABEL $label$126
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$59 }
	$13 = [62]
	goto $label$43 
	
.LABEL $label$125
	CALL $10($10)
	$13 = [63]
	goto $label$43 
	
.LABEL $label$124
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$60 }
	$13 = [64]
	goto $label$43 
	
.LABEL $label$123
	$8 = *(($5 + [264]))
	goto $label$58 
	
.LABEL $label$122
	$8 = $11
	$13 = [65]
	goto $label$43 
	
.LABEL $label$121
	*($4) = $11
	CALL $10($8)
	$13 = [66]
	goto $label$43 
	
.LABEL $label$120
	$11 = *($5 + [352])
	if ( ($11 == 0) ){ goto $label$57 }
	$13 = [67]
	goto $label$43 
	
.LABEL $label$119
	$4 = ($5 + [356])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$56 }
	$13 = [68]
	goto $label$43 
	
.LABEL $label$118
	$13 = [69]
	goto $label$43 
	
.LABEL $label$117
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$54 }
	$13 = [70]
	goto $label$43 
	
.LABEL $label$116
	CALL $10($10)
	$13 = [71]
	goto $label$43 
	
.LABEL $label$115
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$55 }
	$13 = [72]
	goto $label$43 
	
.LABEL $label$114
	$8 = *(($5 + [352]))
	goto $label$53 
	
.LABEL $label$113
	$8 = $11
	$13 = [73]
	goto $label$43 
	
.LABEL $label$112
	*($4) = $11
	CALL $10($8)
	$13 = [74]
	goto $label$43 
	
.LABEL $label$111
	$global$0 = ($5 + [416])
	return 
	
.LABEL $label$110
	*($5 + [200]) = $4
	CALL $84(($5 + [32]), $8, ($5 + [200]))
	$11 = *($5 + [56])
	if ( $11 ){ goto $label$104 }
	goto $label$105 
	
.LABEL $label$109
	$13 = [1]
	goto $label$43 
	
.LABEL $label$108
	$13 = [3]
	goto $label$43 
	
.LABEL $label$107
	$13 = [0]
	goto $label$43 
	
.LABEL $label$106
	$13 = [11]
	goto $label$43 
	
.LABEL $label$105
	$13 = [11]
	goto $label$43 
	
.LABEL $label$104
	$13 = [4]
	goto $label$43 
	
.LABEL $label$103
	$13 = [94]
	goto $label$43 
	
.LABEL $label$102
	$13 = [6]
	goto $label$43 
	
.LABEL $label$101
	$13 = [8]
	goto $label$43 
	
.LABEL $label$100
	$13 = [10]
	goto $label$43 
	
.LABEL $label$99
	$13 = [19]
	goto $label$43 
	
.LABEL $label$98
	$13 = [93]
	goto $label$43 
	
.LABEL $label$97
	$13 = [14]
	goto $label$43 
	
.LABEL $label$96
	$13 = [16]
	goto $label$43 
	
.LABEL $label$95
	$13 = [18]
	goto $label$43 
	
.LABEL $label$94
	$13 = [22]
	goto $label$43 
	
.LABEL $label$93
	$13 = [22]
	goto $label$43 
	
.LABEL $label$92
	$13 = [23]
	goto $label$43 
	
.LABEL $label$91
	$13 = [84]
	goto $label$43 
	
.LABEL $label$90
	$13 = [26]
	goto $label$43 
	
.LABEL $label$89
	$13 = [26]
	goto $label$43 
	
.LABEL $label$88
	$13 = [26]
	goto $label$43 
	
.LABEL $label$87
	$13 = [26]
	goto $label$43 
	
.LABEL $label$86
	$13 = [90]
	goto $label$43 
	
.LABEL $label$85
	$13 = [30]
	goto $label$43 
	
.LABEL $label$84
	$13 = [29]
	goto $label$43 
	
.LABEL $label$83
	$13 = [34]
	goto $label$43 
	
.LABEL $label$82
	$13 = [34]
	goto $label$43 
	
.LABEL $label$81
	$13 = [32]
	goto $label$43 
	
.LABEL $label$80
	$13 = [79]
	goto $label$43 
	
.LABEL $label$79
	$13 = [34]
	goto $label$43 
	
.LABEL $label$78
	$13 = [38]
	goto $label$43 
	
.LABEL $label$77
	$13 = [37]
	goto $label$43 
	
.LABEL $label$76
	$13 = [37]
	goto $label$43 
	
.LABEL $label$75
	$13 = [38]
	goto $label$43 
	
.LABEL $label$74
	$13 = [40]
	goto $label$43 
	
.LABEL $label$73
	$13 = [42]
	goto $label$43 
	
.LABEL $label$72
	$13 = [50]
	goto $label$43 
	
.LABEL $label$71
	$13 = [78]
	goto $label$43 
	
.LABEL $label$70
	$13 = [45]
	goto $label$43 
	
.LABEL $label$69
	$13 = [47]
	goto $label$43 
	
.LABEL $label$68
	$13 = [49]
	goto $label$43 
	
.LABEL $label$67
	$13 = [58]
	goto $label$43 
	
.LABEL $label$66
	$13 = [77]
	goto $label$43 
	
.LABEL $label$65
	$13 = [53]
	goto $label$43 
	
.LABEL $label$64
	$13 = [55]
	goto $label$43 
	
.LABEL $label$63
	$13 = [57]
	goto $label$43 
	
.LABEL $label$62
	$13 = [66]
	goto $label$43 
	
.LABEL $label$61
	$13 = [76]
	goto $label$43 
	
.LABEL $label$60
	$13 = [61]
	goto $label$43 
	
.LABEL $label$59
	$13 = [63]
	goto $label$43 
	
.LABEL $label$58
	$13 = [65]
	goto $label$43 
	
.LABEL $label$57
	$13 = [74]
	goto $label$43 
	
.LABEL $label$56
	$13 = [75]
	goto $label$43 
	
.LABEL $label$55
	$13 = [69]
	goto $label$43 
	
.LABEL $label$54
	$13 = [71]
	goto $label$43 
	
.LABEL $label$53
	$13 = [73]
	goto $label$43 
	
.LABEL $label$52
	$13 = [82]
	goto $label$43 
	
.LABEL $label$51
	$13 = [86]
	goto $label$43 
	
.LABEL $label$50
	$13 = [88]
	goto $label$43 
	
.LABEL $label$49
	$13 = [89]
	goto $label$43 
	
.LABEL $label$48
	$13 = [97]
	goto $label$43 
	
.LABEL $label$47
	$13 = [98]
	goto $label$43 
	
.LABEL $label$46
	$13 = [100]
	goto $label$43 
	
.LABEL $label$45
	$13 = [100]
	goto $label$43 
	
.LABEL $label$44
	$13 = [99]
	goto $label$43 
	$13
}

int_32 .FUNC $46 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	$3 = ($global$0 - [176])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = (($4 + [80]) + [24]))) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [120]) = [0]
	*($4 + [124]) = [0]
	*($4 + [68]) = $2
	*($4 + [64]) = $2
	*($4 + [72]) = ($2 + $7)
	*($4 + [160]) = ($4 + [64])
	*($4 + [32]) = ($4 + [80])
	CALL $99(($4 + [32]), ($4 + [160]))
	*(($9 = (($4 + [16]) + [8]))) = *($4 + [72])
	*($4 + [16]) = *($4 + [64])
	*(($3 = (($4 + [144]) + [8]))) = *($9)
	*($4 + [144]) = *($4 + [16])
	$9 = *($3)
	*((($4 + [160]) + [8])) = $9
	*((($4 + [32]) + [24])) = $9
	*($4 + [32]) = $0
	*($4 + [40]) = $1
	$0 = *($4 + [144])
	*($4 + [48]) = $0
	*($4 + [160]) = $0
	*(($9 = (($4 + [128]) + [8]))) = *($8)
	*($4 + [128]) = *($4 + [96])
	$0 = *($4 + [88])
	$1 = *($4 + [80])
	$8 = *($4 + [112])
	$10 = *($4 + [116])
	$11 = *($4 + [120])
	$12 = *($4 + [121])
	$13 = *($4 + [122])
	$14 = *($4 + [123])
	$15 = *($4 + [124])
	*($3) = *($9)
	*($4 + [144]) = *($4 + [128])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$16 = *((($4 + [144]) + [8]))
	*((($4 + [160]) + [8])) = $16
	*(($4 + [8])) = $16
	$16 = *($4 + [144])
	*($4) = $16
	*($4 + [160]) = $16
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $4), (int_32 $8), (int_32 $10), (int_32 ($11 & [255])), (int_32 ((int_32)($12 & [255]) != (int_32)[0])), (int_32 ((int_32)($13 & [255]) != (int_32)[0])), (int_32 ($14 & [255])), (int_32 ($15 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	$global$0 = ($4 + [176])
	return [1]
}

void .FUNC $45 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	int_64 $12
	$11 = ($global$0 - [112])
	$global$0 = $11
	CALL require_auth(*($0))
	if ( $8 ){ goto $label$1 }
	$12 = *($0)
	*($11 + [56]) = [8604]
	*($11 + [60]) = CALL $1([8604])
	*($11 + [16]) = *($11 + [56])
	$0 = CALL $29(($11 + [64]), ($11 + [16]))
	*($11 + [40]) = [8617]
	*($11 + [44]) = CALL $1([8617])
	*($11 + [8]) = *($11 + [40])
	$8 = CALL $29(($11 + [48]), ($11 + [8]))
	*($11 + [32]) = $10
	*($11 + [24]) = $1
	*($11 + [72]) = *($0)
	*($11 + [80]) = *($8)
	*(($0 = CALL $8([16]))) = $12
	*($0 + [8]) = (int_64)3617214756542218240
	*(($11 + [108])) = [0]
	$8 = ($0 + [16])
	*(($11 + [96])) = $8
	*(($11 + [92])) = $8
	*($11 + [88]) = $0
	*($11 + [100 align=4]) = (int_64)0
	CALL $66(($11 + [100]), [9])
	$0 = *($11 + [100])
	$8 = (*(($11 + [104])) - $0)
	if ( ((int_32)$8 > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$2
	$10 = (($11 + [24]) + [8])
	CALL memcpy($0, ($11 + [24]), [8])
	$0 = ($0 + [8])
	if ( ((int_32)($8 + [-8]) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$3
	CALL memcpy($0, $10, [1])
	CALL $68(($11 + [72]))
	$0 = *($11 + [100])
	if ( ($0 == 0) ){ goto $label$4 }
	*(($11 + [104])) = $0
	CALL $10($0)
	
.LABEL $label$4
	$0 = *($11 + [88])
	if ( ($0 == 0) ){ goto $label$1 }
	*(($11 + [92])) = $0
	CALL $10($0)
	
.LABEL $label$1
	$global$0 = ($11 + [112])
}

int_32 .FUNC $44 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = [0]
	*($4 + [32]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$4
	$3 = ($2 + $7)
	CALL memcpy(($4 + [32]), $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL memcpy($4, $8, [1])
	$8 = *($4)
	*((($4 + [32]) + [8])) = ((int_32)$8 != (int_32)[0])
	*(($4 + [24])) = $3
	*($4 + [16]) = $2
	*(($4 + [20])) = ($2 + [9])
	*($4 + [8]) = $1
	*($4) = $0
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [32])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 ((int_32)$8 != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $3($2)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC $124 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [9679])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	CALL memcpy(($3 + [47]), $2, [1])
	*(($3 + [28])) = ($2 + [1])
	*(($3 + [32])) = ($2 + $4)
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	CALL $52(($3 + [8]), *($3 + [47]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)*($0 + [8]) != (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9679])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [1])
	$4 = (*($3) + [1])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9679])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9679])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [16])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9679])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [4])
	$4 = (*($3) + [4])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$0 = CALL $130($0, ($1 + [40]))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $8 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $2($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $2($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $9 (int_32 $0)
{
	return CALL $8($0)
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $2($1)
	
.LABEL $label$2
	*(CALL $5()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $2(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $3($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $7 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $5())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $6($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $4 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

int_32 .FUNC $5 ()
{
	return [8208]
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8232])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $3 (int_32 $0)
{
}

void .FUNC $0 ()
{
	CALL $4()
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	CALL $14($0, $1)
}

int_32 .FUNC $16 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

void .FUNC $17 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $10 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $11 (int_32 $0)
{
	CALL $10($0)
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $7(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $7(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	return CALL $12($0, $1)
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9605])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9605])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [24])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9605])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [32])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9605])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [40])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [9605])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($3, $1, [4])
	*($2) = (*($2) + [4])
	return $0
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $8($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $19 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL $8($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $58 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9652])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $8([56])) + [16]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40]) = [0]
	*($5 + [44]) = $0
	CALL $139(($3 + [32]), $5)
	*($5 + [48]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $62(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [80])
	$global$0 = $2
	*($2 + [56]) = [8629]
	*($2 + [60]) = CALL $1([8629])
	*($2 + [8]) = *($2 + [56])
	CALL require_auth(*(CALL $29(($2 + [64]), ($2 + [8]))))
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$1 }
	CALL eosio_assert([0], [8753])
	
.LABEL $label$1
	*(($2 + [48])) = [0]
	*($2 + [32]) = (int_64)-1
	*($2 + [40]) = (int_64)0
	$3 = *($0)
	*($2 + [16]) = $3
	*($2 + [24]) = $3
	$1 = CALL db_find_i64($3, $3, (int_64)5454011338646880256, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $56(($2 + [16]), $1)
	if ( ((int_32)*($1 + [4]) == (int_32)($2 + [16])) ){ goto $label$5 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$5
	$0 = CALL db_next_i64(*($1 + [8]), ($2 + [72]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	CALL $56(($2 + [16]), $0)
	
.LABEL $label$6
	CALL $106(($2 + [16]), $1)
	$4 = *($2 + [40])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL eosio_assert([0], [8776])
	$4 = *($2 + [40])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($2 + [44])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $10($0)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$9 }
	$1 = *(($2 + [40]))
	goto $label$7 
	
.LABEL $label$8
	$1 = $4
	
.LABEL $label$7
	*($5) = $4
	CALL $10($1)
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [80])
}

int_32 .FUNC $51 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	*($4 + [40]) = [0]
	CALL eosio_assert([0], [9679])
	$3 = ($4 + [40])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	*($4 + [40]) = [0]
	$3 = ($4 + [40])
	
.LABEL $label$1
	CALL memcpy($3, $2, [1])
	*(($4 + [28])) = ($2 + [1])
	*(($4 + [32])) = ($2 + $7)
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$8 = *($4 + [40])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [80])
	$global$0 = $2
	*($2 + [56]) = [8629]
	*($2 + [60]) = CALL $1([8629])
	*($2 + [8]) = *($2 + [56])
	CALL require_auth(*(CALL $29(($2 + [64]), ($2 + [8]))))
	*(($2 + [48])) = [0]
	*($2 + [32]) = (int_64)-1
	*($2 + [40]) = (int_64)0
	$3 = *($0)
	*($2 + [16]) = $3
	*($2 + [24]) = $3
	$1 = CALL db_find_i64($3, $3, (int_64)-2617975199131238400, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $55(($2 + [16]), $1)
	if ( ((int_32)*($1 + [24]) == (int_32)($2 + [16])) ){ goto $label$4 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$4
	$0 = CALL db_next_i64(*($1 + [28]), ($2 + [72]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	CALL $55(($2 + [16]), $0)
	
.LABEL $label$5
	CALL $103(($2 + [16]), $1)
	$4 = *($2 + [40])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [8682])
	$4 = *($2 + [40])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($2 + [44])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$7 }
	
.LOOP $label$8:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	CALL $10($0)
	
.LABEL $label$9
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$8 }
	$1 = *(($2 + [40]))
	goto $label$6 
	
.LABEL $label$7
	$1 = $4
	
.LABEL $label$6
	*($5) = $4
	CALL $10($1)
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$1
	$global$0 = ($2 + [80])
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9679])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9679])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9679])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9679])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $130(*($1), *($0 + [12]))
	$global$0 = ($2 + [16])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [64])
	$global$0 = $5
	$6 = *($1)
	if ( ($6 & [1]) ){ goto $label$4 }
	$7 = ($1 + [1])
	$8 = uint_32($6 >> [1])
	if ( $8 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($1 + [8])
	$8 = *($1 + [4])
	if ( ($8 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = [0]
	
.LOOP $label$5:
	$6 = ($6 + ((int_32)*($7) == (int_32)[45]))
	$7 = ($7 + [1])
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$5 }
	if ( ((int_32)$6 == (int_32)[2]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9289])
	
.LABEL $label$1
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = [0]
	$7 = CALL $21($1, [45], [0])
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$11 }
	CALL $19(($5 + [48]), $1, [0], $7, $1)
	if ( (*($5 + [32]) & [1]) ){ goto $label$10 }
	*($5 + [32]) = [0]
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [9320])
	$6 = (($5 + [32]) | [1])
	goto $label$8 
	
.LABEL $label$10
	*(*(($5 + [40]))) = [0]
	*($5 + [36]) = [0]
	
.LABEL $label$9
	CALL $20(($5 + [32]), [0])
	*(($8 = (($5 + [32]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [32]) = *($5 + [48])
	$6 = (($5 + [32]) | [1])
	if ( (*($5 + [32]) & [1]) ){ goto $label$7 }
	
.LABEL $label$8
	$8 = $6
	goto $label$6 
	
.LABEL $label$7
	$8 = *($8)
	
.LABEL $label$6
	*($2) = CALL $26($8)
	$7 = ($7 + [1])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$12 }
	CALL eosio_assert([0], [9302])
	
.LABEL $label$12
	$8 = CALL $21($1, [45], $7)
	if ( ((int_32)$8 == (int_32)[-1]) ){ goto $label$13 }
	CALL $19(($5 + [48]), $1, $7, ($8 - $7), $1)
	if ( (*($5 + [32]) & [1]) ){ goto $label$15 }
	*($5 + [32]) = [0]
	goto $label$14 
	
.LABEL $label$15
	*(*(($5 + [40]))) = [0]
	*($5 + [36]) = [0]
	
.LABEL $label$14
	CALL $20(($5 + [32]), [0])
	*((($5 + [32]) + [8])) = *((($5 + [48]) + [8]))
	*($5 + [32]) = *($5 + [48])
	
.LABEL $label$13
	*($3) = CALL $26(( *((($5 + [32]) + [8])) ? $6 : (*($5 + [32]) & [1]) ))
	$6 = *($7)
	$8 = ($6 & [1])
	$7 = CALL $19(($5 + [8]), $1, ($8 + [1]), [-1], $1)
	*($5 + [24]) = ( *($7 + [8]) ? ($7 + [1]) : $8 )
	*($5 + [28]) = ( *($7 + [4]) ? uint_32($6 >> [1]) : $8 )
	*($5) = *($5 + [24])
	*($4) = *(CALL $29(($5 + [48]), $5))
	if ( (*($7) & [1]) ){ goto $label$18 }
	if ( (*($5 + [32]) & [1]) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $10(*(($7 + [8])))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $10(*(($5 + [40])))
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$16
	$global$0 = ($5 + [64])
}

void .FUNC $34 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [208])
	$global$0 = $2
	*($2 + [192]) = [8629]
	*($2 + [196]) = CALL $1([8629])
	*($2 + [16]) = *($2 + [192])
	CALL require_auth(*(CALL $29(($2 + [200]), ($2 + [16]))))
	$3 = CALL $25()
	*(($2 + [184])) = [0]
	*($2 + [168]) = (int_64)-1
	*($2 + [176]) = (int_64)0
	$4 = *($0)
	*($2 + [152]) = $4
	*($2 + [160]) = $4
	$3 = ((int_64)$3 / (int_64)1000000)
	$5 = CALL db_find_i64($4, $4, (int_64)4983106858454614016, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$5 = CALL $59(($2 + [152]), $5)
	if ( ((int_32)*($5 + [44]) == (int_32)($2 + [152])) ){ goto $label$2 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$2
	if ( ((uint_32)*($5 + [36]) >= (uint_32)$6) ){ goto $label$1 }
	$6 = CALL db_next_i64(*($5 + [48]), ($2 + [112]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	CALL $59(($2 + [152]), $6)
	
.LABEL $label$3
	CALL $107(($2 + [152]), $5)
	*(($2 + [144])) = [0]
	*($2 + [128]) = (int_64)-1
	*($2 + [136]) = (int_64)0
	$4 = *($0)
	*($2 + [112]) = $4
	*($2 + [120]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-2617952418909913088, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $57(($2 + [112]), $5)
	if ( ((int_32)*($5 + [12]) == (int_32)($2 + [112])) ){ goto $label$5 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$5
	if ( *($5 + [8]) ){ goto $label$4 }
	$4 = *($0)
	*($2 + [56]) = [8604]
	*($2 + [60]) = CALL $1([8604])
	*($2 + [8]) = *($2 + [56])
	$0 = CALL $29(($2 + [64]), ($2 + [8]))
	*($2 + [40]) = [8617]
	*($2 + [44]) = CALL $1([8617])
	*($2) = *($2 + [40])
	$5 = CALL $29(($2 + [48]), $2)
	*($2 + [32]) = [0]
	*($2 + [24]) = $1
	*($2 + [72]) = *($0)
	*($2 + [80]) = *($5)
	*(($0 = CALL $8([16]))) = $4
	*($0 + [8]) = (int_64)3617214756542218240
	*(($2 + [108])) = [0]
	$5 = ($0 + [16])
	*(($2 + [96])) = $5
	*(($2 + [92])) = $5
	*($2 + [88]) = $0
	*($2 + [100 align=4]) = (int_64)0
	CALL $66(($2 + [100]), [12])
	$0 = *($2 + [100])
	$5 = (*(($2 + [104])) - $0)
	if ( ((int_32)$5 > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$6
	$6 = (($2 + [24]) + [8])
	CALL memcpy($0, ($2 + [24]), [8])
	$0 = ($0 + [8])
	if ( ((int_32)($5 + [-8]) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$7
	CALL memcpy($0, $6, [4])
	CALL $68(($2 + [72]))
	$0 = *($2 + [100])
	if ( ($0 == 0) ){ goto $label$8 }
	*(($2 + [104])) = $0
	CALL $10($0)
	
.LABEL $label$8
	$0 = *($2 + [88])
	if ( ($0 == 0) ){ goto $label$4 }
	*(($2 + [92])) = $0
	CALL $10($0)
	
.LABEL $label$4
	$6 = *($2 + [136])
	if ( ($6 == 0) ){ goto $label$1 }
	$7 = ($2 + [140])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($2 + [136]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $6
	
.LABEL $label$9
	*($7) = $6
	CALL $10($0)
	
.LABEL $label$1
	$6 = *($2 + [176])
	if ( ($6 == 0) ){ goto $label$13 }
	$7 = ($2 + [180])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$17 }
	CALL $10($5)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($2 + [176]))
	goto $label$14 
	
.LABEL $label$15
	$0 = $6
	
.LABEL $label$14
	*($7) = $6
	CALL $10($0)
	
.LABEL $label$13
	$global$0 = ($2 + [208])
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9652])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([16])) + [4]) = $0
	if ( $4 ){ goto $label$7 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$7
	CALL memcpy($5, $2, [1])
	$7 = ($5 + [1])
	$8 = ($2 + [1])
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$8 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$8
	CALL memcpy($7, $8, [1])
	*($5 + [8]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $105(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $10($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9652])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([24])) + [12]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	$7 = ($5 + [8])
	$8 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$8
	CALL memcpy($7, $8, [1])
	*($5 + [16]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $58(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $10($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $116 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [104]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL memcpy(($3 + [104]), $2, [8])
	*($3 + [96]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$6
	CALL memcpy(($3 + [96]), $5, [8])
	*($3 + [88]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$7
	CALL memcpy(($3 + [88]), $5, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$8
	$4 = ($2 + $4)
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$9
	CALL memcpy(($3 + [40]), $5, [8])
	*(($6 = (($3 + [72]) + [8]))) = *($3 + [40])
	*(($3 + [64])) = $4
	$7 = *($6)
	*((($3 + [24]) + [8])) = $7
	*((($3 + [8]) + [8])) = $7
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [40])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	$0 = *($3 + [72])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $47(($3 + [40]), *($3 + [104]), *($3 + [96]), *($3 + [88]), ($3 + [8]))
	$global$0 = ($3 + [112])
}

void .FUNC $117 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [104]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL memcpy(($3 + [104]), $2, [8])
	*($3 + [96]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$6
	CALL memcpy(($3 + [96]), $5, [8])
	*($3 + [88]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$7
	CALL memcpy(($3 + [88]), $5, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$8
	$4 = ($2 + $4)
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$9
	CALL memcpy(($3 + [40]), $5, [8])
	*(($6 = (($3 + [72]) + [8]))) = *($3 + [40])
	*(($3 + [64])) = $4
	$7 = *($6)
	*((($3 + [24]) + [8])) = $7
	*((($3 + [8]) + [8])) = $7
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [40])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	$0 = *($3 + [72])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $36(($3 + [40]), *($3 + [104]), *($3 + [96]), *($3 + [88]), ($3 + [8]))
	$global$0 = ($3 + [112])
}

int_32 .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $135($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $111($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9605])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $111($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $136($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

int_32 .FUNC $35 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL memcpy(($4 + [40]), $2, [8])
	*(($4 + [28])) = ($2 + [8])
	*(($4 + [32])) = $3
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [40])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $3($2)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
	return [1]
}

int_32 .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9652])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $134(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $10($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9652])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $8([64])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [40 align=4]) = (int_64)0
	*($5 + [48]) = [0]
	*($5 + [52]) = $0
	CALL $128(($3 + [32]), $5)
	*($5 + [56]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $129(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [48])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $133(CALL $132($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9605])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $139 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9679])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)*($6) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9679])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9679])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9679])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [24])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [36])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [9679])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [4])
	$4 = (*($3) + [4])
	*($3) = $4
	$1 = ($1 + [40])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [9679])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $4, [4])
	*(($1 = ($0 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $118 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*($3 + [144]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $5, [8])
	*($3 + [136]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$7
	CALL memcpy(($3 + [136]), $5, [8])
	*($3 + [128]) = (int_64)0
	*($3 + [120]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$8
	CALL memcpy(($3 + [120]), $5, [8])
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$9
	CALL memcpy(($3 + [64]), $5, [8])
	*((($3 + [120]) + [8])) = *($3 + [64])
	*($3 + [112]) = (int_64)0
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$10
	CALL memcpy(($3 + [104]), $5, [8])
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [48])
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$11 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$11
	CALL memcpy(($3 + [64]), $5, [8])
	*((($3 + [104]) + [8])) = *($3 + [64])
	$6 = ($2 + [56])
	if ( ((int_32)$4 != (int_32)[56]) ){ goto $label$12 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$12
	CALL memcpy(($3 + [64]), $6, [1])
	$6 = ($2 + [57])
	$5 = *($3 + [64])
	if ( ((int_32)$4 != (int_32)[57]) ){ goto $label$13 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$13
	$7 = ($2 + $4)
	CALL memcpy(($3 + [103]), $6, [1])
	$6 = ($2 + [58])
	if ( ((int_32)$4 != (int_32)[58]) ){ goto $label$14 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$14
	CALL memcpy(($3 + [102]), $6, [1])
	*(($3 + [88])) = $7
	$8 = *((($3 + [104]) + [8]))
	*((($3 + [32]) + [8])) = $8
	*((($3 + [16]) + [8])) = *((($3 + [48]) + [8]))
	*(($3 + [8])) = $8
	*($3 + [80]) = $2
	*(($3 + [84])) = ($2 + [59])
	*($3 + [72]) = $1
	*($3 + [64]) = $0
	$0 = *($3 + [104])
	*($3 + [32]) = $0
	*($3 + [16]) = *($3 + [48])
	*($3) = $0
	CALL $48(($3 + [64]), $0, *($3 + [144]), *($3 + [136]), ($3 + [16]), $3, ((int_32)($5 & [255]) != (int_32)[0]), [0], [0])
	$global$0 = ($3 + [160])
}

void .FUNC $119 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	CALL $40(($3 + [8]), *($3 + [40]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [9034])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [9139])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [9072])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [9139])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [352])
	$global$0 = $3
	CALL $0()
	if ( ((int_64)$0 != (int_64)$1) ){ goto $label$13 }
	*($3 + [224]) = [8266]
	*($3 + [228]) = CALL $1([8266])
	*($3 + [96]) = *($3 + [224])
	CALL $29(($3 + [264]), ($3 + [96]))
	if ( ((int_64)$0 != (int_64)-7297918857397398384) ){ goto $label$1 }
	if ( ((int_64)$2 > (int_64)4857497417782296575) ){ goto $label$12 }
	if ( ((int_64)$2 > (int_64)-4157661383434960897) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)-4998252998346932224) ){ goto $label$9 }
	if ( ((int_64)$2 == (int_64)-4488218855417141360) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)-4488208961277340400) ){ goto $label$1 }
	*($3 + [172]) = [0]
	*($3 + [168]) = [1]
	*($3 + [48]) = *($3 + [168])
	CALL $31((int_64)-7297918857397398384, (int_64)-7297918857397398384, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$13
	*($3 + [344]) = [8257]
	*($3 + [348]) = CALL $1([8257])
	*($3 + [120]) = *($3 + [344])
	CALL $29(($3 + [264]), ($3 + [120]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*((($3 + [312]) + [24])) = [0]
	*($3 + [320]) = $1
	*($3 + [312]) = $0
	*($3 + [328]) = (int_64)0
	CALL $32(($3 + [264]))
	*(($4 = (($3 + [248]) + [8]))) = *((($3 + [264]) + [24]))
	*($3 + [248]) = *($3 + [280])
	$0 = *($3 + [272])
	$2 = *($3 + [264])
	$5 = ($3 + [296])
	$6 = CALL $18(($3 + [232]), $5)
	*((($3 + [104]) + [8])) = *($4)
	*($3 + [104]) = *($3 + [248])
	CALL $33(($3 + [312]), $2, $0, ($3 + [104]), $6, $1)
	if ( ((*($6) & [1]) == 0) ){ goto $label$14 }
	CALL $10(*($6 + [8]))
	
.LABEL $label$14
	if ( ((*($5) & [1]) == 0) ){ goto $label$1 }
	CALL $10(*(($3 + [304])))
	goto $label$1 
	
.LABEL $label$12
	if ( ((int_64)$2 > (int_64)5378027348250915327) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)4857497417782296576) ){ goto $label$7 }
	if ( ((int_64)$2 == (int_64)4983106858750509056) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)5378012977386651648) ){ goto $label$1 }
	*($3 + [140]) = [0]
	*($3 + [136]) = [2]
	*($3 + [80]) = *($3 + [136])
	CALL $35((int_64)-7297918857397398384, (int_64)-7297918857397398384, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$11
	if ( ((int_64)$2 == (int_64)-4157661383434960896) ){ goto $label$5 }
	if ( ((int_64)$2 == (int_64)-4157661080438439936) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)-3102536759825661952) ){ goto $label$1 }
	*($3 + [204]) = [0]
	*($3 + [200]) = [3]
	*($3 + [16]) = *($3 + [200])
	CALL $37((int_64)-7297918857397398384, (int_64)-7297918857397398384, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$10
	if ( ((int_64)$2 == (int_64)5378027348250915328) ){ goto $label$3 }
	if ( ((int_64)$2 == (int_64)5378343960724546048) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)8421045207927095296) ){ goto $label$1 }
	*($3 + [220]) = [0]
	*($3 + [216]) = [4]
	*($3) = *($3 + [216])
	CALL $39((int_64)-7297918857397398384, (int_64)-7297918857397398384, $3)
	goto $label$1 
	
.LABEL $label$9
	*($3 + [188]) = [0]
	*($3 + [184]) = [5]
	*($3 + [32]) = *($3 + [184])
	CALL $35((int_64)-7297918857397398384, (int_64)-7297918857397398384, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [156]) = [0]
	*($3 + [152]) = [6]
	*($3 + [64]) = *($3 + [152])
	CALL $42((int_64)-7297918857397398384, (int_64)-7297918857397398384, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [132]) = [0]
	*($3 + [128]) = [7]
	*($3 + [88]) = *($3 + [128])
	CALL $44((int_64)-7297918857397398384, (int_64)-7297918857397398384, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [180]) = [0]
	*($3 + [176]) = [8]
	*($3 + [40]) = *($3 + [176])
	CALL $46((int_64)-7297918857397398384, (int_64)-7297918857397398384, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [212]) = [0]
	*($3 + [208]) = [9]
	*($3 + [8]) = *($3 + [208])
	CALL $37((int_64)-7297918857397398384, (int_64)-7297918857397398384, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [196]) = [0]
	*($3 + [192]) = [10]
	*($3 + [24]) = *($3 + [192])
	CALL $49((int_64)-7297918857397398384, (int_64)-7297918857397398384, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [148]) = [0]
	*($3 + [144]) = [11]
	*($3 + [72]) = *($3 + [144])
	CALL $51((int_64)-7297918857397398384, (int_64)-7297918857397398384, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [164]) = [0]
	*($3 + [160]) = [12]
	*($3 + [56]) = *($3 + [160])
	CALL $51((int_64)-7297918857397398384, (int_64)-7297918857397398384, ($3 + [56]))
	
.LABEL $label$1
	CALL $22([0])
	$global$0 = ($3 + [352])
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9652])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([40])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = $0
	if ( $4 ){ goto $label$7 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [1])
	$8 = ($2 + [1])
	if ( ((uint_32)($4 + [-1]) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [9])
	if ( ((uint_32)($4 + [-9]) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$9
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [16])) = *($3 + [24])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = *($5)
	*($3 + [24]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $102(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $3($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $10($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10268])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10313])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10363])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [48]))
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((int_32)*($1 + [4]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10268])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10313])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = (*($1) & [255])
	if ( ((int_32)$6 == (int_32)*(*(($4 + [-24])))) ){ goto $label$9 }
	$7 = ($2 + [24])
	$5 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-48])
	$5 = ($5 + [-24])
	if ( ((int_32)$6 != (int_32)*(*($8))) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$6 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10363])
	$6 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $6)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $6)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $6)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [8]))
}

int_32 .FUNC $21 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $16(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $8(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $10($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

int_32 .FUNC $23 (float_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = ($global$0 - [16])
	$2 = (CASTING int_32)(float_32 $0)
	$3 = (uint_32($2 >> [23]) & [255])
	if ( ((uint_32)$3 > (uint_32)[149]) ){ goto $label$1 }
	if ( ($3 <= [127]) ){ goto $label$3 }
	$3 = ($3 + [-127])
	$4 = uint_32([8388607] >> $3)
	if ( (($4 & $2) == 0) ){ goto $label$1 }
	*($1 + [12]) = ((float_32)$0 + (float_32)(float_32)1329227995784915872903807e12)
	$2 = ((( $4 ? [0] : ((int_32)$2 > (int_32)[-1]) ) + $2) & int_32([-8388608] >> $3))
	goto $label$2 
	
.LABEL $label$3
	*($1 + [8]) = ((float_32)$0 + (float_32)(float_32)1329227995784915872903807e12)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$2 = ( [1065353216] ? $2 : ($2 & [2147483647]) )
	goto $label$2 
	
.LABEL $label$4
	$2 = [-2147483648]
	
.LABEL $label$2
	$0 = (CASTING float_32)(int_32 $2)
	
.LABEL $label$1
	return $0
}

void .FUNC $22 (int_32 $0)
{
}

int_64 .FUNC $25 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8224]) = $0
	return $0
}

void .FUNC $24 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_64 .FUNC $27 (float_64 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	float_64 $5
	$1 = ($global$0 - [16])
	if ( ((float_64)$0 == (float_64)(float_64)0) ){ goto $label$1 }
	$2 = (CASTING int_64)(float_64 $0)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)52)) & [2047]
	if ( ((uint_32)$3) > (uint_32)[1074]) ){ goto $label$1 }
	$4 = ((int_64)$2 < (int_64)0)
	$5 = (float_64))(( ((float_64)((float_64)$0 + (float_64)(float_64)-4503599627370496) + (float_64)(float_64)4503599627370496) ? ((float_64)((float_64)$0 + (float_64)(float_64)4503599627370496) + (float_64)(float_64)-4503599627370496) : $4 ) - $0)
	if ( ((uint_32)$3 > (uint_32)[1022]) ){ goto $label$2 }
	*($1 + [8]) = $5
	return ( (float_64)-0 ? (float_64)1 : $4 )
	
.LABEL $label$2
	$0 = ((float_64)$5 + (float_64)$0)
	if ( ((int_32)((float_64)$5 < (float_64)(float_64)0) ^ (int_32)[1]) ){ goto $label$1 }
	$0 = ((float_64)$0 + (float_64)(float_64)1)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $26 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	
.LOOP $label$1:
	$1 = *($0)
	$2 = ($1 + [-9])
	$3 = ($0 + [1])
	$0 = $3
	if ( ((int_32)$1 == (int_32)[32]) ){ goto $label$1 }
	$0 = $3
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$4 = [1]
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	$1 = *($3)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($3 + [-1])
	$4 = [0]
	
.LABEL $label$2
	$2 = [0]
	$1 = ($1 + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($3 + [1])
	$2 = [0]
	
.LOOP $label$7:
	$2 = (((int_32)$2 * (int_32)[10]) - $1)
	$1 = *($0)
	$0 = ($0 + [1])
	$1 = ($1 + [-48])
	if ( ($1 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $2 ? ([0] - $2) : $4 )
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9605])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9605])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9605])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $127(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [9605])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9605])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9605])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9605])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [9605])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = CALL $1([8299])
	if ( ($5 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9191])
	goto $label$3 
	
.LABEL $label$4
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = (int_64)0
	
.LOOP $label$5:
	$7 = *(($5 + [8298]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9236])
	
.LABEL $label$6
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$5 }
	$8 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$8 = (int_64)4
	
.LABEL $label$1
	$6 = (uint_64)$8 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$6 = $9
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$6 = $9
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $7 ){ goto $label$11 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [8795])
	
.LABEL $label$7
	*($1 + [8]) = $8
	*($1) = (int_64)0
	$7 = $2
	$5 = ($7 + [-16])
	$global$0 = $5
	CALL memcpy($5, $1, [8])
	*($3 + [8]) = *($1 + [8])
	CALL memcpy(($7 + [-8]), ($3 + [8]), [8])
	$6 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($1 + [20]) = CALL db_store_i64(*($4 + [8]), (int_64)-4157508551318700032, *(*($0 + [8])), $6), $5, [16])
	if ( (uint_64)($6 <= *($4 + [16])) ){ goto $label$12 }
	*(($4 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$12
	$global$0 = ($3 + [16])
}

void .FUNC $68 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $66($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $111(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $10($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $108 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = $global$0
	$4 = $3
	if ( ((int_32)*(($1 + [12])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	*($1 + [8]) = *(*($2))
	$5 = *($1)
	$3 = $3
	$2 = ($3 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($3 + [-8]), ($1 + [8]), [1])
	CALL db_update_i64(*($1 + [16]), (int_64)0, $2, [9])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $4
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [96])
	$global$0 = $2
	*($2 + [32]) = [8604]
	*($2 + [36]) = CALL $1([8604])
	*($2 + [16]) = *($2 + [32])
	$3 = CALL $29(($2 + [40]), ($2 + [16]))
	*($2 + [24]) = [8604]
	*($2 + [28]) = CALL $1([8604])
	*($2 + [8]) = *($2 + [24])
	CALL $29(($2 + [88]), ($2 + [8]))
	*(($2 + [80])) = [0]
	*($2 + [64]) = (int_64)-1
	$4 = *($3)
	*($2 + [48]) = $4
	*($2 + [56]) = (int_64)-7297918858990691200
	*($2 + [72]) = (int_64)0
	$3 = CALL db_lowerbound_i64($4, (int_64)-7297918858990691200, (int_64)5454011338646880256, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	CALL $110(($2 + [48]), $3)
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9611])
	
.LABEL $label$1
	$3 = CALL db_lowerbound_i64(*($2 + [48]), *(($2 + [56])), (int_64)5454011338646880256, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	$3 = CALL $110(($2 + [48]), $3)
	$4 = *($1)
	$5 = *($1 + [8])
	if ( ((int_64)*(($3 + [16])) != (int_64)$5) ){ goto $label$5 }
	$6 = [1]
	goto $label$3 
	
.LABEL $label$5
	$6 = [0]
	goto $label$3 
	
.LABEL $label$4
	$6 = [4]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$58 
	
.LABEL $label$59
	$3 = CALL $110(($2 + [48]), $3)
	if ( ((int_64)*(($3 + [16])) == (int_64)$5) ){ goto $label$28 }
	$6 = [0]
	goto $label$6 
	
.LABEL $label$58
	CALL eosio_assert([0], [9455])
	$6 = [1]
	goto $label$6 
	
.LABEL $label$57
	if ( ((int_64)*($3 + [8]) > (int_64)$4) ){ goto $label$27 }
	$6 = [2]
	goto $label$6 
	
.LABEL $label$56
	$3 = CALL db_next_i64(*($3 + [56]), ($2 + [88]))
	if ( ((int_32)$3 >= (int_32)[0]) ){ goto $label$25 }
	goto $label$26 
	
.LABEL $label$55
	$3 = *($3)
	if ( ($3 == 0) ){ goto $label$24 }
	$6 = [30]
	goto $label$6 
	
.LABEL $label$54
	$7 = ($3 + [-1])
	if ( ($7 & [255]) ){ goto $label$23 }
	$6 = [4]
	goto $label$6 
	
.LABEL $label$53
	$8 = *(($2 + [76]))
	$7 = *(($2 + [72]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$22 }
	$6 = [5]
	goto $label$6 
	
.LABEL $label$52
	$6 = [6]
	goto $label$6 
	
.LABEL $label$51
	$3 = ($8 + [-24])
	$9 = *($3)
	if ( ((int_32)*($9) == (int_32)[10]) ){ goto $label$19 }
	$6 = [7]
	goto $label$6 
	
.LABEL $label$50
	$8 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$49
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$18 }
	$6 = [27]
	goto $label$6 
	
.LABEL $label$48
	if ( ((int_32)*($9 + [52]) == (int_32)($2 + [48])) ){ goto $label$14 }
	$6 = [28]
	goto $label$6 
	
.LABEL $label$47
	CALL eosio_assert([0], [9714])
	goto $label$15 
	
.LABEL $label$46
	$7 = [0]
	$3 = CALL db_find_i64(*($2 + [48]), *(($2 + [56])), (int_64)5454011338646880256, (int_64)10)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$17 }
	$6 = [9]
	goto $label$6 
	
.LABEL $label$45
	$9 = CALL $110(($2 + [48]), $3)
	if ( ((int_32)*($9 + [52]) == (int_32)($2 + [48])) ){ goto $label$16 }
	$6 = [10]
	goto $label$6 
	
.LABEL $label$44
	CALL eosio_assert([0], [9714])
	$6 = [11]
	goto $label$6 
	
.LABEL $label$43
	if ( ((int_64)*($1 + [8]) == (int_64)*(($9 + [16]))) ){ goto $label$13 }
	$6 = [12]
	goto $label$6 
	
.LABEL $label$42
	CALL eosio_assert([0], [9455])
	$6 = [13]
	goto $label$6 
	
.LABEL $label$41
	$7 = ( [0] ? [10] : ((int_64)*($1) < (int_64)*($9 + [8])) )
	$6 = [14]
	goto $label$6 
	
.LABEL $label$40
	$9 = *($2 + [72])
	if ( ($9 == 0) ){ goto $label$12 }
	$6 = [15]
	goto $label$6 
	
.LABEL $label$39
	$1 = ($2 + [76])
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$11 }
	$6 = [16]
	goto $label$6 
	
.LABEL $label$38
	$6 = [17]
	goto $label$6 
	
.LABEL $label$37
	$3 = ($3 + [-24])
	$8 = *($3)
	*($3) = [0]
	if ( ($8 == 0) ){ goto $label$9 }
	$6 = [18]
	goto $label$6 
	
.LABEL $label$36
	if ( ((*($8 + [40]) & [1]) == 0) ){ goto $label$8 }
	$6 = [19]
	goto $label$6 
	
.LABEL $label$35
	CALL $10(*(($8 + [48])))
	$6 = [20]
	goto $label$6 
	
.LABEL $label$34
	CALL $10($8)
	$6 = [21]
	goto $label$6 
	
.LABEL $label$33
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$10 }
	$6 = [22]
	goto $label$6 
	
.LABEL $label$32
	$3 = *(($2 + [72]))
	goto $label$7 
	
.LABEL $label$31
	$3 = $9
	$6 = [23]
	goto $label$6 
	
.LABEL $label$30
	*($1) = $9
	CALL $10($3)
	$6 = [24]
	goto $label$6 
	
.LABEL $label$29
	$global$0 = ($2 + [96])
	return ($7 & [255])
	
.LABEL $label$28
	$6 = [1]
	goto $label$6 
	
.LABEL $label$27
	$6 = [29]
	goto $label$6 
	
.LABEL $label$26
	$6 = [4]
	goto $label$6 
	
.LABEL $label$25
	$6 = [3]
	goto $label$6 
	
.LABEL $label$24
	$6 = [4]
	goto $label$6 
	
.LABEL $label$23
	$6 = [14]
	goto $label$6 
	
.LABEL $label$22
	$6 = [8]
	goto $label$6 
	
.LABEL $label$21
	$6 = [8]
	goto $label$6 
	
.LABEL $label$20
	$6 = [6]
	goto $label$6 
	
.LABEL $label$19
	$6 = [26]
	goto $label$6 
	
.LABEL $label$18
	$6 = [8]
	goto $label$6 
	
.LABEL $label$17
	$6 = [14]
	goto $label$6 
	
.LABEL $label$16
	$6 = [11]
	goto $label$6 
	
.LABEL $label$15
	$6 = [11]
	goto $label$6 
	
.LABEL $label$14
	$6 = [11]
	goto $label$6 
	
.LABEL $label$13
	$6 = [13]
	goto $label$6 
	
.LABEL $label$12
	$6 = [24]
	goto $label$6 
	
.LABEL $label$11
	$6 = [25]
	goto $label$6 
	
.LABEL $label$10
	$6 = [17]
	goto $label$6 
	
.LABEL $label$9
	$6 = [21]
	goto $label$6 
	
.LABEL $label$8
	$6 = [20]
	goto $label$6 
	
.LABEL $label$7
	$6 = [23]
	goto $label$6 
	return $6
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9652])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $8([56])) + [40]) = [0]
	*($5) = (int_64)0
	*($5 + [44]) = $0
	CALL $140(($3 + [32]), $5)
	*($5 + [48]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $76(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9605])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9605])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9605])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [9605])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	*($2) = $4
	CALL $141($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $8($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $24($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $10($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9605])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9605])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [24]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9605])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((int_32)(*($5) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [9605])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [36])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [9605])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [4])
	$4 = (*($3) + [4])
	*($3) = $4
	$1 = ($1 + [40])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [9605])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $1, [4])
	*(($1 = ($0 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $60 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	float_64 $19
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	$5 = *($1)
	$6 = *($2 + [24])
	$8 = *(*($2))
	$7 = *($1 + [8])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$4 }
	$8 = *($1 + [36])
	if ( ((uint_32)$8 <= (uint_32)*($1 + [40])) ){ goto $label$5 }
	CALL eosio_assert([0], [10056])
	$8 = *(($1 + [36]))
	
.LABEL $label$5
	*(($1 + [36])) = (((int_32)*(*($2 + [4])) * (int_32)[2592000]) + $8)
	$8 = *($2 + [8])
	if ( ((int_64)*($8 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$6 }
	CALL eosio_assert([0], [10154])
	
.LABEL $label$6
	$9 = ((int_64)*($1 + [16]) + (int_64)*($8))
	*($1 + [16]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [10197])
	$9 = *(($1 + [16]))
	
.LABEL $label$7
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [10216])
	
.LABEL $label$8
	*(($1 + [40])) = (*(*($2 + [12])) + [31104000])
	*(*($2 + [16])) = *(*(($2 + [4])))
	*(*($2 + [20])) = [1]
	$8 = *($2 + [28])
	$9 = *(($8 + [8]))
	*((($4 + [80]) + [8])) = $9
	$10 = *($8)
	*($4 + [80]) = $10
	$8 = *(($2 + [8]))
	$11 = *(($8 + [8]))
	*((($4 + [64]) + [8])) = $11
	$12 = *($8)
	*($4 + [64]) = $12
	$13 = *(*($2 + [32]))
	*(($4 + [8])) = $11
	*((($4 + [16]) + [8])) = $9
	*($4) = $12
	*($4 + [16]) = $10
	CALL $63($6, ($4 + [16]), $4, $13)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$8 > (uint_32)$7) ){ goto $label$9 }
	CALL eosio_assert([0], [10104])
	$7 = *(($1 + [8]))
	
.LABEL $label$9
	$16 = *(($14 + [28]))
	$14 = *($2 + [36])
	$15 = *($14 + [24])
	if ( ((int_32)$15 == (int_32)$16) ){ goto $label$11 }
	$17 = ($7 & [255])
	
.LOOP $label$13:
	$8 = ($16 + [-24])
	$18 = *($8)
	if ( ((int_32)*($18) == (int_32)$17) ){ goto $label$12 }
	$16 = $8
	if ( ((int_32)$15 != (int_32)$8) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)$15 == (int_32)$16) ){ goto $label$11 }
	if ( ((int_32)*($18 + [24]) == (int_32)$14) ){ goto $label$10 }
	CALL eosio_assert([0], [9714])
	goto $label$10 
	
.LABEL $label$11
	$18 = [0]
	$8 = CALL db_find_i64(*($14), *($14 + [8]), (int_64)-2617975199131238400, ((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$18 = CALL $55($14, $8)
	if ( ((int_32)*($18 + [24]) == (int_32)$14) ){ goto $label$10 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$10
	$8 = (*($1 + [36]) - *(*($2 + [12])))
	$16 = ((uint_32)$8 / (uint_32)[86400])
	$9 = *(*(*($2 + [40]) + [4]) + [8])
	if ( ($8 <= [2592000]) ){ goto $label$19 }
	$19 = CALL $27(((float_64)((float_64)(CASTING float_64)(int_64 (int_64))($9 - *($18 + [8]))) / (float_64)(float_64)30) * (float_64)(CASTING float_64)(int_32 ($16 & [255])))
	if ( (((float_64)$19) < (float_64)(float_64)18446744073709551615) & ((float_64)$19 >= (float_64)(float_64)0)) ){ goto $label$18 }
	$11 = (int_64)0
	goto $label$17 
	
.LABEL $label$19
	$15 = ($16 & [255])
	$19 = CALL $27(((float_64)(CASTING float_64)(int_64 $9) + (float_64)((float_64)((float_64)(CASTING float_64)(int_64 *($18 + [8])) / (float_64)(float_64)-30) * (float_64)(CASTING float_64)(int_32 $15))))
	if ( (((float_64)$19 < (float_64)(float_64)18446744073709551615) & ((float_64)$19 >= (float_64)(float_64)0)) ){ goto $label$16 }
	$11 = (int_64)0
	goto $label$15 
	
.LABEL $label$18
	$11 = (Rounds 0)($19)
	
.LABEL $label$17
	$12 = *(*($2 + [44]))
	if ( (uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$20 }
	CALL eosio_assert([0], [9337])
	
.LABEL $label$20
	$9 = (uint_64)$12 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$24 }
	$9 = $10
	$16 = $8
	$8 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$24
	$9 = $10
	
.LOOP $label$25:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$22 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$16 = ((int_32)$8 < (int_32)[6])
	$18 = ($8 + [1])
	$8 = $18
	if ( $16 ){ goto $label$25 }
	$8 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	CALL eosio_assert([0], [8795])
	
.LABEL $label$21
	*(($8 = *($2 + [8])) + [8]) = $12
	*($8) = $11
	$8 = ($2 + [8])
	goto $label$14 
	
.LABEL $label$16
	$11 = (Rounds 0)($19)
	
.LABEL $label$15
	$12 = *(*($2 + [44]))
	if ( (uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$26 }
	CALL eosio_assert([0], [9337])
	
.LABEL $label$26
	$9 = (uint_64)$12 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$30 }
	$9 = $10
	$16 = $8
	$8 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$30
	$9 = $10
	
.LOOP $label$31:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$28 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$16 = ((int_32)$8 < (int_32)[6])
	$18 = ($8 + [1])
	$8 = $18
	if ( $16 ){ goto $label$31 }
	$8 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [8795])
	
.LABEL $label$27
	*(($8 = *($2 + [8])) + [8]) = $12
	*($8) = $11
	*(($8 = ($1 + [36]))) = (*($8) + ((int_32)([30] - $15) * (int_32)[86400]))
	$8 = ($2 + [8])
	
.LABEL $label$14
	*(($1 + [8])) = *(*($2))
	$16 = *(($2 + [8]))
	if ( ((int_64)*($16 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$32 }
	CALL eosio_assert([0], [10154])
	
.LABEL $label$32
	$9 = ((int_64)*($1 + [16]) + (int_64)*($16))
	*($1 + [16]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$33 }
	CALL eosio_assert([0], [10197])
	$9 = *(($1 + [16]))
	
.LABEL $label$33
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$34 }
	CALL eosio_assert([0], [10216])
	
.LABEL $label$34
	$16 = *($2 + [28])
	$9 = *(($16 + [8]))
	*((($4 + [80]) + [8])) = $9
	$10 = *($16)
	*($4 + [80]) = $10
	$8 = *($8)
	$11 = *(($8 + [8]))
	*((($4 + [64]) + [8])) = $11
	$12 = *($8)
	*($4 + [64]) = $12
	$13 = *(*($2 + [32]))
	*((($4 + [32]) + [8])) = $11
	*((($4 + [48]) + [8])) = $9
	*($4 + [32]) = $12
	*($4 + [48]) = $10
	CALL $63($6, ($4 + [48]), ($4 + [32]), $13)
	
.LABEL $label$3
	*(*($2 + [48])) = *(($1 + [36]))
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$35 }
	CALL eosio_assert([0], [9997])
	
.LABEL $label$35
	$2 = $3
	$8 = ($2 + [-48])
	$global$0 = $8
	*($4 + [84]) = $8
	*($4 + [80]) = $8
	*($4 + [88]) = ($2 + [-11])
	CALL $61(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [48]), (int_64)0, $8, [37])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$36 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$36
	$global$0 = ($4 + [96])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [192])
	$global$0 = $4
	$5 = *($1 + [8])
	$6 = ((int_64)$5 == (int_64)*($2 + [8]))
	if ( $6 ){ goto $label$1 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$1
	$8 = *($2)
	$7 = *($1)
	if ( ((int_64)$7 >= (int_64)$8) ){ goto $label$2 }
	CALL eosio_assert([0], [9417])
	$global$0 = ($4 + [192])
	return 
	
.LABEL $label$2
	if ( $6 ){ goto $label$3 }
	CALL eosio_assert([0], [9514])
	
.LABEL $label$3
	$7 = (int_64)
	if ( ((int_64)$7($7 - $8)) <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	if ( ((int_64)$7 >= (int_64)1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	CALL eosio_assert([0], [9562])
	$global$0 = ($4 + [192])
	return 
	
.LABEL $label$7
	CALL eosio_assert([0], [9584])
	
.LABEL $label$6
	$8 = *($0)
	*($4 + [104]) = [8337]
	*($4 + [108]) = CALL $1([8337])
	*($4 + [16]) = *($4 + [104])
	$6 = CALL $29(($4 + [112]), ($4 + [16]))
	*($4 + [88]) = [8257]
	*($4 + [92]) = CALL $1([8257])
	*($4 + [8]) = *($4 + [88])
	$9 = CALL $29(($4 + [96]), ($4 + [8]))
	*(($4 + [32])) = [0]
	*($4 + [24]) = (int_64)0
	$1 = CALL $1([9386])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$11 }
	*($4 + [24]) = ($1 << [1])
	$2 = (($4 + [24]) | [1])
	if ( $1 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$10 = (($1 + [16]) & [-16])
	$2 = CALL $8($10)
	*($4 + [24]) = ($10 | [1])
	*($4 + [32]) = $2
	*($4 + [28]) = $1
	
.LABEL $label$10
	CALL memcpy($2, [9386], $1)
	
.LABEL $label$9
	*(($2 + $1)) = [0]
	*((($4 + [40]) + [24])) = $5
	$1 = ($4 + [32])
	*(($4 + [80])) = *($1)
	*($1) = [0]
	*($4 + [48]) = $3
	*($4 + [56]) = $7
	*($4 + [40]) = *($0)
	*($4 + [72]) = *($4 + [24])
	*($4 + [24]) = (int_64)0
	*($4 + [120]) = *($6)
	*($4 + [128]) = *($9)
	*(($1 = CALL $8([16]))) = $8
	*($1 + [8]) = (int_64)3617214756542218240
	*((($4 + [120]) + [36])) = [0]
	$2 = ($1 + [16])
	*((($4 + [120]) + [24])) = $2
	*(($4 + [140])) = $2
	*($4 + [136]) = $1
	*($4 + [148 align=4]) = (int_64)0
	$1 = *($4 + [72])
	$2 = ( *((($4 + [40]) + [36])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($2 + [32])
	$7 = (CASTING uint_64)(uint_32 $2)
	$2 = ($4 + [148])
	
.LOOP $label$12:
	$1 = ($1 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$12 }
	if ( ($1 == 0) ){ goto $label$14 }
	CALL $66($2, $1)
	$2 = *(($4 + [152]))
	$1 = *(($4 + [148]))
	goto $label$13 
	
.LABEL $label$14
	$2 = [0]
	$1 = [0]
	
.LABEL $label$13
	*($4 + [164]) = $1
	*($4 + [160]) = $1
	*($4 + [168]) = $2
	*($4 + [176]) = ($4 + [160])
	*($4 + [184]) = ($4 + [40])
	CALL $109(($4 + [184]), ($4 + [176]))
	CALL $68(($4 + [120]))
	$1 = *($4 + [148])
	if ( ($1 == 0) ){ goto $label$15 }
	*(($4 + [152])) = $1
	CALL $10($1)
	
.LABEL $label$15
	$1 = *($4 + [136])
	if ( ($1 == 0) ){ goto $label$16 }
	*(($4 + [140])) = $1
	CALL $10($1)
	
.LABEL $label$16
	if ( ((*(($4 + [72])) & [1]) == 0) ){ goto $label$17 }
	CALL $10(*(($4 + [80])))
	
.LABEL $label$17
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$5 }
	CALL $10(*(($4 + [32])))
	
.LABEL $label$5
	$global$0 = ($4 + [192])
	return (unreachable)
	
.LABEL $label$4
	CALL $17(($4 + [24]))
}

void .FUNC $62 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = ((int_64)*(*(($4 + [4]))) * (int_64)10000)
	$6 = *($0)
	$4 = CALL $1([8299])
	if ( ($4 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9191])
	goto $label$3 
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = (int_64)0
	
.LOOP $label$5:
	$8 = *(($4 + [8298]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9236])
	
.LABEL $label$6
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$5 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)4
	
.LABEL $label$1
	if ( (uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$7 }
	CALL eosio_assert([0], [9337])
	
.LABEL $label$7
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$7 = $10
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$7 = $10
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$11 = ($4 + [1])
	$4 = $11
	if ( $8 ){ goto $label$12 }
	$4 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8795])
	
.LABEL $label$8
	*($1 + [8]) = $5
	*(($1 + [16])) = $9
	$8 = $2
	$4 = ($8 + [-32])
	$global$0 = $4
	*($3 + [4]) = $4
	*($3) = $4
	*($3 + [8]) = ($8 + [-15])
	CALL $142($3, $1)
	$7 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($6 + [8]), (int_64)-2617975199131238400, *(*($0 + [8])), $7, $4, [17])
	if ( ((uint_64)*($6 + [16]) > (uint_64)$7) ){ goto $label$13 }
	*(($6 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$13
	$global$0 = ($3 + [16])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	$5 = ((int_64)*(*($2)) * (int_64)10000)
	$6 = *($1)
	$2 = CALL $1([8299])
	if ( ($2 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9191])
	goto $label$5 
	
.LABEL $label$6
	if ( ($2 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = (int_64)0
	
.LOOP $label$7:
	$8 = *(($2 + [8298]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [9236])
	
.LABEL $label$8
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$3 
	
.LABEL $label$4
	$9 = (int_64)4
	
.LABEL $label$3
	$7 = (CASTING uint_64)(uint_32 $6)
	if ( (uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$9 }
	CALL eosio_assert([0], [9337])
	
.LABEL $label$9
	$10 = ((int_64)$7 & (int_64)255)
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$11 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $11
	$8 = $2
	$2 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $11
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$2 < (int_32)[6])
	$12 = ($2 + [1])
	$2 = $12
	if ( $8 ){ goto $label$14 }
	$2 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [8795])
	
.LABEL $label$10
	*($1 + [8]) = $5
	*(($1 + [16])) = $9
	if ( ((int_32)($6 & [255]) == (int_32)*($1)) ){ goto $label$15 }
	CALL eosio_assert([0], [9997])
	
.LABEL $label$15
	$8 = $3
	$2 = ($8 + [-32])
	$global$0 = $2
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($8 + [-15])
	CALL $142($4, $1)
	CALL db_update_i64(*($1 + [28]), (int_64)0, $2, [17])
	if ( ((uint_64)*($0 + [16]) > (uint_64)$10) ){ goto $label$16 }
	*(($0 + [16])) = ((int_64)$10 + (int_64)1)
	
.LABEL $label$16
	$global$0 = ($4 + [16])
}

void .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10268])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10313])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = (*($1) & [255])
	if ( ((int_32)$6 == (int_32)*(*(($4 + [-24])))) ){ goto $label$9 }
	$7 = ($2 + [24])
	$5 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-48])
	$5 = ($5 + [-24])
	if ( ((int_32)$6 != (int_32)*(*($8))) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$6 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10363])
	$6 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $6)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $6)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $6)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $102 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $105 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $104 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = $global$0
	$4 = $3
	if ( ((int_32)*($1 + [4]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	*($1 + [1]) = *(*($2))
	$5 = *($1)
	$3 = $3
	$2 = ($3 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [1])
	CALL memcpy(($3 + [-15]), ($1 + [1]), [1])
	CALL db_update_i64(*($1 + [8]), (int_64)0, $2, [2])
	if ( ((uint_64)*($0 + [16]) > (uint_64)$5) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$3
	$global$0 = $4
}

void .FUNC $89 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	*($1 + [24]) = (int_64))(*($1 + [24]) - *(*($2)))
	$5 = *($1)
	$2 = $3
	$3 = ($2 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = $2
	CALL $144($4, $1)
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [32])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [16])
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10268])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10313])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10363])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $87 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	*($1 + [40]) = *(*($2 + [4]))
	$5 = *(*($2))
	*($1 + [8]) = (int_64))(*($1 + [8]) - $5)
	*($1 + [16]) = (int_64))(*($1 + [16]) - $5)
	*($1 + [32]) = ((int_64)$5 + (int_64)*($1 + [32]))
	$5 = *($1)
	$3 = $3
	$2 = ($3 + [-48])
	$global$0 = $2
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($3 + [-4])
	CALL $75($4, $1)
	CALL db_update_i64(*($1 + [48]), (int_64)0, $2, [44])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [16])
}

void .FUNC $86 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	*($1 + [40]) = *(*($2 + [4]))
	$5 = *(*($2))
	*($1 + [24]) = (int_64))(*($1 + [24]) - $5)
	*($1 + [32]) = ((int_64)$5 + (int_64)*($1 + [32]))
	$5 = *($1)
	$3 = $3
	$2 = ($3 + [-48])
	$global$0 = $2
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($3 + [-4])
	CALL $75($4, $1)
	CALL db_update_i64(*($1 + [48]), (int_64)0, $2, [44])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [16])
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	*($1 + [32]) = (int_64)0
	*($1 + [40]) = [0]
	$4 = *($1)
	$5 = $2
	$2 = ($5 + [-48])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($5 + [-4])
	CALL $75($3, $1)
	CALL db_update_i64(*($1 + [48]), (int_64)0, $2, [44])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $84 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)*(*($2)))
	$5 = *($1)
	$2 = $3
	$3 = ($2 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = $2
	CALL $144($4, $1)
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [32])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [16])
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9605])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9605])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9605])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *(($0 + [32]))
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9605])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	*($2) = $0
	CALL $146($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $82 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [10154])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10197])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10216])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [9997])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9652])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $70(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $10($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $80 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $145 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [36]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10522])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4157661337911382144)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10468])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10468])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $78(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9605])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9605])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [24])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9605])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	*($2) = (*($2) + [8])
	return $0
}

void .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [40])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9605])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($6, $4, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2) = *(($3 + [48]))
	if ( ((int_32)(*(($5 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*($6) = (*($6) + [8])
	$5 = *($1)
	$6 = *($0)
	*($2 + [15]) = *($6 + [56])
	$4 = *($5 + [4])
	if ( ((int_32)(*($5 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [9605])
	$4 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [15]), [1])
	*(($5 = ($5 + [4]))) = (*($5) + [1])
	$0 = ($6 + [57])
	$4 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [9605])
	$4 = *(($5 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $0, [1])
	*(($5 = ($5 + [4]))) = (*($5) + [1])
	$6 = ($6 + [58])
	$5 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $5) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9605])
	$5 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [9605])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0)
	$3 = ($4 + [40])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$0 = *($1)
	*($2 + [14]) = *($4 + [41])
	$5 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [9605])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [14]), [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$0 = *($1)
	*($2 + [15]) = *($4 + [42])
	$5 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [9605])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, ($2 + [15]), [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$3 = ($4 + [43])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9605])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$0 = ($4 + [44])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9605])
	$4 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9679])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9679])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9679])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [24])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9679])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [32])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $3, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [40])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [9679])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($1, $3, [4])
	*($2) = (*($2) + [4])
	return $0
}

int_32 .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9679])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9679])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9679])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [24])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9679])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($1, $3, [8])
	*($2) = (*($2) + [8])
	return $0
}

int_32 .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [9605])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [1])
	$4 = (*($3) + [1])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9605])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $72 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($0 + [8]) = $3
	*($0) = (int_64)0
	$5 = [0]
	$6 = (uint_64)$3 >> (uint_64)(int_64)8
	$3 = $6)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$3 = $7
	$8 = $5
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$3 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$9 = ($5 + [1])
	$5 = $9
	if ( $8 ){ goto $label$5 }
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8795])
	
.LABEL $label$1
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [16]) = $2
	*($4 + [8]) = $1
	$5 = CALL db_find_i64($1, $2, (int_64)3607749779137757184, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$6 }
	$5 = CALL $112(($4 + [8]), $5)
	if ( ((int_32)*($5 + [16]) == (int_32)($4 + [8])) ){ goto $label$7 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$7
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	$9 = *($4 + [32])
	if ( ($9 == 0) ){ goto $label$6 }
	$0 = ($4 + [36])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$9 }
	
.LOOP $label$10:
	$5 = ($5 + [-24])
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$11 }
	CALL $10($8)
	
.LABEL $label$11
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$10 }
	$5 = *(($4 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$5 = $9
	
.LABEL $label$8
	*($0) = $9
	CALL $10($5)
	
.LABEL $label$6
	$global$0 = ($4 + [48])
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	*($1 + [32]) = (int_64)0
	*($1 + [40]) = [0]
	$4 = *($1)
	$5 = $2
	$2 = ($5 + [-48])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($5 + [-4])
	CALL $75($3, $1)
	CALL db_update_i64(*($1 + [48]), (int_64)0, $2, [44])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $70 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9679])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9679])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9679])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$5 = ($4 + [24])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9679])
	$0 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $0, [8])
	*(($4 + [32])) = *($2 + [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $76 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $77 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)*(*($2)))
	$5 = *($1)
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($2 + [-4])
	CALL $75($4, $1)
	CALL db_update_i64(*($1 + [48]), (int_64)0, $3, [44])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [16])
}

void .FUNC $74 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9900])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9946])
	
.LABEL $label$2
	$5 = *(($2 + [8]))
	$6 = *(*(($2 + [4])))
	$7 = *($1)
	if ( (*(*($2)) == 0) ){ goto $label$4 }
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)$6)
	$2 = ($1 + [16])
	goto $label$3 
	
.LABEL $label$4
	$2 = ($1 + [24])
	
.LABEL $label$3
	*($2) = ((int_64)*($2) + (int_64)$6)
	$8 = *(*($5 + [4]) + [32])
	if ( (int_64)($8 == 0) ){ goto $label$5 }
	$6 = (int_64)
	if ( ((int_64)$6($8 - $6)) < (int_64)1) ){ goto $label$6 }
	*(($1 + [32])) = $6
	goto $label$5 
	
.LABEL $label$6
	*($1 + [40]) = [0]
	*(($1 + [32])) = (int_64)0
	
.LABEL $label$5
	$3 = $3
	$2 = ($3 + [-48])
	$global$0 = $2
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($3 + [-4])
	CALL $75($4, $1)
	CALL db_update_i64(*($1 + [48]), (int_64)0, $2, [44])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($4 + [16])
}

int_32 .FUNC $39 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [32])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [20])) = $2
	*(($4 + [24])) = ($2 + $7)
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	$3 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return [1]
}

void .FUNC $36 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	int_64 $17
	int_64 $18
	$5 = ($global$0 - [352])
	$global$0 = $5
	CALL require_auth($1)
	$6 = *($4 + [8])
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$5 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8795])
	
.LABEL $label$1
	$8 = CALL $1([8299])
	if ( ($8 <= [8]) ){ goto $label$10 }
	CALL eosio_assert([0], [9191])
	goto $label$9 
	
.LABEL $label$10
	if ( ($8 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$7 = (int_64)0
	
.LOOP $label$11:
	$10 = *(($8 + [8298]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$12 }
	CALL eosio_assert([0], [9236])
	
.LABEL $label$12
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$11 }
	if ( ((int_64)$6 == (int_64)((int_64)((int_64)$7 << (int_64)8) | (int_64)4)) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_64)$6 == (int_64)((int_64)0 | (int_64)4)) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [8932])
	
.LABEL $label$6
	if ( ((int_64)*($4) > (int_64)0) ){ goto $label$13 }
	CALL eosio_assert([0], [8951])
	
.LABEL $label$13
	$12 = [0]
	*(($5 + [320])) = [0]
	*($5 + [304]) = (int_64)-1
	*($5 + [312]) = (int_64)0
	$7 = *($0)
	*($5 + [288]) = $7
	*($5 + [296]) = $1
	$8 = CALL db_find_i64($7, $1, (int_64)-4157660971118100480, (int_64)6138406292105986048)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$15 }
	$12 = CALL $64(($5 + [288]), $8)
	if ( ((int_32)*($12 + [44]) == (int_32)($5 + [288])) ){ goto $label$14 }
	CALL eosio_assert([0], [9714])
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [8982])
	
.LABEL $label$14
	$8 = (CASTING uint_32)(uint_64 ((int_64)CALL $25() / (int_64)1000000))
	*($5 + [280]) = ($8 + [86400])
	if ( ((uint_32)(*($12 + [40]) + [-1]) >= (uint_32)$8) ){ goto $label$16 }
	if ( $12 ){ goto $label$17 }
	CALL eosio_assert([0], [9865])
	
.LABEL $label$17
	CALL $85(($5 + [288]), $12)
	
.LABEL $label$16
	$11 = ((int_64)$2 == (int_64)6138406292105986048)
	$13 = ((int_64)$1 == (int_64)$3)
	$8 = CALL $1([8299])
	if ( ($8 <= [8]) ){ goto $label$21 }
	CALL eosio_assert([0], [9191])
	goto $label$20 
	
.LABEL $label$21
	if ( ($8 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	$7 = (int_64)0
	
.LOOP $label$22:
	$10 = *(($8 + [8298]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$23 }
	CALL eosio_assert([0], [9236])
	
.LABEL $label$23
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$22 }
	$9 = ((int_64)$7 << (int_64)8)
	goto $label$18 
	
.LABEL $label$19
	$9 = (int_64)0
	
.LABEL $label$18
	$13 = ($11 & $13)
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = ((int_64)$9 | (int_64)4)
	$8 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$30 }
	$7 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$30
	$7 = $9
	
.LOOP $label$31:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$27 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$31 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$28 }
	
.LABEL $label$29
	if ( ($13 == 0) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	CALL eosio_assert([0], [8795])
	if ( $13 ){ goto $label$25 }
	
.LABEL $label$26
	*($5 + [32]) = $4
	*($5 + [36]) = ($5 + [280])
	if ( $12 ){ goto $label$32 }
	CALL eosio_assert([0], [9865])
	
.LABEL $label$32
	CALL $86(($5 + [288]), $12, ($5 + [32]))
	$10 = [0]
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	$7 = *($0)
	*($5 + [32]) = $7
	*($5 + [40]) = $1
	*($5 + [56]) = (int_64)0
	$8 = CALL db_lowerbound_i64($7, $1, (int_64)-4157661337911382144, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$33 }
	$8 = CALL $78(($5 + [32]), $8)
	if ( ((int_64)*($8 + [8]) != (int_64)$2) ){ goto $label$34 }
	$14 = [2]
	goto $label$24 
	
.LABEL $label$34
	$14 = [0]
	goto $label$24 
	
.LABEL $label$33
	$14 = [123]
	goto $label$24 
	
.LABEL $label$25
	$7 = *($4)
	if ( ((uint_64)*($12 + [16]) >= (uint_64)$7) ){ goto $label$35 }
	CALL eosio_assert([0], [9002])
	$7 = *($4)
	
.LABEL $label$35
	$9 = *($12 + [8])
	*($5 + [32]) = $4
	*($5 + [36]) = ($5 + [280])
	if ( $12 ){ goto $label$36 }
	CALL eosio_assert([0], [9865])
	
.LABEL $label$36
	$9 = (int_64))($9 - $7)
	CALL $87(($5 + [288]), $12, ($5 + [32]))
	$14 = [28]
	
.LABEL $label$24
	
.LOOP $label$37:
	goto $label$239 
	
.LABEL $label$241
	$8 = CALL $78(($5 + [32]), $8)
	if ( ((int_64)*($8 + [8]) != (int_64)$2) ){ goto $label$115 }
	$14 = [2]
	goto $label$37 
	
.LABEL $label$240
	if ( ((int_64)*($8 + [16]) == (int_64)$3) ){ goto $label$116 }
	$14 = [0]
	goto $label$37 
	
.LABEL $label$239
	$8 = CALL db_next_i64(*($8 + [36]), ($5 + [240]))
	if ( ((int_32)$8 >= (int_32)[0]) ){ goto $label$117 }
	$14 = [123]
	goto $label$37 
	
.LABEL $label$238
	CALL eosio_assert([0], [8982])
	$9 = *($4)
	$7 = *([0] + [24])
	if ( ((uint_64)$7 >= (uint_64)$9) ){ goto $label$112 }
	$14 = [122]
	goto $label$37 
	
.LABEL $label$237
	CALL eosio_assert([0], [9002])
	$7 = *(($10 + [24]))
	$9 = *($4)
	$14 = [4]
	goto $label$37 
	
.LABEL $label$236
	if ( ((int_64)$7 != (int_64)$9) ){ goto $label$111 }
	$14 = [117]
	goto $label$37 
	
.LABEL $label$235
	if ( $10 ){ goto $label$39 }
	$14 = [121]
	goto $label$37 
	
.LABEL $label$234
	CALL eosio_assert([0], [10234])
	CALL eosio_assert([0], [9684])
	$14 = [118]
	goto $label$37 
	
.LABEL $label$233
	$8 = CALL db_next_i64(*($10 + [36]), ($5 + [240]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$38 }
	$14 = [119]
	goto $label$37 
	
.LABEL $label$232
	CALL $78(($5 + [32]), $8)
	$14 = [120]
	goto $label$37 
	
.LABEL $label$231
	CALL $88(($5 + [32]), $10)
	goto $label$109 
	
.LABEL $label$230
	*($5 + [240]) = $4
	if ( $10 ){ goto $label$110 }
	$14 = [116]
	goto $label$37 
	
.LABEL $label$229
	CALL eosio_assert([0], [9865])
	$14 = [6]
	goto $label$37 
	
.LABEL $label$228
	CALL $89(($5 + [32]), $10, ($5 + [240]))
	$14 = [7]
	goto $label$37 
	
.LABEL $label$227
	$8 = [0]
	*(($5 + [272])) = [0]
	*($5 + [256]) = (int_64)-1
	*($5 + [264]) = (int_64)0
	$7 = *($0)
	*($5 + [240]) = $7
	*($5 + [248]) = $3
	$10 = CALL db_find_i64($7, $3, (int_64)-4157660971118100480, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$108 }
	$14 = [8]
	goto $label$37 
	
.LABEL $label$226
	$8 = CALL $64(($5 + [240]), $10)
	if ( ((int_32)*($8 + [44]) == (int_32)($5 + [240])) ){ goto $label$107 }
	$14 = [9]
	goto $label$37 
	
.LABEL $label$225
	CALL eosio_assert([0], [9714])
	$14 = [10]
	goto $label$37 
	
.LABEL $label$224
	$9 = (int_64)
	if ( ((int_64)$9(*($8 + [8]) - *($4))) != (int_64)0) ){ goto $label$106 }
	$14 = [109]
	goto $label$37 
	
.LABEL $label$223
	if ( ((int_64)*($8 + [24]) != (int_64)0) ){ goto $label$105 }
	$14 = [110]
	goto $label$37 
	
.LABEL $label$222
	if ( ((int_64)*($8 + [32]) == (int_64)0) ){ goto $label$104 }
	$14 = [11]
	goto $label$37 
	
.LABEL $label$221
	*($5 + [184]) = $4
	if ( $8 ){ goto $label$103 }
	$14 = [108]
	goto $label$37 
	
.LABEL $label$220
	CALL eosio_assert([0], [9865])
	$14 = [12]
	goto $label$37 
	
.LABEL $label$219
	CALL $90(($5 + [240]), $8, ($5 + [184]))
	$11 = *($5 + [264])
	if ( ($11 == 0) ){ goto $label$100 }
	$14 = [13]
	goto $label$37 
	
.LABEL $label$218
	$12 = ($5 + [268])
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$99 }
	$14 = [14]
	goto $label$37 
	
.LABEL $label$217
	$14 = [15]
	goto $label$37 
	
.LABEL $label$216
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$97 }
	$14 = [16]
	goto $label$37 
	
.LABEL $label$215
	CALL $10($10)
	$14 = [17]
	goto $label$37 
	
.LABEL $label$214
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$98 }
	$14 = [18]
	goto $label$37 
	
.LABEL $label$213
	$8 = *(($5 + [264]))
	goto $label$96 
	
.LABEL $label$212
	$8 = $11
	$14 = [19]
	goto $label$37 
	
.LABEL $label$211
	*($12) = $11
	CALL $10($8)
	$14 = [20]
	goto $label$37 
	
.LABEL $label$210
	$11 = *($5 + [56])
	if ( ($11 == 0) ){ goto $label$95 }
	$14 = [21]
	goto $label$37 
	
.LABEL $label$209
	$12 = ($5 + [60])
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$94 }
	$14 = [22]
	goto $label$37 
	
.LABEL $label$208
	$14 = [23]
	goto $label$37 
	
.LABEL $label$207
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$92 }
	$14 = [24]
	goto $label$37 
	
.LABEL $label$206
	CALL $10($10)
	$14 = [25]
	goto $label$37 
	
.LABEL $label$205
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$93 }
	$14 = [26]
	goto $label$37 
	
.LABEL $label$204
	$8 = *(($5 + [56]))
	goto $label$91 
	
.LABEL $label$203
	$8 = $11
	$14 = [27]
	goto $label$37 
	
.LABEL $label$202
	*($12) = $11
	CALL $10($8)
	$14 = [28]
	goto $label$37 
	
.LABEL $label$201
	$8 = [0]
	*(($5 + [272])) = [0]
	*($5 + [256]) = (int_64)-1
	*($5 + [264]) = (int_64)0
	$15 = *($0)
	*($5 + [240]) = $15
	$7 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($5 + [248]) = $7)
	$10 = CALL db_find_i64($15, $7, (int_64)-4157508551318700032, $7)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$90 }
	$14 = [29]
	goto $label$37 
	
.LABEL $label$200
	$8 = CALL $81(($5 + [240]), $10)
	if ( ((int_32)*($8 + [16]) == (int_32)($5 + [240])) ){ goto $label$89 }
	$14 = [30]
	goto $label$37 
	
.LABEL $label$199
	CALL eosio_assert([0], [9714])
	$14 = [31]
	goto $label$37 
	
.LABEL $label$198
	$7 = *($0)
	*($5 + [32]) = $4
	if ( $8 ){ goto $label$88 }
	$14 = [105]
	goto $label$37 
	
.LABEL $label$197
	CALL eosio_assert([0], [9865])
	$14 = [32]
	goto $label$37 
	
.LABEL $label$196
	CALL $91(($5 + [240]), $8, $7, ($5 + [32]))
	*(($5 + [16])) = $6
	*($5 + [232]) = $6
	*($5 + [8]) = $9
	*($5 + [224]) = $9
	$16 = CALL $65($0, ($5 + [8]))
	*((($5 + [184]) + [32])) = [0]
	*($5 + [200]) = (int_64)-1
	*($5 + [208]) = (int_64)0
	$7 = *($0)
	*($5 + [184]) = $7
	*($5 + [192]) = $7
	$13 = [0]
	$8 = CALL db_find_i64($7, $7, (int_64)4983106858454614016, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$87 }
	$14 = [33]
	goto $label$37 
	
.LABEL $label$195
	$8 = CALL $59(($5 + [184]), $8)
	if ( ((int_32)*($8 + [44]) == (int_32)($5 + [184])) ){ goto $label$86 }
	$14 = [34]
	goto $label$37 
	
.LABEL $label$194
	CALL eosio_assert([0], [9714])
	$14 = [35]
	goto $label$37 
	
.LABEL $label$193
	$13 = *($8 + [8])
	$14 = [36]
	goto $label$37 
	
.LABEL $label$192
	*((($5 + [144]) + [32])) = [0]
	*($5 + [160]) = (int_64)-1
	*($5 + [168]) = (int_64)0
	$7 = *($0)
	*($5 + [144]) = $7
	*($5 + [152]) = $7
	$8 = CALL db_find_i64($7, $7, (int_64)-2617952418909913088, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$85 }
	$14 = [37]
	goto $label$37 
	
.LABEL $label$191
	if ( ((int_32)*(CALL $57(($5 + [144]), $8) + [12]) == (int_32)($5 + [144])) ){ goto $label$84 }
	$14 = [38]
	goto $label$37 
	
.LABEL $label$190
	CALL eosio_assert([0], [9714])
	goto $label$83 
	
.LABEL $label$189
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [144])) ){ goto $label$44 }
	$14 = [98]
	goto $label$37 
	
.LABEL $label$188
	CALL eosio_assert([0], [9814])
	$14 = [99]
	goto $label$37 
	
.LABEL $label$187
	*(($8 = CALL $8([24])) + [12]) = ($5 + [144])
	*($8 + [8]) = [1]
	*($8) = $3
	CALL memcpy(($5 + [32]), $8, [8])
	CALL memcpy((($5 + [32]) | [8]), ($8 + [8]), [1])
	$7 = *($8)
	$11 = CALL db_store_i64(*((($5 + [144]) + [8])), (int_64)-2617952418909913088, $1, $7, ($5 + [32]), [9])
	*($8 + [16]) = $11
	$10 = ($5 + [160])
	if ( (uint_64)($7 <= *($10)) ){ goto $label$43 }
	$14 = [100]
	goto $label$37 
	
.LABEL $label$186
	*($10) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$14 = [101]
	goto $label$37 
	
.LABEL $label$185
	*($5 + [96]) = $8
	$7 = *($8)
	*($5 + [32]) = $7
	*($5 + [328]) = $11
	$12 = ($5 + [172])
	$10 = *($12)
	if ( ((uint_32)$10 >= (uint_32)*(($5 + [176]))) ){ goto $label$42 }
	$14 = [104]
	goto $label$37 
	
.LABEL $label$184
	*($10 + [8]) = $7
	*($10 + [16]) = $11
	*($5 + [96]) = [0]
	*($10) = $8
	*($12) = ($10 + [24])
	$8 = *($5 + [96])
	*($5 + [96]) = [0]
	if ( $8 ){ goto $label$80 }
	goto $label$81 
	
.LABEL $label$183
	CALL $58(($5 + [168]), ($5 + [96]), ($5 + [32]), ($5 + [328]))
	$8 = *($5 + [96])
	*($5 + [96]) = [0]
	if ( ($8 == 0) ){ goto $label$82 }
	$14 = [103]
	goto $label$37 
	
.LABEL $label$182
	CALL $10($8)
	$14 = [39]
	goto $label$37 
	
.LABEL $label$181
	$10 = *(($5 + [172]))
	$12 = *(($5 + [168]))
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$79 }
	$14 = [40]
	goto $label$37 
	
.LABEL $label$180
	$14 = [41]
	goto $label$37 
	
.LABEL $label$179
	$8 = ($10 + [-24])
	$11 = *($8)
	if ( ((int_64)*($11) == (int_64)$3) ){ goto $label$76 }
	$14 = [42]
	goto $label$37 
	
.LABEL $label$178
	$10 = $8
	if ( ((int_32)$12 != (int_32)$8) ){ goto $label$77 }
	goto $label$78 
	
.LABEL $label$177
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$75 }
	$14 = [93]
	goto $label$37 
	
.LABEL $label$176
	if ( ((int_32)*(($11 + [12])) == (int_32)($5 + [144])) ){ goto $label$45 }
	$14 = [94]
	goto $label$37 
	
.LABEL $label$175
	CALL eosio_assert([0], [9714])
	$14 = [95]
	goto $label$37 
	
.LABEL $label$174
	if ( $11 ){ goto $label$72 }
	$14 = [96]
	goto $label$37 
	
.LABEL $label$173
	$8 = [0]
	goto $label$71 
	
.LABEL $label$172
	$8 = [0]
	$10 = CALL db_find_i64(*($5 + [144]), *(($5 + [152])), (int_64)-2617952418909913088, $3)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$74 }
	$14 = [44]
	goto $label$37 
	
.LABEL $label$171
	$11 = CALL $57(($5 + [144]), $10)
	if ( ((int_32)*($11 + [12]) == (int_32)($5 + [144])) ){ goto $label$73 }
	$14 = [45]
	goto $label$37 
	
.LABEL $label$170
	CALL eosio_assert([0], [9714])
	$14 = [46]
	goto $label$37 
	
.LABEL $label$169
	$8 = ((int_32)*($11 + [8]) == (int_32)[1])
	$14 = [47]
	goto $label$37 
	
.LABEL $label$168
	$7 = *($0)
	$15 = *($4)
	$17 = (int_64))((int_64)0 - $15)
	$18 = *(($4 + [8]))
	if ( ((int_64)$15 <= (int_64)-4611686018427387904) ){ goto $label$70 }
	$14 = [90]
	goto $label$37 
	
.LABEL $label$167
	if ( ((int_64)$15 < (int_64)4611686018427387904) ){ goto $label$69 }
	$14 = [91]
	goto $label$37 
	
.LABEL $label$166
	CALL eosio_assert([0], [9789])
	goto $label$68 
	
.LABEL $label$165
	CALL eosio_assert([0], [9765])
	$14 = [49]
	goto $label$37 
	
.LABEL $label$164
	*((($5 + [32]) + [32])) = $18
	*(($5 + [80])) = $6
	*(($10 = ($5 + [120]))) = [0]
	*($5 + [40]) = $2
	*($5 + [32]) = $1
	*($5 + [48]) = $3
	*($5 + [56]) = $17
	*($5 + [72]) = $9
	*($5 + [88]) = $8
	*($5 + [89]) = $16
	*($5 + [90]) = $13
	*($5 + [96]) = $7
	*($5 + [104]) = (int_64)-4157661080438439936
	*($5 + [112]) = (int_64)0
	*(($8 = CALL $8([16]))) = $7
	*($8 + [8]) = (int_64)3617214756542218240
	*(($5 + [132])) = [0]
	$11 = ($8 + [16])
	*($10) = $11
	*(($5 + [116])) = $11
	*($5 + [112]) = $8
	*($5 + [124 align=4]) = (int_64)0
	CALL $66(($5 + [124]), [59])
	$11 = (($5 + [96]) + [32])
	$8 = *($11)
	$10 = *($5 + [124])
	*($5 + [332]) = $10
	*($5 + [328]) = $10
	*($5 + [336]) = $8
	*($5 + [344]) = ($5 + [328])
	*($5 + [24]) = ($5 + [32])
	CALL $83(($5 + [24]), ($5 + [344]))
	CALL $68(($5 + [96]))
	$8 = *($5 + [124])
	if ( ($8 == 0) ){ goto $label$67 }
	$14 = [50]
	goto $label$37 
	
.LABEL $label$163
	*($11) = $8
	CALL $10($8)
	$14 = [51]
	goto $label$37 
	
.LABEL $label$162
	$8 = *($5 + [112])
	if ( ($8 == 0) ){ goto $label$66 }
	$14 = [52]
	goto $label$37 
	
.LABEL $label$161
	*(($5 + [116])) = $8
	CALL $10($8)
	$14 = [53]
	goto $label$37 
	
.LABEL $label$160
	$7 = CALL $25()
	*((($5 + [32]) + [28])) = (int_64)0
	*(($5 + [76])) = (int_64)0
	*(($5 + [84])) = (int_64)0
	*($5 + [44]) = [0]
	*($5 + [48]) = [0]
	*($5 + [52 align=4]) = (int_64)0
	*($5 + [68 align=4]) = (int_64)0
	*($5 + [32]) = ((CASTING uint_32)(uint_64 ((int_64)$7 / (int_64)1000000)) + [60])
	*($5 + [104]) = (int_64)3617214756542218240
	*($5 + [96]) = *($0)
	*($5 + [328]) = (int_64)-4998252998346932224
	*($5 + [24]) = $1
	CALL $92(($5 + [68]), ($5 + [96]), $0, ($5 + [328]), ($5 + [24]))
	*($5 + [52]) = [86401]
	*($5 + [104]) = (int_64)0
	*($5 + [96]) = $1
	CALL cancel_deferred(($5 + [96]))
	*($5 + [104]) = (int_64)0
	*($5 + [96]) = $1
	CALL $93(($5 + [32]), ($5 + [96]), *($0), [1])
	CALL $94(($5 + [32]))
	$11 = *($5 + [168])
	if ( ($11 == 0) ){ goto $label$65 }
	$14 = [54]
	goto $label$37 
	
.LABEL $label$159
	$8 = *((($5 + [144]) + [28]))
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$64 }
	$14 = [55]
	goto $label$37 
	
.LABEL $label$158
	$14 = [56]
	goto $label$37 
	
.LABEL $label$157
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$62 }
	$14 = [57]
	goto $label$37 
	
.LABEL $label$156
	CALL $10($10)
	$14 = [58]
	goto $label$37 
	
.LABEL $label$155
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$63 }
	$14 = [59]
	goto $label$37 
	
.LABEL $label$154
	$8 = *(($5 + [168]))
	goto $label$61 
	
.LABEL $label$153
	$8 = $11
	$14 = [60]
	goto $label$37 
	
.LABEL $label$152
	*(($5 + [172])) = $11
	CALL $10($8)
	$14 = [61]
	goto $label$37 
	
.LABEL $label$151
	$11 = *($5 + [208])
	if ( ($11 == 0) ){ goto $label$60 }
	$14 = [62]
	goto $label$37 
	
.LABEL $label$150
	$0 = ($5 + [212])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$59 }
	$14 = [63]
	goto $label$37 
	
.LABEL $label$149
	$14 = [64]
	goto $label$37 
	
.LABEL $label$148
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$57 }
	$14 = [65]
	goto $label$37 
	
.LABEL $label$147
	CALL $10($10)
	$14 = [66]
	goto $label$37 
	
.LABEL $label$146
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$58 }
	$14 = [67]
	goto $label$37 
	
.LABEL $label$145
	$8 = *(($5 + [208]))
	goto $label$56 
	
.LABEL $label$144
	$8 = $11
	$14 = [68]
	goto $label$37 
	
.LABEL $label$143
	*($0) = $11
	CALL $10($8)
	$14 = [69]
	goto $label$37 
	
.LABEL $label$142
	$11 = *($5 + [264])
	if ( ($11 == 0) ){ goto $label$55 }
	$14 = [70]
	goto $label$37 
	
.LABEL $label$141
	$0 = ($5 + [268])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$54 }
	$14 = [71]
	goto $label$37 
	
.LABEL $label$140
	$14 = [72]
	goto $label$37 
	
.LABEL $label$139
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$52 }
	$14 = [73]
	goto $label$37 
	
.LABEL $label$138
	CALL $10($10)
	$14 = [74]
	goto $label$37 
	
.LABEL $label$137
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$53 }
	$14 = [75]
	goto $label$37 
	
.LABEL $label$136
	$8 = *(($5 + [264]))
	goto $label$51 
	
.LABEL $label$135
	$8 = $11
	$14 = [76]
	goto $label$37 
	
.LABEL $label$134
	*($0) = $11
	CALL $10($8)
	$14 = [77]
	goto $label$37 
	
.LABEL $label$133
	$11 = *($5 + [312])
	if ( ($11 == 0) ){ goto $label$50 }
	$14 = [78]
	goto $label$37 
	
.LABEL $label$132
	$0 = ($5 + [316])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$49 }
	$14 = [79]
	goto $label$37 
	
.LABEL $label$131
	$14 = [80]
	goto $label$37 
	
.LABEL $label$130
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$47 }
	$14 = [81]
	goto $label$37 
	
.LABEL $label$129
	CALL $10($10)
	$14 = [82]
	goto $label$37 
	
.LABEL $label$128
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$48 }
	$14 = [83]
	goto $label$37 
	
.LABEL $label$127
	$8 = *(($5 + [312]))
	goto $label$46 
	
.LABEL $label$126
	$8 = $11
	$14 = [84]
	goto $label$37 
	
.LABEL $label$125
	*($0) = $11
	CALL $10($8)
	$14 = [85]
	goto $label$37 
	
.LABEL $label$124
	$global$0 = ($5 + [352])
	return 
	
.LABEL $label$123
	$9 = *($4)
	$10 = $8
	$7 = *($10 + [24])
	if ( (uint_64)($7 <= $9) ){ goto $label$114 }
	goto $label$113 
	
.LABEL $label$122
	if ( $8 ){ goto $label$41 }
	$14 = [115]
	goto $label$37 
	
.LABEL $label$121
	CALL eosio_assert([0], [10234])
	CALL eosio_assert([0], [9684])
	$14 = [112]
	goto $label$37 
	
.LABEL $label$120
	$10 = CALL db_next_i64(*($8 + [48]), ($5 + [184]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$40 }
	$14 = [113]
	goto $label$37 
	
.LABEL $label$119
	CALL $64(($5 + [240]), $10)
	$14 = [114]
	goto $label$37 
	
.LABEL $label$118
	CALL $95(($5 + [240]), $8)
	$11 = *($5 + [264])
	if ( $11 ){ goto $label$101 }
	goto $label$102 
	
.LABEL $label$117
	$14 = [1]
	goto $label$37 
	
.LABEL $label$116
	$14 = [3]
	goto $label$37 
	
.LABEL $label$115
	$14 = [0]
	goto $label$37 
	
.LABEL $label$114
	$14 = [122]
	goto $label$37 
	
.LABEL $label$113
	$14 = [4]
	goto $label$37 
	
.LABEL $label$112
	$14 = [4]
	goto $label$37 
	
.LABEL $label$111
	$14 = [5]
	goto $label$37 
	
.LABEL $label$110
	$14 = [6]
	goto $label$37 
	
.LABEL $label$109
	$14 = [7]
	goto $label$37 
	
.LABEL $label$108
	$14 = [10]
	goto $label$37 
	
.LABEL $label$107
	$14 = [10]
	goto $label$37 
	
.LABEL $label$106
	$14 = [11]
	goto $label$37 
	
.LABEL $label$105
	$14 = [11]
	goto $label$37 
	
.LABEL $label$104
	$14 = [111]
	goto $label$37 
	
.LABEL $label$103
	$14 = [12]
	goto $label$37 
	
.LABEL $label$102
	$14 = [20]
	goto $label$37 
	
.LABEL $label$101
	$14 = [13]
	goto $label$37 
	
.LABEL $label$100
	$14 = [20]
	goto $label$37 
	
.LABEL $label$99
	$14 = [107]
	goto $label$37 
	
.LABEL $label$98
	$14 = [15]
	goto $label$37 
	
.LABEL $label$97
	$14 = [17]
	goto $label$37 
	
.LABEL $label$96
	$14 = [19]
	goto $label$37 
	
.LABEL $label$95
	$14 = [28]
	goto $label$37 
	
.LABEL $label$94
	$14 = [106]
	goto $label$37 
	
.LABEL $label$93
	$14 = [23]
	goto $label$37 
	
.LABEL $label$92
	$14 = [25]
	goto $label$37 
	
.LABEL $label$91
	$14 = [27]
	goto $label$37 
	
.LABEL $label$90
	$14 = [31]
	goto $label$37 
	
.LABEL $label$89
	$14 = [31]
	goto $label$37 
	
.LABEL $label$88
	$14 = [32]
	goto $label$37 
	
.LABEL $label$87
	$14 = [36]
	goto $label$37 
	
.LABEL $label$86
	$14 = [35]
	goto $label$37 
	
.LABEL $label$85
	$14 = [97]
	goto $label$37 
	
.LABEL $label$84
	$14 = [39]
	goto $label$37 
	
.LABEL $label$83
	$14 = [39]
	goto $label$37 
	
.LABEL $label$82
	$14 = [39]
	goto $label$37 
	
.LABEL $label$81
	$14 = [39]
	goto $label$37 
	
.LABEL $label$80
	$14 = [103]
	goto $label$37 
	
.LABEL $label$79
	$14 = [43]
	goto $label$37 
	
.LABEL $label$78
	$14 = [43]
	goto $label$37 
	
.LABEL $label$77
	$14 = [41]
	goto $label$37 
	
.LABEL $label$76
	$14 = [92]
	goto $label$37 
	
.LABEL $label$75
	$14 = [43]
	goto $label$37 
	
.LABEL $label$74
	$14 = [47]
	goto $label$37 
	
.LABEL $label$73
	$14 = [46]
	goto $label$37 
	
.LABEL $label$72
	$14 = [46]
	goto $label$37 
	
.LABEL $label$71
	$14 = [47]
	goto $label$37 
	
.LABEL $label$70
	$14 = [48]
	goto $label$37 
	
.LABEL $label$69
	$14 = [49]
	goto $label$37 
	
.LABEL $label$68
	$14 = [49]
	goto $label$37 
	
.LABEL $label$67
	$14 = [51]
	goto $label$37 
	
.LABEL $label$66
	$14 = [53]
	goto $label$37 
	
.LABEL $label$65
	$14 = [61]
	goto $label$37 
	
.LABEL $label$64
	$14 = [89]
	goto $label$37 
	
.LABEL $label$63
	$14 = [56]
	goto $label$37 
	
.LABEL $label$62
	$14 = [58]
	goto $label$37 
	
.LABEL $label$61
	$14 = [60]
	goto $label$37 
	
.LABEL $label$60
	$14 = [69]
	goto $label$37 
	
.LABEL $label$59
	$14 = [88]
	goto $label$37 
	
.LABEL $label$58
	$14 = [64]
	goto $label$37 
	
.LABEL $label$57
	$14 = [66]
	goto $label$37 
	
.LABEL $label$56
	$14 = [68]
	goto $label$37 
	
.LABEL $label$55
	$14 = [77]
	goto $label$37 
	
.LABEL $label$54
	$14 = [87]
	goto $label$37 
	
.LABEL $label$53
	$14 = [72]
	goto $label$37 
	
.LABEL $label$52
	$14 = [74]
	goto $label$37 
	
.LABEL $label$51
	$14 = [76]
	goto $label$37 
	
.LABEL $label$50
	$14 = [85]
	goto $label$37 
	
.LABEL $label$49
	$14 = [86]
	goto $label$37 
	
.LABEL $label$48
	$14 = [80]
	goto $label$37 
	
.LABEL $label$47
	$14 = [82]
	goto $label$37 
	
.LABEL $label$46
	$14 = [84]
	goto $label$37 
	
.LABEL $label$45
	$14 = [95]
	goto $label$37 
	
.LABEL $label$44
	$14 = [99]
	goto $label$37 
	
.LABEL $label$43
	$14 = [101]
	goto $label$37 
	
.LABEL $label$42
	$14 = [102]
	goto $label$37 
	
.LABEL $label$41
	$14 = [112]
	goto $label$37 
	
.LABEL $label$40
	$14 = [114]
	goto $label$37 
	
.LABEL $label$39
	$14 = [118]
	goto $label$37 
	
.LABEL $label$38
	$14 = [120]
	goto $label$37 
	$14
}

int_32 .FUNC $37 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [176])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [120]))) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [76]) = $2
	*($4 + [72]) = $2
	*($4 + [80]) = ($2 + $7)
	*($4 + [160]) = ($4 + [72])
	*($4 + [40]) = ($4 + [88])
	CALL $71(($4 + [40]), ($4 + [160]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [80])
	*($4 + [24]) = *($4 + [72])
	*(($3 = (($4 + [144]) + [8]))) = *($9)
	*($4 + [144]) = *($4 + [24])
	$9 = *($3)
	*((($4 + [160]) + [8])) = $9
	*(($4 + [64])) = $9
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$0 = *($4 + [144])
	*($4 + [56]) = $0
	*($4 + [160]) = $0
	*(($9 = (($4 + [128]) + [8]))) = *($8)
	*($4 + [128]) = *($4 + [112])
	$0 = *($4 + [104])
	$1 = *($4 + [96])
	$10 = *($4 + [88])
	*($3) = *($9)
	*($4 + [144]) = *($4 + [128])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$11 = *((($4 + [144]) + [8]))
	*((($4 + [160]) + [8])) = $11
	*((($4 + [8]) + [8])) = $11
	$11 = *($4 + [144])
	*($4 + [8]) = $11
	*($4 + [160]) = $11
	CALL void $3((int_32 $10), (int_64 $1), (int_64 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [176])
	return [1]
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9652])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $8([48])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [32]) = $0
	CALL $143(($3 + [32]), $5)
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $80(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-4157661337911382144, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $78($6, $8)
	*($3 + [4]) = [0]
	*($3) = $6
	$7 = *(*(CALL $145($3) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10416])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	*($1 + [16]) = *(*($5 + [8]))
	*($1 + [24]) = *(*($5 + [12]))
	$6 = $2
	$5 = ($6 + [-32])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = $6
	CALL $144($3, $1)
	$7 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)-4157661337911382144, *(*($0 + [8])), $7, $5, [32])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

void .FUNC $32 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [48])
	$2 = $1
	$global$0 = $1
	$3 = CALL action_data_size()
	if ( ($3 <= [513]) ){ goto $label$2 }
	$1 = CALL $2($3)
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 - (($3 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$1
	CALL read_action_data($1, $3)
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*(($0 + [40])) = [0]
	*($2 + [12]) = $1
	*($2 + [8]) = $1
	*($2 + [16]) = ($1 + $3)
	*($2 + [24]) = ($2 + [8])
	*($2 + [36]) = ($0 + [8])
	*($2 + [32]) = $0
	*($2 + [40]) = ($0 + [16])
	*($2 + [44]) = ($0 + [32])
	CALL $53(($2 + [32]), ($2 + [24]))
	$global$0 = ($2 + [48])
}

void .FUNC $33 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_64 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	float_32 $11
	$6 = ($global$0 - [544])
	$global$0 = $6
	*($6 + [504]) = $1
	if ( ((int_64)*($0) != (int_64)$2) ){ goto $label$1 }
	CALL require_auth($1)
	$7 = *($3 + [8])
	*($6 + [496]) = $7
	$1 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$5 }
	$1 = $2
	$9 = $8
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$5
	$1 = $2
	
.LOOP $label$6:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = ((int_32)$8 < (int_32)[6])
	$10 = ($8 + [1])
	$8 = $10
	if ( $9 ){ goto $label$6 }
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8279])
	
.LABEL $label$2
	$8 = CALL $1([8299])
	if ( ($8 <= [8]) ){ goto $label$11 }
	CALL eosio_assert([0], [9191])
	goto $label$10 
	
.LABEL $label$11
	if ( ($8 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$1 = (int_64)0
	
.LOOP $label$12:
	$9 = *(($8 + [8298]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$13 }
	CALL eosio_assert([0], [9236])
	
.LABEL $label$13
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$12 }
	if ( ((int_64)$7 == (int_64)((int_64)((int_64)$1 << (int_64)8) | (int_64)4)) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_64)$7 == (int_64)((int_64)0 | (int_64)4)) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [8303])
	
.LABEL $label$7
	*($6 + [488]) = [8337]
	*($6 + [492]) = CALL $1([8337])
	*($6 + [56]) = *($6 + [488])
	CALL $29(($6 + [160]), ($6 + [56]))
	if ( ((int_64)$5 == (int_64)-7297918862773283472) ){ goto $label$14 }
	CALL eosio_assert([0], [8350])
	
.LABEL $label$14
	*($6 + [487]) = [0]
	*($6 + [486]) = [0]
	*($6 + [472]) = (int_64)0
	$8 = CALL $18(($6 + [456]), $4)
	CALL $54($0, $8, ($6 + [487]), ($6 + [486]), ($6 + [472]))
	if ( ((*($8) & [1]) == 0) ){ goto $label$15 }
	CALL $10(*($8 + [8]))
	
.LABEL $label$15
	if ( (((*($6 + [487]) + [-1]) & [255]) <= [10]) ){ goto $label$16 }
	CALL eosio_assert([0], [8382])
	
.LABEL $label$16
	if ( (((*($6 + [486]) + [-1]) & [255]) <= [12]) ){ goto $label$17 }
	CALL eosio_assert([0], [8410])
	
.LABEL $label$17
	if ( CALL is_account(*($6 + [472])) ){ goto $label$18 }
	CALL eosio_assert([0], [8434])
	
.LABEL $label$18
	*(($6 + [448])) = [0]
	*($6 + [432]) = (int_64)-1
	*($6 + [440]) = (int_64)0
	$1 = *($0)
	*($6 + [416]) = $1
	*($6 + [424]) = $1
	$8 = CALL db_find_i64($1, $1, (int_64)-2617975199131238400, *($6 + [487]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$25 }
	$8 = CALL $55(($6 + [416]), $8)
	if ( ((int_32)*($8 + [24]) == (int_32)($6 + [416])) ){ goto $label$26 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$26
	*($6 + [412]) = $8
	*($6 + [408]) = ($6 + [416])
	*(($6 + [400])) = [0]
	*($6 + [384]) = (int_64)-1
	*($6 + [392]) = (int_64)0
	$1 = *($0)
	*($6 + [368]) = $1
	*($6 + [376]) = $1
	$8 = CALL db_find_i64($1, $1, (int_64)5454011338646880256, *($6 + [486]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$24 }
	$8 = CALL $56(($6 + [368]), $8)
	if ( ((int_32)*($8 + [4]) == (int_32)($6 + [368])) ){ goto $label$27 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$27
	$11 = CALL $23(((float_32)((float_32)(CASTING float_32)(uint_32 *($8 + [1])) * (float_32)(float_32)0.009999999776482582) * (float_32)(CASTING float_32)(int_64 ((int_64)*(*($6 + [412]) + [8]) * (int_64)*($6 + [486])))))
	$2 = *($6 + [496])
	*($6 + [360]) = $2
	if ( (((float_32)$11 < (float_32)(float_32)18446744073709551615) & ((float_32)$11 >= (float_32)(float_32)0)) ){ goto $label$23 }
	$1 = (int_64)0
	goto $label$22 
	
.LABEL $label$25
	*($6 + [412]) = [0]
	*($6 + [408]) = ($6 + [416])
	CALL eosio_assert([0], [8542])
	$10 = *($6 + [440])
	if ( $10 ){ goto $label$19 }
	goto $label$1 
	
.LABEL $label$24
	CALL eosio_assert([0], [8481])
	$10 = *($6 + [392])
	if ( $10 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$1 = (Rounds 0)($11)
	
.LABEL $label$22
	*($6 + [352]) = $1
	if ( (uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$28 }
	CALL eosio_assert([0], [9337])
	$2 = *(($6 + [360]))
	
.LABEL $label$28
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$32 }
	$1 = $2
	$9 = $8
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$32
	$1 = $2
	
.LOOP $label$33:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$30 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = ((int_32)$8 < (int_32)[6])
	$10 = ($8 + [1])
	$8 = $10
	if ( $9 ){ goto $label$33 }
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert([0], [8795])
	
.LABEL $label$29
	*($6 + [344]) = [0]
	*($6 + [343]) = [0]
	*($6 + [342]) = [0]
	*(($6 + [328])) = [0]
	*($6 + [312]) = (int_64)-1
	*($6 + [320]) = (int_64)0
	$1 = *($0)
	*($6 + [296]) = $1
	*($6 + [304]) = $1
	$8 = CALL db_find_i64($1, $1, (int_64)-2617952418909913088, *($6 + [472]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$35 }
	if ( ((int_32)*(CALL $57(($6 + [296]), $8) + [12]) == (int_32)($6 + [296])) ){ goto $label$34 }
	CALL eosio_assert([0], [9714])
	goto $label$34 
	
.LABEL $label$35
	$2 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($6 + [296])) ){ goto $label$36 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$36
	*(($8 = CALL $8([24])) + [12]) = ($6 + [296])
	*($8 + [8]) = [0]
	*($8) = *($6 + [472])
	CALL memcpy(($6 + [160]), $8, [8])
	CALL memcpy((($6 + [160]) | [8]), ($8 + [8]), [1])
	$1 = *($8)
	$10 = CALL db_store_i64(*((($6 + [296]) + [8])), (int_64)-2617952418909913088, $2, $1, ($6 + [160]), [9])
	*($8 + [16]) = $10
	$9 = ($6 + [312])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$37 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$37
	*($6 + [248]) = $8
	$1 = *($8)
	*($6 + [160]) = $1
	*($6 + [120]) = $10
	$4 = ($6 + [324])
	$9 = *($4)
	if ( ((uint_32)$9 >= (uint_32)*(($6 + [328]))) ){ goto $label$39 }
	*($9 + [8]) = $1
	*($9 + [16]) = $10
	*($6 + [248]) = [0]
	*($9) = $8
	*($4) = ($9 + [24])
	$8 = *($6 + [248])
	*($6 + [248]) = [0]
	if ( ($8 == 0) ){ goto $label$34 }
	goto $label$38 
	
.LABEL $label$39
	CALL $58(($6 + [320]), ($6 + [248]), ($6 + [160]), ($6 + [120]))
	$8 = *($6 + [248])
	*($6 + [248]) = [0]
	if ( ($8 == 0) ){ goto $label$34 }
	
.LABEL $label$38
	CALL $10($8)
	
.LABEL $label$34
	*($6 + [288]) = ((int_64)CALL $25() / (int_64)1000000)
	*(($6 + [280])) = [0]
	*($6 + [264]) = (int_64)-1
	*($6 + [272]) = (int_64)0
	$1 = *($0)
	*($6 + [248]) = $1
	*($6 + [256]) = $1
	$8 = CALL db_find_i64($1, $1, (int_64)4983106858454614016, *($6 + [472]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$41 }
	$8 = CALL $59(($6 + [248]), $8)
	if ( ((int_32)*($8 + [44]) == (int_32)($6 + [248])) ){ goto $label$42 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$42
	*($6 + [184]) = $0
	*($6 + [188]) = $3
	*($6 + [164]) = ($6 + [486])
	*($6 + [160]) = ($6 + [487])
	*($6 + [168]) = ($6 + [352])
	*($6 + [172]) = ($6 + [288])
	*($6 + [176]) = ($6 + [343])
	*($6 + [180]) = ($6 + [342])
	*($6 + [192]) = ($6 + [504])
	*($6 + [196]) = ($6 + [416])
	*($6 + [200]) = ($6 + [408])
	*($6 + [204]) = ($6 + [496])
	*($6 + [208]) = ($6 + [344])
	CALL $60(($6 + [248]), $8, ($6 + [160]))
	goto $label$40 
	
.LABEL $label$41
	$2 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($6 + [248])) ){ goto $label$43 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$43
	*(($8 = CALL $8([56])) + [44]) = ($6 + [248])
	*($8) = *($6 + [472])
	*($8 + [8]) = *($6 + [487])
	*($8 + [16]) = *($6 + [352])
	*(($8 + [24])) = *((($6 + [352]) + [8]))
	$9 = *($6 + [288])
	*($8 + [32]) = $9
	*($8 + [40]) = ($9 + [31104000])
	$10 = *($6 + [486])
	$9 = ($9 + ((int_32)$10 * (int_32)[2592000]))
	*($8 + [36]) = $9
	*($6 + [343]) = $10
	*($6 + [344]) = $9
	*($6 + [128]) = (($6 + [160]) + [37])
	*($6 + [124]) = ($6 + [160])
	*($6 + [120]) = ($6 + [160])
	CALL $61(($6 + [120]), $8)
	$1 = *($8)
	$10 = CALL db_store_i64(*((($6 + [248]) + [8])), (int_64)4983106858454614016, $2, $1, ($6 + [160]), [37])
	*($8 + [48]) = $10
	$9 = ($6 + [264])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$44 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$44
	*($6 + [120]) = $8
	$1 = *($8)
	*($6 + [160]) = $1
	*($6 + [64]) = $10
	$4 = ($6 + [276])
	$9 = *($4)
	if ( ((uint_32)$9 >= (uint_32)*(($6 + [280]))) ){ goto $label$47 }
	*($9 + [8]) = $1
	*($9 + [16]) = $10
	*($6 + [120]) = [0]
	*($9) = $8
	*($4) = ($9 + [24])
	$8 = *($6 + [120])
	*($6 + [120]) = [0]
	if ( ($8 == 0) ){ goto $label$45 }
	goto $label$46 
	
.LABEL $label$47
	CALL $62(($6 + [272]), ($6 + [120]), ($6 + [160]), ($6 + [64]))
	$8 = *($6 + [120])
	*($6 + [120]) = [0]
	if ( ($8 == 0) ){ goto $label$45 }
	
.LABEL $label$46
	CALL $10($8)
	
.LABEL $label$45
	$2 = *(($3 + [8]))
	*((($6 + [232]) + [8])) = $2
	$5 = *((($6 + [352]) + [8]))
	*((($6 + [216]) + [8])) = $5
	$1 = *($3)
	*((($6 + [40]) + [8])) = $2
	*((($6 + [24]) + [8])) = $5
	*($6 + [232]) = $1
	$2 = *($6 + [352])
	*($6 + [216]) = $2
	*($6 + [40]) = $1
	*($6 + [24]) = $2
	CALL $63($0, ($6 + [40]), ($6 + [24]), *($6 + [504]))
	
.LABEL $label$40
	$4 = [0]
	*(($6 + [152])) = [0]
	*($6 + [136]) = (int_64)-1
	*($6 + [144]) = (int_64)0
	$1 = *($0)
	*($6 + [120]) = $1
	$2 = *($6 + [472])
	*($6 + [128]) = $2
	$8 = CALL db_find_i64($1, $2, (int_64)-4157660971118100480, (int_64)6138406292105986048)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$48 }
	$8 = CALL $64(($6 + [120]), $8)
	if ( ((int_32)*($8 + [44]) == (int_32)($6 + [120])) ){ goto $label$49 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$49
	$5 = *($8 + [8])
	if ( (int_64)($5 == 0) ){ goto $label$48 }
	$8 = CALL $1([8299])
	if ( ($8 <= [8]) ){ goto $label$53 }
	CALL eosio_assert([0], [9191])
	goto $label$52 
	
.LABEL $label$53
	if ( ($8 == 0) ){ goto $label$51 }
	
.LABEL $label$52
	$1 = (int_64)0
	
.LOOP $label$54:
	$9 = *(($8 + [8298]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$55 }
	CALL eosio_assert([0], [9236])
	
.LABEL $label$55
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$54 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$50 
	
.LABEL $label$51
	$1 = (int_64)0
	
.LABEL $label$50
	if ( (uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$56 }
	CALL eosio_assert([0], [9337])
	
.LABEL $label$56
	$7 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$59:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$58 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$60 }
	$1 = $2
	$9 = $8
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$59 }
	goto $label$57 
	
.LABEL $label$60
	$1 = $2
	
.LOOP $label$61:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$58 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = ((int_32)$8 < (int_32)[6])
	$10 = ($8 + [1])
	$8 = $10
	if ( $9 ){ goto $label$61 }
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$59 }
	goto $label$57 
	
.LABEL $label$58
	CALL eosio_assert([0], [8795])
	
.LABEL $label$57
	*(($6 + [16])) = $7
	*($6 + [112]) = $7
	*($6 + [8]) = $5
	*($6 + [104]) = $5
	$4 = CALL $65($0, ($6 + [8]))
	
.LABEL $label$48
	$1 = *($6 + [472])
	$9 = *(($6 + [324]))
	$3 = *(($6 + [320]))
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$65 }
	
.LOOP $label$67:
	$8 = ($9 + [-24])
	$10 = *($8)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$66 }
	$9 = $8
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$67 }
	goto $label$65 
	
.LABEL $label$66
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$65 }
	if ( ((int_32)*(($10 + [12])) == (int_32)($6 + [296])) ){ goto $label$68 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$68
	if ( $10 ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$65
	$8 = CALL db_find_i64(*($6 + [296]), *(($6 + [304])), (int_64)-2617952418909913088, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$63 }
	$10 = CALL $57(($6 + [296]), $8)
	if ( ((int_32)*($10 + [12]) == (int_32)($6 + [296])) ){ goto $label$64 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$64
	$8 = ((int_32)*($10 + [8]) != (int_32)[0])
	goto $label$62 
	
.LABEL $label$63
	$8 = [1]
	
.LABEL $label$62
	$1 = *($0)
	*((($6 + [160]) + [24])) = *(($6 + [360]))
	*($6 + [202]) = $8
	*($6 + [203]) = $4
	*($6 + [160]) = *($6 + [472])
	*($6 + [168]) = *($6 + [504])
	*($6 + [176]) = *($6 + [352])
	*($6 + [192]) = *($6 + [288])
	*($6 + [196]) = *($6 + [344])
	*($6 + [200]) = *($6 + [343])
	*($6 + [201]) = *($6 + [342])
	*(($9 = (($6 + [64]) + [24]))) = [0]
	*($6 + [64]) = $1
	*($6 + [72]) = (int_64)4983106858750509056
	*($6 + [80]) = (int_64)0
	*($6 + [204]) = *($6 + [487])
	*(($8 = CALL $8([16]))) = $1
	*($8 + [8]) = (int_64)3617214756542218240
	*(($6 + [100])) = [0]
	$10 = ($8 + [16])
	*($9) = $10
	*(($6 + [84])) = $10
	*($6 + [80]) = $8
	*($6 + [92 align=4]) = (int_64)0
	CALL $66(($6 + [92]), [45])
	$10 = ($6 + [96])
	$8 = *($10)
	$9 = *($6 + [92])
	*($6 + [516]) = $9
	*($6 + [512]) = $9
	*($6 + [520]) = $8
	*($6 + [528]) = ($6 + [512])
	*($6 + [536]) = ($6 + [160])
	CALL $67(($6 + [536]), ($6 + [528]))
	CALL $68(($6 + [64]))
	$8 = *($6 + [92])
	if ( ($8 == 0) ){ goto $label$69 }
	*($10) = $8
	CALL $10($8)
	
.LABEL $label$69
	$8 = *($6 + [80])
	if ( ($8 == 0) ){ goto $label$70 }
	*(($6 + [84])) = $8
	CALL $10($8)
	
.LABEL $label$70
	$10 = *($6 + [144])
	if ( ($10 == 0) ){ goto $label$71 }
	$0 = ($6 + [148])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$73 }
	
.LOOP $label$74:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$75 }
	CALL $10($9)
	
.LABEL $label$75
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$74 }
	$8 = *(($6 + [144]))
	goto $label$72 
	
.LABEL $label$73
	$8 = $10
	
.LABEL $label$72
	*($0) = $10
	CALL $10($8)
	
.LABEL $label$71
	$10 = *($6 + [272])
	if ( ($10 == 0) ){ goto $label$76 }
	$0 = ($6 + [276])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$78 }
	
.LOOP $label$79:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$80 }
	CALL $10($9)
	
.LABEL $label$80
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$79 }
	$8 = *(($6 + [272]))
	goto $label$77 
	
.LABEL $label$78
	$8 = $10
	
.LABEL $label$77
	*($0) = $10
	CALL $10($8)
	
.LABEL $label$76
	$10 = *($6 + [320])
	if ( ($10 == 0) ){ goto $label$81 }
	$0 = ($6 + [324])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$83 }
	
.LOOP $label$84:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$85 }
	CALL $10($9)
	
.LABEL $label$85
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$84 }
	$8 = *(($6 + [320]))
	goto $label$82 
	
.LABEL $label$83
	$8 = $10
	
.LABEL $label$82
	*($0) = $10
	CALL $10($8)
	
.LABEL $label$81
	$10 = *($6 + [392])
	if ( ($10 == 0) ){ goto $label$20 }
	
.LABEL $label$21
	$0 = ($6 + [396])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$87 }
	
.LOOP $label$88:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$89 }
	CALL $10($9)
	
.LABEL $label$89
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$88 }
	$8 = *(($6 + [392]))
	goto $label$86 
	
.LABEL $label$87
	$8 = $10
	
.LABEL $label$86
	*($0) = $10
	CALL $10($8)
	
.LABEL $label$20
	$10 = *($6 + [440])
	if ( ($10 == 0) ){ goto $label$1 }
	
.LABEL $label$19
	$0 = ($6 + [444])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$91 }
	
.LOOP $label$92:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$93 }
	CALL $10($9)
	
.LABEL $label$93
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$92 }
	$8 = *(($6 + [440]))
	goto $label$90 
	
.LABEL $label$91
	$8 = $10
	
.LABEL $label$90
	*($0) = $10
	CALL $10($8)
	$global$0 = ($6 + [544])
	return 
	
.LABEL $label$1
	$global$0 = ($6 + [544])
}

void .FUNC $30 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [128])
	$global$0 = $3
	*($3 + [80]) = $2
	*($3 + [91]) = $1
	*($3 + [64]) = [8629]
	*($3 + [68]) = CALL $1([8629])
	*($3 + [8]) = *($3 + [64])
	CALL require_auth(*(CALL $29(($3 + [72]), ($3 + [8]))))
	if ( ((($1 + [-1]) & [255]) <= [10]) ){ goto $label$1 }
	CALL eosio_assert([0], [8654])
	$1 = *($3 + [91])
	
.LABEL $label$1
	*(($3 + [56])) = [0]
	*($3 + [40]) = (int_64)-1
	*($3 + [48]) = (int_64)0
	$2 = *($0)
	*($3 + [24]) = $2
	*($3 + [32]) = $2
	$1 = CALL db_find_i64($2, $2, (int_64)-2617975199131238400, ((int_64)(CASTING uint_64)(uint_32 $1) & (int_64)255))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $55(($3 + [24]), $1)
	if ( ((int_32)*($1 + [24]) == (int_32)($3 + [24])) ){ goto $label$5 }
	CALL eosio_assert([0], [9714])
	
.LABEL $label$5
	*($3 + [96]) = ($3 + [80])
	CALL $100(($3 + [24]), $1, ($3 + [96]))
	$4 = *($3 + [48])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$2 = *($0)
	*($3 + [20]) = ($3 + [80])
	*($3 + [16]) = ($3 + [91])
	*($3 + [120]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [24])) ){ goto $label$6 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$6
	*($3 + [100]) = ($3 + [16])
	*($3 + [96]) = ($3 + [24])
	*($3 + [104]) = ($3 + [120])
	*(($1 = CALL $8([40])) + [16]) = (int_64)0
	*($1 + [8]) = (int_64)0
	*($1 + [24]) = ($3 + [24])
	CALL $101(($3 + [96]), $1)
	*($3 + [112]) = $1
	$2 = *($1)
	*($3 + [96]) = $2
	$4 = *($1 + [28])
	*($3 + [92]) = $4
	$5 = ($3 + [52])
	$0 = *($5)
	if ( ((uint_32)$0 >= (uint_32)*(($3 + [56]))) ){ goto $label$9 }
	*($0 + [8]) = $2
	*($0 + [16]) = $4
	*($3 + [112]) = [0]
	*($0) = $1
	*($5) = ($0 + [24])
	$1 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $102(($3 + [48]), ($3 + [112]), ($3 + [96]), ($3 + [92]))
	$1 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10($1)
	
.LABEL $label$7
	$4 = *($3 + [48])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($3 + [52])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$11 }
	
.LOOP $label$12:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	CALL $10($0)
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$12 }
	$1 = *(($3 + [48]))
	goto $label$10 
	
.LABEL $label$11
	$1 = $4
	
.LABEL $label$10
	*($5) = $4
	CALL $10($1)
	
.LABEL $label$2
	$global$0 = ($3 + [128])
}

int_32 .FUNC $31 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	*($4 + [32]) = [0]
	if ( $7 ){ goto $label$4 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$4
	$3 = ($2 + $7)
	$8 = ($4 + [40])
	CALL memcpy(($4 + [32]), $2, [1])
	$9 = ($2 + [1])
	if ( ((uint_32)($7 + [-1]) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9679])
	
.LABEL $label$5
	CALL memcpy($8, $9, [8])
	*(($4 + [24])) = $3
	*($4 + [16]) = $2
	*(($4 + [20])) = ($2 + [9])
	*($4 + [8]) = $1
	*($4) = $0
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *((($4 + [32]) + [8]))
	$8 = *($4 + [32])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 ($8 & [255])), (int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $3($2)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC $129 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $24($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [48])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $10($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9605])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9605])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}