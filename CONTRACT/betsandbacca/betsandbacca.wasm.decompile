(data (i32.const 8192) "invalid first pos\00")
(data (i32.const 8210) "parse memo error\00")
(data (i32.const 8227) "invalid game name\00")
(data (i32.const 8245) ",")
(data (i32.const 8246) "invalid memo\00")
(data (i32.const 8259) "no game id\00")
(data (i32.const 8270) "error when parsing game id\00")
(data (i32.const 8297) "no bet item content\00")
(data (i32.const 8317) "error when parsing bet item data\00")
(data (i32.const 8350) "no nonce\00")
(data (i32.const 8359) "error when parsing nonce data\00")
(data (i32.const 8390) "1235\00")
(data (i32.const 8395) "1458\00")
(data (i32.const 8400) "14360\00")
(data (i32.const 8406) "10360\00")
(data (i32.const 8412) "16684\00")
(data (i32.const 8418) "0\00")
(data (i32.const 8432) "\c5 \00\00\c6 \00\00\cb \00\00\d0 \00\00\d6 \00\00\d6 \00\00\dc \00\00\e2 \00\00\c5 \00\00\c6 \00\008!\00\00\d0 \00\00\d6 \00\00\d6 \00\00\e2 \00\00=!\00\008)\00\008)\00\00")
(data (i32.const 8504) "1018\00")
(data (i32.const 8509) "7611\00")
(data (i32.const 8528) "\00\00\00\00\c8\00\00\00\c8\00\00\00\84\03\00\00\b0\04\00\00\b0\04\00\004\08\00\00\04\10\00\00")
(data (i32.const 8560) "player\00")
(data (i32.const 8567) "banker\00")
(data (i32.const 8574) "tie\00")
(data (i32.const 8578) "player-pair\00")
(data (i32.const 8590) "banker-pair\00")
(data (i32.const 8602) "lucky-six\00")
(data (i32.const 8612) "dragon-seven\00")
(data (i32.const 8625) "transfer\00")
(data (i32.const 8634) "invalid token\00")
(data (i32.const 8648) "not in stopped state\00")
(data (i32.const 8669) "started game, shoe #%llu\00")
(data (i32.const 8694) "not in started state\00")
(data (i32.const 8715) "game not in started state\00")
(data (i32.const 8741) "not found by shoe_id\00")
(data (i32.const 8762) "shoe state is not created\00")
(data (i32.const 8788) "game paused\00")
(data (i32.const 8800) "cannot find for the specified game id\00")
(data (i32.const 8838) "game not in the created state\00")
(data (i32.const 8868) "game not in the started state\00")
(data (i32.const 8898) "must reveal after end time\00")
(data (i32.const 8925) "cannot find shoe id\00")
(data (i32.const 8945) "active\00")
(data (i32.const 8952) "result\00")
(data (i32.const 8959) "batchpayout\00")
(data (i32.const 8971) "Transfer bonus\00")
(data (i32.const 8986) "referrer account does not exist\00")
(data (i32.const 9018) "invalid bet item for dragon seven\00")
(data (i32.const 9052) "invalid bet item for lucky six\00")
(data (i32.const 9083) "game id not found\00")
(data (i32.const 9101) "game state is not started\00")
(data (i32.const 9127) "not in allowed betting period\00")
(data (i32.const 9157) "referrer can not be self\00")
(data (i32.const 9182) "too many bets in this game\00")
(data (i32.const 9209) "no asset fund\00")
(data (i32.const 9223) "exceed max betting amount\00")
(data (i32.const 9249) "receipt\00")
(data (i32.const 9257) "asset not found in game stat\00")
(data (i32.const 9286) "count must be positive\00")
(data (i32.const 9309) "invalid table name\00")
(data (i32.const 9328) "%d rows removed from table %s\00")
(data (i32.const 9358) "days must between 1 and 31\00")
(data (i32.const 9385) "scoreboard already exists\00")
(data (i32.const 9411) "start time must be later than now\00")
(data (i32.const 9445) "eos1.\00")
(data (i32.const 9451) "eos2.\00")
(data (i32.const 9457) "string is too long to be a valid name\00")
(data (i32.const 9495) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 9562) "character is not in allowed character set for names\00")
(data (i32.const 9614) "CDHS")
(data (i32.const 9618) "KA234567890JQ")
(data (i32.const 9631) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9682) "error reading iterator\00")
(data (i32.const 9705) "read\00")
(data (i32.const 9710) "invalid last shoe state\00")
(data (i32.const 9734) "object passed to modify is not in multi_index\00")
(data (i32.const 9780) "cannot modify objects in table of another contract\00")
(data (i32.const 9831) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9890) "write\00")
(data (i32.const 9896) "cannot create objects in table of another contract\00")
(data (i32.const 9947) "get\00")
(data (i32.const 9951) "object passed to erase is not in multi_index\00")
(data (i32.const 9996) "cannot erase objects in table of another contract\00")
(data (i32.const 10046) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10099) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 10153) "cannot decrement iterator at beginning of table\00")
(data (i32.const 10201) "log\00")
(data (i32.const 10205) "invalid last game state\00")
(data (i32.const 10229) "invalid symbol name\00")
(data (i32.const 10249) "multiplication overflow\00")
(data (i32.const 10273) "multiplication underflow\00")
(data (i32.const 10298) "not allowed symbol\00")
(data (i32.const 10317) "quantity invalid\00")
(data (i32.const 10334) "transfer quantity must be multiple of min amount\00")
(data (i32.const 10383) "transfer quantity must be equal or greater than min amount\00")
(data (i32.const 10442) "cannot increment end iterator\00")
(data (i32.const 10472) "attempt to add asset with different symbol\00")
(data (i32.const 10515) "addition underflow\00")
(data (i32.const 10534) "addition overflow\00")
(data (i32.const 10552) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 10585) "cannot pass end iterator to erase\00")
(data (i32.const 10619) "singleton does not exist\00")
(data (i32.const 10644) "attempt to subtract asset with different symbol\00")
(data (i32.const 10692) "subtraction underflow\00")
(data (i32.const 10714) "subtraction overflow\00")
(data (i32.const 10736) "\00\00\00\00\d3\04\00\00\b2\05\00\00\188\00\00x(\00\00x(\00\00,A\00\00\00\00\00\00")
(data (i32.const 10768) "\00\00\00\00\d3\04\00\00\fa\03\00\00\188\00\00x(\00\00x(\00\00\00\00\00\00\bb\1d\00\00")
(data (i32.const 19216) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 19296) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 19553) "\00\01\02\04\07\03\06\05\00")
(data (i32.const 19562) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "memcpy" (func $fimport$0 (param i32 i32 i32) (result i32)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "prints_l" (func $fimport$3 (param i32 i32)))
(import "env" "memmove" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "ripemd160" (func $fimport$5 (param i32 i32 i32)))
(import "env" "action_data_size" (func $fimport$6 (result i32)))
(import "env" "read_action_data" (func $fimport$7 (param i32 i32) (result i32)))
(import "env" "is_account" (func $fimport$8 (param i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_time" (func $fimport$10 (result i64)))
(import "env" "db_lowerbound_i64" (func $fimport$11 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$12 (param i32 i32) (result i32)))
(import "env" "current_receiver" (func $fimport$13 (result i64)))
(import "env" "db_store_i64" (func $fimport$14 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_store" (func $fimport$15 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "require_auth" (func $fimport$16 (param i64)))
(import "env" "assert_sha256" (func $fimport$17 (param i32 i32 i32)))
(import "env" "__multi3" (func $fimport$18 (param i32 i64 i64 i64 i64)))
(import "env" "require_recipient" (func $fimport$19 (param i64)))
(import "env" "db_update_i64" (func $fimport$20 (param i32 i64 i32 i32)))
(import "env" "db_idx64_find_primary" (func $fimport$21 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$22 (param i32 i64 i32)))
(import "env" "send_inline" (func $fimport$23 (param i32 i32)))
(import "env" "db_remove_i64" (func $fimport$24 (param i32)))
(import "env" "db_get_i64" (func $fimport$25 (param i32 i32 i32) (result i32)))
(import "env" "abort" (func $fimport$26))
(import "env" "db_previous_i64" (func $fimport$27 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$28 (param i64 i64 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$29 (param i32)))
(import "env" "__unordtf2" (func $fimport$30 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$31 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$32 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$33 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$34 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$35 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$36 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$37 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$38 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$39 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$40 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$41 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$42 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$43 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$44 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$45 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$46 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$47 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$48 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $13))
(export "_Znwj" (func $172))
(export "_ZdlPv" (func $174))
(export "_Znaj" (func $173))
(export "_ZdaPv" (func $175))
(export "_ZnwjSt11align_val_t" (func $176))
(export "_ZnajSt11align_val_t" (func $177))
(export "_ZdlPvSt11align_val_t" (func $178))
(export "_ZdaPvSt11align_val_t" (func $179))
(table $0 22 22 anyfunc)
(elem (i32.const 1) $14 $16 $18 $20 $22 $24 $26 $28 $30 $31 $33 $34 $35 $36 $38 $39 $41 $42 $44 $198 $200)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 19648))
(global $global$2 i32 (i32.const 19648))


void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $216($0)
	
.LABEL $label$1
}

void .FUNC $6 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_64 $34
	int_64 $35
	int_64 $36
	int_32 $37
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$1 }
	$5 = ([416] - $1)
	$1 = ($0 + (([415] - $1) << [1]))
	$6 = ($2 + [3])
	$7 = ($2 + [7])
	$8 = ($2 + [6])
	$9 = ($2 + [5])
	$10 = ($2 + [4])
	$11 = ($2 + [11])
	$12 = ($2 + [10])
	$13 = ($2 + [9])
	$14 = ($2 + [15])
	$15 = ($2 + [14])
	$16 = ($2 + [13])
	$17 = ($2 + [12])
	$18 = ($2 + [19])
	$19 = ($2 + [18])
	$20 = ($2 + [17])
	$21 = ($2 + [23])
	$22 = ($2 + [22])
	$23 = ($2 + [21])
	$24 = ($2 + [20])
	$25 = ($2 + [27])
	$26 = ($2 + [26])
	$27 = ($2 + [25])
	$28 = ($2 + [31])
	$29 = ($2 + [30])
	$30 = ($2 + [29])
	$31 = ($2 + [28])
	
.LOOP $label$2:
	$35 = (CASTING uint_64)(uint_32 $5)
	$33 = ($2 + [1])
	$32 = ($2 + [2])
	$34 = ((int_64)((int_64)((int_64)((int_64)*($32) << (int_64)8) | (int_64)*($6)) | (int_64)((int_64)*($33) << (int_64)16)) | (int_64)((int_64)*($2) << (int_64)24))
	$36 = ((uint_64)$34 / (uint_64)$35)
	*($6) = $36
	$37 = (CASTING uint_32)(uint_64 $36)
	*($2) = uint_32($37 >> [24])
	*($33) = uint_32($37 >> [16])
	*($32) = uint_32($37 >> [8])
	$34 = ((int_64)((int_64)((int_64)((int_64)((int_64))($34 - ((int_64)$36 * (int_64)$35)) << (int_64)32) | (int_64)*($7)) | (int_64)((int_64)*($8) << (int_64)8)) | (int_64)((int_64)*($9) << (int_64)16)) | (int_64)((int_64)*($10) << (int_64)24)
	$36 = ((uint_64)$34) / (uint_64)$35
	*($7) = $36)
	$37 = (CASTING uint_32)(uint_64 $36)
	*($8) = uint_32($37 >> [8])
	*($9) = uint_32($37 >> [16])
	*($10) = uint_32($37 >> [24])
	$34 = ((int_64)((int_64)((int_64)((int_64)((int_64))($34 - ((int_64)$36 * (int_64)$35)) << (int_64)32) | (int_64)*($11)) | (int_64)((int_64)*($12) << (int_64)8)) | (int_64)((int_64)*($13) << (int_64)16)) | (int_64)((int_64)*($37) << (int_64)24)
	$36 = ((uint_64)$34) / (uint_64)$35
	$37 = (CASTING uint_32)(uint_64 $36)
	*(($37 = ($2 + [8]))) = uint_32($37) >> [24])
	*($13) = uint_32($37 >> [16])
	*($12) = uint_32($37 >> [8])
	*($11) = $36
	$34 = ((int_64)((int_64)((int_64)((int_64)((int_64))($34 - ((int_64)$36 * (int_64)$35)) << (int_64)32) | (int_64)*($14)) | (int_64)((int_64)*($15) << (int_64)8)) | (int_64)((int_64)*($16) << (int_64)16)) | (int_64)((int_64)*($17) << (int_64)24)
	$36 = ((uint_64)$34) / (uint_64)$35
	$37 = (CASTING uint_32)(uint_64 $36)
	*($17) = uint_32($37) >> [24])
	*($16) = uint_32($37 >> [16])
	*($15) = uint_32($37 >> [8])
	*($14) = $36
	$34 = ((int_64)((int_64)((int_64)((int_64)((int_64))($34 - ((int_64)$36 * (int_64)$35)) << (int_64)32) | (int_64)*($18)) | (int_64)((int_64)*($19) << (int_64)8)) | (int_64)((int_64)*($20) << (int_64)16)) | (int_64)((int_64)*($37) << (int_64)24)
	$36 = ((uint_64)$34) / (uint_64)$35
	$37 = (CASTING uint_32)(uint_64 $36)
	*(($37 = ($2 + [16]))) = uint_32($37) >> [24])
	*($20) = uint_32($37 >> [16])
	*($19) = uint_32($37 >> [8])
	*($18) = $36
	$34 = ((int_64)((int_64)((int_64)((int_64)((int_64))($34 - ((int_64)$36 * (int_64)$35)) << (int_64)32) | (int_64)*($21)) | (int_64)((int_64)*($22) << (int_64)8)) | (int_64)((int_64)*($23) << (int_64)16)) | (int_64)((int_64)*($24) << (int_64)24)
	$36 = ((uint_64)$34) / (uint_64)$35
	$37 = (CASTING uint_32)(uint_64 $36)
	*($24) = uint_32($37) >> [24])
	*($23) = uint_32($37 >> [16])
	*($22) = uint_32($37 >> [8])
	*($21) = $36
	$34 = ((int_64)((int_64)((int_64)((int_64)((int_64))($34 - ((int_64)$36 * (int_64)$35)) << (int_64)32) | (int_64)*($25)) | (int_64)((int_64)*($26) << (int_64)8)) | (int_64)((int_64)*($27) << (int_64)16)) | (int_64)((int_64)*($37) << (int_64)24)
	$36 = ((uint_64)$34) / (uint_64)$35
	$37 = (CASTING uint_32)(uint_64 $36)
	*(($37 = ($2 + [24]))) = uint_32($37) >> [24])
	*($27) = uint_32($37 >> [16])
	*($26) = uint_32($37 >> [8])
	*($25) = $36
	$34 = ((int_64)((int_64)((int_64)((int_64)((int_64))($34 - ((int_64)$36 * (int_64)$35)) << (int_64)32) | (int_64)*($28)) | (int_64)((int_64)*($29) << (int_64)8)) | (int_64)((int_64)*($30) << (int_64)16)) | (int_64)((int_64)*($31) << (int_64)24)
	$36 = ((uint_64)$34) / (uint_64)$35
	$37 = (CASTING uint_32)(uint_64 $36)
	*($31) = uint_32($37) >> [24])
	*($30) = uint_32($37 >> [16])
	*($29) = uint_32($37 >> [8])
	*($28) = $36
	$37 = ($0 + ((CASTING uint_32)(uint_64 (int_64))($34 - ((int_64)$36 * (int_64)$35))) << [1])
	*($4) = *($37))
	*($37) = *($1)
	$1 = ($1 + [-2])
	$4 = ($4 + [2])
	$5 = ($5 + [-1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$1
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $211(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [10800])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $211(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

void .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $118(*($1), *($0 + [20]))
	$3 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9890])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $78(*($1), *($0 + [20]))
	$3 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9705])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $213($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10800])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $213($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$1 }
	CALL $188($0, *((((int_32)($2 + [-1]) / (int_32)[13]) + [9614])))
	$2 = ((uint_32)$2 % (uint_32)[13])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$2 }
	CALL $188($0, [49])
	
.LABEL $label$2
	CALL $188($0, *(($2 + [9618])))
	
.LABEL $label$1
	CALL $188($0, [44])
	$2 = *($1 + [1])
	if ( ($2 == 0) ){ goto $label$3 }
	CALL $188($0, *((((int_32)($2 + [-1]) / (int_32)[13]) + [9614])))
	$2 = ((uint_32)$2 % (uint_32)[13])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$4 }
	CALL $188($0, [49])
	
.LABEL $label$4
	CALL $188($0, *(($2 + [9618])))
	
.LABEL $label$3
	CALL $188($0, [44])
	$2 = *($1 + [2])
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $188($0, *((((int_32)($2 + [-1]) / (int_32)[13]) + [9614])))
	$2 = ((uint_32)$2 % (uint_32)[13])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$6 }
	CALL $188($0, [49])
	
.LABEL $label$6
	CALL $188($0, *(($2 + [9618])))
	
.LABEL $label$5
	CALL $188($0, [44])
	$2 = *($1 + [3])
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $188($0, *((((int_32)($2 + [-1]) / (int_32)[13]) + [9614])))
	$2 = ((uint_32)$2 % (uint_32)[13])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$8 }
	CALL $188($0, [49])
	
.LABEL $label$8
	CALL $188($0, *(($2 + [9618])))
	
.LABEL $label$7
	CALL $188($0, [44])
	$2 = *($1 + [4])
	if ( ($2 == 0) ){ goto $label$9 }
	CALL $188($0, *((((int_32)($2 + [-1]) / (int_32)[13]) + [9614])))
	$2 = ((uint_32)$2 % (uint_32)[13])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$10 }
	CALL $188($0, [49])
	
.LABEL $label$10
	CALL $188($0, *(($2 + [9618])))
	
.LABEL $label$9
	CALL $188($0, [44])
	$1 = *($1 + [5])
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $188($0, *((((int_32)($1 + [-1]) / (int_32)[13]) + [9614])))
	$1 = ((uint_32)$1 % (uint_32)[13])
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$12 }
	CALL $188($0, [49])
	
.LABEL $label$12
	CALL $188($0, *(($1 + [9618])))
	
.LABEL $label$11
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $216($0)
	
.LABEL $label$1
}

int_32 .FUNC $4 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [9457])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [9562])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [9495])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [9562])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $5 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_64 $35
	int_64 $36
	int_64 $37
	$3 = ($global$0 - [832])
	$global$0 = $3
	$4 = [0]
	$5 = $3
	
.LOOP $label$1:
	*($5) = $4
	$5 = ($5 + [2])
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)[416]) ){ goto $label$1 }
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$4 = [0]
	$6 = ([0] - $1)
	$5 = ($3 + [830])
	$7 = ($0 + [3])
	$8 = ($0 + [7])
	$9 = ($0 + [6])
	$10 = ($0 + [5])
	$11 = ($0 + [4])
	$12 = ($0 + [11])
	$13 = ($0 + [10])
	$14 = ($0 + [9])
	$15 = ($0 + [15])
	$16 = ($0 + [14])
	$17 = ($0 + [13])
	$18 = ($0 + [12])
	$19 = ($0 + [19])
	$20 = ($0 + [18])
	$21 = ($0 + [17])
	$22 = ($0 + [23])
	$23 = ($0 + [22])
	$24 = ($0 + [21])
	$25 = ($0 + [20])
	$26 = ($0 + [27])
	$27 = ($0 + [26])
	$28 = ($0 + [25])
	$29 = ($0 + [31])
	$30 = ($0 + [30])
	$31 = ($0 + [29])
	$32 = ($0 + [28])
	
.LOOP $label$3:
	$36 = (CASTING uint_64)(uint_32 ($4 + [416]))
	$34 = ($0 + [1])
	$33 = ($0 + [2])
	$35 = ((int_64)((int_64)((int_64)((int_64)*($33) << (int_64)8) | (int_64)*($7)) | (int_64)((int_64)*($34) << (int_64)16)) | (int_64)((int_64)*($0) << (int_64)24))
	$37 = ((uint_64)$35 / (uint_64)$36)
	*($7) = $37
	$1 = (CASTING uint_32)(uint_64 $37)
	*($0) = uint_32($1 >> [24])
	*($34) = uint_32($1 >> [16])
	*($33) = uint_32($1 >> [8])
	$35 = ((int_64)((int_64)((int_64)((int_64)((int_64))($35 - ((int_64)$37 * (int_64)$36)) << (int_64)32) | (int_64)*($8)) | (int_64)((int_64)*($9) << (int_64)8)) | (int_64)((int_64)*($10) << (int_64)16)) | (int_64)((int_64)*($11) << (int_64)24)
	$37 = ((uint_64)$35) / (uint_64)$36
	*($8) = $37)
	$1 = (CASTING uint_32)(uint_64 $37)
	*($9) = uint_32($1 >> [8])
	*($10) = uint_32($1 >> [16])
	*($11) = uint_32($1 >> [24])
	$35 = ((int_64)((int_64)((int_64)((int_64)((int_64))($35 - ((int_64)$37 * (int_64)$36)) << (int_64)32) | (int_64)*($12)) | (int_64)((int_64)*($13) << (int_64)8)) | (int_64)((int_64)*($14) << (int_64)16)) | (int_64)((int_64)*($1) << (int_64)24)
	$37 = ((uint_64)$35) / (uint_64)$36
	$1 = (CASTING uint_32)(uint_64 $37)
	*(($1 = ($0 + [8]))) = uint_32($1) >> [24])
	*($14) = uint_32($1 >> [16])
	*($13) = uint_32($1 >> [8])
	*($12) = $37
	$35 = ((int_64)((int_64)((int_64)((int_64)((int_64))($35 - ((int_64)$37 * (int_64)$36)) << (int_64)32) | (int_64)*($15)) | (int_64)((int_64)*($16) << (int_64)8)) | (int_64)((int_64)*($17) << (int_64)16)) | (int_64)((int_64)*($18) << (int_64)24)
	$37 = ((uint_64)$35) / (uint_64)$36
	$1 = (CASTING uint_32)(uint_64 $37)
	*($18) = uint_32($1) >> [24])
	*($17) = uint_32($1 >> [16])
	*($16) = uint_32($1 >> [8])
	*($15) = $37
	$35 = ((int_64)((int_64)((int_64)((int_64)((int_64))($35 - ((int_64)$37 * (int_64)$36)) << (int_64)32) | (int_64)*($19)) | (int_64)((int_64)*($20) << (int_64)8)) | (int_64)((int_64)*($21) << (int_64)16)) | (int_64)((int_64)*($1) << (int_64)24)
	$37 = ((uint_64)$35) / (uint_64)$36
	$1 = (CASTING uint_32)(uint_64 $37)
	*(($1 = ($0 + [16]))) = uint_32($1) >> [24])
	*($21) = uint_32($1 >> [16])
	*($20) = uint_32($1 >> [8])
	*($19) = $37
	$35 = ((int_64)((int_64)((int_64)((int_64)((int_64))($35 - ((int_64)$37 * (int_64)$36)) << (int_64)32) | (int_64)*($22)) | (int_64)((int_64)*($23) << (int_64)8)) | (int_64)((int_64)*($24) << (int_64)16)) | (int_64)((int_64)*($25) << (int_64)24)
	$37 = ((uint_64)$35) / (uint_64)$36
	$1 = (CASTING uint_32)(uint_64 $37)
	*($25) = uint_32($1) >> [24])
	*($24) = uint_32($1 >> [16])
	*($23) = uint_32($1 >> [8])
	*($22) = $37
	$35 = ((int_64)((int_64)((int_64)((int_64)((int_64))($35 - ((int_64)$37 * (int_64)$36)) << (int_64)32) | (int_64)*($26)) | (int_64)((int_64)*($27) << (int_64)8)) | (int_64)((int_64)*($28) << (int_64)16)) | (int_64)((int_64)*($1) << (int_64)24)
	$37 = ((uint_64)$35) / (uint_64)$36
	$1 = (CASTING uint_32)(uint_64 $37)
	*(($1 = ($0 + [24]))) = uint_32($1) >> [24])
	*($28) = uint_32($1 >> [16])
	*($27) = uint_32($1 >> [8])
	*($26) = $37
	$35 = ((int_64)((int_64)((int_64)((int_64)((int_64))($35 - ((int_64)$37 * (int_64)$36)) << (int_64)32) | (int_64)*($29)) | (int_64)((int_64)*($30) << (int_64)8)) | (int_64)((int_64)*($31) << (int_64)16)) | (int_64)((int_64)*($32) << (int_64)24)
	$37 = ((uint_64)$35) / (uint_64)$36
	$1 = (CASTING uint_32)(uint_64 $37)
	*($32) = uint_32($1) >> [24])
	*($31) = uint_32($1 >> [16])
	*($30) = uint_32($1 >> [8])
	*($29) = $37
	$1 = ($3 + ((CASTING uint_32)(uint_64 (int_64))($35 - ((int_64)$37 * (int_64)$36))) << [1])
	*($2) = *($1))
	*($1) = *($5)
	$5 = ($5 + [-2])
	$2 = ($2 + [2])
	$4 = ($4 + [-1])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($3 + [832])
}

void .FUNC $127 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $127($0, *($1))
	CALL $127($0, *($1 + [4]))
	CALL _ZdlPv($1)
	
.LABEL $label$1
}

void .FUNC $3 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$9 = ($global$0 - [80])
	$global$0 = $9
	$10 = *($0)
	if ( ($10 & [1]) ){ goto $label$6 }
	$10 = uint_32($10 >> [1])
	$11 = ($0 + [1])
	$12 = ($11 + $10)
	if ( $10 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$10 = *($0 + [4])
	$11 = *($0 + [8])
	$12 = ($11 + $10)
	if ( ($10 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$7:
	if ( CALL $194(*($11)) ){ goto $label$4 }
	$11 = ($11 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$7 }
	$11 = $12
	$10 = [1]
	$13 = *($0)
	if ( (($13 & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$8 }
	$10 = ($11 + [1])
	if ( ((int_32)$10 == (int_32)$12) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( (CALL $194(*($10)) == 0) ){ goto $label$10 }
	$10 = ($10 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($11) = *($10)
	$11 = ($11 + [1])
	$10 = ($10 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$9 }
	
.LABEL $label$8
	$10 = [1]
	$13 = *($0)
	if ( ($13 & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$12 = ($0 + $10)
	$10 = ($12 + uint_32($13 >> $10))
	goto $label$1 
	
.LABEL $label$2
	$12 = *($0 + [8])
	$10 = ($12 + *($0 + [4]))
	
.LABEL $label$1
	CALL $190($0, ($11 - $12), ($10 - $11))
	$12 = *($0)
	if ( ($12 & [1]) ){ goto $label$13 }
	$11 = ($0 + [1])
	$13 = [0]
	$10 = [0]
	$12 = uint_32($12 >> [1])
	if ( $12 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$11 = *($0 + [8])
	$13 = [0]
	$10 = [0]
	$12 = *($0 + [4])
	if ( ($12 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$10 = [0]
	
.LOOP $label$14:
	$10 = ($10 + ((int_32)*($11) == (int_32)[44]))
	$11 = ($11 + [1])
	$12 = ($12 + [-1])
	if ( $12 ){ goto $label$14 }
	$10 = ((int_32)$10 == (int_32)[4])
	
.LABEL $label$11
	CALL eosio_assert($10, [8246])
	*($9 + [72]) = $13
	*($9 + [64]) = (int_64)0
	*($9 + [32]) = $13
	*($9 + [76]) = [1]
	$11 = CALL $2($0, $1, [8245], ($9 + [32]), ($9 + [76]))
	$10 = *($1)
	$12 = ($10 & [1])
	*($9 + [48]) = ( *($1 + [8]) ? ($1 + [1]) : $12 )
	*($9 + [52]) = ( *($1 + [4]) ? uint_32($10 >> [1]) : $12 )
	*($9 + [16]) = *($9 + [48])
	$14 = *(CALL $4(($9 + [32]), ($9 + [16])))
	*($2) = $14
	CALL eosio_assert((((int_64)$14 == (int_64)-8173734935706730496) | ((int_64)$14 == (int_64)5606078077002753536)), [8227])
	*($9 + [76]) = ($11 + [1])
	*($9 + [32]) = [1]
	$11 = CALL $2($0, $3, [8245], ($9 + [76]), ($9 + [32]))
	$10 = *($3)
	CALL eosio_assert(((int_32)( *($3 + [4]) ? uint_32($10 >> [1]) : ($10 & [1]) ) != (int_32)$13), [8259])
	*($4) = CALL $207(( *($3 + [8]) ? ($3 + [1]) : (*($3) & [1]) ), ($9 + [60]), [10])
	CALL eosio_assert([1], [8270])
	*($9 + [76]) = ($11 + [1])
	*($9 + [32]) = [1]
	$11 = CALL $2($0, ($9 + [64]), [8245], ($9 + [76]), ($9 + [32]))
	$10 = *($9 + [64])
	CALL eosio_assert(((int_32)( *($9 + [68]) ? uint_32($10 >> [1]) : ($10 & [1]) ) != (int_32)$13), [8297])
	$10 = (($9 + [64]) | [1])
	$12 = (CASTING uint_32)(uint_64 CALL $207(( *($9 + [72]) ? $10 : (*($9 + [64]) & [1]) ), ($9 + [60]), [10]))
	*($5) = $12
	CALL eosio_assert(((($12 + [-1]) & [255]) <= [7]), [8317])
	*($9 + [76]) = ($11 + [1])
	*($9 + [32]) = [1]
	$11 = CALL $2($0, ($9 + [64]), [8245], ($9 + [76]), ($9 + [32]))
	$12 = *($9 + [64])
	CALL eosio_assert(((int_32)( *($9 + [68]) ? uint_32($12 >> [1]) : ($12 & [1]) ) != (int_32)$13), [8350])
	$10 = ( *($9 + [72]) ? $10 : (*($9 + [64]) & [1]) )
	*($6) = CALL $207($10, ($9 + [60]), [16])
	$12 = *($9 + [64])
	CALL eosio_assert(((int_32)*($9 + [60]) == (int_32)($10 + ( *($9 + [68]) ? uint_32($12 >> [1]) : ($12 & [1]) ))), [8359])
	$11 = ($11 + [1])
	*($9 + [76]) = $11
	CALL $182(($9 + [32]), $0, $11, [-1], $0)
	if ( (*($7) & [1]) ){ goto $label$16 }
	*($7) = [0]
	goto $label$15 
	
.LABEL $label$16
	*(*($7 + [8])) = [0]
	*($7 + [4]) = [0]
	
.LABEL $label$15
	CALL $185($7, [0])
	*($7) = *($9 + [32])
	*(($7 + [8])) = *((($9 + [32]) + [8]))
	$11 = ($11 & [1])
	$11 = *($7)
	$10 = ( *($7 + [4]) ? uint_32($11 >> [1]) : $11 )
	if ( ($10 == 0) ){ goto $label$17 }
	*($9 + [28]) = $10
	*($9 + [24]) = ( *($7 + [8]) ? ($7 + [1]) : $11 )
	*($9 + [8]) = *($9 + [24])
	*($8) = *(CALL $4(($9 + [32]), ($9 + [8])))
	
.LABEL $label$17
	if ( ((*($9 + [64]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*(($9 + [72])))
	
.LABEL $label$18
	$global$0 = ($9 + [80])
}

int_32 .FUNC $189 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $184($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$3 = ($2 & [1])
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = ((*($0) & [-2]) + [-1])
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = [10]
	$2 = uint_32($2 >> [1])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $186($0, $4, [1], $4, $4, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($2 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($2 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $2)) + [1]) = [0]
	*($0) = $1
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9682])
	
.LABEL $label$5
	$4 = CALL $213($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([112])) + [72]) = [0]
	*($5 + [64 align=4]) = (int_64)0
	*($5 + [96]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [12])
	*($3 + [44]) = ($5 + [16])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [64])
	*($3 + [56]) = ($5 + [80])
	*($3 + [60]) = ($5 + [88])
	CALL $149(($3 + [32]), ($3 + [24]))
	*($5 + [100]) = $1
	*($3 + [24]) = $5
	$7 = (int_64)
	*($3 + [32]) = $7((int_64)0 - *($5)))
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $111(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $216($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [64]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [72])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $48 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = [1]
	$4 = *($1 + [8])
	if ( ((int_64)$4 <= (int_64)293370680067) ){ goto $label$3 }
	if ( ((int_64)$4 == (int_64)293370680068) ){ goto $label$1 }
	if ( ((int_64)$4 == (int_64)293455873288) ){ goto $label$1 }
	if ( ((int_64)$4 == (int_64)310651471112) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_64)$4 == (int_64)1397703940) ){ goto $label$1 }
	if ( ((int_64)$4 == (int_64)289176438024) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = [0]
	CALL eosio_assert([0], [8634])
	
.LABEL $label$1
	CALL eosio_assert($3, [10298])
	$5 = [0]
	if ( ((uint_64)((int_64)*($1) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$4 }
	$4 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$4 = $6
	$5 = [1]
	$7 = $3
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$4 = $6
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$8 }
	$5 = [1]
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	CALL eosio_assert($5, [10317])
	CALL eosio_assert((int_64)(((uint_64)*($1) % (uint_64)$2) == 0), [10334])
	CALL eosio_assert(((uint_64)*($1) >= (uint_64)$2), [10383])
}

void .FUNC memory ()
{
}

int_32 .FUNC $43 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	$3 = ($global$0 - [352])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [152]))) = (int_64)0
	*(($8 = ($4 + [200]))) = (int_64)0
	*(($9 = ($4 + [192]))) = (int_64)0
	*(($10 = ($4 + [184]))) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [136]) = (int_64)0
	*($4 + [144]) = (int_64)0
	*($4 + [160]) = [0]
	*($4 + [176]) = (int_64)0
	*($4 + [100]) = $2
	*($4 + [96]) = $2
	*($4 + [104]) = ($2 + $7)
	*($4 + [272]) = ($4 + [96])
	*($4 + [304]) = ($4 + [112])
	CALL $100(($4 + [304]), ($4 + [272]))
	*(($11 = (($4 + [48]) + [8]))) = *($4 + [104])
	*($4 + [48]) = *($4 + [96])
	$11 = *($11)
	*((($4 + [208]) + [8])) = $11
	*(($12 = (($4 + [272]) + [8]))) = $11
	$13 = *($4 + [48])
	*($4 + [272]) = $13
	*($4 + [208]) = $13
	$11 = *($12)
	*((($4 + [304]) + [8])) = $11
	*((($4 + [64]) + [24])) = $11
	*($4 + [64]) = $0
	*($4 + [72]) = $1
	$0 = *($4 + [272])
	*($4 + [80]) = $0
	*($4 + [304]) = $0
	*(($11 = (($4 + [240]) + [8]))) = *($3)
	*(($3 = (($4 + [208]) + [16]))) = *($9)
	*(($9 = (($4 + [208]) + [24]))) = *($8)
	*($4 + [240]) = *($4 + [144])
	*($4 + [208]) = *($4 + [176])
	*($4 + [216]) = *($10)
	$0 = *($4 + [136])
	$1 = *($4 + [128])
	$13 = *($4 + [120])
	$14 = *($4 + [112])
	$8 = *($4 + [160])
	*((($4 + [272]) + [24])) = *($9)
	*((($4 + [272]) + [16])) = *($3)
	*((($4 + [256]) + [8])) = *($11)
	*($4 + [280]) = *($4 + [216])
	*($4 + [272]) = *($4 + [208])
	*($4 + [256]) = *($4 + [240])
	$3 = (($4 + [64]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$15 = *((($4 + [256]) + [8]))
	*((($4 + [336]) + [8])) = $15
	$16 = *((($4 + [272]) + [16]))
	*((($4 + [304]) + [16])) = $16
	$17 = *((($4 + [272]) + [24]))
	*((($4 + [304]) + [24])) = $17
	*((($4 + [32]) + [8])) = $15
	*(($4 + [24])) = $17
	*(($4 + [16])) = $16
	$15 = *($4 + [256])
	*($4 + [336]) = $15
	$16 = *($4 + [272])
	*($4 + [304]) = $16
	$17 = *($4 + [280])
	*($4 + [312]) = $17
	*($4 + [32]) = $15
	*($4 + [8]) = $17
	*($4) = $16
	CALL void $3((int_32 $14), (int_64 $13), (int_64 $1), (int_64 $0), (int_64 ($4 + [32])), (int_32 ($8 & [255])), (int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $216($2)
	
.LABEL $label$5
	$global$0 = ($4 + [352])
	return [1]
}

void .FUNC $42 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_32 $7)
{
	CALL require_auth(*($0))
	CALL require_recipient($1)
}

void .FUNC $41 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth((int_64)4229868842424340576)
	$4 = *($1)
	CALL eosio_assert((((int_64)$4 == (int_64)-8173734935706730496) | ((int_64)$4 == (int_64)5606078077002753536)), [8227])
	$4 = *($2 + [8])
	if ( ((int_64)$4 <= (int_64)293370680067) ){ goto $label$3 }
	if ( ((int_64)$4 == (int_64)293370680068) ){ goto $label$1 }
	if ( ((int_64)$4 == (int_64)293455873288) ){ goto $label$1 }
	if ( ((int_64)$4 == (int_64)310651471112) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_64)$4 == (int_64)1397703940) ){ goto $label$1 }
	if ( ((int_64)$4 == (int_64)289176438024) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8634])
	$4 = *(($2 + [8]))
	
.LABEL $label$1
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$5 = *($0)
	*($3 + [8]) = $5
	$6 = *($1)
	*($3 + [16]) = $6
	$1 = [0]
	$7 = CALL db_find_i64($5, $6, (int_64)7035938067009503232, (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $54(($3 + [8]), $7)
	if ( ((int_32)*($1 + [136]) == (int_32)($3 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [9257])
	$4 = *($0)
	*($3) = $2
	CALL $83(($3 + [8]), $1, $4, $3)
	$0 = *($3 + [32])
	if ( ($0 == 0) ){ goto $label$5 }
	$7 = ($3 + [36])
	$1 = *($7)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$7 }
	
.LOOP $label$8:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$9 }
	CALL _ZdlPv($2)
	
.LABEL $label$9
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$8 }
	$1 = *(($3 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$1 = $0
	
.LABEL $label$6
	*($7) = $0
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

int_32 .FUNC $40 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $7)
	*($4 + [128]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $94(($4 + [16]), ($4 + [128]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	$3 = *($3)
	*((($4 + [96]) + [8])) = $3
	*(($8 = (($4 + [112]) + [8]))) = $3
	$9 = *($4)
	*($4 + [112]) = $9
	*($4 + [96]) = $9
	$3 = *($8)
	*((($4 + [128]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [112])
	*($4 + [32]) = $0
	*($4 + [128]) = $0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [88])
	$1 = *($4 + [80])
	$9 = *($4 + [72])
	$10 = *($4 + [64])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $216($2)
	
.LABEL $label$6
	$global$0 = ($4 + [144])
	return [1]
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9682])
	
.LABEL $label$5
	$2 = CALL $213($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([24])) + [8]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9705])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)7235159550150574080
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = (int_64)7235159550150574080
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $133(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $216($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9705])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $78(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $45 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [9705])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [40]) | [4])
	CALL memcpy(($4 + [40]), $2, [4])
	$9 = ($2 + [4])
	if ( ((int_32)($7 & [-4]) != (int_32)[4]) ){ goto $label$6 }
	CALL eosio_assert([0], [9705])
	
.LABEL $label$6
	CALL memcpy($8, $9, [4])
	*(($4 + [32])) = $3
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [8])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$8 = *($4 + [44])
	$9 = *($4 + [40])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $9), (int_32 $8), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $216($2)
	
.LABEL $label$8
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$global$0 = $3
	CALL eosio_assert((($2 + [-1]) <= [31]), [9358])
	$4 = [0]
	*(($3 + [56])) = [0]
	*($3 + [40]) = (int_64)-1
	*($3 + [48]) = (int_64)0
	$5 = *($0)
	*($3 + [24]) = $5
	*($3 + [32]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)-4455901497821387904, (int_64)-4455901497821387904)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $101(($3 + [24]), $6)
	if ( ((int_32)*($4 + [24]) == (int_32)($3 + [24])) ){ goto $label$1 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$1
	CALL eosio_assert(($4 == 0), [9385])
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL eosio_assert0() / (uint_64)(int_64)1000000)) <= (uint_32)$1), [9411])
	*($3 + [4]) = $1
	*($3) = [1]
	*($3 + [16]) = [1]
	$1 = ($1 - ((int_32)$1 % (int_32)[86400]))
	*($3 + [20]) = ($1 + [86400])
	*($3 + [8]) = $2
	*($3 + [12]) = ($1 + ((int_32)$2 * (int_32)[86400]))
	CALL $102(($3 + [24]), $3, *($0))
	$0 = *($3 + [48])
	if ( ($0 == 0) ){ goto $label$2 }
	$4 = ($3 + [52])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	CALL _ZdlPv($2)
	
.LABEL $label$6
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$5 }
	$1 = *(($3 + [48]))
	goto $label$3 
	
.LABEL $label$4
	$1 = $0
	
.LABEL $label$3
	*($4) = $0
	CALL _ZdlPv($1)
	
.LABEL $label$2
	$global$0 = ($3 + [64])
}

void .FUNC $167 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $118(*($1), *($0 + [12]))
	CALL $118(*($1), *($0 + [16]))
}

void .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [32])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*(($3 + [40])) = *($2 + [8])
	*($6) = (*($6) + [8])
	$4 = *($0)
	$0 = ($4 + [48])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)*($5 + [8]) != (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$6 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $6, [1])
	*(($5 = ($5 + [4]))) = (*($5) + [1])
	$4 = ($4 + [64])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [9705])
	$6 = *(($5 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $6, [32])
	*(($5 = ($5 + [4]))) = (*($5) + [32])
	$global$0 = ($2 + [16])
}

void .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [9890])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($1, $3, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $164 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $163 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [9705])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$5 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9705])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9705])
	$4 = *($1)
	
.LABEL $label$10
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $161 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $160 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$1
	*(($5 = CALL _Znwj([24])) + [8]) = $1
	*($5) = *(*($3))
	CALL memcpy(($4 + [16]), $5, [8])
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)4229663799601135616, $2, (int_64)4229663799601135616, ($4 + [16]), [8])
	*($5 + [12]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)4229663799601135616) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)4229663799601135617
	
.LABEL $label$2
	*($4 + [8]) = $5
	*($4 + [16]) = (int_64)4229663799601135616
	*($4 + [4]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)4229663799601135616
	*($3 + [16]) = $6
	*($4 + [8]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $161(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$1 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

void .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [32])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9890])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($6, $4, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = *(($3 + [40]))
	if ( ((int_32)(*(($5 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [8])
	*($6) = (*($6) + [8])
	$4 = *($0)
	$0 = ($4 + [48])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [9890])
	$6 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $0, [1])
	*(($5 = ($5 + [4]))) = (*($5) + [1])
	$4 = ($4 + [64])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [9890])
	$6 = *(($5 + [4]))
	
.LABEL $label$4
	CALL memcpy($6, $4, [32])
	*(($5 = ($5 + [4]))) = (*($5) + [32])
	$global$0 = ($2 + [16])
}

void .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy(($2 + [8]), $5, [8])
	*($3) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [32])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [9705])
	$0 = *(($1 + [4]))
	
.LABEL $label$16
	CALL memcpy($4, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [9705])
	$0 = *(($1 + [4]))
	
.LABEL $label$17
	CALL memcpy(($2 + [8]), $0, [8])
	*($4 + [8]) = *($2 + [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC $58 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $56($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $128(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9890])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9890])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $169(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_64 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($2 + [8]) = (int_64)0
	$3 = *(($1 + [28]))
	if ( ((int_32)$3 == (int_32)*($1 + [24])) ){ goto $label$2 }
	$3 = *(($3 + [-24]))
	if ( ((int_32)*($3 + [8]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [9631])
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	$4 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)4229663799601135616, (int_64)4229663799601135616)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $92($1, $4)
	if ( ((int_32)*($3 + [8]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$1
	*($2 + [8]) = ((int_64)*(( $3 ? ($2 + [8]) : $3 )) + (int_64)1)
	CALL $130($1, ($2 + [8]), *($0))
	$5 = *($2 + [8])
	$global$0 = ($2 + [16])
	return $5
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9682])
	
.LABEL $label$5
	$4 = CALL $213($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([96])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [40])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [56])
	*($3 + [60]) = ($5 + [64])
	CALL $162(($3 + [32]), ($3 + [24]))
	*($5 + [88]) = [-1]
	*($5 + [84]) = $1
	*($3 + [24]) = $5
	$7 = (int_64)
	*($3 + [32]) = $7((int_64)0 - *($5)))
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $53(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $216($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$5 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9890])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, $5, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9890])
	$4 = *($1)
	
.LABEL $label$10
	CALL memcpy($4, ($2 + [8]), [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9682])
	
.LABEL $label$5
	$4 = CALL $213($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([152])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [120]) = (int_64)0
	*($5 + [128]) = (int_64)0
	*($5 + [136]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [24])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [56])
	*($3 + [60]) = ($5 + [72])
	*($3 + [64]) = ($5 + [88])
	*($3 + [68]) = ($5 + [104])
	*($3 + [72]) = ($5 + [120])
	CALL $168(($3 + [40]), ($3 + [32]))
	*($5 + [140]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $82(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $216($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $55 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [136]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	$6 = *($3)
	*($1 + [8]) = *($6)
	*(($1 + [16])) = *(($6 + [8]))
	$7 = *($1)
	$6 = (*(*($3 + [4])) + [-1])
	if ( ((uint_32)$6 > (uint_32)[6]) ){ goto $label$5 }
	goto $label$12 
	
.LABEL $label$12
	$3 = *($3 + [8])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$13 }
	CALL eosio_assert([0], [10472])
	
.LABEL $label$13
	$8 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$14 }
	CALL eosio_assert([0], [10515])
	$8 = *(($1 + [24]))
	
.LABEL $label$14
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10534])
	$6 = ($1 + [8])
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$11
	$3 = *($3 + [8])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [48]))) ){ goto $label$15 }
	CALL eosio_assert([0], [10472])
	
.LABEL $label$15
	$8 = ((int_64)*($1 + [40]) + (int_64)*($3))
	*($1 + [40]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$16 }
	CALL eosio_assert([0], [10515])
	$8 = *(($1 + [40]))
	
.LABEL $label$16
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10534])
	$6 = ($1 + [8])
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$10
	$3 = *($3 + [8])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [64]))) ){ goto $label$17 }
	CALL eosio_assert([0], [10472])
	
.LABEL $label$17
	$8 = ((int_64)*($1 + [56]) + (int_64)*($3))
	*($1 + [56]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$18 }
	CALL eosio_assert([0], [10515])
	$8 = *(($1 + [56]))
	
.LABEL $label$18
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10534])
	$6 = ($1 + [8])
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$9
	$3 = *($3 + [8])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [80]))) ){ goto $label$19 }
	CALL eosio_assert([0], [10472])
	
.LABEL $label$19
	$8 = ((int_64)*($1 + [72]) + (int_64)*($3))
	*($1 + [72]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$20 }
	CALL eosio_assert([0], [10515])
	$8 = *(($1 + [72]))
	
.LABEL $label$20
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10534])
	$6 = ($1 + [8])
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$8
	$3 = *($3 + [8])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [96]))) ){ goto $label$21 }
	CALL eosio_assert([0], [10472])
	
.LABEL $label$21
	$8 = ((int_64)*($1 + [88]) + (int_64)*($3))
	*($1 + [88]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$22 }
	CALL eosio_assert([0], [10515])
	$8 = *(($1 + [88]))
	
.LABEL $label$22
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10534])
	$6 = ($1 + [8])
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$7
	$3 = *($3 + [8])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [112]))) ){ goto $label$23 }
	CALL eosio_assert([0], [10472])
	
.LABEL $label$23
	$8 = ((int_64)*($1 + [104]) + (int_64)*($3))
	*($1 + [104]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$24 }
	CALL eosio_assert([0], [10515])
	$8 = *(($1 + [104]))
	
.LABEL $label$24
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10534])
	$6 = ($1 + [8])
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$3 = *($3 + [8])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [128]))) ){ goto $label$25 }
	CALL eosio_assert([0], [10472])
	
.LABEL $label$25
	$8 = ((int_64)*($1 + [120]) + (int_64)*($3))
	*($1 + [120]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$26 }
	CALL eosio_assert([0], [10515])
	$8 = *(($1 + [120]))
	
.LABEL $label$26
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10534])
	
.LABEL $label$5
	$6 = ($1 + [8])
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9831])
	
.LABEL $label$3
	$4 = $4
	$3 = ($4 + [-144])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	*($5 + [16]) = $5
	*($5 + [28]) = $6
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [24])
	*($5 + [36]) = ($1 + [40])
	*($5 + [40]) = ($1 + [56])
	*($5 + [44]) = ($1 + [72])
	*($5 + [48]) = ($1 + [88])
	*($5 + [52]) = ($1 + [104])
	*($5 + [56]) = ($1 + [120])
	CALL $129(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [140]), $2, $3, [136])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$27 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$27
	$global$0 = ($5 + [64])
	$6
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $193($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9890])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9890])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $118(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

void .FUNC $152 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([64])) + [52]) = $1
	*($3) = (int_64)0
	CALL $153(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [56])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $154(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL _ZdlPv($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $153 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($4 + [4])
	*($1 + [48]) = *($5)
	*($1 + [32]) = [1]
	*($1) = *(*($4))
	$6 = ($1 + [8])
	$7 = ($1 + [48])
	$8 = ($1 + [32])
	$9 = *($0)
	if ( (*($5) == 0) ){ goto $label$2 }
	*($1 + [16]) = *(*($4 + [8]))
	*($6) = [1]
	$10 = *(*($4 + [12]))
	*($1 + [40]) = $10
	$5 = ($1 + [40])
	$11 = ($1 + [16])
	goto $label$1 
	
.LABEL $label$2
	$10 = (int_64)0
	*($1 + [16]) = (int_64)0
	*($6) = [0]
	$5 = ($1 + [40])
	$11 = ($1 + [16])
	
.LABEL $label$1
	*($1 + [24]) = $10
	$2 = $2
	$4 = ($2 + [-48])
	$global$0 = $4
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($2 + [-13])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $6
	*($3 + [32]) = $1
	*($3 + [40]) = $11
	$2 = ($1 + [24])
	*($3 + [44]) = $2
	*($3 + [48]) = $8
	*($3 + [52]) = $5
	*($3 + [56]) = $7
	CALL $155(($3 + [32]), ($3 + [24]))
	$10 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($9 + [8]), (int_64)-4455901301129084928, *(*($0 + [8])), $10, $4, [35])
	if ( (uint_64)($10 <= *($9 + [16])) ){ goto $label$3 }
	*(($9 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$10 = *(($9 + [8]))
	$12 = *(*(($0 + [8])))
	$13 = *($1)
	*($3 + [32]) = ((int_64))((int_64)4294967295 - ((uint_64)*($2) / (uint_64)(int_64)1000)) + (int_64)((int_64)((int_64)*(($1 + [8])) ^ (int_64)255) << (int_64)32))
	*($1 + [60]) = CALL db_idx64_store($10, (int_64)-4455901301129084928, $12, $13, ($3 + [32]))
	$global$0 = ($3 + [64])
}

int_32 .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9947])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $56($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9705])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $151 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [52])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	*($5 + [16]) = ((int_64))((int_64)4294967295 - ((uint_64)*($1 + [24]) / (uint_64)(int_64)1000)) + (int_64)((int_64)((int_64)*($1 + [8]) ^ (int_64)255) << (int_64)32))
	$6 = ($1 + [24])
	$7 = ($1 + [8])
	$8 = *($1)
	$11 = *($3 + [4])
	$12 = *($11)
	$9 = *(*($3) + [4])
	$10 = *($9 + [48])
	if ( ((int_32)$10 != (int_32)$12) ){ goto $label$6 }
	$12 = (*($9 + [32]) + [1])
	*($1 + [32]) = $12
	if ( ($10 == 0) ){ goto $label$3 }
	$13 = ((int_64)*($1 + [40]) + (int_64)*(*($3 + [8])))
	goto $label$5 
	
.LABEL $label$6
	*($1 + [48]) = $12
	$12 = [1]
	*($1 + [32]) = [1]
	if ( (*($11) == 0) ){ goto $label$4 }
	$13 = *(*($3 + [8]))
	
.LABEL $label$5
	*($1 + [40]) = $13
	$11 = ($12 & [255])
	$10 = *($9 + [8])
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$8 }
	if ( (uint_64)(*($9 + [24]) <= $13) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((uint_32)$10 >= (uint_32)$11) ){ goto $label$3 }
	
.LABEL $label$7
	*(($1 + [8])) = $12
	*($1 + [16]) = *(*($3 + [12]))
	*(($1 + [24])) = $13
	goto $label$3 
	
.LABEL $label$4
	*($1 + [40]) = (int_64)0
	
.LABEL $label$3
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-13])
	*($5 + [24]) = $5
	*($5 + [36]) = $7
	*($5 + [44]) = $6
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	CALL $155(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [56]), $2, $3, [35])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [32]) = ((int_64))((int_64)4294967295 - ((uint_64)*($6) / (uint_64)(int_64)1000)) + (int_64)((int_64)((int_64)*($7) ^ (int_64)255) << (int_64)32))
	if ( (CALL $209(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$10 }
	$3 = *($1 + [60])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$11 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4455901301129084928, ($5 + [24]), $8)
	*(($1 + [60])) = $3
	
.LABEL $label$11
	CALL db_idx64_update($3, $2, ($5 + [32]))
	
.LABEL $label$10
	$global$0 = ($5 + [64])
}

void .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$7 }
	CALL eosio_assert([0], [9705])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [15]), $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($4) = ((int_32)*($2 + [15]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9890])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9890])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $154 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9890])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$1 = *($1)
	*($2 + [15]) = *(*($0 + [24]))
	$0 = *($1 + [4])
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [9890])
	$0 = *(($1 + [4]))
	
.LABEL $label$7
	CALL memcpy($0, ($2 + [15]), [1])
	*(($0 = ($1 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9890])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $159 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	*($1) = *(*($3))
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $3, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)4229663799601135616) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)4229663799601135617
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

int_32 .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $184($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [48])
	$4 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-48] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = ($1 + [48])
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = *($1 + [60])
	$4 = ( *(($1 + [64])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$3 = ($3 - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	$7 = ($1 + [60])
	
.LOOP $label$2:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$2 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $56($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$3 = [0]
	
.LABEL $label$3
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $4
	*($2 + [16]) = $2
	*($2 + [36]) = $6
	*($2 + [40]) = $7
	*($2 + [24]) = $1
	*($2 + [28]) = ($1 + [8])
	*($2 + [32]) = ($1 + [16])
	CALL $167(($2 + [24]), ($2 + [16]))
	$global$0 = ($2 + [48])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$2 = ($global$0 - [240])
	$global$0 = $2
	$3 = *($1)
	*(($2 + [232])) = [0]
	*($2 + [208]) = $3
	*($2 + [200]) = $3
	*($2 + [216]) = (int_64)-1
	*($2 + [224]) = (int_64)0
	$4 = CALL db_find_i64($3, $3, (int_64)-4455901497821387904, (int_64)-4455901497821387904)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)*(CALL $101(($2 + [200]), $4) + [24]) == (int_32)($2 + [200])) ){ goto $label$3 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$3
	CALL $103(($2 + [176]), ($2 + [200]))
	$5 = CALL current_time()
	$4 = (CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000))
	if ( ((int_32)*($2 + [180]) > (int_32)$4) ){ goto $label$5 }
	if ( ((int_32)*($2 + [188]) <= (int_32)$4) ){ goto $label$4 }
	$6 = *($2 + [196])
	if ( ((int_32)$6 > (int_32)$4) ){ goto $label$6 }
	$4 = (((int_32)($4 - $6) / (int_32)[86400]) + [1])
	*(($2 + [196])) = (((int_32)$4 * (int_32)[86400]) + $6)
	*($2 + [192]) = (*($2 + [192]) + $4)
	CALL $102(($2 + [200]), ($2 + [176]), $3)
	
.LABEL $label$6
	$7 = *((*([0] + [8500]) + *(($2 + [192]))))
	*(($2 + [168])) = [0]
	*($2 + [160]) = (int_64)0
	$4 = CALL $210([9445])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$14 }
	*($2 + [160]) = ($4 << [1])
	$6 = (($2 + [160]) | [1])
	if ( $4 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$8 = (($4 + [16]) & [-16])
	$6 = CALL _Znwj($8)
	*($2 + [160]) = ($8 | [1])
	*($2 + [168]) = $6
	*($2 + [164]) = $4
	
.LABEL $label$13
	CALL memcpy($6, [9445], $4)
	
.LABEL $label$12
	*(($6 + $4)) = [0]
	CALL $188(($2 + [160]), int_32(($7 << [24]) >> [24]))
	*(($2 + [152])) = [0]
	*($2 + [144]) = (int_64)0
	$4 = CALL $210([9451])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$17 }
	*($2 + [144]) = ($4 << [1])
	$6 = (($2 + [144]) | [1])
	if ( $4 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$8 = (($4 + [16]) & [-16])
	$6 = CALL _Znwj($8)
	*($2 + [144]) = ($8 | [1])
	*($2 + [152]) = $6
	*($2 + [148]) = $4
	
.LABEL $label$16
	CALL memcpy($6, [9451], $4)
	
.LABEL $label$15
	*(($6 + $4)) = [0]
	CALL $188(($2 + [144]), int_32(($7 << [24]) >> [24]))
	$9 = (($2 + [128]) | [4])
	*($2 + [128]) = $9
	*($2 + [132 align=4]) = (int_64)0
	$4 = CALL db_lowerbound_i64(*($1), *($1 + [8]), (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	$10 = CALL $51($1, $4)
	if ( ((int_64)*(($10 + [32])) != (int_64)1397703940) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$11
	CALL $180(($2 + [160]))
	
.LABEL $label$10
	CALL $180(($2 + [144]))
	
.LABEL $label$9
	$11 = [6]
	goto $label$1 
	
.LABEL $label$8
	$11 = [4]
	goto $label$1 
	
.LABEL $label$7
	$11 = [21]
	goto $label$1 
	
.LABEL $label$5
	$11 = [47]
	goto $label$1 
	
.LABEL $label$4
	$11 = [47]
	goto $label$1 
	
.LABEL $label$2
	$11 = [55]
	
.LABEL $label$1
	
.LOOP $label$18:
	goto $label$120 
	
.LABEL $label$133
	$10 = CALL $51($1, $4)
	if ( ((int_64)*(($10 + [32])) != (int_64)1397703940) ){ goto $label$54 }
	$11 = [6]
	goto $label$18 
	
.LABEL $label$132
	$12 = *($10 + [64])
	if ( ((int_32)*($10 + [40]) != (int_32)[2]) ){ goto $label$52 }
	$11 = [20]
	goto $label$18 
	
.LABEL $label$131
	$13 = *($10 + [24])
	$12 = ( ((int_64)$13 << (int_64)1) ? $12 : ((int_64)$12 > (int_64)$13) )
	$11 = [7]
	goto $label$18 
	
.LABEL $label$130
	$8 = *($2 + [132])
	if ( ($8 == 0) ){ goto $label$51 }
	$11 = [8]
	goto $label$18 
	
.LABEL $label$129
	$13 = *(($10 + [8]))
	$6 = $9
	$4 = $8
	$11 = [9]
	goto $label$18 
	
.LABEL $label$128
	$7 = (uint_64)(*($4 + [16]) <= $13)
	$6 = ( $6 ? $4 : $7 )
	$4 = *(($4 + ($7 << [2])))
	if ( $4 ){ goto $label$50 }
	$11 = [10]
	goto $label$18 
	
.LABEL $label$127
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$49 }
	$11 = [11]
	goto $label$18 
	
.LABEL $label$126
	if ( ((uint_64)$13 >= (uint_64)*($6 + [16])) ){ goto $label$48 }
	$11 = [13]
	goto $label$18 
	
.LABEL $label$125
	$14 = *($10 + [24])
	$4 = $9
	$15 = *($8 + [16])
	if ( ((uint_64)$13 >= (uint_64)$15) ){ goto $label$59 }
	goto $label$60 
	
.LABEL $label$124
	$4 = $8
	$8 = $6
	$15 = *($8 + [16])
	if ( ((uint_64)$13 >= (uint_64)$15) ){ goto $label$65 }
	$11 = [14]
	goto $label$18 
	
.LABEL $label$123
	$6 = *($8)
	if ( $6 ){ goto $label$61 }
	goto $label$62 
	
.LABEL $label$122
	if ( ((uint_64)$15 >= (uint_64)$13) ){ goto $label$58 }
	$11 = [66]
	goto $label$18 
	
.LABEL $label$121
	$4 = ($8 + [4])
	$6 = *($8 + [4])
	if ( ($6 == 0) ){ goto $label$63 }
	$11 = [0]
	goto $label$18 
	
.LABEL $label$120
	$8 = $4
	goto $label$64 
	
.LABEL $label$119
	$14 = *($10 + [24])
	$8 = $9
	$4 = $9
	$11 = [3]
	goto $label$18 
	
.LABEL $label$118
	if ( *($4) ){ goto $label$56 }
	$11 = [16]
	goto $label$18 
	
.LABEL $label$117
	*(($6 = CALL _Znwj([40]))) = (int_64)0
	*($6 + [8]) = $8
	$13 = *(($10 + [8]))
	*($6 + [24]) = $14
	*($6 + [32]) = $12
	*($4) = $6
	*($6 + [16]) = $13
	$7 = *(*($2 + [128]))
	if ( ($7 == 0) ){ goto $label$47 }
	$11 = [17]
	goto $label$18 
	
.LABEL $label$116
	*($2 + [128]) = $7
	$6 = *($4)
	$11 = [18]
	goto $label$18 
	
.LABEL $label$115
	CALL $125(*($2 + [132]), $6)
	*(($4 = (($2 + [128]) + [8]))) = (*($4) + [1])
	goto $label$55 
	
.LABEL $label$114
	*($6 + [24]) = ((int_64)*($6 + [24]) + (int_64)*($10 + [24]))
	*($6 + [32]) = ((int_64)*($6 + [32]) + (int_64)$12)
	goto $label$57 
	
.LABEL $label$113
	$4 = $8
	if ( (*($4) == 0) ){ goto $label$53 }
	$11 = [4]
	goto $label$18 
	
.LABEL $label$112
	$4 = CALL db_next_i64(*($10 + [84]), ($2 + [88]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$66 }
	$11 = [21]
	goto $label$18 
	
.LABEL $label$111
	$4 = *($2 + [160])
	$6 = ($4 & [1])
	*($2 + [80]) = ( *($2 + [168]) ? (($2 + [160]) | [1]) : $6 )
	*($2 + [84]) = ( *($2 + [164]) ? uint_32($4 >> [1]) : $6 )
	*($2 + [8]) = *($2 + [80])
	$4 = CALL $4(($2 + [40]), ($2 + [8]))
	*((($2 + [88]) + [32])) = [0]
	*($2 + [88]) = $3
	*($2 + [104]) = (int_64)-1
	*($2 + [112]) = (int_64)0
	*($2 + [124]) = [0]
	*($2 + [96]) = *($4)
	$4 = *($2 + [144])
	$6 = ($4 & [1])
	*($2 + [24]) = ( *($2 + [152]) ? (($2 + [144]) | [1]) : $6 )
	*($2 + [28]) = ( *($2 + [148]) ? uint_32($4 >> [1]) : $6 )
	*($2) = *($2 + [24])
	$4 = CALL $4(($2 + [32]), $2)
	*((($2 + [40]) + [32])) = [0]
	*($2 + [40]) = $3
	*($2 + [56]) = (int_64)-1
	*($2 + [64]) = (int_64)0
	*($2 + [76]) = [0]
	*($2 + [48]) = *($4)
	$6 = *($2 + [128])
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$46 }
	$11 = [22]
	goto $label$18 
	
.LABEL $label$110
	$11 = [23]
	goto $label$18 
	
.LABEL $label$109
	$7 = $6
	*($2 + [32]) = *($7 + [16])
	$13 = (int_64)
	if ( ((int_64)$13(*($7 + [32]) - *($7 + [24]))) < (int_64)0) ){ goto $label$44 }
	$11 = [62]
	goto $label$18 
	
.LABEL $label$108
	if ( (uint_64)($13 <= (int_64)10000) ){ goto $label$20 }
	$11 = [64]
	goto $label$18 
	
.LABEL $label$107
	*($2 + [16]) = $13
	CALL $126(($2 + [88]), ($2 + [32]), ($2 + [16]), $5, [1])
	if ( (uint_64)($13 <= (int_64)100000) ){ goto $label$19 }
	$11 = [65]
	goto $label$18 
	
.LABEL $label$106
	*($2 + [16]) = $13
	CALL $126(($2 + [40]), ($2 + [32]), ($2 + [16]), $5, [1])
	$11 = [63]
	goto $label$18 
	
.LABEL $label$105
	$4 = *($7 + [4])
	if ( $4 ){ goto $label$42 }
	$11 = [59]
	goto $label$18 
	
.LABEL $label$104
	$6 = *($7 + [8])
	if ( ((int_32)*($6) == (int_32)$7) ){ goto $label$40 }
	$11 = [60]
	goto $label$18 
	
.LABEL $label$103
	$7 = ($7 + [8])
	$11 = [61]
	goto $label$18 
	
.LABEL $label$102
	$4 = *($7)
	$7 = ($4 + [8])
	$6 = *($4 + [8])
	if ( ((int_32)$4 != (int_32)*($6)) ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$101
	*($2 + [16]) = (int_64)0
	CALL $126(($2 + [88]), ($2 + [32]), ($2 + [16]), $5, [0])
	*($2 + [16]) = (int_64)0
	CALL $126(($2 + [40]), ($2 + [32]), ($2 + [16]), $5, [0])
	$4 = *($7 + [4])
	if ( ($4 == 0) ){ goto $label$41 }
	$11 = [25]
	goto $label$18 
	
.LABEL $label$100
	$6 = $4
	$4 = *($6)
	if ( $4 ){ goto $label$43 }
	$11 = [26]
	goto $label$18 
	
.LABEL $label$99
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$45 }
	$11 = [27]
	goto $label$18 
	
.LABEL $label$98
	$7 = *($2 + [64])
	if ( ($7 == 0) ){ goto $label$37 }
	$11 = [28]
	goto $label$18 
	
.LABEL $label$97
	$8 = ($2 + [68])
	$4 = *($8)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$36 }
	$11 = [29]
	goto $label$18 
	
.LABEL $label$96
	$11 = [30]
	goto $label$18 
	
.LABEL $label$95
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$34 }
	$11 = [31]
	goto $label$18 
	
.LABEL $label$94
	CALL _ZdlPv($6)
	$11 = [32]
	goto $label$18 
	
.LABEL $label$93
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$35 }
	$11 = [33]
	goto $label$18 
	
.LABEL $label$92
	$4 = *(($2 + [64]))
	goto $label$33 
	
.LABEL $label$91
	$4 = $7
	$11 = [34]
	goto $label$18 
	
.LABEL $label$90
	*($8) = $7
	CALL _ZdlPv($4)
	$11 = [35]
	goto $label$18 
	
.LABEL $label$89
	$7 = *($2 + [112])
	if ( ($7 == 0) ){ goto $label$32 }
	$11 = [36]
	goto $label$18 
	
.LABEL $label$88
	$8 = ($2 + [116])
	$4 = *($8)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$31 }
	$11 = [37]
	goto $label$18 
	
.LABEL $label$87
	$11 = [38]
	goto $label$18 
	
.LABEL $label$86
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$29 }
	$11 = [39]
	goto $label$18 
	
.LABEL $label$85
	CALL _ZdlPv($6)
	$11 = [40]
	goto $label$18 
	
.LABEL $label$84
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$30 }
	$11 = [41]
	goto $label$18 
	
.LABEL $label$83
	$4 = *(($2 + [112]))
	goto $label$28 
	
.LABEL $label$82
	$4 = $7
	$11 = [42]
	goto $label$18 
	
.LABEL $label$81
	*($8) = $7
	CALL _ZdlPv($4)
	$11 = [43]
	goto $label$18 
	
.LABEL $label$80
	CALL $127(($2 + [128]), *($2 + [132]))
	if ( ((*($2 + [144]) & [1]) == 0) ){ goto $label$27 }
	$11 = [44]
	goto $label$18 
	
.LABEL $label$79
	CALL _ZdlPv(*(($2 + [152])))
	$11 = [45]
	goto $label$18 
	
.LABEL $label$78
	if ( ((*($2 + [160]) & [1]) == 0) ){ goto $label$26 }
	$11 = [46]
	goto $label$18 
	
.LABEL $label$77
	CALL _ZdlPv(*(($2 + [168])))
	$11 = [47]
	goto $label$18 
	
.LABEL $label$76
	$7 = *($2 + [224])
	if ( ($7 == 0) ){ goto $label$25 }
	$11 = [48]
	goto $label$18 
	
.LABEL $label$75
	$8 = ($2 + [228])
	$4 = *($8)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$24 }
	$11 = [49]
	goto $label$18 
	
.LABEL $label$74
	$11 = [50]
	goto $label$18 
	
.LABEL $label$73
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$22 }
	$11 = [51]
	goto $label$18 
	
.LABEL $label$72
	CALL _ZdlPv($6)
	$11 = [52]
	goto $label$18 
	
.LABEL $label$71
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$23 }
	$11 = [53]
	goto $label$18 
	
.LABEL $label$70
	$4 = *(($2 + [224]))
	goto $label$21 
	
.LABEL $label$69
	$4 = $7
	$11 = [54]
	goto $label$18 
	
.LABEL $label$68
	*($8) = $7
	CALL _ZdlPv($4)
	$11 = [55]
	goto $label$18 
	
.LABEL $label$67
	$global$0 = ($2 + [240])
	return 
	
.LABEL $label$66
	$11 = [5]
	goto $label$18 
	
.LABEL $label$65
	$11 = [2]
	goto $label$18 
	
.LABEL $label$64
	$11 = [1]
	goto $label$18 
	
.LABEL $label$63
	$11 = [3]
	goto $label$18 
	
.LABEL $label$62
	$11 = [15]
	goto $label$18 
	
.LABEL $label$61
	$11 = [1]
	goto $label$18 
	
.LABEL $label$60
	$11 = [14]
	goto $label$18 
	
.LABEL $label$59
	$11 = [2]
	goto $label$18 
	
.LABEL $label$58
	$11 = [3]
	goto $label$18 
	
.LABEL $label$57
	$11 = [4]
	goto $label$18 
	
.LABEL $label$56
	$11 = [4]
	goto $label$18 
	
.LABEL $label$55
	$11 = [4]
	goto $label$18 
	
.LABEL $label$54
	$11 = [4]
	goto $label$18 
	
.LABEL $label$53
	$11 = [16]
	goto $label$18 
	
.LABEL $label$52
	$11 = [7]
	goto $label$18 
	
.LABEL $label$51
	$11 = [19]
	goto $label$18 
	
.LABEL $label$50
	$11 = [9]
	goto $label$18 
	
.LABEL $label$49
	$11 = [13]
	goto $label$18 
	
.LABEL $label$48
	$11 = [12]
	goto $label$18 
	
.LABEL $label$47
	$11 = [18]
	goto $label$18 
	
.LABEL $label$46
	$11 = [35]
	goto $label$18 
	
.LABEL $label$45
	$11 = [23]
	goto $label$18 
	
.LABEL $label$44
	$11 = [24]
	goto $label$18 
	
.LABEL $label$43
	$11 = [25]
	goto $label$18 
	
.LABEL $label$42
	$11 = [25]
	goto $label$18 
	
.LABEL $label$41
	$11 = [59]
	goto $label$18 
	
.LABEL $label$40
	$11 = [26]
	goto $label$18 
	
.LABEL $label$39
	$11 = [26]
	goto $label$18 
	
.LABEL $label$38
	$11 = [61]
	goto $label$18 
	
.LABEL $label$37
	$11 = [35]
	goto $label$18 
	
.LABEL $label$36
	$11 = [58]
	goto $label$18 
	
.LABEL $label$35
	$11 = [30]
	goto $label$18 
	
.LABEL $label$34
	$11 = [32]
	goto $label$18 
	
.LABEL $label$33
	$11 = [34]
	goto $label$18 
	
.LABEL $label$32
	$11 = [43]
	goto $label$18 
	
.LABEL $label$31
	$11 = [57]
	goto $label$18 
	
.LABEL $label$30
	$11 = [38]
	goto $label$18 
	
.LABEL $label$29
	$11 = [40]
	goto $label$18 
	
.LABEL $label$28
	$11 = [42]
	goto $label$18 
	
.LABEL $label$27
	$11 = [45]
	goto $label$18 
	
.LABEL $label$26
	$11 = [47]
	goto $label$18 
	
.LABEL $label$25
	$11 = [55]
	goto $label$18 
	
.LABEL $label$24
	$11 = [56]
	goto $label$18 
	
.LABEL $label$23
	$11 = [50]
	goto $label$18 
	
.LABEL $label$22
	$11 = [52]
	goto $label$18 
	
.LABEL $label$21
	$11 = [54]
	goto $label$18 
	
.LABEL $label$20
	$11 = [63]
	goto $label$18 
	
.LABEL $label$19
	$11 = [63]
	goto $label$18 
	(unreachable)
	(unreachable)
	$11
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [96]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	*($1 + [8]) = [2]
	$6 = *($1)
	$7 = ($1 + [64])
	CALL $183($7, *($3))
	*($1 + [80]) = *(*($3 + [4]) + [8])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9831])
	
.LABEL $label$3
	$8 = ($1 + [80])
	$9 = ($1 + [8])
	$10 = (int_64))((int_64)0 - $6)
	$3 = *($7)
	$11 = ( *(($1 + [68])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($11 + [65])
	$12 = (CASTING uint_64)(uint_32 $11)
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $213($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $9
	*($5 + [52]) = $7
	*($5 + [56]) = $8
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [12])
	*($5 + [44]) = ($1 + [16])
	*($5 + [48]) = ($1 + [32])
	*($5 + [60]) = ($1 + [88])
	CALL $124(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [100]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$10) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $216($4)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$10) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? (int_64))((int_64)1 - $6) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [64])
}

void .FUNC $64 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [96]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	*($1 + [8]) = [1]
	$6 = *($3)
	*($1 + [32]) = *($6)
	*(($1 + [56])) = *(($6 + [24]))
	*(($1 + [48])) = *(($6 + [16]))
	*(($1 + [40])) = *(($6 + [8]))
	*($1 + [12]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	$7 = *($1)
	$3 = *($1 + [64])
	$6 = ( *(($1 + [68])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [65])
	$8 = (CASTING uint_64)(uint_32 $6)
	$9 = ($1 + [64])
	$10 = ($1 + [16])
	$11 = ($1 + [12])
	$12 = ($1 + [32])
	$13 = ($1 + [8])
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ($3 <= [513]) ){ goto $label$5 }
	$6 = CALL $213($3)
	goto $label$4 
	
.LABEL $label$5
	$6 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$4
	$8 = (int_64))((int_64)0 - $7)
	*($5 + [12]) = $6
	*($5 + [8]) = $6
	*($5 + [16]) = ($6 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $13
	*($5 + [40]) = $11
	*($5 + [44]) = $10
	*($5 + [48]) = $12
	*($5 + [52]) = $9
	*($5 + [32]) = $1
	*($5 + [56]) = ($1 + [80])
	*($5 + [60]) = ($1 + [88])
	CALL $124(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [100]), $2, $6, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$8) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $216($6)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$8) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? (int_64))((int_64)1 - $7) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [64])
}

void .FUNC $67 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	$7 = *($3)
	*(($6 = ($1 + [72]))) = *(($7 + [8]))
	*($5 + [16]) = *(($1 + [8]))
	*($1 + [64]) = *($7)
	$8 = *($1)
	$9 = *($3 + [4])
	$7 = *($3)
	$10 = *($6)
	if ( ((int_64)$10 <= (int_64)293370680067) ){ goto $label$7 }
	if ( ((int_64)$10 == (int_64)293370680068) ){ goto $label$6 }
	if ( ((int_64)$10 == (int_64)293455873288) ){ goto $label$5 }
	if ( ((int_64)$10 != (int_64)310651471112) ){ goto $label$4 }
	$3 = [3]
	goto $label$3 
	
.LABEL $label$7
	$3 = [0]
	if ( ((int_64)$10 == (int_64)1397703940) ){ goto $label$3 }
	if ( ((int_64)$10 != (int_64)289176438024) ){ goto $label$4 }
	$3 = [2]
	goto $label$3 
	
.LABEL $label$6
	$3 = [1]
	goto $label$3 
	
.LABEL $label$5
	$3 = [4]
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [8634])
	$3 = [-1]
	
.LABEL $label$3
	$3 = ($9 + ($3 << [4]))
	if ( ((int_64)*($7 + [8]) == (int_64)*($3 + [8])) ){ goto $label$8 }
	CALL eosio_assert([0], [10472])
	
.LABEL $label$8
	$11 = ((int_64)*($3) + (int_64)*($7))
	*($3) = $11
	if ( ((int_64)$11 > (int_64)-4611686018427387904) ){ goto $label$9 }
	CALL eosio_assert([0], [10515])
	$11 = *($3)
	
.LABEL $label$9
	$10 = (int_64))((int_64)0 - $8)
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [10534])
	
.LABEL $label$10
	$7 = ($1 + [64])
	if ( ((int_64)$10 == (int_64))((int_64)0 - *($1))) ){ goto $label$11 }
	CALL eosio_assert([0], [9831])
	
.LABEL $label$11
	$4 = $4
	$3 = ($4 + [-80])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-11])
	*($5 + [24]) = $5
	*($5 + [60]) = $7
	*($5 + [32]) = $1
	$4 = ($1 + [8])
	*($5 + [36]) = $4
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [40])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [56])
	CALL $52(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [84]), $2, $3, [69])
	if ( ((uint_64)*($0 + [16]) > (uint_64)$10) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? (int_64))((int_64)1 - $8) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($5 + [32]) = *($4)
	if ( (CALL $209(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$13 }
	$3 = ($1 + [88])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$14 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4229865212519383040, ($5 + [24]), $10)
	*($3) = $1
	
.LABEL $label$14
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$13
	$global$0 = ($5 + [64])
}

void .FUNC $66 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9682])
	
.LABEL $label$5
	$4 = CALL $213($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([64])) + [16 align=4]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [12])
	*($3 + [52]) = ($5 + [16])
	*($3 + [56]) = ($5 + [28])
	*($3 + [60]) = ($5 + [40])
	CALL $141(($3 + [40]), ($3 + [32]))
	*($5 + [52]) = $1
	*($3 + [32]) = $5
	$7 = (int_64)
	*($3 + [40]) = $7((int_64)0 - *($5)))
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $137(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $216($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$4 = *($1 + [28])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [32])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	$4 = *($1 + [16])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [20])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [32])
	*(($1 = ($1 + [4]))) = (*($1) + [32])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [80])
	$global$0 = $3
	*($3 + [72]) = $2
	$4 = [0]
	*(($3 + [64])) = [0]
	*($3 + [48]) = (int_64)-1
	*($3 + [56]) = (int_64)0
	$2 = *($0)
	*($3 + [32]) = $2
	*($3 + [40]) = $2
	*($3 + [16]) = (int_64)0
	$5 = CALL db_find_i64($2, $2, (int_64)7035931339705839616, (int_64)7035931339705839616)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $90(($3 + [32]), $5)
	if ( ((int_32)*($4 + [8]) == (int_32)($3 + [32])) ){ goto $label$1 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$1
	$2 = *(( $4 ? ($3 + [16]) : $4 ))
	*($3 + [24]) = $2
	$2 = (int_64))((int_64)0 - $2)
	$5 = *(($1 + [28]))
	$6 = *($1 + [24])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$8:
	$4 = ($5 + [-24])
	$7 = *($4)
	if ( ((int_64))((int_64)0 - *($7)) == (int_64)$2) ){ goto $label$7 }
	$5 = $4
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	if ( ((int_32)*($7 + [96]) == (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [9631])
	$4 = *($7 + [8])
	if ( $4 ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$6
	$4 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035937633859534848, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $49($1, $4)
	if ( ((int_32)*($7 + [96]) == (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$5
	$4 = *($7 + [8])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$4 == (int_32)[2]), [10205])
	
.LABEL $label$3
	*($3 + [24]) = ((int_64)*($3 + [24]) + (int_64)1)
	CALL $121(($3 + [32]), ($3 + [24]), *($0))
	$2 = *($0)
	*($3 + [20]) = ($3 + [72])
	*($3 + [16]) = ($3 + [24])
	CALL $122(($3 + [8]), $1, $2, ($3 + [16]))
	CALL $123($0, $1, *($3 + [24]))
	
.LABEL $label$2
	$7 = *($3 + [56])
	if ( ($7 == 0) ){ goto $label$9 }
	$6 = ($3 + [60])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$13 }
	CALL _ZdlPv($5)
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$12 }
	$4 = *(($3 + [56]))
	goto $label$10 
	
.LABEL $label$11
	$4 = $7
	
.LABEL $label$10
	*($6) = $7
	CALL _ZdlPv($4)
	
.LABEL $label$9
	$global$0 = ($3 + [80])
}

void .FUNC $62 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	$6 = *($1)
	$7 = (int_64))((int_64)0 - $6)
	$3 = *($3)
	$8 = ($1 + [16])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	CALL $119($8, *($3), *($3 + [4]))
	*($1 + [12]) = [1]
	$9 = ($1 + [12])
	if ( ((int_64))((int_64)0 - *($1)) == (int_64)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9831])
	goto $label$3 
	
.LABEL $label$4
	*($1 + [12]) = [1]
	$9 = ($1 + [12])
	
.LABEL $label$3
	$11 = *($1 + [16])
	$10 = *(($1 + [20]))
	$12 = ($10 - $11)
	$13 = (CASTING uint_64)(uint_32 int_32($12 >> [1]))
	$3 = [13]
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$6 }
	$3 = (($12 & [-2]) + $3)
	
.LABEL $label$6
	$11 = ($1 + [28])
	$12 = *($1 + [28])
	$10 = *(($1 + [32]))
	$14 = ($10 - $12)
	$13 = (CASTING uint_64)(uint_32 int_32($14 >> [1]))
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$8 }
	$3 = (($14 & [-2]) + $3)
	
.LABEL $label$8
	$10 = ($3 + [8])
	if ( ($10 <= [513]) ){ goto $label$10 }
	$3 = CALL $213($10)
	goto $label$9 
	
.LABEL $label$10
	$3 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$9
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $10)
	*($5 + [16]) = $5
	*($5 + [32]) = $9
	*($5 + [36]) = $8
	*($5 + [40]) = $11
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [44]) = ($1 + [40])
	CALL $120(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [52]), $2, $3, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$13 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$7) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $216($3)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$7) ){ goto $label$11 }
	
.LABEL $label$12
	*(($0 + [16])) = ( (int_64)-2 ? (int_64))((int_64)1 - $6) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$11
	$global$0 = ($5 + [48])
}

void .FUNC $1 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0) = (int_64)0
	*($0 + [8]) = [0]
	*($3 + [15]) = $1
	$1 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($4 + [1])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[10]) ){ goto $label$3 }
	*($0) = [2]
	$1 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = (($4 + [17]) & [-16])
	$1 = CALL _Znwj($5)
	*($0) = ($5 | [1])
	*(($0 + [8])) = $1
	*(($0 + [4])) = [1]
	
.LABEL $label$2
	CALL memcpy($1, ($3 + [15]), [1])
	*($1 + [1]) = [0]
	CALL $189($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	$global$0 = ($3 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $180($0)
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9996])
	
.LABEL $label$2
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$5 }
	$4 = ($3 + [-24])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10046])
	$5 = *($2)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$6 }
	$2 = $3
	
.LOOP $label$7:
	$4 = *($2)
	*($2) = [0]
	$6 = ($2 + [-24])
	$3 = *($6)
	*($6) = $4
	if ( ($3 == 0) ){ goto $label$8 }
	CALL _ZdlPv($3)
	
.LABEL $label$8
	*(($2 + [-8])) = *(($2 + [16]))
	*(($2 + [-16])) = *(($2 + [8]))
	$2 = ($2 + [24])
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$7 }
	$4 = ($2 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$2) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ($3 + [-24])
	
.LABEL $label$4
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL _ZdlPv($2)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $4
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9996])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10046])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9682])
	
.LABEL $label$5
	$2 = CALL $213($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9705])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9705])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = (int_64)
	*($3 + [16]) = $9((int_64)0 - *($5)))
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $66(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $216($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [96]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9996])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10046])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($5 + [72])))
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [64]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($8 + [72])))
	
.LABEL $label$16
	CALL _ZdlPv($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [100]))
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9996])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [10046])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [84]))
	$9 = *(($1 + [88]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4229865212519383040, ($2 + [8]), (int_64))((int_64)0 - *($1))
	if ( ((int_32)$9) < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$0 = ($4 + [12])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

void .FUNC $83 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [136]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10472])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10515])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10534])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9831])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-144])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [24])
	*($5 + [36]) = ($1 + [40])
	*($5 + [40]) = ($1 + [56])
	*($5 + [44]) = ($1 + [72])
	*($5 + [48]) = ($1 + [88])
	*($5 + [52]) = ($1 + [104])
	*($5 + [56]) = ($1 + [120])
	CALL $129(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [140]), $2, $4, [136])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [64])
}

void .FUNC $82 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = [0]
	$6 = *($0 + [4])
	$7 = *(*($6) + [8])
	$8 = (uint_64)$7 >> (uint_64)(int_64)8
	$9 = $8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$9 = $10
	$11 = $5
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$9 = $10
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$11 = ((int_32)$5 < (int_32)[6])
	$12 = ($5 + [1])
	$5 = $12
	if ( $11 ){ goto $label$5 }
	$5 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [10229])
	$8 = (uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8)
	
.LABEL $label$1
	*($1) = $8
	$5 = *($6)
	*($1 + [8]) = *($5)
	*(($1 + [16])) = *(($5 + [8]))
	*($1 + [24]) = (int_64)0
	*(($1 + [32])) = $7
	*($1 + [40]) = (int_64)0
	*(($1 + [48])) = $7
	*($1 + [56]) = (int_64)0
	*(($1 + [64])) = $7
	*($1 + [72]) = (int_64)0
	*(($1 + [80])) = $7
	*($1 + [88]) = (int_64)0
	*(($1 + [96])) = $7
	*($1 + [104]) = (int_64)0
	*(($1 + [112])) = $7
	*($1 + [120]) = (int_64)0
	*(($1 + [128])) = $7
	$11 = $2
	$5 = ($11 + [-144])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($11 + [-8])
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [24])
	*($3 + [36]) = ($1 + [40])
	*($3 + [40]) = ($1 + [56])
	*($3 + [44]) = ($1 + [72])
	*($3 + [48]) = ($1 + [88])
	*($3 + [52]) = ($1 + [104])
	*($3 + [56]) = ($1 + [120])
	CALL $129(($3 + [24]), ($3 + [16]))
	$9 = *($1)
	*($1 + [140]) = CALL db_store_i64(*($4 + [8]), (int_64)7035938067009503232, *(*($0 + [8])), $9, $5, [136])
	if ( (uint_64)($9 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$global$0 = ($3 + [64])
}

void .FUNC $80 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [136]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	$3 = *($3)
	*($1 + [8]) = *($3)
	*(($1 + [16])) = *(($3 + [8]))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-144])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [24])
	*($5 + [36]) = ($1 + [40])
	*($5 + [40]) = ($1 + [56])
	*($5 + [44]) = ($1 + [72])
	*($5 + [48]) = ($1 + [88])
	*($5 + [52]) = ($1 + [104])
	*($5 + [56]) = ($1 + [120])
	CALL $129(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [140]), $2, $4, [136])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [64])
}

int_32 .FUNC $182 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $78(*($1), *($0 + [20]))
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9705])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $148 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $145 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$1
	*(($5 = CALL _Znwj([24])) + [8]) = $1
	*($5) = *(*($3))
	CALL memcpy(($4 + [16]), $5, [8])
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)7035931339705839616, $2, (int_64)7035931339705839616, ($4 + [16]), [8])
	*($5 + [12]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)7035931339705839616) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)7035931339705839617
	
.LABEL $label$2
	*($4 + [8]) = $5
	*($4 + [16]) = (int_64)7035931339705839616
	*($4 + [4]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)7035931339705839616
	*($3 + [16]) = $6
	*($4 + [8]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $148(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$1 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

void .FUNC $144 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	*($1) = *(*($3))
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $3, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7035931339705839616) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)7035931339705839617
	
.LABEL $label$3
	$global$0 = $5
}

int_32 .FUNC $147 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [100]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10153])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)7035937633859534848)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10099])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10099])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $49(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = [0]
	*($1 + [88]) = *(*($4 + [4]))
	$4 = *($1 + [64])
	$5 = ( *(($1 + [68])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($5 + [65])
	$6 = (CASTING uint_64)(uint_32 $5)
	$7 = ($1 + [64])
	$8 = ($1 + [88])
	$9 = ($1 + [8])
	$5 = *($0)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $9
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [12])
	*($3 + [44]) = ($1 + [16])
	*($3 + [48]) = ($1 + [32])
	*($3 + [52]) = $7
	*($3 + [56]) = ($1 + [80])
	*($3 + [60]) = $8
	CALL $124(($3 + [32]), ($3 + [24]))
	$10 = *($1)
	$6 = (int_64)
	*($1 + [100]) = CALL db_store_i64(*($5 + [8]), (int_64)7035937633859534848, *(*($0 + [8])), $6((int_64)0 - $10)), $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)*($5 + [16]) <= (uint_64)$6) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $216($2)
	if ( ((uint_64)*($5 + [16]) > (uint_64)$6) ){ goto $label$4 }
	
.LABEL $label$5
	*(($5 + [16])) = ( (int_64)-2 ? (int_64))((int_64)1 - $10) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [64])
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	CALL $142(*($1), *($0 + [12]))
	CALL $142(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9705])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [1]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [9890])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [2])
	$4 = (*($7) + [2])
	*($7) = $4
	$6 = ($6 + [2])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [1]) >= (uint_32)$1) ){ goto $label$3 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [1])
	$3 = ($5 + $1)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [0]
	$2 = ($2 - $4)
	$2 = ( ( $3 ? $2 : ($2 <= $3) ) ? [2147483647] : (int_32($2 >> [1]) <= [1073741823]) )
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL _Znwj(($2 << [1]))
	
.LABEL $label$4
	$4 = ($6 + ($2 << [1]))
	$3 = ($6 + ($5 << [1]))
	$6 = $3
	$2 = $1
	
.LOOP $label$5:
	*($6) = [0]
	$6 = ($6 + [2])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	$5 = ($3 + ($1 << [1]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$7 }
	CALL _ZdlPv($6)
	
.LABEL $label$7
	return (unreachable)
	
.LABEL $label$3
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [2])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	*(($0 + [4])) = ($3 + ($1 << [1]))
	return (unreachable)
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9947])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [1])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $143($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [1]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[1]) ){ goto $label$8 }
	CALL eosio_assert([0], [9705])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [2])
	$2 = (*($6) + [2])
	*($6) = $2
	$7 = ($7 + [2])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

int_64 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = [0]
	*(($2 + [56])) = [0]
	*($2 + [40]) = (int_64)-1
	*($2 + [48]) = (int_64)0
	$4 = *($0)
	*($2 + [24]) = $4
	*($2 + [32]) = $4
	*($2 + [8]) = (int_64)0
	$5 = CALL db_find_i64($4, $4, (int_64)-4366057016889413632, (int_64)-4366057016889413632)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $96(($2 + [24]), $5)
	if ( ((int_32)*($3 + [8]) == (int_32)($2 + [24])) ){ goto $label$1 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$1
	$4 = *(( $3 ? ($2 + [8]) : $3 ))
	*($2 + [16]) = $4
	$4 = (int_64))((int_64)0 - $4)
	$5 = *(($1 + [28]))
	$6 = *($1 + [24])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($5 + [-24])
	$7 = *($3)
	if ( ((int_64))((int_64)0 - *($7)) == (int_64)$4) ){ goto $label$7 }
	$5 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	if ( ((int_32)*($7 + [48]) == (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [9631])
	$3 = *($7 + [12])
	if ( $3 ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$6
	$3 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4366050722735718400, $4)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $61($1, $3)
	if ( ((int_32)*($7 + [48]) == (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$5
	$3 = *($7 + [12])
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$3 == (int_32)[2]), [9710])
	
.LABEL $label$3
	*($2 + [16]) = ((int_64)*($2 + [16]) + (int_64)1)
	CALL $115(($2 + [24]), ($2 + [16]), *($0))
	$4 = *($0)
	*($2) = ($2 + [16])
	CALL $116(($2 + [8]), $1, $4, $2)
	CALL $117($0, $1, *($2 + [16]))
	$7 = ($2 + [16])
	
.LABEL $label$2
	$4 = *($7)
	$7 = *($2 + [48])
	if ( ($7 == 0) ){ goto $label$9 }
	$6 = ($2 + [52])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$13 }
	CALL _ZdlPv($5)
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$12 }
	$3 = *(($2 + [48]))
	goto $label$10 
	
.LABEL $label$11
	$3 = $7
	
.LABEL $label$10
	*($6) = $7
	CALL _ZdlPv($3)
	
.LABEL $label$9
	$global$0 = ($2 + [64])
	return $4
}

void .FUNC $73 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	$6 = *($1)
	$7 = (int_64))((int_64)0 - $6)
	$3 = *($3)
	$8 = ($1 + [28])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$3 }
	CALL $119($8, *($3), *($3 + [4]))
	if ( ((int_64))((int_64)0 - *($1)) == (int_64)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9831])
	
.LABEL $label$3
	$9 = ($1 + [16])
	$11 = *($1 + [16])
	$10 = *(($1 + [20]))
	$12 = ($10 - $11)
	$13 = (CASTING uint_64)(uint_32 int_32($12 >> [1]))
	$3 = [13]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$5 }
	$3 = (($12 & [-2]) + $3)
	
.LABEL $label$5
	$11 = *($1 + [28])
	$10 = *(($1 + [32]))
	$12 = ($10 - $11)
	$13 = (CASTING uint_64)(uint_32 int_32($12 >> [1]))
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$7 }
	$3 = (($12 & [-2]) + $3)
	
.LABEL $label$7
	$10 = ($3 + [8])
	if ( ($10 <= [513]) ){ goto $label$9 }
	$3 = CALL $213($10)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$8
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $10)
	*($5 + [16]) = $5
	*($5 + [36]) = $9
	*($5 + [40]) = $8
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [12])
	*($5 + [44]) = ($1 + [40])
	CALL $120(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [52]), $2, $3, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$7) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $216($3)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$7) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? (int_64))((int_64)1 - $6) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [48])
}

void .FUNC $70 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [136]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	$6 = *($3)
	$7 = *($1)
	$8 = *(($1 + [16]))
	if ( ((int_64)$8 <= (int_64)293370680067) ){ goto $label$7 }
	if ( ((int_64)$8 == (int_64)293370680068) ){ goto $label$6 }
	if ( ((int_64)$8 == (int_64)293455873288) ){ goto $label$5 }
	if ( ((int_64)$8 != (int_64)310651471112) ){ goto $label$4 }
	$9 = [3]
	goto $label$3 
	
.LABEL $label$7
	$9 = [0]
	if ( ((int_64)$8 == (int_64)1397703940) ){ goto $label$3 }
	if ( ((int_64)$8 != (int_64)289176438024) ){ goto $label$4 }
	$9 = [2]
	goto $label$3 
	
.LABEL $label$6
	$9 = [1]
	goto $label$3 
	
.LABEL $label$5
	$9 = [4]
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [8634])
	$8 = *(($1 + [16]))
	$9 = [-1]
	
.LABEL $label$3
	$9 = ($6 + ($9 << [4]))
	if ( ((int_64)*($9 + [8]) == (int_64)$8) ){ goto $label$8 }
	CALL eosio_assert([0], [10644])
	
.LABEL $label$8
	$8 = (int_64)
	*($1 + [8]) = $8(*($1 + [8]) - *($9)))
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$9 }
	CALL eosio_assert([0], [10692])
	$8 = *(($1 + [8]))
	
.LABEL $label$9
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$10
	$9 = *($3 + [4])
	*($1 + [24]) = *($9)
	*(($1 + [32])) = *(($9 + [8]))
	$9 = *($3 + [4])
	*($1 + [40]) = *($9)
	*(($1 + [48])) = *(($9 + [8]))
	$9 = *($3 + [4])
	*($1 + [56]) = *($9)
	*(($1 + [64])) = *(($9 + [8]))
	$9 = *($3 + [4])
	*($1 + [72]) = *($9)
	*(($1 + [80])) = *(($9 + [8]))
	$9 = *($3 + [4])
	*($1 + [88]) = *($9)
	*(($1 + [96])) = *(($9 + [8]))
	$9 = *($3 + [4])
	*($1 + [104]) = *($9)
	*(($1 + [112])) = *(($9 + [8]))
	$3 = *($3 + [4])
	*($1 + [120]) = *($3)
	*(($1 + [128])) = *(($3 + [8]))
	$9 = ($1 + [120])
	$6 = ($1 + [104])
	$10 = ($1 + [88])
	$11 = ($1 + [72])
	$12 = ($1 + [56])
	$13 = ($1 + [40])
	$14 = ($1 + [24])
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$11 }
	CALL eosio_assert([0], [9831])
	
.LABEL $label$11
	$4 = $4
	$3 = ($4 + [-144])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	*($5 + [16]) = $5
	*($5 + [32]) = $14
	*($5 + [36]) = $13
	*($5 + [40]) = $12
	*($5 + [44]) = $11
	*($5 + [48]) = $10
	*($5 + [52]) = $6
	*($5 + [56]) = $9
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	CALL $129(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [140]), $2, $3, [136])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$global$0 = ($5 + [64])
}

void .FUNC $71 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	$6 = *($1)
	$7 = (int_64))((int_64)0 - $6)
	$3 = *($3)
	$8 = ($1 + [28])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	CALL $119($8, *($3), *($3 + [4]))
	*($1 + [12]) = [2]
	$9 = ($1 + [12])
	if ( ((int_64))((int_64)0 - *($1)) == (int_64)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9831])
	goto $label$3 
	
.LABEL $label$4
	*($1 + [12]) = [2]
	$9 = ($1 + [12])
	
.LABEL $label$3
	$10 = ($1 + [16])
	$12 = *($1 + [16])
	$11 = *(($1 + [20]))
	$13 = ($11 - $12)
	$14 = (CASTING uint_64)(uint_32 int_32($13 >> [1]))
	$3 = [13]
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$6 }
	$3 = (($13 & [-2]) + $3)
	
.LABEL $label$6
	$12 = *($1 + [28])
	$11 = *(($1 + [32]))
	$13 = ($11 - $12)
	$14 = (CASTING uint_64)(uint_32 int_32($13 >> [1]))
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$8 }
	$3 = (($13 & [-2]) + $3)
	
.LABEL $label$8
	$11 = ($3 + [8])
	if ( ($11 <= [513]) ){ goto $label$10 }
	$3 = CALL $213($11)
	goto $label$9 
	
.LABEL $label$10
	$3 = ($4 - (($11 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$9
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $11)
	*($5 + [16]) = $5
	*($5 + [32]) = $9
	*($5 + [36]) = $10
	*($5 + [40]) = $8
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [44]) = ($1 + [40])
	CALL $120(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [52]), $2, $3, $11)
	if ( ((uint_32)$11 >= (uint_32)[513]) ){ goto $label$13 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$7) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $216($3)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$7) ){ goto $label$11 }
	
.LABEL $label$12
	*(($0 + [16])) = ( (int_64)-2 ? (int_64))((int_64)1 - $6) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$11
	$global$0 = ($5 + [48])
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [112])
	$global$0 = $2
	$3 = *($0)
	*($2 + [40]) = [8945]
	*($2 + [44]) = CALL $210([8945])
	*($2 + [16]) = *($2 + [40])
	$4 = *(CALL $4(($2 + [48]), ($2 + [16])))
	$5 = *($0)
	*($2 + [24]) = [10201]
	*($2 + [28]) = CALL $210([10201])
	*($2 + [8]) = *($2 + [24])
	$0 = CALL $4(($2 + [32]), ($2 + [8]))
	*($2 + [56]) = $5
	*($2 + [64]) = *($0)
	*(($0 = CALL _Znwj([16]))) = $3
	*($0 + [8]) = $4
	*(($2 + [92])) = [0]
	$6 = ($0 + [16])
	*(($2 + [80])) = $6
	*(($2 + [76])) = $6
	*($2 + [72]) = $0
	*($2 + [84 align=4]) = (int_64)0
	$0 = *($1)
	$0 = ( *($1 + [4]) ? uint_32($0 >> [1]) : ($0 & [1]) )
	$3 = (CASTING uint_64)(uint_32 $0)
	$6 = ($2 + [84])
	
.LOOP $label$1:
	$0 = ($0 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $56($6, $0)
	$6 = *(($2 + [88]))
	$0 = *(($2 + [84]))
	goto $label$2 
	
.LABEL $label$3
	$6 = [0]
	$0 = [0]
	
.LABEL $label$2
	*($2 + [100]) = $0
	*($2 + [96]) = $0
	*($2 + [104]) = $6
	CALL $118(($2 + [96]), $1)
	CALL $58(($2 + [56]))
	$0 = *($2 + [84])
	if ( ($0 == 0) ){ goto $label$4 }
	*(($2 + [88])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$4
	$0 = *($2 + [72])
	if ( ($0 == 0) ){ goto $label$5 }
	*(($2 + [76])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$5
	$global$0 = ($2 + [112])
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $78(*($1), *($0 + [12]))
	CALL $78(*($1), *($0 + [16]))
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9890])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $75 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $47($0, $4)
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$2
	*($3) = $1
	CALL $113($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $114($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $150($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $185($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $185($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $180($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9996])
	
.LABEL $label$2
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$5 }
	$4 = ($3 + [-24])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10046])
	$5 = *($2)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$6 }
	$2 = $3
	
.LOOP $label$7:
	$4 = *($2)
	*($2) = [0]
	$6 = ($2 + [-24])
	$3 = *($6)
	*($6) = $4
	if ( ($3 == 0) ){ goto $label$8 }
	CALL _ZdlPv($3)
	
.LABEL $label$8
	*(($2 + [-8])) = *(($2 + [16]))
	*(($2 + [-16])) = *(($2 + [8]))
	$2 = ($2 + [24])
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$7 }
	$4 = ($2 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$2) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ($3 + [-24])
	
.LABEL $label$4
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL _ZdlPv($2)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $4
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [24])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9705])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [24])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9705])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [136]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9996])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10046])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [140]))
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9682])
	
.LABEL $label$5
	$2 = CALL $213($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([24])) + [8]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9705])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)-4366057016889413632
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = (int_64)-4366057016889413632
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $139(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $216($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9996])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10046])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	$7 = *($5 + [28])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($5 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$13
	$7 = *($5 + [16])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($5 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$14
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$2 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$15:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$16 }
	$7 = *($8 + [28])
	if ( ($7 == 0) ){ goto $label$17 }
	*(($8 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$17
	$7 = *($8 + [16])
	if ( ($7 == 0) ){ goto $label$18 }
	*(($8 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$18
	CALL _ZdlPv($8)
	
.LABEL $label$16
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$15 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*($1 + [52]))
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9682])
	
.LABEL $label$5
	$2 = CALL $213($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([24])) + [8]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9705])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)7035931339705839616
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = (int_64)7035931339705839616
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $148(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $216($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9996])
	
.LABEL $label$2
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$5 }
	$4 = ($3 + [-24])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10046])
	$5 = *($2)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$6 }
	$2 = $3
	
.LOOP $label$7:
	$4 = *($2)
	*($2) = [0]
	$6 = ($2 + [-24])
	$3 = *($6)
	*($6) = $4
	if ( ($3 == 0) ){ goto $label$8 }
	CALL _ZdlPv($3)
	
.LABEL $label$8
	*(($2 + [-8])) = *(($2 + [16]))
	*(($2 + [-16])) = *(($2 + [8]))
	$2 = ($2 + [24])
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$7 }
	$4 = ($2 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$2) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ($3 + [-24])
	
.LABEL $label$4
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL _ZdlPv($2)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $4
	CALL db_remove_i64(*($1 + [12]))
}

int_32 .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9682])
	
.LABEL $label$5
	$2 = CALL $213($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([24])) + [8]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9705])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)4229663799601135616
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = (int_64)4229663799601135616
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $161(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $216($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9996])
	
.LABEL $label$2
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$5 }
	$4 = ($3 + [-24])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10046])
	$5 = *($2)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$6 }
	$2 = $3
	
.LOOP $label$7:
	$4 = *($2)
	*($2) = [0]
	$6 = ($2 + [-24])
	$3 = *($6)
	*($6) = $4
	if ( ($3 == 0) ){ goto $label$8 }
	CALL _ZdlPv($3)
	
.LABEL $label$8
	*(($2 + [-8])) = *(($2 + [16]))
	*(($2 + [-16])) = *(($2 + [8]))
	$2 = ($2 + [24])
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$7 }
	$4 = ($2 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$2) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ($3 + [-24])
	
.LABEL $label$4
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL _ZdlPv($2)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $4
	CALL db_remove_i64(*($1 + [12]))
}

int_32 .FUNC $138 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [52]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10153])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4366050722735718400)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10099])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10099])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $61(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $139 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $130 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4229663799601135616, (int_64)4229663799601135616)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $92($0, $4)
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$2
	*($3) = $1
	CALL $159($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $160($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $131 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($6 = ($1 + [16]))) = *(($3 + [16]))
	*(($7 = ($1 + [8]))) = *(($3 + [8]))
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [4])
	*($5 + [24]) = $1
	*($5 + [32]) = $7
	*($5 + [36]) = ($1 + [12])
	*($5 + [40]) = $6
	*($5 + [44]) = ($1 + [20])
	CALL $165(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*(($1 + [28])), $2, $4, [24])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4455901497821387904) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)-4455901497821387903
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $132 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$1
	*(($5 = CALL _Znwj([36])) + [24]) = $1
	$3 = *($3)
	*($5) = *($3)
	*(($6 = ($5 + [8]))) = *(($3 + [8]))
	*(($7 = ($5 + [16]))) = *(($3 + [16]))
	*($4 + [40]) = ($4 + [24])
	*($4 + [36]) = $4
	*($4 + [32]) = $4
	*($4 + [48]) = ($4 + [32])
	*($4 + [60]) = ($5 + [4])
	*($4 + [56]) = $5
	*($4 + [64]) = $6
	*($4 + [68]) = ($5 + [12])
	*($4 + [72]) = $7
	*($4 + [76]) = ($5 + [20])
	CALL $165(($4 + [56]), ($4 + [48]))
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)-4455901497821387904, $2, (int_64)-4455901497821387904, $4, [24])
	*($5 + [28]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-4455901497821387904) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)-4455901497821387903
	
.LABEL $label$2
	*($4) = $5
	*($4 + [56]) = (int_64)-4455901497821387904
	*($4 + [32]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)-4455901497821387904
	*($3 + [16]) = $6
	*($4) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $164(($1 + [24]), $4, ($4 + [56]), ($4 + [32]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$global$0 = ($4 + [80])
}

void .FUNC $133 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $134 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	*($1) = *(*($3))
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $3, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4366057016889413632) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)-4366057016889413631
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $135 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$1
	*(($5 = CALL _Znwj([24])) + [8]) = $1
	*($5) = *(*($3))
	CALL memcpy(($4 + [16]), $5, [8])
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)-4366057016889413632, $2, (int_64)-4366057016889413632, ($4 + [16]), [8])
	*($5 + [12]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-4366057016889413632) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)-4366057016889413631
	
.LABEL $label$2
	*($4 + [8]) = $5
	*($4 + [16]) = (int_64)-4366057016889413632
	*($4 + [4]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)-4366057016889413632
	*($3 + [16]) = $6
	*($4 + [8]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $139(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$1 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	*($1 + [12]) = [0]
	*($1) = *(*(*($0 + [4])))
	$4 = *($0)
	*($1 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$5 = ($1 + [16])
	$6 = ($1 + [8])
	$7 = ($1 + [12])
	$9 = *($1 + [16])
	$8 = *(($1 + [20]))
	$10 = ($8 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [1]))
	$12 = [13]
	
.LOOP $label$1:
	$12 = ($12 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$2 }
	$12 = (($10 & [-2]) + $12)
	
.LABEL $label$2
	$9 = ($1 + [28])
	$10 = *($1 + [28])
	$8 = *(($1 + [32]))
	$13 = ($8 - $10)
	$11 = (CASTING uint_64)(uint_32 int_32($13 >> [1]))
	
.LOOP $label$3:
	$12 = ($12 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$4 }
	$12 = (($13 & [-2]) + $12)
	
.LABEL $label$4
	$8 = ($12 + [8])
	if ( ($8 <= [513]) ){ goto $label$6 }
	$12 = CALL $213($8)
	goto $label$5 
	
.LABEL $label$6
	$12 = ($2 - (($8 + [15]) & [-16]))
	$global$0 = $12
	
.LABEL $label$5
	*($3 + [4]) = $12
	*($3) = $12
	*($3 + [8]) = ($12 + $8)
	*($3 + [16]) = $3
	*($3 + [28]) = $6
	*($3 + [24]) = $1
	*($3 + [32]) = $7
	*($3 + [36]) = $5
	*($3 + [40]) = $9
	*($3 + [44]) = ($1 + [40])
	CALL $120(($3 + [24]), ($3 + [16]))
	$14 = *($1)
	$11 = (int_64)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-4366050722735718400, *(*($0 + [8])), $11((int_64)0 - $14)), $12, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)*($4 + [16]) <= (uint_64)$11) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $216($12)
	if ( ((uint_64)*($4 + [16]) > (uint_64)$11) ){ goto $label$7 }
	
.LABEL $label$8
	*(($4 + [16])) = ( (int_64)-2 ? (int_64))((int_64)1 - $14) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [48])
}

void .FUNC $137 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [28])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [32])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	$2 = *($1 + [16])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($1 + [20])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	(unreachable)
}

int_32 .FUNC $213 (int_32 $0)
{
	return CALL $214([10820], $0)
}

int_32 .FUNC $208 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $209 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $202 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $203 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = [-1]
	if ( CALL $202($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($1 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$2 = *($1 + [15])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

void .FUNC $200 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $201 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $197([21], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

int_64 .FUNC $206 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$17 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$17 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$18:
	$6 = *($5)
	if ( ($6 <= *($4)) ){ goto $label$20 }
	$6 = CALL $205($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$18 }
	$5 = ((int_32)$6 == (int_32)[45])
	if ( $5 ){ goto $label$21 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$16 }
	
.LABEL $label$21
	$7 = ( [-1] ? [0] : $5 )
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$15 }
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$17
	*(CALL $195()) = [22]
	return (int_64)0
	
.LABEL $label$16
	$7 = [0]
	if ( ((int_32)($1 | [16]) == (int_32)[16]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = CALL $205($0)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$13 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$11 
	
.LABEL $label$13
	$1 = ( $1 ? [10] : $1 )
	if ( ((uint_32)$1 > (uint_32)*(($6 + [19297]))) ){ goto $label$10 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$22
	CALL $204($0, (int_64)0)
	*(CALL $195()) = [22]
	return (int_64)0
	
.LABEL $label$12
	$6 = CALL $205($0)
	
.LABEL $label$11
	if ( ((int_32)($6 | [32]) != (int_32)[120]) ){ goto $label$23 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$9 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$8 
	
.LABEL $label$23
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$6 }
	$8 = (int_64)0
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$5 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$25:
	$6 = ((int_32)$5 * (int_32)[10])
	$1 = *($2)
	if ( ((uint_32)$1 >= (uint_32)*($9)) ){ goto $label$27 }
	*($2) = ($1 + [1])
	$5 = ($6 + $4)
	$6 = *($1)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 <= (uint_32)[9]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$5 = ($6 + $4)
	$6 = CALL $205($0)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$24 }
	
.LABEL $label$26
	if ( ($5 <= [429496729]) ){ goto $label$25 }
	
.LABEL $label$24
	$8 = (CASTING uint_64)(uint_32 $5)
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$1 = [10]
	$11 = (CASTING int_64)(int_32 $4)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$28:
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$30 }
	*($4) = ($6 + [1])
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = *($6)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 <= (uint_32)[9]) ){ goto $label$29 }
	goto $label$4 
	
.LABEL $label$30
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = CALL $205($0)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$4 }
	
.LABEL $label$29
	if ( ((uint_64)$8 >= (uint_64)(int_64)1844674407370955162) ){ goto $label$4 }
	$11 = (CASTING int_64)(int_32 $5)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 <= (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$28 }
	goto $label$3 
	
.LABEL $label$9
	$6 = CALL $205($0)
	
.LABEL $label$8
	$1 = [16]
	if ( (*(($6 + [19297])) <= [16]) ){ goto $label$6 }
	$6 = *(($0 + [104]))
	if ( ($6 == 0) ){ goto $label$31 }
	*(($5 = ($0 + [4]))) = (*($5) + [-1])
	
.LABEL $label$31
	if ( ($2 == 0) ){ goto $label$5 }
	$8 = (int_64)0
	if ( ($6 == 0) ){ goto $label$1 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	return (int_64)0
	
.LABEL $label$7
	$1 = [8]
	
.LABEL $label$6
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$32 }
	$8 = (int_64)0
	$5 = *(($6 + [19297]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$33 }
	$4 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$35:
	$4 = ($5 + ((int_32)$4 * (int_32)$1))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($9)) ){ goto $label$37 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [19297]))
	if ( ((uint_32)$4 <= (uint_32)[119304646]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$6 = CALL $205($0)
	$5 = *(($6 + [19297]))
	if ( ((uint_32)$4 > (uint_32)[119304646]) ){ goto $label$34 }
	
.LABEL $label$36
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$33
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$12 = (CASTING uint_64)(uint_32 $1)
	$13 = ((uint_64)(int_64)-1 / (uint_64)$12)
	if ( ((uint_64)$8 > (uint_64)$13) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$38:
	$11 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$10 = ((int_64)$8 * (int_64)$12)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$40 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$39 
	
.LABEL $label$40
	$6 = CALL $205($0)
	
.LABEL $label$39
	$8 = ((int_64)$10 + (int_64)$11)
	$5 = *(($6 + [19297]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$13) ){ goto $label$38 }
	goto $label$3 
	
.LABEL $label$32
	$9 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [19553]))
	$8 = (int_64)0
	$5 = *(($6 + [19297]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$41 }
	$4 = [0]
	$14 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$43:
	$4 = ($5 | ($4 << $9))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($14)) ){ goto $label$45 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [19297]))
	if ( ((uint_32)$4 <= (uint_32)[134217727]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$45
	$6 = CALL $205($0)
	$5 = *(($6 + [19297]))
	if ( ((uint_32)$4 > (uint_32)[134217727]) ){ goto $label$42 }
	
.LABEL $label$44
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$43 }
	
.LABEL $label$42
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$41
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$11 = (CASTING uint_64)(uint_32 $9)
	$12 = (uint_64)(int_64)-1 >> (uint_64)$11
	if ( (uint_64)($12) <= $8) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$46:
	$8 = ((int_64)$8 << (int_64)$11)
	$10 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$48 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$47 
	
.LABEL $label$48
	$6 = CALL $205($0)
	
.LABEL $label$47
	$8 = ((int_64)$8 | (int_64)$10)
	$5 = *(($6 + [19297]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$12) ){ goto $label$46 }
	goto $label$3 
	
.LABEL $label$5
	CALL $204($0, (int_64)0)
	return (int_64)0
	
.LABEL $label$4
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((uint_32)$1 <= (uint_32)*(($6 + [19297]))) ){ goto $label$2 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$50:
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*($4)) ){ goto $label$51 }
	*($5) = ($6 + [1])
	if ( ((uint_32)$1 > (uint_32)*((*($6) + [19297]))) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	if ( ((uint_32)$1 > (uint_32)*((CALL $205($0) + [19297]))) ){ goto $label$50 }
	
.LABEL $label$49
	*(CALL $195()) = [34]
	$7 = ( $7 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$8 = $3
	
.LABEL $label$2
	if ( (*(($0 + [104])) == 0) ){ goto $label$52 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$52
	if ( (uint_64)($8 <= $3) ){ goto $label$53 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$54 }
	if ( $7 ){ goto $label$54 }
	*(CALL $195()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$54
	if ( ((uint_64)$8 <= (uint_64)$3) ){ goto $label$53 }
	*(CALL $195()) = [34]
	return $3
	
.LABEL $label$53
	$10 = (CASTING int_64)(int_32 $7)
	$8 = (int_64))(((int_64)$8 ^ (int_64)$10) - $10)
	
.LABEL $label$1
	return $8
}

int_64 .FUNC $207 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $204($3, (int_64)0)
	$4 = CALL $206($3, $2, [1], (int_64)-1)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return $4
}

void .FUNC $204 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($2 - $3))
	*($0 + [120]) = $4
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	if ( ((int_64)$4 <= (int_64)$1) ){ goto $label$1 }
	*($0 + [104]) = ($3 + (CASTING uint_32)(uint_64 $1))
	return 
	
.LABEL $label$1
	*($0 + [104]) = $2
}

int_32 .FUNC $205 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = CALL $203($0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($0 + [8])
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$7 }
	$4 = *($0 + [4])
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($0 + [120]))) <= (int_64)(CASTING int_64)(int_32 ($3 - $4))) ){ goto $label$4 }
	
.LABEL $label$7
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$4
	*($0 + [104]) = (($4 + (CASTING uint_32)(uint_64 $1)) + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)*($0 + [120]) + (int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)$2 == (int_32)*($0)) ){ goto $label$8 }
	*($0) = $2
	
.LABEL $label$8
	return $2
}

int_32 .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [8]) = *(*($0))
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($3 + [8])) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($3 + [8])) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $5, [8])
	$4 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($3 + [8])) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $5, [8])
	$4 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($3 + [8])) - $4) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$10
	CALL memcpy($4, $5, [8])
	$4 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($3 + [8])) - $4) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$12
	CALL memcpy($4, $5, [8])
	$4 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($3 + [8])) - $4) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$13
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$14
	CALL memcpy($4, $5, [8])
	$4 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($3 + [8])) - $4) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$15
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [9890])
	$1 = *(($0 + [4]))
	
.LABEL $label$16
	CALL memcpy($1, $3, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($0 + [8])) - $1) > (int_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [9890])
	$1 = *(($0 + [4]))
	
.LABEL $label$17
	CALL memcpy($1, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $158(CALL $157($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9890])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $8 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$2 = *($1 + [8])
	if ( ((int_64)(((int_64)$2 & (int_64)2) == 0) == 0) ){ goto $label$3 }
	if ( ((int_64)(((int_64)$2 & (int_64)4) == 0) == 0) ){ goto $label$2 }
	CALL $187($0, [8574])
	goto $label$1 
	
.LABEL $label$3
	CALL $187($0, [8560])
	goto $label$1 
	
.LABEL $label$2
	CALL $187($0, [8567])
	
.LABEL $label$1
	$3 = ($1 + [8])
	$2 = *($3)
	if ( ((int_64)(((int_64)$2 & (int_64)16) == 0) == 0) ){ goto $label$10 }
	if ( ((int_64)(((int_64)$2 & (int_64)32) == 0) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $188($0, [44])
	CALL $187($0, [8578])
	$2 = *($3)
	if ( (int_64)(((int_64)$2 & (int_64)32) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $188($0, [44])
	CALL $187($0, [8590])
	$2 = *(($1 + [8]))
	if ( (int_64)(((int_64)$2 & (int_64)64) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((int_64)(((int_64)$2 & (int_64)64) == 0) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((int_64)(((int_64)$2 & (int_64)128) == 0) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $188($0, [44])
	CALL $187($0, [8602])
	if ( (int_64)(((int_64)*(($1 + [8])) & (int_64)128) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $188($0, [44])
	CALL $187($0, [8612])
	return 
	
.LABEL $label$4
}

void .FUNC $9 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [80])
	$global$0 = $3
	$4 = *(($1 + [24]))
	*((($3 + [32]) + [24])) = $4
	$5 = *(($1 + [16]))
	*((($3 + [32]) + [16])) = $5
	$6 = *(($1 + [8]))
	$7 = *($1)
	*(($3 + [16])) = $5
	*(($3 + [24])) = $4
	*($3 + [32]) = $7
	*($3 + [40]) = $6
	*($3) = $7
	*($3 + [8]) = $6
	CALL $5($3, [8], ($3 + [64]))
	$1 = *($2 + [8])
	$8 = *($2 + [4])
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$15 }
	*($8) = *($3 + [64])
	$8 = ($8 + [2])
	*(($2 + [4])) = $8
	$9 = [2]
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $10($2, ($3 + [64]))
	$9 = [2]
	$1 = *(($2 + [8]))
	$8 = *(($2 + [4]))
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $10($2, (($3 + [64]) | $9))
	$9 = [4]
	$1 = *(($2 + [8]))
	$8 = *(($2 + [4]))
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	*($8) = *($3 + [66])
	$8 = ($8 + $9)
	*(($2 + [4])) = $8
	$9 = [4]
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$11 }
	
.LABEL $label$12
	*($8) = *($3 + [68])
	$8 = ($8 + [2])
	*(($2 + $9)) = $8
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $10($2, (($3 + [64]) | $9))
	$1 = *(($2 + [8]))
	$8 = *(($2 + $9))
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $10($2, (($3 + [64]) | [6]))
	$1 = *(($2 + [8]))
	$8 = *(($2 + [4]))
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	*($8) = *($3 + [70])
	$8 = ($8 + [2])
	*(($2 + [4])) = $8
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$7 }
	
.LABEL $label$8
	*($8) = *($3 + [72])
	$8 = ($8 + [2])
	*(($2 + [4])) = $8
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $10($2, (($3 + [64]) | [8]))
	$1 = *(($2 + [8]))
	$8 = *(($2 + [4]))
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $10($2, (($3 + [64]) | [10]))
	$1 = *(($2 + [8]))
	$8 = *(($2 + [4]))
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	*($8) = *($3 + [74])
	$8 = ($8 + [2])
	*(($2 + [4])) = $8
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	*($8) = *($3 + [76])
	$8 = ($8 + [2])
	*(($2 + [4])) = $8
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $10($2, (($3 + [64]) | [12]))
	$8 = *(($2 + [4]))
	if ( ((int_32)$8 != (int_32)*(($2 + [8]))) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $10($2, (($3 + [64]) | [14]))
	$global$0 = ($3 + [80])
	return 
	
.LABEL $label$1
	*($8) = *($3 + [78])
	*(($2 + [4])) = ($8 + [2])
	$global$0 = ($3 + [80])
}

void .FUNC $123 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$3 = ($global$0 - [128])
	$global$0 = $3
	*((($3 + [80]) + [32])) = [0]
	*($3 + [96]) = (int_64)-1
	*($3 + [80]) = *($0)
	$4 = *($1 + [8])
	*($3 + [88]) = $4
	*($3 + [104]) = (int_64)0
	$5 = CALL db_lowerbound_i64(*($1), $4, (int_64)7035937633859534848, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = (($3 + [40]) + [16])
	$7 = (($3 + [40]) + [24])
	$8 = (($3 + [40]) + [32])
	$9 = (($3 + [40]) + [8])
	$10 = ($3 + [76])
	$11 = (($3 + [80]) + [28])
	$12 = [0]
	
.LOOP $label$2:
	CALL $49($1, $5)
	*($3 + [44]) = [0]
	*($3 + [40]) = $1
	if ( (uint_64)((int_64))($2 - *(*(CALL $147(($3 + [40])) + [4]))) <= (int_64)201) ){ goto $label$1 }
	$4 = *($0)
	*($3 + [44]) = [0]
	*($3 + [40]) = $1
	$5 = *(CALL $147(($3 + [40])) + [4])
	*($6) = (int_64)-1
	*($7) = (int_64)0
	*($8) = [0]
	$13 = *($5)
	*($9) = $13
	*($10) = [0]
	*($3 + [40]) = $4
	$5 = CALL db_lowerbound_i64($4, $13, (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$14 = CALL $51(($3 + [40]), $5)
	$4 = (int_64)-32766
	
.LOOP $label$4:
	$5 = [0]
	$15 = CALL db_next_i64(*($14 + [84]), $3)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $51(($3 + [40]), $15)
	
.LABEL $label$5
	CALL $85(($3 + [40]), $14)
	if ( (int_64)($4 == 0) ){ goto $label$3 }
	$4 = ((int_64)$4 + (int_64)1)
	$14 = $5
	if ( $5 ){ goto $label$4 }
	
.LABEL $label$3
	*($3 + [4]) = [0]
	*($3) = $1
	CALL $86($1, *(CALL $147($3) + [4]))
	*($3 + [4]) = [0]
	*($3) = $1
	$4 = (int_64))((int_64)0 - *(*(CALL $147($3) + [4])))
	$14 = *($11)
	$16 = *((($3 + [80]) + [24]))
	if ( ((int_32)$16 == (int_32)$14) ){ goto $label$9 }
	
.LOOP $label$11:
	$5 = ($14 + [-24])
	$15 = *($5)
	if ( ((int_64))((int_64)0 - *($15)) == (int_64)$4) ){ goto $label$10 }
	$14 = $5
	if ( ((int_32)$16 != (int_32)$5) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$16 == (int_32)$14) ){ goto $label$9 }
	if ( ((int_32)*($15 + [16]) != (int_32)($3 + [80])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$5 = CALL db_find_i64(*($3 + [80]), *((($3 + [80]) + [8])), (int_64)7035937269232857088, $4)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$6 }
	$15 = CALL $87(($3 + [80]), $5)
	if ( ((int_32)*($15 + [16]) == (int_32)($3 + [80])) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9631])
	
.LABEL $label$7
	CALL $88(($3 + [80]), $15)
	
.LABEL $label$6
	$4 = *($0)
	*($3 + [4]) = [0]
	*($3) = $1
	$5 = *(CALL $147($3) + [4])
	*(($3 + [16])) = (int_64)-1
	*(($17 = ($3 + [24]))) = (int_64)0
	*(($3 + [32])) = [0]
	*(($18 = ($3 + [8]))) = *($5 + [88])
	*($3) = $4
	*($3 + [124]) = [0]
	*($3 + [120]) = $1
	$4 = (int_64))((int_64)0 - *(*(CALL $147(($3 + [120])) + [4])))
	$19 = ($3 + [28])
	$14 = *($19)
	$16 = *($17)
	if ( ((int_32)$16 == (int_32)$14) ){ goto $label$15 }
	
.LOOP $label$17:
	$5 = ($14 + [-24])
	$15 = *($5)
	if ( ((int_64))((int_64)0 - *($15)) == (int_64)$4) ){ goto $label$16 }
	$14 = $5
	if ( ((int_32)$16 != (int_32)$5) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$16 == (int_32)$14) ){ goto $label$15 }
	if ( ((int_32)*($15 + [16]) != (int_32)$3) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$5 = CALL db_find_i64(*($3), *($18), (int_64)7035937269232857088, $4)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$12 }
	$15 = CALL $87($3, $5)
	if ( ((int_32)*($15 + [16]) == (int_32)$3) ){ goto $label$13 }
	
.LABEL $label$14
	CALL eosio_assert([0], [9631])
	
.LABEL $label$13
	CALL $88($3, $15)
	
.LABEL $label$12
	$15 = *($17)
	if ( ($15 == 0) ){ goto $label$18 }
	$5 = *($19)
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$20 }
	
.LOOP $label$21:
	$5 = ($5 + [-24])
	$14 = *($5)
	*($5) = [0]
	if ( ($14 == 0) ){ goto $label$22 }
	CALL _ZdlPv($14)
	
.LABEL $label$22
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$21 }
	$5 = *($17)
	goto $label$19 
	
.LABEL $label$20
	$5 = $15
	
.LABEL $label$19
	*($19) = $15
	CALL _ZdlPv($5)
	
.LABEL $label$18
	$15 = *($7)
	if ( ($15 == 0) ){ goto $label$23 }
	$16 = (($3 + [40]) + [28])
	$5 = *($16)
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$25 }
	
.LOOP $label$26:
	$5 = ($5 + [-24])
	$14 = *($5)
	*($5) = [0]
	if ( ($14 == 0) ){ goto $label$27 }
	CALL _ZdlPv($14)
	
.LABEL $label$27
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$26 }
	$5 = *($7)
	goto $label$24 
	
.LABEL $label$25
	$5 = $15
	
.LABEL $label$24
	*($16) = $15
	CALL _ZdlPv($5)
	
.LABEL $label$23
	$12 = ($12 + [1])
	if ( ((uint_32)$12 > (uint_32)[9]) ){ goto $label$1 }
	$5 = CALL db_lowerbound_i64(*($1), *(($1 + [8])), (int_64)7035937633859534848, (int_64)0)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$2 }
	
.LABEL $label$1
	$15 = *($3 + [104])
	if ( ($15 == 0) ){ goto $label$28 }
	$16 = ($3 + [108])
	$5 = *($16)
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$30 }
	
.LOOP $label$31:
	$5 = ($5 + [-24])
	$14 = *($5)
	*($5) = [0]
	if ( ($14 == 0) ){ goto $label$32 }
	CALL _ZdlPv($14)
	
.LABEL $label$32
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$31 }
	$5 = *(($3 + [104]))
	goto $label$29 
	
.LABEL $label$30
	$5 = $15
	
.LABEL $label$29
	*($16) = $15
	CALL _ZdlPv($5)
	
.LABEL $label$28
	$global$0 = ($3 + [128])
}

void .FUNC $122 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([112])) + [72]) = [0]
	*($3 + [64 align=4]) = (int_64)0
	*($3 + [96]) = $1
	CALL $146(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = (int_64)
	*($4 + [16]) = $2((int_64)0 - *($3)))
	$5 = *($3 + [100])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $111(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [72])))
	
.LABEL $label$5
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $121 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7035931339705839616, (int_64)7035931339705839616)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $90($0, $4)
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$2
	*($3) = $1
	CALL $144($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $145($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	CALL $140(*($1), *($0 + [12]))
	CALL $140(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9890])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $2 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	$5 = ($global$0 - [16])
	$global$0 = $5
	CALL eosio_assert(((int_32)*($3) != (int_32)[-1]), [8192])
	$2 = CALL $191($0, *($2), *($3))
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$3 }
	$3 = *($3)
	CALL $182($5, $0, $3, ($2 - $3), $0)
	if ( (*($1) & [1]) ){ goto $label$2 }
	*($1) = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_32)*($4) ^ (int_32)[1]), [8210])
	$global$0 = ($5 + [16])
	return $2
	
.LABEL $label$2
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$1
	CALL $185($1, [0])
	*(($1 + [8])) = *(($5 + [8]))
	*($1) = *($5)
	$global$0 = ($5 + [16])
	return $2
}

void .FUNC $126 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [48])
	$global$0 = $5
	*($5 + [39]) = $4
	*($5 + [40]) = $3
	$3 = *($1)
	$7 = *(($0 + [28]))
	$6 = *($0 + [24])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$7:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$3) ){ goto $label$6 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	if ( ((int_32)*(($9 + [52])) == (int_32)$0) ){ goto $label$8 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$8
	*($5 + [28]) = $9
	*($5 + [24]) = $0
	if ( $9 ){ goto $label$4 }
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$8 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4455901301129084928, $3)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$3 }
	$9 = CALL $104($0, $8)
	if ( ((int_32)*($9 + [52]) == (int_32)$0) ){ goto $label$9 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$9
	*($5 + [28]) = $9
	*($5 + [24]) = $0
	
.LABEL $label$4
	$3 = *($0)
	*($5 + [16]) = $2
	*($5 + [12]) = ($5 + [39])
	*($5 + [8]) = ($5 + [24])
	*($5 + [20]) = ($5 + [40])
	CALL $151($0, $9, $3, ($5 + [8]))
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$3
	*($5 + [28]) = [0]
	*($5 + [24]) = $0
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *($0)
	*($5 + [8]) = $1
	*($5 + [20]) = $2
	*($5 + [12]) = ($5 + [39])
	*($5 + [16]) = ($5 + [40])
	CALL $152($5, $0, $3, ($5 + [8]))
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$1
	$global$0 = ($5 + [48])
}

void .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

void .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $118(*($1), *($0 + [20]))
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9890])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9890])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $14 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	$5 = ($global$0 - [608])
	$global$0 = $5
	$6 = *($0)
	if ( ((int_64)*($1) == (int_64)$6) ){ goto $label$1 }
	if ( ((int_64)*($2) != (int_64)$6) ){ goto $label$1 }
	$2 = *($4)
	$7 = CALL $210([8971])
	if ( ((int_32)$7 != (int_32)( *($4 + [4]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$2 }
	if ( (CALL $192($4, [0], [-1], [8971], $7) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($5 + [568]) = [0]
	*($5 + [560]) = (int_64)0
	*($5 + [552]) = (int_64)0
	*($5 + [544]) = [0]
	*($5 + [536]) = (int_64)0
	*($5 + [504]) = [0]
	*($5 + [496]) = (int_64)0
	*($5 + [488]) = (int_64)0
	$4 = CALL $181(($5 + [472]), $4)
	CALL $3($4, ($5 + [560]), ($5 + [552]), ($5 + [536]), ($5 + [528]), ($5 + [527]), ($5 + [512]), ($5 + [496]), ($5 + [488]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$3
	$8 = *($5 + [488])
	if ( (int_64)($8 == 0) ){ goto $label$4 }
	CALL eosio_assert(CALL $fimport$8($8), [8986])
	
.LABEL $label$4
	$4 = [0]
	*(($5 + [464])) = [0]
	*($5 + [448]) = (int_64)-1
	*($5 + [456]) = (int_64)0
	$9 = *($0)
	*($5 + [432]) = $9
	$6 = *($5 + [552])
	*($5 + [440]) = $6
	*($5 + [32]) = (int_64)0
	$2 = CALL db_find_i64($9, $6, (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = CALL $47(($5 + [432]), $2)
	if ( ((int_32)*($4 + [8]) == (int_32)($5 + [432])) ){ goto $label$5 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$5
	CALL eosio_assert(((int_64)*(( $4 ? ($5 + [32]) : $4 )) == (int_64)1), [8788])
	$9 = *($3 + [8])
	if ( ((int_64)$9 <= (int_64)293370680067) ){ goto $label$12 }
	if ( ((int_64)$9 == (int_64)293370680068) ){ goto $label$11 }
	if ( ((int_64)$9 == (int_64)293455873288) ){ goto $label$10 }
	if ( ((int_64)$9 != (int_64)310651471112) ){ goto $label$9 }
	CALL $48($0, $3, (int_64)100000)
	if ( ((int_64)$6 == (int_64)-8173734935706730496) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$12
	$10 = (int_64)1000
	if ( ((int_64)$9 == (int_64)1397703940) ){ goto $label$13 }
	if ( ((int_64)$9 != (int_64)289176438024) ){ goto $label$9 }
	$10 = (int_64)10000
	
.LABEL $label$13
	CALL $48($0, $3, $10)
	if ( ((int_64)$6 != (int_64)-8173734935706730496) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$11
	CALL $48($0, $3, (int_64)1000000)
	if ( ((int_64)$6 == (int_64)-8173734935706730496) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$10
	CALL $48($0, $3, (int_64)10000000)
	if ( ((int_64)$6 == (int_64)-8173734935706730496) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8634])
	CALL $48($0, $3, (int_64)2147483647)
	if ( ((int_64)$6 == (int_64)-8173734935706730496) ){ goto $label$7 }
	
.LABEL $label$8
	if ( ((int_64)$6 != (int_64)5606078077002753536) ){ goto $label$6 }
	CALL eosio_assert(((int_32)*($5 + [527]) != (int_32)[6]), [9052])
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert(((int_32)*($5 + [527]) != (int_32)[7]), [9018])
	
.LABEL $label$6
	$4 = [0]
	*(($5 + [424])) = [0]
	*($5 + [408]) = (int_64)-1
	$10 = *($0)
	*($5 + [392]) = $10
	*($5 + [416]) = (int_64)0
	$9 = *($5 + [528])
	*($5 + [400]) = $6
	$11 = [0]
	$2 = CALL db_find_i64($10, $6, (int_64)7035937633859534848, (int_64))((int_64)0 - $9)
	if ( ((int_32)$2) < (int_32)[0]) ){ goto $label$14 }
	$11 = CALL $49(($5 + [392]), $2)
	if ( ((int_32)*($11 + [96]) == (int_32)($5 + [392])) ){ goto $label$14 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$14
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [9083])
	CALL eosio_assert(((int_32)*($11 + [8]) == (int_32)[1]), [9101])
	$10 = CALL current_time()
	$2 = (CASTING uint_32)(uint_64 ((uint_64)$10 / (uint_64)(int_64)1000000))
	if ( ((uint_32)*($11 + [12]) > (uint_32)$2) ){ goto $label$15 }
	$4 = ((uint_32)*($11 + [16]) > (uint_32)$2)
	
.LABEL $label$15
	CALL eosio_assert($4, [9127])
	CALL eosio_assert(((int_64)$8 != (int_64)*($1)), [9157])
	$4 = [0]
	*((($5 + [352]) + [32])) = [0]
	*($5 + [368]) = (int_64)-1
	*($5 + [376]) = (int_64)0
	$10 = *($0)
	*($5 + [352]) = $10
	*($5 + [360]) = $10
	$10 = CALL $50($0, ($5 + [352]))
	*((($5 + [312]) + [32])) = [0]
	*($5 + [328]) = (int_64)-1
	*($5 + [336]) = (int_64)0
	*($5 + [348]) = [0]
	$12 = *($0)
	*($5 + [312]) = $12
	*($5 + [320]) = $9
	$2 = CALL db_lowerbound_i64($12, $9, (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$16 }
	$2 = CALL db_next_i64(*(CALL $51(($5 + [312]), $2) + [84]), ($5 + [32]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$17 }
	$4 = [1]
	
.LOOP $label$18:
	$4 = ($4 + [1])
	$2 = CALL db_next_i64(*(CALL $51(($5 + [312]), $2) + [84]), ($5 + [32]))
	if ( ((int_32)$2 >= (int_32)[0]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$4 = [1]
	
.LABEL $label$16
	CALL eosio_assert(((int_32)$4 < (int_32)[501]), [9182])
	$9 = *($0)
	if ( ((int_64)*($5 + [312]) == (int_64)CALL current_receiver()) ){ goto $label$19 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$19
	*(($4 = CALL _Znwj([96])) + [16]) = (int_64)0
	*($4 + [8]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [80]) = ($5 + [312])
	*($4) = $10
	*($4 + [24]) = *($3)
	*(($4 + [32])) = *(($3 + [8]))
	*($4 + [48]) = CALL current_time()
	*($4 + [16]) = $8
	*($4 + [8]) = *($1)
	$2 = *($5 + [527])
	*($4 + [40]) = $2
	*($4 + [56]) = *((( [10736] ? [10768] : ((int_64)$6 == (int_64)-8173734935706730496) ) + ($2 << [2])))
	*($5 + [208]) = (($5 + [32]) + [69])
	*($5 + [204]) = ($5 + [32])
	*($5 + [200]) = ($5 + [32])
	*($5 + [256]) = ($5 + [200])
	$2 = ($4 + [8])
	*($5 + [276]) = $2
	*($5 + [272]) = $4
	*($5 + [280]) = ($4 + [16])
	*($5 + [284]) = ($4 + [24])
	*($5 + [288]) = ($4 + [40])
	*($5 + [292]) = ($4 + [48])
	*($5 + [296]) = ($4 + [56])
	*($5 + [300]) = ($4 + [64])
	CALL $52(($5 + [272]), ($5 + [256]))
	$12 = *($4)
	$8 = (int_64)
	$7 = (($5 + [312]) + [8])
	*($4 + [84]) = CALL db_store_i64(*($7), (int_64)4229865212519383040, $9, $8((int_64)0 - $12)), ($5 + [32]), [69])
	$13 = (($5 + [312]) + [16])
	if ( ((uint_64)*($13) > (uint_64)$8) ){ goto $label$20 }
	*($13) = ( (int_64)-2 ? (int_64))((int_64)1 - $12) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	$8 = *($7)
	$12 = *($4)
	*($5 + [272]) = *($2)
	*($4 + [88]) = CALL db_idx64_store($8, (int_64)4229865212519383040, $9, (int_64))((int_64)0 - $12), ($5 + [272]))
	*($5 + [272]) = $4
	$9 = (int_64)
	*($5 + [32]) = $9((int_64)0 - *($4)))
	$7 = *(($4 + [84]))
	*($5 + [200]) = $7
	$13 = ($5 + [340])
	$2 = *($13)
	if ( ((uint_32)$2 >= (uint_32)*((($5 + [312]) + [32]))) ){ goto $label$23 }
	*($2 + [8]) = $9
	*($2 + [16]) = $7
	*($5 + [272]) = [0]
	*($2) = $4
	*($13) = ($2 + [24])
	$2 = *($5 + [272])
	$4 = [0]
	*($5 + [272]) = [0]
	if ( $2 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL $53(($5 + [336]), ($5 + [272]), ($5 + [32]), ($5 + [200]))
	$2 = *($5 + [272])
	$4 = [0]
	*($5 + [272]) = [0]
	if ( ($2 == 0) ){ goto $label$21 }
	
.LABEL $label$22
	CALL _ZdlPv($2)
	
.LABEL $label$21
	*(($5 + [304])) = $4
	*($5 + [288]) = (int_64)-1
	*($5 + [296]) = (int_64)0
	$9 = *($0)
	*($5 + [272]) = $9
	$2 = ($3 + [8])
	$8 = *($2)
	*($5 + [280]) = $6
	$7 = CALL db_find_i64($9, $6, (int_64)7035938067009503232, (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_32)$7) < (int_32)$4) ){ goto $label$24 }
	$4 = CALL $54(($5 + [272]), $7)
	if ( ((int_32)*($4 + [136]) == (int_32)($5 + [272])) ){ goto $label$24 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$24
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [9209])
	$6 = *(($4 + [16]))
	*((($5 + [256]) + [8])) = $6
	*($5 + [256]) = *($4 + [8])
	if ( ((int_64)$6 == (int_64)*($2)) ){ goto $label$25 }
	CALL eosio_assert([0], [10472])
	
.LABEL $label$25
	$6 = ((int_64)*($5 + [256]) + (int_64)*($3))
	*($5 + [256]) = $6
	if ( ((int_64)$6 <= (int_64)-4611686018427387904) ){ goto $label$27 }
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$26 }
	CALL eosio_assert([0], [10534])
	goto $label$26 
	
.LABEL $label$27
	CALL eosio_assert([0], [10515])
	
.LABEL $label$26
	$6 = *($0)
	*($5 + [36]) = ($5 + [527])
	*($5 + [32]) = ($5 + [256])
	*($5 + [40]) = $3
	CALL $55(($5 + [272]), $4, $6, ($5 + [32]))
	$8 = ((int_64)*($4 + [24]) * (int_64)200)
	$9 = ((int_64)*($4 + [40]) * (int_64)200)
	$9 = ( $9 ? $8 : ((int_64)$8 < (int_64)$9) )
	$6 = ((int_64)*($4 + [56]) * (int_64)900)
	CALL eosio_assert(((uint_64)((int_64)*($5 + [256]) / (int_64)5) >= (uint_64)((uint_64)((int_64)((int_64)((int_64)((int_64)( $6 ? $9 : ((int_64)$9 < (int_64)$6) ) + (int_64)((int_64)*($3) * (int_64)*(((*($5 + [527]) << [2]) + [8528])))) + (int_64)((int_64)*($4 + [104]) * (int_64)2100)) + (int_64)((int_64)((int_64)*($4 + [88]) + (int_64)*($4 + [72])) * (int_64)1200)) + (int_64)((int_64)*($4 + [120]) * (int_64)4100)) / (uint_64)(int_64)100)), [9223])
	$2 = [0]
	*($5 + [248]) = [0]
	*($5 + [240]) = (int_64)0
	CALL $185(($5 + [240]), [128])
	$4 = *($5 + [560])
	$7 = ($4 & [1])
	CALL $189(($5 + [240]), ( *((($5 + [560]) + [8])) ? (($5 + [560]) | [1]) : $7 ), ( *($5 + [564]) ? uint_32($4 >> [1]) : $7 ))
	CALL $188(($5 + [240]), [124])
	$4 = *($5 + [536])
	$7 = ($4 & [1])
	CALL $189(($5 + [240]), ( *((($5 + [536]) + [8])) ? (($5 + [536]) | [1]) : $7 ), ( *($5 + [540]) ? uint_32($4 >> [1]) : $7 ))
	CALL $188(($5 + [240]), [124])
	$6 = *($1)
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$31 }
	$7 = *([0] + [8496])
	
.LOOP $label$33:
	*((($5 + [32]) + ($4 = $2))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$6 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$4 == (int_32)[12]) )))))
	$2 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[11]) ){ goto $label$32 }
	$6 = ((int_64)$6 << (int_64)5)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$33 }
	
.LABEL $label$32
	*(($5 + [208])) = [0]
	*($5 + [200]) = (int_64)0
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$30 }
	*($5 + [200]) = ($2 << [1])
	$7 = (($5 + [200]) | [1])
	goto $label$29 
	
.LABEL $label$31
	*((($5 + [200]) + [8])) = [0]
	*($5 + [200]) = (int_64)0
	*($5 + [200]) = [0]
	$4 = (($5 + [200]) | [1])
	$2 = $4
	goto $label$28 
	
.LABEL $label$30
	$13 = (($2 + [16]) & [-16])
	$7 = CALL _Znwj($13)
	*($5 + [200]) = ($13 | [1])
	*($5 + [208]) = $7
	*($5 + [204]) = $2
	
.LABEL $label$29
	$13 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$34:
	*(($7 + $4)) = *((($5 + [32]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$13 != (int_32)$4) ){ goto $label$34 }
	$2 = ($7 + $2)
	$4 = (($5 + [200]) | [1])
	
.LABEL $label$28
	*($2) = [0]
	$2 = *($5 + [200])
	$7 = ($2 & [1])
	CALL $189(($5 + [240]), ( *($5 + [208]) ? $4 : $7 ), ( *($5 + [204]) ? uint_32($2 >> [1]) : $7 ))
	if ( ((*($5 + [200]) & [1]) == 0) ){ goto $label$35 }
	CALL _ZdlPv(*(($5 + [208])))
	
.LABEL $label$35
	CALL $188(($5 + [240]), [124])
	$4 = *($5 + [496])
	$2 = ($4 & [1])
	CALL $189(($5 + [240]), ( *((($5 + [496]) + [8])) ? (($5 + [496]) | [1]) : $2 ), ( *($5 + [500]) ? uint_32($4 >> [1]) : $2 ))
	CALL $188(($5 + [240]), [124])
	*($5 + [208]) = [0]
	*($5 + [200]) = (int_64)0
	$2 = (($5 + [200]) | [1])
	$6 = $10
	
.LOOP $label$36:
	$9 = ((uint_64)$6 / (uint_64)(int_64)10)
	$4 = (CASTING uint_32)(uint_64 (int_64))($6 - ((int_64)$9 * (int_64)10))
	CALL $1(($5 + [32]), int_32((( ($4) | [48]) ? ($4 + [55]) : ($4 <= [10]) ) << [24]) >> [24]), ($5 + [200]))
	if ( (*($5 + [200]) & [1]) ){ goto $label$38 }
	*($5 + [200]) = [0]
	goto $label$37 
	
.LABEL $label$38
	*(*((($5 + [200]) + [8]))) = [0]
	*($5 + [204]) = [0]
	
.LABEL $label$37
	CALL $185(($5 + [200]), [0])
	*((($5 + [200]) + [8])) = *((($5 + [32]) + [8]))
	*($5 + [200]) = *($5 + [32])
	$4 = ((uint_64)$6 > (uint_64)(int_64)9)
	$6 = $9
	if ( $4 ){ goto $label$36 }
	$4 = *($5 + [200])
	$7 = ($4 & [1])
	$13 = ($5 + [208])
	CALL $189(($5 + [240]), ( *($13) ? $2 : $7 ), ( *($5 + [204]) ? uint_32($4 >> [1]) : $7 ))
	if ( ((*($5 + [200]) & [1]) == 0) ){ goto $label$39 }
	CALL _ZdlPv(*($13))
	
.LABEL $label$39
	CALL $188(($5 + [240]), [124])
	$9 = *($5 + [552])
	if ( ((int_64)$9 == (int_64)5606078077002753536) ){ goto $label$41 }
	if ( ((int_64)$9 != (int_64)-8173734935706730496) ){ goto $label$40 }
	CALL $187(($5 + [240]), *(((*($5 + [527]) << [2]) + [8432])))
	goto $label$40 
	
.LABEL $label$41
	CALL $187(($5 + [240]), *(((*($5 + [527]) << [2]) + [8464])))
	
.LABEL $label$40
	CALL $188(($5 + [240]), [124])
	CALL $187(($5 + [240]), [8418])
	$12 = *($0)
	*($5 + [184]) = [8945]
	*($5 + [188]) = CALL $210([8945])
	*($5 + [24]) = *($5 + [184])
	$14 = *(CALL $4(($5 + [192]), ($5 + [24])))
	$6 = *(($3 + [8]))
	if ( ((int_64)$6 <= (int_64)293370680067) ){ goto $label$46 }
	if ( ((int_64)$6 == (int_64)293370680068) ){ goto $label$44 }
	if ( ((int_64)$6 == (int_64)293455873288) ){ goto $label$45 }
	if ( ((int_64)$6 == (int_64)310651471112) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$46
	$8 = (int_64)6138663591592764928
	if ( ((int_64)$6 == (int_64)1397703940) ){ goto $label$42 }
	if ( ((int_64)$6 != (int_64)289176438024) ){ goto $label$43 }
	
.LABEL $label$45
	$8 = (int_64)4301877912145143680
	goto $label$42 
	
.LABEL $label$44
	$8 = (int_64)-4492738244669860560
	goto $label$42 
	
.LABEL $label$43
	CALL eosio_assert([0], [8634])
	$8 = (int_64)0
	
.LABEL $label$42
	*($5 + [168]) = [8625]
	*($5 + [172]) = CALL $210([8625])
	*($5 + [16]) = *($5 + [168])
	$4 = CALL $4(($5 + [176]), ($5 + [16]))
	*((($5 + [32]) + [24])) = *(($3 + [8]))
	*($5 + [40]) = (int_64)4229868842502116224
	*($5 + [32]) = *($0)
	*($5 + [48]) = *($3)
	$2 = CALL $181((($5 + [32]) + [32]), ($5 + [240]))
	*(($7 = (($5 + [200]) + [24]))) = [0]
	*($5 + [200]) = $8
	*($5 + [216]) = (int_64)0
	*($5 + [208]) = *($4)
	*(($4 = CALL _Znwj([16]))) = $12
	*($4 + [8]) = $14
	*((($5 + [200]) + [36])) = [0]
	$13 = ($4 + [16])
	*($7) = $13
	*(($5 + [220])) = $13
	*($5 + [216]) = $4
	*($5 + [228 align=4]) = (int_64)0
	$4 = *($2)
	$2 = ( *((($5 + [32]) + [36])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($2 + [32])
	$6 = (CASTING uint_64)(uint_32 $2)
	$2 = ($5 + [228])
	
.LOOP $label$47:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$47 }
	if ( ($4 == 0) ){ goto $label$49 }
	CALL $56($2, $4)
	$2 = *(($5 + [232]))
	$4 = *(($5 + [228]))
	goto $label$48 
	
.LABEL $label$49
	$2 = [0]
	$4 = [0]
	
.LABEL $label$48
	*($5 + [580]) = $4
	*($5 + [576]) = $4
	*($5 + [584]) = $2
	*($5 + [592]) = ($5 + [576])
	*($5 + [600]) = ($5 + [32])
	CALL $57(($5 + [600]), ($5 + [592]))
	CALL $58(($5 + [200]))
	$4 = *($5 + [228])
	if ( ($4 == 0) ){ goto $label$50 }
	*(($5 + [232])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$50
	$4 = *($5 + [216])
	if ( ($4 == 0) ){ goto $label$51 }
	*(($5 + [220])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$51
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$52 }
	CALL _ZdlPv(*(($5 + [72])))
	
.LABEL $label$52
	$6 = *($0)
	*($5 + [152]) = [8945]
	*($5 + [156]) = CALL $210([8945])
	*($5 + [8]) = *($5 + [152])
	$8 = *(CALL $4(($5 + [160]), ($5 + [8])))
	$12 = *($0)
	*($5 + [136]) = [9249]
	*($5 + [140]) = CALL $210([9249])
	*($5) = *($5 + [136])
	$4 = CALL $4(($5 + [144]), $5)
	*((($5 + [32]) + [40])) = *(($3 + [8]))
	*($5 + [80]) = *($5 + [527])
	*($5 + [64]) = *($3)
	*(($5 + [104])) = *(($11 + [40]))
	*(($5 + [112])) = *(($11 + [48]))
	*(($5 + [120])) = *(($11 + [56]))
	*($5 + [40]) = $9
	*($5 + [56]) = $10
	*($5 + [32]) = *($1)
	*($5 + [48]) = *($5 + [528])
	*($5 + [96]) = *($11 + [32])
	*(($2 = ($5 + [224]))) = [0]
	*($5 + [200]) = $12
	*($5 + [216]) = (int_64)0
	*($5 + [208]) = *($4)
	*(($4 = CALL _Znwj([16]))) = $6
	*($4 + [8]) = $8
	*(($5 + [236])) = [0]
	$0 = ($4 + [16])
	*($2) = $0
	*(($5 + [220])) = $0
	*($5 + [216]) = $4
	*($5 + [228 align=4]) = (int_64)0
	CALL $56(($5 + [228]), [81])
	$0 = ($5 + [232])
	$4 = *($0)
	$2 = *($5 + [228])
	*($5 + [580]) = $2
	*($5 + [576]) = $2
	*($5 + [584]) = $4
	*($5 + [592]) = ($5 + [576])
	*($5 + [600]) = ($5 + [32])
	CALL $59(($5 + [600]), ($5 + [592]))
	CALL $58(($5 + [200]))
	$4 = *($5 + [228])
	if ( ($4 == 0) ){ goto $label$53 }
	*($0) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$53
	$4 = *($5 + [216])
	if ( ($4 == 0) ){ goto $label$54 }
	*(($5 + [220])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$54
	if ( ((*($5 + [240]) & [1]) == 0) ){ goto $label$55 }
	CALL _ZdlPv(*(($5 + [248])))
	
.LABEL $label$55
	$0 = *($5 + [296])
	if ( ($0 == 0) ){ goto $label$56 }
	$7 = ($5 + [300])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$58 }
	
.LOOP $label$59:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$60 }
	CALL _ZdlPv($2)
	
.LABEL $label$60
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$59 }
	$4 = *(($5 + [296]))
	goto $label$57 
	
.LABEL $label$58
	$4 = $0
	
.LABEL $label$57
	*($7) = $0
	CALL _ZdlPv($4)
	
.LABEL $label$56
	$0 = *($5 + [336])
	if ( ($0 == 0) ){ goto $label$61 }
	$7 = ($5 + [340])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$63 }
	
.LOOP $label$64:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$65 }
	CALL _ZdlPv($2)
	
.LABEL $label$65
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$64 }
	$4 = *(($5 + [336]))
	goto $label$62 
	
.LABEL $label$63
	$4 = $0
	
.LABEL $label$62
	*($7) = $0
	CALL _ZdlPv($4)
	
.LABEL $label$61
	$0 = *($5 + [376])
	if ( ($0 == 0) ){ goto $label$66 }
	$7 = ($5 + [380])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$68 }
	
.LOOP $label$69:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$70 }
	CALL _ZdlPv($2)
	
.LABEL $label$70
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$69 }
	$4 = *(($5 + [376]))
	goto $label$67 
	
.LABEL $label$68
	$4 = $0
	
.LABEL $label$67
	*($7) = $0
	CALL _ZdlPv($4)
	
.LABEL $label$66
	$0 = *($5 + [416])
	if ( ($0 == 0) ){ goto $label$71 }
	$7 = ($5 + [420])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$73 }
	
.LOOP $label$74:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$75 }
	if ( ((*($2 + [64]) & [1]) == 0) ){ goto $label$76 }
	CALL _ZdlPv(*(($2 + [72])))
	
.LABEL $label$76
	CALL _ZdlPv($2)
	
.LABEL $label$75
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$74 }
	$4 = *(($5 + [416]))
	goto $label$72 
	
.LABEL $label$73
	$4 = $0
	
.LABEL $label$72
	*($7) = $0
	CALL _ZdlPv($4)
	
.LABEL $label$71
	$0 = *($5 + [456])
	if ( ($0 == 0) ){ goto $label$77 }
	$7 = ($5 + [460])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$79 }
	
.LOOP $label$80:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$81 }
	CALL _ZdlPv($2)
	
.LABEL $label$81
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$80 }
	$4 = *(($5 + [456]))
	goto $label$78 
	
.LABEL $label$79
	$4 = $0
	
.LABEL $label$78
	*($7) = $0
	CALL _ZdlPv($4)
	
.LABEL $label$77
	if ( (*($5 + [496]) & [1]) ){ goto $label$85 }
	if ( (*($5 + [536]) & [1]) ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$85
	CALL _ZdlPv(*(($5 + [504])))
	if ( ((*($5 + [536]) & [1]) == 0) ){ goto $label$83 }
	
.LABEL $label$84
	CALL _ZdlPv(*(($5 + [544])))
	if ( (*($5 + [560]) & [1]) ){ goto $label$82 }
	goto $label$1 
	
.LABEL $label$83
	if ( ((*($5 + [560]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$82
	CALL _ZdlPv(*(($5 + [568])))
	
.LABEL $label$1
	$global$0 = ($5 + [608])
}

int_32 .FUNC $15 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$3 = ($global$0 - [176])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = (($4 + [64]) + [24]))) = (int_64)0
	*(($4 + [104])) = [0]
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $7)
	*($4 + [128]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $46(($4 + [16]), ($4 + [128]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	$9 = *($3)
	*((($4 + [160]) + [8])) = $9
	*(($3 = (($4 + [112]) + [8]))) = $9
	$10 = *($4)
	*($4 + [112]) = $10
	*($4 + [160]) = $10
	$11 = *($3)
	*(($9 = (($4 + [128]) + [8]))) = $11
	*((($4 + [16]) + [24])) = $11
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [112])
	*($4 + [32]) = $0
	*($4 + [128]) = $0
	*($3) = *($8)
	*($4 + [112]) = *($4 + [80])
	$0 = *($4 + [72])
	$1 = *($4 + [64])
	$8 = CALL $181(($4 + [160]), ($4 + [96]))
	*($9) = *($3)
	*($4 + [152]) = $1
	*($4 + [144]) = $0
	*($4 + [128]) = *($4 + [112])
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 ($4 + [152])), (int_32 ($4 + [144])), (int_32 ($4 + [128])), (int_32 $8), (int_32 $6))
	if ( (*($4 + [160]) & [1]) ){ goto $label$9 }
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL _ZdlPv(*($8 + [8]))
	if ( ($7 <= [513]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $216($2)
	$2 = [1]
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [96]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	$global$0 = ($4 + [176])
	return $2
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [104])))
	$global$0 = ($4 + [176])
	return $2
}

void .FUNC $16 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [96])
	$global$0 = $3
	CALL require_auth((int_64)4229868842424340576)
	$4 = *($1)
	CALL eosio_assert((((int_64)$4 == (int_64)-8173734935706730496) | ((int_64)$4 == (int_64)5606078077002753536)), [8227])
	$4 = *($2 + [8])
	if ( ((int_64)$4 <= (int_64)293370680067) ){ goto $label$3 }
	if ( ((int_64)$4 == (int_64)293370680068) ){ goto $label$1 }
	if ( ((int_64)$4 == (int_64)293455873288) ){ goto $label$1 }
	if ( ((int_64)$4 == (int_64)310651471112) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_64)$4 == (int_64)1397703940) ){ goto $label$1 }
	if ( ((int_64)$4 == (int_64)289176438024) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8634])
	$4 = *(($2 + [8]))
	
.LABEL $label$1
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	$5 = *($0)
	*($3 + [16]) = $5
	$6 = *($1)
	*($3 + [24]) = $6
	$1 = CALL db_find_i64($5, $6, (int_64)7035938067009503232, (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_32)$1) < (int_32)[0]) ){ goto $label$6 }
	$1 = CALL $54(($3 + [16]), $1)
	if ( ((int_32)*($1 + [136]) == (int_32)($3 + [16])) ){ goto $label$7 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$7
	$4 = *($0)
	*($3 + [64]) = $2
	CALL $80(($3 + [16]), $1, $4, ($3 + [64]))
	$1 = *($3 + [40])
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = *($0)
	*($3 + [8]) = $2
	*($3 + [88]) = $4
	if ( ((int_64)$5 == (int_64)CALL current_receiver()) ){ goto $label$8 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$8
	*($3 + [68]) = ($3 + [8])
	*($3 + [64]) = ($3 + [16])
	*($3 + [72]) = ($3 + [88])
	*(($2 = CALL _Znwj([152])) + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = (int_64)0
	*($2 + [64]) = (int_64)0
	*($2 + [72]) = (int_64)0
	*($2 + [80]) = (int_64)0
	*($2 + [88]) = (int_64)0
	*($2 + [96]) = (int_64)0
	*($2 + [104]) = (int_64)0
	*($2 + [112]) = (int_64)0
	*($2 + [120]) = (int_64)0
	*($2 + [128]) = (int_64)0
	*($2 + [136]) = ($3 + [16])
	CALL $81(($3 + [64]), $2)
	*($3 + [80]) = $2
	$4 = *($2)
	*($3 + [64]) = $4
	$1 = *($2 + [140])
	*($3 + [60]) = $1
	$7 = ($3 + [44])
	$0 = *($7)
	if ( ((uint_32)$0 >= (uint_32)*(($3 + [48]))) ){ goto $label$11 }
	*($0 + [8]) = $4
	*($0 + [16]) = $1
	*($3 + [80]) = [0]
	*($0) = $2
	*($7) = ($0 + [24])
	$2 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( $2 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $82(($3 + [40]), ($3 + [80]), ($3 + [64]), ($3 + [60]))
	$2 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($2 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL _ZdlPv($2)
	
.LABEL $label$9
	$1 = *($3 + [40])
	if ( ($1 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = ($3 + [44])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL _ZdlPv($0)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$14 }
	$2 = *(($3 + [40]))
	goto $label$12 
	
.LABEL $label$13
	$2 = $1
	
.LABEL $label$12
	*($7) = $1
	CALL _ZdlPv($2)
	
.LABEL $label$4
	$global$0 = ($3 + [96])
}

int_32 .FUNC $17 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [88]))) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $7)
	*($4 + [112]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $79(($4 + [24]), ($4 + [112]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	$9 = *($3)
	*((($4 + [128]) + [8])) = $9
	*(($3 = (($4 + [96]) + [8]))) = $9
	$10 = *($4 + [8])
	*($4 + [96]) = $10
	*($4 + [128]) = $10
	$11 = *($3)
	*(($9 = (($4 + [112]) + [8]))) = $11
	*(($4 + [48])) = $11
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [96])
	*($4 + [40]) = $0
	*($4 + [112]) = $0
	*($3) = *($8)
	*($4 + [96]) = *($4 + [80])
	$0 = *($4 + [72])
	*($9) = *($3)
	*($4 + [128]) = $0
	*($4 + [112]) = *($4 + [96])
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 ($4 + [128])), (int_32 ($4 + [112])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $216($2)
	
.LABEL $label$6
	$global$0 = ($4 + [144])
	return [1]
}

void .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ($2 - $3)
	if ( ((int_32)$4 <= (int_32)[-3]) ){ goto $label$2 }
	$4 = (*($0 + [8]) - $3)
	$5 = int_32($4 >> [1])
	$6 = ($5 + [1])
	$4 = ( ( $6 ? $4 : ($4 <= $6) ) ? [2147483647] : (int_32($4 >> [1]) <= [1073741823]) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL _Znwj(($4 << [1]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	
.LABEL $label$3
	*(($5 = ($6 + ($5 << [1])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($5 - $2)
	$4 = ($6 + ($4 << [1]))
	$6 = ($5 + [2])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	CALL abort()
	(unreachable)
}

int_32 .FUNC $11 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	$5 = ($global$0 - [928])
	$global$0 = $5
	$6 = [0]
	$7 = ($5 + [96])
	
.LOOP $label$1:
	*($7) = $6
	$7 = ($7 + [2])
	$6 = ($6 + [1])
	if ( ((int_32)$6 != (int_32)[416]) ){ goto $label$1 }
	$8 = [0]
	$9 = [0]
	$11 = *($1)
	$10 = *($1 + [4])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$2 }
	$12 = int_32(($10 - $11) >> [1])
	$13 = [0]
	$1 = [416]
	$9 = [0]
	
.LOOP $label$3:
	$14 = *(($11 + ($13 << [1])))
	if ( ((int_32)$14 == (int_32)[65535]) ){ goto $label$4 }
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	$7 = [0]
	$6 = ($5 + [96])
	
.LOOP $label$7:
	if ( ((int_32)*($6) == (int_32)$14) ){ goto $label$6 }
	$6 = ($6 + [2])
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)$1) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	*($6) = *(((($5 + [96]) + ($1 << [1])) + [-2]))
	
.LABEL $label$5
	$1 = ($1 + [-1])
	$9 = ($9 + [1])
	
.LABEL $label$4
	$13 = ($13 + [1])
	if ( ($13 <= $12) ){ goto $label$3 }
	
.LABEL $label$2
	$12 = *($2)
	$6 = *($2 + [4])
	if ( ((int_32)$6 == (int_32)$12) ){ goto $label$8 }
	$15 = int_32(($6 - $12) >> [1])
	$1 = ([416] - int_32(($10 - $11) >> [1]))
	$13 = [0]
	$8 = [0]
	
.LOOP $label$9:
	$14 = *(($12 + ($13 << [1])))
	if ( ((int_32)$14 == (int_32)[65535]) ){ goto $label$10 }
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$11 }
	$7 = [0]
	$6 = ($5 + [96])
	
.LOOP $label$13:
	if ( ((int_32)*($6) == (int_32)$14) ){ goto $label$12 }
	$6 = ($6 + [2])
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)$1) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	*($6) = *(((($5 + [96]) + ($1 << [1])) + [-2]))
	
.LABEL $label$11
	$1 = ($1 + [-1])
	$8 = ($8 + [1])
	
.LABEL $label$10
	$13 = ($13 + [1])
	if ( ($13 <= $15) ){ goto $label$9 }
	
.LABEL $label$8
	$16 = *(($3 + [24]))
	*((($5 + [48]) + [24])) = $16
	$17 = *(($3 + [16]))
	*((($5 + [48]) + [16])) = $17
	$18 = *(($3 + [8]))
	$19 = *($3)
	*(($5 + [16])) = $17
	*(($5 + [24])) = $16
	*($5 + [48]) = $19
	*($5 + [56]) = $18
	*($5) = $19
	*($5 + [8]) = $18
	$13 = ($8 + $9)
	CALL $6(($5 + [96]), $13, $5, [6], ($5 + [84]))
	$6 = *(($2 + [4]))
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$14 }
	*($5 + [46]) = [65535]
	if ( ((uint_32)$6 >= (uint_32)*($2 + [8])) ){ goto $label$15 }
	*($6) = [65535]
	$7 = ($6 + [2])
	*(($2 + [4])) = $7
	goto $label$14 
	
.LABEL $label$15
	CALL $12($2, ($5 + [46]))
	$7 = *(($2 + [4]))
	
.LABEL $label$14
	*($4 + [5]) = [0]
	*($4 + [2]) = [0]
	$6 = *(($2 + [8]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$17 }
	*($7) = *($5 + [84])
	$7 = ($7 + [2])
	*(($2 + [4])) = $7
	goto $label$16 
	
.LABEL $label$17
	CALL $10($2, ($5 + [84]))
	$6 = *(($2 + [8]))
	$7 = *(($2 + [4]))
	
.LABEL $label$16
	$1 = (((int_32)*($5 + [84]) % (int_32)[52]) + [1])
	*($4) = $1
	$1 = ((uint_32)($1 & [255]) % (uint_32)[13])
	$14 = ((uint_32)$1 > (uint_32)[9])
	$8 = ((uint_32)$1 % (uint_32)[10])
	$9 = (($5 + [84]) + [2])
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$19 }
	$1 = ($7 + [2])
	*(($2 + [4])) = $1
	*($7) = *($9)
	goto $label$18 
	
.LABEL $label$19
	CALL $10($2, $9)
	$6 = *(($2 + [8]))
	$1 = *(($2 + [4]))
	
.LABEL $label$18
	$7 = ( [0] ? $8 : $14 )
	$14 = (((int_32)*((($5 + [84]) + [2])) % (int_32)[52]) + [1])
	*($4 + [3]) = $14
	$14 = ((uint_32)($14 & [255]) % (uint_32)[13])
	$8 = ((uint_32)$14 > (uint_32)[9])
	$9 = ((uint_32)$14 % (uint_32)[10])
	$11 = (($5 + [84]) + [4])
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$21 }
	$14 = ($1 + [2])
	*(($2 + [4])) = $14
	*($1) = *($11)
	goto $label$20 
	
.LABEL $label$21
	CALL $10($2, $11)
	$6 = *(($2 + [8]))
	$14 = *(($2 + [4]))
	
.LABEL $label$20
	$8 = ( [0] ? $9 : $8 )
	$1 = (((int_32)*((($5 + [84]) + [4])) % (int_32)[52]) + [1])
	*($4 + [1]) = $1
	$1 = ((uint_32)($1 & [255]) % (uint_32)[13])
	$7 = ((uint_32)((( [0] ? $1 : ((uint_32)$1 > (uint_32)[9]) ) + $7) & [255]) % (uint_32)[10])
	$1 = ($5 + [90])
	if ( ((int_32)$14 == (int_32)$6) ){ goto $label$23 }
	*(($2 + [4])) = ($14 + [2])
	*($14) = *($1)
	goto $label$22 
	
.LABEL $label$23
	CALL $10($2, $1)
	
.LABEL $label$22
	$6 = (((int_32)*((($5 + [84]) + [6])) % (int_32)[52]) + [1])
	*($4 + [4]) = $6
	$1 = [4]
	$6 = ((uint_32)($6 & [255]) % (uint_32)[13])
	$6 = ((uint_32)((( [0] ? $6 : ((uint_32)$6 > (uint_32)[9]) ) + $8) & [255]) % (uint_32)[10])
	if ( (($6 | $7) & [8]) ){ goto $label$24 }
	if ( (($7 & [255]) <= [6]) ){ goto $label$27 }
	if ( ((uint_32)($6 & [255]) > (uint_32)[5]) ){ goto $label$24 }
	$14 = (($5 + [84]) + [8])
	$8 = ($2 + [4])
	$1 = *($8)
	if ( ((int_32)$1 == (int_32)*(($2 + [8]))) ){ goto $label$26 }
	*($8) = ($1 + [2])
	*($1) = *($14)
	goto $label$25 
	
.LABEL $label$27
	$14 = (($5 + [84]) + [8])
	$8 = ($2 + [4])
	$1 = *($8)
	if ( ((int_32)$1 == (int_32)*(($2 + [8]))) ){ goto $label$29 }
	*($8) = ($1 + [2])
	*($1) = *($14)
	goto $label$28 
	
.LABEL $label$29
	CALL $10($2, $14)
	
.LABEL $label$28
	$1 = (((int_32)*((($5 + [84]) + [8])) % (int_32)[52]) + [1])
	*(($4 + [2])) = $1
	$1 = ((uint_32)($1 & [255]) % (uint_32)[13])
	$7 = ((uint_32)((( [0] ? $1 : ((uint_32)$1 > (uint_32)[9]) ) + $7) & [255]) % (uint_32)[10])
	if ( (($6 & [255]) <= [3]) ){ goto $label$30 }
	if ( ((int_32)$6 != (int_32)[3]) ){ goto $label$31 }
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$30 }
	
.LABEL $label$31
	if ( ((int_32)$6 != (int_32)[4]) ){ goto $label$32 }
	if ( ((($7 + [-2]) & [255]) <= [6]) ){ goto $label$30 }
	
.LABEL $label$32
	$1 = [5]
	if ( ((int_32)$6 != (int_32)[5]) ){ goto $label$33 }
	if ( ((int_32)($7 & [12]) == (int_32)[4]) ){ goto $label$30 }
	
.LABEL $label$33
	if ( ((int_32)$6 != (int_32)[6]) ){ goto $label$24 }
	if ( ((int_32)($7 & [14]) != (int_32)[6]) ){ goto $label$24 }
	
.LABEL $label$30
	$14 = ($2 + [4])
	$1 = *($14)
	if ( ((int_32)$1 == (int_32)*(($2 + [8]))) ){ goto $label$35 }
	*($14) = ($1 + [2])
	*($1) = *(($5 + [94]))
	goto $label$34 
	
.LABEL $label$35
	CALL $10($2, (($5 + [84]) + [10]))
	
.LABEL $label$34
	$1 = (((int_32)*((($5 + [84]) + [10])) % (int_32)[52]) + [1])
	*(($4 + [5])) = $1
	$1 = ((uint_32)($1 & [255]) % (uint_32)[13])
	$6 = ((uint_32)((( [0] ? $1 : ((uint_32)$1 > (uint_32)[9]) ) + $6) & [255]) % (uint_32)[10])
	$1 = [6]
	goto $label$24 
	
.LABEL $label$26
	CALL $10($2, $14)
	
.LABEL $label$25
	$1 = [5]
	$14 = (((int_32)*(($5 + [92])) % (int_32)[52]) + [1])
	*(($4 + [5])) = $14
	$14 = ((uint_32)($14 & [255]) % (uint_32)[13])
	$6 = ((uint_32)((( [0] ? $14 : ((uint_32)$14 > (uint_32)[9]) ) + $6) & [255]) % (uint_32)[10])
	
.LABEL $label$24
	*($4 + [8]) = (int_64)0
	if ( ((uint_32)($7 & [255]) <= (uint_32)($6 & [255])) ){ goto $label$37 }
	$18 = (int_64)2
	*(($4 + [8])) = (int_64)2
	goto $label$36 
	
.LABEL $label$37
	if ( ((uint_32)($7 & [255]) >= (uint_32)($6 & [255])) ){ goto $label$39 }
	$18 = (int_64)4
	*(($4 + [8])) = (int_64)4
	$6 = ($6 & [15])
	if ( ((int_32)$6 == (int_32)[7]) ){ goto $label$38 }
	if ( ((int_32)$6 != (int_32)[6]) ){ goto $label$36 }
	if ( ((int_64)*($0) != (int_64)-8173734935706730496) ){ goto $label$36 }
	$18 = (int_64)68
	*(($4 + [8])) = (int_64)68
	goto $label$36 
	
.LABEL $label$39
	$18 = (int_64)8
	*(($4 + [8])) = (int_64)8
	goto $label$36 
	
.LABEL $label$38
	if ( ((int_64)*($0) != (int_64)5606078077002753536) ){ goto $label$36 }
	if ( ((*(($4 + [5])) & [255]) == 0) ){ goto $label$36 }
	$18 = (int_64)132
	*(($4 + [8])) = (int_64)132
	
.LABEL $label$36
	if ( ((int_32)((uint_32)*($4) % (uint_32)[13]) != (int_32)((uint_32)*(($4 + [1])) % (uint_32)[13])) ){ goto $label$40 }
	$18 = ((int_64)$18 | (int_64)16)
	*(($4 + [8])) = $18
	
.LABEL $label$40
	if ( ((int_32)((uint_32)*(($4 + [3])) % (uint_32)[13]) != (int_32)((uint_32)*(($4 + [4])) % (uint_32)[13])) ){ goto $label$41 }
	$18 = ((int_64)$18 | (int_64)32)
	*(($4 + [8])) = $18
	
.LABEL $label$41
	if ( (*(($4 + [5])) == 0) ){ goto $label$42 }
	*(($4 + [8])) = ((int_64)$18 | (int_64)1)
	
.LABEL $label$42
	$global$0 = ($5 + [928])
	return ((int_32)($1 + $13) > (int_32)[403])
}

void .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ($2 - $3)
	if ( ((int_32)$4 <= (int_32)[-3]) ){ goto $label$2 }
	$4 = (*($0 + [8]) - $3)
	$5 = int_32($4 >> [1])
	$6 = ($5 + [1])
	$4 = ( ( $6 ? $4 : ($4 <= $6) ) ? [2147483647] : (int_32($4 >> [1]) <= [1073741823]) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL _Znwj(($4 << [1]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	
.LABEL $label$3
	*(($5 = ($6 + ($5 << [1])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($5 - $2)
	$4 = ($6 + ($4 << [1]))
	$6 = ($5 + [2])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	CALL abort()
	(unreachable)
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [336])
	$global$0 = $3
	CALL memory()
	*($3 + [320]) = [8625]
	*($3 + [324]) = CALL $210([8625])
	*($3 + [160]) = *($3 + [320])
	if ( ((int_64)*(CALL $4(($3 + [328]), ($3 + [160]))) != (int_64)$2) ){ goto $label$20 }
	if ( ((int_64)$1 == (int_64)-4492738244669860560) ){ goto $label$21 }
	if ( ((int_64)$1 == (int_64)6138663591592764928) ){ goto $label$21 }
	if ( ((int_64)$1 != (int_64)4301877912145143680) ){ goto $label$19 }
	
.LABEL $label$21
	*($3 + [316]) = [0]
	*($3 + [312]) = [1]
	*($3 + [8]) = *($3 + [312])
	CALL $15($0, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$20
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 > (int_64)-4417235868247392257) ){ goto $label$18 }
	if ( ((int_64)$2 <= (int_64)-4997502814849204225) ){ goto $label$17 }
	if ( ((int_64)$2 <= (int_64)-4994024814571159553) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)-4994024814571159552) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)-4992623624440512512) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)-4417260145550032896) ){ goto $label$1 }
	*($3 + [252]) = [0]
	*($3 + [248]) = [2]
	*($3 + [72]) = *($3 + [248])
	CALL $17($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$19
	CALL eosio_assert([0], [8634])
	goto $label$1 
	
.LABEL $label$18
	if ( ((int_64)$2 <= (int_64)3626168788933672959) ){ goto $label$16 }
	if ( ((int_64)$2 <= (int_64)8421051917907525631) ){ goto $label$14 }
	if ( ((int_64)$2 == (int_64)8421051917907525632) ){ goto $label$9 }
	if ( ((int_64)$2 == (int_64)8421052107912933376) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)8421058550634238464) ){ goto $label$1 }
	*($3 + [180]) = [0]
	*($3 + [176]) = [3]
	*($3 + [144]) = *($3 + [176])
	CALL $19($1, $1, ($3 + [144]))
	goto $label$1 
	
.LABEL $label$17
	if ( ((int_64)$2 > (int_64)-5003315193367756801) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)-8279867914920656896) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)-7811085199840228352) ){ goto $label$1 }
	*($3 + [172]) = [0]
	*($3 + [168]) = [4]
	*($3 + [152]) = *($3 + [168])
	CALL $21($1, $1, ($3 + [152]))
	goto $label$1 
	
.LABEL $label$16
	if ( ((int_64)$2 > (int_64)-4157529574835843441) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)-4417235868247392256) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)-4157529991795441664) ){ goto $label$1 }
	*($3 + [284]) = [0]
	*($3 + [280]) = [5]
	*($3 + [40]) = *($3 + [280])
	CALL $23($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$15
	if ( ((int_64)$2 == (int_64)-4997502814849204224) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-4997502814849194496) ){ goto $label$1 }
	*($3 + [204]) = [0]
	*($3 + [200]) = [6]
	*($3 + [120]) = *($3 + [200])
	CALL $25($1, $1, ($3 + [120]))
	goto $label$1 
	
.LABEL $label$14
	if ( ((int_64)$2 == (int_64)3626168788933672960) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)5371967522708914176) ){ goto $label$1 }
	*($3 + [308]) = [0]
	*($3 + [304]) = [7]
	*($3 + [16]) = *($3 + [304])
	CALL $27($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$13
	if ( ((int_64)$2 == (int_64)-5003315193367756800) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-4997502820995125248) ){ goto $label$1 }
	*($3 + [236]) = [0]
	*($3 + [232]) = [8]
	*($3 + [88]) = *($3 + [232])
	CALL $29($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$12
	if ( ((int_64)$2 == (int_64)-4157529574835843440) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)-4149697620714979328) ){ goto $label$1 }
	*($3 + [276]) = [0]
	*($3 + [272]) = [9]
	*($3 + [48]) = *($3 + [272])
	CALL $23($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$11
	*($3 + [268]) = [0]
	*($3 + [264]) = [10]
	*($3 + [56]) = *($3 + [264])
	CALL $32($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [292]) = [0]
	*($3 + [288]) = [11]
	*($3 + [32]) = *($3 + [288])
	CALL $27($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [228]) = [0]
	*($3 + [224]) = [12]
	*($3 + [96]) = *($3 + [224])
	CALL $23($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [220]) = [0]
	*($3 + [216]) = [13]
	*($3 + [104]) = *($3 + [216])
	CALL $19($1, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [260]) = [0]
	*($3 + [256]) = [14]
	*($3 + [64]) = *($3 + [256])
	CALL $37($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [300]) = [0]
	*($3 + [296]) = [15]
	*($3 + [24]) = *($3 + [296])
	CALL $27($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [212]) = [0]
	*($3 + [208]) = [16]
	*($3 + [112]) = *($3 + [208])
	CALL $40($1, $1, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [244]) = [0]
	*($3 + [240]) = [17]
	*($3 + [80]) = *($3 + [240])
	CALL $17($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [196]) = [0]
	*($3 + [192]) = [18]
	*($3 + [128]) = *($3 + [192])
	CALL $43($1, $1, ($3 + [128]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [188]) = [0]
	*($3 + [184]) = [19]
	*($3 + [136]) = *($3 + [184])
	CALL $45($1, $1, ($3 + [136]))
	
.LABEL $label$1
	CALL $196([0])
	$global$0 = ($3 + [336])
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $18 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$1 = ($global$0 - [224])
	$global$0 = $1
	*(($1 + [208])) = [0]
	*($1 + [192]) = (int_64)-1
	*($1 + [200]) = (int_64)0
	$2 = *($0)
	*($1 + [176]) = $2
	*($1 + [184]) = $2
	$3 = CALL db_find_i64($2, $2, (int_64)-4455901497821387904, (int_64)-4455901497821387904)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	if ( ((int_32)*(CALL $101(($1 + [176]), $3) + [24]) == (int_32)($1 + [176])) ){ goto $label$4 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$4
	CALL $103(($1 + [152]), ($1 + [176]))
	if ( ((int_32)*($1 + [168]) < (int_32)[1]) ){ goto $label$5 }
	$4 = (($1 + [120]) | [1])
	$5 = (($1 + [136]) | [1])
	$6 = (($1 + [136]) + [8])
	$7 = (($1 + [80]) + [28])
	$8 = [1]
	
.LOOP $label$6:
	$9 = *((*([0] + [8500]) + $8))
	*($6) = [0]
	*($1 + [136]) = (int_64)0
	$3 = CALL $210([9445])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$9 }
	*($1 + [136]) = ($3 << [1])
	$10 = $5
	if ( $3 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$11 = (($3 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($6) = $10
	*($1 + [136]) = ($11 | [1])
	*($1 + [140]) = $3
	
.LABEL $label$8
	CALL memcpy($10, [9445], $3)
	
.LABEL $label$7
	*(($10 + $3)) = [0]
	$9 = int_32(($9 << [24]) >> [24])
	CALL $188(($1 + [136]), $9)
	*(($11 = (($1 + [120]) + [8]))) = [0]
	*($1 + [120]) = (int_64)0
	$3 = CALL $210([9451])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$12 }
	*($1 + [120]) = ($3 << [1])
	$10 = $4
	if ( $3 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$12 = (($3 + [16]) & [-16])
	$10 = CALL _Znwj($12)
	*($11) = $10
	*($1 + [120]) = ($12 | [1])
	*($1 + [124]) = $3
	
.LABEL $label$11
	CALL memcpy($10, [9451], $3)
	
.LABEL $label$10
	*(($10 + $3)) = [0]
	CALL $188(($1 + [120]), $9)
	$2 = *($0)
	$3 = *($1 + [136])
	$10 = ($3 & [1])
	*($1 + [72]) = ( *($6) ? $5 : $10 )
	*($1 + [76]) = ( *($1 + [140]) ? uint_32($3 >> [1]) : $10 )
	*($1 + [16]) = *($1 + [72])
	CALL $4(($1 + [32]), ($1 + [16]))
	*((($1 + [80]) + [16])) = (int_64)-1
	*(($12 = (($1 + [80]) + [24]))) = (int_64)0
	*((($1 + [80]) + [32])) = [0]
	*((($1 + [80]) + [36])) = [0]
	*(($3 = (($1 + [80]) + [8]))) = *($1 + [32])
	*($1 + [80]) = $2
	$2 = *($0)
	$10 = *($1 + [120])
	$9 = ($10 & [1])
	*($1 + [24]) = ( *($11) ? $4 : $9 )
	*($1 + [28]) = ( *($1 + [124]) ? uint_32($10 >> [1]) : $9 )
	*($1 + [8]) = *($1 + [24])
	CALL $4(($1 + [216]), ($1 + [8]))
	*((($1 + [32]) + [16])) = (int_64)-1
	*(($13 = (($1 + [32]) + [24]))) = (int_64)0
	*((($1 + [32]) + [32])) = [0]
	*((($1 + [32]) + [36])) = [0]
	*(($14 = (($1 + [32]) + [8]))) = *($1 + [216])
	*($1 + [32]) = $2
	$3 = CALL db_lowerbound_i64(*($1 + [80]), *($3), (int_64)-4455901301129084928, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$13 }
	$10 = CALL $104(($1 + [80]), $3)
	$2 = (int_64)-2147483646
	
.LOOP $label$14:
	$3 = [0]
	$9 = CALL db_next_i64(*($10 + [56]), ($1 + [216]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	$3 = CALL $104(($1 + [80]), $9)
	
.LABEL $label$15
	CALL $105(($1 + [80]), $10)
	if ( (int_64)($2 == 0) ){ goto $label$13 }
	$2 = ((int_64)$2 + (int_64)1)
	$10 = $3
	if ( $3 ){ goto $label$14 }
	
.LABEL $label$13
	$3 = CALL db_lowerbound_i64(*($1 + [32]), *($14), (int_64)-4455901301129084928, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$16 }
	$10 = CALL $104(($1 + [32]), $3)
	$2 = (int_64)-2147483646
	
.LOOP $label$17:
	$3 = [0]
	$9 = CALL db_next_i64(*($10 + [56]), ($1 + [216]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$18 }
	$3 = CALL $104(($1 + [32]), $9)
	
.LABEL $label$18
	CALL $105(($1 + [32]), $10)
	if ( (int_64)($2 == 0) ){ goto $label$16 }
	$2 = ((int_64)$2 + (int_64)1)
	$10 = $3
	if ( $3 ){ goto $label$17 }
	
.LABEL $label$16
	$9 = *($13)
	if ( ($9 == 0) ){ goto $label$19 }
	$14 = (($1 + [32]) + [28])
	$3 = *($14)
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$21 }
	
.LOOP $label$22:
	$3 = ($3 + [-24])
	$10 = *($3)
	*($3) = [0]
	if ( ($10 == 0) ){ goto $label$23 }
	CALL _ZdlPv($10)
	
.LABEL $label$23
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$22 }
	$3 = *($13)
	goto $label$20 
	
.LABEL $label$21
	$3 = $9
	
.LABEL $label$20
	*($14) = $9
	CALL _ZdlPv($3)
	
.LABEL $label$19
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$24 }
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$26 }
	
.LOOP $label$27:
	$3 = ($3 + [-24])
	$10 = *($3)
	*($3) = [0]
	if ( ($10 == 0) ){ goto $label$28 }
	CALL _ZdlPv($10)
	
.LABEL $label$28
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$27 }
	$3 = *($12)
	goto $label$25 
	
.LABEL $label$26
	$3 = $9
	
.LABEL $label$25
	*($7) = $9
	CALL _ZdlPv($3)
	
.LABEL $label$24
	if ( ((*($1 + [120]) & [1]) == 0) ){ goto $label$29 }
	CALL _ZdlPv(*($11))
	
.LABEL $label$29
	if ( ((*($1 + [136]) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*($6))
	
.LABEL $label$30
	$3 = ((int_32)$8 < (int_32)*((($1 + [152]) + [16])))
	$8 = ($8 + [1])
	if ( $3 ){ goto $label$6 }
	
.LABEL $label$5
	$3 = *(($1 + [204]))
	if ( ((int_32)$3 == (int_32)*(($1 + [200]))) ){ goto $label$33 }
	$3 = *(($3 + [-24]))
	if ( ((int_32)*($3 + [24]) == (int_32)($1 + [176])) ){ goto $label$34 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$34
	if ( $3 ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	$3 = CALL db_find_i64(*($1 + [176]), *(($1 + [184])), (int_64)-4455901497821387904, (int_64)-4455901497821387904)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$31 }
	$3 = CALL $101(($1 + [176]), $3)
	if ( ((int_32)*($3 + [24]) == (int_32)($1 + [176])) ){ goto $label$32 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$32
	$10 = CALL db_next_i64(*($3 + [28]), ($1 + [80]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$35 }
	CALL $101(($1 + [176]), $10)
	
.LABEL $label$35
	CALL $106(($1 + [176]), $3)
	
.LABEL $label$31
	$9 = *($1 + [200])
	if ( ($9 == 0) ){ goto $label$3 }
	$8 = ($1 + [204])
	$3 = *($8)
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$37 }
	
.LOOP $label$38:
	$3 = ($3 + [-24])
	$10 = *($3)
	*($3) = [0]
	if ( ($10 == 0) ){ goto $label$39 }
	CALL _ZdlPv($10)
	
.LABEL $label$39
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$38 }
	$3 = *(($1 + [200]))
	goto $label$36 
	
.LABEL $label$37
	$3 = $9
	
.LABEL $label$36
	*($8) = $9
	CALL _ZdlPv($3)
	
.LABEL $label$3
	$global$0 = ($1 + [224])
	return (unreachable)
	
.LABEL $label$2
	CALL $180(($1 + [136]))
	
.LABEL $label$1
	CALL $180(($1 + [120]))
	(unreachable)
}

int_32 .FUNC $19 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [32])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [20])) = $2
	*(($4 + [24])) = ($2 + $7)
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	$3 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $216($2)
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return [1]
}

void .FUNC $184 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $210($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $184($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $186 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL _ZdlPv($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $180 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $116 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([64])) + [16 align=4]) = (int_64)0
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [32 align=4]) = (int_64)0
	*($3 + [48]) = $1
	CALL $136(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = (int_64)
	*($4 + [16]) = $2((int_64)0 - *($3)))
	$5 = *($3 + [52])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $137(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [28])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [32])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$1 = *($3 + [16])
	if ( ($1 == 0) ){ goto $label$6 }
	*(($3 + [20])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$6
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $117 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = ($1 + [8])
	$5 = [0]
	
.LOOP $label$2:
	$6 = CALL db_lowerbound_i64(*($1), *($4), (int_64)-4366050722735718400, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	CALL $61($1, $6)
	*($3 + [12]) = [0]
	*($3 + [8]) = $1
	if ( (uint_64)((int_64))($2 - *(*(CALL $138(($3 + [8])) + [4]))) <= (int_64)21) ){ goto $label$1 }
	*($3 + [12]) = [0]
	*($3 + [8]) = $1
	CALL $97($1, *(CALL $138(($3 + [8])) + [4]))
	$5 = ($5 + [1])
	if ( ($5 <= [10]) ){ goto $label$2 }
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

void .FUNC $114 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$1
	*(($5 = CALL _Znwj([24])) + [8]) = $1
	*($5) = *(*($3))
	CALL memcpy(($4 + [16]), $5, [8])
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)7235159550150574080, $2, (int_64)7235159550150574080, ($4 + [16]), [8])
	*($5 + [12]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)7235159550150574080) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)7235159550150574081
	
.LABEL $label$2
	*($4 + [8]) = $5
	*($4 + [16]) = (int_64)7235159550150574080
	*($4 + [4]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)7235159550150574080
	*($3 + [16]) = $6
	*($4 + [8]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $133(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$1 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

void .FUNC $115 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4366057016889413632, (int_64)-4366057016889413632)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $96($0, $4)
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$2
	*($3) = $1
	CALL $134($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $135($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9996])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10046])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($5 + [72])))
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [64]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($8 + [72])))
	
.LABEL $label$16
	CALL _ZdlPv($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*(($1 + [92])))
}

void .FUNC $113 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9734])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9780])
	
.LABEL $label$2
	*($1) = *(*($3))
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $3, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7235159550150574080) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)7235159550150574081
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *(*($4) + [4])
	*($1 + [12 align=4]) = *($5 + [12 align=4])
	*($1 + [8]) = *($5 + [8])
	*($1) = *($5)
	$6 = *($0)
	*(($1 + [56])) = *(($5 + [56]))
	*(($1 + [48])) = *(($5 + [48]))
	*(($1 + [40])) = *(($5 + [40]))
	*($1 + [32]) = *($5 + [32])
	$7 = ($1 + [64])
	CALL $183($7, (*(*($4) + [4]) + [64]))
	*($1 + [88]) = (int_64)0
	*($1 + [80]) = *(*(*($4) + [4]) + [80])
	$5 = *($1 + [64])
	$4 = ( *(($1 + [68])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($4 + [65])
	$8 = (CASTING uint_64)(uint_32 $4)
	$9 = ($1 + [88])
	$10 = ($1 + [80])
	$11 = ($1 + [32])
	$12 = ($1 + [16])
	$13 = ($1 + [12])
	$14 = ($1 + [8])
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$4 = CALL $213($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $14
	*($3 + [32]) = $1
	*($3 + [40]) = $13
	*($3 + [44]) = $12
	*($3 + [48]) = $11
	*($3 + [52]) = $7
	*($3 + [56]) = $10
	*($3 + [60]) = $9
	CALL $124(($3 + [32]), ($3 + [24]))
	$15 = *($1)
	$8 = (int_64)
	*($1 + [100]) = CALL db_store_i64(*($6 + [8]), (int_64)7035937633859534848, *(*($0 + [8])), $8((int_64)0 - $15)), $4, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)*($6 + [16]) <= (uint_64)$8) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $216($4)
	if ( ((uint_64)*($6 + [16]) > (uint_64)$8) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 + [16])) = ( (int_64)-2 ? (int_64))((int_64)1 - $15) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [64])
}

void .FUNC $111 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [64]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [72])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9890])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9890])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $119 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [1])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [1])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL _ZdlPv($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = ( ( $4 ? $5 : ($5 <= $4) ) ? [2147483647] : (int_32($5 >> [1]) <= [1073741823]) )
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$1 }
	$4 = ($6 << [1])
	$6 = CALL _Znwj($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$3 = int_32($5 >> [1])
	$5 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $5) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$5 = ($7 - $1)
	if ( ($5 == 0) ){ goto $label$6 }
	CALL memmove($6, $1, $5)
	
.LABEL $label$6
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($5 >> [1]) << [1]))
	return (unreachable)
	
.LABEL $label$1
	CALL $193($0)
}

int_32 .FUNC $29 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $7)
	*($4 + [112]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $84(($4 + [16]), ($4 + [112]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	$3 = *($3)
	*((($4 + [80]) + [8])) = $3
	*(($8 = (($4 + [96]) + [8]))) = $3
	$9 = *($4)
	*($4 + [96]) = $9
	*($4 + [80]) = $9
	$3 = *($8)
	*((($4 + [112]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [96])
	*($4 + [32]) = $0
	*($4 + [112]) = $0
	$8 = *($4 + [76])
	$10 = *($4 + [72])
	*($4 + [112]) = *($4 + [64])
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 ($4 + [112])), (int_32 $10), (int_32 $8), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $216($2)
	
.LABEL $label$6
	$global$0 = ($4 + [128])
	return [1]
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$4 = ($global$0 - [160])
	$global$0 = $4
	*((($4 + [120]) + [32])) = [0]
	*($4 + [136]) = (int_64)-1
	*($4 + [144]) = (int_64)0
	$5 = *($0)
	*($4 + [120]) = $5
	$6 = *($1)
	*($4 + [128]) = $6
	*((($4 + [80]) + [32])) = [0]
	*($4 + [88]) = $6
	*($4 + [80]) = $5
	*($4 + [96]) = (int_64)-1
	*($4 + [104]) = (int_64)0
	if ( ((int_32)$2 >= (int_32)$3) ){ goto $label$1 }
	$6 = (CASTING int_64)(int_32 $2)
	$7 = (($4 + [40]) + [8])
	$8 = (($4 + [40]) + [16])
	$9 = (($4 + [40]) + [24])
	$10 = (($4 + [40]) + [32])
	$11 = ($4 + [76])
	$12 = (($4 + [120]) + [28])
	
.LOOP $label$2:
	*($7) = $6
	*($8) = (int_64)-1
	*($9) = (int_64)0
	*($10) = [0]
	*($11) = [0]
	*($4 + [40]) = $5
	$2 = CALL db_lowerbound_i64($5, $6, (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $51(($4 + [40]), $2)
	$5 = (int_64)-2147483646
	
.LOOP $label$4:
	$2 = [0]
	$13 = CALL db_next_i64(*($1 + [84]), $4)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$5 }
	$2 = CALL $51(($4 + [40]), $13)
	
.LABEL $label$5
	CALL $85(($4 + [40]), $1)
	if ( (int_64)($5 == 0) ){ goto $label$3 }
	$5 = ((int_64)$5 + (int_64)1)
	$1 = $2
	if ( $2 ){ goto $label$4 }
	
.LABEL $label$3
	$5 = (int_64))((int_64)0 - $6)
	$1 = *($12)
	$14 = *((($4 + [120]) + [24]))
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$11:
	$2 = ($1 + [-24])
	$13 = *($2)
	if ( ((int_64))((int_64)0 - *($13)) == (int_64)$5) ){ goto $label$10 }
	$1 = $2
	if ( ((int_32)$14 != (int_32)$2) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$9 }
	if ( ((int_32)*($13 + [96]) != (int_32)($4 + [120])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$2 = CALL db_find_i64(*($4 + [120]), *((($4 + [120]) + [8])), (int_64)7035937633859534848, $5)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	$13 = CALL $49(($4 + [120]), $2)
	if ( ((int_32)*($13 + [96]) == (int_32)($4 + [120])) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9631])
	
.LABEL $label$7
	CALL $86(($4 + [120]), $13)
	*(($4 + [16])) = (int_64)-1
	*(($14 = ($4 + [24]))) = (int_64)0
	*(($4 + [32])) = [0]
	$15 = *($13 + [88])
	*(($4 + [8])) = $15
	$16 = *($0)
	*($4) = $16
	$2 = CALL db_find_i64($16, $15, (int_64)7035937269232857088, $5)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$12 }
	$2 = CALL $87($4, $2)
	if ( ((int_32)*($2 + [16]) == (int_32)$4) ){ goto $label$13 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$13
	CALL $88($4, $2)
	
.LABEL $label$12
	$13 = *($14)
	if ( ($13 == 0) ){ goto $label$6 }
	$17 = ($4 + [28])
	$2 = *($17)
	if ( ((int_32)$2 == (int_32)$13) ){ goto $label$15 }
	
.LOOP $label$16:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$17 }
	CALL _ZdlPv($1)
	
.LABEL $label$17
	if ( ((int_32)$13 != (int_32)$2) ){ goto $label$16 }
	$2 = *($14)
	goto $label$14 
	
.LABEL $label$15
	$2 = $13
	
.LABEL $label$14
	*($17) = $13
	CALL _ZdlPv($2)
	
.LABEL $label$6
	$1 = *((($4 + [80]) + [28]))
	$14 = *((($4 + [80]) + [24]))
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$21 }
	
.LOOP $label$23:
	$2 = ($1 + [-24])
	$13 = *($2)
	if ( ((int_64))((int_64)0 - *($13)) == (int_64)$5) ){ goto $label$22 }
	$1 = $2
	if ( ((int_32)$14 != (int_32)$2) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$21 }
	if ( ((int_32)*($13 + [16]) != (int_32)($4 + [80])) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$2 = CALL db_find_i64(*($4 + [80]), *((($4 + [80]) + [8])), (int_64)7035937269232857088, $5)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$18 }
	$13 = CALL $87(($4 + [80]), $2)
	if ( ((int_32)*($13 + [16]) == (int_32)($4 + [80])) ){ goto $label$19 }
	
.LABEL $label$20
	CALL eosio_assert([0], [9631])
	
.LABEL $label$19
	CALL $88(($4 + [80]), $13)
	
.LABEL $label$18
	$13 = *($9)
	if ( ($13 == 0) ){ goto $label$24 }
	$14 = (($4 + [40]) + [28])
	$2 = *($14)
	if ( ((int_32)$2 == (int_32)$13) ){ goto $label$26 }
	
.LOOP $label$27:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$28 }
	CALL _ZdlPv($1)
	
.LABEL $label$28
	if ( ((int_32)$13 != (int_32)$2) ){ goto $label$27 }
	$2 = *($9)
	goto $label$25 
	
.LABEL $label$26
	$2 = $13
	
.LABEL $label$25
	*($14) = $13
	CALL _ZdlPv($2)
	
.LABEL $label$24
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_32)(CASTING uint_32)(uint_64 $6) == (int_32)$3) ){ goto $label$29 }
	$5 = *($0)
	goto $label$2 
	
.LABEL $label$29
	$13 = *($4 + [104])
	if ( ($13 == 0) ){ goto $label$1 }
	$14 = ($4 + [108])
	$2 = *($14)
	if ( ((int_32)$2 == (int_32)$13) ){ goto $label$31 }
	
.LOOP $label$32:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$33 }
	CALL _ZdlPv($1)
	
.LABEL $label$33
	if ( ((int_32)$13 != (int_32)$2) ){ goto $label$32 }
	$2 = *(($4 + [104]))
	goto $label$30 
	
.LABEL $label$31
	$2 = $13
	
.LABEL $label$30
	*($14) = $13
	CALL _ZdlPv($2)
	
.LABEL $label$1
	$13 = *($4 + [144])
	if ( ($13 == 0) ){ goto $label$34 }
	$14 = ($4 + [148])
	$2 = *($14)
	if ( ((int_32)$2 == (int_32)$13) ){ goto $label$36 }
	
.LOOP $label$37:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$38 }
	if ( ((*($1 + [64]) & [1]) == 0) ){ goto $label$39 }
	CALL _ZdlPv(*(($1 + [72])))
	
.LABEL $label$39
	CALL _ZdlPv($1)
	
.LABEL $label$38
	if ( ((int_32)$13 != (int_32)$2) ){ goto $label$37 }
	$2 = *(($4 + [144]))
	goto $label$35 
	
.LABEL $label$36
	$2 = $13
	
.LABEL $label$35
	*($14) = $13
	CALL _ZdlPv($2)
	
.LABEL $label$34
	$global$0 = ($4 + [160])
}

int_32 .FUNC $21 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	*($4 + [32]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9705])
	
.LABEL $label$5
	$8 = ($2 + $7)
	CALL memcpy(($4 + [32]), $2, [8])
	$9 = ($2 + [8])
	$3 = (($4 + [32]) + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9705])
	
.LABEL $label$6
	CALL memcpy($3, $9, [8])
	*(($4 + [24])) = $8
	*($4 + [16]) = $2
	*(($4 + [20])) = ($2 + [16])
	*($4 + [8]) = $1
	*($4) = $0
	$0 = *($4 + [32])
	*($4 + [48]) = *($3)
	*($4 + [56]) = $0
	$3 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 ($4 + [56])), (int_32 ($4 + [48])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $216($2)
	
.LABEL $label$8
	$global$0 = ($4 + [64])
	return [1]
}

void .FUNC $20 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL require_auth((int_64)4229868842424340576)
	$4 = *($1)
	if ( ((int_64)$4 != (int_64)7035937633859534848) ){ goto $label$1 }
	*(($5 = (($3 + [64]) + [32]))) = [0]
	*($3 + [72]) = (int_64)-3699144143931441152
	*($3 + [80]) = (int_64)-1
	*($3 + [88]) = (int_64)0
	$4 = *($0)
	*($3 + [64]) = $4
	*((($3 + [24]) + [32])) = [0]
	*($3 + [24]) = $4
	*($3 + [40]) = (int_64)-1
	*($3 + [48]) = (int_64)0
	$6 = *($2)
	*($3 + [32]) = $6
	$7 = CALL db_lowerbound_i64($4, $6, (int_64)7035937633859534848, (int_64)0)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$6 }
	*($3 + [20]) = CALL $49(($3 + [24]), $7)
	*($3 + [16]) = ($3 + [24])
	$8 = (($3 + [64]) + [24])
	$9 = ($3 + [120])
	$10 = ($3 + [92])
	
.LOOP $label$7:
	$4 = *($0)
	*($3 + [8]) = ($3 + [16])
	*($3 + [136]) = $4
	if ( ((int_64)*($3 + [64]) == (int_64)CALL current_receiver()) ){ goto $label$8 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$8
	*($9) = ($3 + [136])
	*($3 + [116]) = ($3 + [8])
	*($3 + [112]) = ($3 + [64])
	*(($7 = CALL _Znwj([112])) + [72]) = [0]
	*($7 + [64 align=4]) = (int_64)0
	*($7 + [88]) = ($3 + [64])
	CALL $107(($3 + [112]), $7)
	*($3 + [128]) = $7
	$4 = (int_64)
	*($3 + [112]) = $4((int_64)0 - *($7)))
	$11 = *($7 + [92])
	*($3 + [108]) = $11
	$12 = *($10)
	if ( ((uint_32)$12 >= (uint_32)*($5)) ){ goto $label$13 }
	*($12 + [8]) = $4
	*($12 + [16]) = $11
	*($3 + [128]) = [0]
	*($12) = $7
	*($10) = ($12 + [24])
	$7 = *($3 + [128])
	*($3 + [128]) = [0]
	if ( ($7 == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $108($8, ($3 + [128]), ($3 + [112]), ($3 + [108]))
	$7 = *($3 + [128])
	*($3 + [128]) = [0]
	if ( $7 ){ goto $label$11 }
	
.LABEL $label$12
	$4 = *($3 + [16])
	$12 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $12) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((*($7 + [64]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*(($7 + [72])))
	
.LABEL $label$14
	CALL _ZdlPv($7)
	$4 = *($3 + [16])
	$12 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $12) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [10585])
	CALL eosio_assert([0], [10442])
	
.LABEL $label$9
	$7 = [0]
	$11 = CALL db_next_i64(*($12 + [100]), ($3 + [112]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$15 }
	$7 = CALL $49((CASTING uint_32)(uint_64 $4), $11)
	
.LABEL $label$15
	CALL $86(($3 + [24]), $12)
	*($3 + [16]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))
	if ( $7 ){ goto $label$7 }
	$11 = *($3 + [48])
	if ( $11 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	*($3 + [20]) = [0]
	*($3 + [16]) = ($3 + [24])
	$11 = *($3 + [48])
	if ( ($11 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$10 = ($3 + [52])
	$7 = *($10)
	if ( ((int_32)$7 == (int_32)$11) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$18 }
	if ( ((*($12 + [64]) & [1]) == 0) ){ goto $label$19 }
	CALL _ZdlPv(*(($12 + [72])))
	
.LABEL $label$19
	CALL _ZdlPv($12)
	
.LABEL $label$18
	if ( ((int_32)$11 != (int_32)$7) ){ goto $label$17 }
	$7 = *(($3 + [48]))
	*($10) = $11
	CALL _ZdlPv($7)
	$11 = *($3 + [88])
	if ( $11 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$16
	*($10) = $11
	CALL _ZdlPv($11)
	$11 = *($3 + [88])
	if ( ($11 == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$11 = *($3 + [88])
	if ( ($11 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$10 = ($3 + [92])
	$7 = *($10)
	if ( ((int_32)$7 == (int_32)$11) ){ goto $label$21 }
	
.LOOP $label$22:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$23 }
	if ( ((*($12 + [64]) & [1]) == 0) ){ goto $label$24 }
	CALL _ZdlPv(*(($12 + [72])))
	
.LABEL $label$24
	CALL _ZdlPv($12)
	
.LABEL $label$23
	if ( ((int_32)$11 != (int_32)$7) ){ goto $label$22 }
	$7 = *(($3 + [88]))
	goto $label$20 
	
.LABEL $label$21
	$7 = $11
	
.LABEL $label$20
	*($10) = $11
	CALL _ZdlPv($7)
	
.LABEL $label$2
	$4 = *($1)
	
.LABEL $label$1
	if ( ((int_64)$4 != (int_64)7035937668219273216) ){ goto $label$26 }
	*((($3 + [64]) + [32])) = [0]
	*($3 + [80]) = (int_64)-1
	*($3 + [88]) = (int_64)0
	$4 = *($0)
	*($3 + [64]) = $4
	*($3 + [72]) = (int_64)-3699144143931441152
	*(($5 = (($3 + [24]) + [32]))) = [0]
	*($3 + [24]) = $4
	*($3 + [40]) = (int_64)-1
	*($3 + [48]) = (int_64)0
	*($3 + [32]) = *($2)
	$7 = CALL db_lowerbound_i64($4, (int_64)-3699144143931441152, (int_64)7035937668219273216, (int_64)0)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$29 }
	*($3 + [20]) = CALL $109(($3 + [64]), $7)
	*($3 + [16]) = ($3 + [64])
	$8 = (($3 + [24]) + [24])
	$9 = ($3 + [120])
	$10 = ($3 + [52])
	
.LOOP $label$30:
	$4 = *($0)
	*($3 + [8]) = ($3 + [16])
	*($3 + [136]) = $4
	if ( ((int_64)*($3 + [24]) == (int_64)CALL current_receiver()) ){ goto $label$31 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$31
	*($9) = ($3 + [136])
	*($3 + [116]) = ($3 + [8])
	*($3 + [112]) = ($3 + [24])
	*(($7 = CALL _Znwj([112])) + [72]) = [0]
	*($7 + [64 align=4]) = (int_64)0
	*($7 + [96]) = ($3 + [24])
	CALL $110(($3 + [112]), $7)
	*($3 + [128]) = $7
	$4 = (int_64)
	*($3 + [112]) = $4((int_64)0 - *($7)))
	$11 = *($7 + [100])
	*($3 + [108]) = $11
	$12 = *($10)
	if ( ((uint_32)$12 >= (uint_32)*($5)) ){ goto $label$36 }
	*($12 + [8]) = $4
	*($12 + [16]) = $11
	*($3 + [128]) = [0]
	*($12) = $7
	*($10) = ($12 + [24])
	$7 = *($3 + [128])
	*($3 + [128]) = [0]
	if ( ($7 == 0) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	CALL $111($8, ($3 + [128]), ($3 + [112]), ($3 + [108]))
	$7 = *($3 + [128])
	*($3 + [128]) = [0]
	if ( $7 ){ goto $label$34 }
	
.LABEL $label$35
	$4 = *($3 + [16])
	$12 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $12) ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$34
	if ( ((*($7 + [64]) & [1]) == 0) ){ goto $label$37 }
	CALL _ZdlPv(*(($7 + [72])))
	
.LABEL $label$37
	CALL _ZdlPv($7)
	$4 = *($3 + [16])
	$12 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $12) ){ goto $label$32 }
	
.LABEL $label$33
	CALL eosio_assert([0], [10585])
	CALL eosio_assert([0], [10442])
	
.LABEL $label$32
	$7 = [0]
	$11 = CALL db_next_i64(*($12 + [92]), ($3 + [112]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$38 }
	$7 = CALL $109((CASTING uint_32)(uint_64 $4), $11)
	
.LABEL $label$38
	CALL $112(($3 + [64]), $12)
	*($3 + [16]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))
	if ( $7 ){ goto $label$30 }
	$0 = *($3 + [48])
	if ( $0 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	*($3 + [20]) = [0]
	*($3 + [16]) = ($3 + [64])
	$0 = *($3 + [48])
	if ( ($0 == 0) ){ goto $label$27 }
	
.LABEL $label$28
	$11 = ($3 + [52])
	$7 = *($11)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$39 }
	
.LOOP $label$40:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$41 }
	if ( ((*($12 + [64]) & [1]) == 0) ){ goto $label$42 }
	CALL _ZdlPv(*(($12 + [72])))
	
.LABEL $label$42
	CALL _ZdlPv($12)
	
.LABEL $label$41
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$40 }
	$7 = *(($3 + [48]))
	*($11) = $0
	CALL _ZdlPv($7)
	$0 = *($3 + [88])
	if ( $0 ){ goto $label$25 }
	goto $label$26 
	
.LABEL $label$39
	*($11) = $0
	CALL _ZdlPv($0)
	$0 = *($3 + [88])
	if ( ($0 == 0) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$0 = *($3 + [88])
	if ( $0 ){ goto $label$25 }
	
.LABEL $label$26
	$global$0 = ($3 + [144])
	return 
	
.LABEL $label$25
	$11 = ($3 + [92])
	$7 = *($11)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$44 }
	
.LOOP $label$45:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$46 }
	if ( ((*($12 + [64]) & [1]) == 0) ){ goto $label$47 }
	CALL _ZdlPv(*(($12 + [72])))
	
.LABEL $label$47
	CALL _ZdlPv($12)
	
.LABEL $label$46
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$45 }
	$7 = *(($3 + [88]))
	goto $label$43 
	
.LABEL $label$44
	$7 = $0
	
.LABEL $label$43
	*($11) = $0
	CALL _ZdlPv($7)
	$global$0 = ($3 + [144])
}

int_32 .FUNC $23 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [32]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9705])
	
.LABEL $label$5
	CALL memcpy(($4 + [32]), $2, [8])
	*(($4 + [20])) = ($2 + [8])
	*(($4 + [24])) = $3
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [40]) = *($4 + [32])
	$3 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 ($4 + [40])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $216($2)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [384])
	$global$0 = $2
	CALL require_auth((int_64)4229868842424340576)
	$3 = *($1)
	CALL eosio_assert((((int_64)$3 == (int_64)-8173734935706730496) | ((int_64)$3 == (int_64)5606078077002753536)), [8227])
	*((($2 + [344]) + [32])) = [0]
	*($2 + [360]) = (int_64)-1
	*($2 + [368]) = (int_64)0
	$3 = *($0)
	*($2 + [344]) = $3
	$4 = *($1)
	*($2 + [352]) = $4
	*($2 + [32]) = (int_64)0
	$5 = [0]
	$6 = CALL db_find_i64($3, $4, (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $47(($2 + [344]), $6)
	if ( ((int_32)*($5 + [8]) == (int_32)($2 + [344])) ){ goto $label$1 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$1
	$3 = *(( $5 ? ($2 + [32]) : $5 ))
	*($2 + [336]) = $3
	CALL eosio_assert((int_64)($3 == 0), [8648])
	*($2 + [336]) = (int_64)1
	CALL $75(($2 + [344]), ($2 + [336]), *($0))
	*((($2 + [296]) + [32])) = [0]
	*($2 + [312]) = (int_64)-1
	$3 = *($0)
	*($2 + [296]) = $3
	$4 = *($1)
	*($2 + [304]) = $4
	*($2 + [320]) = (int_64)0
	$1 = CALL db_lowerbound_i64($3, $4, (int_64)-4366050722735718400, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $61(($2 + [296]), $1)
	if ( ((int_32)*($1 + [12]) != (int_32)[2]) ){ goto $label$3 }
	
.LABEL $label$4
	$3 = CALL $72($0, ($2 + [296]))
	goto $label$2 
	
.LABEL $label$3
	$3 = *($1)
	
.LABEL $label$2
	*($2) = $3
	CALL $201(($2 + [32]), [256], [8669], $2)
	*(($2 + [24])) = [0]
	*($2 + [16]) = (int_64)0
	$1 = CALL $210(($2 + [32]))
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$8 }
	*($2 + [16]) = ($1 << [1])
	$5 = (($2 + [16]) | [1])
	if ( $1 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$6 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2 + [16]) = ($6 | [1])
	*($2 + [24]) = $5
	*($2 + [20]) = $1
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [32]), $1)
	
.LABEL $label$6
	*(($5 + $1)) = [0]
	CALL $76($0, ($2 + [16]))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*($2 + [24]))
	
.LABEL $label$9
	$6 = *($2 + [320])
	if ( ($6 == 0) ){ goto $label$10 }
	$7 = ($2 + [324])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$14 }
	$5 = *($1 + [28])
	if ( ($5 == 0) ){ goto $label$15 }
	*(($1 + [32])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$15
	$5 = *($1 + [16])
	if ( ($5 == 0) ){ goto $label$16 }
	*(($1 + [20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$16
	CALL _ZdlPv($1)
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$13 }
	$1 = *(($2 + [320]))
	goto $label$11 
	
.LABEL $label$12
	$1 = $6
	
.LABEL $label$11
	*($7) = $6
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$5 = *($2 + [368])
	if ( ($5 == 0) ){ goto $label$17 }
	$6 = ($2 + [372])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$21 }
	CALL _ZdlPv($0)
	
.LABEL $label$21
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$20 }
	$1 = *(($2 + [368]))
	goto $label$18 
	
.LABEL $label$19
	$1 = $5
	
.LABEL $label$18
	*($6) = $5
	CALL _ZdlPv($1)
	
.LABEL $label$17
	$global$0 = ($2 + [384])
	return (unreachable)
	
.LABEL $label$5
	CALL $180(($2 + [16]))
}

int_32 .FUNC $25 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $7)
	*($4 + [128]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $99(($4 + [16]), ($4 + [128]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	$3 = *($3)
	*((($4 + [96]) + [8])) = $3
	*(($8 = (($4 + [112]) + [8]))) = $3
	$9 = *($4)
	*($4 + [112]) = $9
	*($4 + [96]) = $9
	$3 = *($8)
	*((($4 + [128]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [112])
	*($4 + [32]) = $0
	*($4 + [128]) = $0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [88])
	$1 = *($4 + [80])
	$9 = *($4 + [72])
	$10 = *($4 + [64])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $216($2)
	
.LABEL $label$6
	$global$0 = ($4 + [144])
	return [1]
}

void .FUNC $24 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	CALL $39($0, $1, $2, $3, $4)
}

int_32 .FUNC $27 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$3 = ($global$0 - [192])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [104]))) = (int_64)0
	*(($8 = ($4 + [96]))) = (int_64)0
	*(($9 = (($4 + [64]) + [24]))) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $7)
	*($4 + [112]) = ($4 + [48])
	*($4 + [144]) = ($4 + [64])
	CALL $60(($4 + [144]), ($4 + [112]))
	*(($10 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	$10 = *($10)
	*((($4 + [176]) + [8])) = $10
	*(($11 = (($4 + [112]) + [8]))) = $10
	$12 = *($4)
	*($4 + [112]) = $12
	*($4 + [176]) = $12
	$10 = *($11)
	*((($4 + [144]) + [8])) = $10
	*((($4 + [16]) + [24])) = $10
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [112])
	*($4 + [32]) = $0
	*($4 + [144]) = $0
	*(($10 = (($4 + [112]) + [16]))) = *($8)
	*(($8 = (($4 + [112]) + [24]))) = *($3)
	*($4 + [112]) = *($4 + [80])
	*($4 + [120]) = *($9)
	$0 = *($4 + [72])
	$1 = *($4 + [64])
	*((($4 + [144]) + [24])) = *($8)
	*((($4 + [144]) + [16])) = *($10)
	*($4 + [152]) = *($4 + [120])
	*($4 + [144]) = *($4 + [112])
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ($4 + [144])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $216($2)
	
.LABEL $label$6
	$global$0 = ($4 + [192])
	return [1]
}

void .FUNC $26 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [144])
	$global$0 = $4
	CALL require_auth((int_64)4229868842700407840)
	$5 = [0]
	*(($4 + [136])) = [0]
	*($4 + [112]) = $1
	*($4 + [120]) = (int_64)-1
	*($4 + [128]) = (int_64)0
	$6 = *($0)
	*($4 + [104]) = $6
	*($4 + [64]) = (int_64)0
	$7 = CALL db_find_i64($6, $1, (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $47(($4 + [104]), $7)
	if ( ((int_32)*($5 + [8]) == (int_32)($4 + [104])) ){ goto $label$1 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$1
	if ( ((int_64)*(( $5 ? ($4 + [64]) : $5 )) == (int_64)1) ){ goto $label$2 }
	CALL eosio_assert([0], [8715])
	
.LABEL $label$2
	$5 = [0]
	*(($4 + [96])) = [0]
	*($4 + [80]) = (int_64)-1
	$6 = *($0)
	*($4 + [64]) = $6
	*($4 + [88]) = (int_64)0
	*($4 + [72]) = $1
	$7 = CALL db_find_i64($6, $1, (int_64)-4366050722735718400, (int_64))((int_64)0 - $2)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $61(($4 + [64]), $7)
	if ( ((int_32)*($5 + [48]) == (int_32)($4 + [64])) ){ goto $label$6 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$6
	if ( (*($5 + [12]) == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [8741])
	if ( (*([0] + [12]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8762])
	
.LABEL $label$3
	*($4 + [56]) = [0]
	*($4 + [48]) = (int_64)0
	CALL $9($0, $3, ($4 + [48]))
	$2 = *($0)
	*($4 + [8]) = ($4 + [48])
	CALL $62(($4 + [64]), $5, $2, ($4 + [8]))
	*(($4 + [40])) = [0]
	*($4 + [8]) = *($0)
	*($4 + [16]) = $1
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	CALL $63($0, ($4 + [8]), *($5))
	$3 = *($4 + [32])
	if ( ($3 == 0) ){ goto $label$7 }
	$7 = ($4 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*(($5 + [72])))
	
.LABEL $label$12
	CALL _ZdlPv($5)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($4 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $3
	
.LABEL $label$8
	*($7) = $3
	CALL _ZdlPv($0)
	
.LABEL $label$7
	$0 = *($4 + [48])
	if ( ($0 == 0) ){ goto $label$13 }
	*($4 + [52]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$13
	$7 = *($4 + [88])
	if ( ($7 == 0) ){ goto $label$14 }
	$8 = ($4 + [92])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$17:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$18 }
	$3 = *($0 + [28])
	if ( ($3 == 0) ){ goto $label$19 }
	*(($0 + [32])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$19
	$3 = *($0 + [16])
	if ( ($3 == 0) ){ goto $label$20 }
	*(($0 + [20])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$20
	CALL _ZdlPv($0)
	
.LABEL $label$18
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	$0 = *(($4 + [88]))
	goto $label$15 
	
.LABEL $label$16
	$0 = $7
	
.LABEL $label$15
	*($8) = $7
	CALL _ZdlPv($0)
	
.LABEL $label$14
	$3 = *($4 + [128])
	if ( ($3 == 0) ){ goto $label$21 }
	$7 = ($4 + [132])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$23 }
	
.LOOP $label$24:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$25 }
	CALL _ZdlPv($5)
	
.LABEL $label$25
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$24 }
	$0 = *(($4 + [128]))
	goto $label$22 
	
.LABEL $label$23
	$0 = $3
	
.LABEL $label$22
	*($7) = $3
	CALL _ZdlPv($0)
	
.LABEL $label$21
	$global$0 = ($4 + [144])
}

int_32 .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9682])
	
.LABEL $label$5
	$4 = CALL $213($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([36])) + [24]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [4])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [8])
	*($3 + [52]) = ($5 + [12])
	*($3 + [56]) = ($5 + [16])
	*($3 + [60]) = ($5 + [20])
	CALL $163(($3 + [40]), ($3 + [32]))
	*($5 + [28]) = $1
	*($3 + [32]) = $5
	*($3 + [40]) = (int_64)-4455901497821387904
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)-4455901497821387904
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $164(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $216($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9705])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9705])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9705])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9705])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $166(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [24]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4455901497821387904, (int_64)-4455901497821387904)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $101($1, $2)
	if ( ((int_32)*($2 + [24]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [9631])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	CALL eosio_assert([0], [10619])
	
.LABEL $label$1
	*($0) = *($2)
	*(($0 + [16])) = *(($2 + [16]))
	*(($0 + [8])) = *(($2 + [8]))
}

void .FUNC $102 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [24]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4455901497821387904, (int_64)-4455901497821387904)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $101($0, $4)
	if ( ((int_32)*($4 + [24]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$2
	*($3) = $1
	CALL $131($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $132($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*(($1 + [52])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9996])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [10046])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [56]))
	$9 = *($1 + [60])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4455901301129084928, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9682])
	
.LABEL $label$5
	$4 = CALL $213($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([64])) + [52]) = $0
	*($5) = (int_64)0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [48])
	CALL $156(($3 + [32]), ($3 + [24]))
	*($5 + [60]) = [-1]
	*($5 + [56]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $154(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $216($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *(*($4) + [4])
	*($1 + [12 align=4]) = *($5 + [12 align=4])
	*($1 + [8]) = *($5 + [8])
	*($1) = *($5)
	$6 = *($0)
	*(($1 + [56])) = *(($5 + [56]))
	*(($1 + [48])) = *(($5 + [48]))
	*(($1 + [40])) = *(($5 + [40]))
	*($1 + [32]) = *($5 + [32])
	$7 = ($1 + [64])
	CALL $183($7, (*(*($4) + [4]) + [64]))
	*($1 + [80]) = *(*(*($4) + [4]) + [80])
	$5 = *($1 + [64])
	$4 = ( *(($1 + [68])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($4 + [57])
	$8 = (CASTING uint_64)(uint_32 $4)
	$9 = ($1 + [80])
	$10 = ($1 + [32])
	$11 = ($1 + [16])
	$12 = ($1 + [12])
	$13 = ($1 + [8])
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$4 = CALL $213($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $13
	*($3 + [32]) = $1
	*($3 + [40]) = $12
	*($3 + [44]) = $11
	*($3 + [48]) = $10
	*($3 + [52]) = $7
	*($3 + [56]) = $9
	CALL $170(($3 + [32]), ($3 + [24]))
	$14 = *($1)
	$8 = (int_64)
	*($1 + [92]) = CALL db_store_i64(*($6 + [8]), (int_64)7035937668219273216, *(*($0 + [8])), $8((int_64)0 - $14)), $4, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)*($6 + [16]) <= (uint_64)$8) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $216($4)
	if ( ((uint_64)*($6 + [16]) > (uint_64)$8) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 + [16])) = ( (int_64)-2 ? (int_64))((int_64)1 - $14) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [64])
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9996])
	
.LABEL $label$2
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$5 }
	$4 = ($3 + [-24])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10046])
	$5 = *($2)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$6 }
	$2 = $3
	
.LOOP $label$7:
	$4 = *($2)
	*($2) = [0]
	$6 = ($2 + [-24])
	$3 = *($6)
	*($6) = $4
	if ( ($3 == 0) ){ goto $label$8 }
	CALL _ZdlPv($3)
	
.LABEL $label$8
	*(($2 + [-8])) = *(($2 + [16]))
	*(($2 + [-16])) = *(($2 + [8]))
	$2 = ($2 + [24])
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$7 }
	$4 = ($2 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$2) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ($3 + [-24])
	
.LABEL $label$4
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL _ZdlPv($2)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $4
	CALL db_remove_i64(*(($1 + [28])))
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9682])
	
.LABEL $label$5
	$4 = CALL $213($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([112])) + [72]) = [0]
	*($5 + [64 align=4]) = (int_64)0
	*($5 + [88]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [12])
	*($3 + [44]) = ($5 + [16])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [64])
	*($3 + [56]) = ($5 + [80])
	CALL $171(($3 + [32]), ($3 + [24]))
	*($5 + [92]) = $1
	*($3 + [24]) = $5
	$7 = (int_64)
	*($3 + [32]) = $7((int_64)0 - *($5)))
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $108(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $216($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [64]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [72])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $108 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $193($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [64]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [72])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $212 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $213($1)
	
.LABEL $label$2
	*(CALL $195()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $213(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $216($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $38 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [112])
	$global$0 = $4
	CALL require_auth((int_64)4229868842700407840)
	$5 = [0]
	*((($4 + [72]) + [32])) = [0]
	*($4 + [80]) = $1
	*($4 + [88]) = (int_64)-1
	*($4 + [96]) = (int_64)0
	$6 = *($0)
	*($4 + [72]) = $6
	*($4 + [32]) = (int_64)0
	$7 = [0]
	$8 = CALL db_find_i64($6, $1, (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $47(($4 + [72]), $8)
	if ( ((int_32)*($7 + [8]) == (int_32)($4 + [72])) ){ goto $label$1 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*(( $7 ? ($4 + [32]) : $7 )) == (int_64)1), [8788])
	*((($4 + [32]) + [32])) = [0]
	*($4 + [48]) = (int_64)-1
	$6 = *($0)
	*($4 + [32]) = $6
	*($4 + [56]) = (int_64)0
	*($4 + [40]) = $1
	$7 = CALL db_find_i64($6, $1, (int_64)7035937633859534848, (int_64))((int_64)0 - $2)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $49(($4 + [32]), $7)
	if ( ((int_32)*($5 + [96]) == (int_32)($4 + [32])) ){ goto $label$2 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [8800])
	CALL eosio_assert((*($5 + [8]) == 0), [8838])
	$7 = (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
	*($4 + [28]) = $7
	*($4 + [24]) = (($7 + [102]) - ((uint_32)($7 + [60]) % (uint_32)[60]))
	$1 = *($0)
	*($4 + [8]) = $3
	*($4 + [12]) = ($4 + [28])
	*($4 + [16]) = ($4 + [24])
	CALL $64(($4 + [32]), $5, $1, ($4 + [8]))
	$7 = *($4 + [56])
	if ( ($7 == 0) ){ goto $label$3 }
	$3 = ($4 + [60])
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	if ( ((*($0 + [64]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($0 + [72])))
	
.LABEL $label$8
	CALL _ZdlPv($0)
	
.LABEL $label$7
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$6 }
	$5 = *(($4 + [56]))
	goto $label$4 
	
.LABEL $label$5
	$5 = $7
	
.LABEL $label$4
	*($3) = $7
	CALL _ZdlPv($5)
	
.LABEL $label$3
	$7 = *($4 + [96])
	if ( ($7 == 0) ){ goto $label$9 }
	$3 = ($4 + [100])
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	CALL _ZdlPv($0)
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$12 }
	$5 = *(($4 + [96]))
	goto $label$10 
	
.LABEL $label$11
	$5 = $7
	
.LABEL $label$10
	*($3) = $7
	CALL _ZdlPv($5)
	
.LABEL $label$9
	$global$0 = ($4 + [112])
}

void .FUNC $39 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [288])
	$global$0 = $5
	CALL require_auth((int_64)4229868842424340576)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$19 }
	if ( ((int_64)$1 > (int_64)7035937269232857087) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL eosio_assert([0], [9286])
	if ( ((int_64)$1 <= (int_64)7035937269232857087) ){ goto $label$17 }
	
.LABEL $label$18
	if ( ((int_64)$1 == (int_64)7035937269232857088) ){ goto $label$27 }
	if ( ((int_64)$1 == (int_64)7035938067009503232) ){ goto $label$26 }
	if ( ((int_64)$1 != (int_64)7035937633859534848) ){ goto $label$16 }
	$6 = [0]
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	$7 = *($0)
	*($5 + [32]) = $7
	*($5 + [40]) = $2
	$8 = CALL db_lowerbound_i64($7, $2, (int_64)7035937633859534848, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$28 }
	$9 = CALL $49(($5 + [32]), $8)
	if ( (int_64)($4 == 0) ){ goto $label$28 }
	$4 = (int_64))((int_64)1 - $4)
	$6 = [0]
	
.LOOP $label$29:
	$8 = [0]
	$10 = CALL db_next_i64(*($9 + [100]), ($5 + [16]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$30 }
	$8 = CALL $49(($5 + [32]), $10)
	
.LABEL $label$30
	CALL $86(($5 + [32]), $9)
	$6 = ($6 + [1])
	if ( (int_64)($4 == 0) ){ goto $label$28 }
	$4 = ((int_64)$4 + (int_64)1)
	$9 = $8
	if ( $8 ){ goto $label$29 }
	
.LABEL $label$28
	$10 = *($5 + [56])
	if ( ($10 == 0) ){ goto $label$8 }
	$11 = ($5 + [60])
	$8 = *($11)
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$25 }
	
.LOOP $label$31:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$32 }
	if ( ((*($9 + [64]) & [1]) == 0) ){ goto $label$33 }
	CALL _ZdlPv(*(($9 + [72])))
	
.LABEL $label$33
	CALL _ZdlPv($9)
	
.LABEL $label$32
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$31 }
	$8 = *(($5 + [56]))
	goto $label$24 
	
.LABEL $label$27
	$6 = [0]
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	$7 = *($0)
	*($5 + [32]) = $7
	*($5 + [40]) = $2
	$8 = CALL db_lowerbound_i64($7, $2, (int_64)7035937269232857088, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$34 }
	$9 = CALL $87(($5 + [32]), $8)
	if ( (int_64)($4 == 0) ){ goto $label$34 }
	$4 = (int_64))((int_64)1 - $4)
	$6 = [0]
	
.LOOP $label$35:
	$8 = [0]
	$10 = CALL db_next_i64(*($9 + [20]), ($5 + [16]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$36 }
	$8 = CALL $87(($5 + [32]), $10)
	
.LABEL $label$36
	CALL $88(($5 + [32]), $9)
	$6 = ($6 + [1])
	if ( (int_64)($4 == 0) ){ goto $label$34 }
	$4 = ((int_64)$4 + (int_64)1)
	$9 = $8
	if ( $8 ){ goto $label$35 }
	
.LABEL $label$34
	$10 = *($5 + [56])
	if ( ($10 == 0) ){ goto $label$8 }
	$11 = ($5 + [60])
	$8 = *($11)
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$23 }
	
.LOOP $label$37:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$38 }
	CALL _ZdlPv($9)
	
.LABEL $label$38
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$37 }
	$8 = *(($5 + [56]))
	goto $label$22 
	
.LABEL $label$26
	$6 = [0]
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	$7 = *($0)
	*($5 + [32]) = $7
	*($5 + [40]) = $2
	$8 = CALL db_lowerbound_i64($7, $2, (int_64)7035938067009503232, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$39 }
	$9 = CALL $54(($5 + [32]), $8)
	if ( (int_64)($4 == 0) ){ goto $label$39 }
	$4 = (int_64))((int_64)1 - $4)
	$6 = [0]
	
.LOOP $label$40:
	$8 = [0]
	$10 = CALL db_next_i64(*($9 + [140]), ($5 + [16]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$41 }
	$8 = CALL $54(($5 + [32]), $10)
	
.LABEL $label$41
	CALL $95(($5 + [32]), $9)
	$6 = ($6 + [1])
	if ( (int_64)($4 == 0) ){ goto $label$39 }
	$4 = ((int_64)$4 + (int_64)1)
	$9 = $8
	if ( $8 ){ goto $label$40 }
	
.LABEL $label$39
	$10 = *($5 + [56])
	if ( ($10 == 0) ){ goto $label$8 }
	$11 = ($5 + [60])
	$8 = *($11)
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$21 }
	
.LOOP $label$42:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$43 }
	CALL _ZdlPv($9)
	
.LABEL $label$43
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$42 }
	$8 = *(($5 + [56]))
	goto $label$20 
	
.LABEL $label$25
	$8 = $10
	
.LABEL $label$24
	*($11) = $10
	CALL _ZdlPv($8)
	$4 = (int_64)0
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$23
	$8 = $10
	
.LABEL $label$22
	*($11) = $10
	CALL _ZdlPv($8)
	goto $label$8 
	
.LABEL $label$21
	$8 = $10
	
.LABEL $label$20
	*($11) = $10
	CALL _ZdlPv($8)
	$4 = (int_64)0
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$17
	if ( ((int_64)$1 == (int_64)-4366057016889413632) ){ goto $label$44 }
	if ( ((int_64)$1 == (int_64)-4366050722735718400) ){ goto $label$15 }
	if ( ((int_64)$1 != (int_64)4229865212519383040) ){ goto $label$16 }
	$6 = [0]
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	*($5 + [68]) = [0]
	$7 = *($0)
	*($5 + [32]) = $7
	*($5 + [40]) = $2
	$8 = CALL db_lowerbound_i64($7, $2, (int_64)4229865212519383040, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$45 }
	$9 = CALL $51(($5 + [32]), $8)
	if ( (int_64)($4 == 0) ){ goto $label$45 }
	$4 = (int_64))((int_64)1 - $4)
	$6 = [0]
	
.LOOP $label$46:
	$8 = [0]
	$10 = CALL db_next_i64(*($9 + [84]), ($5 + [16]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$47 }
	$8 = CALL $51(($5 + [32]), $10)
	
.LABEL $label$47
	CALL $85(($5 + [32]), $9)
	$6 = ($6 + [1])
	if ( (int_64)($4 == 0) ){ goto $label$45 }
	$4 = ((int_64)$4 + (int_64)1)
	$9 = $8
	if ( $8 ){ goto $label$46 }
	
.LABEL $label$45
	$10 = *($5 + [56])
	if ( ($10 == 0) ){ goto $label$8 }
	$11 = ($5 + [60])
	$8 = *($11)
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$14 }
	
.LOOP $label$48:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$49 }
	CALL _ZdlPv($9)
	
.LABEL $label$49
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$48 }
	$8 = *(($5 + [56]))
	goto $label$13 
	
.LABEL $label$44
	$6 = [0]
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	$4 = *($0)
	*($5 + [32]) = $4
	*($5 + [40]) = $2
	$8 = CALL db_find_i64($4, $2, (int_64)-4366057016889413632, (int_64)-4366057016889413632)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$9 }
	if ( ((int_32)*(CALL $96(($5 + [32]), $8) + [8]) == (int_32)($5 + [32])) ){ goto $label$50 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$50
	$8 = *(($5 + [60]))
	if ( ((int_32)$8 == (int_32)*(($5 + [56]))) ){ goto $label$12 }
	$8 = *(($8 + [-24]))
	if ( ((int_32)*($8 + [8]) == (int_32)($5 + [32])) ){ goto $label$51 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$51
	if ( $8 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$16
	$6 = [0]
	CALL eosio_assert([0], [9309])
	$4 = (int_64)0
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$15
	$6 = [0]
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	$7 = *($0)
	*($5 + [32]) = $7
	*($5 + [40]) = $2
	$8 = CALL db_lowerbound_i64($7, $2, (int_64)-4366050722735718400, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$52 }
	$9 = CALL $61(($5 + [32]), $8)
	if ( (int_64)($4 == 0) ){ goto $label$52 }
	$4 = (int_64))((int_64)1 - $4)
	$6 = [0]
	
.LOOP $label$53:
	$8 = [0]
	$10 = CALL db_next_i64(*($9 + [52]), ($5 + [16]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$54 }
	$8 = CALL $61(($5 + [32]), $10)
	
.LABEL $label$54
	CALL $97(($5 + [32]), $9)
	$6 = ($6 + [1])
	if ( (int_64)($4 == 0) ){ goto $label$52 }
	$4 = ((int_64)$4 + (int_64)1)
	$9 = $8
	if ( $8 ){ goto $label$53 }
	
.LABEL $label$52
	$11 = *($5 + [56])
	if ( ($11 == 0) ){ goto $label$8 }
	$12 = ($5 + [60])
	$9 = *($12)
	if ( ((int_32)$9 == (int_32)$11) ){ goto $label$5 }
	
.LOOP $label$55:
	$9 = ($9 + [-24])
	$8 = *($9)
	*($9) = [0]
	if ( ($8 == 0) ){ goto $label$56 }
	$10 = *($8 + [28])
	if ( ($10 == 0) ){ goto $label$57 }
	*(($8 + [32])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$57
	$10 = *($8 + [16])
	if ( ($10 == 0) ){ goto $label$58 }
	*(($8 + [20])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$58
	CALL _ZdlPv($8)
	
.LABEL $label$56
	if ( ((int_32)$11 != (int_32)$9) ){ goto $label$55 }
	$8 = *(($5 + [56]))
	goto $label$4 
	
.LABEL $label$14
	$8 = $10
	
.LABEL $label$13
	*($11) = $10
	CALL _ZdlPv($8)
	$4 = (int_64)0
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$12
	$8 = CALL db_find_i64(*($5 + [32]), *(($5 + [40])), (int_64)-4366057016889413632, (int_64)-4366057016889413632)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$8 = CALL $96(($5 + [32]), $8)
	if ( ((int_32)*($8 + [8]) == (int_32)($5 + [32])) ){ goto $label$11 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$11
	$9 = CALL db_next_i64(*($8 + [12]), ($5 + [16]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$59 }
	CALL $96(($5 + [32]), $9)
	
.LABEL $label$59
	CALL $98(($5 + [32]), $8)
	
.LABEL $label$10
	$6 = [1]
	
.LABEL $label$9
	$10 = *($5 + [56])
	if ( ($10 == 0) ){ goto $label$8 }
	$11 = ($5 + [60])
	$8 = *($11)
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$7 }
	
.LOOP $label$60:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$61 }
	CALL _ZdlPv($9)
	
.LABEL $label$61
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$60 }
	$8 = *(($5 + [56]))
	goto $label$6 
	
.LABEL $label$8
	$4 = (int_64)0
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$7
	$8 = $10
	
.LABEL $label$6
	*($11) = $10
	CALL _ZdlPv($8)
	$4 = (int_64)0
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$5
	$8 = $11
	
.LABEL $label$4
	*($12) = $11
	CALL _ZdlPv($8)
	$4 = (int_64)0
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$2 }
	
.LABEL $label$3
	*(($5 + [24])) = [0]
	*($5 + [16]) = $4
	*($5 + [16]) = [0]
	$9 = (($5 + [16]) | [1])
	$8 = $9
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	$10 = *([0] + [8496])
	
.LOOP $label$63:
	*((($5 + [32]) + ($8 = $9))) = *(($10 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$9 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$62 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)$4) ){ goto $label$63 }
	
.LABEL $label$62
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$65 }
	*($5 + [16]) = ($9 << [1])
	$10 = (($5 + [16]) | [1])
	goto $label$64 
	
.LABEL $label$65
	$11 = (($9 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($5 + [16]) = ($11 | [1])
	*($5 + [24]) = $10
	*($5 + [20]) = $9
	
.LABEL $label$64
	$11 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$66:
	*(($10 + $8)) = *((($5 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$66 }
	$8 = ($10 + $9)
	$9 = (($5 + [16]) | [1])
	
.LABEL $label$1
	*($8) = [0]
	*($5) = $6
	*($5 + [4]) = ( *($5 + [24]) ? $9 : (*($5 + [16]) & [1]) )
	CALL $201(($5 + [32]), [256], [9328], $5)
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$67 }
	CALL _ZdlPv(*(($5 + [24])))
	
.LABEL $label$67
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$8 = CALL $210(($5 + [32]))
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$68 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$71 }
	*($5 + [16]) = ($8 << [1])
	$9 = (($5 + [16]) | [1])
	if ( $8 ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$71
	$10 = (($8 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($5 + [16]) = ($10 | [1])
	*($5 + [24]) = $9
	*($5 + [20]) = $8
	
.LABEL $label$70
	CALL memcpy($9, ($5 + [32]), $8)
	
.LABEL $label$69
	*(($9 + $8)) = [0]
	CALL $76($0, ($5 + [16]))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$72 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$72
	$global$0 = ($5 + [288])
	return (unreachable)
	
.LABEL $label$68
	CALL $180(($5 + [16]))
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
}

int_32 .FUNC $37 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [72]) = [0]
	*($4 + [64]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $7)
	CALL $78(($4 + [48]), ($4 + [64]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	$3 = *($3)
	*((($4 + [80]) + [8])) = $3
	*(($8 = (($4 + [96]) + [8]))) = $3
	$9 = *($4)
	*($4 + [96]) = $9
	*($4 + [80]) = $9
	$3 = *($8)
	*((($4 + [112]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [96])
	*($4 + [32]) = $0
	*($4 + [112]) = $0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$8 = CALL $181(($4 + [112]), ($4 + [64]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $8), (int_32 $6))
	if ( (*($4 + [112]) & [1]) ){ goto $label$9 }
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL _ZdlPv(*($8 + [8]))
	if ( ($7 <= [513]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $216($2)
	$2 = [1]
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [64]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	$global$0 = ($4 + [128])
	return $2
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [72])))
	$global$0 = ($4 + [128])
	return $2
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth((int_64)4229868842424340576)
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$3 = *($0)
	*($2) = $3
	$4 = *($1)
	*($2 + [8]) = $4
	$1 = CALL db_find_i64($3, $4, (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$1 = CALL $47($2, $1)
	if ( ((int_32)*($1 + [8]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$2
	$0 = CALL db_next_i64(*($1 + [12]), ($2 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	CALL $47($2, $0)
	
.LABEL $label$3
	CALL $89($2, $1)
	
.LABEL $label$1
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($2 + [28])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL _ZdlPv($0)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$7 }
	$1 = *(($2 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$1 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL _ZdlPv($1)
	
.LABEL $label$4
	$global$0 = ($2 + [48])
}

void .FUNC $35 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [96])
	$global$0 = $1
	CALL require_auth((int_64)4229868842424340576)
	*((($1 + [48]) + [32])) = [0]
	*($1 + [64]) = (int_64)-1
	*($1 + [72]) = (int_64)0
	$2 = *($0)
	*($1 + [48]) = $2
	*($1 + [56]) = $2
	$3 = CALL db_find_i64($2, $2, (int_64)7035931339705839616, (int_64)7035931339705839616)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $90(($1 + [48]), $3)
	if ( ((int_32)*($3 + [8]) == (int_32)($1 + [48])) ){ goto $label$2 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$2
	$4 = CALL db_next_i64(*($3 + [12]), ($1 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL $90(($1 + [48]), $4)
	
.LABEL $label$3
	CALL $91(($1 + [48]), $3)
	
.LABEL $label$1
	*((($1 + [8]) + [32])) = [0]
	*($1 + [24]) = (int_64)-1
	*($1 + [32]) = (int_64)0
	$2 = *($0)
	*($1 + [8]) = $2
	*($1 + [16]) = $2
	$0 = CALL db_find_i64($2, $2, (int_64)4229663799601135616, (int_64)4229663799601135616)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $92(($1 + [8]), $0)
	if ( ((int_32)*($0 + [8]) == (int_32)($1 + [8])) ){ goto $label$5 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$5
	$3 = CALL db_next_i64(*($0 + [12]), ($1 + [88]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	CALL $92(($1 + [8]), $3)
	
.LABEL $label$6
	CALL $93(($1 + [8]), $0)
	
.LABEL $label$4
	$4 = *($1 + [32])
	if ( ($4 == 0) ){ goto $label$7 }
	$5 = ($1 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	CALL _ZdlPv($3)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($1 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($5) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$7
	$4 = *($1 + [72])
	if ( ($4 == 0) ){ goto $label$12 }
	$5 = ($1 + [76])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$14 }
	
.LOOP $label$15:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$16 }
	CALL _ZdlPv($3)
	
.LABEL $label$16
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$15 }
	$0 = *(($1 + [72]))
	goto $label$13 
	
.LABEL $label$14
	$0 = $4
	
.LABEL $label$13
	*($5) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$12
	$global$0 = ($1 + [96])
}

int_32 .FUNC $32 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [256])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $213($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	CALL memset(($4 + [64]), [0], [80])
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $7)
	*($4 + [16]) = ($4 + [48])
	*($4 + [180]) = (($4 + [64]) | [8])
	*($4 + [184]) = (($4 + [64]) + [16])
	*($4 + [176]) = ($4 + [64])
	$3 = (($4 + [64]) + [60])
	*($4 + [192]) = $3
	$8 = (($4 + [64]) + [48])
	*($4 + [188]) = $8
	CALL $77(($4 + [176]), ($4 + [16]))
	*(($9 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	$9 = *($9)
	*((($4 + [144]) + [8])) = $9
	*(($10 = (($4 + [160]) + [8]))) = $9
	$11 = *($4)
	*($4 + [160]) = $11
	*($4 + [144]) = $11
	$9 = *($10)
	*((($4 + [176]) + [8])) = $9
	*((($4 + [16]) + [24])) = $9
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [160])
	*($4 + [32]) = $0
	*($4 + [176]) = $0
	*((($4 + [176]) + [40])) = *((($4 + [64]) + [40]))
	*((($4 + [176]) + [32])) = *((($4 + [64]) + [32]))
	*((($4 + [176]) + [24])) = *((($4 + [64]) + [24]))
	*((($4 + [176]) + [16])) = *($4 + [80])
	*($4 + [184]) = *($4 + [72])
	*($4 + [176]) = *($4 + [64])
	$9 = CALL $181((($4 + [176]) + [48]), $8)
	$8 = CALL $181((($4 + [176]) + [60]), $3)
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 ($4 + [176])), (int_32 $6))
	if ( (*($8) & [1]) ){ goto $label$9 }
	if ( (*($9) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL _ZdlPv(*(($4 + [244])))
	if ( ((*($9) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv(*(($4 + [232])))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ($7 <= [513]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $216($2)
	
.LABEL $label$5
	if ( ((*(($4 + [124])) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($4 + [132])))
	
.LABEL $label$10
	if ( ((*(($4 + [112])) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($4 + [120])))
	
.LABEL $label$11
	$global$0 = ($4 + [256])
	return [1]
}

void .FUNC $33 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$4 = ($global$0 - [736])
	$global$0 = $4
	*($4 + [696]) = $1
	CALL require_auth((int_64)4229868842700407840)
	*((($4 + [656]) + [32])) = [0]
	*($4 + [664]) = $1
	*($4 + [672]) = (int_64)-1
	$5 = *($0)
	*($4 + [656]) = $5
	*($4 + [680]) = (int_64)0
	$6 = [0]
	$7 = CALL db_find_i64($5, $1, (int_64)7035937633859534848, (int_64))((int_64)0 - $2)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $49(($4 + [656]), $7)
	if ( ((int_32)*($6 + [96]) == (int_32)($4 + [656])) ){ goto $label$1 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [8800])
	CALL eosio_assert(((int_32)*($6 + [8]) == (int_32)[1]), [8868])
	$5 = CALL current_time()
	CALL eosio_assert((*($6 + [16]) <= (CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000))), [8898])
	CALL assert_sha256($3, [32], ($6 + [32]))
	*((($4 + [616]) + [32])) = [0]
	*($4 + [632]) = (int_64)-1
	$5 = *($0)
	*($4 + [616]) = $5
	*($4 + [640]) = (int_64)0
	$8 = *($6 + [88])
	*($4 + [624]) = $1
	$7 = CALL db_find_i64($5, $1, (int_64)-4366050722735718400, (int_64))((int_64)0 - $8)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $61(($4 + [616]), $7)
	if ( ((int_32)*($9 + [48]) == (int_32)($4 + [616])) ){ goto $label$2 }
	CALL eosio_assert([0], [9631])
	goto $label$2 
	
.LABEL $label$3
	$9 = [0]
	CALL eosio_assert([0], [8925])
	
.LABEL $label$2
	*($4 + [608]) = [0]
	*($4 + [600]) = (int_64)0
	$7 = (*(($9 + [32])) - *($9 + [28]))
	if ( ($7 == 0) ){ goto $label$18 }
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$17 }
	$10 = CALL _Znwj($7)
	*(($4 + [608])) = ($10 + (int_32($7 >> [1]) << [1]))
	*($4 + [600]) = $10
	*($4 + [604]) = $10
	$11 = *(($9 + [28]))
	$7 = (*(($9 + [32])) - $11)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$18 }
	CALL memcpy($10, $11, $7)
	*($4 + [604]) = (*($4 + [604]) + $7)
	
.LABEL $label$18
	$12 = CALL $11(($4 + [696]), ($9 + [16]), ($4 + [600]), $3, ($4 + [584]))
	CALL $7(($4 + [568]), ($4 + [584]))
	CALL $8(($4 + [552]), ($4 + [584]))
	$5 = *($0)
	*($4 + [388]) = ($4 + [584])
	*($4 + [384]) = ($4 + [568])
	CALL $65(($4 + [656]), $6, $5, ($4 + [384]))
	*((($4 + [512]) + [32])) = [0]
	*($4 + [520]) = $1
	*($4 + [528]) = (int_64)-1
	*($4 + [536]) = (int_64)0
	$5 = *($0)
	*($4 + [512]) = $5
	if ( ((int_64)$5 == (int_64)CALL current_receiver()) ){ goto $label$19 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$19
	*(($6 = CALL _Znwj([32])) + [16]) = ($4 + [512])
	*($6) = $2
	*($6 + [8]) = *($4 + [592])
	CALL memcpy(($4 + [384]), $6, [8])
	$11 = (($4 + [384]) | [8])
	CALL memcpy($11, ($6 + [8]), [8])
	$13 = *($6)
	$8 = (int_64)
	$10 = CALL db_store_i64(*((($4 + [512]) + [8])), (int_64)7035937269232857088, $5, $8((int_64)0 - $13)), ($4 + [384]), [16]
	*($6 + [20]) = $10)
	if ( ((uint_64)*((($4 + [512]) + [16])) > (uint_64)$8) ){ goto $label$20 }
	*(($4 + [528])) = ( (int_64)-2 ? (int_64))((int_64)1 - $13) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	*($4 + [256]) = $6
	$5 = (int_64)
	*($4 + [384]) = $5((int_64)0 - *($6)))
	*($4 + [472]) = $10
	$14 = ($4 + [540])
	$7 = *($14)
	if ( ((uint_32)$7 >= (uint_32)*((($4 + [512]) + [32]))) ){ goto $label$23 }
	*($7 + [8]) = $5
	*($7 + [16]) = $10
	*($4 + [256]) = [0]
	*($7) = $6
	*($14) = ($7 + [24])
	$6 = *($4 + [256])
	$7 = [0]
	*($4 + [256]) = [0]
	if ( $6 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL $66(($4 + [536]), ($4 + [256]), ($4 + [384]), ($4 + [472]))
	$6 = *($4 + [256])
	$7 = [0]
	*($4 + [256]) = [0]
	if ( ($6 == 0) ){ goto $label$21 }
	
.LABEL $label$22
	CALL _ZdlPv($6)
	
.LABEL $label$21
	*((($4 + [472]) + [32])) = $7
	*($4 + [488]) = (int_64)-1
	*($4 + [496]) = (int_64)0
	$8 = *($9)
	$5 = *($0)
	*($4 + [472]) = $5
	*($4 + [480]) = $8
	if ( ((int_64)$5 == (int_64)CALL current_receiver()) ){ goto $label$24 }
	CALL eosio_assert([0], [9896])
	
.LABEL $label$24
	*(($6 = CALL _Znwj([32])) + [16]) = ($4 + [472])
	*($6) = $2
	*($6 + [8]) = *((($4 + [584]) + [8]))
	CALL memcpy(($4 + [384]), $6, [8])
	CALL memcpy($11, ($6 + [8]), [8])
	$13 = *($6)
	$8 = (int_64)
	$10 = CALL db_store_i64(*((($4 + [472]) + [8])), (int_64)7035937269232857088, $5, $8((int_64)0 - $13)), ($4 + [384]), [16]
	*($6 + [20]) = $10)
	$7 = (($4 + [472]) + [16])
	if ( ((uint_64)*($7) > (uint_64)$8) ){ goto $label$25 }
	*($7) = ( (int_64)-2 ? (int_64))((int_64)1 - $13) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$25
	*($4 + [256]) = $6
	$5 = (int_64)
	*($4 + [384]) = $5((int_64)0 - *($6)))
	*($4 + [344]) = $10
	$11 = ($4 + [500])
	$7 = *($11)
	if ( ((uint_32)$7 >= (uint_32)*(($4 + [504]))) ){ goto $label$28 }
	*($7 + [8]) = $5
	*($7 + [16]) = $10
	*($4 + [256]) = [0]
	*($7) = $6
	*($11) = ($7 + [24])
	$7 = *($4 + [256])
	$6 = [0]
	*($4 + [256]) = [0]
	if ( $7 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL $66(($4 + [496]), ($4 + [256]), ($4 + [384]), ($4 + [344]))
	$7 = *($4 + [256])
	$6 = [0]
	*($4 + [256]) = [0]
	if ( ($7 == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL _ZdlPv($7)
	
.LABEL $label$26
	*((($4 + [384]) + [24])) = (int_64)0
	*(($4 + [424])) = (int_64)0
	*(($4 + [440])) = (int_64)0
	*(($4 + [456])) = (int_64)0
	*($4 + [392]) = (int_64)0
	*($4 + [384]) = (int_64)0
	*($4 + [400]) = (int_64)0
	*($4 + [416]) = (int_64)0
	*($4 + [432]) = (int_64)0
	*($4 + [448]) = (int_64)0
	$5 = (int_64)5459781
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$32 }
	$5 = $8
	$7 = $6
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$32
	$5 = $8
	
.LOOP $label$33:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$30 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $7 ){ goto $label$33 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert([0], [10229])
	
.LABEL $label$29
	*($4 + [392]) = (int_64)1397703940
	*($4 + [384]) = (int_64)0
	$5 = (int_64)1145979219
	$6 = [0]
	
.LOOP $label$36:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$35 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$37 }
	$5 = $8
	$7 = $6
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$5 = $8
	
.LOOP $label$38:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$35 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $7 ){ goto $label$38 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	CALL eosio_assert([0], [10229])
	
.LABEL $label$34
	*((($4 + [384]) + [24])) = (int_64)293370680068
	*($4 + [400]) = (int_64)0
	$5 = (int_64)1129595461
	$6 = [0]
	
.LOOP $label$41:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$40 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$42 }
	$5 = $8
	$7 = $6
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$42
	$5 = $8
	
.LOOP $label$43:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$40 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $7 ){ goto $label$43 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$40
	CALL eosio_assert([0], [10229])
	
.LABEL $label$39
	*(($4 + [424])) = (int_64)289176438024
	*($4 + [416]) = (int_64)0
	$5 = (int_64)1213482309
	$6 = [0]
	
.LOOP $label$46:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$45 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$47 }
	$5 = $8
	$7 = $6
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$46 }
	goto $label$44 
	
.LABEL $label$47
	$5 = $8
	
.LOOP $label$48:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$45 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $7 ){ goto $label$48 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$46 }
	goto $label$44 
	
.LABEL $label$45
	CALL eosio_assert([0], [10229])
	
.LABEL $label$44
	*(($4 + [440])) = (int_64)310651471112
	*($4 + [432]) = (int_64)0
	$5 = (int_64)1146312005
	$6 = [0]
	
.LOOP $label$51:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$50 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$52 }
	$5 = $8
	$7 = $6
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$52
	$5 = $8
	
.LOOP $label$53:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$50 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $7 ){ goto $label$53 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$50
	CALL eosio_assert([0], [10229])
	
.LABEL $label$49
	*(($4 + [456])) = (int_64)293455873288
	*($4 + [448]) = (int_64)0
	*((($4 + [344]) + [32])) = [0]
	*($4 + [360]) = (int_64)-1
	*($4 + [368]) = (int_64)0
	*($4 + [380]) = [0]
	$5 = *($0)
	*($4 + [344]) = $5
	*($4 + [352]) = $2
	$6 = CALL db_lowerbound_i64($5, $2, (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$54 }
	$6 = CALL $51(($4 + [344]), $6)
	$11 = (($4 + [584]) + [8])
	
.LOOP $label$55:
	$7 = *($6 + [40])
	$5 = *($11)
	if ( ((int_64)((int_64)$5 & (int_64)(CASTING int_64)(int_32 ([1] << $7))) == (int_64)0) ){ goto $label$60 }
	if ( ((int_32)$7 == (int_32)[6]) ){ goto $label$59 }
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$58 }
	$10 = [150]
	if ( ((int_64)((int_64)$5 & (int_64)64) != (int_64)0) ){ goto $label$57 }
	$10 = [100]
	if ( ((int_64)((int_64)$5 & (int_64)128) != (int_64)0) ){ goto $label$57 }
	$10 = *((($7 << [2]) + [8528]))
	goto $label$57 
	
.LABEL $label$60
	if ( ((uint_32)(($7 + [-1]) & [255]) > (uint_32)[1]) ){ goto $label$56 }
	$10 = [100]
	if ( ((int_64)((int_64)$5 & (int_64)8) != (int_64)0) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	$10 = ( [1300] ? [2100] : (int_64)(((int_64)$5 & (int_64)1) == 0) )
	goto $label$57 
	
.LABEL $label$58
	if ( ($7 == 0) ){ goto $label$56 }
	$10 = *((($7 << [2]) + [8528]))
	
.LABEL $label$57
	$5 = (CASTING int_64)(int_32 $10)
	$5 = *($6 + [24])
	CALL __multi3(($4 + [32]), $5, (int_64)$5 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	$13 = *(($6 + [32]))
	$5 = *((($4 + [32]) + [8]))
	$8 = *($4 + [32])
	if ( (( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ) == 0) ){ goto $label$62 }
	if ( ( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ) ){ goto $label$61 }
	CALL eosio_assert([0], [10273])
	goto $label$61 
	
.LABEL $label$62
	CALL eosio_assert([0], [10249])
	
.LABEL $label$61
	*((($4 + [256]) + [8])) = $13
	*($4 + [256]) = ((int_64)$8 / (int_64)100)
	$5 = *($0)
	*($4 + [220]) = ($4 + [384])
	*($4 + [216]) = ($4 + [256])
	CALL $67(($4 + [344]), $6, $5, ($4 + [216]))
	
.LABEL $label$56
	$6 = CALL db_next_i64(*($6 + [84]), ($4 + [256]))
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$54 }
	$6 = CALL $51(($4 + [344]), $6)
	goto $label$55 
	
.LABEL $label$54
	CALL $68($0, ($4 + [344]))
	*((($4 + [256]) + [24])) = *(($3 + [8]))
	*((($4 + [256]) + [32])) = *(($3 + [16]))
	*(($4 + [296])) = *(($3 + [24]))
	*($4 + [264]) = $2
	*($4 + [256]) = $1
	*($4 + [272]) = *($3)
	$15 = CALL $181(($4 + [304]), ($4 + [568]))
	$16 = CALL $181(($4 + [316]), ($4 + [552]))
	$5 = *($0)
	*($4 + [200]) = [8945]
	*($4 + [204]) = CALL $210([8945])
	*($4 + [24]) = *($4 + [200])
	$8 = *(CALL $4(($4 + [208]), ($4 + [24])))
	$13 = *($0)
	*($4 + [184]) = [8952]
	*($4 + [188]) = CALL $210([8952])
	*($4 + [16]) = *($4 + [184])
	$6 = CALL $4(($4 + [192]), ($4 + [16]))
	*(($7 = (($4 + [216]) + [24]))) = [0]
	*($4 + [216]) = $13
	*($4 + [232]) = (int_64)0
	*($4 + [224]) = *($6)
	*(($6 = CALL _Znwj([16]))) = $5
	*($6 + [8]) = $8
	$10 = ($6 + [16])
	*($7) = $10
	*(($4 + [236])) = $10
	*($4 + [232]) = $6
	CALL $69(($4 + [244]), ($4 + [256]))
	CALL $58(($4 + [216]))
	$6 = *($4 + [244])
	if ( ($6 == 0) ){ goto $label$63 }
	*(($4 + [248])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$63
	$6 = *($4 + [232])
	if ( ($6 == 0) ){ goto $label$64 }
	*(($4 + [236])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$64
	$14 = [0]
	*((($4 + [216]) + [32])) = [0]
	*($4 + [232]) = (int_64)-1
	$5 = *($0)
	*($4 + [216]) = $5
	*($4 + [224]) = $1
	*($4 + [240]) = (int_64)0
	$6 = CALL db_lowerbound_i64($5, $1, (int_64)7035938067009503232, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$65 }
	$11 = CALL $54(($4 + [216]), $6)
	$3 = ($4 + [152])
	
.LOOP $label$66:
	$5 = *(($11 + [16]))
	*($3) = $5
	*($4 + [144]) = (int_64)0
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$69:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$68 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$70 }
	$5 = $8
	$7 = $6
	$6 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$69 }
	goto $label$67 
	
.LABEL $label$70
	$5 = $8
	
.LOOP $label$71:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$68 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $7 ){ goto $label$71 }
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$69 }
	goto $label$67 
	
.LABEL $label$68
	CALL eosio_assert([0], [10229])
	
.LABEL $label$67
	$5 = *($0)
	*($4 + [108]) = ($4 + [144])
	*($4 + [104]) = ($4 + [384])
	CALL $70(($4 + [216]), $11, $5, ($4 + [104]))
	$6 = CALL db_next_i64(*($11 + [140]), ($4 + [144]))
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$65 }
	$11 = CALL $54(($4 + [216]), $6)
	goto $label$66 
	
.LABEL $label$65
	*((($4 + [144]) + [32])) = [0]
	*($4 + [160]) = (int_64)-1
	*($4 + [168]) = (int_64)0
	$5 = *($0)
	*($4 + [144]) = $5
	*($4 + [152]) = $1
	*($4 + [104]) = (int_64)0
	$6 = CALL db_find_i64($5, $1, (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$72 }
	$14 = CALL $47(($4 + [144]), $6)
	if ( ((int_32)*($14 + [8]) == (int_32)($4 + [144])) ){ goto $label$72 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$72
	if ( ((int_64)*(( $14 ? ($4 + [104]) : $14 )) != (int_64)1) ){ goto $label$73 }
	$5 = *($0)
	if ( ($12 == 0) ){ goto $label$75 }
	*($4 + [104]) = ($4 + [600])
	CALL $71(($4 + [616]), $9, $5, ($4 + [104]))
	CALL $72($0, ($4 + [616]))
	goto $label$74 
	
.LABEL $label$75
	*($4 + [104]) = ($4 + [600])
	CALL $73(($4 + [616]), $9, $5, ($4 + [104]))
	CALL $63($0, ($4 + [656]), *($9))
	
.LABEL $label$74
	$5 = *($0)
	*($4 + [88]) = [8945]
	*($4 + [92]) = CALL $210([8945])
	*($4 + [8]) = *($4 + [88])
	$8 = *(CALL $4(($4 + [96]), ($4 + [8])))
	*($4 + [72]) = [8959]
	*($4 + [76]) = CALL $210([8959])
	*($4) = *($4 + [72])
	$6 = CALL $4(($4 + [80]), $4)
	*(($7 = (($4 + [104]) + [24]))) = [0]
	*($4 + [56]) = $1
	*($4 + [48]) = (int_64)4229868842424340576
	*($4 + [64]) = $2
	*($4 + [104]) = (int_64)4229868842502116224
	*($4 + [120]) = (int_64)0
	*($4 + [112]) = *($6)
	*(($6 = CALL _Znwj([16]))) = $5
	*($6 + [8]) = $8
	*(($4 + [140])) = [0]
	$10 = ($6 + [16])
	*($7) = $10
	*(($4 + [124])) = $10
	*($4 + [120]) = $6
	*($4 + [132 align=4]) = (int_64)0
	CALL $56(($4 + [132]), [24])
	$10 = ($4 + [136])
	$6 = *($10)
	$7 = *($4 + [132])
	*($4 + [708]) = $7
	*($4 + [704]) = $7
	*($4 + [712]) = $6
	*($4 + [720]) = ($4 + [704])
	*($4 + [728]) = ($4 + [48])
	CALL $74(($4 + [728]), ($4 + [720]))
	CALL $58(($4 + [104]))
	$6 = *($4 + [132])
	if ( ($6 == 0) ){ goto $label$76 }
	*($10) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$76
	$6 = *($4 + [120])
	if ( ($6 == 0) ){ goto $label$73 }
	*(($4 + [124])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$73
	$10 = *($4 + [168])
	if ( ($10 == 0) ){ goto $label$77 }
	$11 = ($4 + [172])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$79 }
	
.LOOP $label$80:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$81 }
	CALL _ZdlPv($7)
	
.LABEL $label$81
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$80 }
	$6 = *(($4 + [168]))
	goto $label$78 
	
.LABEL $label$79
	$6 = $10
	
.LABEL $label$78
	*($11) = $10
	CALL _ZdlPv($6)
	
.LABEL $label$77
	$10 = *($4 + [240])
	if ( ($10 == 0) ){ goto $label$82 }
	$11 = ($4 + [244])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$84 }
	
.LOOP $label$85:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$86 }
	CALL _ZdlPv($7)
	
.LABEL $label$86
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$85 }
	$6 = *(($4 + [240]))
	goto $label$83 
	
.LABEL $label$84
	$6 = $10
	
.LABEL $label$83
	*($11) = $10
	CALL _ZdlPv($6)
	
.LABEL $label$82
	if ( (*($16) & [1]) ){ goto $label$88 }
	if ( (*($15) & [1]) ){ goto $label$87 }
	goto $label$16 
	
.LABEL $label$88
	CALL _ZdlPv(*(($4 + [324])))
	if ( ((*($15) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$87
	CALL _ZdlPv(*(($4 + [312])))
	$10 = *($4 + [368])
	if ( ($10 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	CALL $193(($4 + [600]))
	
.LABEL $label$16
	$10 = *($4 + [368])
	if ( $10 ){ goto $label$14 }
	
.LABEL $label$15
	$10 = *($4 + [496])
	if ( $10 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$11 = ($4 + [372])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$89 }
	
.LOOP $label$90:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$91 }
	CALL _ZdlPv($7)
	
.LABEL $label$91
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$90 }
	$6 = *(($4 + [368]))
	*($11) = $10
	CALL _ZdlPv($6)
	$10 = *($4 + [496])
	if ( $10 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$89
	*($11) = $10
	CALL _ZdlPv($10)
	$10 = *($4 + [496])
	if ( ($10 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$11 = ($4 + [500])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$92 }
	
.LOOP $label$93:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$94 }
	CALL _ZdlPv($7)
	
.LABEL $label$94
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$93 }
	$6 = *(($4 + [496]))
	*($11) = $10
	CALL _ZdlPv($6)
	$10 = *($4 + [536])
	if ( $10 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$92
	*($11) = $10
	CALL _ZdlPv($10)
	$10 = *($4 + [536])
	if ( ($10 == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$10 = *($4 + [536])
	if ( $10 ){ goto $label$10 }
	
.LABEL $label$11
	$6 = [1]
	if ( (*($4 + [552]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$11 = ($4 + [540])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$96 }
	
.LOOP $label$97:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$98 }
	CALL _ZdlPv($7)
	
.LABEL $label$98
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$97 }
	$6 = *(($4 + [536]))
	goto $label$95 
	
.LABEL $label$96
	$6 = $10
	
.LABEL $label$95
	*($11) = $10
	CALL _ZdlPv($6)
	$6 = [1]
	if ( ((*($4 + [552]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL _ZdlPv(*($4 + [560]))
	if ( ((*($4 + [568]) & $6) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( (*($4 + [568]) & $6) ){ goto $label$6 }
	
.LABEL $label$7
	$6 = *($4 + [600])
	if ( ($6 == 0) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	CALL _ZdlPv(*($4 + [576]))
	$6 = *($4 + [600])
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*($4 + [604]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$4
	$11 = *($4 + [640])
	if ( ($11 == 0) ){ goto $label$99 }
	$0 = ($4 + [644])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$11) ){ goto $label$101 }
	
.LOOP $label$102:
	$7 = ($7 + [-24])
	$6 = *($7)
	*($7) = [0]
	if ( ($6 == 0) ){ goto $label$103 }
	$10 = *($6 + [28])
	if ( ($10 == 0) ){ goto $label$104 }
	*(($6 + [32])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$104
	$10 = *($6 + [16])
	if ( ($10 == 0) ){ goto $label$105 }
	*(($6 + [20])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$105
	CALL _ZdlPv($6)
	
.LABEL $label$103
	if ( ((int_32)$11 != (int_32)$7) ){ goto $label$102 }
	$6 = *(($4 + [640]))
	goto $label$100 
	
.LABEL $label$101
	$6 = $11
	
.LABEL $label$100
	*($0) = $11
	CALL _ZdlPv($6)
	
.LABEL $label$99
	$10 = *($4 + [680])
	if ( ($10 == 0) ){ goto $label$106 }
	$11 = ($4 + [684])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$108 }
	
.LOOP $label$109:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$110 }
	if ( ((*($7 + [64]) & [1]) == 0) ){ goto $label$111 }
	CALL _ZdlPv(*(($7 + [72])))
	
.LABEL $label$111
	CALL _ZdlPv($7)
	
.LABEL $label$110
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$109 }
	$6 = *(($4 + [680]))
	goto $label$107 
	
.LABEL $label$108
	$6 = $10
	
.LABEL $label$107
	*($11) = $10
	CALL _ZdlPv($6)
	
.LABEL $label$106
	$global$0 = ($4 + [736])
	(unreachable)
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth((int_64)4229868842424340576)
	$3 = *($1)
	CALL eosio_assert((((int_64)$3 == (int_64)-8173734935706730496) | ((int_64)$3 == (int_64)5606078077002753536)), [8227])
	$4 = [0]
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$3 = *($0)
	*($2) = $3
	$5 = *($1)
	*($2 + [8]) = $5
	*($2 + [40]) = (int_64)0
	$1 = CALL db_find_i64($3, $5, (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $47($2, $1)
	if ( ((int_32)*($4 + [8]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9631])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*(( $4 ? ($2 + [40]) : $4 )) == (int_64)1), [8694])
	*($2 + [40]) = (int_64)0
	CALL $75($2, ($2 + [40]), *($0))
	$1 = *($2 + [24])
	if ( ($1 == 0) ){ goto $label$2 }
	$6 = ($2 + [28])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL _ZdlPv($0)
	
.LABEL $label$6
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$5 }
	$4 = *(($2 + [24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = $1
	
.LABEL $label$3
	*($6) = $1
	CALL _ZdlPv($4)
	
.LABEL $label$2
	$global$0 = ($2 + [48])
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
}

int_32 .FUNC $215 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10812]) == 0) ){ goto $label$2 }
	$2 = *([0] + [10816])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [10812]) = [1]
	$2 = ($2 << [16])
	*([0] + [10816]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10816])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [10816]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [10812]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [10812]) = [1]
	$3 = ($3 << [16])
	*([0] + [10816]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10816])
	
.LABEL $label$10
	*([0] + [10816]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

int_32 .FUNC $214 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $215($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)*(($1 + [8200])) == (int_32)*($9)) ){ goto $label$10 }
	CALL eosio_assert([0], [19562])
	
.LABEL $label$10
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$11:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$13 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$14 }
	
.LABEL $label$13
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$15 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$15
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$12
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$11 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

void .FUNC $216 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [19204])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [19012]
	$3 = (((int_32)$1 * (int_32)[12]) + [19012])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

int_32 .FUNC $211 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $195())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $212($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $210 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

void .FUNC $198 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

int_32 .FUNC $199 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $196 (int_32 $0)
{
}

int_32 .FUNC $197 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [20] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $199($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $199($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $199($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $199($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [19216]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $199($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $199($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $199($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

int_32 .FUNC $194 (int_32 $0)
{
	return (((int_32)$0 == (int_32)[32]) | (($0 + [-9]) <= [5]))
}

int_32 .FUNC $195 ()
{
	return [10804]
}

int_32 .FUNC $192 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $209(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

void .FUNC $193 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $190 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$3 }
	$5 = uint_32($3 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $4 ){ goto $label$6 }
	$6 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $4 ? $2 : ($4 <= $2) )
	$4 = ($5 - $1)
	$4 = ($4 - $2)
	if ( ($4 == 0) ){ goto $label$7 }
	$1 = ($6 + $1)
	CALL memmove($1, ($1 + $2), $4)
	$3 = *($0)
	
.LABEL $label$7
	$2 = ($5 - $2)
	if ( ($3 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($6 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $191 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $208(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}