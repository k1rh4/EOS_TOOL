(data (i32.const 4) "\d0n\00\00")
(data (i32.const 16) "onerror\00")
(data (i32.const 32) "eosio\00")
(data (i32.const 48) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 112) "transfer\00")
(data (i32.const 128) "eosio.token\00")
(data (i32.const 144) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 208) "invalid symbol name\00")
(data (i32.const 240) "read\00")
(data (i32.const 256) "get\00")
(data (i32.const 272) "cpubankowner\00")
(data (i32.const 288) "active\00")
(data (i32.const 304) "chong\00")
(data (i32.const 320) "write\00")
(data (i32.const 336) "rrrrrrrrrrr1\00")
(data (i32.const 352) "rrrrrrrrrrr3\00")
(data (i32.const 368) "rrrrrrrrrr1w\00")
(data (i32.const 384) "maxmaxmaxmax\00")
(data (i32.const 400) "maxrenrenren\00")
(data (i32.const 416) "minrenrenren\00")
(data (i32.const 432) "heztcnjn5cng\00")
(data (i32.const 448) "heztcnjz2ong\00")
(data (i32.const 464) "heztcnjx3ang\00")
(data (i32.const 480) "heztcnjk5zng\00")
(data (i32.const 496) "heztcnjb2bng\00")
(data (i32.const 512) "heztcnjk5lng\00")
(data (i32.const 528) "heztcnjo3xng\00")
(data (i32.const 544) "heztcnjg5zng\00")
(data (i32.const 560) "heztcnjb2zng\00")
(data (i32.const 576) "heztcnjm5jng\00")
(data (i32.const 592) "heztcnjb4cng\00")
(data (i32.const 608) "heztcnjn2wng\00")
(data (i32.const 624) "heztcnjk1eng\00")
(data (i32.const 640) "undelegatebw\00")
(data (i32.const 656) "cannot pass end iterator to erase\00")
(data (i32.const 704) "cannot increment end iterator\00")
(data (i32.const 736) "object passed to erase is not in multi_index\00")
(data (i32.const 784) "cannot erase objects in table of another contract\00")
(data (i32.const 848) "attempt to remove object that was not in multi_index\00")
(data (i32.const 912) "error reading iterator\00")
(data (i32.const 944) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 1008) "recycling request not found\00")
(data (i32.const 1040) "recycling is not available yet\00")
(data (i32.const 1072) "refund request not found\00")
(data (i32.const 1104) "refund is not available yet\00")
(data (i32.const 1136) "withdraw\00")
(data (i32.const 1152) "System maintenance\00")
(data (i32.const 1184) "Invalid token transfer\00")
(data (i32.const 1216) "SYMBOL Error \00")
(data (i32.const 1232) "Quantity must be positive\00")
(data (i32.const 1264) "user does not exist\00")
(data (i32.const 1296) "cannot pass end iterator to modify\00")
(data (i32.const 1344) "object passed to modify is not in multi_index\00")
(data (i32.const 1392) "cannot modify objects in table of another contract\00")
(data (i32.const 1456) "attempt to subtract asset with different symbol\00")
(data (i32.const 1504) "subtraction underflow\00")
(data (i32.const 1536) "subtraction overflow\00")
(data (i32.const 1568) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1632) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 1696) "insufficient amount\00")
(data (i32.const 1728) "cannot create objects in table of another contract\00")
(data (i32.const 1792) "attempt to add asset with different symbol\00")
(data (i32.const 1840) "addition underflow\00")
(data (i32.const 1872) "addition overflow\00")
(data (i32.const 1904) "refund\00")
(data (i32.const 1920) "eosio.stake\00")
(data (i32.const 1936) "eosio.ram\00")
(data (i32.const 1952) "eosiocpubank only accepts CORE \00")
(data (i32.const 1984) "bankreserves\00")
(data (i32.const 2000) "unable to find key\00")
(data (i32.const 2032) "deposit\00")
(data (i32.const 2048) "eosbank.bp\00")
(data (i32.const 2064) "wk1\00")
(data (i32.const 2080) "dongshizhan1\00")
(data (i32.const 2096) "wk2\00")
(data (i32.const 2112) "winninetysix\00")
(data (i32.const 2128) "wk3\00")
(data (i32.const 2144) "mgmgmgeos222\00")
(data (i32.const 2160) "wk4\00")
(data (i32.const 2176) "liebisigneos\00")
(data (i32.const 2192) "too many....\00")
(data (i32.const 2208) "too small....\00")
(data (i32.const 2240) "1d \00")
(data (i32.const 2256) "rent\00")
(data (i32.const 2272) " \00")
(data (i32.const 2288) "memo error\00")
(data (i32.const 2304) " cpu\00")
(data (i32.const 2320) "cpu\00")
(data (i32.const 2336) "net\00")
(data (i32.const 2352) " net\00")
(data (i32.const 2368) "cpubankstake\00")
(data (i32.const 2384) "delegatebw\00")
(data (i32.const 2400) "refunds does not exist\00")
(data (i32.const 2432) "rent 1d\00")
(data (i32.const 2448) "1d\00")
(data (i32.const 2464) "3d\00")
(data (i32.const 2480) "rent 4d\00")
(data (i32.const 2496) "4d\00")
(data (i32.const 2512) "7d\00")
(data (i32.const 2528) "rent 7d\00")
(data (i32.const 2544) "rent \00")
(data (i32.const 2560) "3d \00")
(data (i32.const 2576) "4d \00")
(data (i32.const 2592) "7d \00")
(data (i32.const 2608) "only support: deposit or rent or refund\00")
(data (i32.const 2656) "depositstats\00")
(data (i32.const 2672) "not available now....\00")
(data (i32.const 2704) "must >= 2000 EOS\00")
(data (i32.const 2736) "loveinwallet\00")
(data (i32.const 2752) "must >= 0.01 EOS\00")
(data (i32.const 2784) "only support: 1d or 4d or 7d\00")
(data (i32.const 2816) "hoowalletcom\00")
(data (i32.const 2832) "oneplayerone\00")
(data (i32.const 2848) "Length of account name should be 12\00")
(data (i32.const 2896) "newrecycling\00")
(data (i32.const 2912) "next primary key in table is at autoincrement limit\00")
(data (i32.const 2976) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 3040) "cannot decrement iterator at beginning of table\00")
(data (i32.const 3088) " \0c\00\00")
(data (i32.const 3104) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 11536) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 11632) "stoi\00")
(data (i32.const 11648) ": no conversion\00")
(data (i32.const 11664) ": out of range\00")
(data (i32.const 11696) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 11968) "\00\01\02\04\07\03\06\05\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "cancel_deferred" (func $fimport$2 (param i32) (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "current_time" (func $fimport$4 (result i64)))
(import "env" "db_end_i64" (func $fimport$5 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$8 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$9 (param i32)))
(import "env" "db_idx64_store" (func $fimport$10 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$11 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$13 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$15 (param i32)))
(import "env" "db_store_i64" (func $fimport$16 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$17 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$18 (param i32 i32)))
(import "env" "memcpy" (func $fimport$19 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$21 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$22 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$23 (param i64)))
(import "env" "require_auth2" (func $fimport$24 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$25 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$26 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "apply" (func $5))
(export "_ZN12eosiocpubank8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $6))
(export "_ZN12eosiocpubank8rentrateEyy" (func $8))
(export "_ZN12eosiocpubank8maintainEyy" (func $10))
(export "_ZN12eosiocpubank9rentalaccEyy" (func $11))
(export "_ZN12eosiocpubank8withdrawEyN5eosio5assetE" (func $12))
(export "_ZN12eosiocpubank6refundEy" (func $14))
(export "_ZN12eosiocpubank2hiENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $16))
(export "_ZN12eosiocpubank12newrecyclingEy" (func $18))
(export "_ZN12eosiocpubank7rmbykeyEy" (func $19))
(export "_ZN12eosiocpubank5eraseEv" (func $20))
(export "_ZN12eosiocpubank4initEv" (func $22))
(export "_ZN12eosiocpubank5chongEyN5eosio5assetE" (func $23))
(export "_Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_" (func $68))
(export "_ZN12eosiocpubank9getrentalEv" (func $71))
(export "_Z10startsWithNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES5_" (func $79))
(export "malloc" (func $80))
(export "free" (func $83))
(export "_ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji" (func $95))
(export "__errno_location" (func $102))
(export "strtol" (func $103))
(export "__shlim" (func $104))
(export "__intscan" (func $105))
(export "__shgetc" (func $106))
(export "__uflow" (func $107))
(export "__toread" (func $108))
(export "memchr" (func $109))
(export "memcmp" (func $110))
(export "strlen" (func $111))
(table $0 13 13 anyfunc)
(elem (i32.const 0) $112 $14 $23 $19 $22 $10 $18 $6 $12 $11 $8 $20 $16)



void .FUNC $98 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL strlen($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($3 + $4)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$5 = *($1)
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $84($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : ($5 & [1]) ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $90($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $99 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $94 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = CALL strlen($1)
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$6 = ($4 + $3)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$6 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($6 + [16]) & [-16])
	$6 = CALL $84($5)
	*($0) = ($5 | [1])
	*(($0 + [8])) = $6
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL $90($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$3 = CALL strlen([11632])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$6 }
	*($6) = ($3 << [1])
	$5 = ($6 | [1])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = (($3 + [16]) & [-16])
	$5 = CALL $84($4)
	*($6) = ($4 | [1])
	*($6 + [8]) = $5
	*($6 + [4]) = $3
	
.LABEL $label$5
	CALL memcpy($5, [11632], $3)
	
.LABEL $label$4
	*(($5 + $3)) = [0]
	*($6 + [12]) = [0]
	$3 = *($0 + [8])
	$5 = *($0)
	$4 = *(CALL __errno_location())
	*(CALL __errno_location()) = [0]
	$3 = ( $3 ? ($0 + [1]) : ($5 & [1]) )
	$2 = CALL strtol($3, ($6 + [12]), $2)
	$0 = CALL __errno_location()
	$5 = *($0)
	*($0) = $4
	if ( ((int_32)$5 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($6 + [12])
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $3)
	
.LABEL $label$7
	if ( ((*($6) & [1]) == 0) ){ goto $label$8 }
	CALL $85(*($6 + [8]))
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
	return $2
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $96($6)
	
.LABEL $label$1
	CALL $97($6)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $96 (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [4]) - [16])
	*([0] + [4]) = $1
	CALL $98($1, $0, [11664])
	CALL abort()
	(unreachable)
}

void .FUNC $97 (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [4]) - [16])
	*([0] + [4]) = $1
	CALL $98($1, $0, [11648])
	CALL abort()
	(unreachable)
}

int_32 .FUNC $90 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $89($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

int_32 .FUNC $91 (int_32 $0, int_32 $1)
{
	return CALL $90($0, $1, CALL $111($1))
}

int_32 .FUNC $92 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = *($0)
	if ( ($4 & [1]) ){ goto $label$2 }
	$4 = uint_32($4 >> [1])
	$3 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0 + [4])
	$3 = *($0 + [8])
	
.LABEL $label$1
	$0 = [-1]
	if ( ((uint_32)$4 <= (uint_32)$2) ){ goto $label$3 }
	$0 = ($4 - $2)
	if ( ($0 == 0) ){ goto $label$5 }
	$0 = CALL memchr(($3 + $2), ($1 & [255]), $0)
	goto $label$4 
	
.LABEL $label$5
	$0 = [0]
	
.LABEL $label$4
	$0 = ( ($0 - $3) ? [-1] : $0 )
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $93 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [240])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [240])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [240])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [240])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [240])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [240])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [240])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $84(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $99($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $84([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $28(($8 + [28]), [8])
	$2 = *($8 + [28])
	CALL eosio_assert(((int_32)(*($2) - $2) > (int_32)[7]), [320])
	CALL memcpy($2, $4, [8])
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $85($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $85($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $85($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [736])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [784])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [848])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $85($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $85($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$7 = *(($1 + [32]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5380477996647841792, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $43 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $84(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $99($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $85($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $85($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [240])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [240])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [240])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [240])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [736])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [784])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [848])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $85($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $85($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [912])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $84([48])) + [24]) = (int_64)1397703940
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [144])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [208])
	*($4 + [32]) = $0
	CALL $42(($8 + [32]), $4)
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [36])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $43($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $85($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [736])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [784])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [848])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $85($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $85($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [912])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $84([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [240])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $56(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $85($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	$10 = $11
	*([0] + [4]) = $11
	$3 = *($0 + [24])
	$8 = *(($0 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$7 = ($8 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($8 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($8 >> [31]) ^ (int_32)[1]), [912])
	if ( ((uint_32)$8 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($8)
	CALL db_get_i64($1, $3, $8)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($11 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $8)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $84([40])) + [16]) = (int_64)1397703940
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [144])
	$11 = ($5 + [16])
	$6 = ($5 + [8])
	$9 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [208])
	*($5 + [24]) = $0
	CALL eosio_assert(((uint_32)$8 > (uint_32)[7]), [240])
	CALL memcpy($5, $3, [8])
	$7 = ($8 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [240])
	CALL memcpy($6, ($3 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [240])
	CALL memcpy($11, ($3 + [16]), [8])
	*($5 + [32]) = [-1]
	*($5 + [28]) = $1
	*($10 + [24]) = $5
	$9 = *($5)
	*($10 + [16]) = $9
	$8 = *($5 + [28])
	*($10 + [12]) = $8
	$1 = ($0 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($7 + [8]) = $9
	*($7 + [16]) = $8
	*($10 + [24]) = [0]
	*($7) = $5
	*($1) = ($7 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $57($2, ($10 + [24]), ($10 + [16]), ($10 + [12]))
	
.LABEL $label$12
	$7 = *($10 + [24])
	*($10 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $85($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [32])
	return $5
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [912])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $84([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [240])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [240])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $58(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $85($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN12eosiocpubank8rentrateEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [80])
	*([0] + [4]) = $12
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [272]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($9)
	*((($12 + [8]) + [32])) = [0]
	*($12 + [24]) = (int_64)-1
	*($12 + [32]) = (int_64)0
	$8 = *($0)
	*($12 + [8]) = $8
	*($12 + [16]) = $1
	$6 = CALL db_find_i64($8, $1, (int_64)-4996854170817396736, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$6 = CALL $62(($12 + [8]), $6)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)($12 + [8])), [944])
	$11 = (($12 + [64]) | [8])
	$3 = ($12 + [64])
	goto $label$5 
	
.LABEL $label$6
	$7 = *($0)
	CALL eosio_assert(((int_64)*($12 + [8]) == (int_64)CALL $fimport$3()), [1728])
	*(($6 = CALL $84([32])) + [16]) = ($12 + [8])
	*($6) = $1
	CALL eosio_assert([1], [320])
	CALL memcpy(($12 + [64]), $6, [8])
	CALL eosio_assert([1], [320])
	$11 = (($12 + [64]) | [8])
	CALL memcpy($11, ($6 + [8]), [8])
	$8 = *($6)
	$4 = CALL db_store_i64(*((($12 + [8]) + [8])), (int_64)-4996854170817396736, $7, $8, ($12 + [64]), [16])
	*($6 + [20]) = $4
	$3 = (($12 + [8]) + [16])
	if ( (uint_64)($8 <= *($3)) ){ goto $label$7 }
	*($3) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($12 + [56]) = $6
	$8 = *($6)
	*($12 + [64]) = $8
	*($12 + [52]) = $4
	$5 = ($12 + [36])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($12 + [40]))) ){ goto $label$9 }
	*($3 + [8]) = $8
	*($3 + [16]) = $4
	*($12 + [56]) = [0]
	*($3) = $6
	*($5) = ($3 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $63(($12 + [32]), ($12 + [56]), ($12 + [64]), ($12 + [52]))
	
.LABEL $label$8
	$3 = *($12 + [56])
	*($12 + [56]) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	CALL $85($3)
	
.LABEL $label$10
	$3 = ($12 + [64])
	
.LABEL $label$5
	$7 = *($0)
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [1296])
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)($12 + [8])), [1344])
	CALL eosio_assert(((int_64)*($12 + [8]) == (int_64)CALL $fimport$3()), [1392])
	*($6 + [8]) = $2
	$8 = *($6)
	CALL eosio_assert([1], [1568])
	CALL eosio_assert([1], [320])
	CALL memcpy($3, $6, [8])
	CALL eosio_assert([1], [320])
	CALL memcpy($11, ($6 + [8]), [8])
	CALL db_update_i64(*($6 + [20]), $7, $3, [16])
	$6 = (($12 + [8]) + [16])
	if ( (uint_64)($8 <= *($6)) ){ goto $label$11 }
	*($6) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$0 = *($12 + [32])
	if ( ($0 == 0) ){ goto $label$12 }
	$11 = ($12 + [36])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$16 }
	CALL $85($3)
	
.LABEL $label$16
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$15 }
	$6 = *(($12 + [32]))
	goto $label$13 
	
.LABEL $label$14
	$6 = $0
	
.LABEL $label$13
	*($11) = $0
	CALL $85($6)
	
.LABEL $label$12
	*([0] + [4]) = ($12 + [80])
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [240])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [240])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

void .FUNC _ZN12eosiocpubank8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	float_64 $10
	int_32 $11
	int_32 $12
	float_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	int_64 $25
	float_32 $26
	int_32 $27
	$27 = (*([0] + [4]) - [672])
	*([0] + [4]) = $27
	$22 = *($0)
	if ( ((int_64)$22 == (int_64)$1) ){ goto $label$14 }
	if ( ((int_64)$22 != (int_64)$2) ){ goto $label$14 }
	$20 = *($4)
	$5 = CALL strlen([304])
	if ( ((int_32)$5 != (int_32)( *($4 + [4]) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$15 }
	if ( (CALL $93($4, [0], [-1], [304], $5) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [1920]
	$23 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$22 > (uint_64)(int_64)10) ){ goto $label$21 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$5 = ($5 + [165])
	goto $label$19 
	
.LABEL $label$21
	$24 = (int_64)0
	if ( ((int_64)$22 == (int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$17
	$20 = ($20 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$23 = ((int_64)$24 | (int_64)$23)
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((int_64)$22 != (int_64)13) ){ goto $label$16 }
	if ( ((int_64)$23 == (int_64)$1) ){ goto $label$14 }
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [1936]
	$23 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$22 > (uint_64)(int_64)8) ){ goto $label$27 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$5 = ($5 + [165])
	goto $label$25 
	
.LABEL $label$27
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$23
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$22 }
	if ( ((int_64)$23 == (int_64)$1) ){ goto $label$14 }
	$22 = *($3 + [8])
	CALL eosio_assert(((int_64)$22 == (int_64)1397703940), [1952])
	$5 = [0]
	$6 = *($3)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$28 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8)
	$20 = [0]
	
.LOOP $label$30:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$29 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$31 }
	
.LOOP $label$32:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$32 }
	
.LABEL $label$31
	$5 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$29
	$5 = [0]
	
.LABEL $label$28
	CALL eosio_assert($5, [1184])
	$22 = (int_64)0
	CALL eosio_assert(((int_64)$6 > (int_64)0), [1232])
	$21 = (int_64)59
	$20 = [128]
	$23 = (int_64)0
	
.LOOP $label$33:
	if ( ((uint_64)$22 > (uint_64)(int_64)10) ){ goto $label$38 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$5 = ($5 + [165])
	goto $label$36 
	
.LABEL $label$38
	$24 = (int_64)0
	if ( ((int_64)$22 == (int_64)11) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$37
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$35
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$34
	$20 = ($20 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$23 = ((int_64)$24 | (int_64)$23)
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((int_64)$22 != (int_64)13) ){ goto $label$33 }
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [1984]
	$25 = (int_64)0
	
.LOOP $label$39:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$40 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$5 = ($5 + [165])
	goto $label$41 
	
.LABEL $label$42
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$40
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$25 = ((int_64)$21 | (int_64)$25)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$39 }
	*(($27 + [48])) = [0]
	*($27 + [24]) = $25
	*($27 + [16]) = $23
	*($27 + [32]) = (int_64)-1
	$22 = (int_64)0
	*($27 + [40]) = (int_64)0
	$7 = *(CALL $66(($27 + [16]), (int_64)5459781, [2000]))
	$8 = *($27 + [40])
	if ( ($8 == 0) ){ goto $label$43 }
	$14 = ($27 + [44])
	$20 = *($14)
	if ( ((int_32)$20 == (int_32)$8) ){ goto $label$45 }
	
.LOOP $label$46:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$47 }
	CALL $85($5)
	
.LABEL $label$47
	if ( ((int_32)$8 != (int_32)$20) ){ goto $label$46 }
	$20 = *(($27 + [40]))
	goto $label$44 
	
.LABEL $label$45
	$20 = $8
	
.LABEL $label$44
	*($14) = $8
	CALL $85($20)
	
.LABEL $label$43
	$9 = *($0)
	$24 = (int_64)59
	$20 = [416]
	$23 = (int_64)0
	
.LOOP $label$48:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$49 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$5 = ($5 + [165])
	goto $label$50 
	
.LABEL $label$51
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$49
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$48 }
	*(($27 + [640])) = [0]
	*($27 + [616]) = $23
	*($27 + [608]) = $9
	*($27 + [624]) = (int_64)-1
	$22 = (int_64)0
	*($27 + [632]) = (int_64)0
	$24 = (int_64)59
	$20 = [416]
	$25 = (int_64)0
	
.LOOP $label$52:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$53 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$55 }
	$5 = ($5 + [165])
	goto $label$54 
	
.LABEL $label$55
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$54
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$53
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$25 = ((int_64)$21 | (int_64)$25)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$52 }
	$20 = CALL db_find_i64($9, $23, (int_64)-4996854170817396736, $25)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$57 }
	$20 = CALL $62(($27 + [608]), $20)
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)($27 + [608])), [944])
	$22 = *($20 + [8])
	goto $label$56 
	
.LABEL $label$57
	$22 = (int_64)100
	
.LABEL $label$56
	if ( ((int_64)$7 < (int_64)1000001) ){ goto $label$111 }
	if ( (uint_64)($6 <= $22) ){ goto $label$111 }
	$20 = *($4)
	$5 = CALL strlen([2032])
	if ( ((int_32)$5 != (int_32)( *(($4 + [4])) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$112 }
	if ( (CALL $93($4, [0], [-1], [2032], $5) == 0) ){ goto $label$111 }
	
.LABEL $label$112
	$8 = CALL $92($4, [61], [0])
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [2048]
	$23 = (int_64)0
	
.LOOP $label$113:
	if ( ((uint_64)$22 > (uint_64)(int_64)9) ){ goto $label$118 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$117 }
	$5 = ($5 + [165])
	goto $label$116 
	
.LABEL $label$118
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$115 }
	goto $label$114 
	
.LABEL $label$117
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$116
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$115
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$114
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$113 }
	if ( ((int_32)$8 == (int_32)[-1]) ){ goto $label$110 }
	CALL $101(($27 + [16]), $4, ($8 + [1]), [-1], $4)
	CALL $101(($27 + [568]), $4, [0], $8, $4)
	if ( (*($4) & [1]) ){ goto $label$107 }
	*($4) = [0]
	goto $label$106 
	
.LABEL $label$111
	*(($27 + [600])) = [0]
	*($27 + [584]) = (int_64)-1
	*($27 + [592]) = (int_64)0
	$22 = *($0)
	*($27 + [568]) = $22
	*($27 + [576]) = $22
	$20 = CALL db_find_i64($22, $22, (int_64)-7954134735498772480, $22)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$119 }
	$20 = CALL $44(($27 + [568]), $20)
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)($27 + [568])), [944])
	CALL eosio_assert((int_64)(*($20 + [8]) == 0), [1152])
	
.LABEL $label$119
	if ( ((int_64)$6 == (int_64)3) ){ goto $label$120 }
	if ( ((int_64)$6 == (int_64)2) ){ goto $label$109 }
	if ( ((int_64)$6 != (int_64)1) ){ goto $label$108 }
	
.LABEL $label$120
	*(($27 + [48])) = [0]
	*($27 + [32]) = (int_64)-1
	*($27 + [40]) = (int_64)0
	$22 = *($0)
	*($27 + [16]) = $22
	*($27 + [24]) = $1
	*($27 + [52]) = [0]
	$20 = [0]
	$5 = CALL db_find_i64($22, $1, (int_64)5380477996647841792, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$121 }
	$20 = CALL $45(($27 + [16]), $5)
	CALL eosio_assert(((int_32)*($20 + [24]) == (int_32)($27 + [16])), [944])
	
.LABEL $label$121
	CALL eosio_assert(((int_32)$20 != (int_32)[0]), [1264])
	$24 = *(($20 + [16]))
	*((($27 + [512]) + [8])) = $24
	$22 = *($20 + [8])
	*(($20 = (($27 + [480]) + [8]))) = $24
	*($27 + [512]) = $22
	*($27 + [480]) = $22
	*(($27 + [8])) = *($20)
	*($27) = *($27 + [480])
	CALL _ZN12eosiocpubank8withdrawEyN5eosio5assetE($0, $1, $27)
	$4 = *($27 + [40])
	if ( ($4 == 0) ){ goto $label$61 }
	$0 = ($27 + [44])
	$20 = *($0)
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$105 }
	
.LOOP $label$122:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$123 }
	CALL $85($5)
	
.LABEL $label$123
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$122 }
	$20 = *(($27 + [40]))
	goto $label$104 
	
.LABEL $label$110
	$8 = [0]
	goto $label$98 
	
.LABEL $label$109
	*((($27 + [16]) + [32])) = [0]
	*($27 + [32]) = (int_64)-1
	*($27 + [40]) = (int_64)0
	$22 = *($0)
	*($27 + [16]) = $22
	*($27 + [24]) = $1
	$4 = [0]
	$20 = CALL db_find_i64($22, $1, (int_64)-5001342326447013888, $1)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$124 }
	$4 = CALL $40(($27 + [16]), $20)
	CALL eosio_assert(((int_32)*($4 + [32]) == (int_32)($27 + [16])), [944])
	
.LABEL $label$124
	$8 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($8, [2400])
	$21 = *(($4 + [24]))
	$23 = *($4 + [16])
	*((($27 + [512]) + [32])) = [0]
	*($27 + [528]) = (int_64)-1
	*($27 + [536]) = (int_64)0
	$22 = *($0)
	*($27 + [512]) = $22
	*($27 + [520]) = $1
	*($27 + [548]) = [0]
	$20 = CALL db_find_i64($22, $1, (int_64)5380477996647841792, $1)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$103 }
	$5 = CALL $45(($27 + [512]), $20)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($27 + [512])), [944])
	$3 = ($27 + [224])
	$14 = (($27 + [208]) | [8])
	$20 = ($27 + [208])
	goto $label$94 
	
.LABEL $label$108
	$20 = *($4)
	$5 = ($4 + [4])
	$8 = CALL strlen([2224])
	if ( ((int_32)$8 != (int_32)( *($5) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$125 }
	if ( (CALL $93($4, [0], [-1], [2224], $8) == 0) ){ goto $label$97 }
	
.LABEL $label$125
	$20 = *($4)
	$8 = CALL strlen([2256])
	if ( ((int_32)$8 != (int_32)( *($5) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$126 }
	if ( (CALL $93($4, [0], [-1], [2256], $8) == 0) ){ goto $label$93 }
	
.LABEL $label$126
	$20 = *($4)
	$5 = ($4 + [4])
	$8 = CALL strlen([2448])
	if ( ((int_32)$8 != (int_32)( *($5) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$127 }
	if ( (CALL $93($4, [0], [-1], [2448], $8) == 0) ){ goto $label$88 }
	
.LABEL $label$127
	$20 = *($4)
	$8 = CALL strlen([2464])
	if ( ((int_32)$8 != (int_32)( *($5) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$128 }
	if ( (CALL $93($4, [0], [-1], [2464], $8) == 0) ){ goto $label$83 }
	
.LABEL $label$128
	$20 = *($4)
	$5 = ($4 + [4])
	$8 = CALL strlen([2496])
	if ( ((int_32)$8 != (int_32)( *($5) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$129 }
	if ( (CALL $93($4, [0], [-1], [2496], $8) == 0) ){ goto $label$82 }
	
.LABEL $label$129
	$20 = *($4)
	$8 = CALL strlen([2512])
	if ( ((int_32)$8 != (int_32)( *($5) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$130 }
	if ( (CALL $93($4, [0], [-1], [2512], $8) == 0) ){ goto $label$76 }
	
.LABEL $label$130
	CALL $100(($27 + [424]), $4)
	*(($27 + [416])) = [0]
	*($27 + [408]) = (int_64)0
	$20 = CALL strlen([2240])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$92 }
	*($27 + [408]) = ($20 << [1])
	$19 = (($27 + [408]) | [1])
	$5 = $19
	if ( $20 ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$107
	*(*($4 + [8])) = [0]
	*(($4 + [4])) = [0]
	
.LABEL $label$106
	CALL $87($4, [0])
	*(($4 + [8])) = *((($27 + [568]) + [8]))
	*($4) = *($27 + [568])
	$20 = *($27 + [16])
	$5 = CALL strlen([2064])
	if ( ((int_32)$5 != (int_32)( *($27 + [20]) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$131 }
	if ( (CALL $93(($27 + [16]), [0], [-1], [2064], $5) == 0) ){ goto $label$102 }
	
.LABEL $label$131
	$20 = *($27 + [16])
	$5 = CALL strlen([2096])
	if ( ((int_32)$5 != (int_32)( *($27 + [20]) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$132 }
	if ( (CALL $93(($27 + [16]), [0], [-1], [2096], $5) == 0) ){ goto $label$101 }
	
.LABEL $label$132
	$20 = *($27 + [16])
	$5 = CALL strlen([2128])
	if ( ((int_32)$5 != (int_32)( *($27 + [20]) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$133 }
	if ( (CALL $93(($27 + [16]), [0], [-1], [2128], $5) == 0) ){ goto $label$100 }
	
.LABEL $label$133
	$8 = [0]
	$20 = *($27 + [16])
	$5 = CALL strlen([2160])
	if ( ((int_32)$5 != (int_32)( *($27 + [20]) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$99 }
	$8 = [0]
	if ( CALL $93(($27 + [16]), [0], [-1], [2160], $5) ){ goto $label$99 }
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [2176]
	$23 = (int_64)0
	
.LOOP $label$134:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$135 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$137 }
	$5 = ($5 + [165])
	goto $label$136 
	
.LABEL $label$137
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$136
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$135
	$8 = [1]
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$134 }
	goto $label$99 
	
.LABEL $label$105
	$20 = $4
	
.LABEL $label$104
	*($0) = $4
	CALL $85($20)
	$4 = *($27 + [592])
	if ( $4 ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$103
	$24 = *($0)
	CALL eosio_assert(((int_64)*($27 + [512]) == (int_64)CALL $fimport$3()), [1728])
	*(($5 = CALL $84([40])) + [16]) = (int_64)1397703940
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [144])
	$15 = ($5 + [16])
	$19 = ($5 + [8])
	$22 = (int_64)5459781
	$20 = [0]
	
.LOOP $label$140:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$139 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$141 }
	
.LOOP $label$142:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$139 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$142 }
	
.LABEL $label$141
	$3 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$140 }
	goto $label$138 
	
.LABEL $label$139
	$3 = [0]
	
.LABEL $label$138
	CALL eosio_assert($3, [208])
	*($5 + [24]) = ($27 + [512])
	*($5) = $1
	CALL eosio_assert([1], [320])
	CALL memcpy(($27 + [208]), $5, [8])
	CALL eosio_assert([1], [320])
	$14 = (($27 + [208]) | [8])
	CALL memcpy($14, $19, [8])
	CALL eosio_assert([1], [320])
	$3 = (($27 + [208]) + [16])
	CALL memcpy($3, $15, [8])
	$22 = *($5)
	$20 = (($27 + [512]) + [8])
	*($5 + [28]) = CALL db_store_i64(*($20), (int_64)5380477996647841792, $24, $22, ($27 + [208]), [24])
	$15 = (($27 + [512]) + [16])
	if ( (uint_64)($22 <= *($15)) ){ goto $label$143 }
	*($15) = ( (int_64)-2 ? ((int_64)$22 + (int_64)1) : ((uint_64)$22 > (uint_64)(int_64)-3) )
	
.LABEL $label$143
	$22 = *($20)
	$25 = *($5)
	*($27 + [440]) = $25
	*($5 + [32]) = CALL db_idx64_store($22, (int_64)5380477996647841792, $24, $25, ($27 + [440]))
	*($27 + [208]) = $5
	$22 = *($5)
	*($27 + [440]) = $22
	$15 = *(($5 + [28]))
	*($27 + [112]) = $15
	$19 = (($27 + [512]) + [28])
	$20 = *($19)
	if ( ((uint_32)$20 >= (uint_32)*(($27 + [544]))) ){ goto $label$96 }
	*($20 + [8]) = $22
	*($20 + [16]) = $15
	*($27 + [208]) = [0]
	*($20) = $5
	*($19) = ($20 + [24])
	goto $label$95 
	
.LABEL $label$102
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [2080]
	$23 = (int_64)0
	
.LOOP $label$144:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$145 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$147 }
	$5 = ($5 + [165])
	goto $label$146 
	
.LABEL $label$147
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$146
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$145
	$8 = [1]
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$144 }
	goto $label$99 
	
.LABEL $label$101
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [2112]
	$23 = (int_64)0
	
.LOOP $label$148:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$149 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$151 }
	$5 = ($5 + [165])
	goto $label$150 
	
.LABEL $label$151
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$150
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$149
	$8 = [1]
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$148 }
	goto $label$99 
	
.LABEL $label$100
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [2144]
	$23 = (int_64)0
	
.LOOP $label$152:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$153 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$155 }
	$5 = ($5 + [165])
	goto $label$154 
	
.LABEL $label$155
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$154
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$153
	$8 = [1]
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$152 }
	
.LABEL $label$99
	if ( ((*($27 + [16]) & [1]) == 0) ){ goto $label$98 }
	CALL $85(*($27 + [24]))
	
.LABEL $label$98
	$9 = *($0)
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [400]
	$25 = (int_64)0
	
.LOOP $label$156:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$157 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$159 }
	$5 = ($5 + [165])
	goto $label$158 
	
.LABEL $label$159
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$158
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$157
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$25 = ((int_64)$21 | (int_64)$25)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$156 }
	*(($27 + [600])) = [0]
	*($27 + [576]) = $25
	*($27 + [568]) = $9
	*($27 + [584]) = (int_64)-1
	$22 = (int_64)0
	*($27 + [592]) = (int_64)0
	$24 = (int_64)59
	$20 = [400]
	$2 = (int_64)0
	
.LOOP $label$160:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$161 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$163 }
	$5 = ($5 + [165])
	goto $label$162 
	
.LABEL $label$163
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$162
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$161
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$2 = ((int_64)$21 | (int_64)$2)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$160 }
	$20 = CALL db_find_i64($9, $25, (int_64)-4996854170817396736, $2)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$165 }
	$20 = CALL $62(($27 + [568]), $20)
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)($27 + [568])), [944])
	$22 = *($20 + [8])
	goto $label$164 
	
.LABEL $label$165
	$22 = (int_64)4000000
	
.LABEL $label$164
	CALL eosio_assert(((uint_64)$6 <= (uint_64)$22), [2192])
	CALL eosio_assert([1], [2208])
	*($27 + [160]) = $1
	CALL $67(($27 + [112]), ($27 + [160]))
	$20 = *($4)
	$5 = ($4 + [4])
	$14 = CALL strlen([2224])
	if ( ((int_32)$14 != (int_32)( *($5) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$170 }
	if ( (CALL $93($4, [0], [-1], [2224], $14) == 0) ){ goto $label$169 }
	
.LABEL $label$170
	$20 = *($4)
	$14 = CALL strlen([2256])
	if ( ((int_32)$14 != (int_32)( *($5) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$166 }
	if ( CALL $93($4, [0], [-1], [2256], $14) ){ goto $label$166 }
	CALL $94(($27 + [16]), [2240], ($27 + [112]))
	if ( (*($4) & [1]) ){ goto $label$168 }
	*($4) = [0]
	goto $label$167 
	
.LABEL $label$169
	CALL $94(($27 + [16]), [2240], ($27 + [112]))
	if ( (*($4) & [1]) ){ goto $label$172 }
	*($4) = [0]
	goto $label$171 
	
.LABEL $label$172
	*(*($4 + [8])) = [0]
	*(($4 + [4])) = [0]
	
.LABEL $label$171
	CALL $87($4, [0])
	*(($4 + [8])) = *((($27 + [16]) + [8]))
	*($4) = *($27 + [16])
	goto $label$166 
	
.LABEL $label$168
	*(*($4 + [8])) = [0]
	*(($4 + [4])) = [0]
	
.LABEL $label$167
	CALL $87($4, [0])
	*(($4 + [8])) = *((($27 + [16]) + [8]))
	*($4) = *($27 + [16])
	
.LABEL $label$166
	*(($27 + [24])) = [0]
	*($27 + [16]) = (int_64)0
	$20 = CALL strlen([2272])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$175 }
	*($27 + [16]) = ($20 << [1])
	$5 = (($27 + [16]) | [1])
	if ( $20 ){ goto $label$174 }
	goto $label$173 
	
.LABEL $label$175
	$14 = (($20 + [16]) & [-16])
	$5 = CALL $84($14)
	*($27 + [16]) = ($14 | [1])
	*($27 + [24]) = $5
	*($27 + [20]) = $20
	
.LABEL $label$174
	CALL memcpy($5, [2272], $20)
	
.LABEL $label$173
	*(($5 + $20)) = [0]
	CALL _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_(($27 + [96]), $4, ($27 + [16]))
	if ( ((*($27 + [16]) & [1]) == 0) ){ goto $label$176 }
	CALL $85(*($27 + [24]))
	
.LABEL $label$176
	CALL eosio_assert((((int_32)(*($27 + [100]) - *($27 + [96])) / (int_32)[12]) <= [4]), [2288])
	*(($27 + [664])) = [0]
	*($27 + [656]) = (int_64)0
	$20 = CALL strlen([2224])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$179 }
	*($27 + [656]) = ($20 << [1])
	$5 = (($27 + [656]) | [1])
	if ( $20 ){ goto $label$178 }
	goto $label$177 
	
.LABEL $label$179
	$4 = (($20 + [16]) & [-16])
	$5 = CALL $84($4)
	*($27 + [656]) = ($4 | [1])
	*($27 + [664]) = $5
	*($27 + [660]) = $20
	
.LABEL $label$178
	CALL memcpy($5, [2224], $20)
	
.LABEL $label$177
	*(($5 + $20)) = [0]
	CALL $100(($27 + [552]), *($27 + [96]))
	$20 = ($20 & [1])
	$20 = *($27 + [552])
	$5 = ( *($27 + [556]) ? uint_32($20 >> [1]) : $20 )
	if ( ($5 == 0) ){ goto $label$180 }
	$20 = ( *($27 + [560]) ? (($27 + [552]) | [1]) : $20 )
	
.LOOP $label$181:
	if ( ((int_32)*($20) != (int_32)[100]) ){ goto $label$182 }
	*($20) = [32]
	
.LABEL $label$182
	$20 = ($20 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$181 }
	
.LABEL $label$180
	CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($27 + [552]), [0], [10])
	$5 = *($27 + [96])
	$20 = ((int_32)(*($27 + [100]) - $5) / (int_32)[12])
	if ( ((int_32)$20 == (int_32)[3]) ){ goto $label$190 }
	if ( ((int_32)$20 == (int_32)[2]) ){ goto $label$189 }
	if ( ((int_32)$20 != (int_32)[1]) ){ goto $label$68 }
	CALL $69(($27 + [16]), ($27 + [552]), ($27 + [112]))
	$20 = CALL $91(($27 + [16]), [2304])
	$5 = *($20)
	*($20) = [0]
	$4 = *($20 + [4])
	*($20 + [4]) = [0]
	$14 = *($20 + [8])
	*($20 + [8]) = [0]
	if ( (*($27 + [656]) & [1]) ){ goto $label$188 }
	*($27 + [656]) = [0]
	$20 = ($27 + [664])
	goto $label$187 
	
.LABEL $label$190
	CALL $69(($27 + [512]), ($27 + [552]), ($5 + [12]))
	$20 = CALL $91(($27 + [512]), [2272])
	$5 = ($20 + [8])
	*((($27 + [16]) + [8])) = *($5)
	*($27 + [16]) = *($20)
	*($20) = [0]
	*(($20 + [4])) = [0]
	*($5) = [0]
	$5 = *($20 + [24])
	$4 = ($5 & [1])
	$20 = *($27 + [96])
	$20 = CALL $90(($27 + [16]), ( *(($20 + [32])) ? ($20 + [25]) : $4 ), ( *(($20 + [28])) ? uint_32($5 >> [1]) : $4 ))
	$5 = *($20)
	*($20) = [0]
	$4 = *($20 + [4])
	*($20 + [4]) = [0]
	$14 = *($20 + [8])
	*($20 + [8]) = [0]
	if ( (*($27 + [656]) & [1]) ){ goto $label$186 }
	*($27 + [656]) = [0]
	$20 = (($27 + [656]) + [8])
	goto $label$185 
	
.LABEL $label$189
	$20 = *($5 + [12])
	$4 = CALL strlen([2320])
	if ( ((int_32)$4 != (int_32)( *(($5 + [16])) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$191 }
	if ( (CALL $93(($5 + [12]), [0], [-1], [2320], $4) == 0) ){ goto $label$89 }
	
.LABEL $label$191
	$5 = *($20 + [12])
	$20 = *($27 + [96])
	$4 = CALL strlen([2336])
	if ( ((int_32)$4 != (int_32)( *(($20 + [16])) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$192 }
	if ( (CALL $93(($20 + [12]), [0], [-1], [2336], $4) == 0) ){ goto $label$84 }
	
.LABEL $label$192
	CALL $69(($27 + [16]), ($27 + [552]), (*($27 + [96]) + [12]))
	$20 = CALL $91(($27 + [16]), [2304])
	$5 = *($20)
	*($20) = [0]
	$4 = *($20 + [4])
	*($20 + [4]) = [0]
	$14 = *($20 + [8])
	*($20 + [8]) = [0]
	if ( (*($27 + [656]) & [1]) ){ goto $label$184 }
	*($27 + [656]) = [0]
	$20 = ($27 + [664])
	goto $label$183 
	
.LABEL $label$188
	*(*($27 + [664])) = [0]
	*($27 + [660]) = [0]
	$20 = ($27 + [664])
	
.LABEL $label$187
	CALL $87(($27 + [656]), [0])
	*($20) = $14
	*($27 + [656]) = $5
	*($27 + [660]) = $4
	if ( ((*($27 + [16]) & [1]) == 0) ){ goto $label$68 }
	CALL $85(*($27 + [24]))
	goto $label$68 
	
.LABEL $label$186
	*(*($27 + [664])) = [0]
	*($27 + [660]) = [0]
	$20 = (($27 + [656]) + [8])
	
.LABEL $label$185
	CALL $87(($27 + [656]), [0])
	*($20) = $14
	*($27 + [656]) = $5
	*($27 + [660]) = $4
	if ( ((*($27 + [16]) & [1]) == 0) ){ goto $label$193 }
	CALL $85(*($27 + [24]))
	
.LABEL $label$193
	if ( ((*($27 + [512]) & [1]) == 0) ){ goto $label$68 }
	CALL $85(*($27 + [520]))
	goto $label$68 
	
.LABEL $label$184
	*(*($27 + [664])) = [0]
	*($27 + [660]) = [0]
	$20 = ($27 + [664])
	
.LABEL $label$183
	CALL $87(($27 + [656]), [0])
	*($20) = $14
	*($27 + [656]) = $5
	*($27 + [660]) = $4
	if ( ((*($27 + [16]) & [1]) == 0) ){ goto $label$68 }
	CALL $85(*($27 + [24]))
	goto $label$68 
	
.LABEL $label$97
	CALL $88($4, [2432])
	goto $label$62 
	
.LABEL $label$96
	CALL $57(($27 + [536]), ($27 + [208]), ($27 + [440]), ($27 + [112]))
	
.LABEL $label$95
	$20 = *($27 + [208])
	*($27 + [208]) = [0]
	if ( ($20 == 0) ){ goto $label$194 }
	CALL $85($20)
	
.LABEL $label$194
	$20 = ($27 + [208])
	
.LABEL $label$94
	$24 = *($0)
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1296])
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($27 + [512])), [1344])
	CALL eosio_assert(((int_64)*($27 + [512]) == (int_64)CALL $fimport$3()), [1392])
	$22 = *($5)
	*($27 + [96]) = $22
	$15 = ($5 + [16])
	CALL eosio_assert(((int_64)$21 == (int_64)*($15)), [1792])
	$21 = ((int_64)*($5 + [8]) + (int_64)$23)
	*($5 + [8]) = $21
	CALL eosio_assert(((int_64)$21 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($5 + [8]) < (int_64)4611686018427387904), [1872])
	CALL eosio_assert(((int_64)$22 == (int_64)*($5)), [1568])
	CALL eosio_assert([1], [320])
	CALL memcpy($20, $5, [8])
	CALL eosio_assert([1], [320])
	CALL memcpy($14, ($5 + [8]), [8])
	CALL eosio_assert([1], [320])
	CALL memcpy($3, $15, [8])
	CALL db_update_i64(*($5 + [28]), $24, $20, [24])
	$20 = (($27 + [512]) + [16])
	if ( (uint_64)($22 <= *($20)) ){ goto $label$195 }
	*($20) = ( (int_64)-2 ? ((int_64)$22 + (int_64)1) : ((uint_64)$22 > (uint_64)(int_64)-3) )
	
.LABEL $label$195
	*($27 + [440]) = *($5)
	if ( (CALL memcmp(($27 + [96]), ($27 + [440]), [8]) == 0) ){ goto $label$196 }
	$5 = ($5 + [32])
	$20 = *($5)
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$197 }
	$20 = CALL db_idx64_find_primary(*($27 + [512]), *(($27 + [520])), (int_64)5380477996647841792, ($27 + [112]), $22)
	*($5) = $20
	
.LABEL $label$197
	CALL db_idx64_update($20, $24, ($27 + [440]))
	
.LABEL $label$196
	*(($27 + [472])) = [0]
	*($27 + [456]) = (int_64)-1
	*($27 + [464]) = (int_64)0
	$22 = *($0)
	*($27 + [440]) = $22
	*($27 + [448]) = $22
	$20 = CALL db_find_i64($22, $22, (int_64)5380477996752830464, $1)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$199 }
	CALL eosio_assert(((int_32)*(CALL $46(($27 + [440]), $20) + [8]) == (int_32)($27 + [440])), [944])
	goto $label$198 
	
.LABEL $label$199
	$24 = *($0)
	CALL eosio_assert(((int_64)*($27 + [440]) == (int_64)CALL $fimport$3()), [1728])
	*(($20 = CALL $84([24])) + [8]) = ($27 + [440])
	*($20) = $1
	CALL eosio_assert([1], [320])
	CALL memcpy(($27 + [112]), $20, [8])
	$22 = *($20)
	$0 = CALL db_store_i64(*((($27 + [440]) + [8])), (int_64)5380477996752830464, $24, $22, ($27 + [112]), [8])
	*($20 + [12]) = $0
	$5 = ($27 + [456])
	if ( (uint_64)($22 <= *($5)) ){ goto $label$200 }
	*($5) = ( (int_64)-2 ? ((int_64)$22 + (int_64)1) : ((uint_64)$22 > (uint_64)(int_64)-3) )
	
.LABEL $label$200
	*($27 + [112]) = $20
	$22 = *($20)
	*($27 + [208]) = $22
	*($27 + [96]) = $0
	$3 = ($27 + [468])
	$5 = *($3)
	if ( ((uint_32)$5 >= (uint_32)*(($27 + [472]))) ){ goto $label$202 }
	*($5 + [8]) = $22
	*($5 + [16]) = $0
	*($27 + [112]) = [0]
	*($5) = $20
	*($3) = ($5 + [24])
	goto $label$201 
	
.LABEL $label$202
	CALL $56(($27 + [464]), ($27 + [112]), ($27 + [208]), ($27 + [96]))
	
.LABEL $label$201
	$20 = *($27 + [112])
	*($27 + [112]) = [0]
	if ( ($20 == 0) ){ goto $label$198 }
	CALL $85($20)
	
.LABEL $label$198
	*($27 + [216]) = (int_64)0
	*($27 + [208]) = $1
	CALL cancel_deferred(($27 + [208]))
	CALL eosio_assert($8, [656])
	CALL eosio_assert($8, [704])
	$20 = CALL db_next_i64(*($4 + [36]), ($27 + [208]))
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$203 }
	CALL $40(($27 + [16]), $20)
	
.LABEL $label$203
	CALL $41(($27 + [16]), $4)
	$4 = *($27 + [464])
	if ( ($4 == 0) ){ goto $label$204 }
	$0 = ($27 + [468])
	$20 = *($0)
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$206 }
	
.LOOP $label$207:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$208 }
	CALL $85($5)
	
.LABEL $label$208
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$207 }
	$20 = *(($27 + [464]))
	goto $label$205 
	
.LABEL $label$206
	$20 = $4
	
.LABEL $label$205
	*($0) = $4
	CALL $85($20)
	
.LABEL $label$204
	$4 = *($27 + [536])
	if ( ($4 == 0) ){ goto $label$209 }
	$0 = ($27 + [540])
	$20 = *($0)
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$211 }
	
.LOOP $label$212:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$213 }
	CALL $85($5)
	
.LABEL $label$213
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$212 }
	$20 = *(($27 + [536]))
	goto $label$210 
	
.LABEL $label$211
	$20 = $4
	
.LABEL $label$210
	*($0) = $4
	CALL $85($20)
	
.LABEL $label$209
	$4 = *($27 + [40])
	if ( ($4 == 0) ){ goto $label$61 }
	$0 = ($27 + [44])
	$20 = *($0)
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$215 }
	
.LOOP $label$216:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$217 }
	CALL $85($5)
	
.LABEL $label$217
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$216 }
	$20 = *(($27 + [40]))
	goto $label$214 
	
.LABEL $label$215
	$20 = $4
	
.LABEL $label$214
	*($0) = $4
	CALL $85($20)
	$4 = *($27 + [592])
	if ( $4 ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$93
	CALL $88($4, [2432])
	goto $label$62 
	
.LABEL $label$92
	$8 = (($20 + [16]) & [-16])
	$5 = CALL $84($8)
	*($27 + [408]) = ($8 | [1])
	*($27 + [416]) = $5
	*($27 + [412]) = $20
	$19 = (($27 + [408]) | [1])
	
.LABEL $label$91
	CALL memcpy($5, [2240], $20)
	
.LABEL $label$90
	*(($5 + $20)) = [0]
	$16 = ($15 & [1])
	$15 = *($27 + [408])
	$5 = ( *($27 + [412]) ? uint_32($15 >> [1]) : $16 )
	if ( ($5 == 0) ){ goto $label$87 }
	$8 = ( *($27 + [428]) ? uint_32($20 >> [1]) : $8 )
	$20 = *($27 + [424])
	$8 = ($20 & [1])
	$18 = ( *($27 + [432]) ? (($27 + [424]) | [1]) : $8 )
	$14 = ($18 + $8)
	$20 = $14
	if ( ((int_32)$8 < (int_32)$5) ){ goto $label$218 }
	$19 = ( *($27 + [416]) ? $19 : $16 )
	$15 = *($19)
	$20 = $18
	
.LOOP $label$221:
	$8 = (($8 - $5) + [1])
	if ( ($8 == 0) ){ goto $label$220 }
	$20 = CALL memchr($20, $15, $8)
	if ( ($20 == 0) ){ goto $label$220 }
	if ( (CALL memcmp($20, $19, $5) == 0) ){ goto $label$219 }
	$20 = ($20 + [1])
	$8 = ($14 - $20)
	if ( ((int_32)$8 >= (int_32)$5) ){ goto $label$221 }
	
.LABEL $label$220
	$20 = $14
	
.LABEL $label$219
	$15 = *($27 + [408])
	
.LABEL $label$218
	$20 = (((int_32)$20 == (int_32)$18) & ((int_32)$20 != (int_32)$14))
	if ( ($15 & [1]) ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$89
	CALL $69(($27 + [16]), ($27 + [552]), ($27 + [112]))
	$20 = CALL $91(($27 + [16]), [2304])
	$5 = *($20)
	*($20) = [0]
	$4 = *($20 + [4])
	*($20 + [4]) = [0]
	$14 = *($20 + [8])
	*($20 + [8]) = [0]
	if ( (*($27 + [656]) & [1]) ){ goto $label$75 }
	*($27 + [656]) = [0]
	$20 = ($27 + [664])
	goto $label$74 
	
.LABEL $label$88
	CALL $88($4, [2432])
	goto $label$62 
	
.LABEL $label$87
	$20 = [1]
	if ( (($15 & [1]) == 0) ){ goto $label$85 }
	
.LABEL $label$86
	CALL $85(*(($27 + [416])))
	
.LABEL $label$85
	if ( ((*($27 + [424]) & [1]) == 0) ){ goto $label$222 }
	CALL $85(*(($27 + [432])))
	
.LABEL $label$222
	if ( ($20 == 0) ){ goto $label$223 }
	CALL $94(($27 + [16]), [2544], $4)
	if ( (*($4) & [1]) ){ goto $label$81 }
	*($4) = [0]
	goto $label$80 
	
.LABEL $label$223
	CALL $100(($27 + [392]), $4)
	*(($27 + [384])) = [0]
	*($27 + [376]) = (int_64)0
	$20 = CALL strlen([2560])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$79 }
	*($27 + [376]) = ($20 << [1])
	$19 = (($27 + [376]) | [1])
	$5 = $19
	if ( $20 ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$84
	CALL $69(($27 + [16]), ($27 + [552]), ($27 + [112]))
	$20 = CALL $91(($27 + [16]), [2352])
	$5 = *($20)
	*($20) = [0]
	$4 = *($20 + [4])
	*($20 + [4]) = [0]
	$14 = *($20 + [8])
	*($20 + [8]) = [0]
	if ( (*($27 + [656]) & [1]) ){ goto $label$70 }
	*($27 + [656]) = [0]
	$20 = ($27 + [664])
	goto $label$69 
	
.LABEL $label$83
	CALL $88($4, [2480])
	goto $label$62 
	
.LABEL $label$82
	CALL $88($4, [2480])
	goto $label$62 
	
.LABEL $label$81
	*(*($4 + [8])) = [0]
	*(($4 + [4])) = [0]
	
.LABEL $label$80
	CALL $87($4, [0])
	*(($4 + [8])) = *((($27 + [16]) + [8]))
	*($4) = *($27 + [16])
	goto $label$62 
	
.LABEL $label$79
	$8 = (($20 + [16]) & [-16])
	$5 = CALL $84($8)
	*($27 + [376]) = ($8 | [1])
	*($27 + [384]) = $5
	*($27 + [380]) = $20
	$19 = (($27 + [376]) | [1])
	
.LABEL $label$78
	CALL memcpy($5, [2560], $20)
	
.LABEL $label$77
	*(($5 + $20)) = [0]
	$16 = ($15 & [1])
	$15 = *($27 + [376])
	$5 = ( *($27 + [380]) ? uint_32($15 >> [1]) : $16 )
	if ( ($5 == 0) ){ goto $label$73 }
	$8 = ( *($27 + [396]) ? uint_32($20 >> [1]) : $8 )
	$20 = *($27 + [392])
	$8 = ($20 & [1])
	$18 = ( *($27 + [400]) ? (($27 + [392]) | [1]) : $8 )
	$14 = ($18 + $8)
	$20 = $14
	if ( ((int_32)$8 < (int_32)$5) ){ goto $label$224 }
	$19 = ( *($27 + [384]) ? $19 : $16 )
	$15 = *($19)
	$20 = $18
	
.LOOP $label$227:
	$8 = (($8 - $5) + [1])
	if ( ($8 == 0) ){ goto $label$226 }
	$20 = CALL memchr($20, $15, $8)
	if ( ($20 == 0) ){ goto $label$226 }
	if ( (CALL memcmp($20, $19, $5) == 0) ){ goto $label$225 }
	$20 = ($20 + [1])
	$8 = ($14 - $20)
	if ( ((int_32)$8 >= (int_32)$5) ){ goto $label$227 }
	
.LABEL $label$226
	$20 = $14
	
.LABEL $label$225
	$15 = *($27 + [376])
	
.LABEL $label$224
	$20 = (((int_32)$20 == (int_32)$18) & ((int_32)$20 != (int_32)$14))
	if ( ($15 & [1]) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$76
	CALL $88($4, [2528])
	goto $label$62 
	
.LABEL $label$75
	*(*($27 + [664])) = [0]
	*($27 + [660]) = [0]
	$20 = ($27 + [664])
	
.LABEL $label$74
	CALL $87(($27 + [656]), [0])
	*($20) = $14
	*($27 + [656]) = $5
	*($27 + [660]) = $4
	if ( ((*($27 + [16]) & [1]) == 0) ){ goto $label$68 }
	CALL $85(*($27 + [24]))
	goto $label$68 
	
.LABEL $label$73
	$20 = [1]
	if ( (($15 & [1]) == 0) ){ goto $label$71 }
	
.LABEL $label$72
	CALL $85(*(($27 + [384])))
	
.LABEL $label$71
	if ( ((*($27 + [392]) & [1]) == 0) ){ goto $label$228 }
	CALL $85(*(($27 + [400])))
	
.LABEL $label$228
	if ( ($20 == 0) ){ goto $label$229 }
	if ( (*($4) & [1]) ){ goto $label$67 }
	$8 = ($4 + [1])
	goto $label$66 
	
.LABEL $label$229
	CALL $100(($27 + [360]), $4)
	*(($27 + [352])) = [0]
	*($27 + [344]) = (int_64)0
	$20 = CALL strlen([2576])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$65 }
	*($27 + [344]) = ($20 << [1])
	$19 = (($27 + [344]) | [1])
	$5 = $19
	if ( $20 ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$70
	*(*($27 + [664])) = [0]
	*($27 + [660]) = [0]
	$20 = ($27 + [664])
	
.LABEL $label$69
	CALL $87(($27 + [656]), [0])
	*($20) = $14
	*($27 + [656]) = $5
	*($27 + [660]) = $4
	if ( ((*($27 + [16]) & [1]) == 0) ){ goto $label$68 }
	CALL $85(*($27 + [24]))
	
.LABEL $label$68
	$26 = (CASTING float_32)(int_64 *($3))
	$10 = (PROMOTE float_64)(float_32 $26)
	$13 = (DEMOTE float_32)(float_64 ((float_64)$10 * (float_64)(float_64)0.9333))
	$9 = (Rounds 0)($13)
	CALL eosio_assert((uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [144])
	$26 = (float_32))($26 - $13)
	$22 = (int_64)5459781
	$20 = [0]
	
.LOOP $label$232:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$231 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$233 }
	
.LOOP $label$234:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$231 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$234 }
	
.LABEL $label$233
	$5 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$232 }
	goto $label$230 
	
.LABEL $label$231
	$5 = [0]
	
.LABEL $label$230
	CALL eosio_assert($5, [208])
	$6 = *($0)
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [288]
	$25 = (int_64)0
	
.LOOP $label$235:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$240 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$239 }
	$5 = ($5 + [165])
	goto $label$238 
	
.LABEL $label$240
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$237 }
	goto $label$236 
	
.LABEL $label$239
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$238
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$237
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$236
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$25 = ((int_64)$24 | (int_64)$25)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$235 }
	*($27 + [448]) = $25
	*($27 + [440]) = $6
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [128]
	$25 = (int_64)0
	
.LOOP $label$241:
	if ( ((uint_64)$22 > (uint_64)(int_64)10) ){ goto $label$246 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$245 }
	$5 = ($5 + [165])
	goto $label$244 
	
.LABEL $label$246
	$24 = (int_64)0
	if ( ((int_64)$22 == (int_64)11) ){ goto $label$243 }
	goto $label$242 
	
.LABEL $label$245
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$244
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$243
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$242
	$20 = ($20 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$25 = ((int_64)$24 | (int_64)$25)
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((int_64)$22 != (int_64)13) ){ goto $label$241 }
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [112]
	$1 = (int_64)0
	
.LOOP $label$247:
	if ( ((uint_64)$22 > (uint_64)(int_64)7) ){ goto $label$252 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$251 }
	$5 = ($5 + [165])
	goto $label$250 
	
.LABEL $label$252
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$249 }
	goto $label$248 
	
.LABEL $label$251
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$250
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$249
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$248
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$1 = ((int_64)$24 | (int_64)$1)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$247 }
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [2368]
	$2 = (int_64)0
	
.LOOP $label$253:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$254 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$256 }
	$5 = ($5 + [165])
	goto $label$255 
	
.LABEL $label$256
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$255
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$254
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$2 = ((int_64)$21 | (int_64)$2)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$253 }
	*(($27 + [40])) = (int_64)1397703940
	*($27 + [24]) = $2
	*($27 + [16]) = $6
	*($27 + [32]) = $9
	CALL $100(($27 + [48]), ($27 + [656]))
	$20 = CALL $29(($27 + [512]), ($27 + [440]), $25, $1, ($27 + [16]))
	CALL $30(($27 + [208]), $20)
	$5 = *($27 + [208])
	CALL send_inline($5, (*($27 + [212]) - $5))
	$5 = *($27 + [208])
	if ( ($5 == 0) ){ goto $label$257 }
	*($27 + [212]) = $5
	CALL $85($5)
	
.LABEL $label$257
	$5 = *($20 + [28])
	if ( ($5 == 0) ){ goto $label$258 }
	*(($20 + [32])) = $5
	CALL $85($5)
	
.LABEL $label$258
	$5 = *($20 + [16])
	if ( ($5 == 0) ){ goto $label$259 }
	*(($20 + [20])) = $5
	CALL $85($5)
	
.LABEL $label$259
	if ( ((*($27 + [48]) & [1]) == 0) ){ goto $label$260 }
	CALL $85(*(($27 + [56])))
	
.LABEL $label$260
	CALL eosio_assert([1], [144])
	$22 = (int_64)5459781
	$20 = [0]
	
.LOOP $label$263:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$262 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$264 }
	
.LOOP $label$265:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$262 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$265 }
	
.LABEL $label$264
	$5 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$263 }
	goto $label$261 
	
.LABEL $label$262
	$5 = [0]
	
.LABEL $label$261
	CALL eosio_assert($5, [208])
	if ( ($8 == 0) ){ goto $label$266 }
	$13 = (DEMOTE float_32)(float_64 ((float_64)$10 * (float_64)(float_64)0.01))
	$9 = (Rounds 0)($13)
	CALL eosio_assert((uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [144])
	$26 = (float_32))($26 - $13)
	$22 = (int_64)5459781
	$20 = [0]
	
.LOOP $label$269:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$268 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$270 }
	
.LOOP $label$271:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$268 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$271 }
	
.LABEL $label$270
	$5 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$269 }
	goto $label$267 
	
.LABEL $label$268
	$5 = [0]
	
.LABEL $label$267
	CALL eosio_assert($5, [208])
	$6 = *($0)
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [288]
	$25 = (int_64)0
	
.LOOP $label$272:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$277 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$276 }
	$5 = ($5 + [165])
	goto $label$275 
	
.LABEL $label$277
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$274 }
	goto $label$273 
	
.LABEL $label$276
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$275
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$274
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$273
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$25 = ((int_64)$24 | (int_64)$25)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$272 }
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [32]
	$1 = (int_64)0
	
.LOOP $label$278:
	if ( ((uint_64)$22 > (uint_64)(int_64)4) ){ goto $label$283 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$282 }
	$5 = ($5 + [165])
	goto $label$281 
	
.LABEL $label$283
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$280 }
	goto $label$279 
	
.LABEL $label$282
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$281
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$280
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$279
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$1 = ((int_64)$24 | (int_64)$1)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$278 }
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [2384]
	$2 = (int_64)0
	
.LOOP $label$284:
	if ( ((uint_64)$22 > (uint_64)(int_64)9) ){ goto $label$289 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$288 }
	$5 = ($5 + [165])
	goto $label$287 
	
.LABEL $label$289
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$286 }
	goto $label$285 
	
.LABEL $label$288
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$287
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$286
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$285
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$2 = ((int_64)$24 | (int_64)$2)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$284 }
	*((($27 + [16]) + [24])) = (int_64)1397703940
	*($27 + [24]) = $23
	*($27 + [16]) = $6
	*($27 + [32]) = (int_64)0
	*($27 + [48]) = $9
	*(($27 + [56])) = (int_64)1397703940
	*($27 + [64]) = [1]
	*($27 + [528]) = [0]
	*($27 + [520]) = $2
	*($27 + [512]) = $1
	*(($5 = ($27 + [532]))) = [0]
	*(($4 = (($27 + [512]) + [24]))) = [0]
	*(($20 = CALL $84([16]))) = $6
	*($20 + [8]) = $25
	*(($8 = ($27 + [544]))) = [0]
	$3 = ($20 + [16])
	*($4) = $3
	*($5) = $3
	*($27 + [528]) = $20
	*($27 + [540]) = [0]
	*(($27 + [548])) = [0]
	CALL $28(($27 + [540]), [49])
	$20 = *($8)
	$5 = *($27 + [540])
	*($27 + [444]) = $5
	*($27 + [440]) = $5
	*($27 + [448]) = $20
	*($27 + [496]) = ($27 + [440])
	*($27 + [208]) = ($27 + [16])
	CALL $70(($27 + [208]), ($27 + [496]))
	CALL $30(($27 + [440]), ($27 + [512]))
	$20 = *($27 + [440])
	CALL send_inline($20, (*($27 + [444]) - $20))
	$20 = *($27 + [440])
	if ( ($20 == 0) ){ goto $label$290 }
	*($27 + [444]) = $20
	CALL $85($20)
	
.LABEL $label$290
	$20 = *($27 + [540])
	if ( ($20 == 0) ){ goto $label$291 }
	*(($27 + [544])) = $20
	CALL $85($20)
	
.LABEL $label$291
	$20 = *($27 + [528])
	if ( ($20 == 0) ){ goto $label$266 }
	*(($27 + [532])) = $20
	CALL $85($20)
	
.LABEL $label$266
	$6 = (Rounds 0)($26)
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [144])
	$22 = (int_64)5459781
	$20 = [0]
	
.LOOP $label$294:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$293 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$295 }
	
.LOOP $label$296:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$293 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$296 }
	
.LABEL $label$295
	$5 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$294 }
	goto $label$292 
	
.LABEL $label$293
	$5 = [0]
	
.LABEL $label$292
	CALL eosio_assert($5, [208])
	*(($27 + [504])) = [0]
	*($27 + [496]) = (int_64)0
	$20 = CALL strlen([2224])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$299 }
	*($27 + [496]) = ($20 << [1])
	$5 = (($27 + [496]) | [1])
	if ( $20 ){ goto $label$298 }
	goto $label$297 
	
.LABEL $label$299
	$4 = (($20 + [16]) & [-16])
	$5 = CALL $84($4)
	*($27 + [496]) = ($4 | [1])
	*($27 + [504]) = $5
	*($27 + [500]) = $20
	
.LABEL $label$298
	CALL memcpy($5, [2224], $20)
	
.LABEL $label$297
	*(($5 + $20)) = [0]
	$2 = *($0)
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [288]
	$23 = (int_64)0
	
.LOOP $label$300:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$305 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$304 }
	$5 = ($5 + [165])
	goto $label$303 
	
.LABEL $label$305
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$302 }
	goto $label$301 
	
.LABEL $label$304
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$303
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$302
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$301
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$300 }
	*($27 + [448]) = $23
	*($27 + [440]) = $2
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [128]
	$23 = (int_64)0
	
.LOOP $label$306:
	if ( ((uint_64)$22 > (uint_64)(int_64)10) ){ goto $label$311 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$310 }
	$5 = ($5 + [165])
	goto $label$309 
	
.LABEL $label$311
	$24 = (int_64)0
	if ( ((int_64)$22 == (int_64)11) ){ goto $label$308 }
	goto $label$307 
	
.LABEL $label$310
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$309
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$308
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$307
	$20 = ($20 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$23 = ((int_64)$24 | (int_64)$23)
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((int_64)$22 != (int_64)13) ){ goto $label$306 }
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [112]
	$25 = (int_64)0
	
.LOOP $label$312:
	if ( ((uint_64)$22 > (uint_64)(int_64)7) ){ goto $label$317 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$316 }
	$5 = ($5 + [165])
	goto $label$315 
	
.LABEL $label$317
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$314 }
	goto $label$313 
	
.LABEL $label$316
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$315
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$314
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$313
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$25 = ((int_64)$24 | (int_64)$25)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$312 }
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [2048]
	$1 = (int_64)0
	
.LOOP $label$318:
	if ( ((uint_64)$22 > (uint_64)(int_64)9) ){ goto $label$323 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$322 }
	$5 = ($5 + [165])
	goto $label$321 
	
.LABEL $label$323
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$320 }
	goto $label$319 
	
.LABEL $label$322
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$321
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$320
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$319
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$1 = ((int_64)$24 | (int_64)$1)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$318 }
	*(($27 + [40])) = (int_64)1397703940
	*($27 + [24]) = $1
	*($27 + [16]) = $2
	*($27 + [32]) = $6
	CALL $100(($27 + [48]), ($27 + [496]))
	$20 = CALL $29(($27 + [512]), ($27 + [440]), $23, $25, ($27 + [16]))
	CALL $30(($27 + [208]), $20)
	$5 = *($27 + [208])
	CALL send_inline($5, (*($27 + [212]) - $5))
	$5 = *($27 + [208])
	if ( ($5 == 0) ){ goto $label$324 }
	*($27 + [212]) = $5
	CALL $85($5)
	
.LABEL $label$324
	$5 = *($20 + [28])
	if ( ($5 == 0) ){ goto $label$325 }
	*(($20 + [32])) = $5
	CALL $85($5)
	
.LABEL $label$325
	$5 = *($20 + [16])
	if ( ($5 == 0) ){ goto $label$326 }
	*(($20 + [20])) = $5
	CALL $85($5)
	
.LABEL $label$326
	if ( ((*($27 + [48]) & [1]) == 0) ){ goto $label$327 }
	CALL $85(*(($27 + [56])))
	
.LABEL $label$327
	if ( ((*($27 + [496]) & [1]) == 0) ){ goto $label$328 }
	CALL $85(*($27 + [504]))
	
.LABEL $label$328
	if ( ((*($27 + [552]) & [1]) == 0) ){ goto $label$329 }
	CALL $85(*(($27 + [560])))
	
.LABEL $label$329
	if ( ((*($27 + [656]) & [1]) == 0) ){ goto $label$330 }
	CALL $85(*($27 + [664]))
	
.LABEL $label$330
	$4 = *($27 + [96])
	if ( ($4 == 0) ){ goto $label$331 }
	$20 = *($27 + [100])
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$333 }
	$5 = ([0] - $4)
	$20 = ($20 + [-12])
	
.LOOP $label$334:
	if ( ((*($20) & [1]) == 0) ){ goto $label$335 }
	CALL $85(*(($20 + [8])))
	
.LABEL $label$335
	$20 = ($20 + [-12])
	if ( ((int_32)($20 + $5) != (int_32)[-12]) ){ goto $label$334 }
	$20 = *($27 + [96])
	goto $label$332 
	
.LABEL $label$333
	$20 = $4
	
.LABEL $label$332
	*($27 + [100]) = $4
	CALL $85($20)
	
.LABEL $label$331
	if ( ((*($27 + [112]) & [1]) == 0) ){ goto $label$336 }
	CALL $85(*($27 + [120]))
	
.LABEL $label$336
	$4 = *($27 + [592])
	if ( ($4 == 0) ){ goto $label$59 }
	$0 = ($27 + [596])
	$20 = *($0)
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$338 }
	
.LOOP $label$339:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$340 }
	CALL $85($5)
	
.LABEL $label$340
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$339 }
	$20 = *(($27 + [592]))
	goto $label$337 
	
.LABEL $label$338
	$20 = $4
	
.LABEL $label$337
	*($0) = $4
	CALL $85($20)
	$4 = *($27 + [632])
	if ( $4 ){ goto $label$58 }
	goto $label$14 
	
.LABEL $label$67
	$8 = *($4 + [8])
	
.LABEL $label$66
	if ( ((int_32)$8 == (int_32)($8 + [1])) ){ goto $label$341 }
	$5 = ($8 + [-1])
	
.LOOP $label$342:
	$20 = ($5 + [1])
	if ( ((int_32)*($20) != (int_32)[51]) ){ goto $label$343 }
	*(($5 + [1])) = [52]
	
.LABEL $label$343
	$5 = $20
	if ( ((int_32)$8 != (int_32)$20) ){ goto $label$342 }
	
.LABEL $label$341
	CALL $94(($27 + [16]), [2544], $4)
	if ( (*($4) & [1]) ){ goto $label$345 }
	*($4) = [0]
	goto $label$344 
	
.LABEL $label$345
	*(*($4 + [8])) = [0]
	*(($4 + [4])) = [0]
	
.LABEL $label$344
	CALL $87($4, [0])
	*(($4 + [8])) = *((($27 + [16]) + [8]))
	*($4) = *($27 + [16])
	goto $label$62 
	
.LABEL $label$65
	$8 = (($20 + [16]) & [-16])
	$5 = CALL $84($8)
	*($27 + [344]) = ($8 | [1])
	*($27 + [352]) = $5
	*($27 + [348]) = $20
	$19 = (($27 + [344]) | [1])
	
.LABEL $label$64
	CALL memcpy($5, [2576], $20)
	
.LABEL $label$63
	*(($5 + $20)) = [0]
	$16 = ($15 & [1])
	$15 = *($27 + [344])
	$5 = ( *($27 + [348]) ? uint_32($15 >> [1]) : $16 )
	if ( ($5 == 0) ){ goto $label$348 }
	$8 = ( *($27 + [364]) ? uint_32($20 >> [1]) : $8 )
	$20 = *($27 + [360])
	$8 = ($20 & [1])
	$18 = ( *($27 + [368]) ? (($27 + [360]) | [1]) : $8 )
	$14 = ($18 + $8)
	$20 = $14
	if ( ((int_32)$8 < (int_32)$5) ){ goto $label$349 }
	$19 = ( *($27 + [352]) ? $19 : $16 )
	$15 = *($19)
	$20 = $18
	
.LOOP $label$352:
	$8 = (($8 - $5) + [1])
	if ( ($8 == 0) ){ goto $label$351 }
	$20 = CALL memchr($20, $15, $8)
	if ( ($20 == 0) ){ goto $label$351 }
	if ( (CALL memcmp($20, $19, $5) == 0) ){ goto $label$350 }
	$20 = ($20 + [1])
	$8 = ($14 - $20)
	if ( ((int_32)$8 >= (int_32)$5) ){ goto $label$352 }
	
.LABEL $label$351
	$20 = $14
	
.LABEL $label$350
	$15 = *($27 + [344])
	
.LABEL $label$349
	$20 = (((int_32)$20 == (int_32)$18) & ((int_32)$20 != (int_32)$14))
	if ( ($15 & [1]) ){ goto $label$347 }
	goto $label$346 
	
.LABEL $label$348
	$20 = [1]
	if ( (($15 & [1]) == 0) ){ goto $label$346 }
	
.LABEL $label$347
	CALL $85(*(($27 + [352])))
	
.LABEL $label$346
	if ( ((*($27 + [360]) & [1]) == 0) ){ goto $label$353 }
	CALL $85(*(($27 + [368])))
	
.LABEL $label$353
	if ( ($20 == 0) ){ goto $label$359 }
	CALL $94(($27 + [16]), [2544], $4)
	if ( (*($4) & [1]) ){ goto $label$358 }
	*($4) = [0]
	goto $label$357 
	
.LABEL $label$359
	CALL $100(($27 + [328]), $4)
	*(($27 + [320])) = [0]
	*($27 + [312]) = (int_64)0
	$20 = CALL strlen([2592])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$356 }
	*($27 + [312]) = ($20 << [1])
	$16 = (($27 + [312]) | [1])
	$5 = $16
	if ( $20 ){ goto $label$355 }
	goto $label$354 
	
.LABEL $label$358
	*(*($4 + [8])) = [0]
	*(($4 + [4])) = [0]
	
.LABEL $label$357
	CALL $87($4, [0])
	*(($4 + [8])) = *((($27 + [16]) + [8]))
	*($4) = *($27 + [16])
	goto $label$62 
	
.LABEL $label$356
	$8 = (($20 + [16]) & [-16])
	$5 = CALL $84($8)
	*($27 + [312]) = ($8 | [1])
	*($27 + [320]) = $5
	*($27 + [316]) = $20
	$16 = (($27 + [312]) | [1])
	
.LABEL $label$355
	CALL memcpy($5, [2592], $20)
	
.LABEL $label$354
	*(($5 + $20)) = [0]
	$19 = ($15 & [1])
	$15 = *($27 + [312])
	$5 = ( *($27 + [316]) ? uint_32($15 >> [1]) : $19 )
	if ( ($5 == 0) ){ goto $label$362 }
	$8 = ( *($27 + [332]) ? uint_32($20 >> [1]) : $8 )
	$20 = *($27 + [328])
	$8 = ($20 & [1])
	$18 = ( *($27 + [336]) ? (($27 + [328]) | [1]) : $8 )
	$14 = ($18 + $8)
	$20 = $14
	if ( ((int_32)$8 < (int_32)$5) ){ goto $label$363 }
	$19 = ( *($27 + [320]) ? $16 : $19 )
	$15 = *($19)
	$20 = $18
	
.LOOP $label$366:
	$8 = (($8 - $5) + [1])
	if ( ($8 == 0) ){ goto $label$365 }
	$20 = CALL memchr($20, $15, $8)
	if ( ($20 == 0) ){ goto $label$365 }
	if ( (CALL memcmp($20, $19, $5) == 0) ){ goto $label$364 }
	$20 = ($20 + [1])
	$8 = ($14 - $20)
	if ( ((int_32)$8 >= (int_32)$5) ){ goto $label$366 }
	
.LABEL $label$365
	$20 = $14
	
.LABEL $label$364
	$15 = *($27 + [312])
	
.LABEL $label$363
	$20 = (((int_32)$20 == (int_32)$18) & ((int_32)$20 != (int_32)$14))
	if ( ($15 & [1]) ){ goto $label$361 }
	goto $label$360 
	
.LABEL $label$362
	$20 = [1]
	if ( (($15 & [1]) == 0) ){ goto $label$360 }
	
.LABEL $label$361
	CALL $85(*(($27 + [320])))
	
.LABEL $label$360
	if ( ((*($27 + [328]) & [1]) == 0) ){ goto $label$367 }
	CALL $85(*(($27 + [336])))
	
.LABEL $label$367
	if ( ($20 == 0) ){ goto $label$62 }
	CALL $94(($27 + [16]), [2544], $4)
	if ( (*($4) & [1]) ){ goto $label$369 }
	*($4) = [0]
	goto $label$368 
	
.LABEL $label$369
	*(*($4 + [8])) = [0]
	*(($4 + [4])) = [0]
	
.LABEL $label$368
	CALL $87($4, [0])
	*(($4 + [8])) = *((($27 + [16]) + [8]))
	*($4) = *($27 + [16])
	
.LABEL $label$62
	$20 = *($4)
	$5 = CALL strlen([2032])
	if ( ((int_32)$5 != (int_32)( *(($4 + [4])) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$376 }
	if ( (CALL $93($4, [0], [-1], [2032], $5) == 0) ){ goto $label$375 }
	
.LABEL $label$376
	CALL $100(($27 + [296]), $4)
	*(($27 + [288])) = [0]
	*($27 + [280]) = (int_64)0
	$20 = CALL strlen([2256])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$379 }
	*($27 + [280]) = ($20 << [1])
	$8 = (($27 + [280]) | [1])
	$5 = $8
	if ( $20 ){ goto $label$378 }
	goto $label$377 
	
.LABEL $label$379
	$8 = (($20 + [16]) & [-16])
	$5 = CALL $84($8)
	*($27 + [280]) = ($8 | [1])
	*($27 + [288]) = $5
	*($27 + [284]) = $20
	$8 = (($27 + [280]) | [1])
	
.LABEL $label$378
	CALL memcpy($5, [2256], $20)
	
.LABEL $label$377
	*(($5 + $20)) = [0]
	$14 = ($20 & [1])
	$20 = *($27 + [280])
	$20 = ( *($27 + [284]) ? uint_32($20 >> [1]) : $14 )
	if ( ($20 == 0) ){ goto $label$373 }
	$15 = ($5 & [1])
	$5 = *($27 + [296])
	$5 = ( *($27 + [300]) ? uint_32($5 >> [1]) : $15 )
	if ( ((int_32)$5 < (int_32)$20) ){ goto $label$372 }
	$18 = ( *($27 + [304]) ? (($27 + [296]) | [1]) : $15 )
	$19 = ($18 + $5)
	$15 = ( *($27 + [288]) ? $8 : $14 )
	$14 = *($15)
	$8 = $18
	
.LOOP $label$380:
	$5 = (($5 - $20) + [1])
	if ( ($5 == 0) ){ goto $label$372 }
	$5 = CALL memchr($8, $14, $5)
	if ( ($5 == 0) ){ goto $label$372 }
	if ( (CALL memcmp($5, $15, $20) == 0) ){ goto $label$374 }
	$8 = ($5 + [1])
	$5 = ($19 - $8)
	if ( ((int_32)$5 >= (int_32)$20) ){ goto $label$380 }
	goto $label$372 
	
.LABEL $label$375
	CALL eosio_assert([1], [2608])
	goto $label$370 
	
.LABEL $label$374
	if ( ((int_32)$5 != (int_32)$18) ){ goto $label$372 }
	if ( ((int_32)$5 == (int_32)$19) ){ goto $label$372 }
	
.LABEL $label$373
	CALL eosio_assert([1], [2608])
	goto $label$371 
	
.LABEL $label$372
	CALL $100(($27 + [264]), $4)
	*(($27 + [256])) = [0]
	*($27 + [248]) = (int_64)0
	$20 = CALL strlen([1904])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$383 }
	*($27 + [248]) = ($20 << [1])
	$19 = (($27 + [248]) | [1])
	$5 = $19
	if ( $20 ){ goto $label$382 }
	goto $label$381 
	
.LABEL $label$383
	$8 = (($20 + [16]) & [-16])
	$5 = CALL $84($8)
	*($27 + [248]) = ($8 | [1])
	*($27 + [256]) = $5
	*($27 + [252]) = $20
	$19 = (($27 + [248]) | [1])
	
.LABEL $label$382
	CALL memcpy($5, [1904], $20)
	
.LABEL $label$381
	*(($5 + $20)) = [0]
	$20 = [1]
	$15 = ($5 & [1])
	$5 = *($27 + [248])
	$5 = ( *($27 + [252]) ? uint_32($5 >> [1]) : $15 )
	if ( ($5 == 0) ){ goto $label$384 }
	$8 = ( *($27 + [268]) ? uint_32($20 >> [1]) : $8 )
	$20 = *($27 + [264])
	$8 = ($20 & [1])
	$18 = ( *($27 + [272]) ? (($27 + [264]) | [1]) : $8 )
	$14 = ($18 + $8)
	$20 = $14
	if ( ((int_32)$8 < (int_32)$5) ){ goto $label$385 }
	$19 = ( *($27 + [256]) ? $19 : $15 )
	$15 = *($19)
	$20 = $18
	
.LOOP $label$387:
	$8 = (($8 - $5) + [1])
	if ( ($8 == 0) ){ goto $label$386 }
	$20 = CALL memchr($20, $15, $8)
	if ( ($20 == 0) ){ goto $label$386 }
	if ( (CALL memcmp($20, $19, $5) == 0) ){ goto $label$385 }
	$20 = ($20 + [1])
	$8 = ($14 - $20)
	if ( ((int_32)$8 >= (int_32)$5) ){ goto $label$387 }
	
.LABEL $label$386
	$20 = $14
	
.LABEL $label$385
	$20 = (((int_32)$20 == (int_32)$18) & ((int_32)$20 != (int_32)$14))
	
.LABEL $label$384
	CALL eosio_assert($20, [2608])
	if ( ((*($27 + [248]) & [1]) == 0) ){ goto $label$388 }
	CALL $85(*(($27 + [256])))
	
.LABEL $label$388
	if ( ((*($27 + [264]) & [1]) == 0) ){ goto $label$371 }
	CALL $85(*(($27 + [272])))
	
.LABEL $label$371
	if ( ((*($27 + [280]) & [1]) == 0) ){ goto $label$389 }
	CALL $85(*(($27 + [288])))
	
.LABEL $label$389
	if ( ((*($27 + [296]) & [1]) == 0) ){ goto $label$370 }
	CALL $85(*(($27 + [304])))
	
.LABEL $label$370
	$20 = *($4)
	$5 = CALL strlen([2032])
	if ( ((int_32)$5 != (int_32)( *(($4 + [4])) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$390 }
	if ( CALL $93($4, [0], [-1], [2032], $5) ){ goto $label$390 }
	*(($27 + [544])) = [0]
	*($27 + [528]) = (int_64)-1
	$22 = (int_64)0
	*($27 + [536]) = (int_64)0
	$25 = *($0)
	*($27 + [512]) = $25
	*($27 + [520]) = $25
	$24 = (int_64)59
	$20 = [2656]
	$23 = (int_64)0
	
.LOOP $label$391:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$392 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$394 }
	$5 = ($5 + [165])
	goto $label$393 
	
.LABEL $label$394
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$393
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$392
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$391 }
	$20 = CALL db_find_i64($25, $25, (int_64)-7954134735498772480, $23)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$395 }
	$20 = CALL $44(($27 + [512]), $20)
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)($27 + [512])), [944])
	CALL eosio_assert((int_64)(*($20 + [8]) == 0), [1152])
	
.LABEL $label$395
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [128]
	$23 = (int_64)0
	
.LOOP $label$396:
	if ( ((uint_64)$22 > (uint_64)(int_64)10) ){ goto $label$401 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$400 }
	$5 = ($5 + [165])
	goto $label$399 
	
.LABEL $label$401
	$24 = (int_64)0
	if ( ((int_64)$22 == (int_64)11) ){ goto $label$398 }
	goto $label$397 
	
.LABEL $label$400
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$399
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$398
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$397
	$20 = ($20 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$23 = ((int_64)$24 | (int_64)$23)
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((int_64)$22 != (int_64)13) ){ goto $label$396 }
	$22 = *($0)
	*(($27 + [48])) = [0]
	*($27 + [24]) = $22
	*($27 + [16]) = $23
	*($27 + [32]) = (int_64)-1
	$22 = (int_64)0
	*($27 + [40]) = (int_64)0
	$9 = *(CALL $66(($27 + [16]), (int_64)5459781, [2000]))
	$8 = *($27 + [40])
	if ( ($8 == 0) ){ goto $label$402 }
	$14 = ($27 + [44])
	$20 = *($14)
	if ( ((int_32)$20 == (int_32)$8) ){ goto $label$404 }
	
.LOOP $label$405:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$406 }
	CALL $85($5)
	
.LABEL $label$406
	if ( ((int_32)$8 != (int_32)$20) ){ goto $label$405 }
	$20 = *(($27 + [40]))
	goto $label$403 
	
.LABEL $label$404
	$20 = $8
	
.LABEL $label$403
	*($14) = $8
	CALL $85($20)
	
.LABEL $label$402
	$6 = *($0)
	$24 = (int_64)59
	$20 = [384]
	$23 = (int_64)0
	
.LOOP $label$407:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$408 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$410 }
	$5 = ($5 + [165])
	goto $label$409 
	
.LABEL $label$410
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$409
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$408
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$407 }
	*(($27 + [48])) = [0]
	*($27 + [24]) = $23
	*($27 + [16]) = $6
	*($27 + [32]) = (int_64)-1
	$22 = (int_64)0
	*($27 + [40]) = (int_64)0
	$24 = (int_64)59
	$20 = [384]
	$25 = (int_64)0
	
.LOOP $label$411:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$412 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$414 }
	$5 = ($5 + [165])
	goto $label$413 
	
.LABEL $label$414
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$413
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$412
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$25 = ((int_64)$21 | (int_64)$25)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$411 }
	$20 = CALL db_find_i64($6, $23, (int_64)-4996854170817396736, $25)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$416 }
	$20 = CALL $62(($27 + [16]), $20)
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)($27 + [16])), [944])
	$22 = *($20 + [8])
	goto $label$415 
	
.LABEL $label$416
	$22 = (int_64)1000000
	
.LABEL $label$415
	$24 = *($3)
	CALL eosio_assert(((uint_64)((int_64)$24 + (int_64)$9) <= (uint_64)$22), [2672])
	CALL eosio_assert(((int_64)$24 > (int_64)19999999), [2704])
	*(($27 + [472])) = [0]
	*($27 + [456]) = (int_64)-1
	*($27 + [464]) = (int_64)0
	$22 = *($0)
	*($27 + [440]) = $22
	*($27 + [448]) = $1
	*($27 + [476]) = [0]
	$20 = CALL db_find_i64($22, $1, (int_64)5380477996647841792, $1)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$418 }
	$5 = CALL $45(($27 + [440]), $20)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($27 + [440])), [944])
	$14 = ($27 + [224])
	$15 = (($27 + [208]) | [8])
	$20 = ($27 + [208])
	goto $label$417 
	
.LABEL $label$418
	$21 = *($0)
	CALL eosio_assert(((int_64)*($27 + [440]) == (int_64)CALL $fimport$3()), [1728])
	*(($5 = CALL $84([40])) + [16]) = (int_64)1397703940
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [144])
	$19 = ($5 + [16])
	$14 = ($5 + [8])
	$22 = (int_64)5459781
	$20 = [0]
	
.LOOP $label$421:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$420 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$422 }
	
.LOOP $label$423:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$420 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$423 }
	
.LABEL $label$422
	$8 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$421 }
	goto $label$419 
	
.LABEL $label$420
	$8 = [0]
	
.LABEL $label$419
	CALL eosio_assert($8, [208])
	*($5 + [24]) = ($27 + [440])
	*($5) = $1
	CALL eosio_assert([1], [320])
	CALL memcpy(($27 + [208]), $5, [8])
	CALL eosio_assert([1], [320])
	$15 = (($27 + [208]) | [8])
	CALL memcpy($15, $14, [8])
	CALL eosio_assert([1], [320])
	$14 = (($27 + [208]) + [16])
	CALL memcpy($14, $19, [8])
	$22 = *($5)
	$20 = (($27 + [440]) + [8])
	*($5 + [28]) = CALL db_store_i64(*($20), (int_64)5380477996647841792, $21, $22, ($27 + [208]), [24])
	$8 = (($27 + [440]) + [16])
	if ( (uint_64)($22 <= *($8)) ){ goto $label$424 }
	*($8) = ( (int_64)-2 ? ((int_64)$22 + (int_64)1) : ((uint_64)$22 > (uint_64)(int_64)-3) )
	
.LABEL $label$424
	$22 = *($20)
	$23 = *($5)
	*($27 + [112]) = $23
	*($5 + [32]) = CALL db_idx64_store($22, (int_64)5380477996647841792, $21, $23, ($27 + [112]))
	*($27 + [112]) = $5
	$22 = *($5)
	*($27 + [208]) = $22
	$8 = *(($5 + [28]))
	*($27 + [96]) = $8
	$19 = (($27 + [440]) + [28])
	$20 = *($19)
	if ( ((uint_32)$20 >= (uint_32)*(($27 + [472]))) ){ goto $label$426 }
	*($20 + [8]) = $22
	*($20 + [16]) = $8
	*($27 + [112]) = [0]
	*($20) = $5
	*($19) = ($20 + [24])
	goto $label$425 
	
.LABEL $label$426
	CALL $57(($27 + [464]), ($27 + [112]), ($27 + [208]), ($27 + [96]))
	
.LABEL $label$425
	$20 = *($27 + [112])
	*($27 + [112]) = [0]
	if ( ($20 == 0) ){ goto $label$427 }
	CALL $85($20)
	
.LABEL $label$427
	$20 = ($27 + [208])
	
.LABEL $label$417
	$21 = *($0)
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1296])
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($27 + [440])), [1344])
	CALL eosio_assert(((int_64)*($27 + [440]) == (int_64)CALL $fimport$3()), [1392])
	$22 = *($5)
	*($27 + [656]) = $22
	$8 = ($5 + [16])
	CALL eosio_assert(((int_64)*(($3 + [8])) == (int_64)*($8)), [1792])
	$24 = ((int_64)*($5 + [8]) + (int_64)$24)
	*($5 + [8]) = $24
	CALL eosio_assert(((int_64)$24 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($5 + [8]) < (int_64)4611686018427387904), [1872])
	CALL eosio_assert(((int_64)$22 == (int_64)*($5)), [1568])
	CALL eosio_assert([1], [320])
	CALL memcpy($20, $5, [8])
	CALL eosio_assert([1], [320])
	CALL memcpy($15, ($5 + [8]), [8])
	CALL eosio_assert([1], [320])
	CALL memcpy($14, $8, [8])
	CALL db_update_i64(*($5 + [28]), $21, $20, [24])
	$20 = (($27 + [440]) + [16])
	if ( (uint_64)($22 <= *($20)) ){ goto $label$428 }
	*($20) = ( (int_64)-2 ? ((int_64)$22 + (int_64)1) : ((uint_64)$22 > (uint_64)(int_64)-3) )
	
.LABEL $label$428
	*($27 + [112]) = *($5)
	if ( (CALL memcmp(($27 + [656]), ($27 + [112]), [8]) == 0) ){ goto $label$429 }
	$5 = ($5 + [32])
	$20 = *($5)
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$430 }
	$20 = CALL db_idx64_find_primary(*($27 + [440]), *(($27 + [448])), (int_64)5380477996647841792, ($27 + [96]), $22)
	*($5) = $20
	
.LABEL $label$430
	CALL db_idx64_update($20, $21, ($27 + [112]))
	
.LABEL $label$429
	*(($27 + [240])) = [0]
	*($27 + [224]) = (int_64)-1
	*($27 + [232]) = (int_64)0
	$22 = *($0)
	*($27 + [208]) = $22
	*($27 + [216]) = $22
	$20 = CALL db_find_i64($22, $22, (int_64)5380477996752830464, $1)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$433 }
	CALL eosio_assert(((int_32)*(CALL $46(($27 + [208]), $20) + [8]) == (int_32)($27 + [208])), [944])
	$8 = *($27 + [232])
	if ( $8 ){ goto $label$432 }
	goto $label$431 
	
.LABEL $label$433
	$24 = *($0)
	CALL eosio_assert(((int_64)*($27 + [208]) == (int_64)CALL $fimport$3()), [1728])
	*(($20 = CALL $84([24])) + [8]) = ($27 + [208])
	*($20) = $1
	CALL eosio_assert([1], [320])
	CALL memcpy(($27 + [112]), $20, [8])
	$22 = *($20)
	$8 = CALL db_store_i64(*((($27 + [208]) + [8])), (int_64)5380477996752830464, $24, $22, ($27 + [112]), [8])
	*($20 + [12]) = $8
	$5 = ($27 + [224])
	if ( (uint_64)($22 <= *($5)) ){ goto $label$434 }
	*($5) = ( (int_64)-2 ? ((int_64)$22 + (int_64)1) : ((uint_64)$22 > (uint_64)(int_64)-3) )
	
.LABEL $label$434
	*($27 + [96]) = $20
	$22 = *($20)
	*($27 + [112]) = $22
	*($27 + [656]) = $8
	$14 = ($27 + [236])
	$5 = *($14)
	if ( ((uint_32)$5 >= (uint_32)*(($27 + [240]))) ){ goto $label$436 }
	*($5 + [8]) = $22
	*($5 + [16]) = $8
	*($27 + [96]) = [0]
	*($5) = $20
	*($14) = ($5 + [24])
	goto $label$435 
	
.LABEL $label$436
	CALL $56(($27 + [232]), ($27 + [96]), ($27 + [112]), ($27 + [656]))
	
.LABEL $label$435
	$20 = *($27 + [96])
	*($27 + [96]) = [0]
	if ( ($20 == 0) ){ goto $label$437 }
	CALL $85($20)
	
.LABEL $label$437
	$8 = *($27 + [232])
	if ( ($8 == 0) ){ goto $label$431 }
	
.LABEL $label$432
	$14 = ($27 + [236])
	$20 = *($14)
	if ( ((int_32)$20 == (int_32)$8) ){ goto $label$439 }
	
.LOOP $label$440:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$441 }
	CALL $85($5)
	
.LABEL $label$441
	if ( ((int_32)$8 != (int_32)$20) ){ goto $label$440 }
	$20 = *(($27 + [232]))
	goto $label$438 
	
.LABEL $label$439
	$20 = $8
	
.LABEL $label$438
	*($14) = $8
	CALL $85($20)
	
.LABEL $label$431
	$8 = *($27 + [464])
	if ( ($8 == 0) ){ goto $label$442 }
	$14 = ($27 + [468])
	$20 = *($14)
	if ( ((int_32)$20 == (int_32)$8) ){ goto $label$444 }
	
.LOOP $label$445:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$446 }
	CALL $85($5)
	
.LABEL $label$446
	if ( ((int_32)$8 != (int_32)$20) ){ goto $label$445 }
	$20 = *(($27 + [464]))
	goto $label$443 
	
.LABEL $label$444
	$20 = $8
	
.LABEL $label$443
	*($14) = $8
	CALL $85($20)
	
.LABEL $label$442
	$8 = *($27 + [40])
	if ( ($8 == 0) ){ goto $label$447 }
	$14 = ($27 + [44])
	$20 = *($14)
	if ( ((int_32)$20 == (int_32)$8) ){ goto $label$449 }
	
.LOOP $label$450:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$451 }
	CALL $85($5)
	
.LABEL $label$451
	if ( ((int_32)$8 != (int_32)$20) ){ goto $label$450 }
	$20 = *(($27 + [40]))
	goto $label$448 
	
.LABEL $label$449
	$20 = $8
	
.LABEL $label$448
	*($14) = $8
	CALL $85($20)
	
.LABEL $label$447
	$8 = *($27 + [536])
	if ( ($8 == 0) ){ goto $label$390 }
	$14 = ($27 + [540])
	$20 = *($14)
	if ( ((int_32)$20 == (int_32)$8) ){ goto $label$453 }
	
.LOOP $label$454:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$455 }
	CALL $85($5)
	
.LABEL $label$455
	if ( ((int_32)$8 != (int_32)$20) ){ goto $label$454 }
	$20 = *(($27 + [536]))
	goto $label$452 
	
.LABEL $label$453
	$20 = $8
	
.LABEL $label$452
	*($14) = $8
	CALL $85($20)
	
.LABEL $label$390
	CALL $100(($27 + [192]), $4)
	*(($27 + [184])) = [0]
	*($27 + [176]) = (int_64)0
	$20 = CALL strlen([2256])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$458 }
	*($27 + [176]) = ($20 << [1])
	$19 = (($27 + [176]) | [1])
	$5 = $19
	if ( $20 ){ goto $label$457 }
	goto $label$456 
	
.LABEL $label$458
	$8 = (($20 + [16]) & [-16])
	$5 = CALL $84($8)
	*($27 + [176]) = ($8 | [1])
	*($27 + [184]) = $5
	*($27 + [180]) = $20
	$19 = (($27 + [176]) | [1])
	
.LABEL $label$457
	CALL memcpy($5, [2256], $20)
	
.LABEL $label$456
	*(($5 + $20)) = [0]
	$16 = ($15 & [1])
	$15 = *($27 + [176])
	$5 = ( *($27 + [180]) ? uint_32($15 >> [1]) : $16 )
	if ( ($5 == 0) ){ goto $label$461 }
	$8 = ( *($27 + [196]) ? uint_32($20 >> [1]) : $8 )
	$20 = *($27 + [192])
	$8 = ($20 & [1])
	$18 = ( *($27 + [200]) ? (($27 + [192]) | [1]) : $8 )
	$14 = ($18 + $8)
	$20 = $14
	if ( ((int_32)$8 < (int_32)$5) ){ goto $label$462 }
	$19 = ( *($27 + [184]) ? $19 : $16 )
	$15 = *($19)
	$20 = $18
	
.LOOP $label$465:
	$8 = (($8 - $5) + [1])
	if ( ($8 == 0) ){ goto $label$464 }
	$20 = CALL memchr($20, $15, $8)
	if ( ($20 == 0) ){ goto $label$464 }
	if ( (CALL memcmp($20, $19, $5) == 0) ){ goto $label$463 }
	$20 = ($20 + [1])
	$8 = ($14 - $20)
	if ( ((int_32)$8 >= (int_32)$5) ){ goto $label$465 }
	
.LABEL $label$464
	$20 = $14
	
.LABEL $label$463
	$15 = *($27 + [176])
	
.LABEL $label$462
	$20 = (((int_32)$20 == (int_32)$18) & ((int_32)$20 != (int_32)$14))
	if ( ($15 & [1]) ){ goto $label$460 }
	goto $label$459 
	
.LABEL $label$461
	$20 = [1]
	if ( (($15 & [1]) == 0) ){ goto $label$459 }
	
.LABEL $label$460
	CALL $85(*(($27 + [184])))
	
.LABEL $label$459
	if ( ((*($27 + [192]) & [1]) == 0) ){ goto $label$466 }
	CALL $85(*(($27 + [200])))
	
.LABEL $label$466
	if ( ($20 == 0) ){ goto $label$61 }
	$20 = *($4)
	if ( ($20 & [1]) ){ goto $label$468 }
	$5 = uint_32($20 >> [1])
	$20 = ($4 + [1])
	goto $label$467 
	
.LABEL $label$468
	$5 = *(($4 + [4]))
	$20 = *($4 + [8])
	
.LABEL $label$467
	$5 = ($20 + $5)
	if ( ((int_32)$20 == (int_32)$5) ){ goto $label$469 }
	
.LOOP $label$470:
	if ( ((int_32)*($20) != (int_32)[45]) ){ goto $label$471 }
	*($20) = [32]
	
.LABEL $label$471
	$20 = ($20 + [1])
	if ( ((int_32)$5 != (int_32)$20) ){ goto $label$470 }
	
.LABEL $label$469
	*(($27 + [24])) = [0]
	*($27 + [16]) = (int_64)0
	$20 = CALL strlen([2272])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$474 }
	*($27 + [16]) = ($20 << [1])
	$5 = (($27 + [16]) | [1])
	if ( $20 ){ goto $label$473 }
	goto $label$472 
	
.LABEL $label$474
	$8 = (($20 + [16]) & [-16])
	$5 = CALL $84($8)
	*($27 + [16]) = ($8 | [1])
	*($27 + [24]) = $5
	*($27 + [20]) = $20
	
.LABEL $label$473
	CALL memcpy($5, [2272], $20)
	
.LABEL $label$472
	*(($5 + $20)) = [0]
	CALL _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_(($27 + [552]), $4, ($27 + [16]))
	if ( ((*($27 + [16]) & [1]) == 0) ){ goto $label$475 }
	CALL $85(*($27 + [24]))
	
.LABEL $label$475
	CALL $100(($27 + [496]), (*($27 + [552]) + [12]))
	*(($27 + [168])) = [0]
	*($27 + [160]) = (int_64)0
	$20 = CALL strlen([2736])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$478 }
	*($27 + [160]) = ($20 << [1])
	$4 = (($27 + [160]) | [1])
	$5 = $4
	if ( $20 ){ goto $label$477 }
	goto $label$476 
	
.LABEL $label$478
	$4 = (($20 + [16]) & [-16])
	$5 = CALL $84($4)
	*($27 + [160]) = ($4 | [1])
	*($27 + [168]) = $5
	*($27 + [164]) = $20
	$4 = (($27 + [160]) | [1])
	
.LABEL $label$477
	CALL memcpy($5, [2736], $20)
	
.LABEL $label$476
	*(($5 + $20)) = [0]
	$20 = ( *($27 + [168]) ? $4 : (*($27 + [160]) & [1]) )
	$5 = [-1]
	
.LOOP $label$479:
	$4 = ($20 + $5)
	$8 = ($5 + [1])
	$5 = $8
	if ( *(($4 + [1])) ){ goto $label$479 }
	$25 = (CASTING uint_64)(uint_32 $8)
	$22 = (int_64)0
	$24 = (int_64)59
	$23 = (int_64)0
	
.LOOP $label$480:
	$21 = (int_64)0
	if ( ((uint_64)$22 >= (uint_64)$25) ){ goto $label$481 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$483 }
	$5 = ($5 + [165])
	goto $label$482 
	
.LABEL $label$483
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$482
	$21 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$481
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$485 }
	$21 = ((int_64)((int_64)$21 & (int_64)31) << (int_64)((int_64)$24 & (int_64)4294967295))
	goto $label$484 
	
.LABEL $label$485
	$21 = ((int_64)$21 & (int_64)15)
	
.LABEL $label$484
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$480 }
	$9 = *($3)
	CALL eosio_assert(((int_64)$9 >= (int_64)( (int_64)50 ? (int_64)100 : ((int_64)$23 == (int_64)$1) )), [2752])
	$20 = [1]
	$5 = *($27 + [496])
	$4 = CALL strlen([2448])
	if ( ((int_32)$4 != (int_32)( *($27 + [500]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$487 }
	if ( (CALL $93(($27 + [496]), [0], [-1], [2448], $4) == 0) ){ goto $label$486 }
	
.LABEL $label$487
	$20 = *($27 + [496])
	$5 = CALL strlen([2496])
	if ( ((int_32)$5 != (int_32)( *($27 + [500]) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$489 }
	if ( (CALL $93(($27 + [496]), [0], [-1], [2496], $5) == 0) ){ goto $label$488 }
	
.LABEL $label$489
	$20 = [0]
	$5 = *($27 + [496])
	$4 = CALL strlen([2512])
	if ( ((int_32)$4 != (int_32)( *($27 + [500]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$486 }
	$20 = (CALL $93(($27 + [496]), [0], [-1], [2512], $4) == 0)
	goto $label$486 
	
.LABEL $label$488
	$20 = [1]
	
.LABEL $label$486
	CALL eosio_assert($20, [2784])
	*($27 + [156]) = [86400]
	$6 = *($0)
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [336]
	$23 = (int_64)0
	
.LOOP $label$490:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$491 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$493 }
	$5 = ($5 + [165])
	goto $label$492 
	
.LABEL $label$493
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$492
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$491
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$490 }
	*(($27 + [544])) = [0]
	*($27 + [520]) = $23
	*($27 + [512]) = $6
	*($27 + [528]) = (int_64)-1
	$22 = (int_64)0
	*($27 + [536]) = (int_64)0
	$24 = (int_64)59
	$20 = [336]
	$25 = (int_64)0
	
.LOOP $label$494:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$495 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$497 }
	$5 = ($5 + [165])
	goto $label$496 
	
.LABEL $label$497
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$496
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$495
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$25 = ((int_64)$21 | (int_64)$25)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$494 }
	$20 = CALL $62(($27 + [512]), CALL $fimport$6($6, $23, (int_64)-4996854170817396736, $25))
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)($27 + [512])), [944])
	$22 = *($20 + [8])
	$20 = *($27 + [496])
	$5 = CALL strlen([2496])
	if ( ((int_32)$5 != (int_32)( *($27 + [500]) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$503 }
	if ( (CALL $93(($27 + [496]), [0], [-1], [2496], $5) == 0) ){ goto $label$502 }
	
.LABEL $label$503
	$26 = (CASTING float_32)(int_64 $9)
	$13 = ((float_32)((float_32)$26 / (float_32)((float_32)((float_32)(CASTING float_32)(uint_64 $22) / (float_32)(float_32)100) / (float_32)(float_32)365)) * (float_32)(float_32)0.25)
	$20 = *($27 + [496])
	$5 = CALL strlen([2512])
	if ( ((int_32)$5 != (int_32)( *($27 + [500]) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$498 }
	if ( CALL $93(($27 + [496]), [0], [-1], [2512], $5) ){ goto $label$498 }
	*($27 + [156]) = [604800]
	$6 = *($0)
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [368]
	$23 = (int_64)0
	
.LOOP $label$504:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$505 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$507 }
	$5 = ($5 + [165])
	goto $label$506 
	
.LABEL $label$507
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$506
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$505
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$504 }
	*(($27 + [48])) = [0]
	*($27 + [24]) = $23
	*($27 + [16]) = $6
	*($27 + [32]) = (int_64)-1
	$22 = (int_64)0
	*($27 + [40]) = (int_64)0
	$24 = (int_64)59
	$20 = [368]
	$25 = (int_64)0
	
.LOOP $label$508:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$509 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$511 }
	$5 = ($5 + [165])
	goto $label$510 
	
.LABEL $label$511
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$510
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$509
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$25 = ((int_64)$21 | (int_64)$25)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$508 }
	$20 = CALL $62(($27 + [16]), CALL $fimport$6($6, $23, (int_64)-4996854170817396736, $25))
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)($27 + [16])), [944])
	$26 = ((float_32)$26 / (float_32)((float_32)((float_32)(CASTING float_32)(uint_64 *($20 + [8])) / (float_32)(float_32)100) / (float_32)(float_32)365))
	$4 = *($27 + [40])
	if ( ($4 == 0) ){ goto $label$499 }
	$8 = ($27 + [44])
	$20 = *($8)
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$501 }
	
.LOOP $label$512:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$513 }
	CALL $85($5)
	
.LABEL $label$513
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$512 }
	$20 = *(($27 + [40]))
	goto $label$500 
	
.LABEL $label$502
	*($27 + [156]) = [345600]
	$6 = *($0)
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [352]
	$23 = (int_64)0
	
.LOOP $label$514:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$515 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$517 }
	$5 = ($5 + [165])
	goto $label$516 
	
.LABEL $label$517
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$516
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$515
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$514 }
	*(($27 + [48])) = [0]
	*($27 + [24]) = $23
	*($27 + [16]) = $6
	*($27 + [32]) = (int_64)-1
	$22 = (int_64)0
	*($27 + [40]) = (int_64)0
	$24 = (int_64)59
	$20 = [352]
	$25 = (int_64)0
	
.LOOP $label$518:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$519 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$521 }
	$5 = ($5 + [165])
	goto $label$520 
	
.LABEL $label$521
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$520
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$519
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$25 = ((int_64)$21 | (int_64)$25)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$518 }
	$20 = CALL $62(($27 + [16]), CALL $fimport$6($6, $23, (int_64)-4996854170817396736, $25))
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)($27 + [16])), [944])
	$26 = ((float_32)(CASTING float_32)(int_64 $9) / (float_32)((float_32)((float_32)(CASTING float_32)(uint_64 *($20 + [8])) / (float_32)(float_32)100) / (float_32)(float_32)365))
	$4 = *($27 + [40])
	if ( ($4 == 0) ){ goto $label$522 }
	$8 = ($27 + [44])
	$20 = *($8)
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$524 }
	
.LOOP $label$525:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$526 }
	CALL $85($5)
	
.LABEL $label$526
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$525 }
	$20 = *(($27 + [40]))
	goto $label$523 
	
.LABEL $label$524
	$20 = $4
	
.LABEL $label$523
	*($8) = $4
	CALL $85($20)
	
.LABEL $label$522
	$13 = ((float_32)$26 / (float_32)(float_32)7)
	goto $label$498 
	
.LABEL $label$501
	$20 = $4
	
.LABEL $label$500
	*($8) = $4
	CALL $85($20)
	
.LABEL $label$499
	$13 = ((float_32)$26 / (float_32)(float_32)10)
	
.LABEL $label$498
	CALL eosio_assert([1], [144])
	$22 = (int_64)5459781
	$20 = [0]
	
.LOOP $label$529:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$528 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$530 }
	
.LOOP $label$531:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$528 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$531 }
	
.LABEL $label$530
	$5 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$529 }
	goto $label$527 
	
.LABEL $label$528
	$5 = [0]
	
.LABEL $label$527
	CALL eosio_assert($5, [208])
	*((($27 + [440]) + [32])) = [0]
	*($27 + [456]) = (int_64)-1
	*($27 + [464]) = (int_64)0
	$24 = *($0)
	*($27 + [440]) = $24
	*($27 + [448]) = $24
	$22 = (int_64)0
	$20 = CALL db_lowerbound_i64($24, $24, (int_64)5380477996752830464, (int_64)0)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$532 }
	$8 = CALL $46(($27 + [440]), $20)
	$22 = (int_64)0
	$19 = ($27 + [24])
	$18 = (($27 + [16]) + [16])
	$14 = ($27 + [40])
	$15 = ($27 + [44])
	$16 = (($27 + [16]) + [32])
	$17 = ($27 + [52])
	
.LOOP $label$533:
	$24 = *($8)
	*($19) = $24
	*($18) = (int_64)-1
	$20 = [0]
	*($14) = [0]
	$21 = *($0)
	*($27 + [16]) = $21
	*($15) = [0]
	*($16) = [0]
	*($17) = [0]
	$5 = CALL db_find_i64($21, $24, (int_64)5380477996647841792, *($8))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$534 }
	$20 = CALL $45(($27 + [16]), $5)
	CALL eosio_assert(((int_32)*($20 + [24]) == (int_32)($27 + [16])), [944])
	
.LABEL $label$534
	CALL eosio_assert(((int_64)*(($20 + [16])) == (int_64)1397703940), [1792])
	$22 = ((int_64)*($20 + [8]) + (int_64)$22)
	CALL eosio_assert(((int_64)$22 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)$22 < (int_64)4611686018427387904), [1872])
	$4 = *($14)
	if ( ($4 == 0) ){ goto $label$535 }
	$20 = *($15)
	if ( ((int_32)$20 != (int_32)$4) ){ goto $label$537 }
	$20 = $4
	goto $label$536 
	
.LABEL $label$537
	
.LOOP $label$538:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$539 }
	CALL $85($5)
	
.LABEL $label$539
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$538 }
	$20 = *($14)
	
.LABEL $label$536
	*($15) = $4
	CALL $85($20)
	
.LABEL $label$535
	CALL eosio_assert([1], [704])
	$20 = CALL db_next_i64(*($8 + [12]), ($27 + [16]))
	if ( ((int_32)$20 <= (int_32)[-1]) ){ goto $label$532 }
	$8 = CALL $46(($27 + [440]), $20)
	goto $label$533 
	
.LABEL $label$532
	$20 = CALL db_lowerbound_i64(*($27 + [440]), *((($27 + [440]) + [8])), (int_64)5380477996752830464, (int_64)0)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$540 }
	$12 = (($27 + [208]) + [16])
	$11 = (($27 + [208]) | [8])
	$26 = (CASTING float_32)(int_64 $22)
	$8 = CALL $46(($27 + [440]), $20)
	$14 = (($27 + [16]) + [24])
	$15 = ($27 + [44])
	$16 = (($27 + [16]) + [32])
	$17 = ($27 + [52])
	
.LOOP $label$541:
	$22 = *($8)
	*(($18 = (($27 + [16]) + [8]))) = $22
	*(($19 = (($27 + [16]) + [16]))) = (int_64)-1
	*($14) = [0]
	$24 = *($0)
	*($27 + [16]) = $24
	*($15) = [0]
	*($16) = [0]
	*($17) = [0]
	$20 = CALL db_find_i64($24, $22, (int_64)5380477996647841792, *($8))
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$542 }
	$5 = CALL $45(($27 + [16]), $20)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($27 + [16])), [944])
	$21 = (Rounds 0)((DEMOTE float_32)(float_64 ((float_64)((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($3))) * (float_64)(float_64)0.6) * (float_64)(PROMOTE float_64)(float_32 ((float_32)(CASTING float_32)(int_64 *($5 + [8])) / (float_32)$26)))))
	CALL eosio_assert((uint_64)(((int_64)$21 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [144])
	$22 = (int_64)5459781
	$20 = [0]
	
.LOOP $label$545:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$544 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$546 }
	
.LOOP $label$547:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$544 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$547 }
	
.LABEL $label$546
	$4 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$545 }
	goto $label$543 
	
.LABEL $label$544
	$4 = [0]
	
.LABEL $label$543
	CALL eosio_assert($4, [208])
	$24 = *($0)
	CALL eosio_assert([1], [1296])
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($27 + [16])), [1344])
	CALL eosio_assert(((int_64)*($27 + [16]) == (int_64)CALL $fimport$3()), [1392])
	$22 = *($5)
	*($27 + [656]) = $22
	$20 = ($5 + [16])
	CALL eosio_assert(((int_64)*($20) == (int_64)1397703940), [1792])
	$21 = ((int_64)*($5 + [8]) + (int_64)$21)
	*($5 + [8]) = $21
	CALL eosio_assert(((int_64)$21 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($5 + [8]) < (int_64)4611686018427387904), [1872])
	CALL eosio_assert(((int_64)$22 == (int_64)*($5)), [1568])
	CALL eosio_assert([1], [320])
	CALL memcpy(($27 + [208]), $5, [8])
	CALL eosio_assert([1], [320])
	CALL memcpy($11, ($5 + [8]), [8])
	CALL eosio_assert([1], [320])
	CALL memcpy($12, $20, [8])
	CALL db_update_i64(*($5 + [28]), $24, ($27 + [208]), [24])
	if ( (uint_64)($22 <= *($19)) ){ goto $label$548 }
	*($19) = ( (int_64)-2 ? ((int_64)$22 + (int_64)1) : ((uint_64)$22 > (uint_64)(int_64)-3) )
	
.LABEL $label$548
	*($27 + [112]) = *($5)
	if ( (CALL memcmp(($27 + [656]), ($27 + [112]), [8]) == 0) ){ goto $label$542 }
	$5 = ($5 + [32])
	$20 = *($5)
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$549 }
	$20 = CALL db_idx64_find_primary(*($27 + [16]), *($18), (int_64)5380477996647841792, ($27 + [96]), $22)
	*($5) = $20
	
.LABEL $label$549
	CALL db_idx64_update($20, $24, ($27 + [112]))
	
.LABEL $label$542
	$4 = *($14)
	if ( ($4 == 0) ){ goto $label$550 }
	$20 = *($15)
	if ( ((int_32)$20 != (int_32)$4) ){ goto $label$552 }
	$20 = $4
	goto $label$551 
	
.LABEL $label$552
	
.LOOP $label$553:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$554 }
	CALL $85($5)
	
.LABEL $label$554
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$553 }
	$20 = *($14)
	
.LABEL $label$551
	*($15) = $4
	CALL $85($20)
	
.LABEL $label$550
	CALL eosio_assert([1], [704])
	$20 = CALL db_next_i64(*($8 + [12]), ($27 + [16]))
	if ( ((int_32)$20 <= (int_32)[-1]) ){ goto $label$540 }
	$8 = CALL $46(($27 + [440]), $20)
	goto $label$541 
	
.LABEL $label$540
	$3 = (CASTING int_32)(float_32 $13)
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [2816]
	$23 = (int_64)0
	
.LOOP $label$555:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$556 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$558 }
	$5 = ($5 + [165])
	goto $label$557 
	
.LABEL $label$558
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$557
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$556
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$555 }
	if ( ((int_64)$23 == (int_64)$1) ){ goto $label$560 }
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [2832]
	$23 = (int_64)0
	
.LOOP $label$561:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$562 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$564 }
	$5 = ($5 + [165])
	goto $label$563 
	
.LABEL $label$564
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$563
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$562
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$561 }
	if ( ((int_64)$23 != (int_64)$1) ){ goto $label$559 }
	
.LABEL $label$560
	$3 = (CASTING int_32)(float_64 ((float_64)(PROMOTE float_64)(float_32 $13) * (float_64)(float_64)1.05))
	
.LABEL $label$559
	*($27 + [144]) = $1
	*($27 + [136]) = CALL _ZN12eosiocpubank9getrentalEv($0)
	$20 = *($27 + [552])
	if ( (((int_32)(*($27 + [556]) - $20) / (int_32)[12]) <= [3]) ){ goto $label$565 }
	CALL $100(($27 + [16]), ($20 + [24]))
	$20 = *($27 + [16])
	CALL eosio_assert(((int_32)( *($27 + [20]) ? uint_32($20 >> [1]) : ($20 & [1]) ) == (int_32)[12]), [2848])
	$14 = (*($27 + [16]) & [1])
	$15 = *($27 + [24])
	$20 = ( $15 ? (($27 + [16]) | [1]) : $14 )
	$5 = [-1]
	
.LOOP $label$566:
	$4 = ($20 + $5)
	$8 = ($5 + [1])
	$5 = $8
	if ( *(($4 + [1])) ){ goto $label$566 }
	$25 = (CASTING uint_64)(uint_32 $8)
	$22 = (int_64)0
	$24 = (int_64)59
	$23 = (int_64)0
	
.LOOP $label$567:
	$21 = (int_64)0
	if ( ((uint_64)$22 >= (uint_64)$25) ){ goto $label$568 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$570 }
	$5 = ($5 + [165])
	goto $label$569 
	
.LABEL $label$570
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$569
	$21 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$568
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$572 }
	$21 = ((int_64)((int_64)$21 & (int_64)31) << (int_64)((int_64)$24 & (int_64)4294967295))
	goto $label$571 
	
.LABEL $label$572
	$21 = ((int_64)$21 & (int_64)15)
	
.LABEL $label$571
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$567 }
	*($27 + [144]) = $23
	if ( ($14 == 0) ){ goto $label$565 }
	CALL $85($15)
	
.LABEL $label$565
	CALL eosio_assert([1], [144])
	$22 = (int_64)5459781
	$20 = [0]
	
.LOOP $label$575:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$574 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$576 }
	
.LOOP $label$577:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$574 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$577 }
	
.LABEL $label$576
	$5 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$575 }
	goto $label$573 
	
.LABEL $label$574
	$5 = [0]
	
.LABEL $label$573
	CALL eosio_assert($5, [208])
	*($27 + [120]) = (int_64)1397703940
	$22 = (CASTING int_64)(int_32 $3)
	*($27 + [112]) = $22
	CALL eosio_assert((uint_64)(((int_64)$22 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [144])
	$22 = (uint_64)*($27 + [120]) >> (uint_64)(int_64)8)
	$20 = [0]
	
.LOOP $label$580:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$579 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$581 }
	
.LOOP $label$582:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$579 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$582 }
	
.LABEL $label$581
	$5 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$580 }
	goto $label$578 
	
.LABEL $label$579
	$5 = [0]
	
.LABEL $label$578
	CALL eosio_assert($5, [208])
	$22 = (int_64)0
	if ( ((int_64)*($27 + [136]) == (int_64)0) ){ goto $label$587 }
	$25 = *($0)
	$21 = (int_64)59
	$20 = [288]
	$23 = (int_64)0
	
.LOOP $label$588:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$593 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$592 }
	$5 = ($5 + [165])
	goto $label$591 
	
.LABEL $label$593
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$590 }
	goto $label$589 
	
.LABEL $label$592
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$591
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$590
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$589
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$588 }
	*($27 + [104]) = $23
	*($27 + [96]) = $25
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [128]
	$23 = (int_64)0
	
.LOOP $label$594:
	if ( ((uint_64)$22 > (uint_64)(int_64)10) ){ goto $label$599 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$598 }
	$5 = ($5 + [165])
	goto $label$597 
	
.LABEL $label$599
	$24 = (int_64)0
	if ( ((int_64)$22 == (int_64)11) ){ goto $label$596 }
	goto $label$595 
	
.LABEL $label$598
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$597
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$596
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$595
	$20 = ($20 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$23 = ((int_64)$24 | (int_64)$23)
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((int_64)$22 != (int_64)13) ){ goto $label$594 }
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [112]
	$25 = (int_64)0
	
.LOOP $label$600:
	if ( ((uint_64)$22 > (uint_64)(int_64)7) ){ goto $label$605 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$604 }
	$5 = ($5 + [165])
	goto $label$603 
	
.LABEL $label$605
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$602 }
	goto $label$601 
	
.LABEL $label$604
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$603
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$602
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$601
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$25 = ((int_64)$24 | (int_64)$25)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$600 }
	*(($27 + [88])) = [0]
	*($27 + [80]) = (int_64)0
	$20 = CALL strlen([2224])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$586 }
	*($27 + [80]) = ($20 << [1])
	$5 = (($27 + [80]) | [1])
	if ( $20 ){ goto $label$585 }
	goto $label$584 
	
.LABEL $label$587
	$6 = *($0)
	*($27 + [136]) = $6
	goto $label$583 
	
.LABEL $label$586
	$4 = (($20 + [16]) & [-16])
	$5 = CALL $84($4)
	*($27 + [80]) = ($4 | [1])
	*($27 + [88]) = $5
	*($27 + [84]) = $20
	
.LABEL $label$585
	CALL memcpy($5, [2224], $20)
	
.LABEL $label$584
	*(($5 + $20)) = [0]
	*(($27 + [36])) = *($27 + [116])
	*($27 + [16]) = *($0)
	*($27 + [24]) = *($27 + [136])
	*(($27 + [44])) = *(($27 + [124]))
	*(($27 + [40])) = *((($27 + [112]) + [8]))
	*($27 + [32]) = *($27 + [112])
	$20 = (($27 + [80]) + [8])
	*(($27 + [56])) = *($20)
	*($27 + [48]) = *($27 + [80])
	*($27 + [80]) = [0]
	*($27 + [84]) = [0]
	*($20) = [0]
	$20 = CALL $29(($27 + [208]), ($27 + [96]), $23, $25, ($27 + [16]))
	CALL $30(($27 + [656]), $20)
	$5 = *($27 + [656])
	CALL send_inline($5, (*($27 + [660]) - $5))
	$5 = *($27 + [656])
	if ( ($5 == 0) ){ goto $label$606 }
	*($27 + [660]) = $5
	CALL $85($5)
	
.LABEL $label$606
	$5 = *($20 + [28])
	if ( ($5 == 0) ){ goto $label$607 }
	*(($20 + [32])) = $5
	CALL $85($5)
	
.LABEL $label$607
	$5 = *($20 + [16])
	if ( ($5 == 0) ){ goto $label$608 }
	*(($20 + [20])) = $5
	CALL $85($5)
	
.LABEL $label$608
	if ( ((*(($27 + [48])) & [1]) == 0) ){ goto $label$609 }
	CALL $85(*(($27 + [56])))
	
.LABEL $label$609
	if ( ((*($27 + [80]) & [1]) == 0) ){ goto $label$610 }
	CALL $85(*(($27 + [88])))
	
.LABEL $label$610
	$6 = *($27 + [136])
	
.LABEL $label$583
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [288]
	$23 = (int_64)0
	
.LOOP $label$611:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$616 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$615 }
	$5 = ($5 + [165])
	goto $label$614 
	
.LABEL $label$616
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$613 }
	goto $label$612 
	
.LABEL $label$615
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$614
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$613
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$612
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$611 }
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [32]
	$25 = (int_64)0
	
.LOOP $label$617:
	if ( ((uint_64)$22 > (uint_64)(int_64)4) ){ goto $label$622 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$621 }
	$5 = ($5 + [165])
	goto $label$620 
	
.LABEL $label$622
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$619 }
	goto $label$618 
	
.LABEL $label$621
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$620
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$619
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$618
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$25 = ((int_64)$24 | (int_64)$25)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$617 }
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [2384]
	$1 = (int_64)0
	
.LOOP $label$623:
	if ( ((uint_64)$22 > (uint_64)(int_64)9) ){ goto $label$628 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$627 }
	$5 = ($5 + [165])
	goto $label$626 
	
.LABEL $label$628
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$625 }
	goto $label$624 
	
.LABEL $label$627
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$626
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$625
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$624
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$1 = ((int_64)$24 | (int_64)$1)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$623 }
	*((($27 + [16]) + [24])) = (int_64)1397703940
	*((($27 + [16]) + [36])) = *($27 + [116])
	*($27 + [16]) = $6
	*($27 + [24]) = *($27 + [144])
	*(($27 + [60])) = *(($27 + [124]))
	*(($27 + [56])) = *(($27 + [120]))
	*($27 + [32]) = (int_64)0
	*($27 + [48]) = *($27 + [112])
	*($27 + [64]) = [0]
	*($27 + [208]) = $25
	*($27 + [216]) = $1
	*($27 + [224]) = [0]
	*(($5 = ($27 + [228]))) = [0]
	*(($4 = (($27 + [208]) + [24]))) = [0]
	*(($20 = CALL $84([16]))) = $6
	*($20 + [8]) = $23
	*(($8 = ($27 + [240]))) = [0]
	$3 = ($20 + [16])
	*($4) = $3
	*($5) = $3
	*($27 + [224]) = $20
	*($27 + [236]) = [0]
	*((($27 + [208]) + [36])) = [0]
	CALL $28(($27 + [236]), [49])
	$20 = *($8)
	$5 = *($27 + [236])
	*($27 + [100]) = $5
	*($27 + [96]) = $5
	*($27 + [104]) = $20
	*($27 + [80]) = ($27 + [96])
	*($27 + [656]) = ($27 + [16])
	CALL $70(($27 + [656]), ($27 + [80]))
	CALL $30(($27 + [96]), ($27 + [208]))
	$20 = *($27 + [96])
	CALL send_inline($20, (*($27 + [100]) - $20))
	$20 = *($27 + [96])
	if ( ($20 == 0) ){ goto $label$629 }
	*($27 + [100]) = $20
	CALL $85($20)
	
.LABEL $label$629
	$20 = *($27 + [236])
	if ( ($20 == 0) ){ goto $label$630 }
	*(($27 + [240])) = $20
	CALL $85($20)
	
.LABEL $label$630
	$20 = *($27 + [224])
	if ( ($20 == 0) ){ goto $label$631 }
	*(($27 + [228])) = $20
	CALL $85($20)
	
.LABEL $label$631
	*(($27 + [240])) = [0]
	*($27 + [224]) = (int_64)-1
	*($27 + [232]) = (int_64)0
	$22 = *($0)
	*($27 + [208]) = $22
	*($27 + [216]) = $22
	*($27 + [244]) = [0]
	*($27 + [20]) = ($27 + [144])
	*($27 + [16]) = ($27 + [208])
	*($27 + [24]) = ($27 + [136])
	*($27 + [28]) = ($27 + [112])
	*($27 + [32]) = ($27 + [156])
	*($27 + [656]) = $22
	CALL eosio_assert(((int_64)$22 == (int_64)CALL $fimport$3()), [1728])
	*($27 + [100]) = ($27 + [16])
	*($27 + [96]) = ($27 + [208])
	*($27 + [104]) = ($27 + [656])
	*(($4 = CALL $84([64])) + [40]) = (int_64)1397703940
	*($4 + [32]) = (int_64)0
	CALL eosio_assert([1], [144])
	$22 = (int_64)5459781
	$20 = [0]
	
.LOOP $label$634:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $22) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$633 }
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$635 }
	
.LOOP $label$636:
	$22 = (uint_64)$22 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$22) & (int_64)255) != (int_64)0) ){ goto $label$633 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$636 }
	
.LABEL $label$635
	$5 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$634 }
	goto $label$632 
	
.LABEL $label$633
	$5 = [0]
	
.LABEL $label$632
	CALL eosio_assert($5, [208])
	*($4 + [48]) = ($27 + [208])
	CALL $72(($27 + [96]), $4)
	*($27 + [80]) = $4
	$22 = *($4)
	*($27 + [96]) = $22
	$5 = *($4 + [52])
	*($27 + [652]) = $5
	$8 = ($27 + [236])
	$20 = *($8)
	if ( ((uint_32)$20 >= (uint_32)*(($27 + [240]))) ){ goto $label$638 }
	*($20 + [8]) = $22
	*($20 + [16]) = $5
	*($27 + [80]) = [0]
	*($20) = $4
	*($8) = ($20 + [24])
	goto $label$637 
	
.LABEL $label$638
	CALL $39(($27 + [232]), ($27 + [80]), ($27 + [96]), ($27 + [652]))
	
.LABEL $label$637
	$20 = *($27 + [80])
	*($27 + [80]) = [0]
	if ( ($20 == 0) ){ goto $label$639 }
	CALL $85($20)
	
.LABEL $label$639
	$22 = CALL current_time()
	*(($27 + [44])) = [0]
	*(($27 + [48])) = [0]
	*($27 + [28]) = [0]
	*($27 + [32]) = [0]
	*($27 + [36]) = [0]
	*($27 + [40]) = [0]
	*($27 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$22 / (uint_64)(int_64)1000000)) + [60])
	*($27 + [52]) = [0]
	*(($27 + [56])) = [0]
	*(($27 + [60])) = [0]
	*($27 + [64]) = [0]
	*(($27 + [68])) = [0]
	*(($27 + [72])) = [0]
	$8 = ($27 + [52])
	$25 = *($0)
	$22 = (int_64)0
	$21 = (int_64)59
	$20 = [288]
	$23 = (int_64)0
	
.LOOP $label$640:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$645 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$644 }
	$5 = ($5 + [165])
	goto $label$643 
	
.LABEL $label$645
	$24 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$642 }
	goto $label$641 
	
.LABEL $label$644
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$643
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$642
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$641
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$24 | (int_64)$23)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$640 }
	*($27 + [104]) = $23
	*($27 + [96]) = $25
	$22 = (int_64)0
	$24 = (int_64)59
	$20 = [2896]
	$23 = (int_64)0
	
.LOOP $label$646:
	$21 = (int_64)0
	if ( ((uint_64)$22 > (uint_64)(int_64)11) ){ goto $label$647 }
	$5 = *($20)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$649 }
	$5 = ($5 + [165])
	goto $label$648 
	
.LABEL $label$649
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$648
	$21 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$647
	$20 = ($20 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$23 = ((int_64)$21 | (int_64)$23)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$646 }
	*($27 + [656]) = $23
	CALL $73($8, ($27 + [96]), $0, ($27 + [656]), $4)
	*(($27 + [36])) = *($27 + [156])
	$22 = CALL current_time()
	*($27 + [104]) = (int_64)0
	*($27 + [96]) = ((int_64)((int_64)((uint_64)$22 / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$2)
	$22 = *($0)
	CALL $50(($27 + [656]), ($27 + [16]))
	$20 = *($27 + [656])
	CALL send_deferred(($27 + [96]), $22, $20, (*($27 + [660]) - $20), [0])
	$20 = *($27 + [656])
	if ( ($20 == 0) ){ goto $label$650 }
	*($27 + [660]) = $20
	CALL $85($20)
	
.LABEL $label$650
	CALL $51(($27 + [16]))
	$4 = *($27 + [232])
	if ( ($4 == 0) ){ goto $label$651 }
	$0 = ($27 + [236])
	$20 = *($0)
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$653 }
	
.LOOP $label$654:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$655 }
	CALL $85($5)
	
.LABEL $label$655
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$654 }
	$20 = *(($27 + [232]))
	goto $label$652 
	
.LABEL $label$653
	$20 = $4
	
.LABEL $label$652
	*($0) = $4
	CALL $85($20)
	
.LABEL $label$651
	$4 = *($27 + [464])
	if ( ($4 == 0) ){ goto $label$656 }
	$0 = ($27 + [468])
	$20 = *($0)
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$658 }
	
.LOOP $label$659:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$660 }
	CALL $85($5)
	
.LABEL $label$660
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$659 }
	$20 = *(($27 + [464]))
	goto $label$657 
	
.LABEL $label$658
	$20 = $4
	
.LABEL $label$657
	*($0) = $4
	CALL $85($20)
	
.LABEL $label$656
	$4 = *($27 + [536])
	if ( ($4 == 0) ){ goto $label$661 }
	$0 = ($27 + [540])
	$20 = *($0)
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$663 }
	
.LOOP $label$664:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$665 }
	CALL $85($5)
	
.LABEL $label$665
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$664 }
	$20 = *(($27 + [536]))
	goto $label$662 
	
.LABEL $label$663
	$20 = $4
	
.LABEL $label$662
	*($0) = $4
	CALL $85($20)
	
.LABEL $label$661
	if ( ((*($27 + [160]) & [1]) == 0) ){ goto $label$666 }
	CALL $85(*(($27 + [168])))
	
.LABEL $label$666
	if ( ((*($27 + [496]) & [1]) == 0) ){ goto $label$667 }
	CALL $85(*($27 + [504]))
	
.LABEL $label$667
	$4 = *($27 + [552])
	if ( ($4 == 0) ){ goto $label$61 }
	$20 = *($27 + [556])
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$669 }
	$5 = ([0] - $4)
	$20 = ($20 + [-12])
	
.LOOP $label$670:
	if ( ((*($20) & [1]) == 0) ){ goto $label$671 }
	CALL $85(*(($20 + [8])))
	
.LABEL $label$671
	$20 = ($20 + [-12])
	if ( ((int_32)($20 + $5) != (int_32)[-12]) ){ goto $label$670 }
	$20 = *($27 + [552])
	goto $label$668 
	
.LABEL $label$669
	$20 = $4
	
.LABEL $label$668
	*($27 + [556]) = $4
	CALL $85($20)
	
.LABEL $label$61
	$4 = *($27 + [592])
	if ( ($4 == 0) ){ goto $label$59 }
	
.LABEL $label$60
	$0 = ($27 + [596])
	$20 = *($0)
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$673 }
	
.LOOP $label$674:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$675 }
	CALL $85($5)
	
.LABEL $label$675
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$674 }
	$20 = *(($27 + [592]))
	goto $label$672 
	
.LABEL $label$673
	$20 = $4
	
.LABEL $label$672
	*($0) = $4
	CALL $85($20)
	
.LABEL $label$59
	$4 = *($27 + [632])
	if ( ($4 == 0) ){ goto $label$14 }
	
.LABEL $label$58
	$0 = ($27 + [636])
	$20 = *($0)
	if ( ((int_32)$20 == (int_32)$4) ){ goto $label$677 }
	
.LOOP $label$678:
	$20 = ($20 + [-24])
	$5 = *($20)
	*($20) = [0]
	if ( ($5 == 0) ){ goto $label$679 }
	CALL $85($5)
	
.LABEL $label$679
	if ( ((int_32)$4 != (int_32)$20) ){ goto $label$678 }
	$20 = *(($27 + [632]))
	goto $label$676 
	
.LABEL $label$677
	$20 = $4
	
.LABEL $label$676
	*($0) = $4
	CALL $85($20)
	
.LABEL $label$14
	*([0] + [4]) = ($27 + [672])
	return (unreachable)
	
.LABEL $label$13
	CALL $86(($27 + [80]))
	
.LABEL $label$12
	CALL $86(($27 + [312]))
	
.LABEL $label$11
	CALL $86(($27 + [344]))
	
.LABEL $label$10
	CALL $86(($27 + [376]))
	
.LABEL $label$9
	CALL $86(($27 + [408]))
	
.LABEL $label$8
	CALL $86(($27 + [248]))
	
.LABEL $label$7
	CALL $86(($27 + [160]))
	
.LABEL $label$6
	CALL $86(($27 + [16]))
	
.LABEL $label$5
	CALL $86(($27 + [280]))
	
.LABEL $label$4
	CALL $86(($27 + [176]))
	
.LABEL $label$3
	CALL $86(($27 + [496]))
	
.LABEL $label$2
	CALL $86(($27 + [656]))
	
.LABEL $label$1
	CALL $86(($27 + [16]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1397703940
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [144])
	$3 = (int_64)5459781
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [208])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $64(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $65(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $85(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [304])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [32]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [48])
	
.LABEL $label$7
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$17 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$23 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$3 = ($3 + [165])
	goto $label$21 
	
.LABEL $label$23
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$19
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$18 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$16 }
	
.LABEL $label$17
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [112]
	$7 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$29 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$3 = ($3 + [165])
	goto $label$27 
	
.LABEL $label$29
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$25
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$24 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$15 }
	
.LABEL $label$16
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [128]
	$7 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$35 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$3 = ($3 + [165])
	goto $label$33 
	
.LABEL $label$35
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$31
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$30 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$14 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [112]
	$7 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$41 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$3 = ($3 + [165])
	goto $label$39 
	
.LABEL $label$41
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$37
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$36 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$14 }
	CALL $24(($9 + [160]))
	$6 = *($9 + [168])
	*(($9 + [148])) = *(($9 + [188]))
	*(($4 = (($9 + [136]) + [8]))) = *(($9 + [184]))
	*($9 + [152]) = $0
	*($9 + [140]) = *(($9 + [180]))
	$8 = *($9 + [160])
	*($9 + [136]) = *($9 + [176])
	$3 = ($9 + [192])
	CALL $100(($9 + [120]), $3)
	*((($9 + [8]) + [8])) = *($4)
	*($9 + [8]) = *($9 + [136])
	CALL _ZN12eosiocpubank8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(($9 + [152]), $8, _ZN12eosiocpubank8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, ($9 + [8]), ($9 + [120]))
	if ( ((*($9 + [120]) & [1]) == 0) ){ goto $label$42 }
	CALL $85(*($9 + [128]))
	
.LABEL $label$42
	if ( ((*($3) & [1]) == 0) ){ goto $label$14 }
	CALL $85(*(($9 + [200])))
	goto $label$14 
	
.LABEL $label$15
	*($9 + [160]) = $0
	if ( ((int_64)$2 > (int_64)-3617168760277827585) ){ goto $label$53 }
	if ( ((int_64)$2 > (int_64)-4996863337917579265) ){ goto $label$52 }
	if ( ((int_64)$2 == (int_64)-7954134735498772480) ){ goto $label$50 }
	if ( ((int_64)$2 == (int_64)-7297672924628277568) ){ goto $label$49 }
	if ( ((int_64)$2 != (int_64)-5001342339331915776) ){ goto $label$14 }
	*($9 + [260]) = [0]
	*($9 + [256]) = [1]
	*($9 + [64 align=4]) = *($9 + [256])
	CALL $15(($9 + [160]), ($9 + [64]))
	goto $label$14 
	
.LABEL $label$53
	if ( ((int_64)$2 > (int_64)6182744098496053247) ){ goto $label$51 }
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$48 }
	if ( ((int_64)$2 == (int_64)-2039333636196532224) ){ goto $label$47 }
	if ( ((int_64)$2 != (int_64)4857473046723690496) ){ goto $label$14 }
	*($9 + [212]) = [0]
	*($9 + [208]) = [2]
	*($9 + [112 align=4]) = *($9 + [208])
	CALL $13(($9 + [160]), ($9 + [112]))
	goto $label$14 
	
.LABEL $label$52
	if ( ((int_64)$2 == (int_64)-4996863337917579264) ){ goto $label$46 }
	if ( ((int_64)$2 == (int_64)-4996854170817396736) ){ goto $label$45 }
	if ( ((int_64)$2 != (int_64)-4859410198307012608) ){ goto $label$14 }
	*($9 + [236]) = [0]
	*($9 + [232]) = [3]
	*($9 + [88 align=4]) = *($9 + [232])
	CALL $15(($9 + [160]), ($9 + [88]))
	goto $label$14 
	
.LABEL $label$51
	if ( ((int_64)$2 == (int_64)6182744098496053248) ){ goto $label$44 }
	if ( ((int_64)$2 == (int_64)7746191359077253120) ){ goto $label$43 }
	if ( ((int_64)$2 != (int_64)8421045207927095296) ){ goto $label$14 }
	*($9 + [220]) = [0]
	*($9 + [216]) = [4]
	*($9 + [104 align=4]) = *($9 + [216])
	CALL $21(($9 + [160]), ($9 + [104]))
	goto $label$14 
	
.LABEL $label$50
	*($9 + [284]) = [0]
	*($9 + [280]) = [5]
	*($9 + [40 align=4]) = *($9 + [280])
	CALL $9(($9 + [160]), ($9 + [40]))
	goto $label$14 
	
.LABEL $label$49
	*($9 + [244]) = [0]
	*($9 + [240]) = [6]
	*($9 + [80 align=4]) = *($9 + [240])
	CALL $15(($9 + [160]), ($9 + [80]))
	goto $label$14 
	
.LABEL $label$48
	*($9 + [300]) = [0]
	*($9 + [296]) = [7]
	*($9 + [24 align=4]) = *($9 + [296])
	CALL $7(($9 + [160]), ($9 + [24]))
	goto $label$14 
	
.LABEL $label$47
	*($9 + [268]) = [0]
	*($9 + [264]) = [8]
	*($9 + [56 align=4]) = *($9 + [264])
	CALL $13(($9 + [160]), ($9 + [56]))
	goto $label$14 
	
.LABEL $label$46
	*($9 + [276]) = [0]
	*($9 + [272]) = [9]
	*($9 + [48 align=4]) = *($9 + [272])
	CALL $9(($9 + [160]), ($9 + [48]))
	goto $label$14 
	
.LABEL $label$45
	*($9 + [292]) = [0]
	*($9 + [288]) = [10]
	*($9 + [32 align=4]) = *($9 + [288])
	CALL $9(($9 + [160]), ($9 + [32]))
	goto $label$14 
	
.LABEL $label$44
	*($9 + [228]) = [0]
	*($9 + [224]) = [11]
	*($9 + [96 align=4]) = *($9 + [224])
	CALL $21(($9 + [160]), ($9 + [96]))
	goto $label$14 
	
.LABEL $label$43
	*($9 + [252]) = [0]
	*($9 + [248]) = [12]
	*($9 + [72 align=4]) = *($9 + [248])
	CALL $17(($9 + [160]), ($9 + [72]))
	
.LABEL $label$14
	*([0] + [4]) = ($9 + [304])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN12eosiocpubank6refundEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [176])
	*([0] + [4]) = $12
	$9 = (int_64)0
	$10 = (int_64)59
	$6 = [272]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($6)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($7)
	*(($12 + [152])) = [0]
	*($12 + [136]) = (int_64)-1
	$9 = (int_64)0
	*($12 + [144]) = (int_64)0
	$10 = *($0)
	*($12 + [120]) = $10
	*($12 + [128]) = $1
	$4 = [0]
	$6 = CALL db_find_i64($10, $1, (int_64)-5001342326447013888, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$4 = CALL $40(($12 + [120]), $6)
	CALL eosio_assert(((int_32)*($4 + [32]) == (int_32)($12 + [120])), [944])
	
.LABEL $label$5
	$3 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($3, [1072])
	CALL eosio_assert(((uint_32)(*($4 + [8]) + [259200]) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000))), [1104])
	$1 = *($0)
	$8 = (int_64)59
	$6 = [288]
	$7 = (int_64)0
	
.LOOP $label$6:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$11 }
	$2 = *($6)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$2 = ($2 + [165])
	goto $label$9 
	
.LABEL $label$11
	$10 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$8
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$7
	$6 = ($6 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$7 = ((int_64)$10 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$6 }
	*($12 + [72]) = $7
	*($12 + [64]) = $1
	$9 = (int_64)0
	$8 = (int_64)59
	$6 = [128]
	$7 = (int_64)0
	
.LOOP $label$12:
	if ( ((uint_64)$9 > (uint_64)(int_64)10) ){ goto $label$17 }
	$2 = *($6)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$2 = ($2 + [165])
	goto $label$15 
	
.LABEL $label$17
	$10 = (int_64)0
	if ( ((int_64)$9 == (int_64)11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$14
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$13
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$7 = ((int_64)$10 | (int_64)$7)
	$9 = ((int_64)$9 + (int_64)1)
	if ( ((int_64)$9 != (int_64)13) ){ goto $label$12 }
	$9 = (int_64)0
	$8 = (int_64)59
	$6 = [112]
	$1 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$23 }
	$2 = *($6)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$2 = ($2 + [165])
	goto $label$21 
	
.LABEL $label$23
	$10 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$19
	$6 = ($6 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$1 = ((int_64)$10 | (int_64)$1)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$18 }
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$6 = CALL strlen([1136])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$24 }
	$2 = ($4 + [16])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$27 }
	*($12) = ($6 << [1])
	$11 = ($12 | [1])
	if ( $6 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$5 = (($6 + [16]) & [-16])
	$11 = CALL $84($5)
	*($12) = ($5 | [1])
	*($12 + [8]) = $11
	*($12 + [4]) = $6
	
.LABEL $label$26
	CALL memcpy($11, [1136], $6)
	
.LABEL $label$25
	*(($11 + $6)) = [0]
	$9 = *($4)
	*(($12 + [40])) = *(($2 + [8]))
	*(($12 + [36])) = *(($2 + [4]))
	*(($12 + [44])) = *(($2 + [12]))
	*($12 + [16]) = *($0)
	*($12 + [24]) = $9
	*($12 + [32]) = *($2)
	*(($12 + [52])) = *($12 + [4 align=4])
	*($12 + [48]) = *($12)
	*($12) = [0]
	*($12 + [4]) = [0]
	*(($12 + [8])) = [0]
	$6 = CALL $29(($12 + [80]), ($12 + [64]), $7, $1, ($12 + [16]))
	CALL $30(($12 + [160]), $6)
	$2 = *($12 + [160])
	CALL send_inline($2, (*($12 + [164]) - $2))
	$2 = *($12 + [160])
	if ( ($2 == 0) ){ goto $label$28 }
	*($12 + [164]) = $2
	CALL $85($2)
	
.LABEL $label$28
	$2 = *($6 + [28])
	if ( ($2 == 0) ){ goto $label$29 }
	*(($6 + [32])) = $2
	CALL $85($2)
	
.LABEL $label$29
	$2 = *($6 + [16])
	if ( ($2 == 0) ){ goto $label$30 }
	*(($6 + [20])) = $2
	CALL $85($2)
	
.LABEL $label$30
	if ( ((*(($12 + [48])) & [1]) == 0) ){ goto $label$31 }
	CALL $85(*(($12 + [56])))
	
.LABEL $label$31
	if ( ((*($12) & [1]) == 0) ){ goto $label$32 }
	CALL $85(*(($12 + [8])))
	
.LABEL $label$32
	CALL eosio_assert($3, [656])
	CALL eosio_assert($3, [704])
	$6 = CALL db_next_i64(*($4 + [36]), ($12 + [16]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$33 }
	CALL $40(($12 + [120]), $6)
	
.LABEL $label$33
	CALL $41(($12 + [120]), $4)
	$4 = *($12 + [144])
	if ( ($4 == 0) ){ goto $label$34 }
	$0 = ($12 + [148])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$36 }
	
.LOOP $label$37:
	$6 = ($6 + [-24])
	$2 = *($6)
	*($6) = [0]
	if ( ($2 == 0) ){ goto $label$38 }
	CALL $85($2)
	
.LABEL $label$38
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$37 }
	$6 = *(($12 + [144]))
	goto $label$35 
	
.LABEL $label$36
	$6 = $4
	
.LABEL $label$35
	*($0) = $4
	CALL $85($6)
	
.LABEL $label$34
	*([0] + [4]) = ($12 + [176])
	return (unreachable)
	
.LABEL $label$24
	CALL $86($12)
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [240])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC _ZN12eosiocpubank2hiENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [272]
	$6 = (int_64)0
	
.LOOP $label$1:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($6)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	*($5) = (int_64)0
	*($5 + [36]) = $1
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + $3)
	CALL $26(($5 + [32]), $5)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	CALL $100(($5 + [16]), $5)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL $100(($5 + [32]), ($5 + [16]))
	CALL void $1((int_32 ($5 + [32])), (int_32 $4))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $85(*($5 + [40]))
	
.LABEL $label$6
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$7 }
	CALL $85(*($5 + [24]))
	
.LABEL $label$7
	if ( ((*($5) & [1]) == 0) ){ goto $label$8 }
	CALL $85(*(($5 + [8])))
	
.LABEL $label$8
	*([0] + [4]) = ($5 + [48])
	return [1]
}

void .FUNC _ZN12eosiocpubank8maintainEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [80])
	*([0] + [4]) = $12
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [272]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($9)
	*((($12 + [8]) + [32])) = [0]
	*($12 + [24]) = (int_64)-1
	*($12 + [32]) = (int_64)0
	$8 = *($0)
	*($12 + [8]) = $8
	*($12 + [16]) = $8
	$6 = CALL db_find_i64($8, $8, (int_64)-7954134735498772480, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$6 = CALL $44(($12 + [8]), $6)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)($12 + [8])), [944])
	$11 = (($12 + [64]) | [8])
	$3 = ($12 + [64])
	goto $label$5 
	
.LABEL $label$6
	$7 = *($0)
	CALL eosio_assert(((int_64)*($12 + [8]) == (int_64)CALL $fimport$3()), [1728])
	*(($6 = CALL $84([32])) + [16]) = ($12 + [8])
	*($6) = $1
	CALL eosio_assert([1], [320])
	CALL memcpy(($12 + [64]), $6, [8])
	CALL eosio_assert([1], [320])
	$11 = (($12 + [64]) | [8])
	CALL memcpy($11, ($6 + [8]), [8])
	$8 = *($6)
	$4 = CALL db_store_i64(*((($12 + [8]) + [8])), (int_64)-7954134735498772480, $7, $8, ($12 + [64]), [16])
	*($6 + [20]) = $4
	$3 = (($12 + [8]) + [16])
	if ( (uint_64)($8 <= *($3)) ){ goto $label$7 }
	*($3) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($12 + [56]) = $6
	$8 = *($6)
	*($12 + [64]) = $8
	*($12 + [52]) = $4
	$5 = ($12 + [36])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($12 + [40]))) ){ goto $label$9 }
	*($3 + [8]) = $8
	*($3 + [16]) = $4
	*($12 + [56]) = [0]
	*($3) = $6
	*($5) = ($3 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $58(($12 + [32]), ($12 + [56]), ($12 + [64]), ($12 + [52]))
	
.LABEL $label$8
	$3 = *($12 + [56])
	*($12 + [56]) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	CALL $85($3)
	
.LABEL $label$10
	$3 = ($12 + [64])
	
.LABEL $label$5
	$7 = *($0)
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [1296])
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)($12 + [8])), [1344])
	CALL eosio_assert(((int_64)*($12 + [8]) == (int_64)CALL $fimport$3()), [1392])
	*($6 + [8]) = $2
	$8 = *($6)
	CALL eosio_assert([1], [1568])
	CALL eosio_assert([1], [320])
	CALL memcpy($3, $6, [8])
	CALL eosio_assert([1], [320])
	CALL memcpy($11, ($6 + [8]), [8])
	CALL db_update_i64(*($6 + [20]), $7, $3, [16])
	$6 = (($12 + [8]) + [16])
	if ( (uint_64)($8 <= *($6)) ){ goto $label$11 }
	*($6) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$0 = *($12 + [32])
	if ( ($0 == 0) ){ goto $label$12 }
	$11 = ($12 + [36])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$16 }
	CALL $85($3)
	
.LABEL $label$16
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$15 }
	$6 = *(($12 + [32]))
	goto $label$13 
	
.LABEL $label$14
	$6 = $0
	
.LABEL $label$13
	*($11) = $0
	CALL $85($6)
	
.LABEL $label$12
	*([0] + [4]) = ($12 + [80])
}

void .FUNC _ZN12eosiocpubank9rentalaccEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	CALL require_auth(*($0))
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$5 = *($0)
	*($8 + [8]) = $5
	*($8 + [16]) = $5
	$4 = CALL db_find_i64($5, $5, (int_64)-4996863337917251584, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$5 }
	$0 = CALL $59(($8 + [8]), $4)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($8 + [8])), [944])
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_64)$2 != (int_64)1) ){ goto $label$3 }
	$6 = *($0)
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$3()), [1728])
	*(($0 = CALL $84([32])) + [16]) = ($8 + [8])
	*($0) = $1
	CALL eosio_assert([1], [320])
	CALL memcpy(($8 + [64]), $0, [8])
	CALL eosio_assert([1], [320])
	CALL memcpy((($8 + [64]) | [8]), ($0 + [8]), [4])
	$5 = *($0)
	$3 = CALL db_store_i64(*((($8 + [8]) + [8])), (int_64)-4996863337917251584, $6, $5, ($8 + [64]), [12])
	*($0 + [20]) = $3
	$4 = ($8 + [24])
	if ( (uint_64)($5 <= *($4)) ){ goto $label$6 }
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($8 + [56]) = $0
	$5 = *($0)
	*($8 + [64]) = $5
	*($8 + [52]) = $3
	$7 = ($8 + [36])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*((($8 + [8]) + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $3
	*($8 + [56]) = [0]
	*($4) = $0
	*($7) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $60(($8 + [32]), ($8 + [56]), ($8 + [64]), ($8 + [52]))
	
.LABEL $label$7
	$4 = *($8 + [56])
	*($8 + [56]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $85($4)
	
.LABEL $label$4
	if ( ((int_64)$2 != (int_64)2) ){ goto $label$3 }
	if ( ($0 == 0) ){ goto $label$3 }
	CALL eosio_assert([1], [656])
	CALL eosio_assert([1], [704])
	$4 = CALL db_next_i64(*($0 + [20]), ($8 + [64]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$9 }
	CALL $59(($8 + [8]), $4)
	
.LABEL $label$9
	CALL $61(($8 + [8]), $0)
	$3 = *($8 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$3 = *($8 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $85($4)
	
.LABEL $label$13
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($8 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $3
	
.LABEL $label$10
	*($7) = $3
	CALL $85($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [80])
}

void .FUNC _ZN12eosiocpubank8withdrawEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [224])
	*([0] + [4]) = $17
	*($17 + [200]) = $1
	CALL require_auth($1)
	$4 = [0]
	*(($17 + [192])) = [0]
	*($17 + [176]) = (int_64)-1
	*($17 + [184]) = (int_64)0
	$1 = *($0)
	*($17 + [160]) = $1
	*($17 + [168]) = $1
	$12 = CALL db_find_i64($1, $1, (int_64)-7954134735498772480, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$1 }
	$12 = CALL $44(($17 + [160]), $12)
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)($17 + [160])), [944])
	CALL eosio_assert((int_64)(*($12 + [8]) == 0), [1152])
	
.LABEL $label$1
	$16 = *($2 + [8])
	$14 = *($2)
	if ( ((uint_64)((int_64)$14 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$1 = (uint_64)$16 >> (uint_64)(int_64)8)
	$12 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	CALL eosio_assert($4, [1184])
	CALL eosio_assert(((int_64)$16 == (int_64)1397703940), [1216])
	CALL eosio_assert(((int_64)$14 > (int_64)0), [1232])
	*($17 + [136]) = (int_64)-1
	*($17 + [144]) = [0]
	$1 = *($17 + [200])
	$13 = *($0)
	*($17 + [120]) = $13
	*($17 + [128]) = $1
	*(($17 + [148])) = [0]
	*(($17 + [152])) = [0]
	*($17 + [156]) = [0]
	$4 = [0]
	$12 = CALL db_find_i64($13, $1, (int_64)5380477996647841792, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$7 }
	$4 = CALL $45(($17 + [120]), $12)
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)($17 + [120])), [944])
	
.LABEL $label$7
	$3 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($3, [1264])
	$13 = *($0)
	CALL eosio_assert($3, [1296])
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)($17 + [120])), [1344])
	CALL eosio_assert(((int_64)*($17 + [120]) == (int_64)CALL $fimport$3()), [1392])
	$1 = *($4)
	*($17 + [208]) = $1
	$15 = *($4 + [8])
	$12 = ($4 + [16])
	$5 = *($12)
	CALL eosio_assert(((int_64)$16 == (int_64)$5), [1456])
	$16 = (int_64)
	CALL eosio_assert(((int_64)$16($15 - $14)) > (int_64)-4611686018427387904), [1504])
	CALL eosio_assert(((int_64)$16 < (int_64)4611686018427387904), [1536])
	*($12) = $5
	*($4 + [8]) = $16
	CALL eosio_assert(((int_64)$1 == (int_64)*($4)), [1568])
	CALL eosio_assert([1], [320])
	CALL memcpy(($17 + [16]), $4, [8])
	CALL eosio_assert([1], [320])
	CALL memcpy((($17 + [16]) | [8]), ($4 + [8]), [8])
	CALL eosio_assert([1], [320])
	CALL memcpy((($17 + [16]) + [16]), $12, [8])
	CALL db_update_i64(*($4 + [28]), $13, ($17 + [16]), [24])
	$12 = (($17 + [120]) + [16])
	if ( (uint_64)($1 <= *($12)) ){ goto $label$8 }
	*($12) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($17 + [80]) = *($4)
	if ( (CALL memcmp(($17 + [208]), ($17 + [80]), [8]) == 0) ){ goto $label$9 }
	$11 = ($4 + [32])
	$12 = *($11)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$10 }
	$12 = CALL db_idx64_find_primary(*($17 + [120]), *(($17 + [128])), (int_64)5380477996647841792, $17, $1)
	*($11) = $12
	
.LABEL $label$10
	CALL db_idx64_update($12, $13, ($17 + [80]))
	
.LABEL $label$9
	CALL eosio_assert([1], [144])
	$1 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$11 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$11 = [0]
	
.LABEL $label$11
	CALL eosio_assert($11, [208])
	CALL eosio_assert(((int_64)*(($4 + [16])) == (int_64)1397703940), [1632])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($4 + [8]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [1696])
	*($17 + [96]) = (int_64)-1
	$12 = [0]
	*($17 + [104]) = [0]
	$1 = *($17 + [200])
	$16 = *($0)
	*($17 + [80]) = $16
	*($17 + [88]) = $1
	*(($17 + [108])) = [0]
	*(($17 + [112])) = [0]
	$11 = CALL db_find_i64($16, $1, (int_64)-5001342326447013888, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$17 }
	$11 = CALL $40(($17 + [80]), $11)
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)($17 + [80])), [944])
	$8 = ($17 + [36])
	$9 = (($17 + [16]) | [12])
	$10 = (($17 + [16]) | [8])
	$7 = ($17 + [16])
	goto $label$16 
	
.LABEL $label$17
	$16 = *($0)
	CALL eosio_assert(((int_64)*($17 + [80]) == (int_64)CALL $fimport$3()), [1728])
	*(($11 = CALL $84([48])) + [24]) = (int_64)1397703940
	*($11 + [16]) = (int_64)0
	CALL eosio_assert([1], [144])
	$6 = ($11 + [24])
	$8 = ($11 + [16])
	$1 = (int_64)5459781
	
.LOOP $label$19:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	
.LOOP $label$21:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$21 }
	
.LABEL $label$20
	$7 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	CALL eosio_assert($7, [208])
	*($11 + [32]) = ($17 + [80])
	*($11) = *($17 + [200])
	CALL eosio_assert([1], [320])
	CALL memcpy(($17 + [16]), $11, [8])
	CALL eosio_assert([1], [320])
	$10 = (($17 + [16]) | [8])
	CALL memcpy($10, ($11 + [8]), [4])
	CALL eosio_assert([1], [320])
	$9 = (($17 + [16]) | [12])
	CALL memcpy($9, $8, [8])
	CALL eosio_assert([1], [320])
	$8 = ($17 + [36])
	CALL memcpy($8, $6, [8])
	$1 = *($11)
	$7 = CALL db_store_i64(*((($17 + [80]) + [8])), (int_64)-5001342326447013888, $16, $1, ($17 + [16]), [28])
	*($11 + [36]) = $7
	$12 = ($17 + [96])
	if ( (uint_64)($1 <= *($12)) ){ goto $label$22 }
	*($12) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	*($17) = $11
	$1 = *($11)
	*($17 + [16]) = $1
	*($17 + [208]) = $7
	$12 = *((($17 + [80]) + [28]))
	if ( ((uint_32)$12 >= (uint_32)*(($17 + [112]))) ){ goto $label$24 }
	*($12 + [8]) = $1
	*($12 + [16]) = $7
	*($17) = [0]
	*($12) = $11
	*(($17 + [108])) = ($12 + [24])
	goto $label$23 
	
.LABEL $label$24
	CALL $43(($17 + [104]), $17, ($17 + [16]), ($17 + [208]))
	
.LABEL $label$23
	$12 = *($17)
	*($17) = [0]
	if ( ($12 == 0) ){ goto $label$25 }
	CALL $85($12)
	
.LABEL $label$25
	$7 = ($17 + [16])
	
.LABEL $label$16
	$12 = [0]
	$16 = *($0)
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [1296])
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)($17 + [80])), [1344])
	CALL eosio_assert(((int_64)*($17 + [80]) == (int_64)CALL $fimport$3()), [1392])
	$1 = *($11)
	$6 = ($11 + [24])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*($6)), [1792])
	$14 = ((int_64)*($11 + [16]) + (int_64)*($2))
	*($11 + [16]) = $14
	CALL eosio_assert(((int_64)$14 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($11 + [16]) < (int_64)4611686018427387904), [1872])
	*($11 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$1 == (int_64)*($11)), [1568])
	CALL eosio_assert([1], [320])
	CALL memcpy($7, $11, [8])
	CALL eosio_assert([1], [320])
	CALL memcpy($10, ($11 + [8]), [4])
	CALL eosio_assert([1], [320])
	CALL memcpy($9, ($11 + [16]), [8])
	CALL eosio_assert([1], [320])
	CALL memcpy($8, $6, [8])
	CALL db_update_i64(*($11 + [36]), $16, $7, [28])
	$11 = (($17 + [80]) + [16])
	if ( (uint_64)($1 <= *($11)) ){ goto $label$26 }
	*($11) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$26
	CALL eosio_assert([1], [144])
	$1 = (int_64)5459781
	
.LOOP $label$28:
	$11 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$11 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	CALL eosio_assert($11, [208])
	CALL eosio_assert(((int_64)*(($4 + [16])) == (int_64)1397703940), [1632])
	$1 = (int_64)0
	if ( ((int_64)*(($4 + [8])) != (int_64)0) ){ goto $label$31 }
	*(($17 + [48])) = [0]
	*($17 + [40]) = (int_64)0
	*($17 + [32]) = (int_64)-1
	$16 = *($0)
	*($17 + [16]) = $16
	*($17 + [24]) = $16
	$12 = CALL db_find_i64($16, $16, (int_64)5380477996752830464, *($4))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$32 }
	$12 = CALL $46(($17 + [16]), $12)
	CALL eosio_assert(((int_32)*($12 + [8]) == (int_32)($17 + [16])), [944])
	CALL eosio_assert([1], [656])
	CALL eosio_assert([1], [704])
	$11 = CALL db_next_i64(*($12 + [12]), $17)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$33 }
	CALL $46(($17 + [16]), $11)
	
.LABEL $label$33
	CALL $47(($17 + [16]), $12)
	
.LABEL $label$32
	CALL eosio_assert($3, [656])
	CALL eosio_assert($3, [704])
	$12 = CALL db_next_i64(*(($4 + [28])), $17)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$34 }
	CALL $45(($17 + [120]), $12)
	
.LABEL $label$34
	CALL $48(($17 + [120]), $4)
	$11 = *($17 + [40])
	if ( ($11 == 0) ){ goto $label$31 }
	$2 = ($17 + [44])
	$12 = *($2)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$36 }
	
.LOOP $label$37:
	$12 = ($12 + [-24])
	$4 = *($12)
	*($12) = [0]
	if ( ($4 == 0) ){ goto $label$38 }
	CALL $85($4)
	
.LABEL $label$38
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$37 }
	$12 = *(($17 + [40]))
	goto $label$35 
	
.LABEL $label$36
	$12 = $11
	
.LABEL $label$35
	*($2) = $11
	CALL $85($12)
	
.LABEL $label$31
	$16 = CALL current_time()
	*(($17 + [44])) = [0]
	*(($17 + [48])) = [0]
	*($17 + [28]) = [0]
	*($17 + [32]) = [0]
	*($17 + [36]) = [0]
	*($17 + [40]) = [0]
	*($17 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$16 / (uint_64)(int_64)1000000)) + [60])
	*($17 + [52]) = [0]
	*(($17 + [56])) = [0]
	*(($17 + [60])) = [0]
	*($17 + [64]) = [0]
	*(($17 + [68])) = [0]
	*(($17 + [72])) = [0]
	$11 = ($17 + [52])
	$16 = (int_64)59
	$12 = [272]
	$13 = (int_64)0
	
.LOOP $label$39:
	$14 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$40 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$4 = ($4 + [165])
	goto $label$41 
	
.LABEL $label$42
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$40
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$39 }
	$1 = (int_64)0
	$14 = (int_64)59
	$12 = [288]
	$15 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$48 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$4 = ($4 + [165])
	goto $label$46 
	
.LABEL $label$48
	$16 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$44
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$43 }
	*($17 + [8]) = $15
	*($17) = $13
	$1 = (int_64)0
	$14 = (int_64)59
	$12 = [1904]
	$13 = (int_64)0
	
.LOOP $label$49:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$54 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$4 = ($4 + [165])
	goto $label$52 
	
.LABEL $label$54
	$16 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$53
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$51
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$50
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$13 = ((int_64)$16 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$49 }
	*($17 + [208]) = $13
	CALL $49($11, $17, $0, ($17 + [208]), ($17 + [200]))
	$1 = *($17 + [200])
	*(($17 + [36])) = [259200]
	*($17 + [8]) = (int_64)0
	*($17) = $1
	CALL cancel_deferred($17)
	*($17 + [8]) = (int_64)0
	*($17) = *($17 + [200])
	$1 = *($0)
	CALL $50(($17 + [208]), ($17 + [16]))
	$12 = *($17 + [208])
	CALL send_deferred($17, $1, $12, (*($17 + [212]) - $12), [1])
	$12 = *($17 + [208])
	if ( ($12 == 0) ){ goto $label$55 }
	*($17 + [212]) = $12
	CALL $85($12)
	
.LABEL $label$55
	CALL $51(($17 + [16]))
	$11 = *($17 + [104])
	if ( ($11 == 0) ){ goto $label$56 }
	$0 = ($17 + [108])
	$12 = *($0)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$58 }
	
.LOOP $label$59:
	$12 = ($12 + [-24])
	$4 = *($12)
	*($12) = [0]
	if ( ($4 == 0) ){ goto $label$60 }
	CALL $85($4)
	
.LABEL $label$60
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$59 }
	$12 = *(($17 + [104]))
	goto $label$57 
	
.LABEL $label$58
	$12 = $11
	
.LABEL $label$57
	*($0) = $11
	CALL $85($12)
	
.LABEL $label$56
	$11 = *($17 + [144])
	if ( ($11 == 0) ){ goto $label$61 }
	$0 = ($17 + [148])
	$12 = *($0)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$63 }
	
.LOOP $label$64:
	$12 = ($12 + [-24])
	$4 = *($12)
	*($12) = [0]
	if ( ($4 == 0) ){ goto $label$65 }
	CALL $85($4)
	
.LABEL $label$65
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$64 }
	$12 = *(($17 + [144]))
	goto $label$62 
	
.LABEL $label$63
	$12 = $11
	
.LABEL $label$62
	*($0) = $11
	CALL $85($12)
	
.LABEL $label$61
	$11 = *($17 + [184])
	if ( ($11 == 0) ){ goto $label$66 }
	$0 = ($17 + [188])
	$12 = *($0)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$68 }
	
.LOOP $label$69:
	$12 = ($12 + [-24])
	$4 = *($12)
	*($12) = [0]
	if ( ($4 == 0) ){ goto $label$70 }
	CALL $85($4)
	
.LABEL $label$70
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$69 }
	$12 = *(($17 + [184]))
	goto $label$67 
	
.LABEL $label$68
	$12 = $11
	
.LABEL $label$67
	*($0) = $11
	CALL $85($12)
	
.LABEL $label$66
	*([0] + [4]) = ($17 + [224])
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1397703940
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [144])
	$6 = (int_64)5459781
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [208])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [240])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [240])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [240])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [320])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [320])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [320])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [320])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [320])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [320])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [320])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN12eosiocpubank12newrecyclingEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [160])
	*([0] + [4]) = $12
	CALL require_auth(*($0))
	$6 = [0]
	*(($12 + [120])) = [0]
	*($12 + [104]) = (int_64)-1
	*($12 + [112]) = (int_64)0
	$8 = *($0)
	*($12 + [88]) = $8
	*($12 + [96]) = $8
	*($12 + [124]) = [0]
	$4 = [0]
	$0 = CALL db_find_i64($8, $8, (int_64)-7297672924628103408, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $35(($12 + [88]), $0)
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)($12 + [88])), [944])
	
.LABEL $label$1
	$2 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($2, [1008])
	CALL eosio_assert(((uint_32)*($4 + [28]) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000))), [1040])
	CALL eosio_assert([1], [144])
	$8 = (int_64)5459781
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$0 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$0 = [0]
	
.LABEL $label$2
	CALL eosio_assert($0, [208])
	$3 = *($4 + [16])
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [288]
	$9 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$12 }
	$0 = *($6)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$0 = ($0 + [165])
	goto $label$10 
	
.LABEL $label$12
	$1 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$8
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$1 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$7 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [32]
	$10 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$18 }
	$0 = *($6)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$0 = ($0 + [165])
	goto $label$16 
	
.LABEL $label$18
	$1 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$14
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$10 = ((int_64)$1 | (int_64)$10)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$13 }
	$8 = (int_64)0
	$1 = (int_64)59
	$6 = [640]
	$11 = (int_64)0
	
.LOOP $label$19:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$20 }
	$0 = *($6)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$0 = ($0 + [165])
	goto $label$21 
	
.LABEL $label$22
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($0 & [31])) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$20
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$7 | (int_64)$11)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$19 }
	$8 = *($4 + [8])
	*(($12 + [24])) = (int_64)1397703940
	*(($12 + [44])) = *(($4 + [44]))
	*(($12 + [40])) = *(($4 + [40]))
	*(($12 + [36])) = *(($4 + [36]))
	*($12) = $3
	*($12 + [16]) = (int_64)0
	*($12 + [8]) = $8
	*($12 + [32]) = *($4 + [32])
	*($12 + [48]) = $10
	*($12 + [56]) = $11
	*(($6 = CALL $84([16]))) = $3
	*($6 + [8]) = $9
	*(($0 = ($12 + [80]))) = [0]
	$5 = ($6 + [16])
	*((($12 + [48]) + [24])) = $5
	*(($12 + [68])) = $5
	*($12 + [64]) = $6
	*($12 + [76]) = [0]
	*((($12 + [48]) + [36])) = [0]
	CALL $28(($12 + [76]), [48])
	$6 = *($0)
	$0 = *($12 + [76])
	*($12 + [132]) = $0
	*($12 + [128]) = $0
	*($12 + [136]) = $6
	*($12 + [144]) = ($12 + [128])
	*($12 + [152]) = $12
	CALL $36(($12 + [152]), ($12 + [144]))
	CALL $30(($12 + [128]), ($12 + [48]))
	$6 = *($12 + [128])
	CALL send_inline($6, (*($12 + [132]) - $6))
	$6 = *($12 + [128])
	if ( ($6 == 0) ){ goto $label$23 }
	*($12 + [132]) = $6
	CALL $85($6)
	
.LABEL $label$23
	$6 = *($12 + [76])
	if ( ($6 == 0) ){ goto $label$24 }
	*(($12 + [80])) = $6
	CALL $85($6)
	
.LABEL $label$24
	$6 = *($12 + [64])
	if ( ($6 == 0) ){ goto $label$25 }
	*(($12 + [68])) = $6
	CALL $85($6)
	
.LABEL $label$25
	CALL eosio_assert($2, [656])
	CALL eosio_assert($2, [704])
	$6 = CALL db_next_i64(*($4 + [52]), $12)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$26 }
	CALL $35(($12 + [88]), $6)
	
.LABEL $label$26
	CALL $37(($12 + [88]), $4)
	$4 = *($12 + [112])
	if ( ($4 == 0) ){ goto $label$27 }
	$2 = ($12 + [116])
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$29 }
	
.LOOP $label$30:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$31 }
	CALL $85($0)
	
.LABEL $label$31
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$30 }
	$6 = *(($12 + [112]))
	goto $label$28 
	
.LABEL $label$29
	$6 = $4
	
.LABEL $label$28
	*($2) = $4
	CALL $85($6)
	
.LABEL $label$27
	*([0] + [4]) = ($12 + [160])
}

void .FUNC _ZN12eosiocpubank7rmbykeyEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$4 = *($0)
	*($6) = $4
	*($6 + [8]) = $4
	*($6 + [36]) = [0]
	$0 = [0]
	$3 = CALL db_find_i64($4, $4, (int_64)-7297672924628103408, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $35($6, $3)
	CALL eosio_assert(((int_32)*($0 + [48]) == (int_32)$6), [944])
	
.LABEL $label$1
	$3 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($3, [1008])
	CALL eosio_assert(((uint_32)*($0 + [28]) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000))), [1040])
	CALL eosio_assert($3, [656])
	CALL eosio_assert($3, [704])
	$3 = CALL db_next_i64(*($0 + [52]), ($6 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	CALL $35($6, $3)
	
.LABEL $label$2
	CALL $37($6, $0)
	$2 = *($6 + [24])
	if ( ($2 == 0) ){ goto $label$3 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $85($3)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($5) = $2
	CALL $85($0)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $58 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $84(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $99($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $85($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $85($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [912])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $84([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [240])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [240])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $60(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $85($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $52($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $28($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $53($4, $1)
	CALL $55(CALL $54(CALL $54($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $51 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $85($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $85($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $85($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $85($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $85($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $85($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $85($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $85($5)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [320])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [320])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [320])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [320])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [320])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [320])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [320])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [320])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [320])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $32(CALL $31($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [320])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [320])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $56 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $84(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $99($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $85($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $85($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $57 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $84(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $99($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $85($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $85($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [912])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $84([64])) + [40]) = (int_64)1397703940
	*($4 + [32]) = (int_64)0
	CALL eosio_assert([1], [144])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [208])
	*($4 + [48]) = $0
	CALL $38(($8 + [32]), $4)
	*($4 + [56]) = [-1]
	*($4 + [52]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [52])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $39($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $85($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $112 ()
{
	(unreachable)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC $29 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $84([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $28($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $33(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $84($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $99($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $85($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [320])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [320])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $32($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC __uflow (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = [-1]
	if ( CALL __toread($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($2 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$1 = *($2 + [15])
	
.LABEL $label$1
	*([0] + [4]) = ($2 + [16])
	return $1
}

int_32 .FUNC __shgetc (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$7 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$6 }
	
.LABEL $label$7
	$4 = CALL __uflow($0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$5 }
	$1 = (int_64)
	$2 = *($0 + [4])
	$3 = *(($0 + [8]))
	if ( ((int_64)(CASTING int_64)(int_32 ($3 - $2)) < (int_64)$1($1 - *($0 + [120])))) ){ goto $label$4 }
	*($0 + [104]) = ($2 + (CASTING uint_32)(uint_64 ((int_64)$1 + (int_64)4294967295)))
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$5
	$3 = *(($0 + [8]))
	
.LABEL $label$4
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)) + (int_64)*($0 + [120]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)*($0) == (int_32)$4) ){ goto $label$8 }
	*($0) = $4
	
.LABEL $label$8
	return $4
}

int_32 .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

void .FUNC _ZN12eosiocpubank5eraseEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [160])
	*([0] + [4]) = $17
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [272]
	$13 = (int_64)0
	
.LOOP $label$1:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$2 }
	$4 = *($10)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$4 = ($4 + [165])
	goto $label$3 
	
.LABEL $label$4
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$2
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($13)
	*((($17 + [88]) + [32])) = [0]
	*($17 + [104]) = (int_64)-1
	$12 = *($0)
	*($17 + [88]) = $12
	*($17 + [96]) = $12
	*($17 + [112]) = (int_64)0
	*($17 + [124]) = [0]
	$10 = CALL db_lowerbound_i64($12, $12, (int_64)-7297672924628103408, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($17 + [76])
	$0 = CALL $35(($17 + [88]), $10)
	$1 = ($17 + [32])
	$5 = ($1 + [12])
	$6 = ($1 + [4])
	$7 = ($17 + [68])
	
.LOOP $label$6:
	if ( ((uint_32)*($0 + [28]) >= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$9 }
	CALL eosio_assert([1], [144])
	$12 = (int_64)5459781
	$10 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$4 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$9
	CALL eosio_assert([1], [704])
	$10 = *($0 + [52])
	$0 = [0]
	$10 = CALL db_next_i64($10, $17)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$13 }
	$0 = CALL $35(($17 + [88]), $10)
	
.LABEL $label$13
	if ( $0 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [208])
	$3 = *($0 + [16])
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [288]
	$13 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$19 }
	$4 = *($10)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$4 = ($4 + [165])
	goto $label$17 
	
.LABEL $label$19
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$15
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$14 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [32]
	$15 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$12 > (uint_64)(int_64)4) ){ goto $label$25 }
	$4 = *($10)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$4 = ($4 + [165])
	goto $label$23 
	
.LABEL $label$25
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$21
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$20 }
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [640]
	$16 = (int_64)0
	
.LOOP $label$26:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$27 }
	$4 = *($10)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$4 = ($4 + [165])
	goto $label$28 
	
.LABEL $label$29
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$27
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$11 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$26 }
	$12 = *($0 + [8])
	*(($17 + [16])) = (int_64)0
	*(($17 + [24])) = (int_64)1397703940
	*(($17 + [8])) = $12
	*($1) = *($0 + [32])
	*($5) = *(($0 + [44]))
	*(($1 + [8])) = *(($0 + [40]))
	*($6) = *(($0 + [36]))
	*($17) = $3
	*($17 + [48]) = $15
	*((($17 + [48]) + [8])) = $16
	*(($4 = (($17 + [48]) + [16]))) = [0]
	*($7) = [0]
	*(($8 = (($17 + [48]) + [24]))) = [0]
	$10 = CALL $84([16])
	*($4) = $10
	*($10) = $3
	*($10 + [8]) = $13
	*($2) = [0]
	*(($9 = (($17 + [48]) + [32]))) = [0]
	$10 = ($10 + [16])
	*($8) = $10
	*($7) = $10
	*((($17 + [48]) + [36])) = [0]
	CALL $28($2, [48])
	$10 = *($2)
	*((($17 + [128]) + [8])) = *($9)
	*($17 + [132]) = $10
	*($17 + [128]) = $10
	*($17 + [144]) = ($17 + [128])
	*($17 + [152]) = $17
	CALL $36(($17 + [152]), ($17 + [144]))
	CALL $30(($17 + [128]), ($17 + [48]))
	$10 = *($17 + [128])
	CALL send_inline($10, (*($17 + [132]) - $10))
	$10 = *($17 + [128])
	if ( ($10 == 0) ){ goto $label$30 }
	*($17 + [132]) = $10
	CALL $85($10)
	
.LABEL $label$30
	$10 = *($2)
	if ( ($10 == 0) ){ goto $label$31 }
	*($9) = $10
	CALL $85($10)
	
.LABEL $label$31
	$10 = *($4)
	if ( ($10 == 0) ){ goto $label$32 }
	*($7) = $10
	CALL $85($10)
	
.LABEL $label$32
	$10 = [0]
	$4 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($4, [656])
	CALL eosio_assert($4, [704])
	$4 = CALL db_next_i64(*($0 + [52]), $17)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$33 }
	$10 = CALL $35(($17 + [88]), $4)
	
.LABEL $label$33
	CALL $37(($17 + [88]), $0)
	$0 = $10
	if ( $10 ){ goto $label$6 }
	
.LABEL $label$5
	$0 = *($17 + [112])
	if ( ($0 == 0) ){ goto $label$34 }
	$2 = ($17 + [116])
	$10 = *($2)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$36 }
	
.LOOP $label$37:
	$10 = ($10 + [-24])
	$4 = *($10)
	*($10) = [0]
	if ( ($4 == 0) ){ goto $label$38 }
	CALL $85($4)
	
.LABEL $label$38
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$37 }
	$10 = *(($17 + [112]))
	goto $label$35 
	
.LABEL $label$36
	$10 = $0
	
.LABEL $label$35
	*($2) = $0
	CALL $85($10)
	
.LABEL $label$34
	*([0] + [4]) = ($17 + [160])
}

void .FUNC _ZN12eosiocpubank5chongEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [144])
	*([0] + [4]) = $11
	$8 = (int_64)0
	$9 = (int_64)59
	$5 = [272]
	$6 = (int_64)0
	
.LOOP $label$1:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($6)
	$8 = (int_64)0
	$7 = (int_64)59
	$5 = [288]
	$6 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$10 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$3 = ($3 + [165])
	goto $label$8 
	
.LABEL $label$10
	$9 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$6
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$6 = ((int_64)$9 | (int_64)$6)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$5 }
	*($11 + [80]) = $6
	*($11 + [72]) = $1
	$8 = (int_64)0
	$7 = (int_64)59
	$5 = [128]
	$6 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$16 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$3 = ($3 + [165])
	goto $label$14 
	
.LABEL $label$16
	$9 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$12
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$6 = ((int_64)$9 | (int_64)$6)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$11 }
	$8 = (int_64)0
	$7 = (int_64)59
	$5 = [112]
	$10 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$22 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$3 = ($3 + [165])
	goto $label$20 
	
.LABEL $label$22
	$9 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$18
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$17 }
	*(($11 + [16])) = [0]
	*($11 + [8]) = (int_64)0
	$5 = CALL strlen([304])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$23 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$26 }
	*($11 + [8]) = ($5 << [1])
	$3 = (($11 + [8]) | [1])
	if ( $5 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$4 = (($5 + [16]) & [-16])
	$3 = CALL $84($4)
	*($11 + [8]) = ($4 | [1])
	*($11 + [16]) = $3
	*($11 + [12]) = $5
	
.LABEL $label$25
	CALL memcpy($3, [304], $5)
	
.LABEL $label$24
	*(($3 + $5)) = [0]
	*(($11 + [52])) = *(($2 + [12]))
	*(($11 + [48])) = *(($2 + [8]))
	*(($11 + [44])) = *(($2 + [4]))
	*($11 + [24]) = $1
	*($11 + [32]) = *($0)
	*($11 + [40]) = *($2)
	$5 = (($11 + [8]) + [8])
	*(($11 + [64])) = *($5)
	*($11 + [56]) = *($11 + [8])
	*($11 + [8]) = [0]
	*($11 + [12]) = [0]
	*($5) = [0]
	$5 = CALL $29(($11 + [88]), ($11 + [72]), $6, $10, ($11 + [24]))
	CALL $30(($11 + [128]), $5)
	$3 = *($11 + [128])
	CALL send_inline($3, (*($11 + [132]) - $3))
	$3 = *($11 + [128])
	if ( ($3 == 0) ){ goto $label$27 }
	*($11 + [132]) = $3
	CALL $85($3)
	
.LABEL $label$27
	$3 = *($5 + [28])
	if ( ($3 == 0) ){ goto $label$28 }
	*(($5 + [32])) = $3
	CALL $85($3)
	
.LABEL $label$28
	$3 = *($5 + [16])
	if ( ($3 == 0) ){ goto $label$29 }
	*(($5 + [20])) = $3
	CALL $85($3)
	
.LABEL $label$29
	if ( ((*(($11 + [56])) & [1]) == 0) ){ goto $label$30 }
	CALL $85(*(($11 + [64])))
	
.LABEL $label$30
	if ( ((*($11 + [8]) & [1]) == 0) ){ goto $label$31 }
	CALL $85(*(($11 + [16])))
	
.LABEL $label$31
	*([0] + [4]) = ($11 + [144])
	return (unreachable)
	
.LABEL $label$23
	CALL $86(($11 + [8]))
}

void .FUNC _ZN12eosiocpubank4initEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [272]
	$5 = (int_64)0
	
.LOOP $label$1:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$2 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$1 = ($1 + [165])
	goto $label$3 
	
.LABEL $label$4
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$2
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($5)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [336]
	$5 = (int_64)0
	
.LOOP $label$5:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$6 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$1 = ($1 + [165])
	goto $label$7 
	
.LABEL $label$8
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$6
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$5 }
	CALL _ZN12eosiocpubank8rentrateEyy($0, $5, (int_64)40)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [352]
	$5 = (int_64)0
	
.LOOP $label$9:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$10 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$1 = ($1 + [165])
	goto $label$11 
	
.LABEL $label$12
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$10
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$9 }
	CALL _ZN12eosiocpubank8rentrateEyy($0, $5, (int_64)40)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [368]
	$5 = (int_64)0
	
.LOOP $label$13:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$14 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$1 = ($1 + [165])
	goto $label$15 
	
.LABEL $label$16
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$14
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$13 }
	CALL _ZN12eosiocpubank8rentrateEyy($0, $5, (int_64)40)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [384]
	$5 = (int_64)0
	
.LOOP $label$17:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$18 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$1 = ($1 + [165])
	goto $label$19 
	
.LABEL $label$20
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$18
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$17 }
	CALL _ZN12eosiocpubank8rentrateEyy($0, $5, (int_64)500000000)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [400]
	$5 = (int_64)0
	
.LOOP $label$21:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$22 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$1 = ($1 + [165])
	goto $label$23 
	
.LABEL $label$24
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$22
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$21 }
	CALL _ZN12eosiocpubank8rentrateEyy($0, $5, (int_64)4000000)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [416]
	$5 = (int_64)0
	
.LOOP $label$25:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$26 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$1 = ($1 + [165])
	goto $label$27 
	
.LABEL $label$28
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$26
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$25 }
	CALL _ZN12eosiocpubank8rentrateEyy($0, $5, (int_64)100)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [432]
	$5 = (int_64)0
	
.LOOP $label$29:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$30 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$1 = ($1 + [165])
	goto $label$31 
	
.LABEL $label$32
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$30
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$29 }
	CALL _ZN12eosiocpubank9rentalaccEyy($0, $5, (int_64)1)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [448]
	$5 = (int_64)0
	
.LOOP $label$33:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$34 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$36 }
	$1 = ($1 + [165])
	goto $label$35 
	
.LABEL $label$36
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$35
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$34
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$33 }
	CALL _ZN12eosiocpubank9rentalaccEyy($0, $5, (int_64)1)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [464]
	$5 = (int_64)0
	
.LOOP $label$37:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$38 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$1 = ($1 + [165])
	goto $label$39 
	
.LABEL $label$40
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$38
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$37 }
	CALL _ZN12eosiocpubank9rentalaccEyy($0, $5, (int_64)1)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [480]
	$5 = (int_64)0
	
.LOOP $label$41:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$42 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$44 }
	$1 = ($1 + [165])
	goto $label$43 
	
.LABEL $label$44
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$43
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$42
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$41 }
	CALL _ZN12eosiocpubank9rentalaccEyy($0, $5, (int_64)1)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [496]
	$5 = (int_64)0
	
.LOOP $label$45:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$46 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$1 = ($1 + [165])
	goto $label$47 
	
.LABEL $label$48
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$46
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$45 }
	CALL _ZN12eosiocpubank9rentalaccEyy($0, $5, (int_64)1)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [512]
	$5 = (int_64)0
	
.LOOP $label$49:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$50 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$1 = ($1 + [165])
	goto $label$51 
	
.LABEL $label$52
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$50
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$49 }
	CALL _ZN12eosiocpubank9rentalaccEyy($0, $5, (int_64)1)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [528]
	$5 = (int_64)0
	
.LOOP $label$53:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$54 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$1 = ($1 + [165])
	goto $label$55 
	
.LABEL $label$56
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$54
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$53 }
	CALL _ZN12eosiocpubank9rentalaccEyy($0, $5, (int_64)1)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [544]
	$5 = (int_64)0
	
.LOOP $label$57:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$58 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$60 }
	$1 = ($1 + [165])
	goto $label$59 
	
.LABEL $label$60
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$59
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$58
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$57 }
	CALL _ZN12eosiocpubank9rentalaccEyy($0, $5, (int_64)1)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [560]
	$5 = (int_64)0
	
.LOOP $label$61:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$62 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$64 }
	$1 = ($1 + [165])
	goto $label$63 
	
.LABEL $label$64
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$63
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$62
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$61 }
	CALL _ZN12eosiocpubank9rentalaccEyy($0, $5, (int_64)1)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [576]
	$5 = (int_64)0
	
.LOOP $label$65:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$66 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$68 }
	$1 = ($1 + [165])
	goto $label$67 
	
.LABEL $label$68
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$67
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$66
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$65 }
	CALL _ZN12eosiocpubank9rentalaccEyy($0, $5, (int_64)1)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [592]
	$5 = (int_64)0
	
.LOOP $label$69:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$70 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$72 }
	$1 = ($1 + [165])
	goto $label$71 
	
.LABEL $label$72
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$71
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$70
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$69 }
	CALL _ZN12eosiocpubank9rentalaccEyy($0, $5, (int_64)1)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [608]
	$5 = (int_64)0
	
.LOOP $label$73:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$74 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$1 = ($1 + [165])
	goto $label$75 
	
.LABEL $label$76
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$75
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$74
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$73 }
	CALL _ZN12eosiocpubank9rentalaccEyy($0, $5, (int_64)1)
	$4 = (int_64)0
	$3 = (int_64)59
	$2 = [624]
	$5 = (int_64)0
	
.LOOP $label$77:
	$6 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$78 }
	$1 = *($2)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$80 }
	$1 = ($1 + [165])
	goto $label$79 
	
.LABEL $label$80
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$79
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$78
	$2 = ($2 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$77 }
	CALL _ZN12eosiocpubank9rentalaccEyy($0, $5, (int_64)1)
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $26($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [240])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [240])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [240])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [240])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $24 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = (int_64)1397703940
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [144])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [208])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($2 + $1)
	CALL $25($6, $0)
	if ( ($1 <= [513]) ){ goto $label$8 }
	CALL free($2)
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [256])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $28($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [240])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $27($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $87($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $84($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $87($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $85($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $86($7)
	return (unreachable)
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = ($3 & [1])
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : $5 )
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($4 + $3)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $84($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : $5 ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $90($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $86($0)
}

void .FUNC _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_ (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	*([0] + [4]) = $14
	$11 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = ($2 + [1])
	$3 = ($1 + [1])
	$12 = *($1 + [4])
	$7 = *($1)
	$8 = ($2 + [4])
	
.LOOP $label$1:
	$9 = ($7 & [1])
	$12 = ( $12 ? uint_32(($7 & [254]) >> [1]) : $9 )
	if ( ($12 <= $11) ){ goto $label$3 }
	$13 = $11
	$10 = ($7 & [1])
	$7 = *($2)
	$7 = ( *($8) ? uint_32($7 >> [1]) : $10 )
	if ( ($7 == 0) ){ goto $label$2 }
	$12 = ($5 + $11)
	$5 = ( *(($1 + [8])) ? $3 : $9 )
	$9 = ($5 + $12)
	$13 = ($9 - $12)
	if ( ((int_32)$13 < (int_32)$7) ){ goto $label$3 }
	$6 = ( *(($2 + [8])) ? $4 : $10 )
	$10 = *($6)
	
.LOOP $label$4:
	$13 = (($13 - $7) + [1])
	if ( ($13 == 0) ){ goto $label$3 }
	$13 = CALL memchr($12, $10, $13)
	if ( ($13 == 0) ){ goto $label$3 }
	if ( (CALL memcmp($13, $6, $7) == 0) ){ goto $label$5 }
	$12 = ($13 + [1])
	$13 = ($9 - $12)
	if ( ((int_32)$13 >= (int_32)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$13 == (int_32)$9) ){ goto $label$3 }
	$13 = ($13 - $5)
	if ( ((int_32)$13 != (int_32)[-1]) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = *($1)
	if ( ($7 & [1]) ){ goto $label$6 }
	$13 = uint_32($7 >> [1])
	goto $label$2 
	
.LABEL $label$6
	$13 = *(($1 + [4]))
	
.LABEL $label$2
	CALL $101($14, $1, $11, ($13 - $11), $1)
	$11 = *($14)
	if ( (( *($14 + [4]) ? uint_32($11 >> [1]) : ($11 & [1]) ) == 0) ){ goto $label$7 }
	$11 = ($0 + [4])
	$7 = *($11)
	if ( ((int_32)$7 == (int_32)*(($0 + [8]))) ){ goto $label$8 }
	CALL $100($7, $14)
	*($11) = (*($11) + [12])
	goto $label$7 
	
.LABEL $label$8
	CALL $76($0, $14)
	
.LABEL $label$7
	$11 = *($2)
	$9 = *($8)
	if ( ((*($14) & [1]) == 0) ){ goto $label$9 }
	CALL $85(*(($14 + [8])))
	
.LABEL $label$9
	$7 = *($1)
	$12 = *(($1 + [4]))
	$10 = ( $12 ? uint_32($7 >> [1]) : ($7 & [1]) )
	if ( ((uint_32)$13 >= (uint_32)$10) ){ goto $label$10 }
	$11 = (( $9 ? uint_32($11 >> [1]) : ($11 & [1]) ) + $13)
	if ( ($11 <= $10) ){ goto $label$1 }
	
.LABEL $label$10
	*([0] + [4]) = ($14 + [16])
}

int_32 .FUNC __toread (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $100(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $100(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $85(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $85(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [240])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [240])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [240])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [240])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $26(*($1), ($0 + [32]))
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $84([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [3088]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $101($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $87($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $66 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [944])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $77($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [944])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [736])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [784])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [848])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $85($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $85($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $60 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $84(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $99($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $85($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $85($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $84(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $99($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $85($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $85($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [912])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $84([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [240])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [240])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $63(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $85($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $101 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $84($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $84($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC strtol (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [144])
	*([0] + [4]) = $4
	*($4 + [4]) = $0
	*($4 + [44]) = $0
	*($4) = [0]
	*($4 + [76]) = [-1]
	*($4 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL __shlim($4, (int_64)0)
	$3 = CALL __intscan($4, $2, [1], (int_64)2147483648)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + (CASTING uint_32)(uint_64 ((int_64)(CASTING uint_64)(uint_32 (*($4 + [4]) - *(($4 + [8])))) + (int_64)*($4 + [120]))))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [144])
	return (CASTING uint_32)(uint_64 $3)
}

int_32 .FUNC __errno_location ()
{
	return [11680]
}

int_64 .FUNC __intscan (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$4 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$5:
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$7 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$6 
	
.LABEL $label$7
	$13 = CALL __shgetc($0)
	
.LABEL $label$6
	$10 = ($13 + [-9])
	if ( ((uint_32)$10 > (uint_32)[36]) ){ goto $label$3 }
	goto $label$5 
	
.LABEL $label$8
	$4 = ( [-1] ? [0] : ((int_32)$13 == (int_32)[45]) )
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$2 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$1 
	
.LABEL $label$4
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$3
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	$13 = CALL __shgetc($0)
	
.LABEL $label$1
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$20 }
	if ( ((int_32)$13 != (int_32)[48]) ){ goto $label$20 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$19 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$18 
	
.LABEL $label$20
	$1 = ( $1 ? [10] : $1 )
	if ( (*(($13 + [11697])) <= $1) ){ goto $label$17 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$21 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$21
	CALL __shlim($0, (int_64)0)
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$19
	$13 = CALL __shgetc($0)
	
.LABEL $label$18
	if ( ((int_32)($13 | [32]) != (int_32)[120]) ){ goto $label$22 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$16 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$15 
	
.LABEL $label$22
	if ( ($1 == 0) ){ goto $label$14 }
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$13 }
	$14 = (int_64)0
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$23 }
	$10 = [0]
	$8 = ($0 + [104])
	$1 = ($0 + [4])
	
.LOOP $label$24:
	$10 = ((int_32)$10 * (int_32)[10])
	$13 = *($1)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$26 }
	*($1) = ($13 + [1])
	$13 = *($13)
	goto $label$25 
	
.LABEL $label$26
	$13 = CALL __shgetc($0)
	
.LABEL $label$25
	$10 = ($10 + $9)
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$27 }
	if ( ($10 <= [429496729]) ){ goto $label$24 }
	
.LABEL $label$27
	$14 = (CASTING uint_64)(uint_32 $10)
	
.LABEL $label$23
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$11 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$28:
	$1 = [10]
	$5 = (CASTING int_64)(int_32 $10)
	$12 = ((int_64)$14 * (int_64)10)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$30 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$29 
	
.LABEL $label$30
	$13 = CALL __shgetc($0)
	
.LABEL $label$29
	$14 = ((int_64)$12 + (int_64)$5)
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$31 }
	if ( (uint_64)($14 <= (int_64)1844674407370955162) ){ goto $label$28 }
	
.LABEL $label$31
	if ( ((uint_32)$10 <= (uint_32)[9]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	$13 = CALL __shgetc($0)
	
.LABEL $label$15
	$1 = [16]
	if ( (*(($13 + [11697])) <= [16]) ){ goto $label$13 }
	$13 = *(($0 + [104]))
	if ( ($13 == 0) ){ goto $label$32 }
	*(($10 = ($0 + [4]))) = (*($10) + [-1])
	
.LABEL $label$32
	if ( ($2 == 0) ){ goto $label$9 }
	$14 = (int_64)0
	if ( ($13 == 0) ){ goto $label$10 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	return (int_64)0
	
.LABEL $label$14
	$1 = [8]
	
.LABEL $label$13
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$37 }
	$10 = *(($13 + [11697]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$36 }
	$9 = [0]
	$2 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$38:
	$9 = ($10 + ((int_32)$9 * (int_32)$1))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($2)) ){ goto $label$40 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$39 
	
.LABEL $label$40
	$13 = CALL __shgetc($0)
	
.LABEL $label$39
	$10 = *(($13 + [11697]))
	if ( ((uint_32)$9 > (uint_32)[119304646]) ){ goto $label$41 }
	if ( ($10 <= $1) ){ goto $label$38 }
	
.LABEL $label$41
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$35 }
	goto $label$12 
	
.LABEL $label$37
	$2 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [11968]))
	$10 = *(($13 + [11697]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$34 }
	$9 = [0]
	$11 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$42:
	$9 = ($10 | ($9 << $2))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($11)) ){ goto $label$44 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$43 
	
.LABEL $label$44
	$13 = CALL __shgetc($0)
	
.LABEL $label$43
	$10 = *(($13 + [11697]))
	if ( ((uint_32)$9 > (uint_32)[134217727]) ){ goto $label$45 }
	if ( ($10 <= $1) ){ goto $label$42 }
	
.LABEL $label$45
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$33 }
	goto $label$12 
	
.LABEL $label$36
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$35
	$7 = (CASTING uint_64)(uint_32 $1)
	$6 = ((uint_64)(int_64)-1 / (uint_64)$7)
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$46:
	if ( ((uint_64)$14 > (uint_64)$6) ){ goto $label$12 }
	$5 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$12 = ((int_64)$14 * (int_64)$7)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$48 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$47 
	
.LABEL $label$48
	$13 = CALL __shgetc($0)
	
.LABEL $label$47
	$14 = ((int_64)$5 + (int_64)$12)
	$10 = *(($13 + [11697]))
	if ( ($10 <= $1) ){ goto $label$46 }
	goto $label$12 
	
.LABEL $label$34
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$33
	$5 = (CASTING uint_64)(uint_32 $2)
	$6 = (uint_64)(int_64)-1 >> (uint_64)$5
	if ( ((uint_64)$14 > (uint_64)$6)) ){ goto $label$12 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$49:
	$14 = ((int_64)$14 << (int_64)$5)
	$12 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$51 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$50 
	
.LABEL $label$51
	$13 = CALL __shgetc($0)
	
.LABEL $label$50
	$14 = ((int_64)$12 | (int_64)$14)
	$10 = *(($13 + [11697]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	if ( ((uint_64)$14 <= (uint_64)$6) ){ goto $label$49 }
	
.LABEL $label$12
	if ( ((uint_32)*(($13 + [11697])) >= (uint_32)$1) ){ goto $label$11 }
	$9 = ($0 + [104])
	$10 = ($0 + [4])
	
.LOOP $label$52:
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*($9)) ){ goto $label$54 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$53 
	
.LABEL $label$54
	$13 = CALL __shgetc($0)
	
.LABEL $label$53
	if ( (*(($13 + [11697])) <= $1) ){ goto $label$52 }
	*(CALL __errno_location()) = [34]
	$4 = ( $4 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$14 = $3
	
.LABEL $label$11
	if ( (*(($0 + [104])) == 0) ){ goto $label$55 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$55
	if ( (uint_64)($14 <= $3) ){ goto $label$56 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$57 }
	if ( $4 ){ goto $label$57 }
	*(CALL __errno_location()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$57
	if ( ((uint_64)$14 <= (uint_64)$3) ){ goto $label$56 }
	*(CALL __errno_location()) = [34]
	return $3
	
.LABEL $label$56
	$12 = (CASTING int_64)(int_32 $4)
	$14 = (int_64))(((int_64)$14 ^ (int_64)$12) - $12)
	
.LABEL $label$10
	return $14
	
.LABEL $label$9
	CALL __shlim($0, (int_64)0)
	$10
	return (int_64)0
}

void .FUNC __shlim (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$2 = *($0 + [4])
	$3 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($3 - $2))
	*($0 + [120]) = $4
	*($0 + [104]) = ( ( ($2 + (CASTING uint_32)(uint_64 $1)) ? $3 : ((int_64)$4 > (int_64)$1) ) ? $3 : ((int_64)$1 != (int_64)0) )
}

void .FUNC $89 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $84($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $85($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL strlen($1)
	$5 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$5) ){ goto $label$7 }
	if ( $4 ){ goto $label$6 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$5 
	
.LABEL $label$7
	if ( $4 ){ goto $label$4 }
	$5 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$3 = *($0 + [4])
	
.LABEL $label$5
	CALL $89($0, $5, ($2 - $5), $3, [0], $3, $2, $1)
	return $0
	
.LABEL $label$4
	$5 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($5, $1, $2)
	
.LABEL $label$2
	*(($5 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$8 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$8
	*($0 + [4]) = $2
	return $0
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $84(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $85($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $86 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $85 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $84 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [11628])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [11524])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [11332]
	$1 = (((int_32)$2 * (int_32)[12]) + [11332])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $82 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [11622]) == 0) ){ goto $label$2 }
	$7 = *([0] + [11624])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [11622]) = [1]
	$7 = ($7 << [16])
	*([0] + [11624]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [11624])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [11624]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [11622]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [11622]) = [1]
	$3 = ($3 << [16])
	*([0] + [11624]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [11624])
	
.LABEL $label$8
	*([0] + [11624]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $82($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [11536])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $81([3140], $0)
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = *($4 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-7297672924628103408, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $35($4, $5)
	*($9 + [12]) = [0]
	*($9 + [8]) = $4
	$6 = *(*(CALL $74(($9 + [8])) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [2912])
	*($1) = *(($4 + [16]))
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	$4 = *($3 + [12])
	*($1 + [32]) = *($4)
	*(($1 + [40])) = *(($4 + [8]))
	*($1 + [24]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($1 + [28]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + *(*($3 + [16])))
	$4 = $10
	$3 = ($4 + [-48])
	*([0] + [4]) = $3
	*($9 + [12]) = $3
	*($9 + [8]) = $3
	*($9 + [16]) = $4
	CALL $75(($9 + [8]), $1)
	$6 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-7297672924628103408, *(*($0 + [8])), $6, $3, [48])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$6 = *(($2 + [8]))
	$7 = *(*(($0 + [8])))
	$8 = *($1)
	*($9 + [24]) = *(($1 + [8]))
	*($1 + [56]) = CALL db_idx64_store($6, (int_64)-7297672924628103408, $7, $8, ($9 + [24]))
	*([0] + [4]) = ($9 + [32])
}

void .FUNC $73 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $84(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $99($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $84([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $28(($8 + [28]), [8])
	$2 = *($8 + [28])
	CALL eosio_assert(((int_32)(*($2) - $2) > (int_32)[7]), [320])
	CALL memcpy($2, $4, [8])
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $85($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $85($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $85($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), ($0 + [40]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	*($4 + [15]) = *($0 + [48])
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [320])
	CALL memcpy(*($3 + [4]), ($4 + [15]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	*([0] + [4]) = ($4 + [16])
}

int_64 .FUNC _ZN12eosiocpubank9getrentalEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [64])
	*([0] + [4]) = $6
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	$2 = (int_64)0
	*($6 + [32]) = (int_64)0
	$3 = *($0)
	*($6 + [8]) = $3
	*($6 + [16]) = $3
	$5 = CALL db_lowerbound_i64($3, $3, (int_64)-4996863337917251584, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $59(($6 + [8]), $5)
	$1 = *($5 + [8])
	if ( ($1 == 0) ){ goto $label$4 }
	
.LOOP $label$5:
	if ( (((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) - $1) <= [86400]) ){ goto $label$2 }
	if ( ((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) - $1) >= (uint_32)[950401]) ){ goto $label$3 }
	CALL eosio_assert([1], [704])
	$5 = CALL db_next_i64(*($5 + [20]), ($6 + [48]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $59(($6 + [8]), $5)
	$1 = *($5 + [8])
	if ( $1 ){ goto $label$5 }
	
.LABEL $label$4
	$2 = *($0)
	CALL eosio_assert([1], [1296])
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)($6 + [8])), [1344])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$3()), [1392])
	$3 = *($5)
	*($5 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$3 == (int_64)*($5)), [1568])
	CALL eosio_assert([1], [320])
	CALL memcpy(($6 + [48]), $5, [8])
	CALL eosio_assert([1], [320])
	CALL memcpy((($6 + [48]) | [8]), ($5 + [8]), [4])
	CALL db_update_i64(*($5 + [20]), $2, ($6 + [48]), [12])
	$1 = ($6 + [24])
	if ( (uint_64)($3 <= *($1)) ){ goto $label$2 }
	*($1) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	goto $label$2 
	
.LABEL $label$3
	$2 = *($0)
	CALL eosio_assert([1], [1296])
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)($6 + [8])), [1344])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$3()), [1392])
	$3 = *($5)
	*($5 + [8]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$3 == (int_64)*($5)), [1568])
	CALL eosio_assert([1], [320])
	CALL memcpy(($6 + [48]), $5, [8])
	CALL eosio_assert([1], [320])
	CALL memcpy((($6 + [48]) | [8]), ($5 + [8]), [4])
	CALL db_update_i64(*($5 + [20]), $2, ($6 + [48]), [12])
	$1 = ($6 + [24])
	if ( (uint_64)($3 <= *($1)) ){ goto $label$2 }
	*($1) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$2 = *($5)
	
.LABEL $label$1
	$0 = *($6 + [32])
	if ( ($0 == 0) ){ goto $label$6 }
	$4 = ($6 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($5 + [-24])
	$1 = *($5)
	*($5) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $85($1)
	
.LABEL $label$10
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$9 }
	$5 = *(($6 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $0
	
.LABEL $label$7
	*($4) = $0
	CALL $85($5)
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [64])
	return $2
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$2 = ((int_32)(*($0 + [4]) - $6) / (int_32)[12])
	$4 = ($2 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[12])
	if ( ((uint_32)$6 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($6 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $84(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $99($0)
	
.LABEL $label$1
	$6 = ($4 + ((int_32)$2 * (int_32)[12]))
	CALL $100($6, $1)
	$2 = ($4 + ((int_32)$5 * (int_32)[12]))
	$3 = ($6 + [12])
	$5 = *($0)
	$4 = *(($0 + [4]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	$1 = ([0] - $5)
	$5 = ($4 + [-12])
	
.LOOP $label$7:
	*(($6 + [-12])) = *($5)
	$4 = ($5 + [8])
	*(($6 + [-4])) = *($4)
	*($5) = [0]
	*(($5 + [4])) = [0]
	*($4) = [0]
	$6 = ($6 + [-12])
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $5
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$8 }
	$6 = ([0] - $4)
	$5 = ($5 + [-12])
	
.LOOP $label$9:
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL $85(*(($5 + [8])))
	
.LABEL $label$10
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $6) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $85($4)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	$9 = $10
	*([0] + [4]) = $10
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [912])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($7)
	CALL db_get_i64($1, $3, $7)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($10 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $7)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $84([32])) + [8]) = (int_64)1397703940
	*($5) = (int_64)0
	CALL eosio_assert([1], [144])
	$10 = ($5 + [8])
	$8 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [208])
	*($5 + [16]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [240])
	CALL memcpy($5, $3, [8])
	CALL eosio_assert(((int_32)($7 & [-8]) != (int_32)[8]), [240])
	CALL memcpy($10, ($3 + [8]), [8])
	*($5 + [20]) = $1
	*($9 + [24]) = $5
	$8 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($9 + [16]) = $8)
	$7 = *($5 + [20])
	*($9 + [12]) = $7
	$1 = ($0 + [28])
	$6 = *($1)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($6 + [8]) = $8
	*($6 + [16]) = $7
	*($9 + [24]) = [0]
	*($6) = $5
	*($1) = ($6 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $78($2, ($9 + [24]), ($9 + [16]), ($9 + [12]))
	
.LABEL $label$12
	$6 = *($9 + [24])
	*($9 + [24]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $85($6)
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [32])
	return $5
}

int_32 .FUNC $74 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [52]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3040])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-7297672924628103408)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2976])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2976])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $35(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $39 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $84(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $99($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $85($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $85($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((int_32)(*($3 + [8]) - $1) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), ($0 + [40]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [736])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [784])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [848])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $85($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $85($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
	$7 = *(($1 + [56]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7297672924628103408, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $78 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $84(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $99($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $85($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $85($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC _Z10startsWithNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES5_ (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$2 }
	$6 = uint_32($3 >> [1])
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	$5 = *($0 + [8])
	
.LABEL $label$1
	$0 = [1]
	$2 = ($3 & [1])
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : $2 )
	if ( ($3 == 0) ){ goto $label$3 }
	$4 = ($5 + $6)
	$0 = $4
	if ( ((int_32)$6 < (int_32)$3) ){ goto $label$4 }
	$2 = ( *($1 + [8]) ? ($1 + [1]) : $2 )
	$1 = *($2)
	$0 = $5
	
.LOOP $label$6:
	$6 = (($6 - $3) + [1])
	if ( ($6 == 0) ){ goto $label$5 }
	$0 = CALL memchr($0, $1, $6)
	if ( ($0 == 0) ){ goto $label$5 }
	if ( (CALL memcmp($0, $2, $3) == 0) ){ goto $label$4 }
	$0 = ($0 + [1])
	$6 = ($4 - $0)
	if ( ((int_32)$6 >= (int_32)$3) ){ goto $label$6 }
	
.LABEL $label$5
	$0 = $4
	
.LABEL $label$4
	$0 = (((int_32)$0 == (int_32)$5) & ((int_32)$0 != (int_32)$4))
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [320])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [320])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [320])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $34(*($1), ($0 + [32]))
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $28($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [320])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [320])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $32(CALL $31($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [320])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [320])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [320])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}